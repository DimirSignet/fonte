{
  "origin": "codeshovel",
  "repositoryName": "Lang-26b",
  "repositoryPath": "/tmp/Lang-26b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FastDateFormat.java",
  "functionName": "parseToken",
  "functionId": "parseToken___pattern-String__indexRef-int[]",
  "sourceFilePath": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
  "functionStartLine": 707,
  "functionEndLine": 757,
  "numCommitsSeen": 50,
  "timeTaken": 3226,
  "changeHistory": [
    "b1686009b5494119575d43525b0829162ab79853",
    "586080851f6bca4d7aa84a7d307203ad8222407e",
    "cc8b82be95ec747d73f2d1ceb7d11bfb83574eff",
    "c66659d62dbf69d4c1ccc5c9c50938273436c1b3",
    "9839566cf0eb6d299a61d6354522d6f65ab83af3",
    "87ea5b31fffed5eec72593130df81e49b0401bf2",
    "d3015ae73bfbf0ee970199cd6a1e073fbfd9c7ef",
    "e794af9688ae2dee664864be0d128df9a88509ba"
  ],
  "changeHistoryShort": {
    "b1686009b5494119575d43525b0829162ab79853": "Yfilerename",
    "586080851f6bca4d7aa84a7d307203ad8222407e": "Yfilerename",
    "cc8b82be95ec747d73f2d1ceb7d11bfb83574eff": "Ybodychange",
    "c66659d62dbf69d4c1ccc5c9c50938273436c1b3": "Ydocchange",
    "9839566cf0eb6d299a61d6354522d6f65ab83af3": "Ymodifierchange",
    "87ea5b31fffed5eec72593130df81e49b0401bf2": "Ymultichange(Ydocchange,Yformatchange)",
    "d3015ae73bfbf0ee970199cd6a1e073fbfd9c7ef": "Yformatchange",
    "e794af9688ae2dee664864be0d128df9a88509ba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1686009b5494119575d43525b0829162ab79853": {
      "type": "Yfilerename",
      "commitMessage": "Move main source to src/main/java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@895322 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/2/10, 6:11 PM",
      "commitName": "b1686009b5494119575d43525b0829162ab79853",
      "commitAuthor": "Paul C. Benedict Jr",
      "commitDateOld": "1/2/10, 6:09 PM",
      "commitNameOld": "1f725a97e73edd27301e889408832b34a3d69e63",
      "commitAuthorOld": "Paul C. Benedict Jr",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected String parseToken(String pattern, int[] indexRef) {\n    StringBuilder buf \u003d new StringBuilder();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
      "functionStartLine": 707,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "newPath": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java"
      }
    },
    "586080851f6bca4d7aa84a7d307203ad8222407e": {
      "type": "Yfilerename",
      "commitMessage": "Changing directory name from lang to lang3. Build will fail (probably) until Java code is changed in subsequent commit. LANG-563\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@889202 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/09, 3:33 AM",
      "commitName": "586080851f6bca4d7aa84a7d307203ad8222407e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/10/09, 3:31 AM",
      "commitNameOld": "da479d635f66c1f82a1f858591cfb1b9941457ae",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected String parseToken(String pattern, int[] indexRef) {\n    StringBuilder buf \u003d new StringBuilder();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang3/time/FastDateFormat.java",
      "functionStartLine": 707,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "newPath": "src/java/org/apache/commons/lang3/time/FastDateFormat.java"
      }
    },
    "cc8b82be95ec747d73f2d1ceb7d11bfb83574eff": {
      "type": "Ybodychange",
      "commitMessage": "LANG-541 - Switched StringBuffer to StringBuilder when only used internally\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@828910 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/22/09, 6:46 PM",
      "commitName": "cc8b82be95ec747d73f2d1ceb7d11bfb83574eff",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "3/15/09, 8:35 PM",
      "commitNameOld": "b044272b6584ab5a6ac5a15b5baac0d585557db4",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 220.92,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "actualSource": "protected String parseToken(String pattern, int[] indexRef) {\n    StringBuilder buf \u003d new StringBuilder();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
      "functionStartLine": 707,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
      "diff": "@@ -1,39 +1,39 @@\n protected String parseToken(String pattern, int[] indexRef) {\n-    StringBuffer buf \u003d new StringBuffer();\n+    StringBuilder buf \u003d new StringBuilder();\n     int i \u003d indexRef[0];\n     int length \u003d pattern.length();\n     char c \u003d pattern.charAt(i);\n     if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n         buf.append(c);\n         while (i + 1 \u003c length) {\n             char peek \u003d pattern.charAt(i + 1);\n             if (peek \u003d\u003d c) {\n                 buf.append(c);\n                 i++;\n             } else {\n                 break;\n             }\n         }\n     } else {\n         buf.append(\u0027\\\u0027\u0027);\n         boolean inLiteral \u003d false;\n         for (; i \u003c length; i++) {\n             c \u003d pattern.charAt(i);\n             if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                 if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                     i++;\n                     buf.append(c);\n                 } else {\n                     inLiteral \u003d !inLiteral;\n                 }\n             } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                 i--;\n                 break;\n             } else {\n                 buf.append(c);\n             }\n         }\n     }\n     indexRef[0] \u003d i;\n     return buf.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c66659d62dbf69d4c1ccc5c9c50938273436c1b3": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc fixes. Shouldn\u0027t have been anything other than javadoc changes in this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137416 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/14/03, 3:25 PM",
      "commitName": "c66659d62dbf69d4c1ccc5c9c50938273436c1b3",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/12/03, 1:26 AM",
      "commitNameOld": "ebadc9d7d2cc78511ba6d9d50b4e3ba4f6d78f0b",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.58,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
      "functionStartLine": 589,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Performs the parsing of tokens.\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
        "newValue": "\u003cp\u003ePerforms the parsing of tokens.\u003c/p\u003e\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n"
      }
    },
    "9839566cf0eb6d299a61d6354522d6f65ab83af3": {
      "type": "Ymodifierchange",
      "commitMessage": "Rework time package in preparation for 2.0 release\nDateUtils split to DateFormatUtils and DurationFormatUtils\nCalendarUtils renamed to DateUtils\nStopWatch time format method moved to DurationFormatUtils\nTests updated and pass\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137361 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/8/03, 4:14 PM",
      "commitName": "9839566cf0eb6d299a61d6354522d6f65ab83af3",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/21/03, 4:39 PM",
      "commitNameOld": "87ea5b31fffed5eec72593130df81e49b0401bf2",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "protected String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
      "functionStartLine": 539,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "Performs the parsing of tokens.\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
      "diff": "@@ -1,39 +1,39 @@\n-private static String parseToken(String pattern, int[] indexRef) {\n+protected String parseToken(String pattern, int[] indexRef) {\n     StringBuffer buf \u003d new StringBuffer();\n     int i \u003d indexRef[0];\n     int length \u003d pattern.length();\n     char c \u003d pattern.charAt(i);\n     if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n         buf.append(c);\n         while (i + 1 \u003c length) {\n             char peek \u003d pattern.charAt(i + 1);\n             if (peek \u003d\u003d c) {\n                 buf.append(c);\n                 i++;\n             } else {\n                 break;\n             }\n         }\n     } else {\n         buf.append(\u0027\\\u0027\u0027);\n         boolean inLiteral \u003d false;\n         for (; i \u003c length; i++) {\n             c \u003d pattern.charAt(i);\n             if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                 if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                     i++;\n                     buf.append(c);\n                 } else {\n                     inLiteral \u003d !inLiteral;\n                 }\n             } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                 i--;\n                 break;\n             } else {\n                 buf.append(c);\n             }\n         }\n     }\n     indexRef[0] \u003d i;\n     return buf.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[protected]"
      }
    },
    "87ea5b31fffed5eec72593130df81e49b0401bf2": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Update class and add javadoc ready for release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137326 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/21/03, 4:39 PM",
      "commitName": "87ea5b31fffed5eec72593130df81e49b0401bf2",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Update class and add javadoc ready for release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/21/03, 4:39 PM",
          "commitName": "87ea5b31fffed5eec72593130df81e49b0401bf2",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/4/03, 2:19 PM",
          "commitNameOld": "b54f848cb94c43a317c67cfe0c67ff83a1af2693",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 106.06,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "actualSource": "private static String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
          "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
          "functionStartLine": 477,
          "functionName": "parseToken",
          "functionAnnotation": "",
          "functionDoc": "Performs the parsing of tokens.\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Performs the parsing of tokens.\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Update class and add javadoc ready for release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/21/03, 4:39 PM",
          "commitName": "87ea5b31fffed5eec72593130df81e49b0401bf2",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/4/03, 2:19 PM",
          "commitNameOld": "b54f848cb94c43a317c67cfe0c67ff83a1af2693",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 106.06,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "actualSource": "private static String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
          "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
          "functionStartLine": 477,
          "functionName": "parseToken",
          "functionAnnotation": "",
          "functionDoc": "Performs the parsing of tokens.\n\n@param pattern the pattern\n@param indexRef index references\n@return parsed token\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "d3015ae73bfbf0ee970199cd6a1e073fbfd9c7ef": {
      "type": "Yformatchange",
      "commitMessage": "Reformatted [dos2unix]. A newline was introduced after the licence so that cvs\nwould allow the commit.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137223 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/7/03, 1:21 PM",
      "commitName": "d3015ae73bfbf0ee970199cd6a1e073fbfd9c7ef",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "1/7/03, 11:55 AM",
      "commitNameOld": "e794af9688ae2dee664864be0d128df9a88509ba",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
      "functionStartLine": 499,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "e794af9688ae2dee664864be0d128df9a88509ba": {
      "type": "Yintroduced",
      "commitMessage": "A thread-safe, faster version of java.text\u0027s DateFormat. While JODA contains\nbetter, this version is religion-free.\n\nPermission given by Brian S O\u0027Neill:\nhttp://archives.apache.org/eyebrowse/ReadMsg?listName\u003dcommons-dev@jakarta.apache.org\u0026msgNo\u003d20612\n\nSubmitted by:\tSean Schofield\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137221 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/7/03, 11:55 AM",
      "commitName": "e794af9688ae2dee664864be0d128df9a88509ba",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,39 @@\n+private static String parseToken(String pattern, int[] indexRef) {\n+    StringBuffer buf \u003d new StringBuffer();\n+    int i \u003d indexRef[0];\n+    int length \u003d pattern.length();\n+    char c \u003d pattern.charAt(i);\n+    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n+        buf.append(c);\n+        while (i + 1 \u003c length) {\n+            char peek \u003d pattern.charAt(i + 1);\n+            if (peek \u003d\u003d c) {\n+                buf.append(c);\n+                i++;\n+            } else {\n+                break;\n+            }\n+        }\n+    } else {\n+        buf.append(\u0027\\\u0027\u0027);\n+        boolean inLiteral \u003d false;\n+        for (; i \u003c length; i++) {\n+            c \u003d pattern.charAt(i);\n+            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n+                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n+                    i++;\n+                    buf.append(c);\n+                } else {\n+                    inLiteral \u003d !inLiteral;\n+                }\n+            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n+                i--;\n+                break;\n+            } else {\n+                buf.append(c);\n+            }\n+        }\n+    }\n+    indexRef[0] \u003d i;\n+    return buf.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static String parseToken(String pattern, int[] indexRef) {\n    StringBuffer buf \u003d new StringBuffer();\n    int i \u003d indexRef[0];\n    int length \u003d pattern.length();\n    char c \u003d pattern.charAt(i);\n    if (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027) {\n        buf.append(c);\n        while (i + 1 \u003c length) {\n            char peek \u003d pattern.charAt(i + 1);\n            if (peek \u003d\u003d c) {\n                buf.append(c);\n                i++;\n            } else {\n                break;\n            }\n        }\n    } else {\n        buf.append(\u0027\\\u0027\u0027);\n        boolean inLiteral \u003d false;\n        for (; i \u003c length; i++) {\n            c \u003d pattern.charAt(i);\n            if (c \u003d\u003d \u0027\\\u0027\u0027) {\n                if (i + 1 \u003c length \u0026\u0026 pattern.charAt(i + 1) \u003d\u003d \u0027\\\u0027\u0027) {\n                    i++;\n                    buf.append(c);\n                } else {\n                    inLiteral \u003d !inLiteral;\n                }\n            } else if (!inLiteral \u0026\u0026 (c \u003e\u003d \u0027A\u0027 \u0026\u0026 c \u003c\u003d \u0027Z\u0027 || c \u003e\u003d \u0027a\u0027 \u0026\u0026 c \u003c\u003d \u0027z\u0027)) {\n                i--;\n                break;\n            } else {\n                buf.append(c);\n            }\n        }\n    }\n    indexRef[0] \u003d i;\n    return buf.toString();\n}",
      "path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
      "functionStartLine": 498,
      "functionName": "parseToken",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}