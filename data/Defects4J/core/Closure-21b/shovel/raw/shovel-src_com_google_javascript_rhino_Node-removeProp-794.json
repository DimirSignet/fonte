{
  "origin": "codeshovel",
  "repositoryName": "Closure-21b",
  "repositoryPath": "/tmp/Closure-21b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Node.java",
  "functionName": "removeProp",
  "functionId": "removeProp___item-PropListItem__propType-int",
  "sourceFilePath": "src/com/google/javascript/rhino/Node.java",
  "functionAnnotation": "",
  "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
  "functionStartLine": 794,
  "functionEndLine": 807,
  "numCommitsSeen": 95,
  "timeTaken": 6537,
  "changeHistory": [
    "04a90977565decd8c6482cd655372e2b0b720a84",
    "e42c68a66f01e27f89518741ae1842e91d01510e",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5",
    "43859717972907dd1ecebd8dca6e05036386e28b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "04a90977565decd8c6482cd655372e2b0b720a84": "Ybodychange",
    "e42c68a66f01e27f89518741ae1842e91d01510e": "Ybodychange",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
    "43859717972907dd1ecebd8dca6e05036386e28b": "Yformatchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "04a90977565decd8c6482cd655372e2b0b720a84": {
      "type": "Ybodychange",
      "commitMessage": "\nfix a subtle bug i introduced in the last proplist cl\n\nR\u003djohnlenz\nDELTA\u003d60  (53 added, 3 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2404\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1207 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/23/11, 5:17 PM",
      "commitName": "04a90977565decd8c6482cd655372e2b0b720a84",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "6/21/11, 12:21 PM",
      "commitNameOld": "e42c68a66f01e27f89518741ae1842e91d01510e",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 2.21,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.getType() \u003d\u003d propType) {\n        return item.getNext();\n    } else {\n        PropListItem result \u003d removeProp(item.getNext(), propType);\n        if (result !\u003d item.getNext()) {\n            return item.chain(result);\n        } else {\n            return item;\n        }\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 846,
      "functionName": "removeProp",
      "functionAnnotation": "",
      "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
      "diff": "@@ -1,15 +1,14 @@\n private PropListItem removeProp(PropListItem item, int propType) {\n     if (item \u003d\u003d null) {\n         return null;\n     } else if (item.getType() \u003d\u003d propType) {\n         return item.getNext();\n     } else {\n         PropListItem result \u003d removeProp(item.getNext(), propType);\n         if (result !\u003d item.getNext()) {\n-            item.setNext(result);\n-            return item;\n+            return item.chain(result);\n         } else {\n             return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e42c68a66f01e27f89518741ae1842e91d01510e": {
      "type": "Ybodychange",
      "commitMessage": "\nSlim down ast node annotation objects.\nThis is much less ambitious than the original CL proposed by\nJohn. In this CL, the props are mutable and there are only\ntwo concrete base classes.\n\nR\u003djohnlenz\nDELTA\u003d127  (80 added, 15 deleted, 32 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2368\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/21/11, 12:21 PM",
      "commitName": "e42c68a66f01e27f89518741ae1842e91d01510e",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/16/11, 10:47 AM",
      "commitNameOld": "7078f435a2b4b53660b5bc5339820390fb177e67",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 36.07,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.getType() \u003d\u003d propType) {\n        return item.getNext();\n    } else {\n        PropListItem result \u003d removeProp(item.getNext(), propType);\n        if (result !\u003d item.getNext()) {\n            item.setNext(result);\n            return item;\n        } else {\n            return item;\n        }\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 838,
      "functionName": "removeProp",
      "functionAnnotation": "",
      "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
      "diff": "@@ -1,14 +1,15 @@\n private PropListItem removeProp(PropListItem item, int propType) {\n     if (item \u003d\u003d null) {\n         return null;\n-    } else if (item.type \u003d\u003d propType) {\n-        return item.next;\n+    } else if (item.getType() \u003d\u003d propType) {\n+        return item.getNext();\n     } else {\n-        PropListItem result \u003d removeProp(item.next, propType);\n-        if (result !\u003d item.next) {\n-            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n+        PropListItem result \u003d removeProp(item.getNext(), propType);\n+        if (result !\u003d item.getNext()) {\n+            item.setNext(result);\n+            return item;\n         } else {\n             return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange)",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 4:00 PM",
      "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/26/10, 8:26 AM",
          "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 27.32,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.type \u003d\u003d propType) {\n        return item.next;\n    } else {\n        PropListItem result \u003d removeProp(item.next, propType);\n        if (result !\u003d item.next) {\n            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n        } else {\n            return item;\n        }\n    }\n}",
          "path": "src/com/google/javascript/rhino/Node.java",
          "functionStartLine": 766,
          "functionName": "removeProp",
          "functionAnnotation": "",
          "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
          "diff": "@@ -1,18 +1,14 @@\n-public void removeProp(int propType) {\n-    PropListItem x \u003d propListHead;\n-    if (x !\u003d null) {\n-        PropListItem prev \u003d null;\n-        while (x.type !\u003d propType) {\n-            prev \u003d x;\n-            x \u003d x.next;\n-            if (x \u003d\u003d null) {\n-                return;\n-            }\n-        }\n-        if (prev \u003d\u003d null) {\n-            propListHead \u003d x.next;\n+private PropListItem removeProp(PropListItem item, int propType) {\n+    if (item \u003d\u003d null) {\n+        return null;\n+    } else if (item.type \u003d\u003d propType) {\n+        return item.next;\n+    } else {\n+        PropListItem result \u003d removeProp(item.next, propType);\n+        if (result !\u003d item.next) {\n+            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n         } else {\n-            prev.next \u003d x.next;\n+            return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[propType-int]",
            "newValue": "[item-PropListItem, propType-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/26/10, 8:26 AM",
          "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 27.32,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.type \u003d\u003d propType) {\n        return item.next;\n    } else {\n        PropListItem result \u003d removeProp(item.next, propType);\n        if (result !\u003d item.next) {\n            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n        } else {\n            return item;\n        }\n    }\n}",
          "path": "src/com/google/javascript/rhino/Node.java",
          "functionStartLine": 766,
          "functionName": "removeProp",
          "functionAnnotation": "",
          "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
          "diff": "@@ -1,18 +1,14 @@\n-public void removeProp(int propType) {\n-    PropListItem x \u003d propListHead;\n-    if (x !\u003d null) {\n-        PropListItem prev \u003d null;\n-        while (x.type !\u003d propType) {\n-            prev \u003d x;\n-            x \u003d x.next;\n-            if (x \u003d\u003d null) {\n-                return;\n-            }\n-        }\n-        if (prev \u003d\u003d null) {\n-            propListHead \u003d x.next;\n+private PropListItem removeProp(PropListItem item, int propType) {\n+    if (item \u003d\u003d null) {\n+        return null;\n+    } else if (item.type \u003d\u003d propType) {\n+        return item.next;\n+    } else {\n+        PropListItem result \u003d removeProp(item.next, propType);\n+        if (result !\u003d item.next) {\n+            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n         } else {\n-            prev.next \u003d x.next;\n+            return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "PropListItem"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/26/10, 8:26 AM",
          "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 27.32,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.type \u003d\u003d propType) {\n        return item.next;\n    } else {\n        PropListItem result \u003d removeProp(item.next, propType);\n        if (result !\u003d item.next) {\n            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n        } else {\n            return item;\n        }\n    }\n}",
          "path": "src/com/google/javascript/rhino/Node.java",
          "functionStartLine": 766,
          "functionName": "removeProp",
          "functionAnnotation": "",
          "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
          "diff": "@@ -1,18 +1,14 @@\n-public void removeProp(int propType) {\n-    PropListItem x \u003d propListHead;\n-    if (x !\u003d null) {\n-        PropListItem prev \u003d null;\n-        while (x.type !\u003d propType) {\n-            prev \u003d x;\n-            x \u003d x.next;\n-            if (x \u003d\u003d null) {\n-                return;\n-            }\n-        }\n-        if (prev \u003d\u003d null) {\n-            propListHead \u003d x.next;\n+private PropListItem removeProp(PropListItem item, int propType) {\n+    if (item \u003d\u003d null) {\n+        return null;\n+    } else if (item.type \u003d\u003d propType) {\n+        return item.next;\n+    } else {\n+        PropListItem result \u003d removeProp(item.next, propType);\n+        if (result !\u003d item.next) {\n+            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n         } else {\n-            prev.next \u003d x.next;\n+            return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/26/10, 8:26 AM",
          "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 27.32,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.type \u003d\u003d propType) {\n        return item.next;\n    } else {\n        PropListItem result \u003d removeProp(item.next, propType);\n        if (result !\u003d item.next) {\n            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n        } else {\n            return item;\n        }\n    }\n}",
          "path": "src/com/google/javascript/rhino/Node.java",
          "functionStartLine": 766,
          "functionName": "removeProp",
          "functionAnnotation": "",
          "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
          "diff": "@@ -1,18 +1,14 @@\n-public void removeProp(int propType) {\n-    PropListItem x \u003d propListHead;\n-    if (x !\u003d null) {\n-        PropListItem prev \u003d null;\n-        while (x.type !\u003d propType) {\n-            prev \u003d x;\n-            x \u003d x.next;\n-            if (x \u003d\u003d null) {\n-                return;\n-            }\n-        }\n-        if (prev \u003d\u003d null) {\n-            propListHead \u003d x.next;\n+private PropListItem removeProp(PropListItem item, int propType) {\n+    if (item \u003d\u003d null) {\n+        return null;\n+    } else if (item.type \u003d\u003d propType) {\n+        return item.next;\n+    } else {\n+        PropListItem result \u003d removeProp(item.next, propType);\n+        if (result !\u003d item.next) {\n+            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n         } else {\n-            prev.next \u003d x.next;\n+            return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/26/10, 8:26 AM",
          "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 27.32,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "private PropListItem removeProp(PropListItem item, int propType) {\n    if (item \u003d\u003d null) {\n        return null;\n    } else if (item.type \u003d\u003d propType) {\n        return item.next;\n    } else {\n        PropListItem result \u003d removeProp(item.next, propType);\n        if (result !\u003d item.next) {\n            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n        } else {\n            return item;\n        }\n    }\n}",
          "path": "src/com/google/javascript/rhino/Node.java",
          "functionStartLine": 766,
          "functionName": "removeProp",
          "functionAnnotation": "",
          "functionDoc": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n",
          "diff": "@@ -1,18 +1,14 @@\n-public void removeProp(int propType) {\n-    PropListItem x \u003d propListHead;\n-    if (x !\u003d null) {\n-        PropListItem prev \u003d null;\n-        while (x.type !\u003d propType) {\n-            prev \u003d x;\n-            x \u003d x.next;\n-            if (x \u003d\u003d null) {\n-                return;\n-            }\n-        }\n-        if (prev \u003d\u003d null) {\n-            propListHead \u003d x.next;\n+private PropListItem removeProp(PropListItem item, int propType) {\n+    if (item \u003d\u003d null) {\n+        return null;\n+    } else if (item.type \u003d\u003d propType) {\n+        return item.next;\n+    } else {\n+        PropListItem result \u003d removeProp(item.next, propType);\n+        if (result !\u003d item.next) {\n+            return new PropListItem(item.type, item.intValue, item.objectValue, result);\n         } else {\n-            prev.next \u003d x.next;\n+            return item;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "\n@param item The item to inspect\n@param propType The property to look for\n@return The replacement list if the property was removed, or\n  \u0027item\u0027 otherwise.\n"
          }
        }
      ]
    },
    "43859717972907dd1ecebd8dca6e05036386e28b": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/04/14 by john\n\n        Stop creating specialized Node types for FUNCTION and SCRIPT as the added functionality isn\u0027t used anywhere.\n\n        Also correct some formatting issue with Node (as it won\u0027t need to be merged with anything else anymore).\n\n        R\u003dsteve,robert\n        DELTA\u003d3969  (1913 added, 1925 deleted, 131 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source information in MinimizeExitPoints.\n\n        R\u003drobert\n        DELTA\u003d10  (5 added, 2 deleted, 3 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information.\n\n        R\u003dantonio\n        DELTA\u003d17  (11 added, 0 deleted, 6 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information through FoldConstants.\n\n        R\u003drobert\n        DELTA\u003d42  (22 added, 0 deleted, 20 changed)\n\nChange on 2010/04/14 by nick\n\n        lock down function type construction\n\n        R\u003djohn\n        DELTA\u003d111  (83 added, 9 deleted, 19 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source info in CollapseProperties.\n\n        R\u003dnick\n        DELTA\u003d17  (8 added, 3 deleted, 6 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dmbevwz\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@184 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 4:53 PM",
      "commitName": "43859717972907dd1ecebd8dca6e05036386e28b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/13/10, 2:39 PM",
      "commitNameOld": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void removeProp(int propType) {\n    PropListItem x \u003d propListHead;\n    if (x !\u003d null) {\n        PropListItem prev \u003d null;\n        while (x.type !\u003d propType) {\n            prev \u003d x;\n            x \u003d x.next;\n            if (x \u003d\u003d null) {\n                return;\n            }\n        }\n        if (prev \u003d\u003d null) {\n            propListHead \u003d x.next;\n        } else {\n            prev.next \u003d x.next;\n        }\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 742,
      "functionName": "removeProp",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+public void removeProp(int propType) {\n+    PropListItem x \u003d propListHead;\n+    if (x !\u003d null) {\n+        PropListItem prev \u003d null;\n+        while (x.type !\u003d propType) {\n+            prev \u003d x;\n+            x \u003d x.next;\n+            if (x \u003d\u003d null) {\n+                return;\n+            }\n+        }\n+        if (prev \u003d\u003d null) {\n+            propListHead \u003d x.next;\n+        } else {\n+            prev.next \u003d x.next;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void removeProp(int propType) {\n    PropListItem x \u003d propListHead;\n    if (x !\u003d null) {\n        PropListItem prev \u003d null;\n        while (x.type !\u003d propType) {\n            prev \u003d x;\n            x \u003d x.next;\n            if (x \u003d\u003d null) {\n                return;\n            }\n        }\n        if (prev \u003d\u003d null) {\n            propListHead \u003d x.next;\n        } else {\n            prev.next \u003d x.next;\n        }\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 731,
      "functionName": "removeProp",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}