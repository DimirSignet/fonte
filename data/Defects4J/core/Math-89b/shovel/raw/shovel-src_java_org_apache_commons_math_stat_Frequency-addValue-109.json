{
  "origin": "codeshovel",
  "repositoryName": "Math-89b",
  "repositoryPath": "/tmp/Math-89b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Frequency.java",
  "functionName": "addValue",
  "functionId": "addValue___v-Object",
  "sourceFilePath": "src/java/org/apache/commons/math/stat/Frequency.java",
  "functionAnnotation": "@Deprecated",
  "functionDoc": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable with previous entries\n@throws ClassCastException if \u003ccode\u003ev\u003c/code\u003e is not Comparable\n@deprecated use {@link #addValue(Comparable)} instead\n",
  "functionStartLine": 109,
  "functionEndLine": 111,
  "numCommitsSeen": 55,
  "timeTaken": 1270,
  "changeHistory": [
    "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
    "6b108c03e70b8d0388093de157dbf61fa4d4f5a2",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
    "8edfb37f9fb817877e3266f9495e83c4010bfde9",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
    "206201617aae648e12f63d4ab8aa9751157e7e63",
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "0c84b28c3542f3340f7ec0dffc34c60dff66604e": "Ymultichange(Ybodychange,Yannotationchange,Ydocchange)",
    "6b108c03e70b8d0388093de157dbf61fa4d4f5a2": "Ydocchange",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": "Ybodychange",
    "8edfb37f9fb817877e3266f9495e83c4010bfde9": "Ybodychange",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": "Ymultichange(Ybodychange,Ydocchange)",
    "206201617aae648e12f63d4ab8aa9751157e7e63": "Ydocchange",
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7": "Yformatchange",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": "Ymultichange(Yparameterchange,Ybodychange)",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c84b28c3542f3340f7ec0dffc34c60dff66604e": {
      "type": "Ymultichange(Ybodychange,Yannotationchange,Ydocchange)",
      "commitMessage": "MATH-259 - check for Comparable when adding values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@765996 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/17/09, 6:34 AM",
      "commitName": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
      "commitAuthor": "Sebastian Bazley",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-259 - check for Comparable when adding values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@765996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/17/09, 6:34 AM",
          "commitName": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "4/17/09, 6:07 AM",
          "commitNameOld": "43336b08c6c27d55c1c6e8c1b6330cb44a29044e",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Deprecated\npublic void addValue(Object v) {\n    addValue((Comparable\u003c?\u003e) v);\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 109,
          "functionName": "addValue",
          "functionAnnotation": "@Deprecated",
          "functionDoc": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable with previous entries\n@throws ClassCastException if \u003ccode\u003ev\u003c/code\u003e is not Comparable\n@deprecated use {@link #addValue(Comparable)} instead\n",
          "diff": "@@ -1,16 +1,4 @@\n+@Deprecated\n public void addValue(Object v) {\n-    Object obj \u003d v;\n-    if (v instanceof Integer) {\n-        obj \u003d Long.valueOf(((Integer) v).longValue());\n-    }\n-    try {\n-        Long count \u003d (Long) freqTable.get(obj);\n-        if (count \u003d\u003d null) {\n-            freqTable.put(obj, Long.valueOf(1));\n-        } else {\n-            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n-        }\n-    } catch (ClassCastException ex) {\n-        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n-    }\n+    addValue((Comparable\u003c?\u003e) v);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "MATH-259 - check for Comparable when adding values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@765996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/17/09, 6:34 AM",
          "commitName": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "4/17/09, 6:07 AM",
          "commitNameOld": "43336b08c6c27d55c1c6e8c1b6330cb44a29044e",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Deprecated\npublic void addValue(Object v) {\n    addValue((Comparable\u003c?\u003e) v);\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 109,
          "functionName": "addValue",
          "functionAnnotation": "@Deprecated",
          "functionDoc": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable with previous entries\n@throws ClassCastException if \u003ccode\u003ev\u003c/code\u003e is not Comparable\n@deprecated use {@link #addValue(Comparable)} instead\n",
          "diff": "@@ -1,16 +1,4 @@\n+@Deprecated\n public void addValue(Object v) {\n-    Object obj \u003d v;\n-    if (v instanceof Integer) {\n-        obj \u003d Long.valueOf(((Integer) v).longValue());\n-    }\n-    try {\n-        Long count \u003d (Long) freqTable.get(obj);\n-        if (count \u003d\u003d null) {\n-            freqTable.put(obj, Long.valueOf(1));\n-        } else {\n-            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n-        }\n-    } catch (ClassCastException ex) {\n-        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n-    }\n+    addValue((Comparable\u003c?\u003e) v);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Deprecated"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-259 - check for Comparable when adding values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@765996 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/17/09, 6:34 AM",
          "commitName": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
          "commitAuthor": "Sebastian Bazley",
          "commitDateOld": "4/17/09, 6:07 AM",
          "commitNameOld": "43336b08c6c27d55c1c6e8c1b6330cb44a29044e",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "@Deprecated\npublic void addValue(Object v) {\n    addValue((Comparable\u003c?\u003e) v);\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 109,
          "functionName": "addValue",
          "functionAnnotation": "@Deprecated",
          "functionDoc": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable with previous entries\n@throws ClassCastException if \u003ccode\u003ev\u003c/code\u003e is not Comparable\n@deprecated use {@link #addValue(Comparable)} instead\n",
          "diff": "@@ -1,16 +1,4 @@\n+@Deprecated\n public void addValue(Object v) {\n-    Object obj \u003d v;\n-    if (v instanceof Integer) {\n-        obj \u003d Long.valueOf(((Integer) v).longValue());\n-    }\n-    try {\n-        Long count \u003d (Long) freqTable.get(obj);\n-        if (count \u003d\u003d null) {\n-            freqTable.put(obj, Long.valueOf(1));\n-        } else {\n-            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n-        }\n-    } catch (ClassCastException ex) {\n-        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n-    }\n+    addValue((Comparable\u003c?\u003e) v);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
            "newValue": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable with previous entries\n@throws ClassCastException if \u003ccode\u003ev\u003c/code\u003e is not Comparable\n@deprecated use {@link #addValue(Comparable)} instead\n"
          }
        }
      ]
    },
    "6b108c03e70b8d0388093de157dbf61fa4d4f5a2": {
      "type": "Ydocchange",
      "commitMessage": "Clarified javadoc, added tests. JIRA: MATH-258\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@764316 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/09, 12:33 PM",
      "commitName": "6b108c03e70b8d0388093de157dbf61fa4d4f5a2",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "4/5/09, 7:20 AM",
      "commitNameOld": "9c8d2c79c1ef565337599849cd066ff63b8d5816",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 7.22,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "public void addValue(Object v) {\n    Object obj \u003d v;\n    if (v instanceof Integer) {\n        obj \u003d Long.valueOf(((Integer) v).longValue());\n    }\n    try {\n        Long count \u003d (Long) freqTable.get(obj);\n        if (count \u003d\u003d null) {\n            freqTable.put(obj, Long.valueOf(1));\n        } else {\n            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n        }\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 106,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
        "newValue": "Adds 1 to the frequency count for v.\n\u003cp\u003e\nIf other objects have already been added to this Frequency, v must\nbe comparable to those that have already been added.\n\u003c/p\u003e\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n"
      }
    },
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": {
      "type": "Ybodychange",
      "commitMessage": "replaced inefficient use of constructors for Integer, Long, Float and Double\nby the recommended static valueOf methods that cache results\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@666292 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/08, 12:32 PM",
      "commitName": "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/2/08, 9:54 PM",
      "commitNameOld": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 128.57,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "actualSource": "public void addValue(Object v) {\n    Object obj \u003d v;\n    if (v instanceof Integer) {\n        obj \u003d Long.valueOf(((Integer) v).longValue());\n    }\n    try {\n        Long count \u003d (Long) freqTable.get(obj);\n        if (count \u003d\u003d null) {\n            freqTable.put(obj, Long.valueOf(1));\n        } else {\n            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n        }\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 96,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
      "diff": "@@ -1,16 +1,16 @@\n public void addValue(Object v) {\n     Object obj \u003d v;\n     if (v instanceof Integer) {\n-        obj \u003d new Long(((Integer) v).longValue());\n+        obj \u003d Long.valueOf(((Integer) v).longValue());\n     }\n     try {\n         Long count \u003d (Long) freqTable.get(obj);\n         if (count \u003d\u003d null) {\n-            freqTable.put(obj, new Long(1));\n+            freqTable.put(obj, Long.valueOf(1));\n         } else {\n-            freqTable.put(obj, new Long(count.longValue() + 1));\n+            freqTable.put(obj, Long.valueOf(count.longValue() + 1));\n         }\n     } catch (ClassCastException ex) {\n         throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8edfb37f9fb817877e3266f9495e83c4010bfde9": {
      "type": "Ybodychange",
      "commitMessage": "Modified addValue(Object) to convert Integers to Longs, completing (hopefully ;-) fix of problem with integral type conversions reported to commons-dev by Jon Langlois.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/20/04, 8:02 PM",
      "commitName": "8edfb37f9fb817877e3266f9495e83c4010bfde9",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "9/19/04, 3:47 PM",
      "commitNameOld": "849284f1db2aa7c1620897db0ec50b1b38bd9684",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 1.18,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public void addValue(Object v) {\n    Object obj \u003d v;\n    if (v instanceof Integer) {\n        obj \u003d new Long(((Integer) v).longValue());\n    }\n    try {\n        Long count \u003d (Long) freqTable.get(obj);\n        if (count \u003d\u003d null) {\n            freqTable.put(obj, new Long(1));\n        } else {\n            freqTable.put(obj, new Long(count.longValue() + 1));\n        }\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 95,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
      "diff": "@@ -1,12 +1,16 @@\n public void addValue(Object v) {\n+    Object obj \u003d v;\n+    if (v instanceof Integer) {\n+        obj \u003d new Long(((Integer) v).longValue());\n+    }\n     try {\n-        Long count \u003d (Long) freqTable.get(v);\n+        Long count \u003d (Long) freqTable.get(obj);\n         if (count \u003d\u003d null) {\n-            freqTable.put(v, new Long(1));\n+            freqTable.put(obj, new Long(1));\n         } else {\n-            freqTable.put(v, new Long(count.longValue() + 1));\n+            freqTable.put(obj, new Long(count.longValue() + 1));\n         }\n     } catch (ClassCastException ex) {\n         throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Changed implementation to use TreeMap directly, eliminating [collections] depenency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141328 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/20/04, 9:53 AM",
      "commitName": "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Changed implementation to use TreeMap directly, eliminating [collections] depenency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141328 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/20/04, 9:53 AM",
          "commitName": "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "6/1/04, 5:24 PM",
          "commitNameOld": "94d130188d16bd3a1ca2560bd372bdcf48999172",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 18.69,
          "commitsBetweenForRepo": 58,
          "commitsBetweenForFile": 1,
          "actualSource": "public void addValue(Object v) {\n    try {\n        Long count \u003d (Long) freqTable.get(v);\n        if (count \u003d\u003d null) {\n            freqTable.put(v, new Long(1));\n        } else {\n            freqTable.put(v, new Long(count.longValue() + 1));\n        }\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 95,
          "functionName": "addValue",
          "functionAnnotation": "",
          "functionDoc": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
          "diff": "@@ -1,7 +1,12 @@\n public void addValue(Object v) {\n     try {\n-        freqTable.add(v);\n+        Long count \u003d (Long) freqTable.get(v);\n+        if (count \u003d\u003d null) {\n+            freqTable.put(v, new Long(1));\n+        } else {\n+            freqTable.put(v, new Long(count.longValue() + 1));\n+        }\n     } catch (ClassCastException ex) {\n         throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Changed implementation to use TreeMap directly, eliminating [collections] depenency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141328 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/20/04, 9:53 AM",
          "commitName": "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "6/1/04, 5:24 PM",
          "commitNameOld": "94d130188d16bd3a1ca2560bd372bdcf48999172",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 18.69,
          "commitsBetweenForRepo": 58,
          "commitsBetweenForFile": 1,
          "actualSource": "public void addValue(Object v) {\n    try {\n        Long count \u003d (Long) freqTable.get(v);\n        if (count \u003d\u003d null) {\n            freqTable.put(v, new Long(1));\n        } else {\n            freqTable.put(v, new Long(count.longValue() + 1));\n        }\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 95,
          "functionName": "addValue",
          "functionAnnotation": "",
          "functionDoc": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
          "diff": "@@ -1,7 +1,12 @@\n public void addValue(Object v) {\n     try {\n-        freqTable.add(v);\n+        Long count \u003d (Long) freqTable.get(v);\n+        if (count \u003d\u003d null) {\n+            freqTable.put(v, new Long(1));\n+        } else {\n+            freqTable.put(v, new Long(count.longValue() + 1));\n+        }\n     } catch (ClassCastException ex) {\n         throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
            "newValue": "Adds 1 to the frequency count for v.\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n"
          }
        }
      ]
    },
    "206201617aae648e12f63d4ab8aa9751157e7e63": {
      "type": "Ydocchange",
      "commitMessage": "Documented some runtime exceptions.\nPR: 29013\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141231 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/19/04, 7:16 AM",
      "commitName": "206201617aae648e12f63d4ab8aa9751157e7e63",
      "commitAuthor": "Brent Worden",
      "commitDateOld": "4/24/04, 11:51 AM",
      "commitNameOld": "3012cb0b0a8e76f7053c27a751a3008c4a3c1753",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 24.81,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "actualSource": "public void addValue(Object v) {\n    try {\n        freqTable.add(v);\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 86,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n",
        "newValue": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n@throws IllegalArgumentException if \u003ccode\u003ev\u003c/code\u003e is not comparable.\n"
      }
    },
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7": {
      "type": "Yformatchange",
      "commitMessage": "Fixed error in getCumFreq (use custom comparator when one is supplied). Removed tabs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141118 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/6/04, 4:54 PM",
      "commitName": "b1872b6749d527f17cdb58abc66d58f3fcad71d7",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/22/04, 2:01 PM",
      "commitNameOld": "5cb403cbbcb292481c680728298cb87c46663914",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 13.12,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public void addValue(Object v) {\n    try {\n        freqTable.add(v);\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 85,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/8/04, 11:51 AM",
      "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/8/04, 11:51 AM",
          "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "1/28/04, 4:49 PM",
          "commitNameOld": "ea117cb81769e5d205cec3c07b29fda343bd7868",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public void addValue(Object v) {\n    try {\n        freqTable.add(v);\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 122,
          "functionName": "addValue",
          "functionAnnotation": "",
          "functionDoc": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n",
          "diff": "@@ -1,3 +1,7 @@\n-public void addValue(String v) {\n-    freqTable.add(v);\n+public void addValue(Object v) {\n+    try {\n+        freqTable.add(v);\n+    } catch (ClassCastException ex) {\n+        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[v-String]",
            "newValue": "[v-Object]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/8/04, 11:51 AM",
          "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "1/28/04, 4:49 PM",
          "commitNameOld": "ea117cb81769e5d205cec3c07b29fda343bd7868",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public void addValue(Object v) {\n    try {\n        freqTable.add(v);\n    } catch (ClassCastException ex) {\n        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n    }\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 122,
          "functionName": "addValue",
          "functionAnnotation": "",
          "functionDoc": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n",
          "diff": "@@ -1,3 +1,7 @@\n-public void addValue(String v) {\n-    freqTable.add(v);\n+public void addValue(Object v) {\n+    try {\n+        freqTable.add(v);\n+    } catch (ClassCastException ex) {\n+        throw new IllegalArgumentException(\"Value not comparable to existing values.\");\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,3 @@\n+public void addValue(String v) {\n+    freqTable.add(v);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void addValue(String v) {\n    freqTable.add(v);\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 114,
      "functionName": "addValue",
      "functionAnnotation": "",
      "functionDoc": "Adds 1 to the frequency count for v\n\n@param v the value to add.\n"
    }
  }
}