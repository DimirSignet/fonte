{
  "origin": "codeshovel",
  "repositoryName": "Math-42b",
  "repositoryPath": "/tmp/Math-42b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "getSolution",
  "functionId": "getSolution",
  "sourceFilePath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Get the current solution.\n\n@return current solution\n",
  "functionStartLine": 396,
  "functionEndLine": 422,
  "numCommitsSeen": 30,
  "timeTaken": 1904,
  "changeHistory": [
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
    "bd345d954b85ef8eb3867c5044f933e34df0c124",
    "be4cd671b1bfe2df0df6a8f7484e041c90123677",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
    "f36be8e8b7371fb8814456b6c095866aa802de78",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "73b92de177959d4ce401891d1e28b574431d6361",
    "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
    "96b1276efd88c536f3c918396f7460e557b9ee65"
  ],
  "changeHistoryShort": {
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": "Ybodychange",
    "bd345d954b85ef8eb3867c5044f933e34df0c124": "Ybodychange",
    "be4cd671b1bfe2df0df6a8f7484e041c90123677": "Ybodychange",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": "Ybodychange",
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": "Yformatchange",
    "f36be8e8b7371fb8814456b6c095866aa802de78": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "73b92de177959d4ce401891d1e28b574431d6361": "Ydocchange",
    "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9": "Ybodychange",
    "96b1276efd88c536f3c918396f7460e557b9ee65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": {
      "type": "Ybodychange",
      "commitMessage": "Fixed two errors in simplex solver when entries are close together or\nwhen variables are not restricted to non-negative.\n\nJira: MATH-434\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1090656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/11, 12:20 PM",
      "commitName": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/13/10, 5:26 PM",
      "commitNameOld": "3729fba951e714135102e8c3c3aa866ac8b75cf9",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 391.75,
      "commitsBetweenForRepo": 639,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    int negativeVarColumn \u003d columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n        if (colIndex \u003c 0) {\n            coefficients[i] \u003d 0;\n            continue;\n        }\n        Integer basicRow \u003d getBasicRow(colIndex);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0 - (restrictToNonNegative ? 0 : mostNegative);\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 397,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "@@ -1,22 +1,22 @@\n protected RealPointValuePair getSolution() {\n     int negativeVarColumn \u003d columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n     Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n     double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n     Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n     double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n         int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n         if (colIndex \u003c 0) {\n             coefficients[i] \u003d 0;\n             continue;\n         }\n         Integer basicRow \u003d getBasicRow(colIndex);\n         if (basicRows.contains(basicRow)) {\n-            coefficients[i] \u003d 0;\n+            coefficients[i] \u003d 0 - (restrictToNonNegative ? 0 : mostNegative);\n         } else {\n             basicRows.add(basicRow);\n             coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n         }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bd345d954b85ef8eb3867c5044f933e34df0c124": {
      "type": "Ybodychange",
      "commitMessage": "replaced duplicated strings by a single static string in many classes\nthis will later allow enabling the MultipleStringLiterals rule in checkstyle\n(there are many other duplicated strings, so this cannot be enabled yet, I\u0027ll\ndo another pass on it later on)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@885278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/29/09, 1:47 PM",
      "commitName": "bd345d954b85ef8eb3867c5044f933e34df0c124",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/25/09, 11:36 AM",
      "commitNameOld": "4812d094678a68b01a68d459523fb79a5c2f3da6",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 65.13,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    int negativeVarColumn \u003d columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n        if (colIndex \u003c 0) {\n            coefficients[i] \u003d 0;\n            continue;\n        }\n        Integer basicRow \u003d getBasicRow(colIndex);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 368,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "@@ -1,22 +1,22 @@\n protected RealPointValuePair getSolution() {\n-    int negativeVarColumn \u003d columnLabels.indexOf(\"x-\");\n+    int negativeVarColumn \u003d columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n     Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n     double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n     Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n     double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n         int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n         if (colIndex \u003c 0) {\n             coefficients[i] \u003d 0;\n             continue;\n         }\n         Integer basicRow \u003d getBasicRow(colIndex);\n         if (basicRows.contains(basicRow)) {\n             coefficients[i] \u003d 0;\n         } else {\n             basicRows.add(basicRow);\n             coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n         }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "be4cd671b1bfe2df0df6a8f7484e041c90123677": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a OutOfBoundException in simplex solver when some constraints are tight\nJIRA: MATH-293\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@813301 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/10/09, 1:20 AM",
      "commitName": "be4cd671b1bfe2df0df6a8f7484e041c90123677",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/9/09, 1:48 AM",
      "commitNameOld": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    int negativeVarColumn \u003d columnLabels.indexOf(\"x-\");\n    Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n        if (colIndex \u003c 0) {\n            coefficients[i] \u003d 0;\n            continue;\n        }\n        Integer basicRow \u003d getBasicRow(colIndex);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 362,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "@@ -1,16 +1,22 @@\n protected RealPointValuePair getSolution() {\n-    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n-    Integer negativeVarBasicRow \u003d getBasicRow(getNegativeDecisionVariableOffset());\n+    int negativeVarColumn \u003d columnLabels.indexOf(\"x-\");\n+    Integer negativeVarBasicRow \u003d negativeVarColumn \u003e 0 ? getBasicRow(negativeVarColumn) : null;\n     double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n     Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n+    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n-        Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n+        int colIndex \u003d columnLabels.indexOf(\"x\" + i);\n+        if (colIndex \u003c 0) {\n+            coefficients[i] \u003d 0;\n+            continue;\n+        }\n+        Integer basicRow \u003d getBasicRow(colIndex);\n         if (basicRows.contains(basicRow)) {\n             coefficients[i] \u003d 0;\n         } else {\n             basicRows.add(basicRow);\n             coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n         }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": {
      "type": "Ybodychange",
      "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/9/09, 1:48 AM",
      "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/8/09, 1:40 AM",
      "commitNameOld": "71b31811964d5dc9387a53235e3f70616944de99",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer negativeVarBasicRow \u003d getBasicRow(getNegativeDecisionVariableOffset());\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 334,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "@@ -1,16 +1,16 @@\n protected RealPointValuePair getSolution() {\n     double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n-    Integer negativeVarBasicRow \u003d getBasicRowForSolution(getNegativeDecisionVariableOffset());\n+    Integer negativeVarBasicRow \u003d getBasicRow(getNegativeDecisionVariableOffset());\n     double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n     Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n-        Integer basicRow \u003d getBasicRowForSolution(getNumObjectiveFunctions() + i);\n+        Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n         if (basicRows.contains(basicRow)) {\n             coefficients[i] \u003d 0;\n         } else {\n             basicRows.add(basicRow);\n             coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n         }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": {
      "type": "Yformatchange",
      "commitMessage": "Removed trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811685 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/5/09, 10:36 AM",
      "commitName": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "9/1/09, 2:02 PM",
      "commitNameOld": "d6beaeaa9c53aa4e6ae128a856e68a9eeb1cadb8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 3.86,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer negativeVarBasicRow \u003d getBasicRowForSolution(getNegativeDecisionVariableOffset());\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        Integer basicRow \u003d getBasicRowForSolution(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 340,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f36be8e8b7371fb8814456b6c095866aa802de78": {
      "type": "Ybodychange",
      "commitMessage": "fixed an error leading the simplex solver to compute the right solution but return another one\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@806753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/21/09, 4:07 PM",
      "commitName": "f36be8e8b7371fb8814456b6c095866aa802de78",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:30 AM",
      "commitNameOld": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 20.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer negativeVarBasicRow \u003d getBasicRowForSolution(getNegativeDecisionVariableOffset());\n    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        Integer basicRow \u003d getBasicRowForSolution(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 339,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "@@ -1,16 +1,16 @@\n protected RealPointValuePair getSolution() {\n     double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n-    Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());\n-    double mostNegative \u003d basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset());\n+    Integer negativeVarBasicRow \u003d getBasicRowForSolution(getNegativeDecisionVariableOffset());\n+    double mostNegative \u003d negativeVarBasicRow \u003d\u003d null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n     Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n-        basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n+        Integer basicRow \u003d getBasicRowForSolution(getNumObjectiveFunctions() + i);\n         if (basicRows.contains(basicRow)) {\n             coefficients[i] \u003d 0;\n         } else {\n             basicRows.add(basicRow);\n             coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n         }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());\n    double mostNegative \u003d basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 320,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      }
    },
    "73b92de177959d4ce401891d1e28b574431d6361": {
      "type": "Ydocchange",
      "commitMessage": "Dropped reference to non-existent method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@797800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/25/09, 10:21 AM",
      "commitName": "73b92de177959d4ce401891d1e28b574431d6361",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/11/09, 1:54 AM",
      "commitNameOld": "dbae4b01341d9d72e52d1e07a15d5023deca3d92",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 44.35,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());\n    double mostNegative \u003d basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 320,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\n@return current solution\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Get the current solution.\n\u003cp\u003e\n{@link #solve} should be called first for this to be the optimal solution.\n\u003c/p\u003e\n\n@return current solution\n",
        "newValue": "Get the current solution.\n\n@return current solution\n"
      }
    },
    "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a problem when setting some variables (several variables were set instead of only one)\nJIRA: MATH-272\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@781135 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/2/09, 12:37 PM",
      "commitName": "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "6/2/09, 2:06 AM",
      "commitNameOld": "0832bf9bacfa9d8fc6cb3b9d0ee82756a7bca5ad",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.44,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());\n    double mostNegative \u003d basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset());\n    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRows.contains(basicRow)) {\n            coefficients[i] \u003d 0;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 324,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\u003cp\u003e\n{@link #solve} should be called first for this to be the optimal solution.\n\u003c/p\u003e\n\n@return current solution\n",
      "diff": "@@ -1,8 +1,16 @@\n protected RealPointValuePair getSolution() {\n     double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n-    double mostNegative \u003d getDecisionVariableValue(getOriginalNumDecisionVariables());\n+    Integer basicRow \u003d getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());\n+    double mostNegative \u003d basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset());\n+    Set\u003cInteger\u003e basicRows \u003d new HashSet\u003cInteger\u003e();\n     for (int i \u003d 0; i \u003c coefficients.length; i++) {\n-        coefficients[i] \u003d getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative);\n+        basicRow \u003d getBasicRow(getNumObjectiveFunctions() + i);\n+        if (basicRows.contains(basicRow)) {\n+            coefficients[i] \u003d 0;\n+        } else {\n+            basicRows.add(basicRow);\n+            coefficients[i] \u003d (basicRow \u003d\u003d null ? 0 : getEntry(basicRow, getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);\n+        }\n     }\n     return new RealPointValuePair(coefficients, f.getValue(coefficients));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "96b1276efd88c536f3c918396f7460e557b9ee65": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of Dantzig\u0027s simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/09, 4:25 PM",
      "commitName": "96b1276efd88c536f3c918396f7460e557b9ee65",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,8 @@\n+protected RealPointValuePair getSolution() {\n+    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n+    double mostNegative \u003d getDecisionVariableValue(getOriginalNumDecisionVariables());\n+    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n+        coefficients[i] \u003d getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative);\n+    }\n+    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected RealPointValuePair getSolution() {\n    double[] coefficients \u003d new double[getOriginalNumDecisionVariables()];\n    double mostNegative \u003d getDecisionVariableValue(getOriginalNumDecisionVariables());\n    for (int i \u003d 0; i \u003c coefficients.length; i++) {\n        coefficients[i] \u003d getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative);\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 311,
      "functionName": "getSolution",
      "functionAnnotation": "",
      "functionDoc": "Get the current solution.\n\u003cp\u003e\n{@link #solve} should be called first for this to be the optimal solution.\n\u003c/p\u003e\n\n@return current solution\n"
    }
  }
}