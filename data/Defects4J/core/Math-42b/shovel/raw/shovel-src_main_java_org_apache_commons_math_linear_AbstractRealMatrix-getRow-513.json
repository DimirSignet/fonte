{
  "origin": "codeshovel",
  "repositoryName": "Math-42b",
  "repositoryPath": "/tmp/Math-42b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractRealMatrix.java",
  "functionName": "getRow",
  "functionId": "getRow___row-int(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
  "functionAnnotation": "",
  "functionDoc": "@inheritDoc}\n",
  "functionStartLine": 513,
  "functionEndLine": 522,
  "numCommitsSeen": 107,
  "timeTaken": 5444,
  "changeHistory": [
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
    "a16f53810b9c9b8cb461674c8b1ef7c17102372e",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "e497d61c834d1ced0291fc431096b2c8a0546d0d",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3",
    "0e547fb3775b1cd9fd2b1c15882d34432c238913",
    "7b37de8d8ce8145f933537db67070dc91e19d86b",
    "479f7773075c136b43a9cf120704c77c0a4880ab",
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
    "07b7dcef8a14a83692e88980b751cb78021803cd",
    "adc70eb37887e7036fd8395f489c26175546af45",
    "d96ef142ea5815d99f8f732966f570fb88a154bf",
    "f182c916020a069b17900e3d2c37ebbc68c7439b",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa": "Ymultichange(Yexceptionschange,Yformatchange)",
    "a16f53810b9c9b8cb461674c8b1ef7c17102372e": "Yformatchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "e497d61c834d1ced0291fc431096b2c8a0546d0d": "Ybodychange",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": "Ymultichange(Ymovefromfile,Ybodychange,Yparametermetachange)",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": "Ybodychange",
    "0e547fb3775b1cd9fd2b1c15882d34432c238913": "Ydocchange",
    "7b37de8d8ce8145f933537db67070dc91e19d86b": "Ybodychange",
    "479f7773075c136b43a9cf120704c77c0a4880ab": "Ydocchange",
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f": "Ymultichange(Ybodychange,Ydocchange)",
    "07b7dcef8a14a83692e88980b751cb78021803cd": "Ydocchange",
    "adc70eb37887e7036fd8395f489c26175546af45": "Ydocchange",
    "d96ef142ea5815d99f8f732966f570fb88a154bf": "Yformatchange",
    "f182c916020a069b17900e3d2c37ebbc68c7439b": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa": {
      "type": "Ymultichange(Yexceptionschange,Yformatchange)",
      "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/27/10, 6:16 AM",
      "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/27/10, 6:16 AM",
          "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "9/24/10, 4:12 PM",
          "commitNameOld": "a16f53810b9c9b8cb461674c8b1ef7c17102372e",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 32.59,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(final int row) {\n    MatrixUtils.checkRowIndex(this, row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
          "functionStartLine": 464,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,9 +1,9 @@\n-public double[] getRow(final int row) throws MatrixIndexException {\n+public double[] getRow(final int row) {\n     MatrixUtils.checkRowIndex(this, row);\n     final int nCols \u003d getColumnDimension();\n     final double[] out \u003d new double[nCols];\n     for (int i \u003d 0; i \u003c nCols; ++i) {\n         out[i] \u003d getEntry(row, i);\n     }\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[MatrixIndexException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/27/10, 6:16 AM",
          "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "9/24/10, 4:12 PM",
          "commitNameOld": "a16f53810b9c9b8cb461674c8b1ef7c17102372e",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 32.59,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(final int row) {\n    MatrixUtils.checkRowIndex(this, row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
          "functionStartLine": 464,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,9 +1,9 @@\n-public double[] getRow(final int row) throws MatrixIndexException {\n+public double[] getRow(final int row) {\n     MatrixUtils.checkRowIndex(this, row);\n     final int nCols \u003d getColumnDimension();\n     final double[] out \u003d new double[nCols];\n     for (int i \u003d 0; i \u003c nCols; ++i) {\n         out[i] \u003d getEntry(row, i);\n     }\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a16f53810b9c9b8cb461674c8b1ef7c17102372e": {
      "type": "Yformatchange",
      "commitMessage": "Introduced \"MatrixDimensionMismatchException\" to replace \"InvalidMatrixException\"\nwhenever it was used to signal a row or column dimension mismatch.\n\"MessageFactory\": Fixed wrong order of appearance of general and specific messages.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1001107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/24/10, 4:12 PM",
      "commitName": "a16f53810b9c9b8cb461674c8b1ef7c17102372e",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "8/29/10, 3:04 PM",
      "commitNameOld": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 26.05,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    MatrixUtils.checkRowIndex(this, row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
      "path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 485,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    MatrixUtils.checkRowIndex(this, row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
      "path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 521,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "newPath": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java"
      }
    },
    "e497d61c834d1ced0291fc431096b2c8a0546d0d": {
      "type": "Ybodychange",
      "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/6/09, 2:43 AM",
      "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/5/09, 7:20 AM",
      "commitNameOld": "9c8d2c79c1ef565337599849cd066ff63b8d5816",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 30.81,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    MatrixUtils.checkRowIndex(this, row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 541,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,9 +1,9 @@\n public double[] getRow(final int row) throws MatrixIndexException {\n-    checkRowIndex(row);\n+    MatrixUtils.checkRowIndex(this, row);\n     final int nCols \u003d getColumnDimension();\n     final double[] out \u003d new double[nCols];\n     for (int i \u003d 0; i \u003c nCols; ++i) {\n         out[i] \u003d getEntry(row, i);\n     }\n     return out;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparametermetachange)",
      "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/7/08, 7:21 AM",
      "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/7/08, 6:39 AM",
          "commitNameOld": "8dfb5ce14aadc86299f134ee50a652c55738c72a",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    checkRowIndex(row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
          "functionStartLine": 362,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,9 @@\n-public double[] getRow(int row) throws MatrixIndexException {\n+public double[] getRow(final int row) throws MatrixIndexException {\n     checkRowIndex(row);\n-    final int ncols \u003d this.getColumnDimension();\n-    final double[] out \u003d new double[ncols];\n-    System.arraycopy(data[row], 0, out, 0, ncols);\n+    final int nCols \u003d getColumnDimension();\n+    final double[] out \u003d new double[nCols];\n+    for (int i \u003d 0; i \u003c nCols; ++i) {\n+        out[i] \u003d getEntry(row, i);\n+    }\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
            "newPath": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
            "oldMethodName": "getRow",
            "newMethodName": "getRow"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/7/08, 6:39 AM",
          "commitNameOld": "8dfb5ce14aadc86299f134ee50a652c55738c72a",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    checkRowIndex(row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
          "functionStartLine": 362,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,9 @@\n-public double[] getRow(int row) throws MatrixIndexException {\n+public double[] getRow(final int row) throws MatrixIndexException {\n     checkRowIndex(row);\n-    final int ncols \u003d this.getColumnDimension();\n-    final double[] out \u003d new double[ncols];\n-    System.arraycopy(data[row], 0, out, 0, ncols);\n+    final int nCols \u003d getColumnDimension();\n+    final double[] out \u003d new double[nCols];\n+    for (int i \u003d 0; i \u003c nCols; ++i) {\n+        out[i] \u003d getEntry(row, i);\n+    }\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/7/08, 6:39 AM",
          "commitNameOld": "8dfb5ce14aadc86299f134ee50a652c55738c72a",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(final int row) throws MatrixIndexException {\n    checkRowIndex(row);\n    final int nCols \u003d getColumnDimension();\n    final double[] out \u003d new double[nCols];\n    for (int i \u003d 0; i \u003c nCols; ++i) {\n        out[i] \u003d getEntry(row, i);\n    }\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
          "functionStartLine": 362,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,9 @@\n-public double[] getRow(int row) throws MatrixIndexException {\n+public double[] getRow(final int row) throws MatrixIndexException {\n     checkRowIndex(row);\n-    final int ncols \u003d this.getColumnDimension();\n-    final double[] out \u003d new double[ncols];\n-    System.arraycopy(data[row], 0, out, 0, ncols);\n+    final int nCols \u003d getColumnDimension();\n+    final double[] out \u003d new double[nCols];\n+    for (int i \u003d 0; i \u003c nCols; ++i) {\n+        out[i] \u003d getEntry(row, i);\n+    }\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[row-int]",
            "newValue": "[row-int(modifiers-final)]"
          }
        }
      ]
    },
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": {
      "type": "Ybodychange",
      "commitMessage": "improved error handling in linear package with finer grained exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@710168 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/3/08, 1:32 PM",
      "commitName": "2974de5bcae652a32b1d823f8965d66f56b82fd3",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/28/08, 8:55 AM",
      "commitNameOld": "0e547fb3775b1cd9fd2b1c15882d34432c238913",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 36.23,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    checkRowIndex(row);\n    final int ncols \u003d this.getColumnDimension();\n    final double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 542,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,9 +1,7 @@\n public double[] getRow(int row) throws MatrixIndexException {\n-    if (!isValidCoordinate(row, 0)) {\n-        throw new MatrixIndexException(\"illegal row argument\");\n-    }\n+    checkRowIndex(row);\n     final int ncols \u003d this.getColumnDimension();\n     final double[] out \u003d new double[ncols];\n     System.arraycopy(data[row], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e547fb3775b1cd9fd2b1c15882d34432c238913": {
      "type": "Ydocchange",
      "commitMessage": "Replaced internal LU-decomposition by the external class.\nDeprecated the direct call to these methods as users should\nreally be able to choose the type of solver they want.\nLU-decomposition is only one possibility among others like\nQR-decomposition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@699845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/28/08, 8:55 AM",
      "commitName": "0e547fb3775b1cd9fd2b1c15882d34432c238913",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/29/08, 9:17 AM",
      "commitNameOld": "231e2e584f0fa919f74485519f8b8faba5a3d58f",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 29.98,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 0)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    final int ncols \u003d this.getColumnDimension();\n    final double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 524,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\u003c/p\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
        "newValue": "@inheritDoc}\n"
      }
    },
    "7b37de8d8ce8145f933537db67070dc91e19d86b": {
      "type": "Ybodychange",
      "commitMessage": "Improved linear RealMatrixImpl and BigMatrixImpl performances.\nThe main changes are the following ones:\n - use directly the storage array when possible for\n   diadic operations (add, subtract, multiply), as\n   suggested by Phil, this avoids the cost of the\n   generic getEntry method\n - replaced custom indices checks by simple use of\n   the JVM checks and ArrayIndexOutOfBoundException\n - put row arrays reference in local variables to\n   avoid multiple checks in double loops\n - use final variables where possible\n - removed unneeded array copying\n - added a constructor to build a matrix from an\n   array without copying it where it makes sense\n\nThe speed gain is about 3X for multiplication. Performances\nfor this operation are now on par with Jama.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@662241 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/1/08, 9:22 AM",
      "commitName": "7b37de8d8ce8145f933537db67070dc91e19d86b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/24/08, 6:22 AM",
      "commitNameOld": "862e1b88bf4216eb1ed83504606ef4346dfc2cfa",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 38.13,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 0)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    final int ncols \u003d this.getColumnDimension();\n    final double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 613,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\u003c/p\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
      "diff": "@@ -1,9 +1,9 @@\n public double[] getRow(int row) throws MatrixIndexException {\n     if (!isValidCoordinate(row, 0)) {\n         throw new MatrixIndexException(\"illegal row argument\");\n     }\n-    int ncols \u003d this.getColumnDimension();\n-    double[] out \u003d new double[ncols];\n+    final int ncols \u003d this.getColumnDimension();\n+    final double[] out \u003d new double[ncols];\n     System.arraycopy(data[row], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "479f7773075c136b43a9cf120704c77c0a4880ab": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only.  Added missing \u003c/p\u003e\u0027s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@617953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/2/08, 9:54 PM",
      "commitName": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "1/20/08, 1:08 PM",
      "commitNameOld": "bc84c00b75adae089cba788aaec9bbbd8d9efcdb",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 0)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 474,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\u003c/p\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
        "newValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\u003c/p\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n"
      }
    },
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/4/04, 6:19 PM",
      "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/4/04, 6:19 PM",
          "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "9/1/04, 2:26 PM",
          "commitNameOld": "07b7dcef8a14a83692e88980b751cb78021803cd",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 0)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 321,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
          "diff": "@@ -1,9 +1,9 @@\n public double[] getRow(int row) throws MatrixIndexException {\n-    if (!isValidCoordinate(row, 1)) {\n+    if (!isValidCoordinate(row, 0)) {\n         throw new MatrixIndexException(\"illegal row argument\");\n     }\n     int ncols \u003d this.getColumnDimension();\n     double[] out \u003d new double[ncols];\n-    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n+    System.arraycopy(data[row], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/4/04, 6:19 PM",
          "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "9/1/04, 2:26 PM",
          "commitNameOld": "07b7dcef8a14a83692e88980b751cb78021803cd",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 0)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row], 0, out, 0, ncols);\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 321,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
          "diff": "@@ -1,9 +1,9 @@\n public double[] getRow(int row) throws MatrixIndexException {\n-    if (!isValidCoordinate(row, 1)) {\n+    if (!isValidCoordinate(row, 0)) {\n         throw new MatrixIndexException(\"illegal row argument\");\n     }\n     int ncols \u003d this.getColumnDimension();\n     double[] out \u003d new double[ncols];\n-    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n+    System.arraycopy(data[row], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 1.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c row \u003c\u003d rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
            "newValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 0.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c\u003d row \u003c rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n"
          }
        }
      ]
    },
    "07b7dcef8a14a83692e88980b751cb78021803cd": {
      "type": "Ydocchange",
      "commitMessage": "Made standard matrix entry addressing explicit in javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141440 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/1/04, 2:26 PM",
      "commitName": "07b7dcef8a14a83692e88980b751cb78021803cd",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "8/21/04, 6:42 PM",
      "commitNameOld": "e3aff05625c90f3d74c740183e9bf7a499b1ff3d",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 10.82,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 316,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 1.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c row \u003c\u003d rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater\n                             than the number of rows in this matrix\n",
        "newValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\u003cp\u003e\nRow indices start at 1.  A \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown\nunless \u003ccode\u003e0 \u003c row \u003c\u003d rowDimension.\u003c/code\u003e\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row index is not valid\n"
      }
    },
    "adc70eb37887e7036fd8395f489c26175546af45": {
      "type": "Ydocchange",
      "commitMessage": "Formatting only, Eliminated tabs and trailing spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141285 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/6/04, 8:26 PM",
      "commitName": "adc70eb37887e7036fd8395f489c26175546af45",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/5/04, 3:31 PM",
      "commitNameOld": "d96ef142ea5815d99f8f732966f570fb88a154bf",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 314,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater\n                             than the number of rows in this matrix\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n",
        "newValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater\n                             than the number of rows in this matrix\n"
      }
    },
    "d96ef142ea5815d99f8f732966f570fb88a154bf": {
      "type": "Yformatchange",
      "commitMessage": "Converted tabs to spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/04, 3:31 PM",
      "commitName": "d96ef142ea5815d99f8f732966f570fb88a154bf",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/5/04, 3:28 PM",
      "commitNameOld": "53b67deb0fe6aa6d275d6cd05fffda942fd8b69a",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 314,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f182c916020a069b17900e3d2c37ebbc68c7439b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/04, 12:15 PM",
      "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
      "commitAuthor": "Timothy O\u0027Brien",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 350,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n",
          "diff": "@@ -1,9 +1,9 @@\n-public double[] getRow(int row) throws IllegalArgumentException {\n-    if (row \u003e this.getRowDimension() || row \u003c 1) {\n-        throw new IllegalArgumentException(\"illegal row argument\");\n+public double[] getRow(int row) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, 1)) {\n+        throw new MatrixIndexException(\"illegal row argument\");\n     }\n     int ncols \u003d this.getColumnDimension();\n     double[] out \u003d new double[ncols];\n     System.arraycopy(data[row - 1], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalArgumentException]",
            "newValue": "[MatrixIndexException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 350,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n",
          "diff": "@@ -1,9 +1,9 @@\n-public double[] getRow(int row) throws IllegalArgumentException {\n-    if (row \u003e this.getRowDimension() || row \u003c 1) {\n-        throw new IllegalArgumentException(\"illegal row argument\");\n+public double[] getRow(int row) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, 1)) {\n+        throw new MatrixIndexException(\"illegal row argument\");\n     }\n     int ncols \u003d this.getColumnDimension();\n     double[] out \u003d new double[ncols];\n     System.arraycopy(data[row - 1], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] getRow(int row) throws MatrixIndexException {\n    if (!isValidCoordinate(row, 1)) {\n        throw new MatrixIndexException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 350,
          "functionName": "getRow",
          "functionAnnotation": "",
          "functionDoc": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n",
          "diff": "@@ -1,9 +1,9 @@\n-public double[] getRow(int row) throws IllegalArgumentException {\n-    if (row \u003e this.getRowDimension() || row \u003c 1) {\n-        throw new IllegalArgumentException(\"illegal row argument\");\n+public double[] getRow(int row) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, 1)) {\n+        throw new MatrixIndexException(\"illegal row argument\");\n     }\n     int ncols \u003d this.getColumnDimension();\n     double[] out \u003d new double[ncols];\n     System.arraycopy(data[row - 1], 0, out, 0, ncols);\n     return out;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@param row the row to be fetched\n@return array of entries in the row\n@throws IllegalArgumentException if row \u003e rowDimension or row \u003c 1\n",
            "newValue": "Returns the entries in row number \u003ccode\u003erow\u003c/code\u003e as an array.\n\n@param row the row to be fetched\n@return array of entries in the row\n@throws MatrixIndexException if the specified row is greater \n                             than the number of rows in this matrix\n"
          }
        }
      ]
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,9 @@\n+public double[] getRow(int row) throws IllegalArgumentException {\n+    if (row \u003e this.getRowDimension() || row \u003c 1) {\n+        throw new IllegalArgumentException(\"illegal row argument\");\n+    }\n+    int ncols \u003d this.getColumnDimension();\n+    double[] out \u003d new double[ncols];\n+    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n+    return out;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double[] getRow(int row) throws IllegalArgumentException {\n    if (row \u003e this.getRowDimension() || row \u003c 1) {\n        throw new IllegalArgumentException(\"illegal row argument\");\n    }\n    int ncols \u003d this.getColumnDimension();\n    double[] out \u003d new double[ncols];\n    System.arraycopy(data[row - 1], 0, out, 0, ncols);\n    return out;\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 351,
      "functionName": "getRow",
      "functionAnnotation": "",
      "functionDoc": "\n@param row the row to be fetched\n@return array of entries in the row\n@throws IllegalArgumentException if row \u003e rowDimension or row \u003c 1\n"
    }
  }
}