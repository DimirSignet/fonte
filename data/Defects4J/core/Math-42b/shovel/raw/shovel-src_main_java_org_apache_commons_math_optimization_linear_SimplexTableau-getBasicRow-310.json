{
  "origin": "codeshovel",
  "repositoryName": "Math-42b",
  "repositoryPath": "/tmp/Math-42b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "getBasicRow",
  "functionId": "getBasicRow___col-int(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
  "functionStartLine": 310,
  "functionEndLine": 321,
  "numCommitsSeen": 30,
  "timeTaken": 2021,
  "changeHistory": [
    "b59e97464fc8d910c06b90c06598d7176ce1924a",
    "573785a1cdd35971378c2f38c30d455897fe8a3b",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
    "71b31811964d5dc9387a53235e3f70616944de99",
    "f36be8e8b7371fb8814456b6c095866aa802de78",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "75f5c92aeb47e264c196a8c38a495adac89f493c",
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
    "96b1276efd88c536f3c918396f7460e557b9ee65"
  ],
  "changeHistoryShort": {
    "b59e97464fc8d910c06b90c06598d7176ce1924a": "Ybodychange",
    "573785a1cdd35971378c2f38c30d455897fe8a3b": "Ybodychange",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": "Ybodychange",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": "Ymultichange(Ymodifierchange,Ybodychange)",
    "71b31811964d5dc9387a53235e3f70616944de99": "Ymodifierchange",
    "f36be8e8b7371fb8814456b6c095866aa802de78": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "75f5c92aeb47e264c196a8c38a495adac89f493c": "Ybodychange",
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5": "Ybodychange",
    "96b1276efd88c536f3c918396f7460e557b9ee65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b59e97464fc8d910c06b90c06598d7176ce1924a": {
      "type": "Ybodychange",
      "commitMessage": "MATH-689\nMoved \"equals...\" and \"compareTo\" methods from \"MathUtils\" over to a new\n\"Precision\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1181282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11, 3:35 PM",
      "commitName": "b59e97464fc8d910c06b90c06598d7176ce1924a",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "9/8/11, 4:15 AM",
      "commitNameOld": "9d8f28a08be2525a0794f1f7b29e120180539c99",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 32.47,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "actualSource": "protected Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d 0; i \u003c getHeight(); i++) {\n        final double entry \u003d getEntry(i, col);\n        if (Precision.equals(entry, 1d, maxUlps) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!Precision.equals(entry, 0d, maxUlps)) {\n            return null;\n        }\n    }\n    return row;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 310,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,12 +1,12 @@\n protected Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d 0; i \u003c getHeight(); i++) {\n         final double entry \u003d getEntry(i, col);\n-        if (MathUtils.equals(entry, 1d, maxUlps) \u0026\u0026 (row \u003d\u003d null)) {\n+        if (Precision.equals(entry, 1d, maxUlps) \u0026\u0026 (row \u003d\u003d null)) {\n             row \u003d i;\n-        } else if (!MathUtils.equals(entry, 0d, maxUlps)) {\n+        } else if (!Precision.equals(entry, 0d, maxUlps)) {\n             return null;\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "573785a1cdd35971378c2f38c30d455897fe8a3b": {
      "type": "Ybodychange",
      "commitMessage": "replaced remaining getEpsilon by using ulps in double comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1091143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/11/11, 10:43 AM",
      "commitName": "573785a1cdd35971378c2f38c30d455897fe8a3b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/9/11, 12:20 PM",
      "commitNameOld": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d 0; i \u003c getHeight(); i++) {\n        final double entry \u003d getEntry(i, col);\n        if (MathUtils.equals(entry, 1d, maxUlps) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(entry, 0d, maxUlps)) {\n            return null;\n        }\n    }\n    return row;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 310,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,12 +1,12 @@\n protected Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d 0; i \u003c getHeight(); i++) {\n         final double entry \u003d getEntry(i, col);\n-        if (MathUtils.equals(entry, 1d, getEpsilon(entry)) \u0026\u0026 (row \u003d\u003d null)) {\n+        if (MathUtils.equals(entry, 1d, maxUlps) \u0026\u0026 (row \u003d\u003d null)) {\n             row \u003d i;\n-        } else if (!MathUtils.equals(entry, 0d, getEpsilon(entry))) {\n+        } else if (!MathUtils.equals(entry, 0d, maxUlps)) {\n             return null;\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": {
      "type": "Ybodychange",
      "commitMessage": "Fixed two errors in simplex solver when entries are close together or\nwhen variables are not restricted to non-negative.\n\nJira: MATH-434\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1090656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/11, 12:20 PM",
      "commitName": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/13/10, 5:26 PM",
      "commitNameOld": "3729fba951e714135102e8c3c3aa866ac8b75cf9",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 391.75,
      "commitsBetweenForRepo": 639,
      "commitsBetweenForFile": 1,
      "actualSource": "protected Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d 0; i \u003c getHeight(); i++) {\n        final double entry \u003d getEntry(i, col);\n        if (MathUtils.equals(entry, 1d, getEpsilon(entry)) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(entry, 0d, getEpsilon(entry))) {\n            return null;\n        }\n    }\n    return row;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 311,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,11 +1,12 @@\n protected Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d 0; i \u003c getHeight(); i++) {\n-        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n+        final double entry \u003d getEntry(i, col);\n+        if (MathUtils.equals(entry, 1d, getEpsilon(entry)) \u0026\u0026 (row \u003d\u003d null)) {\n             row \u003d i;\n-        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+        } else if (!MathUtils.equals(entry, 0d, getEpsilon(entry))) {\n             return null;\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/9/09, 1:48 AM",
      "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/9/09, 1:48 AM",
          "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "9/8/09, 1:40 AM",
          "commitNameOld": "71b31811964d5dc9387a53235e3f70616944de99",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d 0; i \u003c getHeight(); i++) {\n        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            return null;\n        }\n    }\n    return row;\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
          "functionStartLine": 255,
          "functionName": "getBasicRow",
          "functionAnnotation": "",
          "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
          "diff": "@@ -1,3 +1,11 @@\n-Integer getBasicRow(final int col) {\n-    return getBasicRow(col, true);\n+protected Integer getBasicRow(final int col) {\n+    Integer row \u003d null;\n+    for (int i \u003d 0; i \u003c getHeight(); i++) {\n+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n+            row \u003d i;\n+        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+            return null;\n+        }\n+    }\n+    return row;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/9/09, 1:48 AM",
          "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "9/8/09, 1:40 AM",
          "commitNameOld": "71b31811964d5dc9387a53235e3f70616944de99",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d 0; i \u003c getHeight(); i++) {\n        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            return null;\n        }\n    }\n    return row;\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
          "functionStartLine": 255,
          "functionName": "getBasicRow",
          "functionAnnotation": "",
          "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
          "diff": "@@ -1,3 +1,11 @@\n-Integer getBasicRow(final int col) {\n-    return getBasicRow(col, true);\n+protected Integer getBasicRow(final int col) {\n+    Integer row \u003d null;\n+    for (int i \u003d 0; i \u003c getHeight(); i++) {\n+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n+            row \u003d i;\n+        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+            return null;\n+        }\n+    }\n+    return row;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "71b31811964d5dc9387a53235e3f70616944de99": {
      "type": "Ymodifierchange",
      "commitMessage": "added Benjamin\u0027s patch from 2009-09-07\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812390 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/09, 1:40 AM",
      "commitName": "71b31811964d5dc9387a53235e3f70616944de99",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/6/09, 8:32 AM",
      "commitNameOld": "292e891aab4d737a83ebf786c02bf4003ae0442d",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 1.71,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "Integer getBasicRow(final int col) {\n    return getBasicRow(col, true);\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 267,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,3 +1,3 @@\n-private Integer getBasicRow(final int col) {\n+Integer getBasicRow(final int col) {\n     return getBasicRow(col, true);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "f36be8e8b7371fb8814456b6c095866aa802de78": {
      "type": "Ybodychange",
      "commitMessage": "fixed an error leading the simplex solver to compute the right solution but return another one\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@806753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/21/09, 4:07 PM",
      "commitName": "f36be8e8b7371fb8814456b6c095866aa802de78",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:30 AM",
      "commitNameOld": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 20.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "private Integer getBasicRow(final int col) {\n    return getBasicRow(col, true);\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 272,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,11 +1,3 @@\n private Integer getBasicRow(final int col) {\n-    Integer row \u003d null;\n-    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n-        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n-            row \u003d i;\n-        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-            return null;\n-        }\n-    }\n-    return row;\n+    return getBasicRow(col, true);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            return null;\n        }\n    }\n    return row;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 272,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      }
    },
    "75f5c92aeb47e264c196a8c38a495adac89f493c": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a wrong check for basic variables\nJIRA: MATH-273\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@781304 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/3/09, 2:06 AM",
      "commitName": "75f5c92aeb47e264c196a8c38a495adac89f493c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "6/2/09, 12:37 PM",
      "commitNameOld": "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n            row \u003d i;\n        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            return null;\n        }\n    }\n    return row;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 272,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,13 +1,11 @@\n private Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n-        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n-            if (row \u003d\u003d null) {\n-                row \u003d i;\n-            } else {\n-                return null;\n-            }\n+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n+            row \u003d i;\n+        } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+            return null;\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5": {
      "type": "Ybodychange",
      "commitMessage": "added a threshold for comparisons in Simplex solver\nJira: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@763412 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/8/09, 2:41 PM",
      "commitName": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/27/09, 12:56 AM",
      "commitNameOld": "b03d68547460332b861044db80ccd08edec361a1",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 12.57,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            if (row \u003d\u003d null) {\n                row \u003d i;\n            } else {\n                return null;\n            }\n        }\n    }\n    return row;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 266,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,13 +1,13 @@\n private Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n-        if (getEntry(i, col) !\u003d 0.0) {\n+        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n             if (row \u003d\u003d null) {\n                 row \u003d i;\n             } else {\n                 return null;\n             }\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "96b1276efd88c536f3c918396f7460e557b9ee65": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of Dantzig\u0027s simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/09, 4:25 PM",
      "commitName": "96b1276efd88c536f3c918396f7460e557b9ee65",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,13 @@\n+private Integer getBasicRow(final int col) {\n+    Integer row \u003d null;\n+    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n+        if (getEntry(i, col) !\u003d 0.0) {\n+            if (row \u003d\u003d null) {\n+                row \u003d i;\n+            } else {\n+                return null;\n+            }\n+        }\n+    }\n+    return row;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (getEntry(i, col) !\u003d 0.0) {\n            if (row \u003d\u003d null) {\n                row \u003d i;\n            } else {\n                return null;\n            }\n        }\n    }\n    return row;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 259,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n"
    }
  }
}