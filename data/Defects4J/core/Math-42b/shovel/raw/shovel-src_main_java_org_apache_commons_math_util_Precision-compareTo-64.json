{
  "origin": "codeshovel",
  "repositoryName": "Math-42b",
  "repositoryPath": "/tmp/Math-42b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Precision.java",
  "functionName": "compareTo",
  "functionId": "compareTo___x-double__y-double__eps-double",
  "sourceFilePath": "src/main/java/org/apache/commons/math/util/Precision.java",
  "functionAnnotation": "",
  "functionDoc": "Compares two numbers given some amount of allowed error.\n\n@param x the first number\n@param y the second number\n@param eps the amount of error to allow when checking for equality\n@return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double, double, double) equals(x, y, eps)}\u003c/li\u003e\n      \u003cli\u003e\u0026lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\n      \u003cli\u003e\u003e 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n",
  "functionStartLine": 64,
  "functionEndLine": 71,
  "numCommitsSeen": 150,
  "timeTaken": 8455,
  "changeHistory": [
    "b59e97464fc8d910c06b90c06598d7176ce1924a",
    "edf9205a6dc8c634985fa2f0e07a7ef598881fd9",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "95836d833482615c11d46e2e655f3eea06a641d7"
  ],
  "changeHistoryShort": {
    "b59e97464fc8d910c06b90c06598d7176ce1924a": "Ymovefromfile",
    "edf9205a6dc8c634985fa2f0e07a7ef598881fd9": "Yformatchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "95836d833482615c11d46e2e655f3eea06a641d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b59e97464fc8d910c06b90c06598d7176ce1924a": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-689\nMoved \"equals...\" and \"compareTo\" methods from \"MathUtils\" over to a new\n\"Precision\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1181282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11, 3:35 PM",
      "commitName": "b59e97464fc8d910c06b90c06598d7176ce1924a",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "10/10/11, 2:20 PM",
      "commitNameOld": "e24e9c1cf7e76ffb4d76c1ad541833a9b32ced5a",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int compareTo(double x, double y, double eps) {\n    if (equals(x, y, eps)) {\n        return 0;\n    } else if (x \u003c y) {\n        return -1;\n    }\n    return 1;\n}",
      "path": "src/main/java/org/apache/commons/math/util/Precision.java",
      "functionStartLine": 48,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "Compares two numbers given some amount of allowed error.\n\n@param x the first number\n@param y the second number\n@param eps the amount of error to allow when checking for equality\n@return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double, double, double) equals(x, y, eps)}\u003c/li\u003e\n      \u003cli\u003e\u0026lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\n      \u003cli\u003e\u003e 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/Precision.java",
        "oldMethodName": "compareTo",
        "newMethodName": "compareTo"
      }
    },
    "edf9205a6dc8c634985fa2f0e07a7ef598881fd9": {
      "type": "Yformatchange",
      "commitMessage": "Added a compareTo method to MathUtils that uses a number of ulps as a tolerance error, and works well on all numbers, including normals, subnormals, signed zeroes, infinities and NaNs\n\nJira: MATH-557\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1090820 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/10/11, 8:56 AM",
      "commitName": "edf9205a6dc8c634985fa2f0e07a7ef598881fd9",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/4/11, 7:43 AM",
      "commitNameOld": "ac8a7b2afd1892f76c4113a495a7dff828641aba",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 6.05,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int compareTo(double x, double y, double eps) {\n    if (equals(x, y, eps)) {\n        return 0;\n    } else if (x \u003c y) {\n        return -1;\n    }\n    return 1;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 399,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "Compares two numbers given some amount of allowed error.\n\n@param x the first number\n@param y the second number\n@param eps the amount of error to allow when checking for equality\n@return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double, double, double) equals(x, y, eps)}\u003c/li\u003e\n      \u003cli\u003e\u0026lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\n      \u003cli\u003e\u003e 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int compareTo(double x, double y, double eps) {\n    if (equals(x, y, eps)) {\n        return 0;\n    } else if (x \u003c y) {\n        return -1;\n    }\n    return 1;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 366,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "Compares two numbers given some amount of allowed error.\n\n@param x the first number\n@param y the second number\n@param eps the amount of error to allow when checking for equality\n@return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double, double, double) equals(x, y, eps)}\u003c/li\u003e\n      \u003cli\u003e\u0026lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\n      \u003cli\u003e\u003e 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/MathUtils.java"
      }
    },
    "95836d833482615c11d46e2e655f3eea06a641d7": {
      "type": "Yintroduced",
      "commitMessage": "added compareTo method with epsilon\nJIRA: MATH-247\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@749139 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/1/09, 2:21 PM",
      "commitName": "95836d833482615c11d46e2e655f3eea06a641d7",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,8 @@\n+public static int compareTo(double x, double y, double eps) {\n+    if (equals(x, y, eps)) {\n+        return 0;\n+    } else if (x \u003c y) {\n+        return -1;\n+    }\n+    return 1;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static int compareTo(double x, double y, double eps) {\n    if (equals(x, y, eps)) {\n        return 0;\n    } else if (x \u003c y) {\n        return -1;\n    }\n    return 1;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 360,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "Compares two numbers given some amount of allowed error.\n\n@param x the first number\n@param y the second number\n@param eps the amount of error to allow when checking for equality\n@return \u003cul\u003e\u003cli\u003e0 if  {@link #equals(double, double, double) equals(x, y, eps)}\u003c/li\u003e\n      \u003cli\u003e\u0026lt; 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u0026lt; y\u003c/li\u003e\n      \u003cli\u003e\u003e 0 if !{@link #equals(double, double, double) equals(x, y, eps)} \u0026amp;\u0026amp; x \u003e y\u003c/li\u003e\u003c/ul\u003e\n"
    }
  }
}