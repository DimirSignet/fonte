{
  "origin": "codeshovel",
  "repositoryName": "Math-42b",
  "repositoryPath": "/tmp/Math-42b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MatrixUtils.java",
  "functionName": "checkRowIndex",
  "functionId": "checkRowIndex___m-AnyMatrix(modifiers-final)__row-int(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Check if a row index is valid.\n\n@param m Matrix.\n@param row Row index to check.\n@throws OutOfRangeException if {@code row} is not a valid index.\n",
  "functionStartLine": 378,
  "functionEndLine": 384,
  "numCommitsSeen": 116,
  "timeTaken": 5058,
  "changeHistory": [
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
    "e44b04396d94e91d35fd44381f7ac5c4f2ff2ee9",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "e497d61c834d1ced0291fc431096b2c8a0546d0d",
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
    "82aff3309c4021ada6ef93202a1649afe803dda9",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3"
  ],
  "changeHistoryShort": {
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa": "Ymultichange(Ybodychange,Ydocchange)",
    "e44b04396d94e91d35fd44381f7ac5c4f2ff2ee9": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "e497d61c834d1ced0291fc431096b2c8a0546d0d": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Ydocchange,Yparameterchange)",
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d": "Ybodychange",
    "82aff3309c4021ada6ef93202a1649afe803dda9": "Ymodifierchange",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": "Ymovefromfile",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8742126f8f6117d90401f8d3ca1f40cd72b489aa": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/27/10, 6:16 AM",
      "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/27/10, 6:16 AM",
          "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/10/10, 3:46 AM",
          "commitNameOld": "986597f52ce9c6c1ff13fb134b91696de6ec2796",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 78.1,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new OutOfRangeException(LocalizedFormats.ROW_INDEX, row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 369,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m Matrix.\n@param row Row index to check.\n@throws OutOfRangeException if {@code row} is not a valid index.\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void checkRowIndex(final AnyMatrix m, final int row) {\n     if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n-        throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE, row, 0, m.getRowDimension() - 1);\n+        throw new OutOfRangeException(LocalizedFormats.ROW_INDEX, row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-425\nDeleted deprecated classes in package \"linear\".\nRemoved redundant methods in \"Array2DRowRealMatrix\".\nRemoved usage of \"MatrixIndexException\" (class is now deprecated).\nJavadoc clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1027952 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/27/10, 6:16 AM",
          "commitName": "8742126f8f6117d90401f8d3ca1f40cd72b489aa",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/10/10, 3:46 AM",
          "commitNameOld": "986597f52ce9c6c1ff13fb134b91696de6ec2796",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 78.1,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new OutOfRangeException(LocalizedFormats.ROW_INDEX, row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 369,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m Matrix.\n@param row Row index to check.\n@throws OutOfRangeException if {@code row} is not a valid index.\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void checkRowIndex(final AnyMatrix m, final int row) {\n     if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n-        throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE, row, 0, m.getRowDimension() - 1);\n+        throw new OutOfRangeException(LocalizedFormats.ROW_INDEX, row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
            "newValue": "Check if a row index is valid.\n\n@param m Matrix.\n@param row Row index to check.\n@throws OutOfRangeException if {@code row} is not a valid index.\n"
          }
        }
      ]
    },
    "e44b04396d94e91d35fd44381f7ac5c4f2ff2ee9": {
      "type": "Ybodychange",
      "commitMessage": "deprecated an old style exception that was forgotten\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@981243 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/10, 8:16 AM",
      "commitName": "e44b04396d94e91d35fd44381f7ac5c4f2ff2ee9",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "6/16/10, 4:03 PM",
      "commitNameOld": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 45.68,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE, row, 0, m.getRowDimension() - 1);\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
      "functionStartLine": 530,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
      "diff": "@@ -1,5 +1,5 @@\n public static void checkRowIndex(final AnyMatrix m, final int row) {\n     if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n+        throw new MatrixIndexException(LocalizedFormats.ROW_INDEX_OUT_OF_RANGE, row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
      "functionStartLine": 529,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java"
      }
    },
    "e497d61c834d1ced0291fc431096b2c8a0546d0d": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Ydocchange,Yparameterchange)",
      "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/6/09, 2:43 AM",
      "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/6/09, 2:43 AM",
          "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "5/6/09, 2:40 AM",
          "commitNameOld": "a3005935cf33909c1d2ca50461f276df2308e0ff",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 501,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void checkRowIndex(final int row) {\n-    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n+public static void checkRowIndex(final AnyMatrix m, final int row) {\n+    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
            "newPath": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
            "oldMethodName": "checkRowIndex",
            "newMethodName": "checkRowIndex"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/6/09, 2:43 AM",
          "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "5/6/09, 2:40 AM",
          "commitNameOld": "a3005935cf33909c1d2ca50461f276df2308e0ff",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 501,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void checkRowIndex(final int row) {\n-    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n+public static void checkRowIndex(final AnyMatrix m, final int row) {\n+    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/6/09, 2:43 AM",
          "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "5/6/09, 2:40 AM",
          "commitNameOld": "a3005935cf33909c1d2ca50461f276df2308e0ff",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 501,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void checkRowIndex(final int row) {\n-    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n+public static void checkRowIndex(final AnyMatrix m, final int row) {\n+    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/6/09, 2:43 AM",
          "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "5/6/09, 2:40 AM",
          "commitNameOld": "a3005935cf33909c1d2ca50461f276df2308e0ff",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 501,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void checkRowIndex(final int row) {\n-    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n+public static void checkRowIndex(final AnyMatrix m, final int row) {\n+    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Check if a row index is valid.\n\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
            "newValue": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/6/09, 2:43 AM",
          "commitName": "e497d61c834d1ced0291fc431096b2c8a0546d0d",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "5/6/09, 2:40 AM",
          "commitNameOld": "a3005935cf33909c1d2ca50461f276df2308e0ff",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void checkRowIndex(final AnyMatrix m, final int row) {\n    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/MatrixUtils.java",
          "functionStartLine": 501,
          "functionName": "checkRowIndex",
          "functionAnnotation": "",
          "functionDoc": "Check if a row index is valid.\n\n@param m matrix containing the submatrix\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void checkRowIndex(final int row) {\n-    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n+public static void checkRowIndex(final AnyMatrix m, final int row) {\n+    if (row \u003c 0 || row \u003e\u003d m.getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, m.getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[row-int(modifiers-final)]",
            "newValue": "[m-AnyMatrix(modifiers-final), row-int(modifiers-final)]"
          }
        }
      ]
    },
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d": {
      "type": "Ybodychange",
      "commitMessage": "replaced Object[] parameters by variable arguments in exceptions constructors\nthis allows simpler error declaration and removes the need for the strange\nnull argument with fixed messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746578 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/21/09, 12:01 PM",
      "commitName": "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/15/09, 1:59 PM",
      "commitNameOld": "79eb4d79b8b9db157517ba0b7ea2c31713db8516",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 5.92,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void checkRowIndex(final int row) {\n    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 1090,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
      "diff": "@@ -1,5 +1,5 @@\n protected void checkRowIndex(final int row) {\n     if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n-        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", row, 0, getRowDimension() - 1);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "82aff3309c4021ada6ef93202a1649afe803dda9": {
      "type": "Ymodifierchange",
      "commitMessage": "Added support for sparse real matrices\nJIRA: MATH-230\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@726460 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/14/08, 7:04 AM",
      "commitName": "82aff3309c4021ada6ef93202a1649afe803dda9",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "12/7/08, 12:19 PM",
      "commitNameOld": "2466ed1d8402459cb2383a6fdb9188fce61320c8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 6.78,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void checkRowIndex(final int row) {\n    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 841,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
      "diff": "@@ -1,5 +1,5 @@\n-private void checkRowIndex(final int row) {\n+protected void checkRowIndex(final int row) {\n     if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n         throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": {
      "type": "Ymovefromfile",
      "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/7/08, 7:21 AM",
      "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "12/7/08, 6:39 AM",
      "commitNameOld": "8dfb5ce14aadc86299f134ee50a652c55738c72a",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkRowIndex(final int row) {\n    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
      "functionStartLine": 710,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
        "newPath": "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "oldMethodName": "checkRowIndex",
        "newMethodName": "checkRowIndex"
      }
    },
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": {
      "type": "Yintroduced",
      "commitMessage": "improved error handling in linear package with finer grained exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@710168 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/3/08, 1:32 PM",
      "commitName": "2974de5bcae652a32b1d823f8965d66f56b82fd3",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,5 @@\n+private void checkRowIndex(final int row) {\n+    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n+        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void checkRowIndex(final int row) {\n    if (row \u003c 0 || row \u003e\u003d getRowDimension()) {\n        throw new MatrixIndexException(\"row index {0} out of allowed range [{1}, {2}]\", new Object[] { row, 0, getRowDimension() - 1 });\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 905,
      "functionName": "checkRowIndex",
      "functionAnnotation": "",
      "functionDoc": "Check if a row index is valid.\n\n@param row row index to check\n@exception MatrixIndexException if index is not valid\n"
    }
  }
}