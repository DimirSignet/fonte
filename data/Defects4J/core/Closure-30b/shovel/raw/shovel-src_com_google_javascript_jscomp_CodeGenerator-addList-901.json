{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeGenerator.java",
  "functionName": "addList",
  "functionId": "addList___firstInList-Node__isArrayOrFunctionArgument-boolean__lhsContext-Context",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeGenerator.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 901,
  "functionEndLine": 912,
  "numCommitsSeen": 65,
  "timeTaken": 4058,
  "changeHistory": [
    "746e26420bb2dde1339a72f15199373ab0182d33",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "746e26420bb2dde1339a72f15199373ab0182d33": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "746e26420bb2dde1339a72f15199373ab0182d33": {
      "type": "Ybodychange",
      "commitMessage": "\nInline some methods to save stack space, particularly\nfor expressions with loads of COMMAs\n\nR\u003dacleung\nDELTA\u003d77  (41 added, 17 deleted, 19 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4194\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1772 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/8/12, 4:28 PM",
      "commitName": "746e26420bb2dde1339a72f15199373ab0182d33",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/21/11, 12:02 PM",
      "commitNameOld": "e85593d14461f5342013d0d6c6e8484dca003eef",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 79.18,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "actualSource": "void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext) {\n    for (Node n \u003d firstInList; n !\u003d null; n \u003d n.getNext()) {\n        boolean isFirst \u003d n \u003d\u003d firstInList;\n        if (isFirst) {\n            addExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n        } else {\n            cc.listSeparator();\n            addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 893,
      "functionName": "addList",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext) {\n     for (Node n \u003d firstInList; n !\u003d null; n \u003d n.getNext()) {\n         boolean isFirst \u003d n \u003d\u003d firstInList;\n         if (isFirst) {\n-            addLeftExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n+            addExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n         } else {\n             cc.listSeparator();\n-            addExpr(n, isArrayOrFunctionArgument ? 1 : 0);\n+            addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext) {\n+    for (Node n \u003d firstInList; n !\u003d null; n \u003d n.getNext()) {\n+        boolean isFirst \u003d n \u003d\u003d firstInList;\n+        if (isFirst) {\n+            addLeftExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n+        } else {\n+            cc.listSeparator();\n+            addExpr(n, isArrayOrFunctionArgument ? 1 : 0);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext) {\n    for (Node n \u003d firstInList; n !\u003d null; n \u003d n.getNext()) {\n        boolean isFirst \u003d n \u003d\u003d firstInList;\n        if (isFirst) {\n            addLeftExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n        } else {\n            cc.listSeparator();\n            addExpr(n, isArrayOrFunctionArgument ? 1 : 0);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 676,
      "functionName": "addList",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}