{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Compiler.java",
  "functionName": "fillEmptyModules",
  "functionId": "fillEmptyModules___modules-List__JSModule__",
  "sourceFilePath": "src/com/google/javascript/jscomp/Compiler.java",
  "functionAnnotation": "",
  "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
  "functionStartLine": 431,
  "functionEndLine": 438,
  "numCommitsSeen": 161,
  "timeTaken": 9751,
  "changeHistory": [
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf",
    "4ade66e558226e1b8d896d24f59c704e311645a5",
    "279196b617c5de1ade21110979b6b13d8eda6342",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b"
  ],
  "changeHistoryShort": {
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf": "Ybodychange",
    "4ade66e558226e1b8d896d24f59c704e311645a5": "Ybodychange",
    "279196b617c5de1ade21110979b6b13d8eda6342": "Ymodifierchange",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": "Ymultichange(Yparameterchange,Ybodychange)",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf": {
      "type": "Ybodychange",
      "commitMessage": "\nSourceFile is OK\n\nR\u003djohnlenz\nDELTA\u003d436  (107 added, 104 deleted, 225 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4320\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1810 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/5/12, 9:43 AM",
      "commitName": "887038f8ecbd740944b4b9e1333837cef7f9e2cf",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "3/1/12, 3:23 PM",
      "commitNameOld": "0f70487944b9b934abbbc2d32c323398da2cdbe8",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 3.76,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n    for (JSModule module : modules) {\n        if (module.getInputs().isEmpty()) {\n            module.add(SourceFile.fromCode(createFillFileName(module.getName()), \"\"));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 420,
      "functionName": "fillEmptyModules",
      "functionAnnotation": "",
      "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
      "diff": "@@ -1,7 +1,7 @@\n private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n     for (JSModule module : modules) {\n         if (module.getInputs().isEmpty()) {\n-            module.add(JSSourceFile.fromCode(createFillFileName(module.getName()), \"\"));\n+            module.add(SourceFile.fromCode(createFillFileName(module.getName()), \"\"));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4ade66e558226e1b8d896d24f59c704e311645a5": {
      "type": "Ybodychange",
      "commitMessage": "\nHandle a weird edge case where\n1) we asks jscompiler to print a bundle\n2) there are no input files\n\nR\u003dacleung\nDELTA\u003d47  (43 added, 2 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4155\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1755 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/30/12, 2:04 PM",
      "commitName": "4ade66e558226e1b8d896d24f59c704e311645a5",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "1/19/12, 8:05 AM",
      "commitNameOld": "d2b19965df52e66385a2d7146887a44cea50330a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 11.25,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n    for (JSModule module : modules) {\n        if (module.getInputs().isEmpty()) {\n            module.add(JSSourceFile.fromCode(createFillFileName(module.getName()), \"\"));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 417,
      "functionName": "fillEmptyModules",
      "functionAnnotation": "",
      "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
      "diff": "@@ -1,7 +1,7 @@\n private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n     for (JSModule module : modules) {\n         if (module.getInputs().isEmpty()) {\n-            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n+            module.add(JSSourceFile.fromCode(createFillFileName(module.getName()), \"\"));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "279196b617c5de1ade21110979b6b13d8eda6342": {
      "type": "Ymodifierchange",
      "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/5/10, 4:36 PM",
      "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/3/10, 7:03 AM",
      "commitNameOld": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.4,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n    for (JSModule module : modules) {\n        if (module.getInputs().isEmpty()) {\n            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 362,
      "functionName": "fillEmptyModules",
      "functionAnnotation": "",
      "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
      "diff": "@@ -1,7 +1,7 @@\n-private void fillEmptyModules(List\u003cJSModule\u003e modules) {\n+private static void fillEmptyModules(List\u003cJSModule\u003e modules) {\n     for (JSModule module : modules) {\n         if (module.getInputs().isEmpty()) {\n             module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 11:58 PM",
      "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/5/10, 11:58 PM",
          "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/22/10, 10:51 PM",
          "commitNameOld": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private void fillEmptyModules(List\u003cJSModule\u003e modules) {\n    for (JSModule module : modules) {\n        if (module.getInputs().isEmpty()) {\n            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 351,
          "functionName": "fillEmptyModules",
          "functionAnnotation": "",
          "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
          "diff": "@@ -1,8 +1,7 @@\n-private void fillEmptyModules(JSModule[] modules) {\n-    for (int i \u003d 1; i \u003c modules.length; i++) {\n-        JSModule module \u003d modules[i];\n+private void fillEmptyModules(List\u003cJSModule\u003e modules) {\n+    for (JSModule module : modules) {\n         if (module.getInputs().isEmpty()) {\n             module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[modules-JSModule[]]",
            "newValue": "[modules-List\u003cJSModule\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/5/10, 11:58 PM",
          "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/22/10, 10:51 PM",
          "commitNameOld": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private void fillEmptyModules(List\u003cJSModule\u003e modules) {\n    for (JSModule module : modules) {\n        if (module.getInputs().isEmpty()) {\n            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 351,
          "functionName": "fillEmptyModules",
          "functionAnnotation": "",
          "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n",
          "diff": "@@ -1,8 +1,7 @@\n-private void fillEmptyModules(JSModule[] modules) {\n-    for (int i \u003d 1; i \u003c modules.length; i++) {\n-        JSModule module \u003d modules[i];\n+private void fillEmptyModules(List\u003cJSModule\u003e modules) {\n+    for (JSModule module : modules) {\n         if (module.getInputs().isEmpty()) {\n             module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": {
      "type": "Yintroduced",
      "commitMessage": "fix silly 2004-era naming conventions (Nick)\nR\u003djohn\nDELTA\u003d134  (0 added, 0 deleted, 134 changed)\n\nInsert a place holder file for any empty modules. (Alan)\nR\u003dnick\nDELTA\u003d53  (46 added, 6 deleted, 1 changed)\n\nMaps API extern update.\n(Contributed by Chad Killingsworth)\nFixes issue 121\nDELTA\u003d86  (48 added, 16 deleted, 22 changed)\n\n\nGoogle Loader API externs.\n(Contributed by Chad Killingsworth)\nFixes issue 126\nDELTA\u003d54  (54 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@149 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/22/10, 10:51 PM",
      "commitName": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,8 @@\n+private void fillEmptyModules(JSModule[] modules) {\n+    for (int i \u003d 1; i \u003c modules.length; i++) {\n+        JSModule module \u003d modules[i];\n+        if (module.getInputs().isEmpty()) {\n+            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void fillEmptyModules(JSModule[] modules) {\n    for (int i \u003d 1; i \u003c modules.length; i++) {\n        JSModule module \u003d modules[i];\n        if (module.getInputs().isEmpty()) {\n            module.add(JSSourceFile.fromCode(\"[\" + module.getName() + \"]\", \"\"));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 329,
      "functionName": "fillEmptyModules",
      "functionAnnotation": "",
      "functionDoc": "Fill any empty modules with a place holder file. It makes any cross module\nmotion easier.\n"
    }
  }
}