{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GoogleCodingConvention.java",
  "functionName": "isExported",
  "functionId": "isExported___name-String__local-boolean",
  "sourceFilePath": "src/com/google/javascript/jscomp/GoogleCodingConvention.java",
  "functionAnnotation": "@Override",
  "functionDoc": "@inheritDoc}\n\n\u003cp\u003eIn Google code, any global name starting with an underscore is\nconsidered exported.\n",
  "functionStartLine": 140,
  "functionEndLine": 143,
  "numCommitsSeen": 18,
  "timeTaken": 548,
  "changeHistory": [
    "16d53172f3a149a396c628a782e1a201efabaca1",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "16d53172f3a149a396c628a782e1a201efabaca1": "Ybodychange",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16d53172f3a149a396c628a782e1a201efabaca1": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd tests for the isExported behavior.\nAlso, change GoogleCodingConvention to export $super. I have\nmixed feelings about this, but wanted to propose it anyway.\n\nR\u003djohnlenz\nDELTA\u003d18  (13 added, 1 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d173\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@653 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/20/10, 4:46 PM",
      "commitName": "16d53172f3a149a396c628a782e1a201efabaca1",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/11/10, 9:42 PM",
      "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 38.79,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isExported(String name, boolean local) {\n    return super.isExported(name, local) || (!local \u0026\u0026 name.startsWith(\"_\"));\n}",
      "path": "src/com/google/javascript/jscomp/GoogleCodingConvention.java",
      "functionStartLine": 130,
      "functionName": "isExported",
      "functionAnnotation": "@Override",
      "functionDoc": "@inheritDoc}\n\n\u003cp\u003eIn Google code, any global name starting with an underscore is\nconsidered exported.\n",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public boolean isExported(String name, boolean local) {\n-    return !local \u0026\u0026 name.startsWith(\"_\");\n+    return super.isExported(name, local) || (!local \u0026\u0026 name.startsWith(\"_\"));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Never rename a variable named \"$super\", because the Prototype library\nuses this to do magic.\n\nBetter dead assignment elimination.\n\nEmit an error if you declare a parameter twice.\n\nDon\u0027t do anonymous function collapsing by default.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@12 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/17/09, 4:21 PM",
      "commitName": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Never rename a variable named \"$super\", because the Prototype library\nuses this to do magic.\n\nBetter dead assignment elimination.\n\nEmit an error if you declare a parameter twice.\n\nDon\u0027t do anonymous function collapsing by default.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@12 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/17/09, 4:21 PM",
          "commitName": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "11/11/09, 11:05 AM",
          "commitNameOld": "6a36f04485599820ff86441accee002b4deec2eb",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isExported(String name, boolean local) {\n    return !local \u0026\u0026 name.startsWith(\"_\");\n}",
          "path": "src/com/google/javascript/jscomp/GoogleCodingConvention.java",
          "functionStartLine": 124,
          "functionName": "isExported",
          "functionAnnotation": "@Override",
          "functionDoc": "@inheritDoc}\n\n\u003cp\u003eIn Google code, any global name starting with an underscore is\nconsidered exported.\n",
          "diff": "@@ -1,4 +1,4 @@\n @Override\n-public boolean isExported(String name) {\n-    return name.startsWith(\"_\");\n+public boolean isExported(String name, boolean local) {\n+    return !local \u0026\u0026 name.startsWith(\"_\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String]",
            "newValue": "[name-String, local-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Never rename a variable named \"$super\", because the Prototype library\nuses this to do magic.\n\nBetter dead assignment elimination.\n\nEmit an error if you declare a parameter twice.\n\nDon\u0027t do anonymous function collapsing by default.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@12 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/17/09, 4:21 PM",
          "commitName": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "11/11/09, 11:05 AM",
          "commitNameOld": "6a36f04485599820ff86441accee002b4deec2eb",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isExported(String name, boolean local) {\n    return !local \u0026\u0026 name.startsWith(\"_\");\n}",
          "path": "src/com/google/javascript/jscomp/GoogleCodingConvention.java",
          "functionStartLine": 124,
          "functionName": "isExported",
          "functionAnnotation": "@Override",
          "functionDoc": "@inheritDoc}\n\n\u003cp\u003eIn Google code, any global name starting with an underscore is\nconsidered exported.\n",
          "diff": "@@ -1,4 +1,4 @@\n @Override\n-public boolean isExported(String name) {\n-    return name.startsWith(\"_\");\n+public boolean isExported(String name, boolean local) {\n+    return !local \u0026\u0026 name.startsWith(\"_\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public boolean isExported(String name) {\n+    return name.startsWith(\"_\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean isExported(String name) {\n    return name.startsWith(\"_\");\n}",
      "path": "src/com/google/javascript/jscomp/GoogleCodingConvention.java",
      "functionStartLine": 124,
      "functionName": "isExported",
      "functionAnnotation": "@Override",
      "functionDoc": "@inheritDoc}\n\n\u003cp\u003eIn Google code, any global name starting with an underscore is\nconsidered exported.\n"
    }
  }
}