{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataFlowAnalysis.java",
  "functionName": "initialize",
  "functionId": "initialize",
  "sourceFilePath": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
  "functionAnnotation": "",
  "functionDoc": "Initializes the work list and the control flow graph.\n",
  "functionStartLine": 248,
  "functionEndLine": 260,
  "numCommitsSeen": 18,
  "timeTaken": 846,
  "changeHistory": [
    "091577d5000b2260452cdc79eacf54925de894a3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "091577d5000b2260452cdc79eacf54925de894a3": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "091577d5000b2260452cdc79eacf54925de894a3": {
      "type": "Ybodychange",
      "commitMessage": "\nMaking CheckAccessControls hot-swappable. This needed changes in defining\nproperties on PrototypeObjectType to keep previously inferred jsdoc info.\n\nR\u003dnicksantos\nDELTA\u003d57  (45 added, 2 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1806\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1070 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 8:34 AM",
      "commitName": "091577d5000b2260452cdc79eacf54925de894a3",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 27.85,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void initialize() {\n    orderedWorkSet.clear();\n    for (DiGraphNode\u003cN, Branch\u003e node : cfg.getDirectedGraphNodes()) {\n        node.setAnnotation(new FlowState\u003cL\u003e(createInitialEstimateLattice(), createInitialEstimateLattice()));\n        if (node !\u003d cfg.getImplicitReturn()) {\n            orderedWorkSet.add(node);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
      "functionStartLine": 248,
      "functionName": "initialize",
      "functionAnnotation": "",
      "functionDoc": "Initializes the work list and the control flow graph.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+protected void initialize() {\n+    orderedWorkSet.clear();\n+    for (DiGraphNode\u003cN, Branch\u003e node : cfg.getDirectedGraphNodes()) {\n+        node.setAnnotation(new FlowState\u003cL\u003e(createInitialEstimateLattice(), createInitialEstimateLattice()));\n+        if (node !\u003d cfg.getImplicitReturn()) {\n+            orderedWorkSet.add(node);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void initialize() {\n    orderedWorkSet.clear();\n    for (DiGraphNode\u003cN, Branch\u003e node : cfg.getDirectedGraphNodes()) {\n        node.setAnnotation(new FlowState\u003cL\u003e(createInitialEstimateLattice(), createInitialEstimateLattice()));\n        if (node !\u003d cfg.getImplicitReturn()) {\n            orderedWorkSet.add(node);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
      "functionStartLine": 308,
      "functionName": "initialize",
      "functionAnnotation": "",
      "functionDoc": "Initializes the work list and the control flow graph.\n"
    }
  }
}