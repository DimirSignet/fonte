{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isImmutableValue",
  "functionId": "isImmutableValue___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Returns true if this is an immutable value.\n",
  "functionStartLine": 489,
  "functionEndLine": 512,
  "numCommitsSeen": 120,
  "timeTaken": 10532,
  "changeHistory": [
    "e7ce7f710e1bf297f1a4258b53f22f550fc1f2e3",
    "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "e7ce7f710e1bf297f1a4258b53f22f550fc1f2e3": "Ybodychange",
    "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e7ce7f710e1bf297f1a4258b53f22f550fc1f2e3": {
      "type": "Ybodychange",
      "commitMessage": "\nUse !0 and !1 for true and false.\n\nR\u003djohnlenz\nDELTA\u003d97  (81 added, 0 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@775 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/11, 4:32 PM",
      "commitName": "e7ce7f710e1bf297f1a4258b53f22f550fc1f2e3",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "2/7/11, 2:59 PM",
      "commitNameOld": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 3.06,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isImmutableValue(Node n) {\n    switch(n.getType()) {\n        case Token.STRING:\n        case Token.NUMBER:\n        case Token.NULL:\n        case Token.TRUE:\n        case Token.FALSE:\n            return true;\n        case Token.NOT:\n            return isImmutableValue(n.getFirstChild());\n        case Token.VOID:\n        case Token.NEG:\n            return isImmutableValue(n.getFirstChild());\n        case Token.NAME:\n            String name \u003d n.getString();\n            return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 402,
      "functionName": "isImmutableValue",
      "functionAnnotation": "",
      "functionDoc": "Returns true if this is an immutable value.\n",
      "diff": "@@ -1,17 +1,19 @@\n static boolean isImmutableValue(Node n) {\n     switch(n.getType()) {\n         case Token.STRING:\n         case Token.NUMBER:\n         case Token.NULL:\n         case Token.TRUE:\n         case Token.FALSE:\n             return true;\n+        case Token.NOT:\n+            return isImmutableValue(n.getFirstChild());\n         case Token.VOID:\n         case Token.NEG:\n             return isImmutableValue(n.getFirstChild());\n         case Token.NAME:\n             String name \u003d n.getString();\n             return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5": {
      "type": "Ybodychange",
      "commitMessage": "\nCorrect \"void\" operator side-effect detection.\n\nR\u003dbowdidge\nDELTA\u003d17  (13 added, 1 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d54013\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@298 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/20/10, 11:11 AM",
      "commitName": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/16/10, 2:56 AM",
      "commitNameOld": "192a60673cfd308fbcb735664fbab98e3cb3a21a",
      "commitAuthorOld": "nadaa@google.com",
      "daysBetweenCommits": 4.34,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isImmutableValue(Node n) {\n    switch(n.getType()) {\n        case Token.STRING:\n        case Token.NUMBER:\n        case Token.NULL:\n        case Token.TRUE:\n        case Token.FALSE:\n            return true;\n        case Token.VOID:\n        case Token.NEG:\n            return isImmutableValue(n.getFirstChild());\n        case Token.NAME:\n            String name \u003d n.getString();\n            return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 178,
      "functionName": "isImmutableValue",
      "functionAnnotation": "",
      "functionDoc": "Returns true if this is an immutable value.\n",
      "diff": "@@ -1,17 +1,17 @@\n static boolean isImmutableValue(Node n) {\n     switch(n.getType()) {\n         case Token.STRING:\n         case Token.NUMBER:\n         case Token.NULL:\n         case Token.TRUE:\n         case Token.FALSE:\n-        case Token.VOID:\n             return true;\n+        case Token.VOID:\n         case Token.NEG:\n             return isImmutableValue(n.getFirstChild());\n         case Token.NAME:\n             String name \u003d n.getString();\n             return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+static boolean isImmutableValue(Node n) {\n+    switch(n.getType()) {\n+        case Token.STRING:\n+        case Token.NUMBER:\n+        case Token.NULL:\n+        case Token.TRUE:\n+        case Token.FALSE:\n+        case Token.VOID:\n+            return true;\n+        case Token.NEG:\n+            return isImmutableValue(n.getFirstChild());\n+        case Token.NAME:\n+            String name \u003d n.getString();\n+            return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isImmutableValue(Node n) {\n    switch(n.getType()) {\n        case Token.STRING:\n        case Token.NUMBER:\n        case Token.NULL:\n        case Token.TRUE:\n        case Token.FALSE:\n        case Token.VOID:\n            return true;\n        case Token.NEG:\n            return isImmutableValue(n.getFirstChild());\n        case Token.NAME:\n            String name \u003d n.getString();\n            return \"undefined\".equals(name) || \"Infinity\".equals(name) || \"NaN\".equals(name);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 175,
      "functionName": "isImmutableValue",
      "functionAnnotation": "",
      "functionDoc": "Returns true if this is an immutable value.\n"
    }
  }
}