{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RhinoErrorReporter.java",
  "functionName": "replacePlaceHolders",
  "functionId": "replacePlaceHolders___s-String",
  "sourceFilePath": "src/com/google/javascript/jscomp/RhinoErrorReporter.java",
  "functionAnnotation": "",
  "functionDoc": "For each message such as \"Not a good use of {0}\", replace the place\nholder {0} with a wild card that matches all possible strings.\nAlso put the any non-place-holder in quotes for regex matching later.\n",
  "functionStartLine": 67,
  "functionEndLine": 70,
  "numCommitsSeen": 12,
  "timeTaken": 579,
  "changeHistory": [
    "5709ec1d0bbe5b7726a14d06f7eab9c35150e314",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5709ec1d0bbe5b7726a14d06f7eab9c35150e314": "Ymultichange(Yreturntypechange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5709ec1d0bbe5b7726a14d06f7eab9c35150e314": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "\nPut bad type annotations behind a diagnostic group, so that they\naren\u0027t reported if type-checking isn\u0027t on.\n\nR\u003dacleung\nDELTA\u003d300  (110 added, 11 deleted, 179 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d780\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@857 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/7/11, 12:59 PM",
      "commitName": "5709ec1d0bbe5b7726a14d06f7eab9c35150e314",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nPut bad type annotations behind a diagnostic group, so that they\naren\u0027t reported if type-checking isn\u0027t on.\n\nR\u003dacleung\nDELTA\u003d300  (110 added, 11 deleted, 179 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d780\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@857 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "3/7/11, 12:59 PM",
          "commitName": "5709ec1d0bbe5b7726a14d06f7eab9c35150e314",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 115.64,
          "commitsBetweenForRepo": 300,
          "commitsBetweenForFile": 1,
          "actualSource": "private Pattern replacePlaceHolders(String s) {\n    s \u003d Pattern.quote(s);\n    return Pattern.compile(s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\"));\n}",
          "path": "src/com/google/javascript/jscomp/RhinoErrorReporter.java",
          "functionStartLine": 68,
          "functionName": "replacePlaceHolders",
          "functionAnnotation": "",
          "functionDoc": "For each message such as \"Not a good use of {0}\", replace the place\nholder {0} with a wild card that matches all possible strings.\nAlso put the any non-place-holder in quotes for regex matching later.\n",
          "diff": "@@ -1,4 +1,4 @@\n-private String replacePlaceHolders(String s) {\n+private Pattern replacePlaceHolders(String s) {\n     s \u003d Pattern.quote(s);\n-    return s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\");\n+    return Pattern.compile(s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "Pattern"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nPut bad type annotations behind a diagnostic group, so that they\naren\u0027t reported if type-checking isn\u0027t on.\n\nR\u003dacleung\nDELTA\u003d300  (110 added, 11 deleted, 179 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d780\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@857 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "3/7/11, 12:59 PM",
          "commitName": "5709ec1d0bbe5b7726a14d06f7eab9c35150e314",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 115.64,
          "commitsBetweenForRepo": 300,
          "commitsBetweenForFile": 1,
          "actualSource": "private Pattern replacePlaceHolders(String s) {\n    s \u003d Pattern.quote(s);\n    return Pattern.compile(s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\"));\n}",
          "path": "src/com/google/javascript/jscomp/RhinoErrorReporter.java",
          "functionStartLine": 68,
          "functionName": "replacePlaceHolders",
          "functionAnnotation": "",
          "functionDoc": "For each message such as \"Not a good use of {0}\", replace the place\nholder {0} with a wild card that matches all possible strings.\nAlso put the any non-place-holder in quotes for regex matching later.\n",
          "diff": "@@ -1,4 +1,4 @@\n-private String replacePlaceHolders(String s) {\n+private Pattern replacePlaceHolders(String s) {\n     s \u003d Pattern.quote(s);\n-    return s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\");\n+    return Pattern.compile(s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\"));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+private String replacePlaceHolders(String s) {\n+    s \u003d Pattern.quote(s);\n+    return s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "private String replacePlaceHolders(String s) {\n    s \u003d Pattern.quote(s);\n    return s.replaceAll(\"\\\\{\\\\d+\\\\}\", \"\\\\\\\\E.*\\\\\\\\Q\");\n}",
      "path": "src/com/google/javascript/jscomp/RhinoErrorReporter.java",
      "functionStartLine": 59,
      "functionName": "replacePlaceHolders",
      "functionAnnotation": "",
      "functionDoc": "For each message such as \"Not a good use of {0}\", replace the place\nholder {0} with a wild card that matches all possible strings.\nAlso put the any non-place-holder in quotes for regex matching later.\n"
    }
  }
}