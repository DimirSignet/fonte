{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleDefinitionFinder.java",
  "functionName": "getSimplifiedName",
  "functionId": "getSimplifiedName___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/SimpleDefinitionFinder.java",
  "functionAnnotation": "",
  "functionDoc": "Extract a name from a node.  In the case of GETPROP nodes,\nreplace the namespace or object expression with \"this\" for\nsimplicity and correctness at the expense of inefficiencies due\nto higher chances of name collisions.\n\nTODO(user) revisit.  it would be helpful to at least use fully\nqualified names in the case of namespaces.  Might not matter as\nmuch if this pass runs after \"collapsing properties\".\n",
  "functionStartLine": 135,
  "functionEndLine": 147,
  "numCommitsSeen": 28,
  "timeTaken": 1168,
  "changeHistory": [
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/13/11, 3:52 PM",
      "commitNameOld": "5d9614c1ca47341bb9c1ccc566145e71ece1900c",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 363,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String getSimplifiedName(Node node) {\n    if (node.isName()) {\n        String name \u003d node.getString();\n        if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n            return name;\n        } else {\n            return null;\n        }\n    } else if (node.isGetProp()) {\n        return \"this.\" + node.getLastChild().getString();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/SimpleDefinitionFinder.java",
      "functionStartLine": 137,
      "functionName": "getSimplifiedName",
      "functionAnnotation": "",
      "functionDoc": "Extract a name from a node.  In the case of GETPROP nodes,\nreplace the namespace or object expression with \"this\" for\nsimplicity and correctness at the expense of inefficiencies due\nto higher chances of name collisions.\n\nTODO(user) revisit.  it would be helpful to at least use fully\nqualified names in the case of namespaces.  Might not matter as\nmuch if this pass runs after \"collapsing properties\".\n",
      "diff": "@@ -1,13 +1,13 @@\n private static String getSimplifiedName(Node node) {\n-    if (NodeUtil.isName(node)) {\n+    if (node.isName()) {\n         String name \u003d node.getString();\n         if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n             return name;\n         } else {\n             return null;\n         }\n-    } else if (NodeUtil.isGetProp(node)) {\n+    } else if (node.isGetProp()) {\n         return \"this.\" + node.getLastChild().getString();\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+private static String getSimplifiedName(Node node) {\n+    if (NodeUtil.isName(node)) {\n+        String name \u003d node.getString();\n+        if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n+            return name;\n+        } else {\n+            return null;\n+        }\n+    } else if (NodeUtil.isGetProp(node)) {\n+        return \"this.\" + node.getLastChild().getString();\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static String getSimplifiedName(Node node) {\n    if (NodeUtil.isName(node)) {\n        String name \u003d node.getString();\n        if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n            return name;\n        } else {\n            return null;\n        }\n    } else if (NodeUtil.isGetProp(node)) {\n        return \"this.\" + node.getLastChild().getString();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/SimpleDefinitionFinder.java",
      "functionStartLine": 126,
      "functionName": "getSimplifiedName",
      "functionAnnotation": "",
      "functionDoc": "Extract a name from a node.  In the case of GETPROP nodes,\nreplace the namespace or object expression with \"this\" for\nsimplicity and correctness at the expense of inefficiencies due\nto higher chances of name collisions.\n\nTODO(user) revisit.  it would be helpful to at least use fully\nqualified names in the case of namespaces.  Might not matter as\nmuch if this pass runs after \"collapsing properties\".\n"
    }
  }
}