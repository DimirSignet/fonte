{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowSensitiveInlineVariables.java",
  "functionName": "inlineVariable",
  "functionId": "$inlineVariable",
  "sourceFilePath": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
  "functionAnnotation": "",
  "functionDoc": "Actual transformation.\n",
  "functionStartLine": 373,
  "functionEndLine": 394,
  "numCommitsSeen": 21,
  "timeTaken": 1140,
  "changeHistory": [
    "5f8b6f54294ce8b454f78165f5230b3759d11e37",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5f8b6f54294ce8b454f78165f5230b3759d11e37": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f8b6f54294ce8b454f78165f5230b3759d11e37": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isExpressionNode\n\nR\u003dnicksantos\nDELTA\u003d37  (0 added, 4 deleted, 33 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4037\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1702 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/4/12, 11:53 AM",
      "commitName": "5f8b6f54294ce8b454f78165f5230b3759d11e37",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 53.8,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "actualSource": "private void inlineVariable() {\n    Node defParent \u003d def.getParent();\n    Node useParent \u003d use.getParent();\n    if (def.isAssign()) {\n        Node rhs \u003d def.getLastChild();\n        rhs.detachFromParent();\n        Preconditions.checkState(defParent.isExprResult());\n        while (defParent.getParent().isLabel()) {\n            defParent \u003d defParent.getParent();\n        }\n        defParent.detachFromParent();\n        useParent.replaceChild(use, rhs);\n    } else if (defParent.isVar()) {\n        Node rhs \u003d def.getLastChild();\n        def.removeChild(rhs);\n        useParent.replaceChild(use, rhs);\n    } else {\n        Preconditions.checkState(false, \"No other definitions can be inlined.\");\n    }\n    compiler.reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
      "functionStartLine": 373,
      "functionName": "inlineVariable",
      "functionAnnotation": "",
      "functionDoc": "Actual transformation.\n",
      "diff": "@@ -1,21 +1,21 @@\n private void inlineVariable() {\n     Node defParent \u003d def.getParent();\n     Node useParent \u003d use.getParent();\n     if (def.isAssign()) {\n         Node rhs \u003d def.getLastChild();\n         rhs.detachFromParent();\n-        Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n+        Preconditions.checkState(defParent.isExprResult());\n         while (defParent.getParent().isLabel()) {\n             defParent \u003d defParent.getParent();\n         }\n         defParent.detachFromParent();\n         useParent.replaceChild(use, rhs);\n     } else if (defParent.isVar()) {\n         Node rhs \u003d def.getLastChild();\n         def.removeChild(rhs);\n         useParent.replaceChild(use, rhs);\n     } else {\n         Preconditions.checkState(false, \"No other definitions can be inlined.\");\n     }\n     compiler.reportCodeChange();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private void inlineVariable() {\n    Node defParent \u003d def.getParent();\n    Node useParent \u003d use.getParent();\n    if (def.isAssign()) {\n        Node rhs \u003d def.getLastChild();\n        rhs.detachFromParent();\n        Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n        while (defParent.getParent().isLabel()) {\n            defParent \u003d defParent.getParent();\n        }\n        defParent.detachFromParent();\n        useParent.replaceChild(use, rhs);\n    } else if (defParent.isVar()) {\n        Node rhs \u003d def.getLastChild();\n        def.removeChild(rhs);\n        useParent.replaceChild(use, rhs);\n    } else {\n        Preconditions.checkState(false, \"No other definitions can be inlined.\");\n    }\n    compiler.reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
      "functionStartLine": 373,
      "functionName": "inlineVariable",
      "functionAnnotation": "",
      "functionDoc": "Actual transformation.\n",
      "diff": "@@ -1,21 +1,21 @@\n private void inlineVariable() {\n     Node defParent \u003d def.getParent();\n     Node useParent \u003d use.getParent();\n     if (def.isAssign()) {\n         Node rhs \u003d def.getLastChild();\n         rhs.detachFromParent();\n         Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n-        while (defParent.getParent().getType() \u003d\u003d Token.LABEL) {\n+        while (defParent.getParent().isLabel()) {\n             defParent \u003d defParent.getParent();\n         }\n         defParent.detachFromParent();\n         useParent.replaceChild(use, rhs);\n     } else if (defParent.isVar()) {\n         Node rhs \u003d def.getLastChild();\n         def.removeChild(rhs);\n         useParent.replaceChild(use, rhs);\n     } else {\n         Preconditions.checkState(false, \"No other definitions can be inlined.\");\n     }\n     compiler.reportCodeChange();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "8/22/11, 4:35 PM",
      "commitNameOld": "6c2efacb7315e03b25d0b23a6c881df9955b210a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 78.93,
      "commitsBetweenForRepo": 187,
      "commitsBetweenForFile": 1,
      "actualSource": "private void inlineVariable() {\n    Node defParent \u003d def.getParent();\n    Node useParent \u003d use.getParent();\n    if (def.isAssign()) {\n        Node rhs \u003d def.getLastChild();\n        rhs.detachFromParent();\n        Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n        while (defParent.getParent().getType() \u003d\u003d Token.LABEL) {\n            defParent \u003d defParent.getParent();\n        }\n        defParent.detachFromParent();\n        useParent.replaceChild(use, rhs);\n    } else if (defParent.isVar()) {\n        Node rhs \u003d def.getLastChild();\n        def.removeChild(rhs);\n        useParent.replaceChild(use, rhs);\n    } else {\n        Preconditions.checkState(false, \"No other definitions can be inlined.\");\n    }\n    compiler.reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
      "functionStartLine": 373,
      "functionName": "inlineVariable",
      "functionAnnotation": "",
      "functionDoc": "Actual transformation.\n",
      "diff": "@@ -1,21 +1,21 @@\n private void inlineVariable() {\n     Node defParent \u003d def.getParent();\n     Node useParent \u003d use.getParent();\n-    if (NodeUtil.isAssign(def)) {\n+    if (def.isAssign()) {\n         Node rhs \u003d def.getLastChild();\n         rhs.detachFromParent();\n         Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n         while (defParent.getParent().getType() \u003d\u003d Token.LABEL) {\n             defParent \u003d defParent.getParent();\n         }\n         defParent.detachFromParent();\n         useParent.replaceChild(use, rhs);\n-    } else if (NodeUtil.isVar(defParent)) {\n+    } else if (defParent.isVar()) {\n         Node rhs \u003d def.getLastChild();\n         def.removeChild(rhs);\n         useParent.replaceChild(use, rhs);\n     } else {\n         Preconditions.checkState(false, \"No other definitions can be inlined.\");\n     }\n     compiler.reportCodeChange();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+private void inlineVariable() {\n+    Node defParent \u003d def.getParent();\n+    Node useParent \u003d use.getParent();\n+    if (NodeUtil.isAssign(def)) {\n+        Node rhs \u003d def.getLastChild();\n+        rhs.detachFromParent();\n+        Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n+        while (defParent.getParent().getType() \u003d\u003d Token.LABEL) {\n+            defParent \u003d defParent.getParent();\n+        }\n+        defParent.detachFromParent();\n+        useParent.replaceChild(use, rhs);\n+    } else if (NodeUtil.isVar(defParent)) {\n+        Node rhs \u003d def.getLastChild();\n+        def.removeChild(rhs);\n+        useParent.replaceChild(use, rhs);\n+    } else {\n+        Preconditions.checkState(false, \"No other definitions can be inlined.\");\n+    }\n+    compiler.reportCodeChange();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void inlineVariable() {\n    Node defParent \u003d def.getParent();\n    Node useParent \u003d use.getParent();\n    if (NodeUtil.isAssign(def)) {\n        Node rhs \u003d def.getLastChild();\n        rhs.detachFromParent();\n        Preconditions.checkState(NodeUtil.isExpressionNode(defParent));\n        while (defParent.getParent().getType() \u003d\u003d Token.LABEL) {\n            defParent \u003d defParent.getParent();\n        }\n        defParent.detachFromParent();\n        useParent.replaceChild(use, rhs);\n    } else if (NodeUtil.isVar(defParent)) {\n        Node rhs \u003d def.getLastChild();\n        def.removeChild(rhs);\n        useParent.replaceChild(use, rhs);\n    } else {\n        Preconditions.checkState(false, \"No other definitions can be inlined.\");\n    }\n    compiler.reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
      "functionStartLine": 293,
      "functionName": "inlineVariable",
      "functionAnnotation": "",
      "functionDoc": "Actual transformation.\n"
    }
  }
}