{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "opToStr",
  "functionId": "opToStr___operator-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Converts an operator\u0027s token value (see {@link Token}) to a string\nrepresentation.\n\n@param operator the operator\u0027s token value to convert\n@return the string representation or {@code null} if the token value is\nnot an operator\n",
  "functionStartLine": 2123,
  "functionEndLine": 2168,
  "numCommitsSeen": 120,
  "timeTaken": 10456,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,88 @@\n+static String opToStr(int operator) {\n+    switch(operator) {\n+        case Token.BITOR:\n+            return \"|\";\n+        case Token.OR:\n+            return \"||\";\n+        case Token.BITXOR:\n+            return \"^\";\n+        case Token.AND:\n+            return \"\u0026\u0026\";\n+        case Token.BITAND:\n+            return \"\u0026\";\n+        case Token.SHEQ:\n+            return \"\u003d\u003d\u003d\";\n+        case Token.EQ:\n+            return \"\u003d\u003d\";\n+        case Token.NOT:\n+            return \"!\";\n+        case Token.NE:\n+            return \"!\u003d\";\n+        case Token.SHNE:\n+            return \"!\u003d\u003d\";\n+        case Token.LSH:\n+            return \"\u003c\u003c\";\n+        case Token.IN:\n+            return \"in\";\n+        case Token.LE:\n+            return \"\u003c\u003d\";\n+        case Token.LT:\n+            return \"\u003c\";\n+        case Token.URSH:\n+            return \"\u003e\u003e\u003e\";\n+        case Token.RSH:\n+            return \"\u003e\u003e\";\n+        case Token.GE:\n+            return \"\u003e\u003d\";\n+        case Token.GT:\n+            return \"\u003e\";\n+        case Token.MUL:\n+            return \"*\";\n+        case Token.DIV:\n+            return \"/\";\n+        case Token.MOD:\n+            return \"%\";\n+        case Token.BITNOT:\n+            return \"~\";\n+        case Token.ADD:\n+            return \"+\";\n+        case Token.SUB:\n+            return \"-\";\n+        case Token.POS:\n+            return \"+\";\n+        case Token.NEG:\n+            return \"-\";\n+        case Token.ASSIGN:\n+            return \"\u003d\";\n+        case Token.ASSIGN_BITOR:\n+            return \"|\u003d\";\n+        case Token.ASSIGN_BITXOR:\n+            return \"^\u003d\";\n+        case Token.ASSIGN_BITAND:\n+            return \"\u0026\u003d\";\n+        case Token.ASSIGN_LSH:\n+            return \"\u003c\u003c\u003d\";\n+        case Token.ASSIGN_RSH:\n+            return \"\u003e\u003e\u003d\";\n+        case Token.ASSIGN_URSH:\n+            return \"\u003e\u003e\u003e\u003d\";\n+        case Token.ASSIGN_ADD:\n+            return \"+\u003d\";\n+        case Token.ASSIGN_SUB:\n+            return \"-\u003d\";\n+        case Token.ASSIGN_MUL:\n+            return \"*\u003d\";\n+        case Token.ASSIGN_DIV:\n+            return \"/\u003d\";\n+        case Token.ASSIGN_MOD:\n+            return \"%\u003d\";\n+        case Token.VOID:\n+            return \"void\";\n+        case Token.TYPEOF:\n+            return \"typeof\";\n+        case Token.INSTANCEOF:\n+            return \"instanceof\";\n+        default:\n+            return null;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static String opToStr(int operator) {\n    switch(operator) {\n        case Token.BITOR:\n            return \"|\";\n        case Token.OR:\n            return \"||\";\n        case Token.BITXOR:\n            return \"^\";\n        case Token.AND:\n            return \"\u0026\u0026\";\n        case Token.BITAND:\n            return \"\u0026\";\n        case Token.SHEQ:\n            return \"\u003d\u003d\u003d\";\n        case Token.EQ:\n            return \"\u003d\u003d\";\n        case Token.NOT:\n            return \"!\";\n        case Token.NE:\n            return \"!\u003d\";\n        case Token.SHNE:\n            return \"!\u003d\u003d\";\n        case Token.LSH:\n            return \"\u003c\u003c\";\n        case Token.IN:\n            return \"in\";\n        case Token.LE:\n            return \"\u003c\u003d\";\n        case Token.LT:\n            return \"\u003c\";\n        case Token.URSH:\n            return \"\u003e\u003e\u003e\";\n        case Token.RSH:\n            return \"\u003e\u003e\";\n        case Token.GE:\n            return \"\u003e\u003d\";\n        case Token.GT:\n            return \"\u003e\";\n        case Token.MUL:\n            return \"*\";\n        case Token.DIV:\n            return \"/\";\n        case Token.MOD:\n            return \"%\";\n        case Token.BITNOT:\n            return \"~\";\n        case Token.ADD:\n            return \"+\";\n        case Token.SUB:\n            return \"-\";\n        case Token.POS:\n            return \"+\";\n        case Token.NEG:\n            return \"-\";\n        case Token.ASSIGN:\n            return \"\u003d\";\n        case Token.ASSIGN_BITOR:\n            return \"|\u003d\";\n        case Token.ASSIGN_BITXOR:\n            return \"^\u003d\";\n        case Token.ASSIGN_BITAND:\n            return \"\u0026\u003d\";\n        case Token.ASSIGN_LSH:\n            return \"\u003c\u003c\u003d\";\n        case Token.ASSIGN_RSH:\n            return \"\u003e\u003e\u003d\";\n        case Token.ASSIGN_URSH:\n            return \"\u003e\u003e\u003e\u003d\";\n        case Token.ASSIGN_ADD:\n            return \"+\u003d\";\n        case Token.ASSIGN_SUB:\n            return \"-\u003d\";\n        case Token.ASSIGN_MUL:\n            return \"*\u003d\";\n        case Token.ASSIGN_DIV:\n            return \"/\u003d\";\n        case Token.ASSIGN_MOD:\n            return \"%\u003d\";\n        case Token.VOID:\n            return \"void\";\n        case Token.TYPEOF:\n            return \"typeof\";\n        case Token.INSTANCEOF:\n            return \"instanceof\";\n        default:\n            return null;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1308,
      "functionName": "opToStr",
      "functionAnnotation": "",
      "functionDoc": "Converts an operator\u0027s token value (see {@link Token}) to a string\nrepresentation.\n\n@param operator the operator\u0027s token value to convert\n@return the string representation or {@code null} if the token value is\nnot an operator\n"
    }
  }
}