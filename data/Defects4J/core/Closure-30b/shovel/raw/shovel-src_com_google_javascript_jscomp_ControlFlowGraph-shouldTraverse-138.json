{
  "origin": "codeshovel",
  "repositoryName": "Closure-30b",
  "repositoryPath": "/tmp/Closure-30b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ControlFlowGraph.java",
  "functionName": "shouldTraverse",
  "functionId": "$shouldTraverse___nodeTraversal-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 138,
  "functionEndLine": 144,
  "numCommitsSeen": 14,
  "timeTaken": 470,
  "changeHistory": [
    "76abdf11394c0e7515ae63335676ea3657badb45",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "76abdf11394c0e7515ae63335676ea3657badb45": "Yannotationchange",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76abdf11394c0e7515ae63335676ea3657badb45": {
      "type": "Yannotationchange",
      "commitMessage": "\nMake our build warnings free.\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2830\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1301 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/28/11, 4:19 PM",
      "commitName": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 107.17,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    if (parent \u003d\u003d null) {\n        return true;\n    }\n    return !isEnteringNewCfgNode(n);\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 138,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,7 @@\n+@Override\n public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n     if (parent \u003d\u003d null) {\n         return true;\n     }\n     return !isEnteringNewCfgNode(n);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": {
      "type": "Ybodychange",
      "commitMessage": "Never rename a variable named \"$super\", because the Prototype library\nuses this to do magic.\n\nBetter dead assignment elimination.\n\nEmit an error if you declare a parameter twice.\n\nDon\u0027t do anonymous function collapsing by default.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@12 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/17/09, 4:21 PM",
      "commitName": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    if (parent \u003d\u003d null) {\n        return true;\n    }\n    return !isEnteringNewCfgNode(n);\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 136,
      "functionName": "shouldTraverse",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,6 @@\n public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n     if (parent \u003d\u003d null) {\n         return true;\n     }\n-    switch(parent.getType()) {\n-        case Token.BLOCK:\n-        case Token.SCRIPT:\n-        case Token.TRY:\n-        case Token.FINALLY:\n-            return false;\n-        case Token.FUNCTION:\n-            return n \u003d\u003d parent.getFirstChild().getNext();\n-        case Token.WHILE:\n-        case Token.DO:\n-        case Token.IF:\n-            return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n-        case Token.FOR:\n-            if (parent.getChildCount() \u003d\u003d 4) {\n-                return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n-            } else {\n-                return n !\u003d parent.getLastChild();\n-            }\n-        case Token.SWITCH:\n-        case Token.CASE:\n-        case Token.CATCH:\n-        case Token.WITH:\n-            return n \u003d\u003d parent.getFirstChild();\n-        default:\n-            return true;\n-    }\n+    return !isEnteringNewCfgNode(n);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,31 @@\n+public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n+    if (parent \u003d\u003d null) {\n+        return true;\n+    }\n+    switch(parent.getType()) {\n+        case Token.BLOCK:\n+        case Token.SCRIPT:\n+        case Token.TRY:\n+        case Token.FINALLY:\n+            return false;\n+        case Token.FUNCTION:\n+            return n \u003d\u003d parent.getFirstChild().getNext();\n+        case Token.WHILE:\n+        case Token.DO:\n+        case Token.IF:\n+            return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n+        case Token.FOR:\n+            if (parent.getChildCount() \u003d\u003d 4) {\n+                return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n+            } else {\n+                return n !\u003d parent.getLastChild();\n+            }\n+        case Token.SWITCH:\n+        case Token.CASE:\n+        case Token.CATCH:\n+        case Token.WITH:\n+            return n \u003d\u003d parent.getFirstChild();\n+        default:\n+            return true;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    if (parent \u003d\u003d null) {\n        return true;\n    }\n    switch(parent.getType()) {\n        case Token.BLOCK:\n        case Token.SCRIPT:\n        case Token.TRY:\n        case Token.FINALLY:\n            return false;\n        case Token.FUNCTION:\n            return n \u003d\u003d parent.getFirstChild().getNext();\n        case Token.WHILE:\n        case Token.DO:\n        case Token.IF:\n            return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n        case Token.FOR:\n            if (parent.getChildCount() \u003d\u003d 4) {\n                return NodeUtil.getConditionExpression(parent) \u003d\u003d n;\n            } else {\n                return n !\u003d parent.getLastChild();\n            }\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.WITH:\n            return n \u003d\u003d parent.getFirstChild();\n        default:\n            return true;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 136,
      "functionName": "shouldTraverse",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}