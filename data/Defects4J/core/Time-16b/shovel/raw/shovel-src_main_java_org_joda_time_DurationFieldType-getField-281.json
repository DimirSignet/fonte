{
  "origin": "codeshovel",
  "repositoryName": "Time-16b",
  "repositoryPath": "/tmp/Time-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DurationFieldType.java",
  "functionName": "getField",
  "functionId": "$getField___chronology-Chronology",
  "sourceFilePath": "src/main/java/org/joda/time/DurationFieldType.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 281,
  "functionEndLine": 313,
  "numCommitsSeen": 17,
  "timeTaken": 1994,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "3fba96d753ba2c20ef2b53487b13b323f23aced7",
    "b9e9ad74618b8922a061c3dcea2569891404eacd",
    "c5a0687412741edbf6e78fb779a24153b8a5d189",
    "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "3fba96d753ba2c20ef2b53487b13b323f23aced7": "Yformatchange",
    "b9e9ad74618b8922a061c3dcea2569891404eacd": "Ybodychange",
    "c5a0687412741edbf6e78fb779a24153b8a5d189": "Ybodychange",
    "1a5b0ef6e985dd63e51eba610222650a4b2a41f4": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HALFDAYS:\n            return chronology.halfdays();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new InternalError();\n    }\n}",
      "path": "src/main/java/org/joda/time/DurationFieldType.java",
      "functionStartLine": 263,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/DurationFieldType.java",
        "newPath": "src/main/java/org/joda/time/DurationFieldType.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HALFDAYS:\n            return chronology.halfdays();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new InternalError();\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/DurationFieldType.java",
      "functionStartLine": 263,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/DurationFieldType.java"
      }
    },
    "3fba96d753ba2c20ef2b53487b13b323f23aced7": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle fixes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@563 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/6/04, 12:50 AM",
      "commitName": "3fba96d753ba2c20ef2b53487b13b323f23aced7",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "9/14/04, 3:59 PM",
      "commitNameOld": "b9e9ad74618b8922a061c3dcea2569891404eacd",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 52.41,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HALFDAYS:\n            return chronology.halfdays();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new InternalError();\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
      "functionStartLine": 301,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "b9e9ad74618b8922a061c3dcea2569891404eacd": {
      "type": "Ybodychange",
      "commitMessage": "Increase test coverage\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@510 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/14/04, 3:59 PM",
      "commitName": "b9e9ad74618b8922a061c3dcea2569891404eacd",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "9/5/04, 5:25 AM",
      "commitNameOld": "c4712e0e30d931ebe6cd47c299bce339c39e10a2",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 9.44,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HALFDAYS:\n            return chronology.halfdays();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new InternalError();\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
      "functionStartLine": 301,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,31 @@\n public DurationField getField(Chronology chronology) {\n     chronology \u003d DateTimeUtils.getChronology(chronology);\n     switch(iOrdinal) {\n         case ERAS:\n             return chronology.eras();\n         case CENTURIES:\n             return chronology.centuries();\n         case WEEKYEARS:\n             return chronology.weekyears();\n         case YEARS:\n             return chronology.years();\n         case MONTHS:\n             return chronology.months();\n         case WEEKS:\n             return chronology.weeks();\n         case DAYS:\n             return chronology.days();\n         case HALFDAYS:\n             return chronology.halfdays();\n         case HOURS:\n             return chronology.hours();\n         case MINUTES:\n             return chronology.minutes();\n         case SECONDS:\n             return chronology.seconds();\n         case MILLIS:\n             return chronology.millis();\n         default:\n-            throw new IllegalStateException();\n+            throw new InternalError();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c5a0687412741edbf6e78fb779a24153b8a5d189": {
      "type": "Ybodychange",
      "commitMessage": "Add halfdays and weekyearOfCentury fields\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@471 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/3/04, 1:48 PM",
      "commitName": "c5a0687412741edbf6e78fb779a24153b8a5d189",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "9/2/04, 11:52 PM",
      "commitNameOld": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 0.58,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HALFDAYS:\n            return chronology.halfdays();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new IllegalStateException();\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
      "functionStartLine": 280,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,31 @@\n public DurationField getField(Chronology chronology) {\n     chronology \u003d DateTimeUtils.getChronology(chronology);\n     switch(iOrdinal) {\n         case ERAS:\n             return chronology.eras();\n         case CENTURIES:\n             return chronology.centuries();\n         case WEEKYEARS:\n             return chronology.weekyears();\n         case YEARS:\n             return chronology.years();\n         case MONTHS:\n             return chronology.months();\n         case WEEKS:\n             return chronology.weeks();\n         case DAYS:\n             return chronology.days();\n+        case HALFDAYS:\n+            return chronology.halfdays();\n         case HOURS:\n             return chronology.hours();\n         case MINUTES:\n             return chronology.minutes();\n         case SECONDS:\n             return chronology.seconds();\n         case MILLIS:\n             return chronology.millis();\n         default:\n             throw new IllegalStateException();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1a5b0ef6e985dd63e51eba610222650a4b2a41f4": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
      "commitMessage": "Moved field selector methods to field type classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@470 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/2/04, 11:52 PM",
      "commitName": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Moved field selector methods to field type classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@470 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "9/2/04, 11:52 PM",
          "commitName": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "9/2/04, 6:13 PM",
          "commitNameOld": "24481f10ccfe00f1e0e1566c63db861e33085862",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new IllegalStateException();\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
          "functionStartLine": 280,
          "functionName": "getField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,29 +1,29 @@\n-public DurationField getField(DurationFieldType type) {\n-    if (type \u003d\u003d DurationFieldType.millis()) {\n-        return millis();\n-    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n-        return seconds();\n-    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n-        return minutes();\n-    } else if (type \u003d\u003d DurationFieldType.hours()) {\n-        return hours();\n-    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n-        return halfdays();\n-    } else if (type \u003d\u003d DurationFieldType.days()) {\n-        return days();\n-    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n-        return weeks();\n-    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n-        return weekyears();\n-    } else if (type \u003d\u003d DurationFieldType.months()) {\n-        return months();\n-    } else if (type \u003d\u003d DurationFieldType.years()) {\n-        return years();\n-    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n-        return centuries();\n-    } else if (type \u003d\u003d DurationFieldType.eras()) {\n-        return eras();\n-    } else {\n-        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n+public DurationField getField(Chronology chronology) {\n+    chronology \u003d DateTimeUtils.getChronology(chronology);\n+    switch(iOrdinal) {\n+        case ERAS:\n+            return chronology.eras();\n+        case CENTURIES:\n+            return chronology.centuries();\n+        case WEEKYEARS:\n+            return chronology.weekyears();\n+        case YEARS:\n+            return chronology.years();\n+        case MONTHS:\n+            return chronology.months();\n+        case WEEKS:\n+            return chronology.weeks();\n+        case DAYS:\n+            return chronology.days();\n+        case HOURS:\n+            return chronology.hours();\n+        case MINUTES:\n+            return chronology.minutes();\n+        case SECONDS:\n+            return chronology.seconds();\n+        case MILLIS:\n+            return chronology.millis();\n+        default:\n+            throw new IllegalStateException();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
            "oldMethodName": "getField",
            "newMethodName": "getField"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moved field selector methods to field type classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@470 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "9/2/04, 11:52 PM",
          "commitName": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "9/2/04, 6:13 PM",
          "commitNameOld": "24481f10ccfe00f1e0e1566c63db861e33085862",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new IllegalStateException();\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
          "functionStartLine": 280,
          "functionName": "getField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,29 +1,29 @@\n-public DurationField getField(DurationFieldType type) {\n-    if (type \u003d\u003d DurationFieldType.millis()) {\n-        return millis();\n-    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n-        return seconds();\n-    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n-        return minutes();\n-    } else if (type \u003d\u003d DurationFieldType.hours()) {\n-        return hours();\n-    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n-        return halfdays();\n-    } else if (type \u003d\u003d DurationFieldType.days()) {\n-        return days();\n-    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n-        return weeks();\n-    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n-        return weekyears();\n-    } else if (type \u003d\u003d DurationFieldType.months()) {\n-        return months();\n-    } else if (type \u003d\u003d DurationFieldType.years()) {\n-        return years();\n-    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n-        return centuries();\n-    } else if (type \u003d\u003d DurationFieldType.eras()) {\n-        return eras();\n-    } else {\n-        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n+public DurationField getField(Chronology chronology) {\n+    chronology \u003d DateTimeUtils.getChronology(chronology);\n+    switch(iOrdinal) {\n+        case ERAS:\n+            return chronology.eras();\n+        case CENTURIES:\n+            return chronology.centuries();\n+        case WEEKYEARS:\n+            return chronology.weekyears();\n+        case YEARS:\n+            return chronology.years();\n+        case MONTHS:\n+            return chronology.months();\n+        case WEEKS:\n+            return chronology.weeks();\n+        case DAYS:\n+            return chronology.days();\n+        case HOURS:\n+            return chronology.hours();\n+        case MINUTES:\n+            return chronology.minutes();\n+        case SECONDS:\n+            return chronology.seconds();\n+        case MILLIS:\n+            return chronology.millis();\n+        default:\n+            throw new IllegalStateException();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Moved field selector methods to field type classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@470 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "9/2/04, 11:52 PM",
          "commitName": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "9/2/04, 6:13 PM",
          "commitNameOld": "24481f10ccfe00f1e0e1566c63db861e33085862",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new IllegalStateException();\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
          "functionStartLine": 280,
          "functionName": "getField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,29 +1,29 @@\n-public DurationField getField(DurationFieldType type) {\n-    if (type \u003d\u003d DurationFieldType.millis()) {\n-        return millis();\n-    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n-        return seconds();\n-    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n-        return minutes();\n-    } else if (type \u003d\u003d DurationFieldType.hours()) {\n-        return hours();\n-    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n-        return halfdays();\n-    } else if (type \u003d\u003d DurationFieldType.days()) {\n-        return days();\n-    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n-        return weeks();\n-    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n-        return weekyears();\n-    } else if (type \u003d\u003d DurationFieldType.months()) {\n-        return months();\n-    } else if (type \u003d\u003d DurationFieldType.years()) {\n-        return years();\n-    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n-        return centuries();\n-    } else if (type \u003d\u003d DurationFieldType.eras()) {\n-        return eras();\n-    } else {\n-        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n+public DurationField getField(Chronology chronology) {\n+    chronology \u003d DateTimeUtils.getChronology(chronology);\n+    switch(iOrdinal) {\n+        case ERAS:\n+            return chronology.eras();\n+        case CENTURIES:\n+            return chronology.centuries();\n+        case WEEKYEARS:\n+            return chronology.weekyears();\n+        case YEARS:\n+            return chronology.years();\n+        case MONTHS:\n+            return chronology.months();\n+        case WEEKS:\n+            return chronology.weeks();\n+        case DAYS:\n+            return chronology.days();\n+        case HOURS:\n+            return chronology.hours();\n+        case MINUTES:\n+            return chronology.minutes();\n+        case SECONDS:\n+            return chronology.seconds();\n+        case MILLIS:\n+            return chronology.millis();\n+        default:\n+            throw new IllegalStateException();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Get the field from the type.\n\u003cp\u003e\nThis method obtains the \u003ccode\u003eDurationField\u003c/code\u003e for the \u003ccode\u003eDurationFieldType\u003c/code\u003e.\nIt is essentially a generic way of calling one of the field methods.\n\n@param type a field type, usually obtained from DurationFieldType\n@return the chronology field\n@throws IllegalArgumentException if the field is null\n",
            "newValue": ""
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Moved field selector methods to field type classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@470 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "9/2/04, 11:52 PM",
          "commitName": "1a5b0ef6e985dd63e51eba610222650a4b2a41f4",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "9/2/04, 6:13 PM",
          "commitNameOld": "24481f10ccfe00f1e0e1566c63db861e33085862",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public DurationField getField(Chronology chronology) {\n    chronology \u003d DateTimeUtils.getChronology(chronology);\n    switch(iOrdinal) {\n        case ERAS:\n            return chronology.eras();\n        case CENTURIES:\n            return chronology.centuries();\n        case WEEKYEARS:\n            return chronology.weekyears();\n        case YEARS:\n            return chronology.years();\n        case MONTHS:\n            return chronology.months();\n        case WEEKS:\n            return chronology.weeks();\n        case DAYS:\n            return chronology.days();\n        case HOURS:\n            return chronology.hours();\n        case MINUTES:\n            return chronology.minutes();\n        case SECONDS:\n            return chronology.seconds();\n        case MILLIS:\n            return chronology.millis();\n        default:\n            throw new IllegalStateException();\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/DurationFieldType.java",
          "functionStartLine": 280,
          "functionName": "getField",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,29 +1,29 @@\n-public DurationField getField(DurationFieldType type) {\n-    if (type \u003d\u003d DurationFieldType.millis()) {\n-        return millis();\n-    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n-        return seconds();\n-    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n-        return minutes();\n-    } else if (type \u003d\u003d DurationFieldType.hours()) {\n-        return hours();\n-    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n-        return halfdays();\n-    } else if (type \u003d\u003d DurationFieldType.days()) {\n-        return days();\n-    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n-        return weeks();\n-    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n-        return weekyears();\n-    } else if (type \u003d\u003d DurationFieldType.months()) {\n-        return months();\n-    } else if (type \u003d\u003d DurationFieldType.years()) {\n-        return years();\n-    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n-        return centuries();\n-    } else if (type \u003d\u003d DurationFieldType.eras()) {\n-        return eras();\n-    } else {\n-        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n+public DurationField getField(Chronology chronology) {\n+    chronology \u003d DateTimeUtils.getChronology(chronology);\n+    switch(iOrdinal) {\n+        case ERAS:\n+            return chronology.eras();\n+        case CENTURIES:\n+            return chronology.centuries();\n+        case WEEKYEARS:\n+            return chronology.weekyears();\n+        case YEARS:\n+            return chronology.years();\n+        case MONTHS:\n+            return chronology.months();\n+        case WEEKS:\n+            return chronology.weeks();\n+        case DAYS:\n+            return chronology.days();\n+        case HOURS:\n+            return chronology.hours();\n+        case MINUTES:\n+            return chronology.minutes();\n+        case SECONDS:\n+            return chronology.seconds();\n+        case MILLIS:\n+            return chronology.millis();\n+        default:\n+            throw new IllegalStateException();\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[type-DurationFieldType]",
            "newValue": "[chronology-Chronology]"
          }
        }
      ]
    },
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48": {
      "type": "Yintroduced",
      "commitMessage": "Use DurationFieldType in DurationField\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@468 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/2/04, 3:47 PM",
      "commitName": "0d18055d0b3c2e687197a8651b3a06e097fe5c48",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,29 @@\n+public DurationField getField(DurationFieldType type) {\n+    if (type \u003d\u003d DurationFieldType.millis()) {\n+        return millis();\n+    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n+        return seconds();\n+    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n+        return minutes();\n+    } else if (type \u003d\u003d DurationFieldType.hours()) {\n+        return hours();\n+    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n+        return halfdays();\n+    } else if (type \u003d\u003d DurationFieldType.days()) {\n+        return days();\n+    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n+        return weeks();\n+    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n+        return weekyears();\n+    } else if (type \u003d\u003d DurationFieldType.months()) {\n+        return months();\n+    } else if (type \u003d\u003d DurationFieldType.years()) {\n+        return years();\n+    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n+        return centuries();\n+    } else if (type \u003d\u003d DurationFieldType.eras()) {\n+        return eras();\n+    } else {\n+        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public DurationField getField(DurationFieldType type) {\n    if (type \u003d\u003d DurationFieldType.millis()) {\n        return millis();\n    } else if (type \u003d\u003d DurationFieldType.seconds()) {\n        return seconds();\n    } else if (type \u003d\u003d DurationFieldType.minutes()) {\n        return minutes();\n    } else if (type \u003d\u003d DurationFieldType.hours()) {\n        return hours();\n    } else if (type \u003d\u003d DurationFieldType.halfdays()) {\n        return halfdays();\n    } else if (type \u003d\u003d DurationFieldType.days()) {\n        return days();\n    } else if (type \u003d\u003d DurationFieldType.weeks()) {\n        return weeks();\n    } else if (type \u003d\u003d DurationFieldType.weekyears()) {\n        return weekyears();\n    } else if (type \u003d\u003d DurationFieldType.months()) {\n        return months();\n    } else if (type \u003d\u003d DurationFieldType.years()) {\n        return years();\n    } else if (type \u003d\u003d DurationFieldType.centuries()) {\n        return centuries();\n    } else if (type \u003d\u003d DurationFieldType.eras()) {\n        return eras();\n    } else {\n        throw new IllegalArgumentException(\"Unrecognised field: \" + type);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseChronology.java",
      "functionStartLine": 313,
      "functionName": "getField",
      "functionAnnotation": "",
      "functionDoc": "Get the field from the type.\n\u003cp\u003e\nThis method obtains the \u003ccode\u003eDurationField\u003c/code\u003e for the \u003ccode\u003eDurationFieldType\u003c/code\u003e.\nIt is essentially a generic way of calling one of the field methods.\n\n@param type a field type, usually obtained from DurationFieldType\n@return the chronology field\n@throws IllegalArgumentException if the field is null\n"
    }
  }
}