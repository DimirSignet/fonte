{
  "origin": "codeshovel",
  "repositoryName": "Time-16b",
  "repositoryPath": "/tmp/Time-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JulianChronology.java",
  "functionName": "calculateFirstDayOfYearMillis",
  "functionId": "calculateFirstDayOfYearMillis___year-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/JulianChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 214,
  "functionEndLine": 238,
  "numCommitsSeen": 27,
  "timeTaken": 3492,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "35808a6d6e33fdeb3c6e0472286dfb1215dde09e",
    "a498adb4a3d6b355cd7e653e55b179acfbf3f4f9",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "35808a6d6e33fdeb3c6e0472286dfb1215dde09e": "Ybodychange",
    "a498adb4a3d6b355cd7e653e55b179acfbf3f4f9": "Ybodychange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
      "path": "src/main/java/org/joda/time/chrono/JulianChronology.java",
      "functionStartLine": 214,
      "functionName": "calculateFirstDayOfYearMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/JulianChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java",
      "functionStartLine": 214,
      "functionName": "calculateFirstDayOfYearMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java"
      }
    },
    "35808a6d6e33fdeb3c6e0472286dfb1215dde09e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed overflow when getting year field from instants at Long.MAX_VALUE and LONG.MIN_VALUE.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1051 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "3/19/06, 1:46 PM",
      "commitName": "35808a6d6e33fdeb3c6e0472286dfb1215dde09e",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "12/5/05, 2:46 PM",
      "commitNameOld": "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 103.96,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
      "functionStartLine": 214,
      "functionName": "calculateFirstDayOfYearMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,14 @@\n long calculateFirstDayOfYearMillis(int year) {\n-    if (year \u003e MAX_YEAR) {\n-        throw new ArithmeticException(\"Year is too large: \" + year + \" \u003e \" + MAX_YEAR);\n-    }\n-    if (year \u003c MIN_YEAR) {\n-        throw new ArithmeticException(\"Year is too small: \" + year + \" \u003c \" + MIN_YEAR);\n-    }\n     int relativeYear \u003d year - 1968;\n     int leapYears;\n     if (relativeYear \u003c\u003d 0) {\n         leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n     } else {\n         leapYears \u003d relativeYear \u003e\u003e 2;\n         if (!isLeapYear(year)) {\n             leapYears++;\n         }\n     }\n     long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n     return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a498adb4a3d6b355cd7e653e55b179acfbf3f4f9": {
      "type": "Ybodychange",
      "commitMessage": "Overflowed calculations involving year throw ArithmeticException rather than produce a bogus result.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@791 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/19/05, 9:48 PM",
      "commitName": "a498adb4a3d6b355cd7e653e55b179acfbf3f4f9",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "6/8/05, 3:57 PM",
      "commitNameOld": "7b7cb44562d5942add1f093111e84a5836780de4",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 11.24,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    if (year \u003e MAX_YEAR) {\n        throw new ArithmeticException(\"Year is too large: \" + year + \" \u003e \" + MAX_YEAR);\n    }\n    if (year \u003c MIN_YEAR) {\n        throw new ArithmeticException(\"Year is too small: \" + year + \" \u003c \" + MIN_YEAR);\n    }\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
      "functionStartLine": 213,
      "functionName": "calculateFirstDayOfYearMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,20 @@\n long calculateFirstDayOfYearMillis(int year) {\n+    if (year \u003e MAX_YEAR) {\n+        throw new ArithmeticException(\"Year is too large: \" + year + \" \u003e \" + MAX_YEAR);\n+    }\n+    if (year \u003c MIN_YEAR) {\n+        throw new ArithmeticException(\"Year is too small: \" + year + \" \u003c \" + MIN_YEAR);\n+    }\n     int relativeYear \u003d year - 1968;\n     int leapYears;\n     if (relativeYear \u003c\u003d 0) {\n         leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n     } else {\n         leapYears \u003d relativeYear \u003e\u003e 2;\n         if (!isLeapYear(year)) {\n             leapYears++;\n         }\n     }\n     long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n     return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
          "functionStartLine": 223,
          "functionName": "calculateFirstDayOfYearMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-protected long calculateFirstDayOfYearMillis(int year) {\n+long calculateFirstDayOfYearMillis(int year) {\n     int relativeYear \u003d year - 1968;\n     int leapYears;\n     if (relativeYear \u003c\u003d 0) {\n         leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n     } else {\n         leapYears \u003d relativeYear \u003e\u003e 2;\n         if (!isLeapYear(year)) {\n             leapYears++;\n         }\n     }\n     long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    return millis - (366L + 365 - 13) * DateTimeConstants.MILLIS_PER_DAY;\n+    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/gj/JulianWithYearZeroChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
            "oldMethodName": "calculateFirstDayOfYearMillis",
            "newMethodName": "calculateFirstDayOfYearMillis"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
          "functionStartLine": 223,
          "functionName": "calculateFirstDayOfYearMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-protected long calculateFirstDayOfYearMillis(int year) {\n+long calculateFirstDayOfYearMillis(int year) {\n     int relativeYear \u003d year - 1968;\n     int leapYears;\n     if (relativeYear \u003c\u003d 0) {\n         leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n     } else {\n         leapYears \u003d relativeYear \u003e\u003e 2;\n         if (!isLeapYear(year)) {\n             leapYears++;\n         }\n     }\n     long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    return millis - (366L + 365 - 13) * DateTimeConstants.MILLIS_PER_DAY;\n+    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/JulianChronology.java",
          "functionStartLine": 223,
          "functionName": "calculateFirstDayOfYearMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,14 @@\n-protected long calculateFirstDayOfYearMillis(int year) {\n+long calculateFirstDayOfYearMillis(int year) {\n     int relativeYear \u003d year - 1968;\n     int leapYears;\n     if (relativeYear \u003c\u003d 0) {\n         leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n     } else {\n         leapYears \u003d relativeYear \u003e\u003e 2;\n         if (!isLeapYear(year)) {\n             leapYears++;\n         }\n     }\n     long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    return millis - (366L + 365 - 13) * DateTimeConstants.MILLIS_PER_DAY;\n+    return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,14 @@\n+protected long calculateFirstDayOfYearMillis(int year) {\n+    int relativeYear \u003d year - 1968;\n+    int leapYears;\n+    if (relativeYear \u003c\u003d 0) {\n+        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n+    } else {\n+        leapYears \u003d relativeYear \u003e\u003e 2;\n+        if (!isLeapYear(year)) {\n+            leapYears++;\n+        }\n+    }\n+    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n+    return millis - (366L + 365 - 13) * DateTimeConstants.MILLIS_PER_DAY;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected long calculateFirstDayOfYearMillis(int year) {\n    int relativeYear \u003d year - 1968;\n    int leapYears;\n    if (relativeYear \u003c\u003d 0) {\n        leapYears \u003d (relativeYear + 3) \u003e\u003e 2;\n    } else {\n        leapYears \u003d relativeYear \u003e\u003e 2;\n        if (!isLeapYear(year)) {\n            leapYears++;\n        }\n    }\n    long millis \u003d (relativeYear * 365L + leapYears) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    return millis - (366L + 365 - 13) * DateTimeConstants.MILLIS_PER_DAY;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/gj/JulianWithYearZeroChronology.java",
      "functionStartLine": 78,
      "functionName": "calculateFirstDayOfYearMillis",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}