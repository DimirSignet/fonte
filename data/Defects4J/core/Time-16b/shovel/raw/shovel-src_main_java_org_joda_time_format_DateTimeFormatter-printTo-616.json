{
  "origin": "codeshovel",
  "repositoryName": "Time-16b",
  "repositoryPath": "/tmp/Time-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeFormatter.java",
  "functionName": "printTo",
  "functionId": "printTo___buf-StringBuffer__instant-long__chrono-Chronology",
  "sourceFilePath": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 616,
  "functionEndLine": 631,
  "numCommitsSeen": 50,
  "timeTaken": 3758,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "26dc14b0c91afee273ccfb885d6cd3431e2b2bb3",
    "37ea1f66a344bd315e101a31d55ccf0d64b37f6a",
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd",
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "26dc14b0c91afee273ccfb885d6cd3431e2b2bb3": "Ybodychange",
    "37ea1f66a344bd315e101a31d55ccf0d64b37f6a": "Ybodychange",
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808": "Ybodychange",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": "Ybodychange",
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparametermetachange,Yparameterchange)",
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737": "Ybodychange",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    DateTimePrinter printer \u003d requirePrinter();\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    long adjustedInstant \u003d instant + offset;\n    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n        zone \u003d DateTimeZone.UTC;\n        offset \u003d 0;\n        adjustedInstant \u003d instant;\n    }\n    printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n}",
      "path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
      "functionStartLine": 615,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "newPath": "src/main/java/org/joda/time/format/DateTimeFormatter.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    DateTimePrinter printer \u003d requirePrinter();\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    long adjustedInstant \u003d instant + offset;\n    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n        zone \u003d DateTimeZone.UTC;\n        offset \u003d 0;\n        adjustedInstant \u003d instant;\n    }\n    printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
      "functionStartLine": 577,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java"
      }
    },
    "26dc14b0c91afee273ccfb885d6cd3431e2b2bb3": {
      "type": "Ybodychange",
      "commitMessage": "Eliminate redundant checks.\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1249 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/9/07, 10:49 AM",
      "commitName": "26dc14b0c91afee273ccfb885d6cd3431e2b2bb3",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "3/26/06, 3:41 PM",
      "commitNameOld": "83df500ae8c247c268e4505054aad99ed7df8999",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 531.76,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    DateTimePrinter printer \u003d requirePrinter();\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    long adjustedInstant \u003d instant + offset;\n    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n        zone \u003d DateTimeZone.UTC;\n        offset \u003d 0;\n        adjustedInstant \u003d instant;\n    }\n    printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
      "functionStartLine": 508,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,13 @@\n private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    DateTimePrinter printer \u003d requirePrinter();\n     chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n     long adjustedInstant \u003d instant + offset;\n     if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n         zone \u003d DateTimeZone.UTC;\n         offset \u003d 0;\n         adjustedInstant \u003d instant;\n     }\n-    iPrinter.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n+    printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "37ea1f66a344bd315e101a31d55ccf0d64b37f6a": {
      "type": "Ybodychange",
      "commitMessage": "Make sure display zone is also UTC.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@897 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/7/05, 11:54 AM",
      "commitName": "37ea1f66a344bd315e101a31d55ccf0d64b37f6a",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "9/7/05, 11:26 AM",
      "commitNameOld": "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    long adjustedInstant \u003d instant + offset;\n    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n        zone \u003d DateTimeZone.UTC;\n        offset \u003d 0;\n        adjustedInstant \u003d instant;\n    }\n    iPrinter.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
      "functionStartLine": 522,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n     chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n     long adjustedInstant \u003d instant + offset;\n     if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n-        adjustedInstant \u003d instant;\n+        zone \u003d DateTimeZone.UTC;\n         offset \u003d 0;\n+        adjustedInstant \u003d instant;\n     }\n     iPrinter.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808": {
      "type": "Ybodychange",
      "commitMessage": "Improved overflow detection and handling.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@895 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/7/05, 11:26 AM",
      "commitName": "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "8/3/05, 3:24 PM",
      "commitNameOld": "df16fe1bb49ac761bed5f46e081bf2166428dd7d",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 34.84,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    long adjustedInstant \u003d instant + offset;\n    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n        adjustedInstant \u003d instant;\n        offset \u003d 0;\n    }\n    iPrinter.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
      "functionStartLine": 522,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,11 @@\n private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n     chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n-    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n+    long adjustedInstant \u003d instant + offset;\n+    if ((instant ^ adjustedInstant) \u003c 0 \u0026\u0026 (instant ^ offset) \u003e\u003d 0) {\n+        adjustedInstant \u003d instant;\n+        offset \u003d 0;\n+    }\n+    iPrinter.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/12/05, 6:39 PM",
      "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 4:47 PM",
          "commitNameOld": "c012c27530466440b3c067fc60c6c9edb9ae784b",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
          "functionStartLine": 433,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n-public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n-    chrono \u003d DateTimeUtils.getChronology(chrono);\n+private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n-    ((DateTimePrinter) this).printTo(buf, instant + offset, chrono.withUTC(), offset, zone);\n+    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
            "newPath": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
            "oldMethodName": "printTo",
            "newMethodName": "printTo"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 4:47 PM",
          "commitNameOld": "c012c27530466440b3c067fc60c6c9edb9ae784b",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
          "functionStartLine": 433,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n-public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n-    chrono \u003d DateTimeUtils.getChronology(chrono);\n+private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n-    ((DateTimePrinter) this).printTo(buf, instant + offset, chrono.withUTC(), offset, zone);\n+    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 4:47 PM",
          "commitNameOld": "c012c27530466440b3c067fc60c6c9edb9ae784b",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d selectChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
          "functionStartLine": 433,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,6 @@\n-public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n-    chrono \u003d DateTimeUtils.getChronology(chrono);\n+private void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d selectChronology(chrono);\n     DateTimeZone zone \u003d chrono.getZone();\n     int offset \u003d zone.getOffset(instant);\n-    ((DateTimePrinter) this).printTo(buf, instant + offset, chrono.withUTC(), offset, zone);\n+    iPrinter.printTo(buf, instant + offset, chrono.withUTC(), offset, zone, iLocale);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": {
      "type": "Ybodychange",
      "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/12/04, 8:21 PM",
      "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "11/4/04, 3:53 PM",
      "commitNameOld": "ccddaff1a7295a4cb39f77589d781e760fd3b382",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 38.19,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    DateTimeZone zone \u003d chrono.getZone();\n    int offset \u003d zone.getOffset(instant);\n    ((DateTimePrinter) this).printTo(buf, instant + offset, chrono.withUTC(), offset, zone);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
      "functionStartLine": 127,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,6 @@\n public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n     chrono \u003d DateTimeUtils.getChronology(chrono);\n-    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n+    DateTimeZone zone \u003d chrono.getZone();\n+    int offset \u003d zone.getOffset(instant);\n+    ((DateTimePrinter) this).printTo(buf, instant + offset, chrono.withUTC(), offset, zone);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparametermetachange,Yparameterchange)",
      "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "10/28/04, 3:56 PM",
      "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/27/04, 7:35 PM",
          "commitNameOld": "369388fcda06e845e28911926d82cb8f634b4bba",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 126,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,4 @@\n-public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n-    if (zone \u003d\u003d null) {\n-        zone \u003d getZone();\n-    }\n-    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n+public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d DateTimeUtils.getChronology(chrono);\n+    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
            "newPath": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
            "oldMethodName": "printTo",
            "newMethodName": "printTo"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/27/04, 7:35 PM",
          "commitNameOld": "369388fcda06e845e28911926d82cb8f634b4bba",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 126,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,4 @@\n-public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n-    if (zone \u003d\u003d null) {\n-        zone \u003d getZone();\n-    }\n-    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n+public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d DateTimeUtils.getChronology(chrono);\n+    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/27/04, 7:35 PM",
          "commitNameOld": "369388fcda06e845e28911926d82cb8f634b4bba",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 126,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,4 @@\n-public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n-    if (zone \u003d\u003d null) {\n-        zone \u003d getZone();\n-    }\n-    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n+public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d DateTimeUtils.getChronology(chrono);\n+    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/27/04, 7:35 PM",
          "commitNameOld": "369388fcda06e845e28911926d82cb8f634b4bba",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 126,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,4 @@\n-public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n-    if (zone \u003d\u003d null) {\n-        zone \u003d getZone();\n-    }\n-    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n+public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d DateTimeUtils.getChronology(chrono);\n+    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[out-Writer(modifiers-final), instant-long(modifiers-final), zone-DateTimeZone]",
            "newValue": "[buf-StringBuffer, instant-long, chrono-Chronology]"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/27/04, 7:35 PM",
          "commitNameOld": "369388fcda06e845e28911926d82cb8f634b4bba",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n    chrono \u003d DateTimeUtils.getChronology(chrono);\n    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 126,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,6 +1,4 @@\n-public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n-    if (zone \u003d\u003d null) {\n-        zone \u003d getZone();\n-    }\n-    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n+public void printTo(StringBuffer buf, long instant, Chronology chrono) {\n+    chrono \u003d DateTimeUtils.getChronology(chrono);\n+    printTo(buf, instant + chrono.getZone().getOffset(instant), chrono.withUTC(), instant, chrono);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[out-Writer(modifiers-final), instant-long(modifiers-final), zone-DateTimeZone]",
            "newValue": "[buf-StringBuffer, instant-long, chrono-Chronology]"
          }
        }
      ]
    },
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737": {
      "type": "Ybodychange",
      "commitMessage": "Rename getDateTimeZone methods to getZone etc\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@177 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "4/14/04, 4:43 PM",
      "commitName": "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "1/3/04, 4:24 AM",
      "commitNameOld": "35aca9c2020c7c426b67fbe19e57ddcb9f1b389d",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 102.47,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "actualSource": "public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n    if (zone \u003d\u003d null) {\n        zone \u003d getZone();\n    }\n    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n}",
      "path": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
      "functionStartLine": 163,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,6 @@\n public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n     if (zone \u003d\u003d null) {\n-        zone \u003d getDateTimeZone();\n+        zone \u003d getZone();\n     }\n     ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n    if (zone \u003d\u003d null) {\n        zone \u003d getDateTimeZone();\n    }\n    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n}",
          "path": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
          "functionStartLine": 163,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,6 @@\n-public void printTo(StringBuffer buf, long millisUTC, DateTimeZone zone) {\n-    if (zone !\u003d null) {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, zone, millisUTC + zone.getOffset(millisUTC));\n-    } else {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, null, millisUTC);\n+public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n+    if (zone \u003d\u003d null) {\n+        zone \u003d getDateTimeZone();\n     }\n+    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[buf-StringBuffer, millisUTC-long, zone-DateTimeZone]",
            "newValue": "[out-Writer(modifiers-final), instant-long(modifiers-final), zone-DateTimeZone]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n    if (zone \u003d\u003d null) {\n        zone \u003d getDateTimeZone();\n    }\n    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n}",
          "path": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
          "functionStartLine": 163,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,6 @@\n-public void printTo(StringBuffer buf, long millisUTC, DateTimeZone zone) {\n-    if (zone !\u003d null) {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, zone, millisUTC + zone.getOffset(millisUTC));\n-    } else {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, null, millisUTC);\n+public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n+    if (zone \u003d\u003d null) {\n+        zone \u003d getDateTimeZone();\n     }\n+    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n    if (zone \u003d\u003d null) {\n        zone \u003d getDateTimeZone();\n    }\n    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n}",
          "path": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
          "functionStartLine": 163,
          "functionName": "printTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,6 @@\n-public void printTo(StringBuffer buf, long millisUTC, DateTimeZone zone) {\n-    if (zone !\u003d null) {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, zone, millisUTC + zone.getOffset(millisUTC));\n-    } else {\n-        ((DateTimePrinter) this).printTo(buf, millisUTC, null, millisUTC);\n+public void printTo(final Writer out, final long instant, DateTimeZone zone) throws IOException {\n+    if (zone \u003d\u003d null) {\n+        zone \u003d getDateTimeZone();\n     }\n+    ((DateTimePrinter) this).printTo(out, instant, zone, instant + zone.getOffset(instant));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,7 @@\n+public void printTo(StringBuffer buf, long millisUTC, DateTimeZone zone) {\n+    if (zone !\u003d null) {\n+        ((DateTimePrinter) this).printTo(buf, millisUTC, zone, millisUTC + zone.getOffset(millisUTC));\n+    } else {\n+        ((DateTimePrinter) this).printTo(buf, millisUTC, null, millisUTC);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void printTo(StringBuffer buf, long millisUTC, DateTimeZone zone) {\n    if (zone !\u003d null) {\n        ((DateTimePrinter) this).printTo(buf, millisUTC, zone, millisUTC + zone.getOffset(millisUTC));\n    } else {\n        ((DateTimePrinter) this).printTo(buf, millisUTC, null, millisUTC);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java",
      "functionStartLine": 168,
      "functionName": "printTo",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}