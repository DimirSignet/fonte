{
  "origin": "codeshovel",
  "repositoryName": "Time-16b",
  "repositoryPath": "/tmp/Time-16b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FieldUtils.java",
  "functionName": "verifyValueBounds",
  "functionId": "verifyValueBounds___field-DateTimeField__value-int__lowerBound-int__upperBound-int",
  "sourceFilePath": "src/main/java/org/joda/time/field/FieldUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
  "functionStartLine": 214,
  "functionEndLine": 221,
  "numCommitsSeen": 23,
  "timeTaken": 3194,
  "changeHistory": [
    "9d991bcfd898a7b06239dbe1788774ba5106562b",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "7804df458169ae3a64e8481d8c5cdf84827552c2",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Ymultichange(Ybodychange,Ydocchange)",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yfilerename",
    "7804df458169ae3a64e8481d8c5cdf84827552c2": "Ybodychange",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": {
      "type": "Ybodychange",
      "commitMessage": "use the Integer cache where possible\n",
      "commitDate": "7/14/11, 8:56 PM",
      "commitName": "9d991bcfd898a7b06239dbe1788774ba5106562b",
      "commitAuthor": "Dave Brosius",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 59.45,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(field.getType(), Integer.valueOf(value), Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n    }\n}",
      "path": "src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 212,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
      "diff": "@@ -1,5 +1,5 @@\n public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n+        throw new IllegalFieldValueException(field.getType(), Integer.valueOf(value), Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 212,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
        "newPath": "src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 212,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "5/30/05, 11:20 AM",
          "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 111.77,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
          "functionStartLine": 141,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value \" + value + \" for \" + field.getName() + \" must be in the range [\" + lowerBound + \u0027,\u0027 + upperBound + \u0027]\u0027);\n+        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "5/30/05, 11:20 AM",
          "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 111.77,
          "commitsBetweenForRepo": 89,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
          "functionStartLine": 141,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value \" + value + \" for \" + field.getName() + \" must be in the range [\" + lowerBound + \u0027,\u0027 + upperBound + \u0027]\u0027);\n+        throw new IllegalFieldValueException(field.getType(), new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
            "newValue": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n"
          }
        }
      ]
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yfilerename",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "1/11/04, 9:39 AM",
      "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 16.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value \" + value + \" for \" + field.getName() + \" must be in the range [\" + lowerBound + \u0027,\u0027 + upperBound + \u0027]\u0027);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 133,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
        "newPath": "JodaTime/src/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "7804df458169ae3a64e8481d8c5cdf84827552c2": {
      "type": "Ybodychange",
      "commitMessage": "Mathematically correct range error message.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@87 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/2/04, 11:41 PM",
      "commitName": "7804df458169ae3a64e8481d8c5cdf84827552c2",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "12/18/03, 6:07 PM",
      "commitNameOld": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 15.23,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value \" + value + \" for \" + field.getName() + \" must be in the range [\" + lowerBound + \u0027,\u0027 + upperBound + \u0027]\u0027);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
      "functionStartLine": 133,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
      "diff": "@@ -1,5 +1,5 @@\n public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+        throw new IllegalArgumentException(\"Value \" + value + \" for \" + field.getName() + \" must be in the range [\" + lowerBound + \u0027,\u0027 + upperBound + \u0027]\u0027);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
          "functionStartLine": 133,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n+public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/DateTimeField.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
            "oldMethodName": "verifyValueBounds",
            "newMethodName": "verifyValueBounds"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
          "functionStartLine": 133,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n+public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
          "functionStartLine": 133,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n+public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
          "functionStartLine": 133,
          "functionName": "verifyValueBounds",
          "functionAnnotation": "",
          "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n",
          "diff": "@@ -1,5 +1,5 @@\n-protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n+public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + field.getName() + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[value-int, lowerBound-int, upperBound-int]",
            "newValue": "[field-DateTimeField, value-int, lowerBound-int, upperBound-int]"
          }
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,5 @@\n+protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n+    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n+        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void verifyValueBounds(int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalArgumentException(\"Value: \" + value + \" for \" + iName + \" must be in the range (\" + lowerBound + \u0027,\u0027 + upperBound + \u0027)\u0027);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/DateTimeField.java",
      "functionStartLine": 604,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalArgumentException if value is not in the specified bounds\n"
    }
  }
}