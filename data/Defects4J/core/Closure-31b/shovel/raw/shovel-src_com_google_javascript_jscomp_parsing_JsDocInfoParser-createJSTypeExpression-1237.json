{
  "origin": "codeshovel",
  "repositoryName": "Closure-31b",
  "repositoryPath": "/tmp/Closure-31b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsDocInfoParser.java",
  "functionName": "createJSTypeExpression",
  "functionId": "createJSTypeExpression___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
  "functionAnnotation": "",
  "functionDoc": "Constructs a new {@code JSTypeExpression}.\n\n@param n A node. May be null.\n",
  "functionStartLine": 1237,
  "functionEndLine": 1240,
  "numCommitsSeen": 58,
  "timeTaken": 6647,
  "changeHistory": [
    "b8086ea9d7cd87db9f1624f8eb0d6e4550e55495",
    "c764a46abf211d4677fadc33f7d466e5b14fa088",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b8086ea9d7cd87db9f1624f8eb0d6e4550e55495": "Ybodychange",
    "c764a46abf211d4677fadc33f7d466e5b14fa088": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b8086ea9d7cd87db9f1624f8eb0d6e4550e55495": {
      "type": "Ybodychange",
      "commitMessage": "\nRecord the source file in params, so that they get proper source info\n\nR\u003djschorr\nDELTA\u003d35  (24 added, 0 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3361\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1468 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/28/11, 4:25 PM",
      "commitName": "b8086ea9d7cd87db9f1624f8eb0d6e4550e55495",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/14/11, 8:18 AM",
      "commitNameOld": "ff67789e6125face69d6dc28697121cb3b6df854",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 14.34,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "private JSTypeExpression createJSTypeExpression(Node n) {\n    return n \u003d\u003d null ? null : new JSTypeExpression(n, getSourceName());\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 1228,
      "functionName": "createJSTypeExpression",
      "functionAnnotation": "",
      "functionDoc": "Constructs a new {@code JSTypeExpression}.\n\n@param n A node. May be null.\n",
      "diff": "@@ -1,3 +1,3 @@\n private JSTypeExpression createJSTypeExpression(Node n) {\n-    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName);\n+    return n \u003d\u003d null ? null : new JSTypeExpression(n, getSourceName());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c764a46abf211d4677fadc33f7d466e5b14fa088": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/13 by john\n\n        Here is a crazy thought, let\u0027s not require the JSTypeRegistry during\n        parsing.\n\n        There are basically two changes here:\n        1) The IRFactory was looking for enums to seed the JSTypeRegistry, so\n        we do that when we setup for type interence.\n        2) The JSDocParser was checking the types of @defines objects, now do\n        that during ProcessDefines.\n\n        R\u003drobert,mark\n        DELTA\u003d207  (82 added, 89 deleted, 36 changed)\n\nChange on 2010/04/14 by nick\n\n        Add a debugging function for JSType hashcodes.\n        i found this useful, and thought others might too.\n\n        R\u003djohn\n        DELTA\u003d69  (69 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dfqsoxx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@183 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 9:15 AM",
      "commitName": "c764a46abf211d4677fadc33f7d466e5b14fa088",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/9/10, 11:07 AM",
      "commitNameOld": "2dbbe0784ee3e549eb0cc4d679aeddaac1243145",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 4.92,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private JSTypeExpression createJSTypeExpression(Node n) {\n    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName);\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 1010,
      "functionName": "createJSTypeExpression",
      "functionAnnotation": "",
      "functionDoc": "Constructs a new {@code JSTypeExpression}.\n\n@param n A node. May be null.\n",
      "diff": "@@ -1,3 +1,3 @@\n private JSTypeExpression createJSTypeExpression(Node n) {\n-    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName, typeRegistry);\n+    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+private JSTypeExpression createJSTypeExpression(Node n) {\n+    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName, typeRegistry);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private JSTypeExpression createJSTypeExpression(Node n) {\n    return n \u003d\u003d null ? null : new JSTypeExpression(n, sourceName, typeRegistry);\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 1080,
      "functionName": "createJSTypeExpression",
      "functionAnnotation": "",
      "functionDoc": "Constructs a new {@code JSTypeExpression}.\n\n@param n A node. May be null.\n"
    }
  }
}