{
  "origin": "codeshovel",
  "repositoryName": "Closure-31b",
  "repositoryPath": "/tmp/Closure-31b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommandLineRunner.java",
  "functionName": "createOptions",
  "functionId": "createOptions",
  "sourceFilePath": "src/com/google/javascript/jscomp/CommandLineRunner.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 712,
  "functionEndLine": 760,
  "numCommitsSeen": 65,
  "timeTaken": 2016,
  "changeHistory": [
    "6d50a2f40b7877309e25922cdd216e860120352e",
    "cfd45b05a53da4fc9e49d645166ac0a3e6cf23ef",
    "4adf024b5eb87f6b760b40e9923ed1391bca4152",
    "7b7e1413f5b55254e38b65ad0c0849b07b7abb17",
    "053636cbd1a8fb97e55b4f82bc4b5bee8beaf47e",
    "369282db85567f1bf2c9635d0c0043d47f114814",
    "e5d3e5e012871b87d2f2a59985bc6522bb571ee2",
    "848ace840362a1f5558bec065cb40548ff66587a",
    "31193006e16b909a3115f998789057fb05d76b18",
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
    "ffe07f8c307c6b421cead64229eddb3602369f44",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6d50a2f40b7877309e25922cdd216e860120352e": "Yformatchange",
    "cfd45b05a53da4fc9e49d645166ac0a3e6cf23ef": "Ybodychange",
    "4adf024b5eb87f6b760b40e9923ed1391bca4152": "Ybodychange",
    "7b7e1413f5b55254e38b65ad0c0849b07b7abb17": "Ybodychange",
    "053636cbd1a8fb97e55b4f82bc4b5bee8beaf47e": "Ybodychange",
    "369282db85567f1bf2c9635d0c0043d47f114814": "Ybodychange",
    "e5d3e5e012871b87d2f2a59985bc6522bb571ee2": "Ybodychange",
    "848ace840362a1f5558bec065cb40548ff66587a": "Yfilerename",
    "31193006e16b909a3115f998789057fb05d76b18": "Ybodychange",
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42": "Ybodychange",
    "ffe07f8c307c6b421cead64229eddb3602369f44": "Ybodychange",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": "Ybodychange",
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d50a2f40b7877309e25922cdd216e860120352e": {
      "type": "Yformatchange",
      "commitMessage": "\nMOE re-sync. modifies the file encoding to unix-style.\n\nRevision created by MOE tool push_codebase.\n\nR\u003dacleung,johnlenz\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3938\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1669 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/9/11, 6:37 AM",
      "commitName": "6d50a2f40b7877309e25922cdd216e860120352e",
      "commitAuthor": "chadkillingsworth@missouristate.edu",
      "commitDateOld": "12/8/11, 5:29 PM",
      "commitNameOld": "cfd45b05a53da4fc9e49d645166ac0a3e6cf23ef",
      "commitAuthorOld": "chadkillingsworth@missouristate.edu",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    if (flags.generate_exports) {\n        options.setGenerateExports(flags.generate_exports);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    options.jqueryPass \u003d flags.process_jquery_primitives \u0026\u0026 CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level;\n    if (flags.process_jquery_primitives) {\n        options.setCodingConvention(new JqueryCodingConvention());\n    }\n    if (!flags.translationsFile.isEmpty()) {\n        try {\n            options.messageBundle \u003d new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject);\n        } catch (IOException e) {\n            throw new RuntimeException(\"Reading XTB file\", e);\n        }\n    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level) {\n        options.messageBundle \u003d new EmptyMessageBundle();\n    }\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 670,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "cfd45b05a53da4fc9e49d645166ac0a3e6cf23ef": {
      "type": "Ybodychange",
      "commitMessage": "Add a jQuery coding convention and preliminary support for jQuery compilation in advanced mode.\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1668 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/8/11, 5:29 PM",
      "commitName": "cfd45b05a53da4fc9e49d645166ac0a3e6cf23ef",
      "commitAuthor": "chadkillingsworth@missouristate.edu",
      "commitDateOld": "10/12/11, 10:32 AM",
      "commitNameOld": "dabc838ad0d6f08212e4aa994da53a166bf0749e",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 57.33,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    if (flags.generate_exports) {\n        options.setGenerateExports(flags.generate_exports);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    options.jqueryPass \u003d flags.process_jquery_primitives \u0026\u0026 CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level;\n    if (flags.process_jquery_primitives) {\n        options.setCodingConvention(new JqueryCodingConvention());\n    }\n    if (!flags.translationsFile.isEmpty()) {\n        try {\n            options.messageBundle \u003d new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject);\n        } catch (IOException e) {\n            throw new RuntimeException(\"Reading XTB file\", e);\n        }\n    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level) {\n        options.messageBundle \u003d new EmptyMessageBundle();\n    }\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 670,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,33 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n     if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n     if (flags.generate_exports) {\n         options.setGenerateExports(flags.generate_exports);\n     }\n     WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n     options.closurePass \u003d flags.process_closure_primitives;\n+    options.jqueryPass \u003d flags.process_jquery_primitives \u0026\u0026 CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level;\n+    if (flags.process_jquery_primitives) {\n+        options.setCodingConvention(new JqueryCodingConvention());\n+    }\n     if (!flags.translationsFile.isEmpty()) {\n         try {\n             options.messageBundle \u003d new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject);\n         } catch (IOException e) {\n             throw new RuntimeException(\"Reading XTB file\", e);\n         }\n     } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level) {\n         options.messageBundle \u003d new EmptyMessageBundle();\n     }\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4adf024b5eb87f6b760b40e9923ed1391bca4152": {
      "type": "Ybodychange",
      "commitMessage": "\nadd xtb-based translation to the Closure Compiler command-line api\n\nR\u003djohnlenz\nDELTA\u003d61  (58 added, 1 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3243\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1432 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/12/11, 1:54 PM",
      "commitName": "4adf024b5eb87f6b760b40e9923ed1391bca4152",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 45.9,
      "commitsBetweenForRepo": 116,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    if (flags.generate_exports) {\n        options.setGenerateExports(flags.generate_exports);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    if (!flags.translationsFile.isEmpty()) {\n        try {\n            options.messageBundle \u003d new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject);\n        } catch (IOException e) {\n            throw new RuntimeException(\"Reading XTB file\", e);\n        }\n    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level) {\n        options.messageBundle \u003d new EmptyMessageBundle();\n    }\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 631,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,29 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n     if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n     if (flags.generate_exports) {\n         options.setGenerateExports(flags.generate_exports);\n     }\n     WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n     options.closurePass \u003d flags.process_closure_primitives;\n+    if (!flags.translationsFile.isEmpty()) {\n+        try {\n+            options.messageBundle \u003d new XtbMessageBundle(new FileInputStream(flags.translationsFile), flags.translationsProject);\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Reading XTB file\", e);\n+        }\n+    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS \u003d\u003d level) {\n+        options.messageBundle \u003d new EmptyMessageBundle();\n+    }\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7b7e1413f5b55254e38b65ad0c0849b07b7abb17": {
      "type": "Ybodychange",
      "commitMessage": "\nFixes issue 269 \nNo flag to generate exports\n\nR\u003djohnlenz\nDELTA\u003d21  (21 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d698\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@835 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/1/11, 11:08 AM",
      "commitName": "7b7e1413f5b55254e38b65ad0c0849b07b7abb17",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "2/24/11, 10:14 AM",
      "commitNameOld": "39c4d538a4a1363db7385476d3e6bcc09cb71f65",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 5.04,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    if (flags.generate_exports) {\n        options.setGenerateExports(flags.generate_exports);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 551,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,20 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n     if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n+    if (flags.generate_exports) {\n+        options.setGenerateExports(flags.generate_exports);\n+    }\n     WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n     options.closurePass \u003d flags.process_closure_primitives;\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "053636cbd1a8fb97e55b4f82bc4b5bee8beaf47e": {
      "type": "Ybodychange",
      "commitMessage": "\nClean up the command-line runner api, which uncovered a bunch\nof bugs in Options serialization.\nSet the output charset to US-ASCII by default, but let the user\nset it to UTF-8.\nFixes Issue 205\n\nR\u003dbowdidge\nDELTA\u003d107  (69 added, 17 deleted, 21 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d87017\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@344 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/5/10, 7:38 PM",
      "commitName": "053636cbd1a8fb97e55b4f82bc4b5bee8beaf47e",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/5/10, 3:46 PM",
      "commitNameOld": "9eeebbbe85d3d91568acc622f3db362c8a851477",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 455,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,17 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n     if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n     WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n     options.closurePass \u003d flags.process_closure_primitives;\n-    initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "369282db85567f1bf2c9635d0c0043d47f114814": {
      "type": "Ybodychange",
      "commitMessage": "Removing useless members variables. (Alan)\nR\u003drobert\nDELTA\u003d4  (0 added, 4 deleted, 0 changed)\n\nFix broken process_closure_primitives flag. (Nick)\nFixes issue 130.\nR\u003drobert\nDELTA\u003d11  (7 added, 2 deleted, 2 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@152 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/23/10, 5:40 PM",
      "commitName": "369282db85567f1bf2c9635d0c0043d47f114814",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/15/10, 3:46 PM",
      "commitNameOld": "3df1d1eeb4a5868e5331ee98fb6748a2f1ccedba",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.08,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    options.closurePass \u003d flags.process_closure_primitives;\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 419,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,18 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n     if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n     WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n-    if (flags.process_closure_primitives) {\n-        options.closurePass \u003d true;\n-    }\n+    options.closurePass \u003d flags.process_closure_primitives;\n     initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5d3e5e012871b87d2f2a59985bc6522bb571ee2": {
      "type": "Ybodychange",
      "commitMessage": "switch over to args4j (Nick)\nFixes issue 11.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@128 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/5/10, 5:33 PM",
      "commitName": "e5d3e5e012871b87d2f2a59985bc6522bb571ee2",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/4/10, 10:33 AM",
      "commitNameOld": "c080c668a4ccd9eb151cbb4f90980ddbbfbaba44",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.29,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d flags.compilation_level;\n    level.setOptionsForCompilationLevel(options);\n    if (flags.debug) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    WarningLevel wLevel \u003d flags.warning_level;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n        formattingOption.applyToOptions(options);\n    }\n    if (flags.process_closure_primitives) {\n        options.closurePass \u003d true;\n    }\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 414,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,20 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n-    CompilationLevel level \u003d FLAG_compilation_level.get();\n+    CompilationLevel level \u003d flags.compilation_level;\n     level.setOptionsForCompilationLevel(options);\n-    if (FLAG_debug.get()) {\n+    if (flags.debug) {\n         level.setDebugOptionsForCompilationLevel(options);\n     }\n-    WarningLevel wLevel \u003d FLAG_warning_level.get();\n+    WarningLevel wLevel \u003d flags.warning_level;\n     wLevel.setOptionsForWarningLevel(options);\n-    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n+    for (FormattingOption formattingOption : flags.formatting) {\n         formattingOption.applyToOptions(options);\n     }\n-    if (FLAG_process_closure_primitives.get()) {\n+    if (flags.process_closure_primitives) {\n         options.closurePass \u003d true;\n     }\n     initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "848ace840362a1f5558bec065cb40548ff66587a": {
      "type": "Yfilerename",
      "commitMessage": "Rename CompilerRunner -\u003e CommandLineRunner.\nI\u0027ll also do this for JSCompilerRunner, but it will be a much\nbigger change. (Nick)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@119 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/26/10, 6:04 PM",
      "commitName": "848ace840362a1f5558bec065cb40548ff66587a",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/26/10, 3:45 PM",
      "commitNameOld": "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    if (FLAG_debug.get()) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CommandLineRunner.java",
      "functionStartLine": 119,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/com/google/javascript/jscomp/CompilerRunner.java",
        "newPath": "src/com/google/javascript/jscomp/CommandLineRunner.java"
      }
    },
    "31193006e16b909a3115f998789057fb05d76b18": {
      "type": "Ybodychange",
      "commitMessage": "Add a --debug flag for easier debugging.\n\nTurn off autoboxing from number -\u003e Number, string -\u003e String, etc.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@32 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/14/09, 4:18 PM",
      "commitName": "31193006e16b909a3115f998789057fb05d76b18",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/11/09, 3:29 PM",
      "commitNameOld": "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    if (FLAG_debug.get()) {\n        level.setDebugOptionsForCompilationLevel(options);\n    }\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 114,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,20 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d FLAG_compilation_level.get();\n     level.setOptionsForCompilationLevel(options);\n+    if (FLAG_debug.get()) {\n+        level.setDebugOptionsForCompilationLevel(options);\n+    }\n     WarningLevel wLevel \u003d FLAG_warning_level.get();\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : FLAG_formatting.get()) {\n         formattingOption.applyToOptions(options);\n     }\n     if (FLAG_process_closure_primitives.get()) {\n         options.closurePass \u003d true;\n     }\n     initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42": {
      "type": "Ybodychange",
      "commitMessage": "Add a pass for collecting symbols exported like window[\u0027x\u0027] \u003d ...\n\nFix for issue #70.\n\nAssorted minor bug fixes.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@31 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/11/09, 3:29 PM",
      "commitName": "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/8/09, 3:50 PM",
      "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    options.setCodingConvention(new ClosureCodingConvention());\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 110,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,17 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n+    options.setCodingConvention(new ClosureCodingConvention());\n     CompilationLevel level \u003d FLAG_compilation_level.get();\n     level.setOptionsForCompilationLevel(options);\n     WarningLevel wLevel \u003d FLAG_warning_level.get();\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : FLAG_formatting.get()) {\n         formattingOption.applyToOptions(options);\n     }\n     if (FLAG_process_closure_primitives.get()) {\n         options.closurePass \u003d true;\n     }\n     initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ffe07f8c307c6b421cead64229eddb3602369f44": {
      "type": "Ybodychange",
      "commitMessage": "Add --define flag to the API.\nRemove the warning for ambiguous function definitions: it\u0027s not yet fully baked.\nFix a bug in data-flow based variable inlining.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@16 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/30/09, 9:30 AM",
      "commitName": "ffe07f8c307c6b421cead64229eddb3602369f44",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/13/09, 11:38 AM",
      "commitNameOld": "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 16.91,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    initOptionsFromFlags(options);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 110,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,16 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     CompilationLevel level \u003d FLAG_compilation_level.get();\n     level.setOptionsForCompilationLevel(options);\n     WarningLevel wLevel \u003d FLAG_warning_level.get();\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : FLAG_formatting.get()) {\n         formattingOption.applyToOptions(options);\n     }\n     if (FLAG_process_closure_primitives.get()) {\n         options.closurePass \u003d true;\n     }\n-    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_error.get(), CheckLevel.ERROR);\n-    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_warning.get(), CheckLevel.WARNING);\n-    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_off.get(), CheckLevel.OFF);\n+    initOptionsFromFlags(options);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": {
      "type": "Ybodychange",
      "commitMessage": "Better number printing.\nAdd flags for fine-grained warning controls.\nBetter type-declaration finding.\nAdded some missing externs.\nMarked externs that don\u0027t have side effects.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@10 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/13/09, 11:38 AM",
      "commitName": "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/6/09, 5:24 PM",
      "commitNameOld": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 6.76,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_error.get(), CheckLevel.ERROR);\n    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_warning.get(), CheckLevel.WARNING);\n    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_off.get(), CheckLevel.OFF);\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 110,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,18 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     CompilationLevel level \u003d FLAG_compilation_level.get();\n     level.setOptionsForCompilationLevel(options);\n     WarningLevel wLevel \u003d FLAG_warning_level.get();\n     wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : FLAG_formatting.get()) {\n         formattingOption.applyToOptions(options);\n     }\n     if (FLAG_process_closure_primitives.get()) {\n         options.closurePass \u003d true;\n     }\n+    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_error.get(), CheckLevel.ERROR);\n+    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_warning.get(), CheckLevel.WARNING);\n+    DiagnosticGroups.setWarningLevels(options, AbstractCompilerRunner.FLAG_jscomp_off.get(), CheckLevel.OFF);\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0": {
      "type": "Ybodychange",
      "commitMessage": "A bunch of bug fixes\nAdded the --warning_level\u003d{QUIET|DEFAULT|VERBOSE} flag,\nto match the webservice API\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@3 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/6/09, 5:24 PM",
      "commitName": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    WarningLevel wLevel \u003d FLAG_warning_level.get();\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 110,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,15 @@\n @Override\n protected CompilerOptions createOptions() {\n     CompilerOptions options \u003d new CompilerOptions();\n     CompilationLevel level \u003d FLAG_compilation_level.get();\n     level.setOptionsForCompilationLevel(options);\n+    WarningLevel wLevel \u003d FLAG_warning_level.get();\n+    wLevel.setOptionsForWarningLevel(options);\n     for (FormattingOption formattingOption : FLAG_formatting.get()) {\n         formattingOption.applyToOptions(options);\n     }\n     if (FLAG_process_closure_primitives.get()) {\n         options.closurePass \u003d true;\n     }\n     return options;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+@Override\n+protected CompilerOptions createOptions() {\n+    CompilerOptions options \u003d new CompilerOptions();\n+    CompilationLevel level \u003d FLAG_compilation_level.get();\n+    level.setOptionsForCompilationLevel(options);\n+    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n+        formattingOption.applyToOptions(options);\n+    }\n+    if (FLAG_process_closure_primitives.get()) {\n+        options.closurePass \u003d true;\n+    }\n+    return options;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options \u003d new CompilerOptions();\n    CompilationLevel level \u003d FLAG_compilation_level.get();\n    level.setOptionsForCompilationLevel(options);\n    for (FormattingOption formattingOption : FLAG_formatting.get()) {\n        formattingOption.applyToOptions(options);\n    }\n    if (FLAG_process_closure_primitives.get()) {\n        options.closurePass \u003d true;\n    }\n    return options;\n}",
      "path": "src/com/google/javascript/jscomp/CompilerRunner.java",
      "functionStartLine": 104,
      "functionName": "createOptions",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}