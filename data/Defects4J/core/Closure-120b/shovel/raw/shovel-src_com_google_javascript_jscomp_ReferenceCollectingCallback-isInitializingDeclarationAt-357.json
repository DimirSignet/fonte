{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReferenceCollectingCallback.java",
  "functionName": "isInitializingDeclarationAt",
  "functionId": "$isInitializingDeclarationAt___index-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
  "functionAnnotation": "",
  "functionDoc": "\n@param index The index into the references array to look for an\nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n",
  "functionStartLine": 357,
  "functionEndLine": 366,
  "numCommitsSeen": 35,
  "timeTaken": 2443,
  "changeHistory": [
    "bca9abb0e3062d373fe52c0e8340337588c05708",
    "78995bf9e88599055a8c4165d89c09dc92a44b30"
  ],
  "changeHistoryShort": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Ymultichange(Ydocchange,Yformatchange)",
    "78995bf9e88599055a8c4165d89c09dc92a44b30": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean isInitializingDeclarationAt(int index) {\n    Reference maybeInit \u003d references.get(index);\n    if (maybeInit.isInitializingDeclaration()) {\n        return true;\n    }\n    return false;\n}",
          "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
          "functionStartLine": 275,
          "functionName": "isInitializingDeclarationAt",
          "functionAnnotation": "",
          "functionDoc": "\n@param index The index into the references array to look for an\nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "\n@param index The index into the references array to look for an \nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n",
            "newValue": "\n@param index The index into the references array to look for an\nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean isInitializingDeclarationAt(int index) {\n    Reference maybeInit \u003d references.get(index);\n    if (maybeInit.isInitializingDeclaration()) {\n        return true;\n    }\n    return false;\n}",
          "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
          "functionStartLine": 275,
          "functionName": "isInitializingDeclarationAt",
          "functionAnnotation": "",
          "functionDoc": "\n@param index The index into the references array to look for an\nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "78995bf9e88599055a8c4165d89c09dc92a44b30": {
      "type": "Yintroduced",
      "commitMessage": "Fix synthesis of vars in DEFAULT mode.\nBetter variable inlining\nBetter function inlining\nAssorted bug fixes\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@6 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/09, 11:16 AM",
      "commitName": "78995bf9e88599055a8c4165d89c09dc92a44b30",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+private boolean isInitializingDeclarationAt(int index) {\n+    Reference maybeInit \u003d references.get(index);\n+    if (maybeInit.isInitializingDeclaration()) {\n+        return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isInitializingDeclarationAt(int index) {\n    Reference maybeInit \u003d references.get(index);\n    if (maybeInit.isInitializingDeclaration()) {\n        return true;\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
      "functionStartLine": 275,
      "functionName": "isInitializingDeclarationAt",
      "functionAnnotation": "",
      "functionDoc": "\n@param index The index into the references array to look for an \nassigning declaration.\n\nThis is either the declaration if a value is assigned (such as\n\"var a \u003d 2\", \"function a()...\", \"... catch (a)...\").\n"
    }
  }
}