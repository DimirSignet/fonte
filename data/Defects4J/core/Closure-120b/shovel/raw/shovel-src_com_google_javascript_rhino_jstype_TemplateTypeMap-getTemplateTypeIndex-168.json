{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TemplateTypeMap.java",
  "functionName": "getTemplateTypeIndex",
  "functionId": "getTemplateTypeIndex___key-TemplateType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n",
  "functionStartLine": 168,
  "functionEndLine": 176,
  "numCommitsSeen": 89,
  "timeTaken": 5516,
  "changeHistory": [
    "65b54396fb95cdee741f45b9f53b967452e2274c",
    "bd60dbdf9330efe540c20f4d6910442b6f6e1f10",
    "2065172121162371081ca134f05d0da599ca0ba4",
    "177d001a30c568037141e555d84f9bd28d3d2d86"
  ],
  "changeHistoryShort": {
    "65b54396fb95cdee741f45b9f53b967452e2274c": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
    "bd60dbdf9330efe540c20f4d6910442b6f6e1f10": "Ymultichange(Yparameterchange,Ybodychange)",
    "2065172121162371081ca134f05d0da599ca0ba4": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Ydocchange,Yrename)",
    "177d001a30c568037141e555d84f9bd28d3d2d86": "Yintroduced"
  },
  "changeHistoryDetails": {
    "65b54396fb95cdee741f45b9f53b967452e2274c": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "Makes subtype relations work with @implemented templatized types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45106345\n",
      "commitDate": "4/10/13, 4:18 PM",
      "commitName": "65b54396fb95cdee741f45b9f53b967452e2274c",
      "commitAuthor": "Ben Lickly",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Makes subtype relations work with @implemented templatized types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45106345\n",
          "commitDate": "4/10/13, 4:18 PM",
          "commitName": "65b54396fb95cdee741f45b9f53b967452e2274c",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "3/20/13, 4:08 PM",
          "commitNameOld": "75aeb38f6a718778023d3d7f10dc491003161eff",
          "commitAuthorOld": "Ben Lickly",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "actualSource": "private int getTemplateTypeIndex(TemplateType key) {\n    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n        if (templateKeys.get(i) \u003d\u003d key) {\n            return i;\n        }\n    }\n    return -1;\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 168,
          "functionName": "getTemplateTypeIndex",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n",
          "diff": "@@ -1,13 +1,9 @@\n-private JSType getTemplateTypeInternal(TemplateType key) {\n-    int index \u003d 0;\n-    for (TemplateType item : templateKeys) {\n-        if (item \u003d\u003d key) {\n-            break;\n+private int getTemplateTypeIndex(TemplateType key) {\n+    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n+    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n+        if (templateKeys.get(i) \u003d\u003d key) {\n+            return i;\n         }\n-        index++;\n     }\n-    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n-        return null;\n-    }\n-    return templateValues.get(index);\n+    return -1;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getTemplateTypeInternal",
            "newValue": "getTemplateTypeIndex"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Makes subtype relations work with @implemented templatized types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45106345\n",
          "commitDate": "4/10/13, 4:18 PM",
          "commitName": "65b54396fb95cdee741f45b9f53b967452e2274c",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "3/20/13, 4:08 PM",
          "commitNameOld": "75aeb38f6a718778023d3d7f10dc491003161eff",
          "commitAuthorOld": "Ben Lickly",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "actualSource": "private int getTemplateTypeIndex(TemplateType key) {\n    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n        if (templateKeys.get(i) \u003d\u003d key) {\n            return i;\n        }\n    }\n    return -1;\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 168,
          "functionName": "getTemplateTypeIndex",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n",
          "diff": "@@ -1,13 +1,9 @@\n-private JSType getTemplateTypeInternal(TemplateType key) {\n-    int index \u003d 0;\n-    for (TemplateType item : templateKeys) {\n-        if (item \u003d\u003d key) {\n-            break;\n+private int getTemplateTypeIndex(TemplateType key) {\n+    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n+    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n+        if (templateKeys.get(i) \u003d\u003d key) {\n+            return i;\n         }\n-        index++;\n     }\n-    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n-        return null;\n-    }\n-    return templateValues.get(index);\n+    return -1;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JSType",
            "newValue": "int"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Makes subtype relations work with @implemented templatized types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45106345\n",
          "commitDate": "4/10/13, 4:18 PM",
          "commitName": "65b54396fb95cdee741f45b9f53b967452e2274c",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "3/20/13, 4:08 PM",
          "commitNameOld": "75aeb38f6a718778023d3d7f10dc491003161eff",
          "commitAuthorOld": "Ben Lickly",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "actualSource": "private int getTemplateTypeIndex(TemplateType key) {\n    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n        if (templateKeys.get(i) \u003d\u003d key) {\n            return i;\n        }\n    }\n    return -1;\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 168,
          "functionName": "getTemplateTypeIndex",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n",
          "diff": "@@ -1,13 +1,9 @@\n-private JSType getTemplateTypeInternal(TemplateType key) {\n-    int index \u003d 0;\n-    for (TemplateType item : templateKeys) {\n-        if (item \u003d\u003d key) {\n-            break;\n+private int getTemplateTypeIndex(TemplateType key) {\n+    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n+    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n+        if (templateKeys.get(i) \u003d\u003d key) {\n+            return i;\n         }\n-        index++;\n     }\n-    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n-        return null;\n-    }\n-    return templateValues.get(index);\n+    return -1;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Makes subtype relations work with @implemented templatized types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45106345\n",
          "commitDate": "4/10/13, 4:18 PM",
          "commitName": "65b54396fb95cdee741f45b9f53b967452e2274c",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "3/20/13, 4:08 PM",
          "commitNameOld": "75aeb38f6a718778023d3d7f10dc491003161eff",
          "commitAuthorOld": "Ben Lickly",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "actualSource": "private int getTemplateTypeIndex(TemplateType key) {\n    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n        if (templateKeys.get(i) \u003d\u003d key) {\n            return i;\n        }\n    }\n    return -1;\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 168,
          "functionName": "getTemplateTypeIndex",
          "functionAnnotation": "",
          "functionDoc": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n",
          "diff": "@@ -1,13 +1,9 @@\n-private JSType getTemplateTypeInternal(TemplateType key) {\n-    int index \u003d 0;\n-    for (TemplateType item : templateKeys) {\n-        if (item \u003d\u003d key) {\n-            break;\n+private int getTemplateTypeIndex(TemplateType key) {\n+    int maxIndex \u003d Math.min(templateKeys.size(), templateValues.size());\n+    for (int i \u003d maxIndex - 1; i \u003e\u003d 0; i--) {\n+        if (templateKeys.get(i) \u003d\u003d key) {\n+            return i;\n         }\n-        index++;\n     }\n-    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n-        return null;\n-    }\n-    return templateValues.get(index);\n+    return -1;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
            "newValue": "Returns the index of the JSType value associated with the specified\ntemplate key. If no JSType value is associated, returns -1.\n"
          }
        }
      ]
    },
    "bd60dbdf9330efe540c20f4d6910442b6f6e1f10": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "In preparation for resolving class type parameters, use TemplateTypes not Strings as keys in the TemplateTypeMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d43074510\n",
      "commitDate": "2/26/13, 4:59 PM",
      "commitName": "bd60dbdf9330efe540c20f4d6910442b6f6e1f10",
      "commitAuthor": "Ben Lickly",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "In preparation for resolving class type parameters, use TemplateTypes not Strings as keys in the TemplateTypeMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d43074510\n",
          "commitDate": "2/26/13, 4:59 PM",
          "commitName": "bd60dbdf9330efe540c20f4d6910442b6f6e1f10",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "1/29/13, 11:03 AM",
          "commitNameOld": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthorOld": "izaakr@google.com",
          "daysBetweenCommits": 28.25,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(TemplateType key) {\n    int index \u003d 0;\n    for (TemplateType item : templateKeys) {\n        if (item \u003d\u003d key) {\n            break;\n        }\n        index++;\n    }\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 140,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,13 @@\n-private JSType getTemplateTypeInternal(String key) {\n-    int index \u003d templateKeys.indexOf(key);\n+private JSType getTemplateTypeInternal(TemplateType key) {\n+    int index \u003d 0;\n+    for (TemplateType item : templateKeys) {\n+        if (item \u003d\u003d key) {\n+            break;\n+        }\n+        index++;\n+    }\n     if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n         return null;\n     }\n     return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[key-String]",
            "newValue": "[key-TemplateType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "In preparation for resolving class type parameters, use TemplateTypes not Strings as keys in the TemplateTypeMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d43074510\n",
          "commitDate": "2/26/13, 4:59 PM",
          "commitName": "bd60dbdf9330efe540c20f4d6910442b6f6e1f10",
          "commitAuthor": "Ben Lickly",
          "commitDateOld": "1/29/13, 11:03 AM",
          "commitNameOld": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthorOld": "izaakr@google.com",
          "daysBetweenCommits": 28.25,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(TemplateType key) {\n    int index \u003d 0;\n    for (TemplateType item : templateKeys) {\n        if (item \u003d\u003d key) {\n            break;\n        }\n        index++;\n    }\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 140,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,13 @@\n-private JSType getTemplateTypeInternal(String key) {\n-    int index \u003d templateKeys.indexOf(key);\n+private JSType getTemplateTypeInternal(TemplateType key) {\n+    int index \u003d 0;\n+    for (TemplateType item : templateKeys) {\n+        if (item \u003d\u003d key) {\n+            break;\n+        }\n+        index++;\n+    }\n     if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n         return null;\n     }\n     return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "2065172121162371081ca134f05d0da599ca0ba4": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Ydocchange,Yrename)",
      "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/29/13, 11:03 AM",
      "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
      "commitAuthor": "izaakr@google.com",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/29/13, 11:03 AM",
          "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthor": "izaakr@google.com",
          "commitDateOld": "1/28/13, 4:21 PM",
          "commitNameOld": "e79ee2e8fd69d625424aa85863a2c15b4a1bcc8e",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 125,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,7 @@\n-public JSType getTemplatizedType(String key) {\n+private JSType getTemplateTypeInternal(String key) {\n     int index \u003d templateKeys.indexOf(key);\n-    if (index \u003c 0) {\n-        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n+        return null;\n     }\n-    return templatizedTypes.get(index);\n+    return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/rhino/jstype/JSType.java",
            "newPath": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
            "oldMethodName": "getTemplatizedType",
            "newMethodName": "getTemplateTypeInternal"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/29/13, 11:03 AM",
          "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthor": "izaakr@google.com",
          "commitDateOld": "1/28/13, 4:21 PM",
          "commitNameOld": "e79ee2e8fd69d625424aa85863a2c15b4a1bcc8e",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 125,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,7 @@\n-public JSType getTemplatizedType(String key) {\n+private JSType getTemplateTypeInternal(String key) {\n     int index \u003d templateKeys.indexOf(key);\n-    if (index \u003c 0) {\n-        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n+        return null;\n     }\n-    return templatizedTypes.get(index);\n+    return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/29/13, 11:03 AM",
          "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthor": "izaakr@google.com",
          "commitDateOld": "1/28/13, 4:21 PM",
          "commitNameOld": "e79ee2e8fd69d625424aa85863a2c15b4a1bcc8e",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 125,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,7 @@\n-public JSType getTemplatizedType(String key) {\n+private JSType getTemplateTypeInternal(String key) {\n     int index \u003d templateKeys.indexOf(key);\n-    if (index \u003c 0) {\n-        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n+        return null;\n     }\n-    return templatizedTypes.get(index);\n+    return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/29/13, 11:03 AM",
          "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthor": "izaakr@google.com",
          "commitDateOld": "1/28/13, 4:21 PM",
          "commitNameOld": "e79ee2e8fd69d625424aa85863a2c15b4a1bcc8e",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 125,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,7 @@\n-public JSType getTemplatizedType(String key) {\n+private JSType getTemplateTypeInternal(String key) {\n     int index \u003d templateKeys.indexOf(key);\n-    if (index \u003c 0) {\n-        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n+        return null;\n     }\n-    return templatizedTypes.get(index);\n+    return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the type associated with a given template key. Will return\nthe UNKNOWN_TYPE if there is no template type associated with that\ntemplate key.\n",
            "newValue": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "\nAdds a TemplateTypeMap, which encapsulates a mapping between template keys (String) and their values (JSType). Hooks into all relevant JSTypes except TemplatizedType.\n\nR\u003ddimvar,nicksantos,johnlenz\nDELTA\u003d487 (242 added, 197 deleted, 48 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6208\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2493 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/29/13, 11:03 AM",
          "commitName": "2065172121162371081ca134f05d0da599ca0ba4",
          "commitAuthor": "izaakr@google.com",
          "commitDateOld": "1/28/13, 4:21 PM",
          "commitNameOld": "e79ee2e8fd69d625424aa85863a2c15b4a1bcc8e",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private JSType getTemplateTypeInternal(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n        return null;\n    }\n    return templateValues.get(index);\n}",
          "path": "src/com/google/javascript/rhino/jstype/TemplateTypeMap.java",
          "functionStartLine": 125,
          "functionName": "getTemplateTypeInternal",
          "functionAnnotation": "",
          "functionDoc": "Returns the JSType value associated with the specified template key. If no\nJSType value is associated, returns null.\n",
          "diff": "@@ -1,7 +1,7 @@\n-public JSType getTemplatizedType(String key) {\n+private JSType getTemplateTypeInternal(String key) {\n     int index \u003d templateKeys.indexOf(key);\n-    if (index \u003c 0) {\n-        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    if (index \u003c 0 || index \u003e\u003d templateValues.size()) {\n+        return null;\n     }\n-    return templatizedTypes.get(index);\n+    return templateValues.get(index);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getTemplatizedType",
            "newValue": "getTemplateTypeInternal"
          }
        }
      ]
    },
    "177d001a30c568037141e555d84f9bd28d3d2d86": {
      "type": "Yintroduced",
      "commitMessage": "\nAdds basic support for template keys and templatized types to the base JSType. Array and Object will be converted to this templatized type system.\n\nR\u003ddimvar,nicksantos\nDELTA\u003d324  (225 added, 17 deleted, 82 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5698\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2278 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/24/12, 2:07 PM",
      "commitName": "177d001a30c568037141e555d84f9bd28d3d2d86",
      "commitAuthor": "izaakr@google.com",
      "diff": "@@ -0,0 +1,7 @@\n+public JSType getTemplatizedType(String key) {\n+    int index \u003d templateKeys.indexOf(key);\n+    if (index \u003c 0) {\n+        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    }\n+    return templatizedTypes.get(index);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JSType getTemplatizedType(String key) {\n    int index \u003d templateKeys.indexOf(key);\n    if (index \u003c 0) {\n        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    return templatizedTypes.get(index);\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSType.java",
      "functionStartLine": 494,
      "functionName": "getTemplatizedType",
      "functionAnnotation": "",
      "functionDoc": "Returns the type associated with a given template key. Will return\nthe UNKNOWN_TYPE if there is no template type associated with that\ntemplate key.\n"
    }
  }
}