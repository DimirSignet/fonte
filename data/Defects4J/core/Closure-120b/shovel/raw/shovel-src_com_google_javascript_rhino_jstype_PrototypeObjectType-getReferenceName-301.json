{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrototypeObjectType.java",
  "functionName": "getReferenceName",
  "functionId": "getReferenceName",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 301,
  "functionEndLine": 309,
  "numCommitsSeen": 53,
  "timeTaken": 1819,
  "changeHistory": [
    "5fa514bee8f76534232e4653eaf16cd416e08012",
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5fa514bee8f76534232e4653eaf16cd416e08012": "Ybodychange",
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": "Ybodychange",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Yrename",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5fa514bee8f76534232e4653eaf16cd416e08012": {
      "type": "Ybodychange",
      "commitMessage": "\nChange how Function prototypes are represented in the type\nsystem.  This fixes lots of bugs when an anonymous object is\nthe prototype, and will make life a lot easier for IDEs.\n\nR\u003djohnlenz\nDELTA\u003d370  (129 added, 177 deleted, 64 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3135\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1389 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/25/11, 8:10 AM",
      "commitName": "5fa514bee8f76534232e4653eaf16cd416e08012",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/24/11, 11:59 AM",
      "commitNameOld": "1edd85b8ff34378fa038bab27455da2895521774",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.84,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic String getReferenceName() {\n    if (className !\u003d null) {\n        return className;\n    } else if (ownerFunction !\u003d null) {\n        return ownerFunction.getReferenceName() + \".prototype\";\n    } else {\n        return null;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 426,
      "functionName": "getReferenceName",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,10 @@\n @Override\n public String getReferenceName() {\n     if (className !\u003d null) {\n         return className;\n+    } else if (ownerFunction !\u003d null) {\n+        return ownerFunction.getReferenceName() + \".prototype\";\n     } else {\n         return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": {
      "type": "Ybodychange",
      "commitMessage": "Make debugging function inlining issues a little bit easier. (John)\nR\u003dalan\nDELTA\u003d3  (2 added, 0 deleted, 1 changed)\n\nPretty-print anonymous object types, so that it\u0027s easier to see\nwhat\u0027s in them. (Nick)\nR\u003dalan\n\nAdd externs for new methods of HTML5 History class. (Naoki)\nR\u003dalan\nDELTA\u003d19  (19 added, 0 deleted, 0 changed)\n\n\nHandle classes that have been renamed by the normalizer pass by reading the NAME\nfrom the AST instead of just using the reference name. (Andrew)\nR\u003dnada\nDELTA\u003d50  (33 added, 1 deleted, 16 changed)\n\nFix runtime type check to check the global this object instead of window since not all javascript will have a DOM. (Andrew)\nR\u003dnada\nDELTA\u003d21  (19 added, 0 deleted, 2 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003drvhacw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@166 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/1/10, 8:34 AM",
      "commitName": "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/26/10, 1:59 PM",
      "commitNameOld": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 64.73,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic String getReferenceName() {\n    if (className !\u003d null) {\n        return className;\n    } else {\n        return null;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 395,
      "functionName": "getReferenceName",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public String getReferenceName() {\n     if (className !\u003d null) {\n         return className;\n     } else {\n-        return \"{...}\";\n+        return null;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Yrename",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 21.63,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic String getReferenceName() {\n    if (className !\u003d null) {\n        return className;\n    } else {\n        return \"{...}\";\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 346,
      "functionName": "getReferenceName",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n-public String getName() {\n+public String getReferenceName() {\n     if (className !\u003d null) {\n         return className;\n     } else {\n         return \"{...}\";\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "getName",
        "newValue": "getReferenceName"
      }
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+public String getName() {\n+    if (className !\u003d null) {\n+        return className;\n+    } else {\n+        return \"{...}\";\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic String getName() {\n    if (className !\u003d null) {\n        return className;\n    } else {\n        return \"{...}\";\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 346,
      "functionName": "getName",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}