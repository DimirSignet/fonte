{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodePrinter.java",
  "functionName": "maybeCutLine",
  "functionId": "$maybeCutLine",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodePrinter.java",
  "functionAnnotation": "@Override",
  "functionDoc": "This may start a new line if the current line is longer than the line\nlength threshold.\n",
  "functionStartLine": 491,
  "functionEndLine": 507,
  "numCommitsSeen": 34,
  "timeTaken": 1446,
  "changeHistory": [
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd support for prefer line break at end of file. This allows us to insert code\nbetween files without affecting the source maps or deobfuscation.\n\nThis solution shifts an existing line break if it is near eof, which may result\nin a line longer than the normal line length advisory limit. The only\nalternative to that is to miss many eofs, which can impact the ability to place\ninterstitial code, or to place a break at the end of every file, which leads to\na hugely excessive number of breaks.\n\nWe could probably do better if we tracked line length across file boundaries\nwhich we currently do not.\n\nR\u003dacleung,johnlenz\nDELTA\u003d149  (128 added, 0 deleted, 21 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4172\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1762 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/6/12, 4:13 PM",
      "commitName": "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
      "commitAuthor": "mwr@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 88.32,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nvoid maybeCutLine() {\n    if (lineLength \u003e lineLengthThreshold) {\n        if (preferredBreakPosition \u003e lineStartPosition \u0026\u0026 preferredBreakPosition \u003c lineStartPosition + lineLength) {\n            int position \u003d preferredBreakPosition;\n            code.insert(position, \u0027\\n\u0027);\n            prevCutPosition \u003d position;\n            reportLineCut(lineIndex, position - lineStartPosition, true);\n            lineIndex++;\n            lineLength -\u003d (position - lineStartPosition);\n            lineStartPosition \u003d position + 1;\n        } else {\n            startNewLine();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 490,
      "functionName": "maybeCutLine",
      "functionAnnotation": "@Override",
      "functionDoc": "This may start a new line if the current line is longer than the line\nlength threshold.\n",
      "diff": "@@ -1,15 +1,16 @@\n @Override\n void maybeCutLine() {\n     if (lineLength \u003e lineLengthThreshold) {\n         if (preferredBreakPosition \u003e lineStartPosition \u0026\u0026 preferredBreakPosition \u003c lineStartPosition + lineLength) {\n             int position \u003d preferredBreakPosition;\n             code.insert(position, \u0027\\n\u0027);\n-            reportLineCut(lineIndex, position - lineStartPosition);\n+            prevCutPosition \u003d position;\n+            reportLineCut(lineIndex, position - lineStartPosition, true);\n             lineIndex++;\n             lineLength -\u003d (position - lineStartPosition);\n             lineStartPosition \u003d position + 1;\n         } else {\n             startNewLine();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+@Override\n+void maybeCutLine() {\n+    if (lineLength \u003e lineLengthThreshold) {\n+        if (preferredBreakPosition \u003e lineStartPosition \u0026\u0026 preferredBreakPosition \u003c lineStartPosition + lineLength) {\n+            int position \u003d preferredBreakPosition;\n+            code.insert(position, \u0027\\n\u0027);\n+            reportLineCut(lineIndex, position - lineStartPosition);\n+            lineIndex++;\n+            lineLength -\u003d (position - lineStartPosition);\n+            lineStartPosition \u003d position + 1;\n+        } else {\n+            startNewLine();\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nvoid maybeCutLine() {\n    if (lineLength \u003e lineLengthThreshold) {\n        if (preferredBreakPosition \u003e lineStartPosition \u0026\u0026 preferredBreakPosition \u003c lineStartPosition + lineLength) {\n            int position \u003d preferredBreakPosition;\n            code.insert(position, \u0027\\n\u0027);\n            reportLineCut(lineIndex, position - lineStartPosition);\n            lineIndex++;\n            lineLength -\u003d (position - lineStartPosition);\n            lineStartPosition \u003d position + 1;\n        } else {\n            startNewLine();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 454,
      "functionName": "maybeCutLine",
      "functionAnnotation": "@Override",
      "functionDoc": "This may start a new line if the current line is longer than the line\nlength threshold.\n"
    }
  }
}