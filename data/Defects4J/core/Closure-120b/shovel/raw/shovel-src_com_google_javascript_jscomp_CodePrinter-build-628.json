{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodePrinter.java",
  "functionName": "build",
  "functionId": "$build",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodePrinter.java",
  "functionAnnotation": "",
  "functionDoc": "Generates the source code and returns it.\n",
  "functionStartLine": 628,
  "functionEndLine": 642,
  "numCommitsSeen": 34,
  "timeTaken": 1776,
  "changeHistory": [
    "e97b7c780615e11ebe76e034b44ef0ef28a5520a",
    "81ecaa689f9e33d3d0130d5991cbb4ed18ba6739",
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
    "524c758183be741ff1519acfa8a4bf714dd2c4cd",
    "114620510958121ebec3dd8d037d70571fb7da20",
    "de13c3313c05f4449c50c560324389d6905a214d",
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "e97b7c780615e11ebe76e034b44ef0ef28a5520a": "Ybodychange",
    "81ecaa689f9e33d3d0130d5991cbb4ed18ba6739": "Ybodychange",
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": "Ybodychange",
    "524c758183be741ff1519acfa8a4bf714dd2c4cd": "Ybodychange",
    "114620510958121ebec3dd8d037d70571fb7da20": "Ybodychange",
    "de13c3313c05f4449c50c560324389d6905a214d": "Ybodychange",
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42": "Ybodychange",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e97b7c780615e11ebe76e034b44ef0ef28a5520a": {
      "type": "Ybodychange",
      "commitMessage": "\nAllow generated externs to use \u0027?\u0027.\n\nR\u003dnicksantos\nDELTA\u003d219 (112 added, 49 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6144\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2468 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/15/13, 5:09 PM",
      "commitName": "e97b7c780615e11ebe76e034b44ef0ef28a5520a",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/7/12, 11:39 AM",
      "commitNameOld": "6c51485e898eee8140bf05cbda29427cdc8bcc24",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 39.23,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : options.prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, options, registry, sourceMap, tagAsStrict);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 628,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : options.prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, options, sourceMap, tagAsStrict);\n+    return toSource(root, outputFormat, options, registry, sourceMap, tagAsStrict);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "81ecaa689f9e33d3d0130d5991cbb4ed18ba6739": {
      "type": "Ybodychange",
      "commitMessage": "\nMake single quotes a formatting option\nI also took this opportunity to clean up the code printer\noptions, because they were getting to be unmaintainable.\n\nR\u003djohnlenz\nDELTA\u003d174  (69 added, 71 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5697\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2277 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/24/12, 1:44 PM",
      "commitName": "81ecaa689f9e33d3d0130d5991cbb4ed18ba6739",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/18/12, 11:09 AM",
      "commitNameOld": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 159.11,
      "commitsBetweenForRepo": 281,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : options.prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, options, sourceMap, tagAsStrict);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 622,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n-    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, preferLineBreakAtEndOfFile, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n+    Format outputFormat \u003d outputTypes ? Format.TYPED : options.prettyPrint ? Format.PRETTY : Format.COMPACT;\n+    return toSource(root, outputFormat, options, sourceMap, tagAsStrict);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd support for prefer line break at end of file. This allows us to insert code\nbetween files without affecting the source maps or deobfuscation.\n\nThis solution shifts an existing line break if it is near eof, which may result\nin a line longer than the normal line length advisory limit. The only\nalternative to that is to miss many eofs, which can impact the ability to place\ninterstitial code, or to place a break at the end of every file, which leads to\na hugely excessive number of breaks.\n\nWe could probably do better if we tracked line length across file boundaries\nwhich we currently do not.\n\nR\u003dacleung,johnlenz\nDELTA\u003d149  (128 added, 0 deleted, 21 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4172\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1762 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/6/12, 4:13 PM",
      "commitName": "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
      "commitAuthor": "mwr@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 88.32,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, preferLineBreakAtEndOfFile, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 658,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n+    return toSource(root, outputFormat, lineBreak, preferLineBreakAtEndOfFile, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "524c758183be741ff1519acfa8a4bf714dd2c4cd": {
      "type": "Ybodychange",
      "commitMessage": "\nIntroduce EcmaScript 5 Strict mode output\n\nR\u003dacleung\nDELTA\u003d98  (60 added, 0 deleted, 38 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d820\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@873 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/10/11, 11:48 AM",
      "commitName": "524c758183be741ff1519acfa8a4bf714dd2c4cd",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/3/11, 4:39 PM",
      "commitNameOld": "063558234d35b8c29b4bfcab475277c8e6360e51",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.8,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 582,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset);\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "114620510958121ebec3dd8d037d70571fb7da20": {
      "type": "Ybodychange",
      "commitMessage": "\nFiltering what is presented in the source map is independent of the\nsource map format so lets default to a more limited set of nodes by\ndefault now.\n\nR\u003djschorr\nDELTA\u003d200  (170 added, 11 deleted, 19 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d85017\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@340 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/5/10, 4:13 PM",
      "commitName": "114620510958121ebec3dd8d037d70571fb7da20",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/15/10, 1:03 PM",
      "commitNameOld": "4d09ce45270187fa65a891e56081960a0ae449e5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 21.13,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 567,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de13c3313c05f4449c50c560324389d6905a214d": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/13 by john\n\n        Experimental option: Flag to change named object references from \"Object|null\" to \"Object|null|undefined\".\n\n        R\u003dalan,nick\n        DELTA\u003d7144  (7131 added, 5 deleted, 8 changed)\n\nChange on 2010/04/13 by nicksantos\n\n        get rid of some backdoor gmail apis.\n\n        R\u003djohn\n        DELTA\u003d44  (0 added, 33 deleted, 11 changed)\n\nChange on 2010/04/13 by nicksantos\n\n        fix TypeCheckTest to parse externs files properly.\n        i still need to merge the TypeCheckTest-forking cl into this one.\n\n        R\u003djohn\n        DELTA\u003d42  (12 added, 0 deleted, 30 changed)\n\nChange on 2010/04/13 by john\n\n        Enable expression decomposition for function inlining by default.\n\n        R\u003dnick\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/13 by john\n\n        Move ReplaceCssNames to allow type checking of goog.getCssName.\n\n        R\u003dmark\n        DELTA\u003d39  (35 added, 4 deleted, 0 changed)\n\nChange on 2010/04/13 by john\n\n        Maintain source and type information during ReplaceCssNames.\n\n        R\u003dmark\n        DELTA\u003d31  (30 added, 0 deleted, 1 changed)\n\nChange on 2010/04/13 by nick\n\n        fix up type information on event listener functions.\n\n        R\u003dalan\n        DELTA\u003d2  (0 added, 0 deleted, 2 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dwescxy\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@182 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/13/10, 2:39 PM",
      "commitName": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.09,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 610,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset, validation);\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42": {
      "type": "Ybodychange",
      "commitMessage": "Add a pass for collecting symbols exported like window[\u0027x\u0027] \u003d ...\n\nFix for issue #70.\n\nAssorted minor bug fixes.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@31 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/11/09, 3:29 PM",
      "commitName": "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/8/09, 3:50 PM",
      "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset, validation);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 567,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset, validation);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": {
      "type": "Ybodychange",
      "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/8/09, 3:50 PM",
      "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 35.0,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 554,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n",
      "diff": "@@ -1,7 +1,7 @@\n String build() {\n     if (root \u003d\u003d null) {\n         throw new IllegalStateException(\"Cannot build without root node being specified\");\n     }\n     Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n-    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap);\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap, outputCharset);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+String build() {\n+    if (root \u003d\u003d null) {\n+        throw new IllegalStateException(\"Cannot build without root node being specified\");\n+    }\n+    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n+    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap);\n+}\n\\ No newline at end of file\n",
      "actualSource": "String build() {\n    if (root \u003d\u003d null) {\n        throw new IllegalStateException(\"Cannot build without root node being specified\");\n    }\n    Format outputFormat \u003d outputTypes ? Format.TYPED : prettyPrint ? Format.PRETTY : Format.COMPACT;\n    return toSource(root, outputFormat, lineBreak, lineLengthThreshold, sourceMap);\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 545,
      "functionName": "build",
      "functionAnnotation": "",
      "functionDoc": "Generates the source code and returns it.\n"
    }
  }
}