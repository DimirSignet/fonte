{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineVariables.java",
  "functionName": "isValidInitialization",
  "functionId": "$isValidInitialization___initialization-Reference",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineVariables.java",
  "functionAnnotation": "",
  "functionDoc": "\n@return Whether there is a initial value.\n",
  "functionStartLine": 640,
  "functionEndLine": 663,
  "numCommitsSeen": 34,
  "timeTaken": 2869,
  "changeHistory": [
    "f58f7523c285197df175ad780dbe6288c67bc08c",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "fb1ca6ab49d90553268b711edc805c47ceae5088",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335",
    "78995bf9e88599055a8c4165d89c09dc92a44b30"
  ],
  "changeHistoryShort": {
    "f58f7523c285197df175ad780dbe6288c67bc08c": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "fb1ca6ab49d90553268b711edc805c47ceae5088": "Ybodychange",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": "Ymultichange(Ybodychange,Ydocchange)",
    "78995bf9e88599055a8c4165d89c09dc92a44b30": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f58f7523c285197df175ad780dbe6288c67bc08c": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd a coding convention interface that allow for certain functions or\nmehtods to be un-inlineable.\n\nR\u003dnicksantos\nDELTA\u003d496  (302 added, 188 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4640\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1939 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/30/12, 4:40 PM",
      "commitName": "f58f7523c285197df175ad780dbe6288c67bc08c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/28/12, 9:56 PM",
      "commitNameOld": "be397ee0d0be2aad8f71d12f097b17563866445a",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 61.74,
      "commitsBetweenForRepo": 116,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        if (!NodeUtil.isFunctionDeclaration(initialization.getParent()) \u0026\u0026 initialization.getNode().getFirstChild() \u003d\u003d null) {\n            return false;\n        }\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.isAssign() \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n    }\n    Node n \u003d initialization.getAssignedValue();\n    if (n.isFunction()) {\n        return compiler.getCodingConvention().isInlinableFunction(n);\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 646,
      "functionName": "isValidInitialization",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether there is a initial value.\n",
      "diff": "@@ -1,11 +1,17 @@\n private boolean isValidInitialization(Reference initialization) {\n     if (initialization \u003d\u003d null) {\n         return false;\n     } else if (initialization.isDeclaration()) {\n-        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNode().getFirstChild() !\u003d null;\n+        if (!NodeUtil.isFunctionDeclaration(initialization.getParent()) \u0026\u0026 initialization.getNode().getFirstChild() \u003d\u003d null) {\n+            return false;\n+        }\n     } else {\n         Node parent \u003d initialization.getParent();\n         Preconditions.checkState(parent.isAssign() \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n-        return true;\n     }\n+    Node n \u003d initialization.getAssignedValue();\n+    if (n.isFunction()) {\n+        return compiler.getCodingConvention().isInlinableFunction(n);\n+    }\n+    return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/23/11, 1:45 PM",
      "commitNameOld": "03db3415761aa9d8ba2fafa0ed64116a8331b1a9",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 139.83,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNode().getFirstChild() !\u003d null;\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.isAssign() \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n        return true;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 641,
      "functionName": "isValidInitialization",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether there is a initial value.\n",
      "diff": "@@ -1,11 +1,11 @@\n private boolean isValidInitialization(Reference initialization) {\n     if (initialization \u003d\u003d null) {\n         return false;\n     } else if (initialization.isDeclaration()) {\n         return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNode().getFirstChild() !\u003d null;\n     } else {\n         Node parent \u003d initialization.getParent();\n-        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n+        Preconditions.checkState(parent.isAssign() \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n         return true;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fb1ca6ab49d90553268b711edc805c47ceae5088": {
      "type": "Ybodychange",
      "commitMessage": "\nCreate an inferface for references in the symbol table\n\nR\u003dacleung\nDELTA\u003d275  (214 added, 16 deleted, 45 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2317\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1185 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/16/11, 11:12 AM",
      "commitName": "fb1ca6ab49d90553268b711edc805c47ceae5088",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/24/11, 10:36 AM",
      "commitNameOld": "75a9013e3907e5db97f10578227497d7b018caf5",
      "commitAuthorOld": "bashir@google.com",
      "daysBetweenCommits": 23.02,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNode().getFirstChild() !\u003d null;\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n        return true;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 640,
      "functionName": "isValidInitialization",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether there is a initial value.\n",
      "diff": "@@ -1,11 +1,11 @@\n private boolean isValidInitialization(Reference initialization) {\n     if (initialization \u003d\u003d null) {\n         return false;\n     } else if (initialization.isDeclaration()) {\n-        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNameNode().getFirstChild() !\u003d null;\n+        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNode().getFirstChild() !\u003d null;\n     } else {\n         Node parent \u003d initialization.getParent();\n-        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n+        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNode());\n         return true;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/23/10, 11:31 AM",
      "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/23/10, 11:31 AM",
          "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/16/10, 10:20 AM",
          "commitNameOld": "6e3eb4f7619179ba6c23db2af7549ef02f588c35",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 7.05,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNameNode().getFirstChild() !\u003d null;\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n        return true;\n    }\n}",
          "path": "src/com/google/javascript/jscomp/InlineVariables.java",
          "functionStartLine": 606,
          "functionName": "isValidInitialization",
          "functionAnnotation": "",
          "functionDoc": "\n@return Whether there is a initial value.\n",
          "diff": "@@ -1,11 +1,11 @@\n private boolean isValidInitialization(Reference initialization) {\n     if (initialization \u003d\u003d null) {\n         return false;\n     } else if (initialization.isDeclaration()) {\n-        return initialization.getNameNode().getFirstChild() !\u003d null;\n+        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNameNode().getFirstChild() !\u003d null;\n     } else {\n         Node parent \u003d initialization.getParent();\n         Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n         return true;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/23/10, 11:31 AM",
          "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/16/10, 10:20 AM",
          "commitNameOld": "6e3eb4f7619179ba6c23db2af7549ef02f588c35",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 7.05,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNameNode().getFirstChild() !\u003d null;\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n        return true;\n    }\n}",
          "path": "src/com/google/javascript/jscomp/InlineVariables.java",
          "functionStartLine": 606,
          "functionName": "isValidInitialization",
          "functionAnnotation": "",
          "functionDoc": "\n@return Whether there is a initial value.\n",
          "diff": "@@ -1,11 +1,11 @@\n private boolean isValidInitialization(Reference initialization) {\n     if (initialization \u003d\u003d null) {\n         return false;\n     } else if (initialization.isDeclaration()) {\n-        return initialization.getNameNode().getFirstChild() !\u003d null;\n+        return NodeUtil.isFunctionDeclaration(initialization.getParent()) || initialization.getNameNode().getFirstChild() !\u003d null;\n     } else {\n         Node parent \u003d initialization.getParent();\n         Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n         return true;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@return Whether\n",
            "newValue": "\n@return Whether there is a initial value.\n"
          }
        }
      ]
    },
    "78995bf9e88599055a8c4165d89c09dc92a44b30": {
      "type": "Yintroduced",
      "commitMessage": "Fix synthesis of vars in DEFAULT mode.\nBetter variable inlining\nBetter function inlining\nAssorted bug fixes\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@6 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/09, 11:16 AM",
      "commitName": "78995bf9e88599055a8c4165d89c09dc92a44b30",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+private boolean isValidInitialization(Reference initialization) {\n+    if (initialization \u003d\u003d null) {\n+        return false;\n+    } else if (initialization.isDeclaration()) {\n+        return initialization.getNameNode().getFirstChild() !\u003d null;\n+    } else {\n+        Node parent \u003d initialization.getParent();\n+        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n+        return true;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isValidInitialization(Reference initialization) {\n    if (initialization \u003d\u003d null) {\n        return false;\n    } else if (initialization.isDeclaration()) {\n        return initialization.getNameNode().getFirstChild() !\u003d null;\n    } else {\n        Node parent \u003d initialization.getParent();\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d initialization.getNameNode());\n        return true;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 546,
      "functionName": "isValidInitialization",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether\n"
    }
  }
}