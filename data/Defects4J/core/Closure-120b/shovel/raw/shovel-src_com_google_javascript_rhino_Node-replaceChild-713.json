{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Node.java",
  "functionName": "replaceChild",
  "functionId": "replaceChild___child-Node__newChild-Node",
  "sourceFilePath": "src/com/google/javascript/rhino/Node.java",
  "functionAnnotation": "",
  "functionDoc": "Detaches child from Node and replaces it with newChild.\n",
  "functionStartLine": 713,
  "functionEndLine": 735,
  "numCommitsSeen": 92,
  "timeTaken": 8106,
  "changeHistory": [
    "4ff5d0b989360d785c63978faf8eed6284e030e1",
    "43859717972907dd1ecebd8dca6e05036386e28b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4ff5d0b989360d785c63978faf8eed6284e030e1": "Ybodychange",
    "43859717972907dd1ecebd8dca6e05036386e28b": "Yformatchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4ff5d0b989360d785c63978faf8eed6284e030e1": {
      "type": "Ybodychange",
      "commitMessage": "Make Peephole and UnreachableCodeElimination only work on functions that have changed since the last run.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d44109570\n",
      "commitDate": "3/20/13, 9:48 AM",
      "commitName": "4ff5d0b989360d785c63978faf8eed6284e030e1",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "1/10/13, 4:31 PM",
      "commitNameOld": "9bf6d8db973a4691ad1551bdcbc559a86ba60532",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 68.68,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "actualSource": "public void replaceChild(Node child, Node newChild) {\n    Preconditions.checkArgument(newChild.next \u003d\u003d null, \"The new child node has siblings.\");\n    Preconditions.checkArgument(newChild.parent \u003d\u003d null, \"The new child node already has a parent.\");\n    newChild.copyInformationFrom(child);\n    newChild.next \u003d child.next;\n    newChild.parent \u003d this;\n    if (child \u003d\u003d first) {\n        first \u003d newChild;\n    } else {\n        Node prev \u003d getChildBefore(child);\n        prev.next \u003d newChild;\n    }\n    if (child \u003d\u003d last) {\n        last \u003d newChild;\n    }\n    child.next \u003d null;\n    child.parent \u003d null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 711,
      "functionName": "replaceChild",
      "functionAnnotation": "",
      "functionDoc": "Detaches child from Node and replaces it with newChild.\n",
      "diff": "@@ -1,17 +1,18 @@\n public void replaceChild(Node child, Node newChild) {\n     Preconditions.checkArgument(newChild.next \u003d\u003d null, \"The new child node has siblings.\");\n     Preconditions.checkArgument(newChild.parent \u003d\u003d null, \"The new child node already has a parent.\");\n     newChild.copyInformationFrom(child);\n     newChild.next \u003d child.next;\n     newChild.parent \u003d this;\n     if (child \u003d\u003d first) {\n         first \u003d newChild;\n     } else {\n         Node prev \u003d getChildBefore(child);\n         prev.next \u003d newChild;\n     }\n-    if (child \u003d\u003d last)\n+    if (child \u003d\u003d last) {\n         last \u003d newChild;\n+    }\n     child.next \u003d null;\n     child.parent \u003d null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "43859717972907dd1ecebd8dca6e05036386e28b": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/04/14 by john\n\n        Stop creating specialized Node types for FUNCTION and SCRIPT as the added functionality isn\u0027t used anywhere.\n\n        Also correct some formatting issue with Node (as it won\u0027t need to be merged with anything else anymore).\n\n        R\u003dsteve,robert\n        DELTA\u003d3969  (1913 added, 1925 deleted, 131 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source information in MinimizeExitPoints.\n\n        R\u003drobert\n        DELTA\u003d10  (5 added, 2 deleted, 3 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information.\n\n        R\u003dantonio\n        DELTA\u003d17  (11 added, 0 deleted, 6 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information through FoldConstants.\n\n        R\u003drobert\n        DELTA\u003d42  (22 added, 0 deleted, 20 changed)\n\nChange on 2010/04/14 by nick\n\n        lock down function type construction\n\n        R\u003djohn\n        DELTA\u003d111  (83 added, 9 deleted, 19 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source info in CollapseProperties.\n\n        R\u003dnick\n        DELTA\u003d17  (8 added, 3 deleted, 6 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dmbevwz\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@184 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 4:53 PM",
      "commitName": "43859717972907dd1ecebd8dca6e05036386e28b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/13/10, 2:39 PM",
      "commitNameOld": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void replaceChild(Node child, Node newChild) {\n    Preconditions.checkArgument(newChild.next \u003d\u003d null, \"The new child node has siblings.\");\n    Preconditions.checkArgument(newChild.parent \u003d\u003d null, \"The new child node already has a parent.\");\n    newChild.copyInformationFrom(child);\n    newChild.next \u003d child.next;\n    newChild.parent \u003d this;\n    if (child \u003d\u003d first) {\n        first \u003d newChild;\n    } else {\n        Node prev \u003d getChildBefore(child);\n        prev.next \u003d newChild;\n    }\n    if (child \u003d\u003d last)\n        last \u003d newChild;\n    child.next \u003d null;\n    child.parent \u003d null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 678,
      "functionName": "replaceChild",
      "functionAnnotation": "",
      "functionDoc": "Detaches child from Node and replaces it with newChild.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+public void replaceChild(Node child, Node newChild) {\n+    Preconditions.checkArgument(newChild.next \u003d\u003d null, \"The new child node has siblings.\");\n+    Preconditions.checkArgument(newChild.parent \u003d\u003d null, \"The new child node already has a parent.\");\n+    newChild.copyInformationFrom(child);\n+    newChild.next \u003d child.next;\n+    newChild.parent \u003d this;\n+    if (child \u003d\u003d first) {\n+        first \u003d newChild;\n+    } else {\n+        Node prev \u003d getChildBefore(child);\n+        prev.next \u003d newChild;\n+    }\n+    if (child \u003d\u003d last)\n+        last \u003d newChild;\n+    child.next \u003d null;\n+    child.parent \u003d null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void replaceChild(Node child, Node newChild) {\n    Preconditions.checkArgument(newChild.next \u003d\u003d null, \"The new child node has siblings.\");\n    Preconditions.checkArgument(newChild.parent \u003d\u003d null, \"The new child node already has a parent.\");\n    newChild.copyInformationFrom(child);\n    newChild.next \u003d child.next;\n    newChild.parent \u003d this;\n    if (child \u003d\u003d first) {\n        first \u003d newChild;\n    } else {\n        Node prev \u003d getChildBefore(child);\n        prev.next \u003d newChild;\n    }\n    if (child \u003d\u003d last)\n        last \u003d newChild;\n    child.next \u003d null;\n    child.parent \u003d null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 665,
      "functionName": "replaceChild",
      "functionAnnotation": "",
      "functionDoc": "Detaches child from Node and replaces it with newChild.\n"
    }
  }
}