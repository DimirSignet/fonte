{
  "origin": "codeshovel",
  "repositoryName": "Closure-120b",
  "repositoryPath": "/tmp/Closure-120b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Compiler.java",
  "functionName": "reportCodeChange",
  "functionId": "reportCodeChange",
  "sourceFilePath": "src/com/google/javascript/jscomp/Compiler.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 2044,
  "functionEndLine": 2048,
  "numCommitsSeen": 177,
  "timeTaken": 12462,
  "changeHistory": [
    "0517d9cd0636aacd359dbff3e9e6f2b8082531b1",
    "a90f4b4fba37c52376d5f074729233d59ce08408",
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "0517d9cd0636aacd359dbff3e9e6f2b8082531b1": "Ydocchange",
    "a90f4b4fba37c52376d5f074729233d59ce08408": "Ybodychange",
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0517d9cd0636aacd359dbff3e9e6f2b8082531b1": {
      "type": "Ydocchange",
      "commitMessage": "Fix bug in scope-change reporting in InlineFunctions.\nFix bug to run the scope-change sanity check during loops only.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45005173\n",
      "commitDate": "4/8/13, 7:20 PM",
      "commitName": "0517d9cd0636aacd359dbff3e9e6f2b8082531b1",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "3/22/13, 5:01 PM",
      "commitNameOld": "437a9e47d1a371f9e6724210b16d11d75366c3a0",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 17.1,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void reportCodeChange() {\n    for (CodeChangeHandler handler : codeChangeHandlers) {\n        handler.reportChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 2039,
      "functionName": "reportCodeChange",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldValue": "All passes should call reportCodeChange() when they alter\nthe JS tree structure. This is verified by CompilerTestCase.\nThis allows us to optimize to a fixed point.\n",
        "newValue": ""
      }
    },
    "a90f4b4fba37c52376d5f074729233d59ce08408": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes\n\n... description truncated by g4 rollback ...\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4161\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1758 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/12, 3:11 PM",
      "commitName": "a90f4b4fba37c52376d5f074729233d59ce08408",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/1/12, 1:09 PM",
      "commitNameOld": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void reportCodeChange() {\n    for (CodeChangeHandler handler : codeChangeHandlers) {\n        handler.reportChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 1855,
      "functionName": "reportCodeChange",
      "functionAnnotation": "@Override",
      "functionDoc": "All passes should call reportCodeChange() when they alter\nthe JS tree structure. This is verified by CompilerTestCase.\nThis allows us to optimize to a fixed point.\n",
      "diff": "@@ -1,6 +1,6 @@\n @Override\n public void reportCodeChange() {\n     for (CodeChangeHandler handler : codeChangeHandlers) {\n-        handler.reportCodeChange();\n+        handler.reportChange();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce": {
      "type": "Ybodychange",
      "commitMessage": "\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes to the property don\u0027t prevent removal of the candidates.\nObject property definitions are simply one more write now so don\u0027t\nautomatically rescue other definitions unless used in a known method\n(JSCompiler_renameProperty, goog.reflect.object).\n\nThis effective replaces RemoveUnusedClassProperties\n\nR\u003dnicksantos\nDELTA\u003d1498  (856 added, 514 deleted, 128 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4160\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1757 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/12, 1:09 PM",
      "commitName": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "1/30/12, 2:04 PM",
      "commitNameOld": "4ade66e558226e1b8d896d24f59c704e311645a5",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void reportCodeChange() {\n    for (CodeChangeHandler handler : codeChangeHandlers) {\n        handler.reportCodeChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 1855,
      "functionName": "reportCodeChange",
      "functionAnnotation": "@Override",
      "functionDoc": "All passes should call reportCodeChange() when they alter\nthe JS tree structure. This is verified by CompilerTestCase.\nThis allows us to optimize to a fixed point.\n",
      "diff": "@@ -1,6 +1,6 @@\n @Override\n public void reportCodeChange() {\n     for (CodeChangeHandler handler : codeChangeHandlers) {\n-        handler.reportChange();\n+        handler.reportCodeChange();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,6 @@\n+@Override\n+public void reportCodeChange() {\n+    for (CodeChangeHandler handler : codeChangeHandlers) {\n+        handler.reportChange();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void reportCodeChange() {\n    for (CodeChangeHandler handler : codeChangeHandlers) {\n        handler.reportChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 1768,
      "functionName": "reportCodeChange",
      "functionAnnotation": "@Override",
      "functionDoc": "All passes should call reportCodeChange() when they alter\nthe JS tree structure. This is verified by CompilerTestCase.\nThis allows us to optimize to a fixed point.\n"
    }
  }
}