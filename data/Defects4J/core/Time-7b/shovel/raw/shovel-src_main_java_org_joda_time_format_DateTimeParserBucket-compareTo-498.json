{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeParserBucket.java",
  "functionName": "compareTo",
  "functionId": "$compareTo___obj-SavedField",
  "sourceFilePath": "src/main/java/org/joda/time/format/DateTimeParserBucket.java",
  "functionAnnotation": "",
  "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
  "functionStartLine": 498,
  "functionEndLine": 507,
  "numCommitsSeen": 59,
  "timeTaken": 1967,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd",
    "c6a69cc40dcb388b5ddc3e616064f130ef3608e2",
    "3a68a02d6b0359e623858ab9391f84afdb17052a",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": "Ymultichange(Yparameterchange,Ybodychange)",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": "Ymultichange(Ymovefromfile,Yformatchange)",
    "c6a69cc40dcb388b5ddc3e616064f130ef3608e2": "Ymultichange(Ymovefromfile,Yformatchange)",
    "3a68a02d6b0359e623858ab9391f84afdb17052a": "Ydocchange",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Ybodychange,Ydocchange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(SavedField obj) {\n    DateTimeField other \u003d obj.iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
      "path": "src/main/java/org/joda/time/format/DateTimeParserBucket.java",
      "functionStartLine": 486,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java",
        "newPath": "src/main/java/org/joda/time/format/DateTimeParserBucket.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(SavedField obj) {\n    DateTimeField other \u003d obj.iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
      "path": "JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java",
      "functionStartLine": 444,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java"
      }
    },
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 3:55 PM",
      "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/4/09, 3:55 PM",
          "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "7/31/06, 3:10 PM",
          "commitNameOld": "ce6991c2cfb3b666b53c5ad8b5b1f18d0eca9b21",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1192.07,
          "commitsBetweenForRepo": 267,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(SavedField obj) {\n    DateTimeField other \u003d obj.iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 444,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "@@ -1,8 +1,8 @@\n-public int compareTo(Object obj) {\n-    DateTimeField other \u003d ((SavedField) obj).iField;\n+public int compareTo(SavedField obj) {\n+    DateTimeField other \u003d obj.iField;\n     int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n     if (result !\u003d 0) {\n         return result;\n     }\n     return compareReverse(iField.getDurationField(), other.getDurationField());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[obj-Object]",
            "newValue": "[obj-SavedField]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/4/09, 3:55 PM",
          "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "7/31/06, 3:10 PM",
          "commitNameOld": "ce6991c2cfb3b666b53c5ad8b5b1f18d0eca9b21",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1192.07,
          "commitsBetweenForRepo": 267,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(SavedField obj) {\n    DateTimeField other \u003d obj.iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 444,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "@@ -1,8 +1,8 @@\n-public int compareTo(Object obj) {\n-    DateTimeField other \u003d ((SavedField) obj).iField;\n+public int compareTo(SavedField obj) {\n+    DateTimeField other \u003d obj.iField;\n     int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n     if (result !\u003d 0) {\n         return result;\n     }\n     return compareReverse(iField.getDurationField(), other.getDurationField());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": {
      "type": "Ymultichange(Ymovefromfile,Yformatchange)",
      "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/12/04, 8:21 PM",
      "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/12/04, 8:21 PM",
          "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "12/12/04, 12:59 PM",
          "commitNameOld": "d1284b53b2a0d06a81cdd9e0ea1205d0e5c20631",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 396,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
            "newPath": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
            "oldMethodName": "compareTo",
            "newMethodName": "compareTo"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/12/04, 8:21 PM",
          "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "12/12/04, 12:59 PM",
          "commitNameOld": "d1284b53b2a0d06a81cdd9e0ea1205d0e5c20631",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 396,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "c6a69cc40dcb388b5ddc3e616064f130ef3608e2": {
      "type": "Ymultichange(Ymovefromfile,Yformatchange)",
      "commitMessage": "Refactor DateTimeParserBucket to inner class to aid package comprehension\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@544 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "10/28/04, 4:19 PM",
      "commitName": "c6a69cc40dcb388b5ddc3e616064f130ef3608e2",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor DateTimeParserBucket to inner class to aid package comprehension\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@544 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 4:19 PM",
          "commitName": "c6a69cc40dcb388b5ddc3e616064f130ef3608e2",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/28/04, 3:56 PM",
          "commitNameOld": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 627,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
            "newPath": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
            "oldMethodName": "compareTo",
            "newMethodName": "compareTo"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Refactor DateTimeParserBucket to inner class to aid package comprehension\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@544 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 4:19 PM",
          "commitName": "c6a69cc40dcb388b5ddc3e616064f130ef3608e2",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "10/28/04, 3:56 PM",
          "commitNameOld": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/BaseDateTimeFormatter.java",
          "functionStartLine": 627,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "3a68a02d6b0359e623858ab9391f84afdb17052a": {
      "type": "Ydocchange",
      "commitMessage": "Expanded documentation.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@108 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/6/04, 10:10 AM",
      "commitName": "3a68a02d6b0359e623858ab9391f84afdb17052a",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "1/4/04, 10:51 PM",
      "commitNameOld": "4d08164b8dcd0fd8cd02e6c6a64cfedf56636aee",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 1.47,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
      "functionStartLine": 303,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "The field with the larger range is ordered first, where null is\nconsidered infinite. If the ranges match, then the field with the\nlarger unit is ordered first. This ordering casues \"smaller\" fields\nto be set last, and thus their value sticks. For example, dayOfMonth\ntakes precedence over monthOfYear, and dayOfWeek takes precedence\nover dayOfMonth.\n",
        "newValue": "The field with the longer range duration is ordered first, where\nnull is considered infinite. If the ranges match, then the field\nwith the longer duration is ordered first.\n"
      }
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 238,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the larger range is ordered first, where null is\nconsidered infinite. If the ranges match, then the field with the\nlarger unit is ordered first. This ordering casues \"smaller\" fields\nto be set last, and thus their value sticks. For example, dayOfMonth\ntakes precedence over monthOfYear, and dayOfWeek takes precedence\nover dayOfMonth.\n",
          "diff": "@@ -1,18 +1,8 @@\n public int compareTo(Object obj) {\n     DateTimeField other \u003d ((SavedField) obj).iField;\n-    long a \u003d iField.getRangeMillis();\n-    long b \u003d other.getRangeMillis();\n-    if (a \u003e b) {\n-        return -1;\n-    } else if (a \u003c b) {\n-        return 1;\n+    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n+    if (result !\u003d 0) {\n+        return result;\n     }\n-    a \u003d iField.getUnitMillis();\n-    b \u003d other.getUnitMillis();\n-    if (a \u003e b) {\n-        return -1;\n-    } else if (a \u003c b) {\n-        return 1;\n-    }\n-    return 0;\n+    return compareReverse(iField.getDurationField(), other.getDurationField());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n    if (result !\u003d 0) {\n        return result;\n    }\n    return compareReverse(iField.getDurationField(), other.getDurationField());\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
          "functionStartLine": 238,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "The field with the larger range is ordered first, where null is\nconsidered infinite. If the ranges match, then the field with the\nlarger unit is ordered first. This ordering casues \"smaller\" fields\nto be set last, and thus their value sticks. For example, dayOfMonth\ntakes precedence over monthOfYear, and dayOfWeek takes precedence\nover dayOfMonth.\n",
          "diff": "@@ -1,18 +1,8 @@\n public int compareTo(Object obj) {\n     DateTimeField other \u003d ((SavedField) obj).iField;\n-    long a \u003d iField.getRangeMillis();\n-    long b \u003d other.getRangeMillis();\n-    if (a \u003e b) {\n-        return -1;\n-    } else if (a \u003c b) {\n-        return 1;\n+    int result \u003d compareReverse(iField.getRangeDurationField(), other.getRangeDurationField());\n+    if (result !\u003d 0) {\n+        return result;\n     }\n-    a \u003d iField.getUnitMillis();\n-    b \u003d other.getUnitMillis();\n-    if (a \u003e b) {\n-        return -1;\n-    } else if (a \u003c b) {\n-        return 1;\n-    }\n-    return 0;\n+    return compareReverse(iField.getDurationField(), other.getDurationField());\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "The field with the larger range is ordered first. If the ranges\nmatch, then the field with the larger unit is ordered first. This\nordering gives preference to more precise fields. For example,\ndayOfYear is chosen over monthOfYear.\n",
            "newValue": "The field with the larger range is ordered first, where null is\nconsidered infinite. If the ranges match, then the field with the\nlarger unit is ordered first. This ordering casues \"smaller\" fields\nto be set last, and thus their value sticks. For example, dayOfMonth\ntakes precedence over monthOfYear, and dayOfWeek takes precedence\nover dayOfMonth.\n"
          }
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,18 @@\n+public int compareTo(Object obj) {\n+    DateTimeField other \u003d ((SavedField) obj).iField;\n+    long a \u003d iField.getRangeMillis();\n+    long b \u003d other.getRangeMillis();\n+    if (a \u003e b) {\n+        return -1;\n+    } else if (a \u003c b) {\n+        return 1;\n+    }\n+    a \u003d iField.getUnitMillis();\n+    b \u003d other.getUnitMillis();\n+    if (a \u003e b) {\n+        return -1;\n+    } else if (a \u003c b) {\n+        return 1;\n+    }\n+    return 0;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int compareTo(Object obj) {\n    DateTimeField other \u003d ((SavedField) obj).iField;\n    long a \u003d iField.getRangeMillis();\n    long b \u003d other.getRangeMillis();\n    if (a \u003e b) {\n        return -1;\n    } else if (a \u003c b) {\n        return 1;\n    }\n    a \u003d iField.getUnitMillis();\n    b \u003d other.getUnitMillis();\n    if (a \u003e b) {\n        return -1;\n    } else if (a \u003c b) {\n        return 1;\n    }\n    return 0;\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java",
      "functionStartLine": 234,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "The field with the larger range is ordered first. If the ranges\nmatch, then the field with the larger unit is ordered first. This\nordering gives preference to more precise fields. For example,\ndayOfYear is chosen over monthOfYear.\n"
    }
  }
}