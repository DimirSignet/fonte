{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GJChronology.java",
  "functionName": "set",
  "functionId": "$set___instant-long__value-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/GJChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 717,
  "functionEndLine": 746,
  "numCommitsSeen": 37,
  "timeTaken": 2249,
  "changeHistory": [
    "9d991bcfd898a7b06239dbe1788774ba5106562b",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Ybodychange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yfilerename",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Yparameterchange,Ybodychange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": {
      "type": "Ybodychange",
      "commitMessage": "use the Integer cache where possible\n",
      "commitDate": "7/14/11, 8:56 PM",
      "commitName": "9d991bcfd898a7b06239dbe1788774ba5106562b",
      "commitAuthor": "Dave Brosius",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 59.45,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iGregorianField.getType(), Integer.valueOf(value), null, null);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iJulianField.getType(), Integer.valueOf(value), null, null);\n            }\n        }\n    }\n    return instant;\n}",
      "path": "src/main/java/org/joda/time/chrono/GJChronology.java",
      "functionStartLine": 696,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n public long set(long instant, int value) {\n     if (instant \u003e\u003d iCutover) {\n         instant \u003d iGregorianField.set(instant, value);\n         if (instant \u003c iCutover) {\n             if (instant + iGapDuration \u003c iCutover) {\n                 instant \u003d gregorianToJulian(instant);\n             }\n             if (get(instant) !\u003d value) {\n-                throw new IllegalFieldValueException(iGregorianField.getType(), new Integer(value), null, null);\n+                throw new IllegalFieldValueException(iGregorianField.getType(), Integer.valueOf(value), null, null);\n             }\n         }\n     } else {\n         instant \u003d iJulianField.set(instant, value);\n         if (instant \u003e\u003d iCutover) {\n             if (instant - iGapDuration \u003e\u003d iCutover) {\n                 instant \u003d julianToGregorian(instant);\n             }\n             if (get(instant) !\u003d value) {\n-                throw new IllegalFieldValueException(iJulianField.getType(), new Integer(value), null, null);\n+                throw new IllegalFieldValueException(iJulianField.getType(), Integer.valueOf(value), null, null);\n             }\n         }\n     }\n     return instant;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iGregorianField.getType(), new Integer(value), null, null);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iJulianField.getType(), new Integer(value), null, null);\n            }\n        }\n    }\n    return instant;\n}",
      "path": "src/main/java/org/joda/time/chrono/GJChronology.java",
      "functionStartLine": 696,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/GJChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iGregorianField.getType(), new Integer(value), null, null);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iJulianField.getType(), new Integer(value), null, null);\n            }\n        }\n    }\n    return instant;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java",
      "functionStartLine": 696,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/GJChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java"
      }
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Ybodychange",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "5/30/05, 11:01 AM",
      "commitNameOld": "225ca55301809ebd8869cf4e7bcf11cee2a84c06",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iGregorianField.getType(), new Integer(value), null, null);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalFieldValueException(iJulianField.getType(), new Integer(value), null, null);\n            }\n        }\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/GJChronology.java",
      "functionStartLine": 647,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n public long set(long instant, int value) {\n     if (instant \u003e\u003d iCutover) {\n         instant \u003d iGregorianField.set(instant, value);\n         if (instant \u003c iCutover) {\n             if (instant + iGapDuration \u003c iCutover) {\n                 instant \u003d gregorianToJulian(instant);\n             }\n             if (get(instant) !\u003d value) {\n-                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n+                throw new IllegalFieldValueException(iGregorianField.getType(), new Integer(value), null, null);\n             }\n         }\n     } else {\n         instant \u003d iJulianField.set(instant, value);\n         if (instant \u003e\u003d iCutover) {\n             if (instant - iGapDuration \u003e\u003d iCutover) {\n                 instant \u003d julianToGregorian(instant);\n             }\n             if (get(instant) !\u003d value) {\n-                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n+                throw new IllegalFieldValueException(iJulianField.getType(), new Integer(value), null, null);\n             }\n         }\n     }\n     return instant;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yfilerename",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "1/11/04, 9:39 AM",
      "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 16.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n            }\n        }\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/GJChronology.java",
      "functionStartLine": 684,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/gj/CutoverChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/GJChronology.java"
      }
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n            }\n        }\n    }\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/gj/CutoverChronology.java",
          "functionStartLine": 347,
          "functionName": "set",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,24 +1,24 @@\n-public long set(long millis, int value) {\n-    if (millis \u003e\u003d iCutover) {\n-        millis \u003d iGregorianField.set(millis, value);\n-        if (millis \u003c iCutover) {\n-            if (millis + iGapMillis \u003c iCutover) {\n-                millis \u003d gregorianToJulian(millis);\n+public long set(long instant, int value) {\n+    if (instant \u003e\u003d iCutover) {\n+        instant \u003d iGregorianField.set(instant, value);\n+        if (instant \u003c iCutover) {\n+            if (instant + iGapDuration \u003c iCutover) {\n+                instant \u003d gregorianToJulian(instant);\n             }\n-            if (get(millis) !\u003d value) {\n+            if (get(instant) !\u003d value) {\n                 throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n             }\n         }\n     } else {\n-        millis \u003d iJulianField.set(millis, value);\n-        if (millis \u003e\u003d iCutover) {\n-            if (millis - iGapMillis \u003e\u003d iCutover) {\n-                millis \u003d julianToGregorian(millis);\n+        instant \u003d iJulianField.set(instant, value);\n+        if (instant \u003e\u003d iCutover) {\n+            if (instant - iGapDuration \u003e\u003d iCutover) {\n+                instant \u003d julianToGregorian(instant);\n             }\n-            if (get(millis) !\u003d value) {\n+            if (get(instant) !\u003d value) {\n                 throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n             }\n         }\n     }\n-    return millis;\n+    return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[millis-long, value-int]",
            "newValue": "[instant-long, value-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public long set(long instant, int value) {\n    if (instant \u003e\u003d iCutover) {\n        instant \u003d iGregorianField.set(instant, value);\n        if (instant \u003c iCutover) {\n            if (instant + iGapDuration \u003c iCutover) {\n                instant \u003d gregorianToJulian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n            }\n        }\n    } else {\n        instant \u003d iJulianField.set(instant, value);\n        if (instant \u003e\u003d iCutover) {\n            if (instant - iGapDuration \u003e\u003d iCutover) {\n                instant \u003d julianToGregorian(instant);\n            }\n            if (get(instant) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n            }\n        }\n    }\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/gj/CutoverChronology.java",
          "functionStartLine": 347,
          "functionName": "set",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,24 +1,24 @@\n-public long set(long millis, int value) {\n-    if (millis \u003e\u003d iCutover) {\n-        millis \u003d iGregorianField.set(millis, value);\n-        if (millis \u003c iCutover) {\n-            if (millis + iGapMillis \u003c iCutover) {\n-                millis \u003d gregorianToJulian(millis);\n+public long set(long instant, int value) {\n+    if (instant \u003e\u003d iCutover) {\n+        instant \u003d iGregorianField.set(instant, value);\n+        if (instant \u003c iCutover) {\n+            if (instant + iGapDuration \u003c iCutover) {\n+                instant \u003d gregorianToJulian(instant);\n             }\n-            if (get(millis) !\u003d value) {\n+            if (get(instant) !\u003d value) {\n                 throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n             }\n         }\n     } else {\n-        millis \u003d iJulianField.set(millis, value);\n-        if (millis \u003e\u003d iCutover) {\n-            if (millis - iGapMillis \u003e\u003d iCutover) {\n-                millis \u003d julianToGregorian(millis);\n+        instant \u003d iJulianField.set(instant, value);\n+        if (instant \u003e\u003d iCutover) {\n+            if (instant - iGapDuration \u003e\u003d iCutover) {\n+                instant \u003d julianToGregorian(instant);\n             }\n-            if (get(millis) !\u003d value) {\n+            if (get(instant) !\u003d value) {\n                 throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n             }\n         }\n     }\n-    return millis;\n+    return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,24 @@\n+public long set(long millis, int value) {\n+    if (millis \u003e\u003d iCutover) {\n+        millis \u003d iGregorianField.set(millis, value);\n+        if (millis \u003c iCutover) {\n+            if (millis + iGapMillis \u003c iCutover) {\n+                millis \u003d gregorianToJulian(millis);\n+            }\n+            if (get(millis) !\u003d value) {\n+                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n+            }\n+        }\n+    } else {\n+        millis \u003d iJulianField.set(millis, value);\n+        if (millis \u003e\u003d iCutover) {\n+            if (millis - iGapMillis \u003e\u003d iCutover) {\n+                millis \u003d julianToGregorian(millis);\n+            }\n+            if (get(millis) !\u003d value) {\n+                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n+            }\n+        }\n+    }\n+    return millis;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public long set(long millis, int value) {\n    if (millis \u003e\u003d iCutover) {\n        millis \u003d iGregorianField.set(millis, value);\n        if (millis \u003c iCutover) {\n            if (millis + iGapMillis \u003c iCutover) {\n                millis \u003d gregorianToJulian(millis);\n            }\n            if (get(millis) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iGregorianField.getName() + \": \" + value);\n            }\n        }\n    } else {\n        millis \u003d iJulianField.set(millis, value);\n        if (millis \u003e\u003d iCutover) {\n            if (millis - iGapMillis \u003e\u003d iCutover) {\n                millis \u003d julianToGregorian(millis);\n            }\n            if (get(millis) !\u003d value) {\n                throw new IllegalArgumentException(\"Illegal value for \" + iJulianField.getName() + \": \" + value);\n            }\n        }\n    }\n    return millis;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/gj/CutoverChronology.java",
      "functionStartLine": 287,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}