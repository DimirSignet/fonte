{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeFormatterBuilder.java",
  "functionName": "toFormatter",
  "functionId": "toFormatter",
  "sourceFilePath": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Constructs a DateTimeFormatter using all the appended elements.\n\u003cp\u003e\nThis is the main method used by applications at the end of the build\nprocess to create a usable formatter.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
  "functionStartLine": 104,
  "functionEndLine": 118,
  "numCommitsSeen": 67,
  "timeTaken": 6417,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "c0cd5cec8bab37feedac5fa25a416596b8131d48",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "c0cd5cec8bab37feedac5fa25a416596b8131d48": "Ydocchange",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
      "path": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 103,
      "functionName": "toFormatter",
      "functionAnnotation": "",
      "functionDoc": "Constructs a DateTimeFormatter using all the appended elements.\n\u003cp\u003e\nThis is the main method used by applications at the end of the build\nprocess to create a usable formatter.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
        "newPath": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
      "path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 103,
      "functionName": "toFormatter",
      "functionAnnotation": "",
      "functionDoc": "Constructs a DateTimeFormatter using all the appended elements.\n\u003cp\u003e\nThis is the main method used by applications at the end of the build\nprocess to create a usable formatter.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java"
      }
    },
    "c0cd5cec8bab37feedac5fa25a416596b8131d48": {
      "type": "Ydocchange",
      "commitMessage": "Comment toPrinter and toParser to indicate internal nature\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@715 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/15/05, 3:31 PM",
      "commitName": "c0cd5cec8bab37feedac5fa25a416596b8131d48",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/13/05, 2:07 PM",
      "commitNameOld": "b1163139b096852b5ca029003f780bf7d9bcbfea",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.06,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 96,
      "functionName": "toFormatter",
      "functionAnnotation": "",
      "functionDoc": "Constructs a DateTimeFormatter using all the appended elements.\n\u003cp\u003e\nThis is the main method used by applications at the end of the build\nprocess to create a usable formatter.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Converts to a DateTimeFormatter that using all the appended elements.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
        "newValue": "Constructs a DateTimeFormatter using all the appended elements.\n\u003cp\u003e\nThis is the main method used by applications at the end of the build\nprocess to create a usable formatter.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n"
      }
    },
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/12/05, 6:39 PM",
      "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 3:28 PM",
          "commitNameOld": "28108d2dd6ba602f2b3d328045e74a3d2bf2d0a9",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 125,
          "functionName": "toFormatter",
          "functionAnnotation": "",
          "functionDoc": "Converts to a DateTimeFormatter that using all the appended elements.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
          "diff": "@@ -1,7 +1,15 @@\n-public DateTimeFormatter toFormatter() throws UnsupportedOperationException {\n+public DateTimeFormatter toFormatter() {\n     Object f \u003d getFormatter();\n-    if (isFormatter(f)) {\n-        return (DateTimeFormatter) f;\n+    DateTimePrinter printer \u003d null;\n+    if (isPrinter(f)) {\n+        printer \u003d (DateTimePrinter) f;\n+    }\n+    DateTimeParser parser \u003d null;\n+    if (isParser(f)) {\n+        parser \u003d (DateTimeParser) f;\n+    }\n+    if (printer !\u003d null || parser !\u003d null) {\n+        return new DateTimeFormatter(printer, parser);\n     }\n     throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[UnsupportedOperationException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 3:28 PM",
          "commitNameOld": "28108d2dd6ba602f2b3d328045e74a3d2bf2d0a9",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 125,
          "functionName": "toFormatter",
          "functionAnnotation": "",
          "functionDoc": "Converts to a DateTimeFormatter that using all the appended elements.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
          "diff": "@@ -1,7 +1,15 @@\n-public DateTimeFormatter toFormatter() throws UnsupportedOperationException {\n+public DateTimeFormatter toFormatter() {\n     Object f \u003d getFormatter();\n-    if (isFormatter(f)) {\n-        return (DateTimeFormatter) f;\n+    DateTimePrinter printer \u003d null;\n+    if (isPrinter(f)) {\n+        printer \u003d (DateTimePrinter) f;\n+    }\n+    DateTimeParser parser \u003d null;\n+    if (isParser(f)) {\n+        parser \u003d (DateTimeParser) f;\n+    }\n+    if (printer !\u003d null || parser !\u003d null) {\n+        return new DateTimeFormatter(printer, parser);\n     }\n     throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/12/05, 6:39 PM",
          "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/12/05, 3:28 PM",
          "commitNameOld": "28108d2dd6ba602f2b3d328045e74a3d2bf2d0a9",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatter toFormatter() {\n    Object f \u003d getFormatter();\n    DateTimePrinter printer \u003d null;\n    if (isPrinter(f)) {\n        printer \u003d (DateTimePrinter) f;\n    }\n    DateTimeParser parser \u003d null;\n    if (isParser(f)) {\n        parser \u003d (DateTimeParser) f;\n    }\n    if (printer !\u003d null || parser !\u003d null) {\n        return new DateTimeFormatter(printer, parser);\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 125,
          "functionName": "toFormatter",
          "functionAnnotation": "",
          "functionDoc": "Converts to a DateTimeFormatter that using all the appended elements.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n",
          "diff": "@@ -1,7 +1,15 @@\n-public DateTimeFormatter toFormatter() throws UnsupportedOperationException {\n+public DateTimeFormatter toFormatter() {\n     Object f \u003d getFormatter();\n-    if (isFormatter(f)) {\n-        return (DateTimeFormatter) f;\n+    DateTimePrinter printer \u003d null;\n+    if (isPrinter(f)) {\n+        printer \u003d (DateTimePrinter) f;\n+    }\n+    DateTimeParser parser \u003d null;\n+    if (isParser(f)) {\n+        parser \u003d (DateTimeParser) f;\n+    }\n+    if (printer !\u003d null || parser !\u003d null) {\n+        return new DateTimeFormatter(printer, parser);\n     }\n     throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Converts to a DateTimeFormatter that prints and parses using all the\nappended elements. Subsequent changes to this builder do not affect the\nreturned formatter.\n\n@throws UnsupportedOperationException if any formatter element doesn\u0027t support\nboth printing and parsing\n",
            "newValue": "Converts to a DateTimeFormatter that using all the appended elements.\n\u003cp\u003e\nSubsequent changes to this builder do not affect the returned formatter.\n\u003cp\u003e\nThe returned formatter may not support both printing and parsing.\nThe methods {@link DateTimeFormatter#isPrinter()} and\n{@link DateTimeFormatter#isParser()} will help you determine the state\nof the formatter.\n\n@throws UnsupportedOperationException if neither printing nor parsing is supported\n"
          }
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,7 @@\n+public DateTimeFormatter toFormatter() throws UnsupportedOperationException {\n+    Object f \u003d getFormatter();\n+    if (isFormatter(f)) {\n+        return (DateTimeFormatter) f;\n+    }\n+    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "public DateTimeFormatter toFormatter() throws UnsupportedOperationException {\n    Object f \u003d getFormatter();\n    if (isFormatter(f)) {\n        return (DateTimeFormatter) f;\n    }\n    throw new UnsupportedOperationException(\"Both printing and parsing not supported\");\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 260,
      "functionName": "toFormatter",
      "functionAnnotation": "",
      "functionDoc": "Converts to a DateTimeFormatter that prints and parses using all the\nappended elements. Subsequent changes to this builder do not affect the\nreturned formatter.\n\n@throws UnsupportedOperationException if any formatter element doesn\u0027t support\nboth printing and parsing\n"
    }
  }
}