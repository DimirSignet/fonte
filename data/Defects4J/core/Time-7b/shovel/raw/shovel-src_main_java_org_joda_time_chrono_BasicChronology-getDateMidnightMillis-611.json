{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicChronology.java",
  "functionName": "getDateMidnightMillis",
  "functionId": "getDateMidnightMillis___year-int__monthOfYear-int__dayOfMonth-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/BasicChronology.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
  "functionStartLine": 611,
  "functionEndLine": 616,
  "numCommitsSeen": 53,
  "timeTaken": 2758,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
    "c4788d953b68641523da625111e352132cafe90e",
    "b501bed838191e3fb64fca2eb3e62d0407861dc3",
    "7b7cb44562d5942add1f093111e84a5836780de4",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
    "6bdd176eed470329a73d7ee08498183e579cea60",
    "194de43297ee92161aef886025d5aeba42db637e"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": "Yfilerename",
    "c4788d953b68641523da625111e352132cafe90e": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
    "b501bed838191e3fb64fca2eb3e62d0407861dc3": "Yfilerename",
    "7b7cb44562d5942add1f093111e84a5836780de4": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Ybodychange",
    "6bdd176eed470329a73d7ee08498183e579cea60": "Yfilerename",
    "194de43297ee92161aef886025d5aeba42db637e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 602,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 602,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": {
      "type": "Yfilerename",
      "commitMessage": "Rename BaseGJChronology to BasicChronology, ensuring serialization OK\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@960 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/5/05, 2:46 PM",
      "commitName": "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "12/5/05, 2:37 PM",
      "commitNameOld": "b947d2de15ad63651dbc40e496187ac7743a69f8",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 590,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "c4788d953b68641523da625111e352132cafe90e": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
      "commitMessage": "Refactor getDateMidnightMillis to use getMaxMonth\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@932 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/26/05, 7:26 AM",
      "commitName": "c4788d953b68641523da625111e352132cafe90e",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor getDateMidnightMillis to use getMaxMonth\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@932 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/26/05, 7:26 AM",
          "commitName": "c4788d953b68641523da625111e352132cafe90e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "11/24/05, 3:07 PM",
          "commitNameOld": "d9e778cf024d28b51899275f28a83267296a5de5",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 586,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
          "diff": "@@ -1,6 +1,6 @@\n long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n     FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n     return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
            "oldMethodName": "getDateMidnightMillis",
            "newMethodName": "getDateMidnightMillis"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor getDateMidnightMillis to use getMaxMonth\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@932 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/26/05, 7:26 AM",
          "commitName": "c4788d953b68641523da625111e352132cafe90e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "11/24/05, 3:07 PM",
          "commitNameOld": "d9e778cf024d28b51899275f28a83267296a5de5",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 586,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
          "diff": "@@ -1,6 +1,6 @@\n long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n     FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n     return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactor getDateMidnightMillis to use getMaxMonth\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@932 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/26/05, 7:26 AM",
          "commitName": "c4788d953b68641523da625111e352132cafe90e",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "11/24/05, 3:07 PM",
          "commitNameOld": "d9e778cf024d28b51899275f28a83267296a5de5",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 586,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n",
          "diff": "@@ -1,6 +1,6 @@\n long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n     FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n     return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Gets the milliseconds for a date at midnight.\n\n@param year the year\n@param monthOfYear the month\n@param dayOfMonth the day\n@return the milliseconds\n"
          }
        }
      ]
    },
    "b501bed838191e3fb64fca2eb3e62d0407861dc3": {
      "type": "Yfilerename",
      "commitMessage": "Refactor abstract chronology classes to be package scoped and better named\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@928 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/2/05, 1:52 PM",
      "commitName": "b501bed838191e3fb64fca2eb3e62d0407861dc3",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/2/05, 9:26 AM",
      "commitNameOld": "beec594614e14f83c57ca24414179de8f9b564ea",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java",
      "functionStartLine": 140,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java"
      }
    },
    "7b7cb44562d5942add1f093111e84a5836780de4": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
      "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/8/05, 3:57 PM",
      "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 140,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,6 @@\n-long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n+long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n     FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n-    boolean isLeap \u003d isLeapYear(year);\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n-    long instant \u003d getYearMillis(year);\n-    if (monthOfYear \u003e 1) {\n-        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n-    }\n-    if (dayOfMonth !\u003d 1) {\n-        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    }\n-    return instant;\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n+    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
            "oldMethodName": "getDateMidnightMillis",
            "newMethodName": "getDateMidnightMillis"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 140,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,6 @@\n-long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n+long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n     FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n-    boolean isLeap \u003d isLeapYear(year);\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n-    long instant \u003d getYearMillis(year);\n-    if (monthOfYear \u003e 1) {\n-        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n-    }\n-    if (dayOfMonth !\u003d 1) {\n-        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    }\n-    return instant;\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n+    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalArgumentException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 140,
          "functionName": "getDateMidnightMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,6 @@\n-long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n+long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n     FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n     FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n-    boolean isLeap \u003d isLeapYear(year);\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n-    long instant \u003d getYearMillis(year);\n-    if (monthOfYear \u003e 1) {\n-        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n-    }\n-    if (dayOfMonth !\u003d 1) {\n-        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n-    }\n-    return instant;\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n+    return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Ybodychange",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "2/21/05, 8:55 PM",
      "commitNameOld": "b87ac3b95ef4ca3fde725b568371c10779bf1427",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 97.56,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n    boolean isLeap \u003d isLeapYear(year);\n    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n    long instant \u003d getYearMillis(year);\n    if (monthOfYear \u003e 1) {\n        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n    }\n    if (dayOfMonth !\u003d 1) {\n        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 728,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n-    FieldUtils.verifyValueBounds(\"year\", year, getMinYear(), getMaxYear());\n-    FieldUtils.verifyValueBounds(\"monthOfYear\", monthOfYear, 1, 12);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n     boolean isLeap \u003d isLeapYear(year);\n-    FieldUtils.verifyValueBounds(\"dayOfMonth\", dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n     long instant \u003d getYearMillis(year);\n     if (monthOfYear \u003e 1) {\n         instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n     }\n     if (dayOfMonth !\u003d 1) {\n         instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n     }\n     return instant;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bdd176eed470329a73d7ee08498183e579cea60": {
      "type": "Yfilerename",
      "commitMessage": "Change Chronology to abstract class\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@432 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/22/04, 8:15 AM",
      "commitName": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 7:44 AM",
      "commitNameOld": "5f9b9b675631bda3568df0d47ca305126d426011",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n    FieldUtils.verifyValueBounds(\"year\", year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(\"monthOfYear\", monthOfYear, 1, 12);\n    boolean isLeap \u003d isLeapYear(year);\n    FieldUtils.verifyValueBounds(\"dayOfMonth\", dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n    long instant \u003d getYearMillis(year);\n    if (monthOfYear \u003e 1) {\n        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n    }\n    if (dayOfMonth !\u003d 1) {\n        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 755,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java"
      }
    },
    "194de43297ee92161aef886025d5aeba42db637e": {
      "type": "Yintroduced",
      "commitMessage": "Removed those pesky getDateOnlyMillis and getTimeOnlyMillis methods.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@306 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "7/17/04, 12:16 PM",
      "commitName": "194de43297ee92161aef886025d5aeba42db637e",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,14 @@\n+long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n+    FieldUtils.verifyValueBounds(\"year\", year, getMinYear(), getMaxYear());\n+    FieldUtils.verifyValueBounds(\"monthOfYear\", monthOfYear, 1, 12);\n+    boolean isLeap \u003d isLeapYear(year);\n+    FieldUtils.verifyValueBounds(\"dayOfMonth\", dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n+    long instant \u003d getYearMillis(year);\n+    if (monthOfYear \u003e 1) {\n+        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n+    }\n+    if (dayOfMonth !\u003d 1) {\n+        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n+    }\n+    return instant;\n+}\n\\ No newline at end of file\n",
      "actualSource": "long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) throws IllegalArgumentException {\n    FieldUtils.verifyValueBounds(\"year\", year, getMinYear(), getMaxYear());\n    FieldUtils.verifyValueBounds(\"monthOfYear\", monthOfYear, 1, 12);\n    boolean isLeap \u003d isLeapYear(year);\n    FieldUtils.verifyValueBounds(\"dayOfMonth\", dayOfMonth, 1, (isLeap ? MAX_DAYS_PER_MONTH_ARRAY : MIN_DAYS_PER_MONTH_ARRAY)[monthOfYear - 1]);\n    long instant \u003d getYearMillis(year);\n    if (monthOfYear \u003e 1) {\n        instant +\u003d (isLeap ? MAX_TOTAL_MILLIS_BY_MONTH_ARRAY : MIN_TOTAL_MILLIS_BY_MONTH_ARRAY)[monthOfYear - 2];\n    }\n    if (dayOfMonth !\u003d 1) {\n        instant +\u003d (dayOfMonth - 1) * (long) DateTimeConstants.MILLIS_PER_DAY;\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
      "functionStartLine": 755,
      "functionName": "getDateMidnightMillis",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}