{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalFieldValueException.java",
  "functionName": "createMessage",
  "functionId": "createMessage___fieldName-String__value-Number__lowerBound-Number__upperBound-Number__explain-String",
  "sourceFilePath": "src/main/java/org/joda/time/IllegalFieldValueException.java",
  "functionAnnotation": "",
  "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
  "functionStartLine": 39,
  "functionEndLine": 64,
  "numCommitsSeen": 15,
  "timeTaken": 1473,
  "changeHistory": [
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
    "0aa4f5e1f5ec24852393047d4a869ecf447986ea",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9"
  ],
  "changeHistoryShort": {
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "0aa4f5e1f5ec24852393047d4a869ecf447986ea": "Ydocchange",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c": {
      "type": "Ybodychange",
      "commitMessage": "Change some StringBuffer uses to StringBuilder [3532330]\n",
      "commitDate": "6/6/12, 3:35 AM",
      "commitName": "66c4a1c10d33243fb0a6f850d350226ab4d55a6c",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 386.73,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuilder buf \u003d new StringBuilder().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
      "path": "src/main/java/org/joda/time/IllegalFieldValueException.java",
      "functionStartLine": 39,
      "functionName": "createMessage",
      "functionAnnotation": "",
      "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
      "diff": "@@ -1,18 +1,18 @@\n private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n-    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n+    StringBuilder buf \u003d new StringBuilder().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n     if (lowerBound \u003d\u003d null) {\n         if (upperBound \u003d\u003d null) {\n             buf.append(\"is not supported\");\n         } else {\n             buf.append(\"must not be larger than \").append(upperBound);\n         }\n     } else if (upperBound \u003d\u003d null) {\n         buf.append(\"must not be smaller than \").append(lowerBound);\n     } else {\n         buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n     }\n     if (explain !\u003d null) {\n         buf.append(\": \").append(explain);\n     }\n     return buf.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
      "path": "src/main/java/org/joda/time/IllegalFieldValueException.java",
      "functionStartLine": 39,
      "functionName": "createMessage",
      "functionAnnotation": "",
      "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/IllegalFieldValueException.java",
        "newPath": "src/main/java/org/joda/time/IllegalFieldValueException.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
      "path": "JodaTime/src/main/java/org/joda/time/IllegalFieldValueException.java",
      "functionStartLine": 39,
      "functionName": "createMessage",
      "functionAnnotation": "",
      "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/IllegalFieldValueException.java"
      }
    },
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Fix DateTimeZone to better handle spring DST cutover\nbugs 1710316, 1747219, 1755158\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/4/07, 10:23 AM",
      "commitName": "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix DateTimeZone to better handle spring DST cutover\nbugs 1710316, 1747219, 1755158\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "8/4/07, 10:23 AM",
          "commitName": "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "7/31/06, 3:10 PM",
          "commitNameOld": "ce6991c2cfb3b666b53c5ad8b5b1f18d0eca9b21",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 368.8,
          "commitsBetweenForRepo": 118,
          "commitsBetweenForFile": 1,
          "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
          "path": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
          "functionStartLine": 39,
          "functionName": "createMessage",
          "functionAnnotation": "",
          "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
          "diff": "@@ -1,15 +1,18 @@\n-private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n+private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n     StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n     if (lowerBound \u003d\u003d null) {\n         if (upperBound \u003d\u003d null) {\n             buf.append(\"is not supported\");\n         } else {\n             buf.append(\"must not be larger than \").append(upperBound);\n         }\n     } else if (upperBound \u003d\u003d null) {\n         buf.append(\"must not be smaller than \").append(lowerBound);\n     } else {\n         buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n     }\n+    if (explain !\u003d null) {\n+        buf.append(\": \").append(explain);\n+    }\n     return buf.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[fieldName-String, value-Number, lowerBound-Number, upperBound-Number]",
            "newValue": "[fieldName-String, value-Number, lowerBound-Number, upperBound-Number, explain-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix DateTimeZone to better handle spring DST cutover\nbugs 1710316, 1747219, 1755158\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "8/4/07, 10:23 AM",
          "commitName": "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "7/31/06, 3:10 PM",
          "commitNameOld": "ce6991c2cfb3b666b53c5ad8b5b1f18d0eca9b21",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 368.8,
          "commitsBetweenForRepo": 118,
          "commitsBetweenForFile": 1,
          "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
          "path": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
          "functionStartLine": 39,
          "functionName": "createMessage",
          "functionAnnotation": "",
          "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
          "diff": "@@ -1,15 +1,18 @@\n-private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n+private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n     StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n     if (lowerBound \u003d\u003d null) {\n         if (upperBound \u003d\u003d null) {\n             buf.append(\"is not supported\");\n         } else {\n             buf.append(\"must not be larger than \").append(upperBound);\n         }\n     } else if (upperBound \u003d\u003d null) {\n         buf.append(\"must not be smaller than \").append(lowerBound);\n     } else {\n         buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n     }\n+    if (explain !\u003d null) {\n+        buf.append(\": \").append(explain);\n+    }\n     return buf.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Fix DateTimeZone to better handle spring DST cutover\nbugs 1710316, 1747219, 1755158\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "8/4/07, 10:23 AM",
          "commitName": "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "7/31/06, 3:10 PM",
          "commitNameOld": "ce6991c2cfb3b666b53c5ad8b5b1f18d0eca9b21",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 368.8,
          "commitsBetweenForRepo": 118,
          "commitsBetweenForFile": 1,
          "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    if (explain !\u003d null) {\n        buf.append(\": \").append(explain);\n    }\n    return buf.toString();\n}",
          "path": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
          "functionStartLine": 39,
          "functionName": "createMessage",
          "functionAnnotation": "",
          "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n",
          "diff": "@@ -1,15 +1,18 @@\n-private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n+private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound, String explain) {\n     StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n     if (lowerBound \u003d\u003d null) {\n         if (upperBound \u003d\u003d null) {\n             buf.append(\"is not supported\");\n         } else {\n             buf.append(\"must not be larger than \").append(upperBound);\n         }\n     } else if (upperBound \u003d\u003d null) {\n         buf.append(\"must not be smaller than \").append(lowerBound);\n     } else {\n         buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n     }\n+    if (explain !\u003d null) {\n+        buf.append(\": \").append(explain);\n+    }\n     return buf.toString();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@return the message\n",
            "newValue": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@param explain an explanation\n@return the message\n"
          }
        }
      ]
    },
    "0aa4f5e1f5ec24852393047d4a869ecf447986ea": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@845 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/3/05, 2:59 PM",
      "commitName": "0aa4f5e1f5ec24852393047d4a869ecf447986ea",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/31/05, 12:05 AM",
      "commitNameOld": "b5e3897c34bc23ccf840dbe5066ce3369afb0a0b",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 64.62,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    return buf.toString();\n}",
      "path": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
      "functionStartLine": 38,
      "functionName": "createMessage",
      "functionAnnotation": "",
      "functionDoc": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@return the message\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "Creates a message for the exception.\n\n@param fieldName the field name\n@param value the value rejected\n@param lowerBound the lower bound allowed\n@param upperBound the uppe bound allowed\n@return the message\n"
      }
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,15 @@\n+private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n+    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n+    if (lowerBound \u003d\u003d null) {\n+        if (upperBound \u003d\u003d null) {\n+            buf.append(\"is not supported\");\n+        } else {\n+            buf.append(\"must not be larger than \").append(upperBound);\n+        }\n+    } else if (upperBound \u003d\u003d null) {\n+        buf.append(\"must not be smaller than \").append(lowerBound);\n+    } else {\n+        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n+    }\n+    return buf.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static String createMessage(String fieldName, Number value, Number lowerBound, Number upperBound) {\n    StringBuffer buf \u003d new StringBuffer().append(\"Value \").append(value).append(\" for \").append(fieldName).append(\u0027 \u0027);\n    if (lowerBound \u003d\u003d null) {\n        if (upperBound \u003d\u003d null) {\n            buf.append(\"is not supported\");\n        } else {\n            buf.append(\"must not be larger than \").append(upperBound);\n        }\n    } else if (upperBound \u003d\u003d null) {\n        buf.append(\"must not be smaller than \").append(lowerBound);\n    } else {\n        buf.append(\"must be in the range [\").append(lowerBound).append(\u0027,\u0027).append(upperBound).append(\u0027]\u0027);\n    }\n    return buf.toString();\n}",
      "path": "JodaTime/src/java/org/joda/time/IllegalFieldValueException.java",
      "functionStartLine": 25,
      "functionName": "createMessage",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}