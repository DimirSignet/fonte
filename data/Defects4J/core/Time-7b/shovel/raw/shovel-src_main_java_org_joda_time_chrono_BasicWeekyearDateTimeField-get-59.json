{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicWeekyearDateTimeField.java",
  "functionName": "get",
  "functionId": "get___instant-long",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
  "functionAnnotation": "",
  "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
  "functionStartLine": 59,
  "functionEndLine": 61,
  "numCommitsSeen": 17,
  "timeTaken": 988,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "86d15ea163e5731450a4da7d3fcfa49e29f8c16c",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "86d15ea163e5731450a4da7d3fcfa49e29f8c16c": "Yfilerename",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Ymultichange(Yfilerename,Ybodychange)",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int get(long instant) {\n    return iChronology.getWeekyear(instant);\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
      "functionStartLine": 59,
      "functionName": "get",
      "functionAnnotation": "",
      "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
        "newPath": "src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int get(long instant) {\n    return iChronology.getWeekyear(instant);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
      "functionStartLine": 59,
      "functionName": "get",
      "functionAnnotation": "",
      "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java"
      }
    },
    "86d15ea163e5731450a4da7d3fcfa49e29f8c16c": {
      "type": "Yfilerename",
      "commitMessage": "Refactor GJ named classes to less specific Basic named classes\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@821 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "7/19/05, 1:26 PM",
      "commitName": "86d15ea163e5731450a4da7d3fcfa49e29f8c16c",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/19/05, 1:26 PM",
      "commitNameOld": "6c7032e613b5be8d6dbc19811f2e11221bf65c6c",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int get(long instant) {\n    return iChronology.getWeekyear(instant);\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java",
      "functionStartLine": 59,
      "functionName": "get",
      "functionAnnotation": "",
      "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java"
      }
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int get(long instant) {\n    return iChronology.getWeekyear(instant);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java",
          "functionStartLine": 99,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
          "diff": "@@ -1,10 +1,3 @@\n public int get(long instant) {\n-    int week \u003d iChronology.weekOfWeekyear().get(instant);\n-    if (week \u003d\u003d 1) {\n-        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n-    } else if (week \u003e 51) {\n-        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n-    } else {\n-        return iChronology.year().get(instant);\n-    }\n+    return iChronology.getWeekyear(instant);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/gj/GJWeekyearDateTimeField.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int get(long instant) {\n    return iChronology.getWeekyear(instant);\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java",
          "functionStartLine": 99,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
          "diff": "@@ -1,10 +1,3 @@\n public int get(long instant) {\n-    int week \u003d iChronology.weekOfWeekyear().get(instant);\n-    if (week \u003d\u003d 1) {\n-        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n-    } else if (week \u003e 51) {\n-        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n-    } else {\n-        return iChronology.year().get(instant);\n-    }\n+    return iChronology.getWeekyear(instant);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public int get(long instant) {\n    int week \u003d iChronology.weekOfWeekyear().get(instant);\n    if (week \u003d\u003d 1) {\n        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n    } else if (week \u003e 51) {\n        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n    } else {\n        return iChronology.year().get(instant);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/gj/GJWeekyearDateTimeField.java",
          "functionStartLine": 99,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public int get(long millis) {\n-    int week \u003d iChronology.weekOfWeekyear().get(millis);\n+public int get(long instant) {\n+    int week \u003d iChronology.weekOfWeekyear().get(instant);\n     if (week \u003d\u003d 1) {\n-        return iChronology.year().get(millis + DateTimeConstants.MILLIS_PER_WEEK);\n+        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n     } else if (week \u003e 51) {\n-        return iChronology.year().get(millis - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n+        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n     } else {\n-        return iChronology.year().get(millis);\n+        return iChronology.year().get(instant);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[millis-long]",
            "newValue": "[instant-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public int get(long instant) {\n    int week \u003d iChronology.weekOfWeekyear().get(instant);\n    if (week \u003d\u003d 1) {\n        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n    } else if (week \u003e 51) {\n        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n    } else {\n        return iChronology.year().get(instant);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/gj/GJWeekyearDateTimeField.java",
          "functionStartLine": 99,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public int get(long millis) {\n-    int week \u003d iChronology.weekOfWeekyear().get(millis);\n+public int get(long instant) {\n+    int week \u003d iChronology.weekOfWeekyear().get(instant);\n     if (week \u003d\u003d 1) {\n-        return iChronology.year().get(millis + DateTimeConstants.MILLIS_PER_WEEK);\n+        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n     } else if (week \u003e 51) {\n-        return iChronology.year().get(millis - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n+        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n     } else {\n-        return iChronology.year().get(millis);\n+        return iChronology.year().get(instant);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public int get(long instant) {\n    int week \u003d iChronology.weekOfWeekyear().get(instant);\n    if (week \u003d\u003d 1) {\n        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n    } else if (week \u003e 51) {\n        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n    } else {\n        return iChronology.year().get(instant);\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/gj/GJWeekyearDateTimeField.java",
          "functionStartLine": 99,
          "functionName": "get",
          "functionAnnotation": "",
          "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n",
          "diff": "@@ -1,10 +1,10 @@\n-public int get(long millis) {\n-    int week \u003d iChronology.weekOfWeekyear().get(millis);\n+public int get(long instant) {\n+    int week \u003d iChronology.weekOfWeekyear().get(instant);\n     if (week \u003d\u003d 1) {\n-        return iChronology.year().get(millis + DateTimeConstants.MILLIS_PER_WEEK);\n+        return iChronology.year().get(instant + DateTimeConstants.MILLIS_PER_WEEK);\n     } else if (week \u003e 51) {\n-        return iChronology.year().get(millis - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n+        return iChronology.year().get(instant - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n     } else {\n-        return iChronology.year().get(millis);\n+        return iChronology.year().get(instant);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param millis the time instant in millis to query.\n@return the year extracted from the input.\n",
            "newValue": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param instant the time instant in millis to query.\n@return the year extracted from the input.\n"
          }
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,10 @@\n+public int get(long millis) {\n+    int week \u003d iChronology.weekOfWeekyear().get(millis);\n+    if (week \u003d\u003d 1) {\n+        return iChronology.year().get(millis + DateTimeConstants.MILLIS_PER_WEEK);\n+    } else if (week \u003e 51) {\n+        return iChronology.year().get(millis - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n+    } else {\n+        return iChronology.year().get(millis);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int get(long millis) {\n    int week \u003d iChronology.weekOfWeekyear().get(millis);\n    if (week \u003d\u003d 1) {\n        return iChronology.year().get(millis + DateTimeConstants.MILLIS_PER_WEEK);\n    } else if (week \u003e 51) {\n        return iChronology.year().get(millis - (2 * DateTimeConstants.MILLIS_PER_WEEK));\n    } else {\n        return iChronology.year().get(millis);\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/gj/GJWeekyearDateTimeField.java",
      "functionStartLine": 90,
      "functionName": "get",
      "functionAnnotation": "",
      "functionDoc": "Get the Year of a week based year component of the specified time instant.\n\n@see org.joda.time.DateTimeField#get\n@param millis the time instant in millis to query.\n@return the year extracted from the input.\n"
    }
  }
}