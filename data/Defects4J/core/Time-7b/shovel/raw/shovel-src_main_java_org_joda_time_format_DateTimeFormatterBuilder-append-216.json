{
  "origin": "codeshovel",
  "repositoryName": "Time-7b",
  "repositoryPath": "/tmp/Time-7b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeFormatterBuilder.java",
  "functionName": "append",
  "functionId": "append___formatter-DateTimeFormatter",
  "sourceFilePath": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Appends another formatter.\n\u003cp\u003e\nThis extracts the underlying printer and parser and appends them\nThe printer and parser interfaces are the low-level part of the formatting API.\nNormally, instances are extracted from another formatter.\nNote however that any formatter specific information, such as the locale,\ntime-zone, chronology, offset parsing or pivot/default year, will not be\nextracted by this method.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
  "functionStartLine": 216,
  "functionEndLine": 221,
  "numCommitsSeen": 68,
  "timeTaken": 6687,
  "changeHistory": [
    "101995f41c8cd6b0aafa0c840de3da1951e0889d",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "ce94280c73fbc6ce9331792e3003e75356ab6ba6",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd",
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
    "9316fce1b432caa8b56ff6056d916f0a0aaefc1a",
    "b6272b13444f16bd60245a5ff8f339e8fee1c64d",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "101995f41c8cd6b0aafa0c840de3da1951e0889d": "Ydocchange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "ce94280c73fbc6ce9331792e3003e75356ab6ba6": "Ydocchange",
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": "Ybodychange",
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": "Ymultichange(Ybodychange,Ydocchange)",
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "9316fce1b432caa8b56ff6056d916f0a0aaefc1a": "Yparametermetachange",
    "b6272b13444f16bd60245a5ff8f339e8fee1c64d": "Ydocchange",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Yparametermetachange",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "101995f41c8cd6b0aafa0c840de3da1951e0889d": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc clarify on formatter builder\n\nfrom mailing list email\n",
      "commitDate": "11/27/12, 5:16 AM",
      "commitName": "101995f41c8cd6b0aafa0c840de3da1951e0889d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/13/12, 9:01 AM",
      "commitNameOld": "14863a51230b3d44201646dbc1ce5d7f6bb97a33",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 105.89,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter.getPrinter(), formatter.getParser());\n}",
      "path": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 216,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\u003cp\u003e\nThis extracts the underlying printer and parser and appends them\nThe printer and parser interfaces are the low-level part of the formatting API.\nNormally, instances are extracted from another formatter.\nNote however that any formatter specific information, such as the locale,\ntime-zone, chronology, offset parsing or pivot/default year, will not be\nextracted by this method.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
        "newValue": "Appends another formatter.\n\u003cp\u003e\nThis extracts the underlying printer and parser and appends them\nThe printer and parser interfaces are the low-level part of the formatting API.\nNormally, instances are extracted from another formatter.\nNote however that any formatter specific information, such as the locale,\ntime-zone, chronology, offset parsing or pivot/default year, will not be\nextracted by this method.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n"
      }
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter.getPrinter(), formatter.getParser());\n}",
      "path": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 208,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
        "newPath": "src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter.getPrinter(), formatter.getParser());\n}",
      "path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 208,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java"
      }
    },
    "ce94280c73fbc6ce9331792e3003e75356ab6ba6": {
      "type": "Ydocchange",
      "commitMessage": "Enhance javadoc\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1427 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/7/09, 12:07 PM",
      "commitName": "ce94280c73fbc6ce9331792e3003e75356ab6ba6",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/4/09, 3:55 PM",
      "commitNameOld": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.84,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter.getPrinter(), formatter.getParser());\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 208,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
        "newValue": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder, for chaining\n@throws IllegalArgumentException if formatter is null or of an invalid type\n"
      }
    },
    "5082337a4152e04ebd8077fd0b7fa28113a4d79e": {
      "type": "Ybodychange",
      "commitMessage": "Refactor DateTime formatting to use decoration pattern\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@687 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/12/05, 6:39 PM",
      "commitName": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/12/05, 3:28 PM",
      "commitNameOld": "28108d2dd6ba602f2b3d328045e74a3d2bf2d0a9",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter.getPrinter(), formatter.getParser());\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 190,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
      "diff": "@@ -1,6 +1,6 @@\n public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n-    return append0(formatter);\n+    return append0(formatter.getPrinter(), formatter.getParser());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1707517294d44202e104305e7b0c6fb12dd1a6dd": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/12/04, 8:21 PM",
      "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/12/04, 8:21 PM",
          "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "12/11/04, 11:10 AM",
          "commitNameOld": "7d2cfa167873f8f58a65f358623c1738e6332069",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 227,
          "functionName": "append",
          "functionAnnotation": "",
          "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
          "diff": "@@ -1,9 +1,6 @@\n public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n-    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n-        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n-    }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Restored formatting interfaces to provide same functionality as v0.95.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@604 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/12/04, 8:21 PM",
          "commitName": "1707517294d44202e104305e7b0c6fb12dd1a6dd",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "12/11/04, 11:10 AM",
          "commitNameOld": "7d2cfa167873f8f58a65f358623c1738e6332069",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 227,
          "functionName": "append",
          "functionAnnotation": "",
          "functionDoc": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
          "diff": "@@ -1,9 +1,6 @@\n public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n-    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n-        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n-    }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Appends another formatter.\n\u003cp\u003e\nThe formatter must extend \u003ccode\u003eDateTimeFormatterProvider\u003c/code\u003e.\nThis is an internal class, which all supplied format classes extend.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
            "newValue": "Appends another formatter.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n"
          }
        }
      ]
    },
    "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "10/28/04, 3:56 PM",
      "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/11/04, 4:30 PM",
          "commitNameOld": "9316fce1b432caa8b56ff6056d916f0a0aaefc1a",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 46.98,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n    }\n    return append0(formatter);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 231,
          "functionName": "append",
          "functionAnnotation": "",
          "functionDoc": "Appends another formatter.\n\u003cp\u003e\nThe formatter must extend \u003ccode\u003eDateTimeFormatterProvider\u003c/code\u003e.\nThis is an internal class, which all supplied format classes extend.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
          "diff": "@@ -1,6 +1,9 @@\n-public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n+public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n+    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n+        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n+    }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalArgumentException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/11/04, 4:30 PM",
          "commitNameOld": "9316fce1b432caa8b56ff6056d916f0a0aaefc1a",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 46.98,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n    }\n    return append0(formatter);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 231,
          "functionName": "append",
          "functionAnnotation": "",
          "functionDoc": "Appends another formatter.\n\u003cp\u003e\nThe formatter must extend \u003ccode\u003eDateTimeFormatterProvider\u003c/code\u003e.\nThis is an internal class, which all supplied format classes extend.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
          "diff": "@@ -1,6 +1,9 @@\n-public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n+public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n+    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n+        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n+    }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactor format package to use late binding of chronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@543 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "10/28/04, 3:56 PM",
          "commitName": "6cad802018b6b82ea4df53aaf91a0bbc98b2f9a3",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "9/11/04, 4:30 PM",
          "commitNameOld": "9316fce1b432caa8b56ff6056d916f0a0aaefc1a",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 46.98,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n    }\n    return append0(formatter);\n}",
          "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
          "functionStartLine": 231,
          "functionName": "append",
          "functionAnnotation": "",
          "functionDoc": "Appends another formatter.\n\u003cp\u003e\nThe formatter must extend \u003ccode\u003eDateTimeFormatterProvider\u003c/code\u003e.\nThis is an internal class, which all supplied format classes extend.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n",
          "diff": "@@ -1,6 +1,9 @@\n-public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n+public DateTimeFormatterBuilder append(DateTimeFormatter formatter) {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n+    if (formatter instanceof BaseDateTimeFormatter \u003d\u003d false) {\n+        throw new IllegalArgumentException(\"Formatter must extend BaseDateTimeFormatter\");\n+    }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Appends another formatter.\n\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null\n",
            "newValue": "Appends another formatter.\n\u003cp\u003e\nThe formatter must extend \u003ccode\u003eDateTimeFormatterProvider\u003c/code\u003e.\nThis is an internal class, which all supplied format classes extend.\n\n@param formatter the formatter to add\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null or of an invalid type\n"
          }
        }
      ]
    },
    "9316fce1b432caa8b56ff6056d916f0a0aaefc1a": {
      "type": "Yparametermetachange",
      "commitMessage": "Use DateTimeFieldType for custom fields\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@504 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/11/04, 4:30 PM",
      "commitName": "9316fce1b432caa8b56ff6056d916f0a0aaefc1a",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "9/9/04, 3:45 PM",
      "commitNameOld": "8ef60672c1dd5407b0761b81408857be44562ecf",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 266,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null\n",
      "diff": "@@ -1,6 +1,6 @@\n-public DateTimeFormatterBuilder append(final DateTimeFormatter formatter) throws IllegalArgumentException {\n+public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[formatter-DateTimeFormatter(modifiers-final)]",
        "newValue": "[formatter-DateTimeFormatter]"
      }
    },
    "b6272b13444f16bd60245a5ff8f339e8fee1c64d": {
      "type": "Ydocchange",
      "commitMessage": "More comments.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@18 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 7:01 PM",
      "commitName": "b6272b13444f16bd60245a5ff8f339e8fee1c64d",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "12/18/03, 6:07 PM",
      "commitNameOld": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(final DateTimeFormatter formatter) throws IllegalArgumentException {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 257,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Appends another formatter.\n\n@throws IllegalArgumentException if formatter is null\n",
        "newValue": "Appends another formatter.\n\n@return this DateTimeFormatterBuilder\n@throws IllegalArgumentException if formatter is null\n"
      }
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Yparametermetachange",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "12/16/03, 1:39 PM",
      "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.19,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeFormatterBuilder append(final DateTimeFormatter formatter) throws IllegalArgumentException {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 256,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@throws IllegalArgumentException if formatter is null\n",
      "diff": "@@ -1,6 +1,6 @@\n-public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n+public DateTimeFormatterBuilder append(final DateTimeFormatter formatter) throws IllegalArgumentException {\n     if (formatter \u003d\u003d null) {\n         throw new IllegalArgumentException(\"No formatter supplied\");\n     }\n     return append0(formatter);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[formatter-DateTimeFormatter]",
        "newValue": "[formatter-DateTimeFormatter(modifiers-final)]"
      }
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,6 @@\n+public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n+    if (formatter \u003d\u003d null) {\n+        throw new IllegalArgumentException(\"No formatter supplied\");\n+    }\n+    return append0(formatter);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) throws IllegalArgumentException {\n    if (formatter \u003d\u003d null) {\n        throw new IllegalArgumentException(\"No formatter supplied\");\n    }\n    return append0(formatter);\n}",
      "path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java",
      "functionStartLine": 306,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Appends another formatter.\n\n@throws IllegalArgumentException if formatter is null\n"
    }
  }
}