{
  "origin": "codeshovel",
  "repositoryName": "Closure-8b",
  "repositoryPath": "/tmp/Closure-8b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CollapseVariableDeclarations.java",
  "functionName": "applyCollapses",
  "functionId": "applyCollapses",
  "sourceFilePath": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 207,
  "functionEndLine": 243,
  "numCommitsSeen": 23,
  "timeTaken": 876,
  "changeHistory": [
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "80ee905775eded2256972f3e762862fcf66f0095",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "80ee905775eded2256972f3e762862fcf66f0095": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 103.94,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "actualSource": "private void applyCollapses() {\n    for (Collapse collapse : collapses) {\n        Node var \u003d new Node(Token.VAR);\n        var.copyInformationFrom(collapse.startNode);\n        collapse.parent.addChildBefore(var, collapse.startNode);\n        boolean redeclaration \u003d false;\n        for (Node n \u003d collapse.startNode; n !\u003d collapse.endNode; ) {\n            Node next \u003d n.getNext();\n            Preconditions.checkState(var.getNext() \u003d\u003d n);\n            collapse.parent.removeChildAfter(var);\n            if (n.isVar()) {\n                while (n.hasChildren()) {\n                    var.addChildToBack(n.removeFirstChild());\n                }\n            } else {\n                Node assign \u003d n.getFirstChild();\n                Node lhs \u003d assign.getFirstChild();\n                Preconditions.checkState(lhs.isName());\n                Node rhs \u003d assign.getLastChild();\n                lhs.addChildToBack(rhs.detachFromParent());\n                var.addChildToBack(lhs.detachFromParent());\n                redeclaration \u003d true;\n            }\n            n \u003d next;\n        }\n        if (redeclaration) {\n            JSDocInfo info \u003d new JSDocInfo();\n            info.addSuppression(\"duplicate\");\n            var.setJSDocInfo(info);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 207,
      "functionName": "applyCollapses",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,32 +1,32 @@\n private void applyCollapses() {\n     for (Collapse collapse : collapses) {\n         Node var \u003d new Node(Token.VAR);\n         var.copyInformationFrom(collapse.startNode);\n         collapse.parent.addChildBefore(var, collapse.startNode);\n         boolean redeclaration \u003d false;\n         for (Node n \u003d collapse.startNode; n !\u003d collapse.endNode; ) {\n             Node next \u003d n.getNext();\n             Preconditions.checkState(var.getNext() \u003d\u003d n);\n             collapse.parent.removeChildAfter(var);\n-            if (NodeUtil.isVar(n)) {\n+            if (n.isVar()) {\n                 while (n.hasChildren()) {\n                     var.addChildToBack(n.removeFirstChild());\n                 }\n             } else {\n                 Node assign \u003d n.getFirstChild();\n                 Node lhs \u003d assign.getFirstChild();\n-                Preconditions.checkState(NodeUtil.isName(lhs));\n+                Preconditions.checkState(lhs.isName());\n                 Node rhs \u003d assign.getLastChild();\n                 lhs.addChildToBack(rhs.detachFromParent());\n                 var.addChildToBack(lhs.detachFromParent());\n                 redeclaration \u003d true;\n             }\n             n \u003d next;\n         }\n         if (redeclaration) {\n             JSDocInfo info \u003d new JSDocInfo();\n             info.addSuppression(\"duplicate\");\n             var.setJSDocInfo(info);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "80ee905775eded2256972f3e762862fcf66f0095": {
      "type": "Ybodychange",
      "commitMessage": "\nAggressive varaible declaration collapsing\n\nR\u003djohnlenz\nDELTA\u003d103  (79 added, 0 deleted, 24 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1006\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@930 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/22/11, 2:15 PM",
      "commitName": "80ee905775eded2256972f3e762862fcf66f0095",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "3/15/11, 11:18 AM",
      "commitNameOld": "b7d0c1729ff32aa456727ed8c04dce277b1ebf89",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 7.12,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "private void applyCollapses() {\n    for (Collapse collapse : collapses) {\n        Node var \u003d new Node(Token.VAR);\n        var.copyInformationFrom(collapse.startNode);\n        collapse.parent.addChildBefore(var, collapse.startNode);\n        boolean redeclaration \u003d false;\n        for (Node n \u003d collapse.startNode; n !\u003d collapse.endNode; ) {\n            Node next \u003d n.getNext();\n            Preconditions.checkState(var.getNext() \u003d\u003d n);\n            collapse.parent.removeChildAfter(var);\n            if (NodeUtil.isVar(n)) {\n                while (n.hasChildren()) {\n                    var.addChildToBack(n.removeFirstChild());\n                }\n            } else {\n                Node assign \u003d n.getFirstChild();\n                Node lhs \u003d assign.getFirstChild();\n                Preconditions.checkState(NodeUtil.isName(lhs));\n                Node rhs \u003d assign.getLastChild();\n                lhs.addChildToBack(rhs.detachFromParent());\n                var.addChildToBack(lhs.detachFromParent());\n                redeclaration \u003d true;\n            }\n            n \u003d next;\n        }\n        if (redeclaration) {\n            JSDocInfo info \u003d new JSDocInfo();\n            info.addSuppression(\"duplicate\");\n            var.setJSDocInfo(info);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 185,
      "functionName": "applyCollapses",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,32 @@\n private void applyCollapses() {\n     for (Collapse collapse : collapses) {\n-        Node first \u003d collapse.firstVarNode;\n-        while (first.getNext() !\u003d null \u0026\u0026 first.getNext().getType() \u003d\u003d Token.VAR) {\n-            Node next \u003d collapse.parent.removeChildAfter(first);\n-            first.addChildrenToBack(next.removeChildren());\n+        Node var \u003d new Node(Token.VAR);\n+        var.copyInformationFrom(collapse.startNode);\n+        collapse.parent.addChildBefore(var, collapse.startNode);\n+        boolean redeclaration \u003d false;\n+        for (Node n \u003d collapse.startNode; n !\u003d collapse.endNode; ) {\n+            Node next \u003d n.getNext();\n+            Preconditions.checkState(var.getNext() \u003d\u003d n);\n+            collapse.parent.removeChildAfter(var);\n+            if (NodeUtil.isVar(n)) {\n+                while (n.hasChildren()) {\n+                    var.addChildToBack(n.removeFirstChild());\n+                }\n+            } else {\n+                Node assign \u003d n.getFirstChild();\n+                Node lhs \u003d assign.getFirstChild();\n+                Preconditions.checkState(NodeUtil.isName(lhs));\n+                Node rhs \u003d assign.getLastChild();\n+                lhs.addChildToBack(rhs.detachFromParent());\n+                var.addChildToBack(lhs.detachFromParent());\n+                redeclaration \u003d true;\n+            }\n+            n \u003d next;\n+        }\n+        if (redeclaration) {\n+            JSDocInfo info \u003d new JSDocInfo();\n+            info.addSuppression(\"duplicate\");\n+            var.setJSDocInfo(info);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+private void applyCollapses() {\n+    for (Collapse collapse : collapses) {\n+        Node first \u003d collapse.firstVarNode;\n+        while (first.getNext() !\u003d null \u0026\u0026 first.getNext().getType() \u003d\u003d Token.VAR) {\n+            Node next \u003d collapse.parent.removeChildAfter(first);\n+            first.addChildrenToBack(next.removeChildren());\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void applyCollapses() {\n    for (Collapse collapse : collapses) {\n        Node first \u003d collapse.firstVarNode;\n        while (first.getNext() !\u003d null \u0026\u0026 first.getNext().getType() \u003d\u003d Token.VAR) {\n            Node next \u003d collapse.parent.removeChildAfter(first);\n            first.addChildrenToBack(next.removeChildren());\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 381,
      "functionName": "applyCollapses",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}