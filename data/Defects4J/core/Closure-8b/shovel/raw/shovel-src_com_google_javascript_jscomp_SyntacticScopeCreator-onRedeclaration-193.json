{
  "origin": "codeshovel",
  "repositoryName": "Closure-8b",
  "repositoryPath": "/tmp/Closure-8b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SyntacticScopeCreator.java",
  "functionName": "onRedeclaration",
  "functionId": "$onRedeclaration___s-Scope__name-String__n-Node__input-CompilerInput",
  "sourceFilePath": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 193,
  "functionEndLine": 225,
  "numCommitsSeen": 37,
  "timeTaken": 1723,
  "changeHistory": [
    "70a5626922ea7e8c98747e22b6986638ba38fadc",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
    "76abdf11394c0e7515ae63335676ea3657badb45",
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9",
    "31134b47a2c5a56410e3097676fee55830dfcb85",
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa",
    "d48c365ba8251057a71a2e2b7aabff640209e31b",
    "6a6ea480bae01f40f9795218ac911bb7de18d34a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": "Ybodychange",
    "76abdf11394c0e7515ae63335676ea3657badb45": "Yannotationchange",
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9": "Ybodychange",
    "31134b47a2c5a56410e3097676fee55830dfcb85": "Ybodychange",
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb": "Ymultichange(Yparameterchange,Ybodychange)",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa": "Ybodychange",
    "d48c365ba8251057a71a2e2b7aabff640209e31b": "Yformatchange",
    "6a6ea480bae01f40f9795218ac911bb7de18d34a": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": {
      "type": "Ybodychange",
      "commitMessage": "\nFix various typos, spelling and grammar errors.\nFixes issue 734. \nContributed by Robert Gust Bardon\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4827\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1979 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/12, 11:09 AM",
      "commitName": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 188.73,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.isCatch() \u0026\u0026 parent.isCatch()) {\n            return;\n        }\n        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n        if (!allowDupe) {\n            compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 193,
      "functionName": "onRedeclaration",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "8/4/11, 1:52 PM",
      "commitNameOld": "a6a7e4007c2b411ff182bcc931470a95a19430e3",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 97.82,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.isCatch() \u0026\u0026 parent.isCatch()) {\n            return;\n        }\n        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n        if (!allowDupe) {\n            compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 193,
      "functionName": "onRedeclaration",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n     Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n-        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n+        if (origParent.isCatch() \u0026\u0026 parent.isCatch()) {\n             return;\n         }\n         boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n         if (!allowDupe) {\n             compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n         compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": {
      "type": "Ybodychange",
      "commitMessage": "\nPart 4, source name/input id split: Require an InputId to lookup a CompilerInput.\n\nR\u003dnicksantos\nDELTA\u003d266  (106 added, 20 deleted, 140 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2899\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1328 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/11, 11:43 AM",
      "commitName": "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.81,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n        if (!allowDupe) {\n            compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 191,
      "functionName": "onRedeclaration",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n     Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n         if (!allowDupe) {\n-            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n+            compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n-        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n+        compiler.report(JSError.make(NodeUtil.getSourceName(n), n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "76abdf11394c0e7515ae63335676ea3657badb45": {
      "type": "Yannotationchange",
      "commitMessage": "\nMake our build warnings free.\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2830\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1301 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/28/11, 4:19 PM",
      "commitName": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/30/11, 1:25 PM",
      "commitNameOld": "9320feca198878ca9464aae089399a8891c314d7",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 28.12,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 186,
      "functionName": "onRedeclaration",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,17 @@\n+@Override\n public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n     Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n         if (!allowDupe) {\n             compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n         compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9": {
      "type": "Ybodychange",
      "commitMessage": "\nPrevent inlining of extern vars that are redeclared.\n\nR\u003dnicksantos\nDELTA\u003d92  (58 added, 16 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2401\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1204 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/23/11, 1:45 PM",
      "commitName": "03db3415761aa9d8ba2fafa0ed64116a8331b1a9",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/16/11, 1:14 PM",
      "commitNameOld": "de8d4c68279b3f81307bee6c131af91f0cf6fea4",
      "commitAuthorOld": "bashir@google.com",
      "daysBetweenCommits": 38.02,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 184,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,16 @@\n public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n     Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n-        boolean allowDupe \u003d false;\n-        JSDocInfo info \u003d n.getJSDocInfo();\n-        if (info \u003d\u003d null) {\n-            info \u003d parent.getJSDocInfo();\n-        }\n-        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n-        info \u003d origVar.nameNode.getJSDocInfo();\n-        if (info \u003d\u003d null) {\n-            info \u003d origParent.getJSDocInfo();\n-        }\n-        allowDupe |\u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n+        boolean allowDupe \u003d hasDuplicateDeclarationSuppression(n, origVar);\n         if (!allowDupe) {\n             compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n         compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "31134b47a2c5a56410e3097676fee55830dfcb85": {
      "type": "Ybodychange",
      "commitMessage": "\nAllows suppress duplicate in either declarations.\n\nR\u003djohnlenz\nDELTA\u003d15  (15 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d952\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@914 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/18/11, 4:17 PM",
      "commitName": "31134b47a2c5a56410e3097676fee55830dfcb85",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "12/9/10, 12:58 PM",
      "commitNameOld": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 99.1,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        info \u003d origVar.nameNode.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d origParent.getJSDocInfo();\n        }\n        allowDupe |\u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 184,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,26 @@\n public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n     Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d false;\n         JSDocInfo info \u003d n.getJSDocInfo();\n         if (info \u003d\u003d null) {\n             info \u003d parent.getJSDocInfo();\n         }\n         allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n+        info \u003d origVar.nameNode.getJSDocInfo();\n+        if (info \u003d\u003d null) {\n+            info \u003d origParent.getJSDocInfo();\n+        }\n+        allowDupe |\u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n         if (!allowDupe) {\n             compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n         compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/9/10, 12:58 PM",
      "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/9/10, 12:58 PM",
          "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 27.64,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "actualSource": "public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
          "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
          "functionStartLine": 184,
          "functionName": "onRedeclaration",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,20 +1,21 @@\n-public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n+public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n+    Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d false;\n         JSDocInfo info \u003d n.getJSDocInfo();\n         if (info \u003d\u003d null) {\n             info \u003d parent.getJSDocInfo();\n         }\n         allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n         if (!allowDupe) {\n-            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n+            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n-        compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_ARGUMENTS_SHADOWED_ERROR));\n+        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[s-Scope, name-String, n-Node, parent-Node, gramps-Node, nodeWithLineNumber-Node]",
            "newValue": "[s-Scope, name-String, n-Node, input-CompilerInput]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/9/10, 12:58 PM",
          "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 27.64,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "actualSource": "public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n    Node parent \u003d n.getParent();\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
          "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
          "functionStartLine": 184,
          "functionName": "onRedeclaration",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,20 +1,21 @@\n-public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n+public void onRedeclaration(Scope s, String name, Node n, CompilerInput input) {\n+    Node parent \u003d n.getParent();\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d false;\n         JSDocInfo info \u003d n.getJSDocInfo();\n         if (info \u003d\u003d null) {\n             info \u003d parent.getJSDocInfo();\n         }\n         allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n         if (!allowDupe) {\n-            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n+            compiler.report(JSError.make(sourceName, n, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n-        compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_ARGUMENTS_SHADOWED_ERROR));\n+        compiler.report(JSError.make(sourceName, n, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 68.84,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 190,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa": {
      "type": "Ybodychange",
      "commitMessage": "Disallow the shadowing of \"arguments\" in ways we can\u0027t currently track. (John)\nR\u003drobert\nDELTA\u003d39  (37 added, 1 deleted, 1 changed)\n\nFix the string displayed for the REGEXP token. (John)\nR\u003dalan\nDELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003drraspa\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@172 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/6/10, 5:31 PM",
      "commitName": "45fd54a488cfbf27978fc4811a722f1fedb8ddaa",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/26/10, 7:11 AM",
      "commitNameOld": "d48c365ba8251057a71a2e2b7aabff640209e31b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 39.39,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n        compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_ARGUMENTS_SHADOWED_ERROR));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 190,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,20 @@\n public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n     if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d false;\n         JSDocInfo info \u003d n.getJSDocInfo();\n         if (info \u003d\u003d null) {\n             info \u003d parent.getJSDocInfo();\n         }\n         allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n         if (!allowDupe) {\n             compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n+    } else if (name.equals(ARGUMENTS) \u0026\u0026 !NodeUtil.isVarDeclaration(n)) {\n+        compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_ARGUMENTS_SHADOWED_ERROR));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d48c365ba8251057a71a2e2b7aabff640209e31b": {
      "type": "Yformatchange",
      "commitMessage": "\"var arguments\" never shadows the built-in arguments array. Fixes issue 115.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@117 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/26/10, 7:11 AM",
      "commitName": "d48c365ba8251057a71a2e2b7aabff640209e31b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/19/09, 1:23 PM",
      "commitNameOld": "6a6ea480bae01f40f9795218ac911bb7de18d34a",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 98.74,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 185,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "6a6ea480bae01f40f9795218ac911bb7de18d34a": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t warn about duplicate variable declarations unless warning_level is\nset to VERBOSE.\n\nImplementation of libary function goog.base.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@13 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/19/09, 1:23 PM",
      "commitName": "6a6ea480bae01f40f9795218ac911bb7de18d34a",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 15.9,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n    if (scope.isGlobal()) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 181,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n-    if (!compiler.getCodingConvention().allowsVariableRedeclaration(scope, name, parent)) {\n+    if (scope.isGlobal()) {\n         Scope.Var origVar \u003d scope.getVar(name);\n         Node origParent \u003d origVar.getParentNode();\n         if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n             return;\n         }\n         boolean allowDupe \u003d false;\n         JSDocInfo info \u003d n.getJSDocInfo();\n         if (info \u003d\u003d null) {\n             info \u003d parent.getJSDocInfo();\n         }\n         allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n         if (!allowDupe) {\n             compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n+    if (!compiler.getCodingConvention().allowsVariableRedeclaration(scope, name, parent)) {\n+        Scope.Var origVar \u003d scope.getVar(name);\n+        Node origParent \u003d origVar.getParentNode();\n+        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n+            return;\n+        }\n+        boolean allowDupe \u003d false;\n+        JSDocInfo info \u003d n.getJSDocInfo();\n+        if (info \u003d\u003d null) {\n+            info \u003d parent.getJSDocInfo();\n+        }\n+        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n+        if (!allowDupe) {\n+            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void onRedeclaration(Scope s, String name, Node n, Node parent, Node gramps, Node nodeWithLineNumber) {\n    if (!compiler.getCodingConvention().allowsVariableRedeclaration(scope, name, parent)) {\n        Scope.Var origVar \u003d scope.getVar(name);\n        Node origParent \u003d origVar.getParentNode();\n        if (origParent.getType() \u003d\u003d Token.CATCH \u0026\u0026 parent.getType() \u003d\u003d Token.CATCH) {\n            return;\n        }\n        boolean allowDupe \u003d false;\n        JSDocInfo info \u003d n.getJSDocInfo();\n        if (info \u003d\u003d null) {\n            info \u003d parent.getJSDocInfo();\n        }\n        allowDupe \u003d info !\u003d null \u0026\u0026 info.getSuppressions().contains(\"duplicate\");\n        if (!allowDupe) {\n            compiler.report(JSError.make(sourceName, nodeWithLineNumber, VAR_MULTIPLY_DECLARED_ERROR, name, (origVar.input !\u003d null ? origVar.input.getName() : \"??\")));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 181,
      "functionName": "onRedeclaration",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}