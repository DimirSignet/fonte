{
  "origin": "codeshovel",
  "repositoryName": "Closure-8b",
  "repositoryPath": "/tmp/Closure-8b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CollapseVariableDeclarations.java",
  "functionName": "visit",
  "functionId": "$visit___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 137,
  "functionEndLine": 179,
  "numCommitsSeen": 23,
  "timeTaken": 1179,
  "changeHistory": [
    "39f629a8cfaab37da55288010640d7e516000b1f",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "76abdf11394c0e7515ae63335676ea3657badb45",
    "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
    "80ee905775eded2256972f3e762862fcf66f0095",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "39f629a8cfaab37da55288010640d7e516000b1f": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "76abdf11394c0e7515ae63335676ea3657badb45": "Yannotationchange",
    "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92": "Ybodychange",
    "80ee905775eded2256972f3e762862fcf66f0095": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39f629a8cfaab37da55288010640d7e516000b1f": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace calls of the form \"Node.getType() !\u003d Token.XX\" with\n\"!Node.isXX()\" calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3706\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1598 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/14/11, 6:13 PM",
      "commitName": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 4.4,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.isVar()) {\n        blacklistStubVars(t, n);\n    }\n    if (!n.isVar() \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.isIf())\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.isVar();\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.isVar() || canBeRedeclared(n, t.getScope()))) {\n        if (n.isVar()) {\n            blacklistStubVars(t, n);\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 137,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.isVar()) {\n         blacklistStubVars(t, n);\n     }\n-    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n+    if (!n.isVar() \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n     if (parent.isIf())\n         return;\n     Node varNode \u003d n;\n     boolean hasVar \u003d n.isVar();\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n     while (n !\u003d null \u0026\u0026 (n.isVar() || canBeRedeclared(n, t.getScope()))) {\n         if (n.isVar()) {\n             blacklistStubVars(t, n);\n             hasVar \u003d true;\n         }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n     if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n         collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.isVar()) {\n        blacklistStubVars(t, n);\n    }\n    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.isIf())\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.isVar();\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.isVar() || canBeRedeclared(n, t.getScope()))) {\n        if (n.isVar()) {\n            blacklistStubVars(t, n);\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 137,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n-    if (n.getType() \u003d\u003d Token.VAR) {\n+    if (n.isVar()) {\n         blacklistStubVars(t, n);\n     }\n     if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n-    if (parent.getType() \u003d\u003d Token.IF)\n+    if (parent.isIf())\n         return;\n     Node varNode \u003d n;\n-    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n+    boolean hasVar \u003d n.isVar();\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n-    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n+    while (n !\u003d null \u0026\u0026 (n.isVar() || canBeRedeclared(n, t.getScope()))) {\n         if (n.isVar()) {\n             blacklistStubVars(t, n);\n             hasVar \u003d true;\n         }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n     if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n         collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 103.94,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() \u003d\u003d Token.VAR) {\n        blacklistStubVars(t, n);\n    }\n    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.getType() \u003d\u003d Token.IF)\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n        if (n.isVar()) {\n            blacklistStubVars(t, n);\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 137,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,29 +1,29 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() \u003d\u003d Token.VAR) {\n         blacklistStubVars(t, n);\n     }\n     if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n     if (parent.getType() \u003d\u003d Token.IF)\n         return;\n     Node varNode \u003d n;\n     boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n     while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n-        if (NodeUtil.isVar(n)) {\n+        if (n.isVar()) {\n             blacklistStubVars(t, n);\n             hasVar \u003d true;\n         }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n     if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n         collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "76abdf11394c0e7515ae63335676ea3657badb45": {
      "type": "Yannotationchange",
      "commitMessage": "\nMake our build warnings free.\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2830\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1301 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/28/11, 4:19 PM",
      "commitName": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 107.17,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() \u003d\u003d Token.VAR) {\n        blacklistStubVars(t, n);\n    }\n    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.getType() \u003d\u003d Token.IF)\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n        if (NodeUtil.isVar(n)) {\n            blacklistStubVars(t, n);\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 137,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,29 @@\n+@Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() \u003d\u003d Token.VAR) {\n         blacklistStubVars(t, n);\n     }\n     if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n     if (parent.getType() \u003d\u003d Token.IF)\n         return;\n     Node varNode \u003d n;\n     boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n     while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n         if (NodeUtil.isVar(n)) {\n             blacklistStubVars(t, n);\n             hasVar \u003d true;\n         }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n     if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n         collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92": {
      "type": "Ybodychange",
      "commitMessage": "\nDon\u0027t redeclare vars that have been declared without initial values.\nFixes issue 397.\n\nR\u003dacleung\nDELTA\u003d46  (30 added, 0 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1225\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@958 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/31/11, 6:51 PM",
      "commitName": "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "3/22/11, 2:15 PM",
      "commitNameOld": "80ee905775eded2256972f3e762862fcf66f0095",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 9.19,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() \u003d\u003d Token.VAR) {\n        blacklistStubVars(t, n);\n    }\n    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.getType() \u003d\u003d Token.IF)\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n        if (NodeUtil.isVar(n)) {\n            blacklistStubVars(t, n);\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 135,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,28 @@\n public void visit(NodeTraversal t, Node n, Node parent) {\n+    if (n.getType() \u003d\u003d Token.VAR) {\n+        blacklistStubVars(t, n);\n+    }\n     if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n     if (parent.getType() \u003d\u003d Token.IF)\n         return;\n     Node varNode \u003d n;\n     boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n     while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n         if (NodeUtil.isVar(n)) {\n+            blacklistStubVars(t, n);\n             hasVar \u003d true;\n         }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n     if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n         collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "80ee905775eded2256972f3e762862fcf66f0095": {
      "type": "Ybodychange",
      "commitMessage": "\nAggressive varaible declaration collapsing\n\nR\u003djohnlenz\nDELTA\u003d103  (79 added, 0 deleted, 24 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1006\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@930 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/22/11, 2:15 PM",
      "commitName": "80ee905775eded2256972f3e762862fcf66f0095",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "3/15/11, 11:18 AM",
      "commitNameOld": "b7d0c1729ff32aa456727ed8c04dce277b1ebf89",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 7.12,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.getType() \u003d\u003d Token.IF)\n        return;\n    Node varNode \u003d n;\n    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n        if (NodeUtil.isVar(n)) {\n            hasVar \u003d true;\n        }\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, n, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 131,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,20 +1,24 @@\n public void visit(NodeTraversal t, Node n, Node parent) {\n-    if (n.getType() !\u003d Token.VAR)\n+    if (n.getType() !\u003d Token.VAR \u0026\u0026 !canBeRedeclared(n, t.getScope()))\n         return;\n     if (nodesToCollapse.contains(n))\n         return;\n     if (parent.getType() \u003d\u003d Token.IF)\n         return;\n     Node varNode \u003d n;\n+    boolean hasVar \u003d n.getType() \u003d\u003d Token.VAR;\n     n \u003d n.getNext();\n     boolean hasNodesToCollapse \u003d false;\n-    while (n !\u003d null \u0026\u0026 n.getType() \u003d\u003d Token.VAR) {\n+    while (n !\u003d null \u0026\u0026 (n.getType() \u003d\u003d Token.VAR || canBeRedeclared(n, t.getScope()))) {\n+        if (NodeUtil.isVar(n)) {\n+            hasVar \u003d true;\n+        }\n         nodesToCollapse.add(n);\n         hasNodesToCollapse \u003d true;\n         n \u003d n.getNext();\n     }\n-    if (hasNodesToCollapse) {\n+    if (hasNodesToCollapse \u0026\u0026 hasVar) {\n         nodesToCollapse.add(varNode);\n-        collapses.add(new Collapse(varNode, parent));\n+        collapses.add(new Collapse(varNode, n, parent));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,20 @@\n+public void visit(NodeTraversal t, Node n, Node parent) {\n+    if (n.getType() !\u003d Token.VAR)\n+        return;\n+    if (nodesToCollapse.contains(n))\n+        return;\n+    if (parent.getType() \u003d\u003d Token.IF)\n+        return;\n+    Node varNode \u003d n;\n+    n \u003d n.getNext();\n+    boolean hasNodesToCollapse \u003d false;\n+    while (n !\u003d null \u0026\u0026 n.getType() \u003d\u003d Token.VAR) {\n+        nodesToCollapse.add(n);\n+        hasNodesToCollapse \u003d true;\n+        n \u003d n.getNext();\n+    }\n+    if (hasNodesToCollapse) {\n+        nodesToCollapse.add(varNode);\n+        collapses.add(new Collapse(varNode, parent));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.VAR)\n        return;\n    if (nodesToCollapse.contains(n))\n        return;\n    if (parent.getType() \u003d\u003d Token.IF)\n        return;\n    Node varNode \u003d n;\n    n \u003d n.getNext();\n    boolean hasNodesToCollapse \u003d false;\n    while (n !\u003d null \u0026\u0026 n.getType() \u003d\u003d Token.VAR) {\n        nodesToCollapse.add(n);\n        hasNodesToCollapse \u003d true;\n        n \u003d n.getNext();\n    }\n    if (hasNodesToCollapse) {\n        nodesToCollapse.add(varNode);\n        collapses.add(new Collapse(varNode, parent));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
      "functionStartLine": 349,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}