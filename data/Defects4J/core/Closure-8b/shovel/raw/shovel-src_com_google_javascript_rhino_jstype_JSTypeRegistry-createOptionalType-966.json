{
  "origin": "codeshovel",
  "repositoryName": "Closure-8b",
  "repositoryPath": "/tmp/Closure-8b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JSTypeRegistry.java",
  "functionName": "createOptionalType",
  "functionId": "createOptionalType___type-JSType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/JSTypeRegistry.java",
  "functionAnnotation": "",
  "functionDoc": "Creates a type representing optional values of the given type.\n\n@return the union of the type and the void type\n",
  "functionStartLine": 966,
  "functionEndLine": 972,
  "numCommitsSeen": 65,
  "timeTaken": 4394,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+public JSType createOptionalType(JSType type) {\n+    if (type instanceof UnknownType || type.isAllType()) {\n+        return type;\n+    } else {\n+        return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JSType createOptionalType(JSType type) {\n    if (type instanceof UnknownType || type.isAllType()) {\n        return type;\n    } else {\n        return createUnionType(type, getNativeType(JSTypeNative.VOID_TYPE));\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSTypeRegistry.java",
      "functionStartLine": 748,
      "functionName": "createOptionalType",
      "functionAnnotation": "",
      "functionDoc": "Creates a type representing optional values of the given type.\n\n@return the union of the type and the void type\n"
    }
  }
}