{
  "origin": "codeshovel",
  "repositoryName": "Closure-64b",
  "repositoryPath": "/tmp/Closure-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GlobalNamespace.java",
  "functionName": "isConstructorOrEnumDeclaration",
  "functionId": "$isConstructorOrEnumDeclaration___n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/GlobalNamespace.java",
  "functionAnnotation": "",
  "functionDoc": "Determines whether a set operation is a constructor or enumeration\ndeclaration. The set operation may either be an assignment to a name,\na variable declaration, or an object literal key mapping.\n\n@param n The node that represents the name being set\n@param parent Parent node of {@code n} (an ASSIGN, VAR, or OBJLIT node)\n@return Whether the set operation is either a constructor or enum\n    declaration\n",
  "functionStartLine": 525,
  "functionEndLine": 553,
  "numCommitsSeen": 22,
  "timeTaken": 1449,
  "changeHistory": [
    "05f5aa1184d5796c0afe11a66c92a72bdfd10864",
    "4b065734d8afb5ab0d241ee5da22af0fa9d75ec3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "05f5aa1184d5796c0afe11a66c92a72bdfd10864": "Ybodychange",
    "4b065734d8afb5ab0d241ee5da22af0fa9d75ec3": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05f5aa1184d5796c0afe11a66c92a72bdfd10864": {
      "type": "Ybodychange",
      "commitMessage": "\ncl/18393279 was a bit too conservative. I checked a few binaries,\nand old versions of jscompiler used to collapse this correctly,\nso we should continue to optimize this.\n\n\nR\u003dacleung\nDELTA\u003d25  (14 added, 9 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d221\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@672 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 7:53 AM",
      "commitName": "05f5aa1184d5796c0afe11a66c92a72bdfd10864",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "12/14/10, 8:19 AM",
      "commitNameOld": "d68322323aa52d943b9dc5618ef8ea81d43d7b4f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 23.98,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n    JSDocInfo info;\n    int valueNodeType;\n    switch(parent.getType()) {\n        case Token.ASSIGN:\n            info \u003d parent.getJSDocInfo();\n            valueNodeType \u003d n.getNext().getType();\n            break;\n        case Token.VAR:\n            info \u003d n.getJSDocInfo();\n            if (info \u003d\u003d null) {\n                info \u003d parent.getJSDocInfo();\n            }\n            Node valueNode \u003d n.getFirstChild();\n            valueNodeType \u003d valueNode !\u003d null ? valueNode.getType() : Token.VOID;\n            break;\n        default:\n            if (NodeUtil.isFunctionDeclaration(parent)) {\n                info \u003d parent.getJSDocInfo();\n                valueNodeType \u003d Token.FUNCTION;\n                break;\n            }\n            return false;\n    }\n    return info !\u003d null \u0026\u0026 (info.isConstructor() \u0026\u0026 valueNodeType \u003d\u003d Token.FUNCTION || info.hasEnumParameterType() \u0026\u0026 valueNodeType \u003d\u003d Token.OBJECTLIT);\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 483,
      "functionName": "isConstructorOrEnumDeclaration",
      "functionAnnotation": "",
      "functionDoc": "Determines whether a set operation is a constructor or enumeration\ndeclaration. The set operation may either be an assignment to a name,\na variable declaration, or an object literal key mapping.\n\n@param n The node that represents the name being set\n@param parent Parent node of {@code n} (an ASSIGN, VAR, or OBJLIT node)\n@return Whether the set operation is either a constructor or enum\n    declaration\n",
      "diff": "@@ -1,21 +1,26 @@\n private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n     JSDocInfo info;\n     int valueNodeType;\n     switch(parent.getType()) {\n         case Token.ASSIGN:\n             info \u003d parent.getJSDocInfo();\n             valueNodeType \u003d n.getNext().getType();\n             break;\n         case Token.VAR:\n             info \u003d n.getJSDocInfo();\n             if (info \u003d\u003d null) {\n                 info \u003d parent.getJSDocInfo();\n             }\n             Node valueNode \u003d n.getFirstChild();\n             valueNodeType \u003d valueNode !\u003d null ? valueNode.getType() : Token.VOID;\n             break;\n         default:\n+            if (NodeUtil.isFunctionDeclaration(parent)) {\n+                info \u003d parent.getJSDocInfo();\n+                valueNodeType \u003d Token.FUNCTION;\n+                break;\n+            }\n             return false;\n     }\n     return info !\u003d null \u0026\u0026 (info.isConstructor() \u0026\u0026 valueNodeType \u003d\u003d Token.FUNCTION || info.hasEnumParameterType() \u0026\u0026 valueNodeType \u003d\u003d Token.OBJECTLIT);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4b065734d8afb5ab0d241ee5da22af0fa9d75ec3": {
      "type": "Ybodychange",
      "commitMessage": "\nTurn off collapsing for non-constructor function properties.\nFixes issue 289.\n\nR\u003dacleung\nDELTA\u003d72  (60 added, 1 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d30\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@580 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/30/10, 5:36 PM",
      "commitName": "4b065734d8afb5ab0d241ee5da22af0fa9d75ec3",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/11/10, 9:42 PM",
      "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 18.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n    JSDocInfo info;\n    int valueNodeType;\n    switch(parent.getType()) {\n        case Token.ASSIGN:\n            info \u003d parent.getJSDocInfo();\n            valueNodeType \u003d n.getNext().getType();\n            break;\n        case Token.VAR:\n            info \u003d n.getJSDocInfo();\n            if (info \u003d\u003d null) {\n                info \u003d parent.getJSDocInfo();\n            }\n            Node valueNode \u003d n.getFirstChild();\n            valueNodeType \u003d valueNode !\u003d null ? valueNode.getType() : Token.VOID;\n            break;\n        default:\n            return false;\n    }\n    return info !\u003d null \u0026\u0026 (info.isConstructor() \u0026\u0026 valueNodeType \u003d\u003d Token.FUNCTION || info.hasEnumParameterType() \u0026\u0026 valueNodeType \u003d\u003d Token.OBJECTLIT);\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 469,
      "functionName": "isConstructorOrEnumDeclaration",
      "functionAnnotation": "",
      "functionDoc": "Determines whether a set operation is a constructor or enumeration\ndeclaration. The set operation may either be an assignment to a name,\na variable declaration, or an object literal key mapping.\n\n@param n The node that represents the name being set\n@param parent Parent node of {@code n} (an ASSIGN, VAR, or OBJLIT node)\n@return Whether the set operation is either a constructor or enum\n    declaration\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n+    JSDocInfo info;\n+    int valueNodeType;\n+    switch(parent.getType()) {\n+        case Token.ASSIGN:\n+            info \u003d parent.getJSDocInfo();\n+            valueNodeType \u003d n.getNext().getType();\n+            break;\n+        case Token.VAR:\n+            info \u003d n.getJSDocInfo();\n+            if (info \u003d\u003d null) {\n+                info \u003d parent.getJSDocInfo();\n+            }\n+            Node valueNode \u003d n.getFirstChild();\n+            valueNodeType \u003d valueNode !\u003d null ? valueNode.getType() : Token.VOID;\n+            break;\n+        default:\n+            return false;\n+    }\n+    return info !\u003d null \u0026\u0026 (info.isConstructor() \u0026\u0026 valueNodeType \u003d\u003d Token.FUNCTION || info.hasEnumParameterType() \u0026\u0026 valueNodeType \u003d\u003d Token.OBJECTLIT);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n    JSDocInfo info;\n    int valueNodeType;\n    switch(parent.getType()) {\n        case Token.ASSIGN:\n            info \u003d parent.getJSDocInfo();\n            valueNodeType \u003d n.getNext().getType();\n            break;\n        case Token.VAR:\n            info \u003d n.getJSDocInfo();\n            if (info \u003d\u003d null) {\n                info \u003d parent.getJSDocInfo();\n            }\n            Node valueNode \u003d n.getFirstChild();\n            valueNodeType \u003d valueNode !\u003d null ? valueNode.getType() : Token.VOID;\n            break;\n        default:\n            return false;\n    }\n    return info !\u003d null \u0026\u0026 (info.isConstructor() \u0026\u0026 valueNodeType \u003d\u003d Token.FUNCTION || info.hasEnumParameterType() \u0026\u0026 valueNodeType \u003d\u003d Token.OBJECTLIT);\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 477,
      "functionName": "isConstructorOrEnumDeclaration",
      "functionAnnotation": "",
      "functionDoc": "Determines whether a set operation is a constructor or enumeration\ndeclaration. The set operation may either be an assignment to a name,\na variable declaration, or an object literal key mapping.\n\n@param n The node that represents the name being set\n@param parent Parent node of {@code n} (an ASSIGN, VAR, or OBJLIT node)\n@return Whether the set operation is either a constructor or enum\n    declaration\n"
    }
  }
}