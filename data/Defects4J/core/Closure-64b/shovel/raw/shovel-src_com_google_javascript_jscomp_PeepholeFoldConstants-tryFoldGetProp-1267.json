{
  "origin": "codeshovel",
  "repositoryName": "Closure-64b",
  "repositoryPath": "/tmp/Closure-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PeepholeFoldConstants.java",
  "functionName": "tryFoldGetProp",
  "functionId": "tryFoldGetProp___n-Node__left-Node__right-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
  "functionAnnotation": "",
  "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
  "functionStartLine": 1267,
  "functionEndLine": 1302,
  "numCommitsSeen": 61,
  "timeTaken": 6069,
  "changeHistory": [
    "9b27f9c5576f0132875c45dbdef55d22f64d5dcb",
    "653599e7c3922059a78958ea32b216ff9c42800e",
    "cf3fcbbc124d5b8948d7bef5215c45d80dbeae8e",
    "db7e51f90e44be275b568d0b512e9778d6d6b253",
    "e4d75597fbd25bab4291efcfd8b36be880258498",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "9b27f9c5576f0132875c45dbdef55d22f64d5dcb": "Ybodychange",
    "653599e7c3922059a78958ea32b216ff9c42800e": "Ybodychange",
    "cf3fcbbc124d5b8948d7bef5215c45d80dbeae8e": "Ybodychange",
    "db7e51f90e44be275b568d0b512e9778d6d6b253": "Ybodychange",
    "e4d75597fbd25bab4291efcfd8b36be880258498": "Ybodychange",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b27f9c5576f0132875c45dbdef55d22f64d5dcb": {
      "type": "Ybodychange",
      "commitMessage": "\nFold simple reference to object literals:\n{a:1}.a \u003d\u003d\u003e 1\n\nR\u003dacleung\nDELTA\u003d132  (127 added, 0 deleted, 5 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1255\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@969 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/4/11, 2:57 PM",
      "commitName": "9b27f9c5576f0132875c45dbdef55d22f64d5dcb",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/25/11, 4:27 PM",
      "commitNameOld": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 9.94,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (left.getType() \u003d\u003d Token.OBJECTLIT) {\n        return tryFoldObjectPropAccess(n, left, right);\n    }\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1600,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "@@ -1,25 +1,28 @@\n private Node tryFoldGetProp(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n+    if (left.getType() \u003d\u003d Token.OBJECTLIT) {\n+        return tryFoldObjectPropAccess(n, left, right);\n+    }\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (mayHaveSideEffects(left)) {\n                     return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n                 return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n         n.getParent().replaceChild(n, lengthNode);\n         reportCodeChange();\n         return lengthNode;\n     }\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "653599e7c3922059a78958ea32b216ff9c42800e": {
      "type": "Ybodychange",
      "commitMessage": "\nFixup sparse array handling.\n- Replace sparse array annotation with EMPTY nodes.\n- Fix handling of arrays ending with an EMPTY node\n- Fix handling of arrays that are completely empty\n- Support PeepFoldConstant folding of arrays containing EMPTY nodes.\n\nR\u003dacleung\nDELTA\u003d163  (53 added, 92 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d879\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@887 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/15/11, 12:33 PM",
      "commitName": "653599e7c3922059a78958ea32b216ff9c42800e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/8/11, 8:50 AM",
      "commitNameOld": "8bcffc6d81ab00eaf25a963d8f8b206410fad225",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 7.11,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1570,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "@@ -1,25 +1,25 @@\n private Node tryFoldGetProp(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n-                if (NodeUtil.isSparseArray(left) || mayHaveSideEffects(left)) {\n+                if (mayHaveSideEffects(left)) {\n                     return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n                 return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n         n.getParent().replaceChild(n, lengthNode);\n         reportCodeChange();\n         return lengthNode;\n     }\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cf3fcbbc124d5b8948d7bef5215c45d80dbeae8e": {
      "type": "Ybodychange",
      "commitMessage": "\nCorrect handling of sparse arrays.\n\nR\u003dnicksantos\nDELTA\u003d37  (28 added, 2 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d529\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@785 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/15/11, 1:06 PM",
      "commitName": "cf3fcbbc124d5b8948d7bef5215c45d80dbeae8e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/15/11, 10:52 AM",
      "commitNameOld": "db7e51f90e44be275b568d0b512e9778d6d6b253",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.isSparseArray(left) || mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1556,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "@@ -1,25 +1,25 @@\n private Node tryFoldGetProp(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n-                if (mayHaveSideEffects(left)) {\n+                if (NodeUtil.isSparseArray(left) || mayHaveSideEffects(left)) {\n                     return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n                 return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n         n.getParent().replaceChild(n, lengthNode);\n         reportCodeChange();\n         return lengthNode;\n     }\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "db7e51f90e44be275b568d0b512e9778d6d6b253": {
      "type": "Ybodychange",
      "commitMessage": "\nFix issue with improper join of strings containing null and undefined.\nDefine a method for converting array literals to strings.\n\nR\u003dacleung\nDELTA\u003d174  (122 added, 38 deleted, 14 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d522\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@783 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/15/11, 10:52 AM",
      "commitName": "db7e51f90e44be275b568d0b512e9778d6d6b253",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/10/11, 4:32 PM",
      "commitNameOld": "e7ce7f710e1bf297f1a4258b53f22f550fc1f2e3",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 4.76,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1555,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "",
      "extendedDetails": {}
    },
    "e4d75597fbd25bab4291efcfd8b36be880258498": {
      "type": "Ybodychange",
      "commitMessage": "\nUpdate passes to use the pass private mayHaveSideEffects call.\n\nR\u003ddcc\nDELTA\u003d7  (0 added, 0 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d89005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@333 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/10, 9:46 AM",
      "commitName": "e4d75597fbd25bab4291efcfd8b36be880258498",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/23/10, 2:49 PM",
      "commitNameOld": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 11.79,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1168,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "@@ -1,25 +1,25 @@\n private Node tryFoldGetProp(Node n, Node left, Node right) {\n     Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n-                if (NodeUtil.mayHaveSideEffects(left)) {\n+                if (mayHaveSideEffects(left)) {\n                     return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n                 return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n         n.getParent().replaceChild(n, lengthNode);\n         reportCodeChange();\n         return lengthNode;\n     }\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/28/10, 5:30 PM",
      "commitNameOld": "9925370292834ea846727f1f9db76af0d40261df",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 1156,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
      "diff": "",
      "extendedDetails": {}
    },
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 4:00 PM",
      "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 1145,
          "functionName": "tryFoldGetProp",
          "functionAnnotation": "",
          "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
          "diff": "@@ -1,22 +1,25 @@\n-void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+private Node tryFoldGetProp(Node n, Node left, Node right) {\n+    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (NodeUtil.mayHaveSideEffects(left)) {\n-                    return;\n+                    return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n-                return;\n+                return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n-        parent.replaceChild(n, lengthNode);\n-        t.getCompiler().reportCodeChange();\n+        n.getParent().replaceChild(n, lengthNode);\n+        reportCodeChange();\n+        return lengthNode;\n     }\n+    return n;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/jscomp/FoldConstants.java",
            "newPath": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
            "oldMethodName": "tryFoldGetProp",
            "newMethodName": "tryFoldGetProp"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 1145,
          "functionName": "tryFoldGetProp",
          "functionAnnotation": "",
          "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
          "diff": "@@ -1,22 +1,25 @@\n-void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+private Node tryFoldGetProp(Node n, Node left, Node right) {\n+    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (NodeUtil.mayHaveSideEffects(left)) {\n-                    return;\n+                    return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n-                return;\n+                return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n-        parent.replaceChild(n, lengthNode);\n-        t.getCompiler().reportCodeChange();\n+        n.getParent().replaceChild(n, lengthNode);\n+        reportCodeChange();\n+        return lengthNode;\n     }\n+    return n;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Node"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 1145,
          "functionName": "tryFoldGetProp",
          "functionAnnotation": "",
          "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
          "diff": "@@ -1,22 +1,25 @@\n-void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+private Node tryFoldGetProp(Node n, Node left, Node right) {\n+    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (NodeUtil.mayHaveSideEffects(left)) {\n-                    return;\n+                    return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n-                return;\n+                return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n-        parent.replaceChild(n, lengthNode);\n-        t.getCompiler().reportCodeChange();\n+        n.getParent().replaceChild(n, lengthNode);\n+        reportCodeChange();\n+        return lengthNode;\n     }\n+    return n;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 1145,
          "functionName": "tryFoldGetProp",
          "functionAnnotation": "",
          "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
          "diff": "@@ -1,22 +1,25 @@\n-void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+private Node tryFoldGetProp(Node n, Node left, Node right) {\n+    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (NodeUtil.mayHaveSideEffects(left)) {\n-                    return;\n+                    return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n-                return;\n+                return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n-        parent.replaceChild(n, lengthNode);\n-        t.getCompiler().reportCodeChange();\n+        n.getParent().replaceChild(n, lengthNode);\n+        reportCodeChange();\n+        return lengthNode;\n     }\n+    return n;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldGetProp(Node n, Node left, Node right) {\n    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return n;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return n;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        n.getParent().replaceChild(n, lengthNode);\n        reportCodeChange();\n        return lengthNode;\n    }\n    return n;\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 1145,
          "functionName": "tryFoldGetProp",
          "functionAnnotation": "",
          "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n",
          "diff": "@@ -1,22 +1,25 @@\n-void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+private Node tryFoldGetProp(Node n, Node left, Node right) {\n+    Preconditions.checkArgument(n.getType() \u003d\u003d Token.GETPROP);\n     if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n         int knownLength \u003d -1;\n         switch(left.getType()) {\n             case Token.ARRAYLIT:\n                 if (NodeUtil.mayHaveSideEffects(left)) {\n-                    return;\n+                    return n;\n                 }\n                 knownLength \u003d left.getChildCount();\n                 break;\n             case Token.STRING:\n                 knownLength \u003d left.getString().length();\n                 break;\n             default:\n-                return;\n+                return n;\n         }\n         Preconditions.checkState(knownLength !\u003d -1);\n         Node lengthNode \u003d Node.newNumber(knownLength);\n-        parent.replaceChild(n, lengthNode);\n-        t.getCompiler().reportCodeChange();\n+        n.getParent().replaceChild(n, lengthNode);\n+        reportCodeChange();\n+        return lengthNode;\n     }\n+    return n;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[t-NodeTraversal, n-Node, left-Node, right-Node, parent-Node]",
            "newValue": "[n-Node, left-Node, right-Node]"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,22 @@\n+void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n+        int knownLength \u003d -1;\n+        switch(left.getType()) {\n+            case Token.ARRAYLIT:\n+                if (NodeUtil.mayHaveSideEffects(left)) {\n+                    return;\n+                }\n+                knownLength \u003d left.getChildCount();\n+                break;\n+            case Token.STRING:\n+                knownLength \u003d left.getString().length();\n+                break;\n+            default:\n+                return;\n+        }\n+        Preconditions.checkState(knownLength !\u003d -1);\n+        Node lengthNode \u003d Node.newNumber(knownLength);\n+        parent.replaceChild(n, lengthNode);\n+        t.getCompiler().reportCodeChange();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void tryFoldGetProp(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n    if (right.getType() \u003d\u003d Token.STRING \u0026\u0026 right.getString().equals(\"length\")) {\n        int knownLength \u003d -1;\n        switch(left.getType()) {\n            case Token.ARRAYLIT:\n                if (NodeUtil.mayHaveSideEffects(left)) {\n                    return;\n                }\n                knownLength \u003d left.getChildCount();\n                break;\n            case Token.STRING:\n                knownLength \u003d left.getString().length();\n                break;\n            default:\n                return;\n        }\n        Preconditions.checkState(knownLength !\u003d -1);\n        Node lengthNode \u003d Node.newNumber(knownLength);\n        parent.replaceChild(n, lengthNode);\n        t.getCompiler().reportCodeChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FoldConstants.java",
      "functionStartLine": 1590,
      "functionName": "tryFoldGetProp",
      "functionAnnotation": "",
      "functionDoc": "Try to fold array-length. e.g [1, 2, 3].length \u003d\u003d\u003e 3, [x, y].length \u003d\u003d\u003e 2\n"
    }
  }
}