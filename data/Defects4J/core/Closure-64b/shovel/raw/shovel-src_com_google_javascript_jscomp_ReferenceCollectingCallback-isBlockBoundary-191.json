{
  "origin": "codeshovel",
  "repositoryName": "Closure-64b",
  "repositoryPath": "/tmp/Closure-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReferenceCollectingCallback.java",
  "functionName": "isBlockBoundary",
  "functionId": "isBlockBoundary___n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
  "functionAnnotation": "",
  "functionDoc": "\n@return true if this node marks the start of a new basic block\n",
  "functionStartLine": 191,
  "functionEndLine": 221,
  "numCommitsSeen": 19,
  "timeTaken": 699,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+private static boolean isBlockBoundary(Node n, Node parent) {\n+    if (parent !\u003d null) {\n+        switch(parent.getType()) {\n+            case Token.DO:\n+            case Token.FOR:\n+            case Token.TRY:\n+            case Token.WHILE:\n+            case Token.WITH:\n+                return true;\n+            case Token.AND:\n+            case Token.HOOK:\n+            case Token.IF:\n+            case Token.OR:\n+                return n !\u003d parent.getFirstChild();\n+        }\n+    }\n+    return n.getType() \u003d\u003d Token.CASE;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static boolean isBlockBoundary(Node n, Node parent) {\n    if (parent !\u003d null) {\n        switch(parent.getType()) {\n            case Token.DO:\n            case Token.FOR:\n            case Token.TRY:\n            case Token.WHILE:\n            case Token.WITH:\n                return true;\n            case Token.AND:\n            case Token.HOOK:\n            case Token.IF:\n            case Token.OR:\n                return n !\u003d parent.getFirstChild();\n        }\n    }\n    return n.getType() \u003d\u003d Token.CASE;\n}",
      "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
      "functionStartLine": 174,
      "functionName": "isBlockBoundary",
      "functionAnnotation": "",
      "functionDoc": "\n@return true if this node marks the start of a new basic block\n"
    }
  }
}