{
  "origin": "codeshovel",
  "repositoryName": "Closure-64b",
  "repositoryPath": "/tmp/Closure-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Normalize.java",
  "functionName": "splitVarDeclarations",
  "functionId": "$splitVarDeclarations___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/Normalize.java",
  "functionAnnotation": "",
  "functionDoc": "Split a var node such as:\n  var a, b;\ninto individual statements:\n  var a;\n  var b;\n\n@param n The whose children we should inspect.\n",
  "functionStartLine": 553,
  "functionEndLine": 571,
  "numCommitsSeen": 31,
  "timeTaken": 1243,
  "changeHistory": [
    "9a185e0c06b0a595ca0e6fb7990945cd0114a12f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "9a185e0c06b0a595ca0e6fb7990945cd0114a12f": "Yformatchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a185e0c06b0a595ca0e6fb7990945cd0114a12f": {
      "type": "Yformatchange",
      "commitMessage": "Run cross module code motion before and after devirtualization. (Alan)\n\nMaking ErrorPass package-private. (Brad)\n\nImprove strict equality comparisons. (John)\n\nUpdate comments and minor cleanup of Normalize. (John)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@133 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/10/10, 9:49 PM",
      "commitName": "9a185e0c06b0a595ca0e6fb7990945cd0114a12f",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/26/10, 7:11 AM",
      "commitNameOld": "d48c365ba8251057a71a2e2b7aabff640209e31b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 12.61,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "private void splitVarDeclarations(Node n) {\n    for (Node next, c \u003d n.getFirstChild(); c !\u003d null; c \u003d next) {\n        next \u003d c.getNext();\n        if (c.getType() \u003d\u003d Token.VAR) {\n            if (assertOnChange \u0026\u0026 !c.hasChildren()) {\n                throw new IllegalStateException(\"Empty VAR node.\");\n            }\n            while (c.getFirstChild() !\u003d c.getLastChild()) {\n                Node name \u003d c.getFirstChild();\n                c.removeChild(name);\n                Node newVar \u003d new Node(Token.VAR, name, n.getLineno(), n.getCharno());\n                n.addChildBefore(newVar, c);\n                reportCodeChange(\"VAR with multiple children\");\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Normalize.java",
      "functionStartLine": 373,
      "functionName": "splitVarDeclarations",
      "functionAnnotation": "",
      "functionDoc": "Split a var node such as:\n  var a, b;\ninto individual statements:\n  var a;\n  var b;\n\n@param n The whose children we should inspect.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+private void splitVarDeclarations(Node n) {\n+    for (Node next, c \u003d n.getFirstChild(); c !\u003d null; c \u003d next) {\n+        next \u003d c.getNext();\n+        if (c.getType() \u003d\u003d Token.VAR) {\n+            if (assertOnChange \u0026\u0026 !c.hasChildren()) {\n+                throw new IllegalStateException(\"Empty VAR node.\");\n+            }\n+            while (c.getFirstChild() !\u003d c.getLastChild()) {\n+                Node name \u003d c.getFirstChild();\n+                c.removeChild(name);\n+                Node newVar \u003d new Node(Token.VAR, name, n.getLineno(), n.getCharno());\n+                n.addChildBefore(newVar, c);\n+                reportCodeChange(\"VAR with multiple children\");\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void splitVarDeclarations(Node n) {\n    for (Node next, c \u003d n.getFirstChild(); c !\u003d null; c \u003d next) {\n        next \u003d c.getNext();\n        if (c.getType() \u003d\u003d Token.VAR) {\n            if (assertOnChange \u0026\u0026 !c.hasChildren()) {\n                throw new IllegalStateException(\"Empty VAR node.\");\n            }\n            while (c.getFirstChild() !\u003d c.getLastChild()) {\n                Node name \u003d c.getFirstChild();\n                c.removeChild(name);\n                Node newVar \u003d new Node(Token.VAR, name, n.getLineno(), n.getCharno());\n                n.addChildBefore(newVar, c);\n                reportCodeChange(\"VAR with multiple children\");\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Normalize.java",
      "functionStartLine": 322,
      "functionName": "splitVarDeclarations",
      "functionAnnotation": "",
      "functionDoc": "Split a var node such as:\n  var a, b;\ninto individual statements:\n  var a;\n  var b;\n\n@param n The whose children we should inspect.\n"
    }
  }
}