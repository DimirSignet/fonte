{
  "origin": "codeshovel",
  "repositoryName": "Closure-133b",
  "repositoryPath": "/tmp/Closure-133b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JSType.java",
  "functionName": "toMaybeUnionType",
  "functionId": "toMaybeUnionType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/JSType.java",
  "functionAnnotation": "",
  "functionDoc": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n",
  "functionStartLine": 324,
  "functionEndLine": 326,
  "numCommitsSeen": 121,
  "timeTaken": 2968,
  "changeHistory": [
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/17/11, 11:43 AM",
      "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/17/11, 11:43 AM",
          "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 2:24 PM",
          "commitNameOld": "5200a1c2404a424425ab2b04a7a64e08e0ee4925",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public UnionType toMaybeUnionType() {\n    return null;\n}",
          "path": "src/com/google/javascript/rhino/jstype/JSType.java",
          "functionStartLine": 254,
          "functionName": "toMaybeUnionType",
          "functionAnnotation": "",
          "functionDoc": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean isUnionType() {\n-    return false;\n+public UnionType toMaybeUnionType() {\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "isUnionType",
            "newValue": "toMaybeUnionType"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/17/11, 11:43 AM",
          "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 2:24 PM",
          "commitNameOld": "5200a1c2404a424425ab2b04a7a64e08e0ee4925",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public UnionType toMaybeUnionType() {\n    return null;\n}",
          "path": "src/com/google/javascript/rhino/jstype/JSType.java",
          "functionStartLine": 254,
          "functionName": "toMaybeUnionType",
          "functionAnnotation": "",
          "functionDoc": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean isUnionType() {\n-    return false;\n+public UnionType toMaybeUnionType() {\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "UnionType"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/17/11, 11:43 AM",
          "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 2:24 PM",
          "commitNameOld": "5200a1c2404a424425ab2b04a7a64e08e0ee4925",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public UnionType toMaybeUnionType() {\n    return null;\n}",
          "path": "src/com/google/javascript/rhino/jstype/JSType.java",
          "functionStartLine": 254,
          "functionName": "toMaybeUnionType",
          "functionAnnotation": "",
          "functionDoc": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean isUnionType() {\n-    return false;\n+public UnionType toMaybeUnionType() {\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/17/11, 11:43 AM",
          "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 2:24 PM",
          "commitNameOld": "5200a1c2404a424425ab2b04a7a64e08e0ee4925",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "actualSource": "public UnionType toMaybeUnionType() {\n    return null;\n}",
          "path": "src/com/google/javascript/rhino/jstype/JSType.java",
          "functionStartLine": 254,
          "functionName": "toMaybeUnionType",
          "functionAnnotation": "",
          "functionDoc": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n",
          "diff": "@@ -1,3 +1,3 @@\n-public boolean isUnionType() {\n-    return false;\n+public UnionType toMaybeUnionType() {\n+    return null;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Downcasts this to a UnionType, or returns null if this is not a UnionType.\n\nNamed in honor of Haskell\u0027s Maybe type constructor.\n"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+public boolean isUnionType() {\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean isUnionType() {\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSType.java",
      "functionStartLine": 224,
      "functionName": "isUnionType",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}