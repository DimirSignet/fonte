{
  "origin": "codeshovel",
  "repositoryName": "Closure-76b",
  "repositoryPath": "/tmp/Closure-76b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isLhs",
  "functionId": "isLhs___n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Determines whether this node is strictly on the left hand side of an assign\nor var initialization. Notably, this does not include all L-values, only\nstatements where the node is used only as an L-value.\n\n@param n The node\n@param parent Parent of the node\n@return True if n is the left hand of an assign\n",
  "functionStartLine": 2003,
  "functionEndLine": 2006,
  "numCommitsSeen": 74,
  "timeTaken": 5195,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+static boolean isLhs(Node n, Node parent) {\n+    return (parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d n) || parent.getType() \u003d\u003d Token.VAR;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isLhs(Node n, Node parent) {\n    return (parent.getType() \u003d\u003d Token.ASSIGN \u0026\u0026 parent.getFirstChild() \u003d\u003d n) || parent.getType() \u003d\u003d Token.VAR;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1273,
      "functionName": "isLhs",
      "functionAnnotation": "",
      "functionDoc": "Determines whether this node is strictly on the left hand side of an assign\nor var initialization. Notably, this does not include all L-values, only\nstatements where the node is used only as an L-value.\n\n@param n The node\n@param parent Parent of the node\n@return True if n is the left hand of an assign\n"
    }
  }
}