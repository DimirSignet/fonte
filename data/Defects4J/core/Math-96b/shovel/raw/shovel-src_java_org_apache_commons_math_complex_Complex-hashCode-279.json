{
  "origin": "codeshovel",
  "repositoryName": "Math-96b",
  "repositoryPath": "/tmp/Math-96b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Complex.java",
  "functionName": "hashCode",
  "functionId": "hashCode",
  "sourceFilePath": "src/java/org/apache/commons/math/complex/Complex.java",
  "functionAnnotation": "",
  "functionDoc": "Get a hashCode for the complex number.\n\u003cp\u003e\nAll NaN values have the same hash code.\u003c/p\u003e\n\n@return a hash code value for this object\n",
  "functionStartLine": 279,
  "functionEndLine": 285,
  "numCommitsSeen": 20,
  "timeTaken": 1094,
  "changeHistory": [
    "932ebf87acd81162cc7b1751c18b0e0ca760c8bf",
    "545e47a273803b1d080b186c8cf139492f82c4fb"
  ],
  "changeHistoryShort": {
    "932ebf87acd81162cc7b1751c18b0e0ca760c8bf": "Ydocchange",
    "545e47a273803b1d080b186c8cf139492f82c4fb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "932ebf87acd81162cc7b1751c18b0e0ca760c8bf": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only. Added missing \u003c/p\u003e\u0027s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@615734 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/27/08, 10:10 PM",
      "commitName": "932ebf87acd81162cc7b1751c18b0e0ca760c8bf",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "1/8/08, 11:30 PM",
      "commitNameOld": "6375e636998ba899dd6354a5aaf60b357dbe66d6",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 18.94,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "public int hashCode() {\n    if (isNaN()) {\n        return 7;\n    }\n    return 37 * (17 * MathUtils.hash(imaginary) + MathUtils.hash(real));\n}",
      "path": "src/java/org/apache/commons/math/complex/Complex.java",
      "functionStartLine": 276,
      "functionName": "hashCode",
      "functionAnnotation": "",
      "functionDoc": "Get a hashCode for the complex number.\n\u003cp\u003e\nAll NaN values have the same hash code.\u003c/p\u003e\n\n@return a hash code value for this object\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Get a hashCode for the complex number.\n\u003cp\u003e\nAll NaN values have the same hash code.\n\n@return a hash code value for this object\n",
        "newValue": "Get a hashCode for the complex number.\n\u003cp\u003e\nAll NaN values have the same hash code.\u003c/p\u003e\n\n@return a hash code value for this object\n"
      }
    },
    "545e47a273803b1d080b186c8cf139492f82c4fb": {
      "type": "Yintroduced",
      "commitMessage": "Merging bug fixes in r267517:r321515 from MATH_1_1 branch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@322442 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/15/05, 8:29 PM",
      "commitName": "545e47a273803b1d080b186c8cf139492f82c4fb",
      "commitAuthor": "Phil Steitz",
      "diff": "@@ -0,0 +1,6 @@\n+public int hashCode() {\n+    if (isNaN()) {\n+        return 7;\n+    }\n+    return 37 * (17 * MathUtils.hash(imaginary) + MathUtils.hash(real));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int hashCode() {\n    if (isNaN()) {\n        return 7;\n    }\n    return 37 * (17 * MathUtils.hash(imaginary) + MathUtils.hash(real));\n}",
      "path": "src/java/org/apache/commons/math/complex/Complex.java",
      "functionStartLine": 202,
      "functionName": "hashCode",
      "functionAnnotation": "",
      "functionDoc": "Get a hashCode for the complex number.\n\u003cp\u003e\nAll NaN values have the same hash code.\n\n@return a hash code value for this object\n"
    }
  }
}