{
  "origin": "codeshovel",
  "repositoryName": "Math-15b",
  "repositoryPath": "/tmp/Math-15b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MersenneTwister.java",
  "functionName": "setSeed",
  "functionId": "setSeed___seed-long",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n",
  "functionStartLine": 215,
  "functionEndLine": 217,
  "numCommitsSeen": 14,
  "timeTaken": 12171,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "3081ee1490074bb3ecf276137c6dc8836da8775e",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "df3dd4cc2a402d6ec24dc2f76bba6d454702665b",
    "2283b0914121a6806607c96f505da2e1266a820d"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "3081ee1490074bb3ecf276137c6dc8836da8775e": "Yannotationchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "df3dd4cc2a402d6ec24dc2f76bba6d454702665b": "Ybodychange",
    "2283b0914121a6806607c96f505da2e1266a820d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void setSeed(long seed) {\n    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n}",
      "path": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
      "functionStartLine": 215,
      "functionName": "setSeed",
      "functionAnnotation": "@Override",
      "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/random/MersenneTwister.java",
        "newPath": "src/main/java/org/apache/commons/math3/random/MersenneTwister.java",
        "oldMethodName": "setSeed",
        "newMethodName": "setSeed"
      }
    },
    "3081ee1490074bb3ecf276137c6dc8836da8775e": {
      "type": "Yannotationchange",
      "commitMessage": "Fix missing @Override and @Deprecated annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@902203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/22/10, 10:27 AM",
      "commitName": "3081ee1490074bb3ecf276137c6dc8836da8775e",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "9/6/09, 9:27 AM",
      "commitNameOld": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 138.08,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void setSeed(long seed) {\n    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n}",
      "path": "src/main/java/org/apache/commons/math/random/MersenneTwister.java",
      "functionStartLine": 207,
      "functionName": "setSeed",
      "functionAnnotation": "@Override",
      "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n",
      "diff": "@@ -1,3 +1,4 @@\n+@Override\n public void setSeed(long seed) {\n     setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void setSeed(long seed) {\n    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n}",
      "path": "src/main/java/org/apache/commons/math/random/MersenneTwister.java",
      "functionStartLine": 204,
      "functionName": "setSeed",
      "functionAnnotation": "",
      "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/random/MersenneTwister.java",
        "newPath": "src/main/java/org/apache/commons/math/random/MersenneTwister.java"
      }
    },
    "df3dd4cc2a402d6ec24dc2f76bba6d454702665b": {
      "type": "Ybodychange",
      "commitMessage": "the new base class does not call setSeed,\ndefensive programming against too early calls to setSeed are not useful anymore\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@797246 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/23/09, 3:21 PM",
      "commitName": "df3dd4cc2a402d6ec24dc2f76bba6d454702665b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "7/23/09, 2:44 PM",
      "commitNameOld": "65cbdada7d2fc7fc9a22330a9b339d152a71fc8d",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void setSeed(long seed) {\n    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n}",
      "path": "src/java/org/apache/commons/math/random/MersenneTwister.java",
      "functionStartLine": 204,
      "functionName": "setSeed",
      "functionAnnotation": "",
      "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n",
      "diff": "@@ -1,6 +1,3 @@\n public void setSeed(long seed) {\n-    if (mt \u003d\u003d null) {\n-        return;\n-    }\n     setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2283b0914121a6806607c96f505da2e1266a820d": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of the Mersenne twister pseudo random number generator\nthe implementation comes from Mantissa and was a translation of the 2002 version\nin C by the algorithm authors, which was published under a BSD license\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@796546 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/09, 2:38 PM",
      "commitName": "2283b0914121a6806607c96f505da2e1266a820d",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,6 @@\n+public void setSeed(long seed) {\n+    if (mt \u003d\u003d null) {\n+        return;\n+    }\n+    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void setSeed(long seed) {\n    if (mt \u003d\u003d null) {\n        return;\n    }\n    setSeed(new int[] { (int) (seed \u003e\u003e\u003e 32), (int) (seed \u0026 0xffffffffl) });\n}",
      "path": "src/java/org/apache/commons/math/random/MersenneTwister.java",
      "functionStartLine": 209,
      "functionName": "setSeed",
      "functionAnnotation": "",
      "functionDoc": "Reinitialize the generator as if just built with the given long seed.\n\u003cp\u003eThe state of the generator is exactly the same as a new\ngenerator built with the same seed.\u003c/p\u003e\n\n@param seed the initial seed (64 bits integer)\n"
    }
  }
}