{
  "origin": "codeshovel",
  "repositoryName": "Closure-17b",
  "repositoryPath": "/tmp/Closure-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ControlFlowAnalysis.java",
  "functionName": "handleReturn",
  "functionId": "handleReturn___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 639,
  "functionEndLine": 666,
  "numCommitsSeen": 23,
  "timeTaken": 1559,
  "changeHistory": [
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 211.11,
      "commitsBetweenForRepo": 535,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleReturn(Node node) {\n    Node lastJump \u003d null;\n    for (Iterator\u003cNode\u003e iter \u003d exceptionHandler.iterator(); iter.hasNext(); ) {\n        Node curHandler \u003d iter.next();\n        if (curHandler.isFunction()) {\n            break;\n        }\n        if (NodeUtil.hasFinally(curHandler)) {\n            if (lastJump \u003d\u003d null) {\n                createEdge(node, Branch.UNCOND, curHandler.getLastChild());\n            } else {\n                finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild()));\n            }\n            lastJump \u003d curHandler;\n        }\n    }\n    if (node.hasChildren()) {\n        connectToPossibleExceptionHandler(node, node.getFirstChild());\n    }\n    if (lastJump \u003d\u003d null) {\n        createEdge(node, Branch.UNCOND, null);\n    } else {\n        finallyMap.put(lastJump, null);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
      "functionStartLine": 629,
      "functionName": "handleReturn",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,25 @@\n private void handleReturn(Node node) {\n     Node lastJump \u003d null;\n     for (Iterator\u003cNode\u003e iter \u003d exceptionHandler.iterator(); iter.hasNext(); ) {\n         Node curHandler \u003d iter.next();\n-        if (NodeUtil.isFunction(curHandler)) {\n+        if (curHandler.isFunction()) {\n             break;\n         }\n         if (NodeUtil.hasFinally(curHandler)) {\n             if (lastJump \u003d\u003d null) {\n                 createEdge(node, Branch.UNCOND, curHandler.getLastChild());\n             } else {\n                 finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild()));\n             }\n             lastJump \u003d curHandler;\n         }\n     }\n     if (node.hasChildren()) {\n         connectToPossibleExceptionHandler(node, node.getFirstChild());\n     }\n     if (lastJump \u003d\u003d null) {\n         createEdge(node, Branch.UNCOND, null);\n     } else {\n         finallyMap.put(lastJump, null);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,25 @@\n+private void handleReturn(Node node) {\n+    Node lastJump \u003d null;\n+    for (Iterator\u003cNode\u003e iter \u003d exceptionHandler.iterator(); iter.hasNext(); ) {\n+        Node curHandler \u003d iter.next();\n+        if (NodeUtil.isFunction(curHandler)) {\n+            break;\n+        }\n+        if (NodeUtil.hasFinally(curHandler)) {\n+            if (lastJump \u003d\u003d null) {\n+                createEdge(node, Branch.UNCOND, curHandler.getLastChild());\n+            } else {\n+                finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild()));\n+            }\n+            lastJump \u003d curHandler;\n+        }\n+    }\n+    if (node.hasChildren()) {\n+        connectToPossibleExceptionHandler(node, node.getFirstChild());\n+    }\n+    if (lastJump \u003d\u003d null) {\n+        createEdge(node, Branch.UNCOND, null);\n+    } else {\n+        finallyMap.put(lastJump, null);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void handleReturn(Node node) {\n    Node lastJump \u003d null;\n    for (Iterator\u003cNode\u003e iter \u003d exceptionHandler.iterator(); iter.hasNext(); ) {\n        Node curHandler \u003d iter.next();\n        if (NodeUtil.isFunction(curHandler)) {\n            break;\n        }\n        if (NodeUtil.hasFinally(curHandler)) {\n            if (lastJump \u003d\u003d null) {\n                createEdge(node, Branch.UNCOND, curHandler.getLastChild());\n            } else {\n                finallyMap.put(lastJump, computeFallThrough(curHandler.getLastChild()));\n            }\n            lastJump \u003d curHandler;\n        }\n    }\n    if (node.hasChildren()) {\n        connectToPossibleExceptionHandler(node, node.getFirstChild());\n    }\n    if (lastJump \u003d\u003d null) {\n        createEdge(node, Branch.UNCOND, null);\n    } else {\n        finallyMap.put(lastJump, null);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
      "functionStartLine": 622,
      "functionName": "handleReturn",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}