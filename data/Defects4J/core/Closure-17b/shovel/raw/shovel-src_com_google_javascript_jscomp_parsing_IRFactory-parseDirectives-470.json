{
  "origin": "codeshovel",
  "repositoryName": "Closure-17b",
  "repositoryPath": "/tmp/Closure-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "parseDirectives",
  "functionId": "$parseDirectives___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Parse the directives, encode them in the AST, and remove their nodes.\n\nFor information on ES5 directives, see section 14.1 of\nECMA-262, Edition 5.\n\nIt would be nice if Rhino would eventually take care of this for\nus, but right now their directive-processing is a one-off.\n",
  "functionStartLine": 470,
  "functionEndLine": 485,
  "numCommitsSeen": 68,
  "timeTaken": 6996,
  "changeHistory": [
    "70a5626922ea7e8c98747e22b6986638ba38fadc",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3"
  ],
  "changeHistoryShort": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": "Ydocchange",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": {
      "type": "Ydocchange",
      "commitMessage": "\nFix various typos, spelling and grammar errors.\nFixes issue 734. \nContributed by Robert Gust Bardon\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4827\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1979 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/12, 11:09 AM",
      "commitName": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/26/12, 11:35 AM",
      "commitNameOld": "eb4505ece9ac807b9fcd75433e6793f64ece94de",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 21.98,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "private void parseDirectives(Node node) {\n    Set\u003cString\u003e directives \u003d null;\n    while (isDirective(node.getFirstChild())) {\n        String directive \u003d node.removeFirstChild().getFirstChild().getString();\n        if (directives \u003d\u003d null) {\n            directives \u003d Sets.newHashSet(directive);\n        } else {\n            directives.add(directive);\n        }\n    }\n    if (directives !\u003d null) {\n        node.setDirectives(directives);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 470,
      "functionName": "parseDirectives",
      "functionAnnotation": "",
      "functionDoc": "Parse the directives, encode them in the AST, and remove their nodes.\n\nFor information on ES5 directives, see section 14.1 of\nECMA-262, Edition 5.\n\nIt would be nice if Rhino would eventually take care of this for\nus, but right now their directive-processing is a one-off.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Parse the directives, encode them in the AST, and remove their nodes.\n\nFor information on ES5 directives, see section 14.1 of\nEcma-262, Edition 5.\n\nIt would be nice if Rhino would eventually take care of this for\nus, but right now their directive-processing is a one-off.\n",
        "newValue": "Parse the directives, encode them in the AST, and remove their nodes.\n\nFor information on ES5 directives, see section 14.1 of\nECMA-262, Edition 5.\n\nIt would be nice if Rhino would eventually take care of this for\nus, but right now their directive-processing is a one-off.\n"
      }
    },
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": {
      "type": "Yintroduced",
      "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/8/09, 3:50 PM",
      "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private void parseDirectives(Node node) {\n+    Set\u003cString\u003e directives \u003d null;\n+    while (isDirective(node.getFirstChild())) {\n+        String directive \u003d node.removeFirstChild().getFirstChild().getString();\n+        if (directives \u003d\u003d null) {\n+            directives \u003d Sets.newHashSet(directive);\n+        } else {\n+            directives.add(directive);\n+        }\n+    }\n+    if (directives !\u003d null) {\n+        node.setDirectives(directives);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void parseDirectives(Node node) {\n    Set\u003cString\u003e directives \u003d null;\n    while (isDirective(node.getFirstChild())) {\n        String directive \u003d node.removeFirstChild().getFirstChild().getString();\n        if (directives \u003d\u003d null) {\n            directives \u003d Sets.newHashSet(directive);\n        } else {\n            directives.add(directive);\n        }\n    }\n    if (directives !\u003d null) {\n        node.setDirectives(directives);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 382,
      "functionName": "parseDirectives",
      "functionAnnotation": "",
      "functionDoc": "Parse the directives, encode them in the AST, and remove their nodes.\n\nFor information on ES5 directives, see section 14.1 of\nEcma-262, Edition 5.\n\nIt would be nice if Rhino would eventually take care of this for\nus, but right now their directive-processing is a one-off.\n"
    }
  }
}