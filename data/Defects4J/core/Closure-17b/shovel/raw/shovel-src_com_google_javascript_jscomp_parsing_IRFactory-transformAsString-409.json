{
  "origin": "codeshovel",
  "repositoryName": "Closure-17b",
  "repositoryPath": "/tmp/Closure-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "transformAsString",
  "functionId": "$transformAsString___n-AstNode",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Transforms the given node and then sets its type to Token.STRING if it\nwas Token.NAME. If its type was already Token.STRING, then quotes it.\nUsed for properties, as the old AST uses String tokens, while the new one\nuses Name tokens for unquoted strings. For example, in\nvar o \u003d {\u0027a\u0027 : 1, b: 2};\nthe string \u0027a\u0027 is quoted, while the name b is turned into a string, but\nunquoted.\n",
  "functionStartLine": 409,
  "functionEndLine": 422,
  "numCommitsSeen": 68,
  "timeTaken": 5183,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "41acde3e8e5e8d37ade765b41d9fd29861f03e5e": "Ybodychange",
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 2:58 PM",
      "commitNameOld": "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.73,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transformAsString(AstNode n) {\n    Node ret;\n    if (n instanceof Name) {\n        ret \u003d transformNameAsString((Name) n);\n    } else if (n instanceof NumberLiteral) {\n        ret \u003d transformNumberAsString((NumberLiteral) n);\n        ret.putBooleanProp(Node.QUOTED_PROP, true);\n    } else {\n        ret \u003d transform(n);\n        ret.putBooleanProp(Node.QUOTED_PROP, true);\n    }\n    Preconditions.checkState(ret.isString());\n    return ret;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 396,
      "functionName": "transformAsString",
      "functionAnnotation": "",
      "functionDoc": "Transforms the given node and then sets its type to Token.STRING if it\nwas Token.NAME. If its type was already Token.STRING, then quotes it.\nUsed for properties, as the old AST uses String tokens, while the new one\nuses Name tokens for unquoted strings. For example, in\nvar o \u003d {\u0027a\u0027 : 1, b: 2};\nthe string \u0027a\u0027 is quoted, while the name b is turned into a string, but\nunquoted.\n",
      "diff": "@@ -1,14 +1,14 @@\n private Node transformAsString(AstNode n) {\n     Node ret;\n     if (n instanceof Name) {\n         ret \u003d transformNameAsString((Name) n);\n     } else if (n instanceof NumberLiteral) {\n         ret \u003d transformNumberAsString((NumberLiteral) n);\n         ret.putBooleanProp(Node.QUOTED_PROP, true);\n     } else {\n         ret \u003d transform(n);\n         ret.putBooleanProp(Node.QUOTED_PROP, true);\n     }\n-    Preconditions.checkState(ret.getType() \u003d\u003d Token.STRING);\n+    Preconditions.checkState(ret.isString());\n     return ret;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "41acde3e8e5e8d37ade765b41d9fd29861f03e5e": {
      "type": "Ybodychange",
      "commitMessage": "\nDefine number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP\nFixes issue 347\n\nR\u003dnicksantos\nDELTA\u003d229  (157 added, 19 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1252\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@966 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/4/11, 2:26 PM",
      "commitName": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/15/11, 3:57 PM",
      "commitNameOld": "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 19.94,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transformAsString(AstNode n) {\n    Node ret;\n    if (n instanceof Name) {\n        ret \u003d transformNameAsString((Name) n);\n    } else if (n instanceof NumberLiteral) {\n        ret \u003d transformNumberAsString((NumberLiteral) n);\n        ret.putBooleanProp(Node.QUOTED_PROP, true);\n    } else {\n        ret \u003d transform(n);\n        ret.putBooleanProp(Node.QUOTED_PROP, true);\n    }\n    Preconditions.checkState(ret.getType() \u003d\u003d Token.STRING);\n    return ret;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 360,
      "functionName": "transformAsString",
      "functionAnnotation": "",
      "functionDoc": "Transforms the given node and then sets its type to Token.STRING if it\nwas Token.NAME. If its type was already Token.STRING, then quotes it.\nUsed for properties, as the old AST uses String tokens, while the new one\nuses Name tokens for unquoted strings. For example, in\nvar o \u003d {\u0027a\u0027 : 1, b: 2};\nthe string \u0027a\u0027 is quoted, while the name b is turned into a string, but\nunquoted.\n",
      "diff": "@@ -1,13 +1,14 @@\n private Node transformAsString(AstNode n) {\n     Node ret;\n     if (n instanceof Name) {\n         ret \u003d transformNameAsString((Name) n);\n+    } else if (n instanceof NumberLiteral) {\n+        ret \u003d transformNumberAsString((NumberLiteral) n);\n+        ret.putBooleanProp(Node.QUOTED_PROP, true);\n     } else {\n         ret \u003d transform(n);\n-        Preconditions.checkState(ret.getType() \u003d\u003d Token.NUMBER || ret.getType() \u003d\u003d Token.STRING);\n-        if (ret.getType() \u003d\u003d Token.STRING) {\n-            ret.putBooleanProp(Node.QUOTED_PROP, true);\n-        }\n+        ret.putBooleanProp(Node.QUOTED_PROP, true);\n     }\n+    Preconditions.checkState(ret.getType() \u003d\u003d Token.STRING);\n     return ret;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719": {
      "type": "Ybodychange",
      "commitMessage": "\nEnable keywords as property names for ECMASCRIPT5\n\nR\u003dacleung\nDELTA\u003d106  (91 added, 1 deleted, 14 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d884\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@892 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/15/11, 3:57 PM",
      "commitName": "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/15/11, 12:33 PM",
      "commitNameOld": "653599e7c3922059a78958ea32b216ff9c42800e",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transformAsString(AstNode n) {\n    Node ret;\n    if (n instanceof Name) {\n        ret \u003d transformNameAsString((Name) n);\n    } else {\n        ret \u003d transform(n);\n        Preconditions.checkState(ret.getType() \u003d\u003d Token.NUMBER || ret.getType() \u003d\u003d Token.STRING);\n        if (ret.getType() \u003d\u003d Token.STRING) {\n            ret.putBooleanProp(Node.QUOTED_PROP, true);\n        }\n    }\n    return ret;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 339,
      "functionName": "transformAsString",
      "functionAnnotation": "",
      "functionDoc": "Transforms the given node and then sets its type to Token.STRING if it\nwas Token.NAME. If its type was already Token.STRING, then quotes it.\nUsed for properties, as the old AST uses String tokens, while the new one\nuses Name tokens for unquoted strings. For example, in\nvar o \u003d {\u0027a\u0027 : 1, b: 2};\nthe string \u0027a\u0027 is quoted, while the name b is turned into a string, but\nunquoted.\n",
      "diff": "@@ -1,9 +1,13 @@\n private Node transformAsString(AstNode n) {\n-    Node ret \u003d transform(n);\n-    if (ret.getType() \u003d\u003d Token.STRING) {\n-        ret.putBooleanProp(Node.QUOTED_PROP, true);\n-    } else if (ret.getType() \u003d\u003d Token.NAME) {\n-        ret.setType(Token.STRING);\n+    Node ret;\n+    if (n instanceof Name) {\n+        ret \u003d transformNameAsString((Name) n);\n+    } else {\n+        ret \u003d transform(n);\n+        Preconditions.checkState(ret.getType() \u003d\u003d Token.NUMBER || ret.getType() \u003d\u003d Token.STRING);\n+        if (ret.getType() \u003d\u003d Token.STRING) {\n+            ret.putBooleanProp(Node.QUOTED_PROP, true);\n+        }\n     }\n     return ret;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+private Node transformAsString(AstNode n) {\n+    Node ret \u003d transform(n);\n+    if (ret.getType() \u003d\u003d Token.STRING) {\n+        ret.putBooleanProp(Node.QUOTED_PROP, true);\n+    } else if (ret.getType() \u003d\u003d Token.NAME) {\n+        ret.setType(Token.STRING);\n+    }\n+    return ret;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node transformAsString(AstNode n) {\n    Node ret \u003d transform(n);\n    if (ret.getType() \u003d\u003d Token.STRING) {\n        ret.putBooleanProp(Node.QUOTED_PROP, true);\n    } else if (ret.getType() \u003d\u003d Token.NAME) {\n        ret.setType(Token.STRING);\n    }\n    return ret;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 312,
      "functionName": "transformAsString",
      "functionAnnotation": "",
      "functionDoc": "Transforms the given node and then sets its type to Token.STRING if it\nwas Token.NAME. If its type was already Token.STRING, then quotes it.\nUsed for properties, as the old AST uses String tokens, while the new one\nuses Name tokens for unquoted strings. For example, in\nvar o \u003d {\u0027a\u0027 : 1, b: 2};\nthe string \u0027a\u0027 is quoted, while the name b is turned into a string, but\nunquoted.\n"
    }
  }
}