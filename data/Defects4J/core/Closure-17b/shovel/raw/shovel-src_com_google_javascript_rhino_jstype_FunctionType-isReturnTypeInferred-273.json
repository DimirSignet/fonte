{
  "origin": "codeshovel",
  "repositoryName": "Closure-17b",
  "repositoryPath": "/tmp/Closure-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionType.java",
  "functionName": "isReturnTypeInferred",
  "functionId": "isReturnTypeInferred",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/FunctionType.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 273,
  "functionEndLine": 275,
  "numCommitsSeen": 91,
  "timeTaken": 3197,
  "changeHistory": [
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "\nChange on 2010/05/17 by robby\n\n        Check for non-alias locals in ScopedAliases.\n\n        R\u003dnick\n        DELTA\u003d26  (22 added, 3 deleted, 1 changed)\n\nChange on 2010/05/18 by nick\n\n        Add inferred return types.\n        Make the inf/sup relationship for function types a bit richer.\n        Make sure that the [call] pointer can never be null.\n\n        R\u003dandrew\n        DELTA\u003d192  (134 added, 30 deleted, 28 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/10, 10:06 AM",
      "commitName": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nChange on 2010/05/17 by robby\n\n        Check for non-alias locals in ScopedAliases.\n\n        R\u003dnick\n        DELTA\u003d26  (22 added, 3 deleted, 1 changed)\n\nChange on 2010/05/18 by nick\n\n        Add inferred return types.\n        Make the inf/sup relationship for function types a bit richer.\n        Make sure that the [call] pointer can never be null.\n\n        R\u003dandrew\n        DELTA\u003d192  (134 added, 30 deleted, 28 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/18/10, 10:06 AM",
          "commitName": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/19/10, 4:28 PM",
          "commitNameOld": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.73,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean isReturnTypeInferred() {\n    return call.returnTypeInferred;\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 249,
          "functionName": "isReturnTypeInferred",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public JSType getReturnType() {\n-    return call \u003d\u003d null ? null : call.returnType;\n+public boolean isReturnTypeInferred() {\n+    return call.returnTypeInferred;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getReturnType",
            "newValue": "isReturnTypeInferred"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nChange on 2010/05/17 by robby\n\n        Check for non-alias locals in ScopedAliases.\n\n        R\u003dnick\n        DELTA\u003d26  (22 added, 3 deleted, 1 changed)\n\nChange on 2010/05/18 by nick\n\n        Add inferred return types.\n        Make the inf/sup relationship for function types a bit richer.\n        Make sure that the [call] pointer can never be null.\n\n        R\u003dandrew\n        DELTA\u003d192  (134 added, 30 deleted, 28 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/18/10, 10:06 AM",
          "commitName": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/19/10, 4:28 PM",
          "commitNameOld": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.73,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean isReturnTypeInferred() {\n    return call.returnTypeInferred;\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 249,
          "functionName": "isReturnTypeInferred",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public JSType getReturnType() {\n-    return call \u003d\u003d null ? null : call.returnType;\n+public boolean isReturnTypeInferred() {\n+    return call.returnTypeInferred;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JSType",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/05/17 by robby\n\n        Check for non-alias locals in ScopedAliases.\n\n        R\u003dnick\n        DELTA\u003d26  (22 added, 3 deleted, 1 changed)\n\nChange on 2010/05/18 by nick\n\n        Add inferred return types.\n        Make the inf/sup relationship for function types a bit richer.\n        Make sure that the [call] pointer can never be null.\n\n        R\u003dandrew\n        DELTA\u003d192  (134 added, 30 deleted, 28 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/18/10, 10:06 AM",
          "commitName": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/19/10, 4:28 PM",
          "commitNameOld": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.73,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "public boolean isReturnTypeInferred() {\n    return call.returnTypeInferred;\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 249,
          "functionName": "isReturnTypeInferred",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,3 +1,3 @@\n-public JSType getReturnType() {\n-    return call \u003d\u003d null ? null : call.returnType;\n+public boolean isReturnTypeInferred() {\n+    return call.returnTypeInferred;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+public JSType getReturnType() {\n+    return call \u003d\u003d null ? null : call.returnType;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public JSType getReturnType() {\n    return call \u003d\u003d null ? null : call.returnType;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 299,
      "functionName": "getReturnType",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}