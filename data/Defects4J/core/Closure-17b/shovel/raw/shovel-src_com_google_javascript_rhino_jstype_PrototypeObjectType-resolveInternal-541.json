{
  "origin": "codeshovel",
  "repositoryName": "Closure-17b",
  "repositoryPath": "/tmp/Closure-17b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrototypeObjectType.java",
  "functionName": "resolveInternal",
  "functionId": "resolveInternal___t-ErrorReporter__scope-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 541,
  "functionEndLine": 553,
  "numCommitsSeen": 42,
  "timeTaken": 2842,
  "changeHistory": [
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2",
    "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72",
    "5da32cba7b68d69acfc535f57f21d652475d256f",
    "bca9abb0e3062d373fe52c0e8340337588c05708"
  ],
  "changeHistoryShort": {
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2": "Ybodychange",
    "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72": "Ybodychange",
    "5da32cba7b68d69acfc535f57f21d652475d256f": "Ybodychange",
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2": {
      "type": "Ybodychange",
      "commitMessage": "\nProper source information for function prototypes\n\nR\u003dacleung\nDELTA\u003d343  (190 added, 106 deleted, 47 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3216\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1424 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/8/11, 7:15 AM",
      "commitName": "5c695ce6ca5095ba764d34e634c20f65d8a558e2",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/31/11, 7:30 PM",
      "commitNameOld": "7e9b8336568ea7f05c33e1b58eb67fa6d4eee756",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 7.49,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    setResolvedTypeInternal(this);\n    ObjectType implicitPrototype \u003d getImplicitPrototype();\n    if (implicitPrototype !\u003d null) {\n        implicitPrototypeFallback \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n    }\n    for (Property prop : properties.values()) {\n        prop.setType(safeResolve(prop.getType(), t, scope));\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 538,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n     setResolvedTypeInternal(this);\n     ObjectType implicitPrototype \u003d getImplicitPrototype();\n     if (implicitPrototype !\u003d null) {\n         implicitPrototypeFallback \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n     }\n     for (Property prop : properties.values()) {\n-        prop.type \u003d safeResolve(prop.type, t, scope);\n+        prop.setType(safeResolve(prop.getType(), t, scope));\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72": {
      "type": "Ybodychange",
      "commitMessage": "\nFix a bug in prototype-resolution. The implicit prototype wouldn\u0027t\nget resolved correctly, because we were resolving the \"default\" slot\nfor the implicit prototypes. InstanceObjectType overrides this own\nslot with its own implementation, so we really need to use the\ngetter to get the correct slot.\nThis only comes up with very deep inheritance hierarchies (\u003e\u003d 5).\n\nR\u003djohnlenz\nDELTA\u003d33  (19 added, 4 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d716029\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@508 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/25/10, 11:23 AM",
      "commitName": "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/13/10, 1:00 PM",
      "commitNameOld": "831de24c490d14ef7dc99148cf2be39f6c67df92",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 72.93,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    setResolvedTypeInternal(this);\n    ObjectType implicitPrototype \u003d getImplicitPrototype();\n    if (implicitPrototype !\u003d null) {\n        implicitPrototypeFallback \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n    }\n    for (Property prop : properties.values()) {\n        prop.type \u003d safeResolve(prop.type, t, scope);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 505,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n     setResolvedTypeInternal(this);\n-    if (implicitPrototype !\u003d null \u0026\u0026 !implicitPrototype.isNativeObjectType()) {\n-        implicitPrototype \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n+    ObjectType implicitPrototype \u003d getImplicitPrototype();\n+    if (implicitPrototype !\u003d null) {\n+        implicitPrototypeFallback \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n     }\n     for (Property prop : properties.values()) {\n         prop.type \u003d safeResolve(prop.type, t, scope);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5da32cba7b68d69acfc535f57f21d652475d256f": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/19/10, 4:28 PM",
      "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/7/10, 5:51 PM",
      "commitNameOld": "f8229e74701c28f001e5b4954c1f1f7a2b764c11",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 11.94,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    setResolvedTypeInternal(this);\n    if (implicitPrototype !\u003d null \u0026\u0026 !implicitPrototype.isNativeObjectType()) {\n        implicitPrototype \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n    }\n    for (Property prop : properties.values()) {\n        prop.type \u003d safeResolve(prop.type, t, scope);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 503,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,11 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n+    setResolvedTypeInternal(this);\n     if (implicitPrototype !\u003d null \u0026\u0026 !implicitPrototype.isNativeObjectType()) {\n         implicitPrototype \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n     }\n     for (Property prop : properties.values()) {\n         prop.type \u003d safeResolve(prop.type, t, scope);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Yintroduced",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,10 @@\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n+    if (implicitPrototype !\u003d null \u0026\u0026 !implicitPrototype.isNativeObjectType()) {\n+        implicitPrototype \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n+    }\n+    for (Property prop : properties.values()) {\n+        prop.type \u003d safeResolve(prop.type, t, scope);\n+    }\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    if (implicitPrototype !\u003d null \u0026\u0026 !implicitPrototype.isNativeObjectType()) {\n        implicitPrototype \u003d (ObjectType) implicitPrototype.resolve(t, scope);\n    }\n    for (Property prop : properties.values()) {\n        prop.type \u003d safeResolve(prop.type, t, scope);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 457,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}