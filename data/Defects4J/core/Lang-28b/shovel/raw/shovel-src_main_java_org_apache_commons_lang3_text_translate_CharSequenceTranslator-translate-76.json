{
  "origin": "codeshovel",
  "repositoryName": "Lang-28b",
  "repositoryPath": "/tmp/Lang-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CharSequenceTranslator.java",
  "functionName": "translate",
  "functionId": "translate___input-CharSequence__out-Writer",
  "sourceFilePath": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
  "functionAnnotation": "",
  "functionDoc": "Translate an input onto a Writer. This is intentionally final as its algorithm is \ntightly coupled with the abstract method of this class.\n\n@param input CharSequence that is being translated\n@param out Writer to translate the text to\n@throws IOException if and only if the Writer produces an IOException\n",
  "functionStartLine": 76,
  "functionEndLine": 105,
  "numCommitsSeen": 8,
  "timeTaken": 927,
  "changeHistory": [
    "b1686009b5494119575d43525b0829162ab79853",
    "586080851f6bca4d7aa84a7d307203ad8222407e",
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"
  ],
  "changeHistoryShort": {
    "b1686009b5494119575d43525b0829162ab79853": "Yfilerename",
    "586080851f6bca4d7aa84a7d307203ad8222407e": "Yfilerename",
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1686009b5494119575d43525b0829162ab79853": {
      "type": "Yfilerename",
      "commitMessage": "Move main source to src/main/java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@895322 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/2/10, 6:11 PM",
      "commitName": "b1686009b5494119575d43525b0829162ab79853",
      "commitAuthor": "Paul C. Benedict Jr",
      "commitDateOld": "1/2/10, 6:09 PM",
      "commitNameOld": "1f725a97e73edd27301e889408832b34a3d69e63",
      "commitAuthorOld": "Paul C. Benedict Jr",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out \u003d\u003d null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input \u003d\u003d null) {\n        return;\n    }\n    int sz \u003d Character.codePointCount(input, 0, input.length());\n    for (int i \u003d 0; i \u003c sz; i++) {\n        int consumed \u003d translate(input, i, out);\n        if (consumed \u003d\u003d 0) {\n            out.write(Character.toChars(Character.codePointAt(input, i)));\n        } else {\n            for (int j \u003d 0; j \u003c consumed; j++) {\n                if (i \u003c sz - 2) {\n                    i +\u003d Character.charCount(Character.codePointAt(input, i));\n                } else {\n                    i++;\n                }\n            }\n            i--;\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
      "functionStartLine": 76,
      "functionName": "translate",
      "functionAnnotation": "",
      "functionDoc": "Translate an input onto a Writer. This is intentionally final as its algorithm is \ntightly coupled with the abstract method of this class.\n\n@param input CharSequence that is being translated\n@param out Writer to translate the text to\n@throws IOException if and only if the Writer produces an IOException\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "newPath": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java"
      }
    },
    "586080851f6bca4d7aa84a7d307203ad8222407e": {
      "type": "Yfilerename",
      "commitMessage": "Changing directory name from lang to lang3. Build will fail (probably) until Java code is changed in subsequent commit. LANG-563\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@889202 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/09, 3:33 AM",
      "commitName": "586080851f6bca4d7aa84a7d307203ad8222407e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/10/09, 3:31 AM",
      "commitNameOld": "da479d635f66c1f82a1f858591cfb1b9941457ae",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out \u003d\u003d null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input \u003d\u003d null) {\n        return;\n    }\n    int sz \u003d Character.codePointCount(input, 0, input.length());\n    for (int i \u003d 0; i \u003c sz; i++) {\n        int consumed \u003d translate(input, i, out);\n        if (consumed \u003d\u003d 0) {\n            out.write(Character.toChars(Character.codePointAt(input, i)));\n        } else {\n            for (int j \u003d 0; j \u003c consumed; j++) {\n                if (i \u003c sz - 2) {\n                    i +\u003d Character.charCount(Character.codePointAt(input, i));\n                } else {\n                    i++;\n                }\n            }\n            i--;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
      "functionStartLine": 76,
      "functionName": "translate",
      "functionAnnotation": "",
      "functionDoc": "Translate an input onto a Writer. This is intentionally final as its algorithm is \ntightly coupled with the abstract method of this class.\n\n@param input CharSequence that is being translated\n@param out Writer to translate the text to\n@throws IOException if and only if the Writer produces an IOException\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java",
        "newPath": "src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java"
      }
    },
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1": {
      "type": "Yintroduced",
      "commitMessage": "Committing a rewrite of StringEscapeUtils guts - LANG-505. Entities.java can now go away. Most of the code is in the new text.translate package. More work is needed, including what to actually define as \u0027ESCAPE_XML\u0027 etc, but it\u0027s now easy for someone to look at the source to EscapeUtils and UnescapeUtils and put their own ESCAPE_XML variable together, and with lots of reuse value. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@787560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/22/09, 11:15 PM",
      "commitName": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,24 @@\n+public final void translate(CharSequence input, Writer out) throws IOException {\n+    if (out \u003d\u003d null) {\n+        throw new IllegalArgumentException(\"The Writer must not be null\");\n+    }\n+    if (input \u003d\u003d null) {\n+        return;\n+    }\n+    int sz \u003d Character.codePointCount(input, 0, input.length());\n+    for (int i \u003d 0; i \u003c sz; i++) {\n+        int consumed \u003d translate(input, i, out);\n+        if (consumed \u003d\u003d 0) {\n+            out.write(Character.toChars(Character.codePointAt(input, i)));\n+        } else {\n+            for (int j \u003d 0; j \u003c consumed; j++) {\n+                if (i \u003c sz - 2) {\n+                    i +\u003d Character.charCount(Character.codePointAt(input, i));\n+                } else {\n+                    i++;\n+                }\n+            }\n+            i--;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out \u003d\u003d null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input \u003d\u003d null) {\n        return;\n    }\n    int sz \u003d Character.codePointCount(input, 0, input.length());\n    for (int i \u003d 0; i \u003c sz; i++) {\n        int consumed \u003d translate(input, i, out);\n        if (consumed \u003d\u003d 0) {\n            out.write(Character.toChars(Character.codePointAt(input, i)));\n        } else {\n            for (int j \u003d 0; j \u003c consumed; j++) {\n                if (i \u003c sz - 2) {\n                    i +\u003d Character.charCount(Character.codePointAt(input, i));\n                } else {\n                    i++;\n                }\n            }\n            i--;\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java",
      "functionStartLine": 75,
      "functionName": "translate",
      "functionAnnotation": "",
      "functionDoc": "Translate an input onto a Writer. This is intentionally final as its algorithm is \ntightly coupled with the abstract method of this class.\n\n@param input CharSequence that is being translated\n@param out Writer to translate the text to\n@throws IOException if and only if the Writer produces an IOException\n"
    }
  }
}