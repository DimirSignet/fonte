{
  "origin": "codeshovel",
  "repositoryName": "Lang-48b",
  "repositoryPath": "/tmp/Lang-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EqualsBuilder.java",
  "functionName": "append",
  "functionId": "append___lhs-Object__rhs-Object",
  "sourceFilePath": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs the left hand object\n@param rhs the right hand object\n@return EqualsBuilder - used to chain calls.\n",
  "functionStartLine": 367,
  "functionEndLine": 409,
  "numCommitsSeen": 37,
  "timeTaken": 1347,
  "changeHistory": [
    "c51a86074928d8c5811b6a1155abcb3f71782840",
    "2f435baa687274dac335ed00aa943f2d35bbf9a2",
    "864b2f95a725373b1e4105d3dd129ae01c1625aa",
    "3f51e9dc724af73ba9915d6405ecbbc0229f646e",
    "20d66d82b1ce6cc210b4efa61f9883ca00ce4da0",
    "dd2cd176597eb3acc4d16942a3a9870883366cef"
  ],
  "changeHistoryShort": {
    "c51a86074928d8c5811b6a1155abcb3f71782840": "Ybodychange",
    "2f435baa687274dac335ed00aa943f2d35bbf9a2": "Ybodychange",
    "864b2f95a725373b1e4105d3dd129ae01c1625aa": "Ydocchange",
    "3f51e9dc724af73ba9915d6405ecbbc0229f646e": "Yformatchange",
    "20d66d82b1ce6cc210b4efa61f9883ca00ce4da0": "Ydocchange",
    "dd2cd176597eb3acc4d16942a3a9870883366cef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c51a86074928d8c5811b6a1155abcb3f71782840": {
      "type": "Ybodychange",
      "commitMessage": "Bugzilla Bug 30855\n[lang] Additional constructor for EqualsBuilder and isEquals member access.\nAddressing: \"Finally, can they change the member \"isEquals\" from private to\nprotected?  At present, I cannot subclass EqualsBuilder and use this member.\"\n\nI\u0027ve added:\n\nprotected void setEquals(boolean isEquals)\n\nwhich in conjunction with:\n\npublic boolean isEquals()\n\nallows one to access the isEquals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/25/04, 10:46 PM",
      "commitName": "c51a86074928d8c5811b6a1155abcb3f71782840",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "8/25/04, 2:20 PM",
      "commitNameOld": "2f435baa687274dac335ed00aa943f2d35bbf9a2",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        this.setEquals(false);\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else if (lhs.getClass() !\u003d rhs.getClass()) {\n        this.setEquals(false);\n    } else if (lhs instanceof long[]) {\n        append((long[]) lhs, (long[]) rhs);\n    } else if (lhs instanceof int[]) {\n        append((int[]) lhs, (int[]) rhs);\n    } else if (lhs instanceof short[]) {\n        append((short[]) lhs, (short[]) rhs);\n    } else if (lhs instanceof char[]) {\n        append((char[]) lhs, (char[]) rhs);\n    } else if (lhs instanceof byte[]) {\n        append((byte[]) lhs, (byte[]) rhs);\n    } else if (lhs instanceof double[]) {\n        append((double[]) lhs, (double[]) rhs);\n    } else if (lhs instanceof float[]) {\n        append((float[]) lhs, (float[]) rhs);\n    } else if (lhs instanceof boolean[]) {\n        append((boolean[]) lhs, (boolean[]) rhs);\n    } else {\n        append((Object[]) lhs, (Object[]) rhs);\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 279,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs the left hand object\n@param rhs the right hand object\n@return EqualsBuilder - used to chain calls.\n",
      "diff": "@@ -1,37 +1,37 @@\n public EqualsBuilder append(Object lhs, Object rhs) {\n     if (isEquals \u003d\u003d false) {\n         return this;\n     }\n     if (lhs \u003d\u003d rhs) {\n         return this;\n     }\n     if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n-        isEquals \u003d false;\n+        this.setEquals(false);\n         return this;\n     }\n     Class lhsClass \u003d lhs.getClass();\n     if (!lhsClass.isArray()) {\n         isEquals \u003d lhs.equals(rhs);\n     } else if (lhs.getClass() !\u003d rhs.getClass()) {\n-        isEquals \u003d false;\n+        this.setEquals(false);\n     } else if (lhs instanceof long[]) {\n         append((long[]) lhs, (long[]) rhs);\n     } else if (lhs instanceof int[]) {\n         append((int[]) lhs, (int[]) rhs);\n     } else if (lhs instanceof short[]) {\n         append((short[]) lhs, (short[]) rhs);\n     } else if (lhs instanceof char[]) {\n         append((char[]) lhs, (char[]) rhs);\n     } else if (lhs instanceof byte[]) {\n         append((byte[]) lhs, (byte[]) rhs);\n     } else if (lhs instanceof double[]) {\n         append((double[]) lhs, (double[]) rhs);\n     } else if (lhs instanceof float[]) {\n         append((float[]) lhs, (float[]) rhs);\n     } else if (lhs instanceof boolean[]) {\n         append((boolean[]) lhs, (boolean[]) rhs);\n     } else {\n         append((Object[]) lhs, (Object[]) rhs);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2f435baa687274dac335ed00aa943f2d35bbf9a2": {
      "type": "Ybodychange",
      "commitMessage": "Bugzilla Bug 30815\nArrayUtils.isEquals() throws ClassCastException when array1 and array2 are different dimension\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id\u003d30815\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137898 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/25/04, 2:20 PM",
      "commitName": "2f435baa687274dac335ed00aa943f2d35bbf9a2",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2/18/04, 3:06 PM",
      "commitNameOld": "a6c9528cd88adee314a3bf2d0f66c3938906503f",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 188.93,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        isEquals \u003d false;\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else if (lhs.getClass() !\u003d rhs.getClass()) {\n        isEquals \u003d false;\n    } else if (lhs instanceof long[]) {\n        append((long[]) lhs, (long[]) rhs);\n    } else if (lhs instanceof int[]) {\n        append((int[]) lhs, (int[]) rhs);\n    } else if (lhs instanceof short[]) {\n        append((short[]) lhs, (short[]) rhs);\n    } else if (lhs instanceof char[]) {\n        append((char[]) lhs, (char[]) rhs);\n    } else if (lhs instanceof byte[]) {\n        append((byte[]) lhs, (byte[]) rhs);\n    } else if (lhs instanceof double[]) {\n        append((double[]) lhs, (double[]) rhs);\n    } else if (lhs instanceof float[]) {\n        append((float[]) lhs, (float[]) rhs);\n    } else if (lhs instanceof boolean[]) {\n        append((boolean[]) lhs, (boolean[]) rhs);\n    } else {\n        append((Object[]) lhs, (Object[]) rhs);\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 278,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs the left hand object\n@param rhs the right hand object\n@return EqualsBuilder - used to chain calls.\n",
      "diff": "@@ -1,37 +1,37 @@\n public EqualsBuilder append(Object lhs, Object rhs) {\n     if (isEquals \u003d\u003d false) {\n         return this;\n     }\n     if (lhs \u003d\u003d rhs) {\n         return this;\n     }\n     if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n         isEquals \u003d false;\n         return this;\n     }\n     Class lhsClass \u003d lhs.getClass();\n     if (!lhsClass.isArray()) {\n         isEquals \u003d lhs.equals(rhs);\n+    } else if (lhs.getClass() !\u003d rhs.getClass()) {\n+        isEquals \u003d false;\n+    } else if (lhs instanceof long[]) {\n+        append((long[]) lhs, (long[]) rhs);\n+    } else if (lhs instanceof int[]) {\n+        append((int[]) lhs, (int[]) rhs);\n+    } else if (lhs instanceof short[]) {\n+        append((short[]) lhs, (short[]) rhs);\n+    } else if (lhs instanceof char[]) {\n+        append((char[]) lhs, (char[]) rhs);\n+    } else if (lhs instanceof byte[]) {\n+        append((byte[]) lhs, (byte[]) rhs);\n+    } else if (lhs instanceof double[]) {\n+        append((double[]) lhs, (double[]) rhs);\n+    } else if (lhs instanceof float[]) {\n+        append((float[]) lhs, (float[]) rhs);\n+    } else if (lhs instanceof boolean[]) {\n+        append((boolean[]) lhs, (boolean[]) rhs);\n     } else {\n-        if (lhs instanceof long[]) {\n-            append((long[]) lhs, (long[]) rhs);\n-        } else if (lhs instanceof int[]) {\n-            append((int[]) lhs, (int[]) rhs);\n-        } else if (lhs instanceof short[]) {\n-            append((short[]) lhs, (short[]) rhs);\n-        } else if (lhs instanceof char[]) {\n-            append((char[]) lhs, (char[]) rhs);\n-        } else if (lhs instanceof byte[]) {\n-            append((byte[]) lhs, (byte[]) rhs);\n-        } else if (lhs instanceof double[]) {\n-            append((double[]) lhs, (double[]) rhs);\n-        } else if (lhs instanceof float[]) {\n-            append((float[]) lhs, (float[]) rhs);\n-        } else if (lhs instanceof boolean[]) {\n-            append((boolean[]) lhs, (boolean[]) rhs);\n-        } else {\n-            append((Object[]) lhs, (Object[]) rhs);\n-        }\n+        append((Object[]) lhs, (Object[]) rhs);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "864b2f95a725373b1e4105d3dd129ae01c1625aa": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc fixes\nbug 21758, from Pete Gieser\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137488 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/03, 4:30 PM",
      "commitName": "864b2f95a725373b1e4105d3dd129ae01c1625aa",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/20/03, 8:49 AM",
      "commitNameOld": "c5e0192ca2586126253871b3c2ad6c4b477a24fc",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        isEquals \u003d false;\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else {\n        if (lhs instanceof long[]) {\n            append((long[]) lhs, (long[]) rhs);\n        } else if (lhs instanceof int[]) {\n            append((int[]) lhs, (int[]) rhs);\n        } else if (lhs instanceof short[]) {\n            append((short[]) lhs, (short[]) rhs);\n        } else if (lhs instanceof char[]) {\n            append((char[]) lhs, (char[]) rhs);\n        } else if (lhs instanceof byte[]) {\n            append((byte[]) lhs, (byte[]) rhs);\n        } else if (lhs instanceof double[]) {\n            append((double[]) lhs, (double[]) rhs);\n        } else if (lhs instanceof float[]) {\n            append((float[]) lhs, (float[]) rhs);\n        } else if (lhs instanceof boolean[]) {\n            append((boolean[]) lhs, (boolean[]) rhs);\n        } else {\n            append((Object[]) lhs, (Object[]) rhs);\n        }\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 313,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs the left hand object\n@param rhs the right hand object\n@return EqualsBuilder - used to chain calls.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n",
        "newValue": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs the left hand object\n@param rhs the right hand object\n@return EqualsBuilder - used to chain calls.\n"
      }
    },
    "3f51e9dc724af73ba9915d6405ecbbc0229f646e": {
      "type": "Yformatchange",
      "commitMessage": "Javadoc example java fixed.\nSubmitted by:\tChristopher M. Judd \u003ccjudd@columbus.rr.com\u003e\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/15/03, 12:54 PM",
      "commitName": "3f51e9dc724af73ba9915d6405ecbbc0229f646e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/22/02, 4:20 PM",
      "commitNameOld": "d6deb0612aff4f71e28c29e7cb94bba7151e76e1",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        isEquals \u003d false;\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else {\n        if (lhs instanceof long[]) {\n            append((long[]) lhs, (long[]) rhs);\n        } else if (lhs instanceof int[]) {\n            append((int[]) lhs, (int[]) rhs);\n        } else if (lhs instanceof short[]) {\n            append((short[]) lhs, (short[]) rhs);\n        } else if (lhs instanceof char[]) {\n            append((char[]) lhs, (char[]) rhs);\n        } else if (lhs instanceof byte[]) {\n            append((byte[]) lhs, (byte[]) rhs);\n        } else if (lhs instanceof double[]) {\n            append((double[]) lhs, (double[]) rhs);\n        } else if (lhs instanceof float[]) {\n            append((float[]) lhs, (float[]) rhs);\n        } else if (lhs instanceof boolean[]) {\n            append((boolean[]) lhs, (boolean[]) rhs);\n        } else {\n            append((Object[]) lhs, (Object[]) rhs);\n        }\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 229,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "20d66d82b1ce6cc210b4efa61f9883ca00ce4da0": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc style fix, from Fredrik Westermarck\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137135 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/17/02, 1:46 PM",
      "commitName": "20d66d82b1ce6cc210b4efa61f9883ca00ce4da0",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/1/02, 8:40 AM",
      "commitNameOld": "024ab67351992daf6459114002014e0a74d17047",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 16.21,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        isEquals \u003d false;\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else {\n        if (lhs instanceof long[]) {\n            append((long[]) lhs, (long[]) rhs);\n        } else if (lhs instanceof int[]) {\n            append((int[]) lhs, (int[]) rhs);\n        } else if (lhs instanceof short[]) {\n            append((short[]) lhs, (short[]) rhs);\n        } else if (lhs instanceof char[]) {\n            append((char[]) lhs, (char[]) rhs);\n        } else if (lhs instanceof byte[]) {\n            append((byte[]) lhs, (byte[]) rhs);\n        } else if (lhs instanceof double[]) {\n            append((double[]) lhs, (double[]) rhs);\n        } else if (lhs instanceof float[]) {\n            append((float[]) lhs, (float[]) rhs);\n        } else if (lhs instanceof boolean[]) {\n            append((boolean[]) lhs, (boolean[]) rhs);\n        } else {\n            append((Object[]) lhs, (Object[]) rhs);\n        }\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 211,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Test if two \u003ccode\u003eObject\u003c/code\u003es are equal using their \u003ccode\u003eequals\u003c/code\u003e\n method.\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n",
        "newValue": "\u003cp\u003eTest if two \u003ccode\u003eObject\u003c/code\u003es are equal using their\n\u003ccode\u003eequals\u003c/code\u003e method.\u003c/p\u003e\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n"
      }
    },
    "dd2cd176597eb3acc4d16942a3a9870883366cef": {
      "type": "Yintroduced",
      "commitMessage": "Added code from Steve Downey, \nwith some formatting changes and minor bug fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/12/02, 3:00 PM",
      "commitName": "dd2cd176597eb3acc4d16942a3a9870883366cef",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,37 @@\n+public EqualsBuilder append(Object lhs, Object rhs) {\n+    if (isEquals \u003d\u003d false) {\n+        return this;\n+    }\n+    if (lhs \u003d\u003d rhs) {\n+        return this;\n+    }\n+    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n+        isEquals \u003d false;\n+        return this;\n+    }\n+    Class lhsClass \u003d lhs.getClass();\n+    if (!lhsClass.isArray()) {\n+        isEquals \u003d lhs.equals(rhs);\n+    } else {\n+        if (lhs instanceof long[]) {\n+            append((long[]) lhs, (long[]) rhs);\n+        } else if (lhs instanceof int[]) {\n+            append((int[]) lhs, (int[]) rhs);\n+        } else if (lhs instanceof short[]) {\n+            append((short[]) lhs, (short[]) rhs);\n+        } else if (lhs instanceof char[]) {\n+            append((char[]) lhs, (char[]) rhs);\n+        } else if (lhs instanceof byte[]) {\n+            append((byte[]) lhs, (byte[]) rhs);\n+        } else if (lhs instanceof double[]) {\n+            append((double[]) lhs, (double[]) rhs);\n+        } else if (lhs instanceof float[]) {\n+            append((float[]) lhs, (float[]) rhs);\n+        } else if (lhs instanceof boolean[]) {\n+            append((boolean[]) lhs, (boolean[]) rhs);\n+        } else {\n+            append((Object[]) lhs, (Object[]) rhs);\n+        }\n+    }\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals \u003d\u003d false) {\n        return this;\n    }\n    if (lhs \u003d\u003d rhs) {\n        return this;\n    }\n    if (lhs \u003d\u003d null || rhs \u003d\u003d null) {\n        isEquals \u003d false;\n        return this;\n    }\n    Class lhsClass \u003d lhs.getClass();\n    if (!lhsClass.isArray()) {\n        isEquals \u003d lhs.equals(rhs);\n    } else {\n        if (lhs instanceof long[]) {\n            append((long[]) lhs, (long[]) rhs);\n        } else if (lhs instanceof int[]) {\n            append((int[]) lhs, (int[]) rhs);\n        } else if (lhs instanceof short[]) {\n            append((short[]) lhs, (short[]) rhs);\n        } else if (lhs instanceof char[]) {\n            append((char[]) lhs, (char[]) rhs);\n        } else if (lhs instanceof byte[]) {\n            append((byte[]) lhs, (byte[]) rhs);\n        } else if (lhs instanceof double[]) {\n            append((double[]) lhs, (double[]) rhs);\n        } else if (lhs instanceof float[]) {\n            append((float[]) lhs, (float[]) rhs);\n        } else if (lhs instanceof boolean[]) {\n            append((boolean[]) lhs, (boolean[]) rhs);\n        } else {\n            append((Object[]) lhs, (Object[]) rhs);\n        }\n    }\n    return this;\n}",
      "path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
      "functionStartLine": 197,
      "functionName": "append",
      "functionAnnotation": "",
      "functionDoc": "Test if two \u003ccode\u003eObject\u003c/code\u003es are equal using their \u003ccode\u003eequals\u003c/code\u003e\n method.\n\n@param lhs - Left Hand Side\n@param rhs - Right Hand Side\n@return EqualsBuilder - used to chain calls.\n"
    }
  }
}