{
  "origin": "codeshovel",
  "repositoryName": "Math-87b",
  "repositoryPath": "/tmp/Math-87b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RealMatrixImpl.java",
  "functionName": "setEntry",
  "functionId": "setEntry___row-int(modifiers-final)__column-int(modifiers-final)__value-double(modifiers-final)",
  "sourceFilePath": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
  "functionAnnotation": "@Override",
  "functionDoc": "@inheritDoc}\n",
  "functionStartLine": 364,
  "functionEndLine": 373,
  "numCommitsSeen": 136,
  "timeTaken": 3531,
  "changeHistory": [
    "9c8d2c79c1ef565337599849cd066ff63b8d5816",
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3",
    "0e547fb3775b1cd9fd2b1c15882d34432c238913",
    "7b37de8d8ce8145f933537db67070dc91e19d86b",
    "479f7773075c136b43a9cf120704c77c0a4880ab",
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
    "07b7dcef8a14a83692e88980b751cb78021803cd",
    "adc70eb37887e7036fd8395f489c26175546af45",
    "d96ef142ea5815d99f8f732966f570fb88a154bf",
    "f182c916020a069b17900e3d2c37ebbc68c7439b",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "9c8d2c79c1ef565337599849cd066ff63b8d5816": "Yannotationchange",
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d": "Ybodychange",
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": "Ybodychange",
    "0e547fb3775b1cd9fd2b1c15882d34432c238913": "Ydocchange",
    "7b37de8d8ce8145f933537db67070dc91e19d86b": "Ybodychange",
    "479f7773075c136b43a9cf120704c77c0a4880ab": "Ydocchange",
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f": "Ymultichange(Ybodychange,Ydocchange)",
    "07b7dcef8a14a83692e88980b751cb78021803cd": "Ydocchange",
    "adc70eb37887e7036fd8395f489c26175546af45": "Ydocchange",
    "d96ef142ea5815d99f8f732966f570fb88a154bf": "Yformatchange",
    "f182c916020a069b17900e3d2c37ebbc68c7439b": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c8d2c79c1ef565337599849cd066ff63b8d5816": {
      "type": "Yannotationchange",
      "commitMessage": "added missing @Override annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/5/09, 7:20 AM",
      "commitName": "9c8d2c79c1ef565337599849cd066ff63b8d5816",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/21/09, 12:01 PM",
      "commitNameOld": "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 42.76,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", row, column, getRowDimension(), getColumnDimension());\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 364,
      "functionName": "setEntry",
      "functionAnnotation": "@Override",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,7 +1,8 @@\n+@Override\n public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n         data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", row, column, getRowDimension(), getColumnDimension());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d": {
      "type": "Ybodychange",
      "commitMessage": "replaced Object[] parameters by variable arguments in exceptions constructors\nthis allows simpler error declaration and removes the need for the strange\nnull argument with fixed messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746578 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/21/09, 12:01 PM",
      "commitName": "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "1/2/09, 9:07 AM",
      "commitNameOld": "e8c9aea1b31e6b28085c8c4776d93cdd29198ddb",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 50.12,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", row, column, getRowDimension(), getColumnDimension());\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 355,
      "functionName": "setEntry",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,7 +1,7 @@\n public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n         data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n-        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n+        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", row, column, getRowDimension(), getColumnDimension());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c28099c6ede92badb1c26c003ea64c5f3f38377e": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
      "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/7/08, 7:21 AM",
      "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/5/08, 6:05 AM",
          "commitNameOld": "17238b2e4570213c4d31d4df6805b24dadc468c1",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 349,
          "functionName": "setEntry",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,7 @@\n-public double getEntry(int row, int column) throws MatrixIndexException {\n+public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n-        return data[row][column];\n+        data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getEntry",
            "newValue": "setEntry"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/5/08, 6:05 AM",
          "commitNameOld": "17238b2e4570213c4d31d4df6805b24dadc468c1",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 349,
          "functionName": "setEntry",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,7 @@\n-public double getEntry(int row, int column) throws MatrixIndexException {\n+public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n-        return data[row][column];\n+        data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[row-int, column-int]",
            "newValue": "[row-int(modifiers-final), column-int(modifiers-final), value-double(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/5/08, 6:05 AM",
          "commitNameOld": "17238b2e4570213c4d31d4df6805b24dadc468c1",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 349,
          "functionName": "setEntry",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,7 @@\n-public double getEntry(int row, int column) throws MatrixIndexException {\n+public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n-        return data[row][column];\n+        data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "double",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/5/08, 6:05 AM",
          "commitNameOld": "17238b2e4570213c4d31d4df6805b24dadc468c1",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 349,
          "functionName": "setEntry",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,7 @@\n-public double getEntry(int row, int column) throws MatrixIndexException {\n+public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n-        return data[row][column];\n+        data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "added an abstract implementation of RealMatrix and used it for RealMatrixImpl\nJIRA: MATH-231\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724141 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/7/08, 7:21 AM",
          "commitName": "c28099c6ede92badb1c26c003ea64c5f3f38377e",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "12/5/08, 6:05 AM",
          "commitNameOld": "17238b2e4570213c4d31d4df6805b24dadc468c1",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 2.05,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n    try {\n        data[row][column] \u003d value;\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 349,
          "functionName": "setEntry",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n",
          "diff": "@@ -1,7 +1,7 @@\n-public double getEntry(int row, int column) throws MatrixIndexException {\n+public void setEntry(final int row, final int column, final double value) throws MatrixIndexException {\n     try {\n-        return data[row][column];\n+        data[row][column] \u003d value;\n     } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[row-int, column-int]",
            "newValue": "[row-int(modifiers-final), column-int(modifiers-final), value-double(modifiers-final)]"
          }
        }
      ]
    },
    "2974de5bcae652a32b1d823f8965d66f56b82fd3": {
      "type": "Ybodychange",
      "commitMessage": "improved error handling in linear package with finer grained exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@710168 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/3/08, 1:32 PM",
      "commitName": "2974de5bcae652a32b1d823f8965d66f56b82fd3",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/28/08, 8:55 AM",
      "commitNameOld": "0e547fb3775b1cd9fd2b1c15882d34432c238913",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 36.23,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    try {\n        return data[row][column];\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 562,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,7 +1,7 @@\n public double getEntry(int row, int column) throws MatrixIndexException {\n     try {\n         return data[row][column];\n     } catch (ArrayIndexOutOfBoundsException e) {\n-        throw new MatrixIndexException(\"matrix entry does not exist\");\n+        throw new MatrixIndexException(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\", new Object[] { row, column, getRowDimension(), getColumnDimension() });\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e547fb3775b1cd9fd2b1c15882d34432c238913": {
      "type": "Ydocchange",
      "commitMessage": "Replaced internal LU-decomposition by the external class.\nDeprecated the direct call to these methods as users should\nreally be able to choose the type of solver they want.\nLU-decomposition is only one possibility among others like\nQR-decomposition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@699845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/28/08, 8:55 AM",
      "commitName": "0e547fb3775b1cd9fd2b1c15882d34432c238913",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/29/08, 9:17 AM",
      "commitNameOld": "231e2e584f0fa919f74485519f8b8faba5a3d58f",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 29.98,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    try {\n        return data[row][column];\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 548,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\u003c/p\u003e\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
        "newValue": "@inheritDoc}\n"
      }
    },
    "7b37de8d8ce8145f933537db67070dc91e19d86b": {
      "type": "Ybodychange",
      "commitMessage": "Improved linear RealMatrixImpl and BigMatrixImpl performances.\nThe main changes are the following ones:\n - use directly the storage array when possible for\n   diadic operations (add, subtract, multiply), as\n   suggested by Phil, this avoids the cost of the\n   generic getEntry method\n - replaced custom indices checks by simple use of\n   the JVM checks and ArrayIndexOutOfBoundException\n - put row arrays reference in local variables to\n   avoid multiple checks in double loops\n - use final variables where possible\n - removed unneeded array copying\n - added a constructor to build a matrix from an\n   array without copying it where it makes sense\n\nThe speed gain is about 3X for multiplication. Performances\nfor this operation are now on par with Jama.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@662241 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/1/08, 9:22 AM",
      "commitName": "7b37de8d8ce8145f933537db67070dc91e19d86b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/24/08, 6:22 AM",
      "commitNameOld": "862e1b88bf4216eb1ed83504606ef4346dfc2cfa",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 38.13,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    try {\n        return data[row][column];\n    } catch (ArrayIndexOutOfBoundsException e) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 660,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\u003c/p\u003e\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
      "diff": "@@ -1,6 +1,7 @@\n public double getEntry(int row, int column) throws MatrixIndexException {\n-    if (!isValidCoordinate(row, column)) {\n+    try {\n+        return data[row][column];\n+    } catch (ArrayIndexOutOfBoundsException e) {\n         throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n-    return data[row][column];\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "479f7773075c136b43a9cf120704c77c0a4880ab": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only.  Added missing \u003c/p\u003e\u0027s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@617953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/2/08, 9:54 PM",
      "commitName": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "1/20/08, 1:08 PM",
      "commitNameOld": "bc84c00b75adae089cba788aaec9bbbd8d9efcdb",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row][column];\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 521,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\u003c/p\u003e\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
        "newValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\u003c/p\u003e\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n"
      }
    },
    "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/4/04, 6:19 PM",
      "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/4/04, 6:19 PM",
          "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "9/1/04, 2:26 PM",
          "commitNameOld": "07b7dcef8a14a83692e88980b751cb78021803cd",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row][column];\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 368,
          "functionName": "getEntry",
          "functionAnnotation": "",
          "functionDoc": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
          "diff": "@@ -1,6 +1,6 @@\n public double getEntry(int row, int column) throws MatrixIndexException {\n     if (!isValidCoordinate(row, column)) {\n         throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n-    return data[row - 1][column - 1];\n+    return data[row][column];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Changed matrix indexing to be 0-based.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141442 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/4/04, 6:19 PM",
          "commitName": "cb6378b922641f920e5f3edc2d8a3a2b1ad0f65f",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "9/1/04, 2:26 PM",
          "commitNameOld": "07b7dcef8a14a83692e88980b751cb78021803cd",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row][column];\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 368,
          "functionName": "getEntry",
          "functionAnnotation": "",
          "functionDoc": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
          "diff": "@@ -1,6 +1,6 @@\n public double getEntry(int row, int column) throws MatrixIndexException {\n     if (!isValidCoordinate(row, column)) {\n         throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n-    return data[row - 1][column - 1];\n+    return data[row][column];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 1 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c row \u003c\u003d rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c column \u003c\u003d columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
            "newValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 0 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c\u003d row \u003c rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c\u003d column \u003c columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n"
          }
        }
      ]
    },
    "07b7dcef8a14a83692e88980b751cb78021803cd": {
      "type": "Ydocchange",
      "commitMessage": "Made standard matrix entry addressing explicit in javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141440 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/1/04, 2:26 PM",
      "commitName": "07b7dcef8a14a83692e88980b751cb78021803cd",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "8/21/04, 6:42 PM",
      "commitNameOld": "e3aff05625c90f3d74c740183e9bf7a499b1ff3d",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 10.82,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 363,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 1 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c row \u003c\u003d rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c column \u003c\u003d columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside\n                             the dimensions of this matrix\n",
        "newValue": "Returns the entry in the specified row and column.\n\u003cp\u003e\nRow and column indices start at 1 and must satisfy \n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e0 \u003c row \u003c\u003d rowDimension\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e 0 \u003c column \u003c\u003d columnDimension\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\notherwise a \u003ccode\u003eMatrixIndexException\u003c/code\u003e is thrown.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the row or column index is not valid\n"
      }
    },
    "adc70eb37887e7036fd8395f489c26175546af45": {
      "type": "Ydocchange",
      "commitMessage": "Formatting only, Eliminated tabs and trailing spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141285 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/6/04, 8:26 PM",
      "commitName": "adc70eb37887e7036fd8395f489c26175546af45",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/5/04, 3:31 PM",
      "commitNameOld": "d96ef142ea5815d99f8f732966f570fb88a154bf",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 353,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside\n                             the dimensions of this matrix\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n",
        "newValue": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside\n                             the dimensions of this matrix\n"
      }
    },
    "d96ef142ea5815d99f8f732966f570fb88a154bf": {
      "type": "Yformatchange",
      "commitMessage": "Converted tabs to spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/04, 3:31 PM",
      "commitName": "d96ef142ea5815d99f8f732966f570fb88a154bf",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/5/04, 3:28 PM",
      "commitNameOld": "53b67deb0fe6aa6d275d6cd05fffda942fd8b69a",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 353,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f182c916020a069b17900e3d2c37ebbc68c7439b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/04, 12:15 PM",
      "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
      "commitAuthor": "Timothy O\u0027Brien",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 389,
          "functionName": "getEntry",
          "functionAnnotation": "",
          "functionDoc": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n",
          "diff": "@@ -1,6 +1,6 @@\n-public double getEntry(int row, int column) throws IllegalArgumentException {\n-    if (row \u003c 1 || column \u003c 1 || row \u003e this.getRowDimension() || column \u003e this.getColumnDimension()) {\n-        throw new IllegalArgumentException(\"matrix entry does not exist\");\n+public double getEntry(int row, int column) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, column)) {\n+        throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n     return data[row - 1][column - 1];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[IllegalArgumentException]",
            "newValue": "[MatrixIndexException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 389,
          "functionName": "getEntry",
          "functionAnnotation": "",
          "functionDoc": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n",
          "diff": "@@ -1,6 +1,6 @@\n-public double getEntry(int row, int column) throws IllegalArgumentException {\n-    if (row \u003c 1 || column \u003c 1 || row \u003e this.getRowDimension() || column \u003e this.getColumnDimension()) {\n-        throw new IllegalArgumentException(\"matrix entry does not exist\");\n+public double getEntry(int row, int column) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, column)) {\n+        throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n     return data[row - 1][column - 1];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "RealMatrix now throws two more runtime exceptions\nInvalidMatrixException and MatrixIndexException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141070 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/04, 12:15 PM",
          "commitName": "f182c916020a069b17900e3d2c37ebbc68c7439b",
          "commitAuthor": "Timothy O\u0027Brien",
          "commitDateOld": "11/23/03, 12:16 PM",
          "commitNameOld": "eb5d0976531aa81f8fa114f23cbbc918f929b893",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 66.0,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getEntry(int row, int column) throws MatrixIndexException {\n    if (!isValidCoordinate(row, column)) {\n        throw new MatrixIndexException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
          "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
          "functionStartLine": 389,
          "functionName": "getEntry",
          "functionAnnotation": "",
          "functionDoc": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n",
          "diff": "@@ -1,6 +1,6 @@\n-public double getEntry(int row, int column) throws IllegalArgumentException {\n-    if (row \u003c 1 || column \u003c 1 || row \u003e this.getRowDimension() || column \u003e this.getColumnDimension()) {\n-        throw new IllegalArgumentException(\"matrix entry does not exist\");\n+public double getEntry(int row, int column) throws MatrixIndexException {\n+    if (!isValidCoordinate(row, column)) {\n+        throw new MatrixIndexException(\"matrix entry does not exist\");\n     }\n     return data[row - 1][column - 1];\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws IllegalArgumentException if entry does not exist\n",
            "newValue": "Returns the entry in the specified row and column.\n\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws MatrixIndexException if the specified coordinate is outside \n                             the dimensions of this matrix\n"
          }
        }
      ]
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,6 @@\n+public double getEntry(int row, int column) throws IllegalArgumentException {\n+    if (row \u003c 1 || column \u003c 1 || row \u003e this.getRowDimension() || column \u003e this.getColumnDimension()) {\n+        throw new IllegalArgumentException(\"matrix entry does not exist\");\n+    }\n+    return data[row - 1][column - 1];\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double getEntry(int row, int column) throws IllegalArgumentException {\n    if (row \u003c 1 || column \u003c 1 || row \u003e this.getRowDimension() || column \u003e this.getColumnDimension()) {\n        throw new IllegalArgumentException(\"matrix entry does not exist\");\n    }\n    return data[row - 1][column - 1];\n}",
      "path": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
      "functionStartLine": 385,
      "functionName": "getEntry",
      "functionAnnotation": "",
      "functionDoc": "\n@param row row location of entry to be fetched\n@param column column location of entry to be fetched\n@return matrix entry in row,column\n@throws IllegalArgumentException if entry does not exist\n"
    }
  }
}