{
  "origin": "codeshovel",
  "repositoryName": "Math-87b",
  "repositoryPath": "/tmp/Math-87b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "getBasicRow",
  "functionId": "getBasicRow___col-int(modifiers-final)",
  "sourceFilePath": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
  "functionStartLine": 272,
  "functionEndLine": 284,
  "numCommitsSeen": 6,
  "timeTaken": 576,
  "changeHistory": [
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
    "96b1276efd88c536f3c918396f7460e557b9ee65"
  ],
  "changeHistoryShort": {
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5": "Ybodychange",
    "96b1276efd88c536f3c918396f7460e557b9ee65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5": {
      "type": "Ybodychange",
      "commitMessage": "added a threshold for comparisons in Simplex solver\nJira: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@763412 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/8/09, 2:41 PM",
      "commitName": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/27/09, 12:56 AM",
      "commitNameOld": "b03d68547460332b861044db80ccd08edec361a1",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 12.57,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n            if (row \u003d\u003d null) {\n                row \u003d i;\n            } else {\n                return null;\n            }\n        }\n    }\n    return row;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 266,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n",
      "diff": "@@ -1,13 +1,13 @@\n private Integer getBasicRow(final int col) {\n     Integer row \u003d null;\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n-        if (getEntry(i, col) !\u003d 0.0) {\n+        if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n             if (row \u003d\u003d null) {\n                 row \u003d i;\n             } else {\n                 return null;\n             }\n         }\n     }\n     return row;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "96b1276efd88c536f3c918396f7460e557b9ee65": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of Dantzig\u0027s simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/09, 4:25 PM",
      "commitName": "96b1276efd88c536f3c918396f7460e557b9ee65",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,13 @@\n+private Integer getBasicRow(final int col) {\n+    Integer row \u003d null;\n+    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n+        if (getEntry(i, col) !\u003d 0.0) {\n+            if (row \u003d\u003d null) {\n+                row \u003d i;\n+            } else {\n+                return null;\n+            }\n+        }\n+    }\n+    return row;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Integer getBasicRow(final int col) {\n    Integer row \u003d null;\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n        if (getEntry(i, col) !\u003d 0.0) {\n            if (row \u003d\u003d null) {\n                row \u003d i;\n            } else {\n                return null;\n            }\n        }\n    }\n    return row;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 259,
      "functionName": "getBasicRow",
      "functionAnnotation": "",
      "functionDoc": "Checks whether the given column is basic.\n\n@param col index of the column to check\n@return the row that the variable is basic in.  null if the column is not basic\n"
    }
  }
}