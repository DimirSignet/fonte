{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CheckAccidentalSemicolon.java",
  "functionName": "visit",
  "functionId": "visit___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 44,
  "functionEndLine": 72,
  "numCommitsSeen": 10,
  "timeTaken": 230,
  "changeHistory": [
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": "Ybodychange",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": {
      "type": "Ybodychange",
      "commitMessage": "Remove circular dependency between error-reporting and the rest\nof the compiler. (Nick)\nR\u003dalan\nDELTA\u003d152  (27 added, 28 deleted, 97 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@159 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/29/10, 7:04 AM",
      "commitName": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 123.97,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    Node child;\n    switch(n.getType()) {\n        case Token.IF:\n            child \u003d n.getFirstChild().getNext();\n            break;\n        case Token.WHILE:\n        case Token.FOR:\n            child \u003d NodeUtil.getLoopCodeBlock(n);\n            break;\n        default:\n            return;\n    }\n    for (; child !\u003d null; child \u003d child.getNext()) {\n        if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n            if (child.wasEmptyNode()) {\n                t.getCompiler().report(t.makeError(n, level, SUSPICIOUS_SEMICOLON));\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java",
      "functionStartLine": 46,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,21 @@\n public void visit(NodeTraversal t, Node n, Node parent) {\n     Node child;\n     switch(n.getType()) {\n         case Token.IF:\n             child \u003d n.getFirstChild().getNext();\n             break;\n         case Token.WHILE:\n         case Token.FOR:\n             child \u003d NodeUtil.getLoopCodeBlock(n);\n             break;\n         default:\n             return;\n     }\n     for (; child !\u003d null; child \u003d child.getNext()) {\n         if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n             if (child.wasEmptyNode()) {\n-                t.getCompiler().report(JSError.make(t, n, level, SUSPICIOUS_SEMICOLON));\n+                t.getCompiler().report(t.makeError(n, level, SUSPICIOUS_SEMICOLON));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Ybodychange",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 21.63,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    Node child;\n    switch(n.getType()) {\n        case Token.IF:\n            child \u003d n.getFirstChild().getNext();\n            break;\n        case Token.WHILE:\n        case Token.FOR:\n            child \u003d NodeUtil.getLoopCodeBlock(n);\n            break;\n        default:\n            return;\n    }\n    for (; child !\u003d null; child \u003d child.getNext()) {\n        if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n            if (child.wasEmptyNode()) {\n                t.getCompiler().report(JSError.make(t, n, level, SUSPICIOUS_SEMICOLON));\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java",
      "functionStartLine": 46,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,21 @@\n public void visit(NodeTraversal t, Node n, Node parent) {\n     Node child;\n     switch(n.getType()) {\n         case Token.IF:\n-        case Token.WHILE:\n             child \u003d n.getFirstChild().getNext();\n             break;\n+        case Token.WHILE:\n         case Token.FOR:\n-            child \u003d n.getFirstChild().getNext().getNext();\n-            if (child.getNext() !\u003d null) {\n-                child \u003d child.getNext();\n-            }\n+            child \u003d NodeUtil.getLoopCodeBlock(n);\n             break;\n         default:\n             return;\n     }\n     for (; child !\u003d null; child \u003d child.getNext()) {\n         if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n             if (child.wasEmptyNode()) {\n                 t.getCompiler().report(JSError.make(t, n, level, SUSPICIOUS_SEMICOLON));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,24 @@\n+public void visit(NodeTraversal t, Node n, Node parent) {\n+    Node child;\n+    switch(n.getType()) {\n+        case Token.IF:\n+        case Token.WHILE:\n+            child \u003d n.getFirstChild().getNext();\n+            break;\n+        case Token.FOR:\n+            child \u003d n.getFirstChild().getNext().getNext();\n+            if (child.getNext() !\u003d null) {\n+                child \u003d child.getNext();\n+            }\n+            break;\n+        default:\n+            return;\n+    }\n+    for (; child !\u003d null; child \u003d child.getNext()) {\n+        if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n+            if (child.wasEmptyNode()) {\n+                t.getCompiler().report(JSError.make(t, n, level, SUSPICIOUS_SEMICOLON));\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void visit(NodeTraversal t, Node n, Node parent) {\n    Node child;\n    switch(n.getType()) {\n        case Token.IF:\n        case Token.WHILE:\n            child \u003d n.getFirstChild().getNext();\n            break;\n        case Token.FOR:\n            child \u003d n.getFirstChild().getNext().getNext();\n            if (child.getNext() !\u003d null) {\n                child \u003d child.getNext();\n            }\n            break;\n        default:\n            return;\n    }\n    for (; child !\u003d null; child \u003d child.getNext()) {\n        if ((child.getType() \u003d\u003d Token.BLOCK) \u0026\u0026 (!child.hasChildren())) {\n            if (child.wasEmptyNode()) {\n                t.getCompiler().report(JSError.make(t, n, level, SUSPICIOUS_SEMICOLON));\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java",
      "functionStartLine": 46,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}