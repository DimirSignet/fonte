{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineFunctions.java",
  "functionName": "shouldTraverse",
  "functionId": "$shouldTraverse___nodeTraversal-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineFunctions.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 153,
  "functionEndLine": 158,
  "numCommitsSeen": 29,
  "timeTaken": 2813,
  "changeHistory": [
    "170b23fa89cdcc38411fc29ec4453935e0903b16",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335",
    "2acd6c1986e36bfdbae85c09eb83ac1940b86c73"
  ],
  "changeHistoryShort": {
    "170b23fa89cdcc38411fc29ec4453935e0903b16": "Ybodychange",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": "Ybodychange",
    "2acd6c1986e36bfdbae85c09eb83ac1940b86c73": "Yintroduced"
  },
  "changeHistoryDetails": {
    "170b23fa89cdcc38411fc29ec4453935e0903b16": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/24 by johnlenz\n\n\tSimplify function inlining compiler options: remove\n\tdecompose_expressions and inline_anonymouse_function_expression\n\toptions.\n\n\tR\u003danatol,nicksantos\n\tDELTA\u003d40  (0 added, 34 deleted, 6 changed)\n\nChange on 2010/05/24 by johnlenz\n\n\tHave flow sensitive inlining follow the default in the regtests so it\n\tdoesn\u0027t block pending CLs due to its current brokeness.\n\n\tR\u003dacleung\n\tDELTA\u003d1  (0 added, 1 deleted, 0 changed)\n\nChange on 2010/05/24 by johnlenz\n\n\tThe ReplaceDebugStrings pass folds \"new Error\" to \"Error\", I don\u0027t want this\n\tin the general version of that pass so add it in a general fold to\n\tFoldConstants.  It should be in the \"reshaping pass\" when FoldConstants\n\tin refactored.\n\n\tR\u003dacleung\n\tDELTA\u003d90  (68 added, 0 deleted, 22 changed)\n\nChange on 2010/05/24 by nicksantos\n\n\tDelete SymbolTable.\n\tI was never able to make this approach work. The savings were\n\tmarginal and not worth the extra complexity.\n\n\tR\u003djohnlenz\n\tDELTA\u003d484  (0 added, 483 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d11004\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@230 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/25/10, 10:51 AM",
      "commitName": "170b23fa89cdcc38411fc29ec4453935e0903b16",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 31.97,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    return inlineLocalFunctions || nodeTraversal.inGlobalScope();\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 145,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n-    return inlineLocalFunctions || inlineFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n+    return inlineLocalFunctions || nodeTraversal.inGlobalScope();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/23/10, 11:31 AM",
      "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/19/10, 4:28 PM",
      "commitNameOld": "5da32cba7b68d69acfc535f57f21d652475d256f",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 3.79,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    return inlineLocalFunctions || inlineFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 151,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n-    return inlineLocalFunctions || inlineAnonymousFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n+    return inlineLocalFunctions || inlineFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2acd6c1986e36bfdbae85c09eb83ac1940b86c73": {
      "type": "Yintroduced",
      "commitMessage": "Fix if-folding compiler crash (issue 43)\nFix property-collapsing compiler crash (issue 34)\nFix labeled VAR compiler crash (issue 41)\nMake [paramName] syntax denote optionality (issue #26)\nBetter function inlining.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@11 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/16/09, 4:04 PM",
      "commitName": "2acd6c1986e36bfdbae85c09eb83ac1940b86c73",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n+    return inlineLocalFunctions || inlineAnonymousFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) {\n    return inlineLocalFunctions || inlineAnonymousFunctionExpressions || parent \u003d\u003d null || NodeUtil.isControlStructure(parent) || NodeUtil.isStatementBlock(parent);\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 153,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}