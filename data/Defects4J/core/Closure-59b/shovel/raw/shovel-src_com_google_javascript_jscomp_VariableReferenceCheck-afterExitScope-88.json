{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VariableReferenceCheck.java",
  "functionName": "afterExitScope",
  "functionId": "$afterExitScope___t-NodeTraversal__referenceMap-ReferenceMap",
  "sourceFilePath": "src/com/google/javascript/jscomp/VariableReferenceCheck.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 88,
  "functionEndLine": 98,
  "numCommitsSeen": 23,
  "timeTaken": 875,
  "changeHistory": [
    "75a9013e3907e5db97f10578227497d7b018caf5",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "75a9013e3907e5db97f10578227497d7b018caf5": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "75a9013e3907e5db97f10578227497d7b018caf5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nmade checkVariableReferences hot-swappable and to do this added the\nfunctionality to keep lists of all global var references in Compiler\n\nR\u003dnicksantos\nDELTA\u003d478  (417 added, 8 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1999\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1128 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/24/11, 10:36 AM",
      "commitName": "75a9013e3907e5db97f10578227497d7b018caf5",
      "commitAuthor": "bashir@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nmade checkVariableReferences hot-swappable and to do this added the\nfunctionality to keep lists of all global var references in Compiler\n\nR\u003dnicksantos\nDELTA\u003d478  (417 added, 8 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1999\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1128 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/24/11, 10:36 AM",
          "commitName": "75a9013e3907e5db97f10578227497d7b018caf5",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "4/12/11, 12:15 PM",
          "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 41.93,
          "commitsBetweenForRepo": 125,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {\n    for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n        Var v \u003d it.next();\n        checkVar(t, v, referenceMap.getReferences(v).references);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/VariableReferenceCheck.java",
          "functionStartLine": 89,
          "functionName": "afterExitScope",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n @Override\n-public void afterExitScope(NodeTraversal t, Map\u003cVar, ReferenceCollection\u003e referenceMap) {\n+public void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {\n     for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n         Var v \u003d it.next();\n-        checkVar(t, v, referenceMap.get(v).references);\n+        checkVar(t, v, referenceMap.getReferences(v).references);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[t-NodeTraversal, referenceMap-Map\u003cVar,ReferenceCollection\u003e]",
            "newValue": "[t-NodeTraversal, referenceMap-ReferenceMap]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nmade checkVariableReferences hot-swappable and to do this added the\nfunctionality to keep lists of all global var references in Compiler\n\nR\u003dnicksantos\nDELTA\u003d478  (417 added, 8 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1999\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1128 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/24/11, 10:36 AM",
          "commitName": "75a9013e3907e5db97f10578227497d7b018caf5",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "4/12/11, 12:15 PM",
          "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 41.93,
          "commitsBetweenForRepo": 125,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {\n    for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n        Var v \u003d it.next();\n        checkVar(t, v, referenceMap.getReferences(v).references);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/VariableReferenceCheck.java",
          "functionStartLine": 89,
          "functionName": "afterExitScope",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,7 +1,7 @@\n @Override\n-public void afterExitScope(NodeTraversal t, Map\u003cVar, ReferenceCollection\u003e referenceMap) {\n+public void afterExitScope(NodeTraversal t, ReferenceMap referenceMap) {\n     for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n         Var v \u003d it.next();\n-        checkVar(t, v, referenceMap.get(v).references);\n+        checkVar(t, v, referenceMap.getReferences(v).references);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+@Override\n+public void afterExitScope(NodeTraversal t, Map\u003cVar, ReferenceCollection\u003e referenceMap) {\n+    for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n+        Var v \u003d it.next();\n+        checkVar(t, v, referenceMap.get(v).references);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void afterExitScope(NodeTraversal t, Map\u003cVar, ReferenceCollection\u003e referenceMap) {\n    for (Iterator\u003cVar\u003e it \u003d t.getScope().getVars(); it.hasNext(); ) {\n        Var v \u003d it.next();\n        checkVar(t, v, referenceMap.get(v).references);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/VariableReferenceCheck.java",
      "functionStartLine": 79,
      "functionName": "afterExitScope",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}