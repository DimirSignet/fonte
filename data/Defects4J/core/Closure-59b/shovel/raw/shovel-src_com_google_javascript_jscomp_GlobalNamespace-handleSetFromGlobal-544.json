{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GlobalNamespace.java",
  "functionName": "handleSetFromGlobal",
  "functionId": "$handleSetFromGlobal___t-NodeTraversal__n-Node__parent-Node__name-String__isPropAssign-boolean__type-Name.Type",
  "sourceFilePath": "src/com/google/javascript/jscomp/GlobalNamespace.java",
  "functionAnnotation": "",
  "functionDoc": "Updates our respresentation of the global namespace to reflect an\nassignment to a global name in global scope.\n\n@param t The traversal\n@param n The node currently being visited\n@param parent @code n}\u0027s parent\n@param name The global name (e.g. \"a\" or \"a.b.c.d\")\n@param isPropAssign Whether this set corresponds to a property\n    assignment of the form \u003ccode\u003ea.b.c \u003d ...;\u003c/code\u003e\n@param type The type of the value that the name is being assigned\n",
  "functionStartLine": 544,
  "functionEndLine": 565,
  "numCommitsSeen": 27,
  "timeTaken": 1771,
  "changeHistory": [
    "15715d80e789a07ff9600cb14c2d3afa3b951214",
    "d6f92e5de267c39d29182cfa89b2f01b7710b607",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "15715d80e789a07ff9600cb14c2d3afa3b951214": "Ybodychange",
    "d6f92e5de267c39d29182cfa89b2f01b7710b607": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "15715d80e789a07ff9600cb14c2d3afa3b951214": {
      "type": "Ybodychange",
      "commitMessage": "\nMake GlobalNamespace references implement StaticReference\n\nR\u003dacleung\nDELTA\u003d37  (24 added, 1 deleted, 12 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2365\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1194 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/20/11, 9:13 AM",
      "commitName": "15715d80e789a07ff9600cb14c2d3afa3b951214",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "6/15/11, 4:36 PM",
      "commitNameOld": "b3fd5d67f9a6d3b6532b9c225fee3b9e100ba142",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.69,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n    if (maybeHandlePrototypePrefix(t, n, parent, name))\n        return;\n    Name nameObj \u003d getOrCreateName(name);\n    nameObj.type \u003d type;\n    Ref set \u003d new Ref(t, n, nameObj, Ref.Type.SET_FROM_GLOBAL, currentPreOrderIndex++);\n    nameObj.addRef(set);\n    if (isNestedAssign(parent)) {\n        Ref get \u003d new Ref(t, n, nameObj, Ref.Type.ALIASING_GET, currentPreOrderIndex++);\n        nameObj.addRef(get);\n        Ref.markTwins(set, get);\n    } else if (isConstructorOrEnumDeclaration(n, parent)) {\n        nameObj.setIsClassOrEnum();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 494,
      "functionName": "handleSetFromGlobal",
      "functionAnnotation": "",
      "functionDoc": "Updates our respresentation of the global namespace to reflect an\nassignment to a global name in global scope.\n\n@param t The traversal\n@param n The node currently being visited\n@param parent @code n}\u0027s parent\n@param name The global name (e.g. \"a\" or \"a.b.c.d\")\n@param isPropAssign Whether this set corresponds to a property\n    assignment of the form \u003ccode\u003ea.b.c \u003d ...;\u003c/code\u003e\n@param type The type of the value that the name is being assigned\n",
      "diff": "@@ -1,15 +1,15 @@\n void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n     if (maybeHandlePrototypePrefix(t, n, parent, name))\n         return;\n     Name nameObj \u003d getOrCreateName(name);\n     nameObj.type \u003d type;\n-    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL, currentPreOrderIndex++);\n+    Ref set \u003d new Ref(t, n, nameObj, Ref.Type.SET_FROM_GLOBAL, currentPreOrderIndex++);\n     nameObj.addRef(set);\n     if (isNestedAssign(parent)) {\n-        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET, currentPreOrderIndex++);\n+        Ref get \u003d new Ref(t, n, nameObj, Ref.Type.ALIASING_GET, currentPreOrderIndex++);\n         nameObj.addRef(get);\n         Ref.markTwins(set, get);\n     } else if (isConstructorOrEnumDeclaration(n, parent)) {\n         nameObj.setIsClassOrEnum();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6f92e5de267c39d29182cfa89b2f01b7710b607": {
      "type": "Ybodychange",
      "commitMessage": "\nMake sure that properties are not defined on objects before\nthey\u0027re defined\nFixes issue 312.\n\nR\u003dacleung\nDELTA\u003d97  (72 added, 5 deleted, 20 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1676\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1045 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/28/11, 4:29 PM",
      "commitName": "d6f92e5de267c39d29182cfa89b2f01b7710b607",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "4/25/11, 9:07 AM",
      "commitNameOld": "8be3896c7639f91d83ac220531cc5cbdc5a029d4",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n    if (maybeHandlePrototypePrefix(t, n, parent, name))\n        return;\n    Name nameObj \u003d getOrCreateName(name);\n    nameObj.type \u003d type;\n    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL, currentPreOrderIndex++);\n    nameObj.addRef(set);\n    if (isNestedAssign(parent)) {\n        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET, currentPreOrderIndex++);\n        nameObj.addRef(get);\n        Ref.markTwins(set, get);\n    } else if (isConstructorOrEnumDeclaration(n, parent)) {\n        nameObj.setIsClassOrEnum();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 467,
      "functionName": "handleSetFromGlobal",
      "functionAnnotation": "",
      "functionDoc": "Updates our respresentation of the global namespace to reflect an\nassignment to a global name in global scope.\n\n@param t The traversal\n@param n The node currently being visited\n@param parent @code n}\u0027s parent\n@param name The global name (e.g. \"a\" or \"a.b.c.d\")\n@param isPropAssign Whether this set corresponds to a property\n    assignment of the form \u003ccode\u003ea.b.c \u003d ...;\u003c/code\u003e\n@param type The type of the value that the name is being assigned\n",
      "diff": "@@ -1,15 +1,15 @@\n void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n     if (maybeHandlePrototypePrefix(t, n, parent, name))\n         return;\n     Name nameObj \u003d getOrCreateName(name);\n     nameObj.type \u003d type;\n-    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL);\n+    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL, currentPreOrderIndex++);\n     nameObj.addRef(set);\n     if (isNestedAssign(parent)) {\n-        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET);\n+        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET, currentPreOrderIndex++);\n         nameObj.addRef(get);\n         Ref.markTwins(set, get);\n     } else if (isConstructorOrEnumDeclaration(n, parent)) {\n         nameObj.setIsClassOrEnum();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n+    if (maybeHandlePrototypePrefix(t, n, parent, name))\n+        return;\n+    Name nameObj \u003d getOrCreateName(name);\n+    nameObj.type \u003d type;\n+    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL);\n+    nameObj.addRef(set);\n+    if (isNestedAssign(parent)) {\n+        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET);\n+        nameObj.addRef(get);\n+        Ref.markTwins(set, get);\n+    } else if (isConstructorOrEnumDeclaration(n, parent)) {\n+        nameObj.setIsClassOrEnum();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void handleSetFromGlobal(NodeTraversal t, Node n, Node parent, String name, boolean isPropAssign, Name.Type type) {\n    if (maybeHandlePrototypePrefix(t, n, parent, name))\n        return;\n    Name nameObj \u003d getOrCreateName(name);\n    nameObj.type \u003d type;\n    Ref set \u003d new Ref(t, n, Ref.Type.SET_FROM_GLOBAL);\n    nameObj.addRef(set);\n    if (isNestedAssign(parent)) {\n        Ref get \u003d new Ref(t, n, Ref.Type.ALIASING_GET);\n        nameObj.addRef(get);\n        Ref.markTwins(set, get);\n    } else if (isConstructorOrEnumDeclaration(n, parent)) {\n        nameObj.setIsClassOrEnum();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/GlobalNamespace.java",
      "functionStartLine": 446,
      "functionName": "handleSetFromGlobal",
      "functionAnnotation": "",
      "functionDoc": "Updates our respresentation of the global namespace to reflect an\nassignment to a global name in global scope.\n\n@param t The traversal\n@param n The node currently being visited\n@param parent @code n}\u0027s parent\n@param name The global name (e.g. \"a\" or \"a.b.c.d\")\n@param isPropAssign Whether this set corresponds to a property\n    assignment of the form \u003ccode\u003ea.b.c \u003d ...;\u003c/code\u003e\n@param type The type of the value that the name is being assigned\n"
    }
  }
}