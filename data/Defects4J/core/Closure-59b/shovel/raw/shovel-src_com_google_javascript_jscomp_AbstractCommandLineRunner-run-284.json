{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCommandLineRunner.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
  "functionAnnotation": "",
  "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
  "functionStartLine": 284,
  "functionEndLine": 322,
  "numCommitsSeen": 68,
  "timeTaken": 3629,
  "changeHistory": [
    "d6ac4fe53569b1415f66db221d7511c74f4a965b",
    "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef",
    "468118ef76ffbfc993869a07672f4f86665ae145",
    "e152ec001d2c6a9bbd6e0d9443552371d11e461f",
    "61b5204064333144810c184d38b4dc78f947bd62",
    "e859f6f557d0ac39f3bf45949691b2a0e150a2e4",
    "69b2d38e6c621ef6557eabe4948f69f78bd7f363",
    "c080c668a4ccd9eb151cbb4f90980ddbbfbaba44",
    "848ace840362a1f5558bec065cb40548ff66587a",
    "915752b8e4ffd312eea298fb749dddd0edc0db2e",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "d6ac4fe53569b1415f66db221d7511c74f4a965b": "Ybodychange",
    "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef": "Ymultichange(Ybodychange,Ydocchange)",
    "468118ef76ffbfc993869a07672f4f86665ae145": "Ymultichange(Ybodychange,Ydocchange)",
    "e152ec001d2c6a9bbd6e0d9443552371d11e461f": "Ybodychange",
    "61b5204064333144810c184d38b4dc78f947bd62": "Ybodychange",
    "e859f6f557d0ac39f3bf45949691b2a0e150a2e4": "Ymultichange(Ybodychange,Ydocchange)",
    "69b2d38e6c621ef6557eabe4948f69f78bd7f363": "Ymultichange(Ybodychange,Ydocchange)",
    "c080c668a4ccd9eb151cbb4f90980ddbbfbaba44": "Ybodychange",
    "848ace840362a1f5558bec065cb40548ff66587a": "Ymultichange(Yfilerename,Ybodychange)",
    "915752b8e4ffd312eea298fb749dddd0edc0db2e": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6ac4fe53569b1415f66db221d7511c74f4a965b": {
      "type": "Ybodychange",
      "commitMessage": "\nClean up stream-handing a bit\nRemove compute_phase_ordering flag\nFixes issue 412\n\nR\u003djohnlenz\nDELTA\u003d43  (16 added, 7 deleted, 20 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1315\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@989 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/11/11, 10:28 AM",
      "commitName": "d6ac4fe53569b1415f66db221d7511c74f4a965b",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "4/6/11, 11:16 AM",
      "commitNameOld": "fcccf543e85a214f0948d1ac5cab3fa05363e845",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.97,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    try {\n        if (jsOutput instanceof Closeable) {\n            ((Closeable) jsOutput).close();\n        }\n    } catch (IOException e) {\n        throw Throwables.propagate(e);\n    }\n    if (testMode) {\n        exitCodeReceiverForTesting.apply(result);\n    } else {\n        System.exit(result);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
      "functionStartLine": 268,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
      "diff": "@@ -1,29 +1,36 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n     } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n     if (config.computePhaseOrdering) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n+    try {\n+        if (jsOutput instanceof Closeable) {\n+            ((Closeable) jsOutput).close();\n+        }\n+    } catch (IOException e) {\n+        throw Throwables.propagate(e);\n+    }\n     if (testMode) {\n         exitCodeReceiverForTesting.apply(result);\n     } else {\n         System.exit(result);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nAutomated g4 rollback. breaks things.\n\nR\u003dacleung\nDELTA\u003d91  (3 added, 77 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1232147\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@564 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/18/10, 4:43 PM",
      "commitName": "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nAutomated g4 rollback. breaks things.\n\nR\u003dacleung\nDELTA\u003d91  (3 added, 77 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1232147\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@564 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/18/10, 4:43 PM",
          "commitName": "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 6.79,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    if (testMode) {\n        exitCodeReceiverForTesting.apply(result);\n    } else {\n        System.exit(result);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 243,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,19 +1,29 @@\n public final void run() {\n-    int exitCode \u003d 0;\n+    int result \u003d 0;\n     int runs \u003d 1;\n-    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n-        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n+        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n-            exitCode \u003d doRun();\n+            result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n+        System.err.println(e.getMessage());\n+        result \u003d -1;\n     } catch (Throwable t) {\n-        error \u003d t;\n+        t.printStackTrace();\n+        result \u003d -2;\n     }\n-    exit(runTimeStats, error, exitCode);\n+    if (config.computePhaseOrdering) {\n+        runTimeStats.outputBestPhaseOrdering();\n+    }\n+    if (testMode) {\n+        exitCodeReceiverForTesting.apply(result);\n+    } else {\n+        System.exit(result);\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAutomated g4 rollback. breaks things.\n\nR\u003dacleung\nDELTA\u003d91  (3 added, 77 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1232147\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@564 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/18/10, 4:43 PM",
          "commitName": "e94b5cc0f19b45dbd6fb65ea365f67d038e815ef",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 6.79,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    if (testMode) {\n        exitCodeReceiverForTesting.apply(result);\n    } else {\n        System.exit(result);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 243,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,19 +1,29 @@\n public final void run() {\n-    int exitCode \u003d 0;\n+    int result \u003d 0;\n     int runs \u003d 1;\n-    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n-        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n+        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n-            exitCode \u003d doRun();\n+            result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n+        System.err.println(e.getMessage());\n+        result \u003d -1;\n     } catch (Throwable t) {\n-        error \u003d t;\n+        t.printStackTrace();\n+        result \u003d -2;\n     }\n-    exit(runTimeStats, error, exitCode);\n+    if (config.computePhaseOrdering) {\n+        runTimeStats.outputBestPhaseOrdering();\n+    }\n+    if (testMode) {\n+        exitCodeReceiverForTesting.apply(result);\n+    } else {\n+        System.exit(result);\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
            "newValue": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n"
          }
        }
      ]
    },
    "468118ef76ffbfc993869a07672f4f86665ae145": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nMake it easier to add exit logging to AbstractCommandLineRunner subclasses\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1141101\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@532 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/5/10, 1:32 PM",
      "commitName": "468118ef76ffbfc993869a07672f4f86665ae145",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nMake it easier to add exit logging to AbstractCommandLineRunner subclasses\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1141101\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@532 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/5/10, 1:32 PM",
          "commitName": "468118ef76ffbfc993869a07672f4f86665ae145",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "10/27/10, 12:28 PM",
          "commitNameOld": "08fc2551ca3c811a02407d593b6ae39d2439a88c",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 9.04,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int exitCode \u003d 0;\n    int runs \u003d 1;\n    Throwable error \u003d null;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            exitCode \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (Throwable t) {\n        error \u003d t;\n    }\n    exit(runTimeStats, error, exitCode);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 243,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
          "diff": "@@ -1,29 +1,19 @@\n public final void run() {\n-    int result \u003d 0;\n+    int exitCode \u003d 0;\n     int runs \u003d 1;\n+    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n-        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n+        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n-            result \u003d doRun();\n+            exitCode \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n-        System.err.println(e.getMessage());\n-        result \u003d -1;\n     } catch (Throwable t) {\n-        t.printStackTrace();\n-        result \u003d -2;\n+        error \u003d t;\n     }\n-    if (config.computePhaseOrdering) {\n-        runTimeStats.outputBestPhaseOrdering();\n-    }\n-    if (testMode) {\n-        exitCodeReceiverForTesting.apply(result);\n-    } else {\n-        System.exit(result);\n-    }\n+    exit(runTimeStats, error, exitCode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nMake it easier to add exit logging to AbstractCommandLineRunner subclasses\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1141101\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@532 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/5/10, 1:32 PM",
          "commitName": "468118ef76ffbfc993869a07672f4f86665ae145",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "10/27/10, 12:28 PM",
          "commitNameOld": "08fc2551ca3c811a02407d593b6ae39d2439a88c",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 9.04,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int exitCode \u003d 0;\n    int runs \u003d 1;\n    Throwable error \u003d null;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            exitCode \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (Throwable t) {\n        error \u003d t;\n    }\n    exit(runTimeStats, error, exitCode);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 243,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
          "diff": "@@ -1,29 +1,19 @@\n public final void run() {\n-    int result \u003d 0;\n+    int exitCode \u003d 0;\n     int runs \u003d 1;\n+    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n-        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n+        for (int i \u003d 0; i \u003c runs \u0026\u0026 exitCode \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n-            result \u003d doRun();\n+            exitCode \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n-        System.err.println(e.getMessage());\n-        result \u003d -1;\n     } catch (Throwable t) {\n-        t.printStackTrace();\n-        result \u003d -2;\n+        error \u003d t;\n     }\n-    if (config.computePhaseOrdering) {\n-        runTimeStats.outputBestPhaseOrdering();\n-    }\n-    if (testMode) {\n-        exitCodeReceiverForTesting.apply(result);\n-    } else {\n-        System.exit(result);\n-    }\n+    exit(runTimeStats, error, exitCode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
            "newValue": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n"
          }
        }
      ]
    },
    "e152ec001d2c6a9bbd6e0d9443552371d11e461f": {
      "type": "Ybodychange",
      "commitMessage": "\nMake guava not google_common\n\nR\u003dacleung\nDELTA\u003d87  (34 added, 19 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d196209\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@392 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/27/10, 3:52 PM",
      "commitName": "e152ec001d2c6a9bbd6e0d9443552371d11e461f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/25/10, 2:00 PM",
      "commitNameOld": "64857ce3eaa6d9ab630a509ec16cb2bc6360633b",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    if (testMode) {\n        exitCodeReceiverForTesting.apply(result);\n    } else {\n        System.exit(result);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
      "functionStartLine": 237,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
      "diff": "@@ -1,29 +1,29 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n     } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n     if (config.computePhaseOrdering) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n     if (testMode) {\n-        exitCodeReceiverForTesting.accept(result);\n+        exitCodeReceiverForTesting.apply(result);\n     } else {\n         System.exit(result);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "61b5204064333144810c184d38b4dc78f947bd62": {
      "type": "Ybodychange",
      "commitMessage": "\nCreate a much better integration test for CommandLineRunner.\n\nR\u003dacleung\nDELTA\u003d188  (118 added, 33 deleted, 37 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d181025\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@375 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/20/10, 4:46 PM",
      "commitName": "61b5204064333144810c184d38b4dc78f947bd62",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/19/10, 6:17 PM",
      "commitNameOld": "e859f6f557d0ac39f3bf45949691b2a0e150a2e4",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    if (testMode) {\n        exitCodeReceiverForTesting.accept(result);\n    } else {\n        System.exit(result);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
      "functionStartLine": 237,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
      "diff": "@@ -1,25 +1,29 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n     } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n     if (config.computePhaseOrdering) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n-    System.exit(result);\n+    if (testMode) {\n+        exitCodeReceiverForTesting.accept(result);\n+    } else {\n+        System.exit(result);\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e859f6f557d0ac39f3bf45949691b2a0e150a2e4": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks command-line result status\n\n*** Original change description ***\n\nWire JSCompiler up to logging.\n\nR\u003dnicksantos\nDELTA\u003d88  (3 added, 80 deleted, 5 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d181005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@373 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/19/10, 6:17 PM",
      "commitName": "e859f6f557d0ac39f3bf45949691b2a0e150a2e4",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks command-line result status\n\n*** Original change description ***\n\nWire JSCompiler up to logging.\n\nR\u003dnicksantos\nDELTA\u003d88  (3 added, 80 deleted, 5 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d181005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@373 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/19/10, 6:17 PM",
          "commitName": "e859f6f557d0ac39f3bf45949691b2a0e150a2e4",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "8/12/10, 6:27 PM",
          "commitNameOld": "1004aa6826a19fcb9e6a33b029b492a100fa081b",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 6.99,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 196,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,19 +1,25 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n-    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n+        System.err.println(e.getMessage());\n+        result \u003d -1;\n     } catch (Throwable t) {\n-        error \u003d t;\n+        t.printStackTrace();\n+        result \u003d -2;\n     }\n-    exit(runTimeStats, error);\n+    if (config.computePhaseOrdering) {\n+        runTimeStats.outputBestPhaseOrdering();\n+    }\n+    System.exit(result);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks command-line result status\n\n*** Original change description ***\n\nWire JSCompiler up to logging.\n\nR\u003dnicksantos\nDELTA\u003d88  (3 added, 80 deleted, 5 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d181005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@373 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/19/10, 6:17 PM",
          "commitName": "e859f6f557d0ac39f3bf45949691b2a0e150a2e4",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "8/12/10, 6:27 PM",
          "commitNameOld": "1004aa6826a19fcb9e6a33b029b492a100fa081b",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 6.99,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 196,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,19 +1,25 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n-    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n+        System.err.println(e.getMessage());\n+        result \u003d -1;\n     } catch (Throwable t) {\n-        error \u003d t;\n+        t.printStackTrace();\n+        result \u003d -2;\n     }\n-    exit(runTimeStats, error);\n+    if (config.computePhaseOrdering) {\n+        runTimeStats.outputBestPhaseOrdering();\n+    }\n+    System.exit(result);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
            "newValue": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n"
          }
        }
      ]
    },
    "69b2d38e6c621ef6557eabe4948f69f78bd7f363": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nlogging\n\nR\u003dacleung,johnlenz\nDELTA\u003d85  (77 added, 0 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90003\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@325 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/10, 12:46 PM",
      "commitName": "69b2d38e6c621ef6557eabe4948f69f78bd7f363",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nlogging\n\nR\u003dacleung,johnlenz\nDELTA\u003d85  (77 added, 0 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90003\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@325 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/4/10, 12:46 PM",
          "commitName": "69b2d38e6c621ef6557eabe4948f69f78bd7f363",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "7/19/10, 3:20 PM",
          "commitNameOld": "585c473c5d43a895b217d14408412b746469568b",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 15.89,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    Throwable error \u003d null;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (Throwable t) {\n        error \u003d t;\n    }\n    exit(runTimeStats, error);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 181,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
          "diff": "@@ -1,25 +1,19 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n+    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n-        System.err.println(e.getMessage());\n-        result \u003d -1;\n     } catch (Throwable t) {\n-        t.printStackTrace();\n-        result \u003d -2;\n+        error \u003d t;\n     }\n-    if (config.computePhaseOrdering) {\n-        runTimeStats.outputBestPhaseOrdering();\n-    }\n-    System.exit(result);\n+    exit(runTimeStats, error);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nlogging\n\nR\u003dacleung,johnlenz\nDELTA\u003d85  (77 added, 0 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90003\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@325 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/4/10, 12:46 PM",
          "commitName": "69b2d38e6c621ef6557eabe4948f69f78bd7f363",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "7/19/10, 3:20 PM",
          "commitNameOld": "585c473c5d43a895b217d14408412b746469568b",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 15.89,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    Throwable error \u003d null;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (Throwable t) {\n        error \u003d t;\n    }\n    exit(runTimeStats, error);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 181,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n",
          "diff": "@@ -1,25 +1,19 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n+    Throwable error \u003d null;\n     if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n-        System.err.println(e.getMessage());\n-        result \u003d -1;\n     } catch (Throwable t) {\n-        t.printStackTrace();\n-        result \u003d -2;\n+        error \u003d t;\n     }\n-    if (config.computePhaseOrdering) {\n-        runTimeStats.outputBestPhaseOrdering();\n-    }\n-    System.exit(result);\n+    exit(runTimeStats, error);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
            "newValue": "Runs the Compiler and calls exit() with the exit status of the\ncompiler. By default, exit() is just System.exit().\n"
          }
        }
      ]
    },
    "c080c668a4ccd9eb151cbb4f90980ddbbfbaba44": {
      "type": "Ybodychange",
      "commitMessage": "rolling back the EventTarget changes for a little bit\n\ndecouple command-line options from command-line parsing. (Nick)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@127 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/4/10, 10:33 AM",
      "commitName": "c080c668a4ccd9eb151cbb4f90980ddbbfbaba44",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/26/10, 6:04 PM",
      "commitNameOld": "848ace840362a1f5558bec065cb40548ff66587a",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 5.69,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (config.computePhaseOrdering) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (config.computePhaseOrdering) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
      "functionStartLine": 174,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
      "diff": "@@ -1,25 +1,25 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n-    if (FLAG_compute_phase_ordering.get()) {\n+    if (config.computePhaseOrdering) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n     } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n-    if (FLAG_compute_phase_ordering.get()) {\n+    if (config.computePhaseOrdering) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n     System.exit(result);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "848ace840362a1f5558bec065cb40548ff66587a": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Rename CompilerRunner -\u003e CommandLineRunner.\nI\u0027ll also do this for JSCompilerRunner, but it will be a much\nbigger change. (Nick)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@119 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/26/10, 6:04 PM",
      "commitName": "848ace840362a1f5558bec065cb40548ff66587a",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Rename CompilerRunner -\u003e CommandLineRunner.\nI\u0027ll also do this for JSCompilerRunner, but it will be a much\nbigger change. (Nick)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@119 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/26/10, 6:04 PM",
          "commitName": "848ace840362a1f5558bec065cb40548ff66587a",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/26/10, 3:45 PM",
          "commitNameOld": "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (FLAG_compute_phase_ordering.get()) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (FLAG_compute_phase_ordering.get()) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 327,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,25 +1,25 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n     if (FLAG_compute_phase_ordering.get()) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCompilerRunner.FlagUsageException e) {\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n     if (FLAG_compute_phase_ordering.get()) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n     System.exit(result);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/jscomp/AbstractCompilerRunner.java",
            "newPath": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename CompilerRunner -\u003e CommandLineRunner.\nI\u0027ll also do this for JSCompilerRunner, but it will be a much\nbigger change. (Nick)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@119 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/26/10, 6:04 PM",
          "commitName": "848ace840362a1f5558bec065cb40548ff66587a",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/26/10, 3:45 PM",
          "commitNameOld": "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (FLAG_compute_phase_ordering.get()) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (FLAG_compute_phase_ordering.get()) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
          "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
          "functionStartLine": 327,
          "functionName": "run",
          "functionAnnotation": "",
          "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
          "diff": "@@ -1,25 +1,25 @@\n public final void run() {\n     int result \u003d 0;\n     int runs \u003d 1;\n     if (FLAG_compute_phase_ordering.get()) {\n         runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n         PhaseOptimizer.randomizeLoops();\n     }\n     try {\n         for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n             runTimeStats.recordStartRun();\n             result \u003d doRun();\n             runTimeStats.recordEndRun();\n         }\n-    } catch (AbstractCompilerRunner.FlagUsageException e) {\n+    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n     if (FLAG_compute_phase_ordering.get()) {\n         runTimeStats.outputBestPhaseOrdering();\n     }\n     System.exit(result);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "915752b8e4ffd312eea298fb749dddd0edc0db2e": {
      "type": "Ybodychange",
      "commitMessage": "Add boatloads of tests.\n\nAdd support for --jscomp_warning\u003dcheckTypes\n\nAdd phase optimization improvements.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@49 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/23/09, 9:33 AM",
      "commitName": "915752b8e4ffd312eea298fb749dddd0edc0db2e",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/17/09, 5:17 PM",
      "commitNameOld": "4191b88449010266e7e3f9b7f27f5a1cfbfa7ce7",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 5.68,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public final void run() {\n    int result \u003d 0;\n    int runs \u003d 1;\n    if (FLAG_compute_phase_ordering.get()) {\n        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n        PhaseOptimizer.randomizeLoops();\n    }\n    try {\n        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n            runTimeStats.recordStartRun();\n            result \u003d doRun();\n            runTimeStats.recordEndRun();\n        }\n    } catch (AbstractCompilerRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    if (FLAG_compute_phase_ordering.get()) {\n        runTimeStats.outputBestPhaseOrdering();\n    }\n    System.exit(result);\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCompilerRunner.java",
      "functionStartLine": 318,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n",
      "diff": "@@ -1,13 +1,25 @@\n public final void run() {\n-    int result;\n+    int result \u003d 0;\n+    int runs \u003d 1;\n+    if (FLAG_compute_phase_ordering.get()) {\n+        runs \u003d NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n+        PhaseOptimizer.randomizeLoops();\n+    }\n     try {\n-        result \u003d doRun();\n+        for (int i \u003d 0; i \u003c runs \u0026\u0026 result \u003d\u003d 0; i++) {\n+            runTimeStats.recordStartRun();\n+            result \u003d doRun();\n+            runTimeStats.recordEndRun();\n+        }\n     } catch (AbstractCompilerRunner.FlagUsageException e) {\n         System.err.println(e.getMessage());\n         result \u003d -1;\n     } catch (Throwable t) {\n         t.printStackTrace();\n         result \u003d -2;\n     }\n+    if (FLAG_compute_phase_ordering.get()) {\n+        runTimeStats.outputBestPhaseOrdering();\n+    }\n     System.exit(result);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+public final void run() {\n+    int result;\n+    try {\n+        result \u003d doRun();\n+    } catch (AbstractCompilerRunner.FlagUsageException e) {\n+        System.err.println(e.getMessage());\n+        result \u003d -1;\n+    } catch (Throwable t) {\n+        t.printStackTrace();\n+        result \u003d -2;\n+    }\n+    System.exit(result);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final void run() {\n    int result;\n    try {\n        result \u003d doRun();\n    } catch (AbstractCompilerRunner.FlagUsageException e) {\n        System.err.println(e.getMessage());\n        result \u003d -1;\n    } catch (Throwable t) {\n        t.printStackTrace();\n        result \u003d -2;\n    }\n    System.exit(result);\n}",
      "path": "src/com/google/javascript/jscomp/AbstractCompilerRunner.java",
      "functionStartLine": 223,
      "functionName": "run",
      "functionAnnotation": "",
      "functionDoc": "Runs the Compiler and calls System.exit() with the exit status of the\ncompiler.\n"
    }
  }
}