{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CheckAccessControls.java",
  "functionName": "checkNameVisibility",
  "functionId": "checkNameVisibility___t-NodeTraversal__name-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CheckAccessControls.java",
  "functionAnnotation": "",
  "functionDoc": "Determines whether the given name is visible in the current context.\n\n@param t The current traversal.\n@param name The name node.\n",
  "functionStartLine": 328,
  "functionEndLine": 348,
  "numCommitsSeen": 14,
  "timeTaken": 671,
  "changeHistory": [
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": {
      "type": "Ybodychange",
      "commitMessage": "Remove circular dependency between error-reporting and the rest\nof the compiler. (Nick)\nR\u003dalan\nDELTA\u003d152  (27 added, 28 deleted, 97 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@159 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/29/10, 7:04 AM",
      "commitName": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/11/10, 9:31 PM",
      "commitNameOld": "7bfdbd9164601af44d17edd51be829fde2cc51aa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 17.36,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkNameVisibility(NodeTraversal t, Node name, Node parent) {\n    Var var \u003d t.getScope().getVar(name.getString());\n    if (var !\u003d null) {\n        JSDocInfo docInfo \u003d var.getJSDocInfo();\n        if (docInfo !\u003d null) {\n            Visibility visibility \u003d docInfo.getVisibility();\n            if (visibility \u003d\u003d Visibility.PRIVATE \u0026\u0026 !t.getInput().getName().equals(docInfo.getSourceName())) {\n                if (docInfo.isConstructor() \u0026\u0026 isValidPrivateConstructorAccess(parent)) {\n                    return;\n                }\n                compiler.report(t.makeError(name, BAD_PRIVATE_GLOBAL_ACCESS, name.getString(), docInfo.getSourceName()));\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CheckAccessControls.java",
      "functionStartLine": 310,
      "functionName": "checkNameVisibility",
      "functionAnnotation": "",
      "functionDoc": "Determines whether the given name is visible in the current context.\n\n@param t The current traversal.\n@param name The name node.\n",
      "diff": "@@ -1,15 +1,15 @@\n private void checkNameVisibility(NodeTraversal t, Node name, Node parent) {\n     Var var \u003d t.getScope().getVar(name.getString());\n     if (var !\u003d null) {\n         JSDocInfo docInfo \u003d var.getJSDocInfo();\n         if (docInfo !\u003d null) {\n             Visibility visibility \u003d docInfo.getVisibility();\n             if (visibility \u003d\u003d Visibility.PRIVATE \u0026\u0026 !t.getInput().getName().equals(docInfo.getSourceName())) {\n                 if (docInfo.isConstructor() \u0026\u0026 isValidPrivateConstructorAccess(parent)) {\n                     return;\n                 }\n-                compiler.report(JSError.make(t, name, BAD_PRIVATE_GLOBAL_ACCESS, name.getString(), docInfo.getSourceName()));\n+                compiler.report(t.makeError(name, BAD_PRIVATE_GLOBAL_ACCESS, name.getString(), docInfo.getSourceName()));\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+private void checkNameVisibility(NodeTraversal t, Node name, Node parent) {\n+    Var var \u003d t.getScope().getVar(name.getString());\n+    if (var !\u003d null) {\n+        JSDocInfo docInfo \u003d var.getJSDocInfo();\n+        if (docInfo !\u003d null) {\n+            Visibility visibility \u003d docInfo.getVisibility();\n+            if (visibility \u003d\u003d Visibility.PRIVATE \u0026\u0026 !t.getInput().getName().equals(docInfo.getSourceName())) {\n+                if (docInfo.isConstructor() \u0026\u0026 isValidPrivateConstructorAccess(parent)) {\n+                    return;\n+                }\n+                compiler.report(JSError.make(t, name, BAD_PRIVATE_GLOBAL_ACCESS, name.getString(), docInfo.getSourceName()));\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void checkNameVisibility(NodeTraversal t, Node name, Node parent) {\n    Var var \u003d t.getScope().getVar(name.getString());\n    if (var !\u003d null) {\n        JSDocInfo docInfo \u003d var.getJSDocInfo();\n        if (docInfo !\u003d null) {\n            Visibility visibility \u003d docInfo.getVisibility();\n            if (visibility \u003d\u003d Visibility.PRIVATE \u0026\u0026 !t.getInput().getName().equals(docInfo.getSourceName())) {\n                if (docInfo.isConstructor() \u0026\u0026 isValidPrivateConstructorAccess(parent)) {\n                    return;\n                }\n                compiler.report(JSError.make(t, name, BAD_PRIVATE_GLOBAL_ACCESS, name.getString(), docInfo.getSourceName()));\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CheckAccessControls.java",
      "functionStartLine": 313,
      "functionName": "checkNameVisibility",
      "functionAnnotation": "",
      "functionDoc": "Determines whether the given name is visible in the current context.\n\n@param t The current traversal.\n@param name The name node.\n"
    }
  }
}