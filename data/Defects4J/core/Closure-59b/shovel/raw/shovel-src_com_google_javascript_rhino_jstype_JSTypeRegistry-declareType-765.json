{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JSTypeRegistry.java",
  "functionName": "declareType",
  "functionId": "declareType___name-String__t-JSType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/JSTypeRegistry.java",
  "functionAnnotation": "",
  "functionDoc": "Records declared global type names. This makes resolution faster\nand more robust in the common case.\n\n@param name The name of the type to be recorded.\n@param t The actual type being associated with the name.\n@return True if this name is not already defined, false otherwise.\n",
  "functionStartLine": 765,
  "functionEndLine": 771,
  "numCommitsSeen": 41,
  "timeTaken": 2840,
  "changeHistory": [
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25": "Ydocchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25": {
      "type": "Ydocchange",
      "commitMessage": "\nHandle circular typedefs in a more robust way.\nThis comes up when we switch to different type-resolution algorithms\nthat resolve the forward-declared type later and ubox it.\nSadly, i don\u0027t have a good test case for this right now.\n\nR\u003djohnlenz\nDELTA\u003d17  (10 added, 1 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d764010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@516 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/27/10, 9:43 AM",
      "commitName": "3faef1d4959a55ebd86a09cd5395afb54ab5ec25",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/22/10, 9:35 AM",
      "commitNameOld": "8eee751ff9f460c4a769d598c65b1cd643dabc7b",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 5.01,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean declareType(String name, JSType t) {\n    if (namesToTypes.containsKey(name)) {\n        return false;\n    }\n    register(t, name);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSTypeRegistry.java",
      "functionStartLine": 721,
      "functionName": "declareType",
      "functionAnnotation": "",
      "functionDoc": "Records declared global type names. This makes resolution faster\nand more robust in the common case.\n\n@param name The name of the type to be recorded.\n@param t The actual type being associated with the name.\n@return True if this name is not already defined, false otherwise.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Records declared type names. Given the limited scopes of JavaScript, all\nnamed types are dumped in a common global scope. We may need to revise this\nassumption in the future.\n\n@param name The name of the type to be recorded.\n@param t The actual type being associated with the name.\n@return True if this name is not already defined, false otherwise.\n",
        "newValue": "Records declared global type names. This makes resolution faster\nand more robust in the common case.\n\n@param name The name of the type to be recorded.\n@param t The actual type being associated with the name.\n@return True if this name is not already defined, false otherwise.\n"
      }
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+public boolean declareType(String name, JSType t) {\n+    if (namesToTypes.containsKey(name)) {\n+        return false;\n+    }\n+    register(t, name);\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean declareType(String name, JSType t) {\n    if (namesToTypes.containsKey(name)) {\n        return false;\n    }\n    register(t, name);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSTypeRegistry.java",
      "functionStartLine": 638,
      "functionName": "declareType",
      "functionAnnotation": "",
      "functionDoc": "Records declared type names. Given the limited scopes of JavaScript, all\nnamed types are dumped in a common global scope. We may need to revise this\nassumption in the future.\n\n@param name The name of the type to be recorded.\n@param t The actual type being associated with the name.\n@return True if this name is not already defined, false otherwise.\n"
    }
  }
}