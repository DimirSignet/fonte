{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionTypeBuilder.java",
  "functionName": "inferReturnType",
  "functionId": "inferReturnType___info-JSDocInfo(annotations-@Nullable)",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Infer the return type from JSDocInfo.\n",
  "functionStartLine": 295,
  "functionEndLine": 307,
  "numCommitsSeen": 33,
  "timeTaken": 1349,
  "changeHistory": [
    "b8fb1c4377809503625087f13c1ade664ce9b7e2",
    "465282f1ca28a208b06c47b55fd292d4631c55da",
    "c764a46abf211d4677fadc33f7d466e5b14fa088",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b8fb1c4377809503625087f13c1ade664ce9b7e2": "Ybodychange",
    "465282f1ca28a208b06c47b55fd292d4631c55da": "Ybodychange",
    "c764a46abf211d4677fadc33f7d466e5b14fa088": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b8fb1c4377809503625087f13c1ade664ce9b7e2": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/29 13:33:11 by nicksantos\n\n\tBe more aggressive about pulling param/return types off the overridden\n\tmethod.\n\n\tR\u003djohnlenz\n\tDELTA\u003d198  (149 added, 21 deleted, 28 changed)\n\nChange on 2010/06/30 05:24:10 by nthomas\n\n\tAdd ontouch{cancel,end,move,start} attribute declarations per the Safari Reference Library:\n\thttp://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/Attributes.html\n\n\tR\u003dacleung\n\tDELTA\u003d28  (28 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@259 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/30/10, 3:28 PM",
      "commitName": "b8fb1c4377809503625087f13c1ade664ce9b7e2",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/22/10, 5:19 PM",
      "commitNameOld": "465282f1ca28a208b06c47b55fd292d4631c55da",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 7.92,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n    if (info !\u003d null \u0026\u0026 info.hasReturnType()) {\n        returnType \u003d info.getReturnType().evaluate(scope, typeRegistry);\n        returnTypeInferred \u003d false;\n    }\n    if (templateTypeName !\u003d null \u0026\u0026 returnType !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n        reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
      "functionStartLine": 215,
      "functionName": "inferReturnType",
      "functionAnnotation": "",
      "functionDoc": "Infer the return type from JSDocInfo.\n",
      "diff": "@@ -1,7 +1,10 @@\n FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n-    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : null;\n+    if (info !\u003d null \u0026\u0026 info.hasReturnType()) {\n+        returnType \u003d info.getReturnType().evaluate(scope, typeRegistry);\n+        returnTypeInferred \u003d false;\n+    }\n     if (templateTypeName !\u003d null \u0026\u0026 returnType !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n         reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "465282f1ca28a208b06c47b55fd292d4631c55da": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n        Inferred return types. \n        Fixes issue 143.\n        I eventually decided that it was wrong for the subtype\u0027s method\n        to affect the supertype\u0027s method, since this will make incremental\n        compilation a lot harder in the long run.\n\n        R\u003dmoedinger\n        DELTA\u003d481  (313 added, 38 deleted, 130 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34007\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@249 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 5:19 PM",
      "commitName": "465282f1ca28a208b06c47b55fd292d4631c55da",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/15/10, 4:45 PM",
      "commitNameOld": "e3bcc1c6e7ce7e9bfc3098cd5bf57774049f5baa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 68.02,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : null;\n    if (templateTypeName !\u003d null \u0026\u0026 returnType !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n        reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
      "functionStartLine": 199,
      "functionName": "inferReturnType",
      "functionAnnotation": "",
      "functionDoc": "Infer the return type from JSDocInfo.\n",
      "diff": "@@ -1,7 +1,7 @@\n FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n-    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n-    if (templateTypeName !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n+    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : null;\n+    if (templateTypeName !\u003d null \u0026\u0026 returnType !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n         reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c764a46abf211d4677fadc33f7d466e5b14fa088": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/13 by john\n\n        Here is a crazy thought, let\u0027s not require the JSTypeRegistry during\n        parsing.\n\n        There are basically two changes here:\n        1) The IRFactory was looking for enums to seed the JSTypeRegistry, so\n        we do that when we setup for type interence.\n        2) The JSDocParser was checking the types of @defines objects, now do\n        that during ProcessDefines.\n\n        R\u003drobert,mark\n        DELTA\u003d207  (82 added, 89 deleted, 36 changed)\n\nChange on 2010/04/14 by nick\n\n        Add a debugging function for JSType hashcodes.\n        i found this useful, and thought others might too.\n\n        R\u003djohn\n        DELTA\u003d69  (69 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dfqsoxx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@183 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 9:15 AM",
      "commitName": "c764a46abf211d4677fadc33f7d466e5b14fa088",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/11/10, 9:31 PM",
      "commitNameOld": "7bfdbd9164601af44d17edd51be829fde2cc51aa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 33.45,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n    if (templateTypeName !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n        reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
      "functionStartLine": 196,
      "functionName": "inferReturnType",
      "functionAnnotation": "",
      "functionDoc": "Infer the return type from JSDocInfo.\n",
      "diff": "@@ -1,7 +1,7 @@\n FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n-    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n+    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope, typeRegistry) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n     if (templateTypeName !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n         reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n     }\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n+    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n+    if (templateTypeName !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n+        reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n+    }\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n    returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ? info.getReturnType().evaluate(scope) : typeRegistry.getNativeType(UNKNOWN_TYPE);\n    if (templateTypeName !\u003d null \u0026\u0026 returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n        reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
      "functionStartLine": 196,
      "functionName": "inferReturnType",
      "functionAnnotation": "",
      "functionDoc": "Infer the return type from JSDocInfo.\n"
    }
  }
}