{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SourceFile.java",
  "functionName": "getLine",
  "functionId": "getLine___lineNumber-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/SourceFile.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the source line for the indicated line number.\n\n@param lineNumber the line number, 1 being the first line of the file.\n@return The line indicated. Does not include the newline at the end\n    of the file. Returns {@code null} if it does not exist,\n    or if there was an IO exception.\n",
  "functionStartLine": 166,
  "functionEndLine": 201,
  "numCommitsSeen": 16,
  "timeTaken": 516,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,24 @@\n+public String getLine(int lineNumber) {\n+    String js \u003d \"\";\n+    try {\n+        js \u003d getCode();\n+    } catch (IOException e) {\n+        return null;\n+    }\n+    int pos \u003d 0;\n+    int startLine \u003d 1;\n+    if (lineNumber \u003e\u003d lastLine) {\n+        pos \u003d lastOffset;\n+        startLine \u003d lastLine;\n+    }\n+    for (int n \u003d startLine; n \u003c lineNumber; n++) {\n+        int nextpos \u003d js.indexOf(\u0027\\n\u0027, pos);\n+        if (nextpos \u003d\u003d -1) {\n+            return null;\n+        }\n+        pos \u003d nextpos + 1;\n+    }\n+    lastOffset \u003d pos;\n+    lastLine \u003d lineNumber;\n+    return (js.indexOf(\u0027\\n\u0027, pos) \u003d\u003d -1) ? null : js.substring(pos, js.indexOf(\u0027\\n\u0027, pos));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String getLine(int lineNumber) {\n    String js \u003d \"\";\n    try {\n        js \u003d getCode();\n    } catch (IOException e) {\n        return null;\n    }\n    int pos \u003d 0;\n    int startLine \u003d 1;\n    if (lineNumber \u003e\u003d lastLine) {\n        pos \u003d lastOffset;\n        startLine \u003d lastLine;\n    }\n    for (int n \u003d startLine; n \u003c lineNumber; n++) {\n        int nextpos \u003d js.indexOf(\u0027\\n\u0027, pos);\n        if (nextpos \u003d\u003d -1) {\n            return null;\n        }\n        pos \u003d nextpos + 1;\n    }\n    lastOffset \u003d pos;\n    lastLine \u003d lineNumber;\n    return (js.indexOf(\u0027\\n\u0027, pos) \u003d\u003d -1) ? null : js.substring(pos, js.indexOf(\u0027\\n\u0027, pos));\n}",
      "path": "src/com/google/javascript/jscomp/SourceFile.java",
      "functionStartLine": 116,
      "functionName": "getLine",
      "functionAnnotation": "",
      "functionDoc": "Gets the source line for the indicated line number.\n\n@param lineNumber the line number, 1 being the first line of the file.\n@return The line indicated. Does not include the newline at the end\n    of the file. Returns {@code null} if it does not exist,\n    or if there was an IO exception.\n"
    }
  }
}