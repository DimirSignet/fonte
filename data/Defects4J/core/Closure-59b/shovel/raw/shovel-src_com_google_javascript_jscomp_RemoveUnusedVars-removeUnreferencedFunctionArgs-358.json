{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RemoveUnusedVars.java",
  "functionName": "removeUnreferencedFunctionArgs",
  "functionId": "removeUnreferencedFunctionArgs___fnScope-Scope",
  "sourceFilePath": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
  "functionAnnotation": "",
  "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
  "functionStartLine": 358,
  "functionEndLine": 388,
  "numCommitsSeen": 49,
  "timeTaken": 2038,
  "changeHistory": [
    "9d52e4fe146533053ad96d3cc29d54d05c869154",
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e",
    "f42e3e4ac6273bf9f25392b34de24672e5d56883",
    "3c3abc459ce1f720fee690dc8398b03701263c38",
    "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
    "747f2504d98e2d37c933ead6e40a0a1a1e36d6af",
    "833cd72a268c1161194038faf0d98ec6b1f203eb",
    "b2c12cd9f4284d58450d1a487e29d6b6a065105e",
    "fbf47bd6fe52121c22d9c1fa6764e6686221df99",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "9d52e4fe146533053ad96d3cc29d54d05c869154": "Yformatchange",
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e": "Ybodychange",
    "f42e3e4ac6273bf9f25392b34de24672e5d56883": "Ymultichange(Ybodychange,Ydocchange)",
    "3c3abc459ce1f720fee690dc8398b03701263c38": "Ymultichange(Ybodychange,Ydocchange)",
    "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca": "Ymultichange(Ybodychange,Ydocchange)",
    "747f2504d98e2d37c933ead6e40a0a1a1e36d6af": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "833cd72a268c1161194038faf0d98ec6b1f203eb": "Ybodychange",
    "b2c12cd9f4284d58450d1a487e29d6b6a065105e": "Ybodychange",
    "fbf47bd6fe52121c22d9c1fa6764e6686221df99": "Ybodychange",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d52e4fe146533053ad96d3cc29d54d05c869154": {
      "type": "Yformatchange",
      "commitMessage": "\nFix a NPE case in RemoveUnusedVars by separating the node changes from the analysis phase\n\nR\u003djohnlenz\nDELTA\u003d61  (29 added, 17 deleted, 15 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d880\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@888 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/15/11, 12:42 PM",
      "commitName": "9d52e4fe146533053ad96d3cc29d54d05c869154",
      "commitAuthor": "agrieve@google.com",
      "commitDateOld": "3/11/11, 7:04 AM",
      "commitNameOld": "cd17f34a2da15b08b169cf06e72a4a209cbd6e0c",
      "commitAuthorOld": "agrieve@google.com",
      "daysBetweenCommits": 4.19,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        return;\n    }\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 348,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
      "diff": "",
      "extendedDetails": {}
    },
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e": {
      "type": "Ybodychange",
      "commitMessage": "\nObject literal setters must have one parameter.\nAlso, fix crash in RemoveUnusedVars in the presence of getters and setters.\n\nR\u003dnicksantos\nDELTA\u003d157  (151 added, 5 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d157\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@643 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/16/10, 12:17 PM",
      "commitName": "81a77a269d5a9cd6b9baf34812b17fd22933b46e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/6/10, 12:43 PM",
      "commitNameOld": "f42e3e4ac6273bf9f25392b34de24672e5d56883",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 9.98,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        return;\n    }\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 313,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
      "diff": "@@ -1,21 +1,24 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n+    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n+        return;\n+    }\n     Node argList \u003d getFunctionArgList(function);\n     boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n     if (!modifyCallers) {\n         Node lastArg;\n         while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n             Var var \u003d fnScope.getVar(lastArg.getString());\n             if (!referenced.contains(var)) {\n                 Preconditions.checkNotNull(var \u003d\u003d null);\n                 argList.removeChild(lastArg);\n                 compiler.reportCodeChange();\n             } else {\n                 break;\n             }\n         }\n     } else {\n         callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f42e3e4ac6273bf9f25392b34de24672e5d56883": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nFixes tests.\n\n*** Original change description ***\n\nAutomated g4 rollback5.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d491  (456 added, 1 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d68\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@597 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/6/10, 12:43 PM",
      "commitName": "f42e3e4ac6273bf9f25392b34de24672e5d56883",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nFixes tests.\n\n*** Original change description ***\n\nAutomated g4 rollback5.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d491  (456 added, 1 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d68\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@597 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 12:43 PM",
          "commitName": "f42e3e4ac6273bf9f25392b34de24672e5d56883",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "12/6/10, 10:59 AM",
          "commitNameOld": "3c3abc459ce1f720fee690dc8398b03701263c38",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 313,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,18 +1,21 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d function.getFirstChild().getNext();\n-    Node lastArg;\n-    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-        Var var \u003d fnScope.getVar(lastArg.getString());\n-        if (!referenced.contains(var)) {\n-            if (var \u003d\u003d null) {\n-                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n+    Node argList \u003d getFunctionArgList(function);\n+    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+        Node lastArg;\n+        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+            Var var \u003d fnScope.getVar(lastArg.getString());\n+            if (!referenced.contains(var)) {\n+                Preconditions.checkNotNull(var \u003d\u003d null);\n+                argList.removeChild(lastArg);\n+                compiler.reportCodeChange();\n+            } else {\n+                break;\n             }\n-            argList.removeChild(lastArg);\n-            compiler.reportCodeChange();\n-        } else {\n-            break;\n         }\n+    } else {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nFixes tests.\n\n*** Original change description ***\n\nAutomated g4 rollback5.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d491  (456 added, 1 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d68\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@597 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 12:43 PM",
          "commitName": "f42e3e4ac6273bf9f25392b34de24672e5d56883",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "12/6/10, 10:59 AM",
          "commitNameOld": "3c3abc459ce1f720fee690dc8398b03701263c38",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 313,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,18 +1,21 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d function.getFirstChild().getNext();\n-    Node lastArg;\n-    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-        Var var \u003d fnScope.getVar(lastArg.getString());\n-        if (!referenced.contains(var)) {\n-            if (var \u003d\u003d null) {\n-                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n+    Node argList \u003d getFunctionArgList(function);\n+    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+        Node lastArg;\n+        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+            Var var \u003d fnScope.getVar(lastArg.getString());\n+            if (!referenced.contains(var)) {\n+                Preconditions.checkNotNull(var \u003d\u003d null);\n+                argList.removeChild(lastArg);\n+                compiler.reportCodeChange();\n+            } else {\n+                break;\n             }\n-            argList.removeChild(lastArg);\n-            compiler.reportCodeChange();\n-        } else {\n-            break;\n         }\n+    } else {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
            "newValue": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n"
          }
        }
      ]
    },
    "3c3abc459ce1f720fee690dc8398b03701263c38": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d66\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@595 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/6/10, 10:59 AM",
      "commitName": "3c3abc459ce1f720fee690dc8398b03701263c38",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d66\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@595 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 10:59 AM",
          "commitName": "3c3abc459ce1f720fee690dc8398b03701263c38",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "12/6/10, 9:51 AM",
          "commitNameOld": "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 289,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,21 +1,18 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d getFunctionArgList(function);\n-    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n-    if (!modifyCallers) {\n-        Node lastArg;\n-        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-            Var var \u003d fnScope.getVar(lastArg.getString());\n-            if (!referenced.contains(var)) {\n-                Preconditions.checkNotNull(var \u003d\u003d null);\n-                argList.removeChild(lastArg);\n-                compiler.reportCodeChange();\n-            } else {\n-                break;\n+    Node argList \u003d function.getFirstChild().getNext();\n+    Node lastArg;\n+    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+        Var var \u003d fnScope.getVar(lastArg.getString());\n+        if (!referenced.contains(var)) {\n+            if (var \u003d\u003d null) {\n+                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n+            argList.removeChild(lastArg);\n+            compiler.reportCodeChange();\n+        } else {\n+            break;\n         }\n-    } else {\n-        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\n\u003center reason for rollback\u003e\n\n*** Original change description ***\n\nAllow the removal of unused parameters from call sites.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d66\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@595 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 10:59 AM",
          "commitName": "3c3abc459ce1f720fee690dc8398b03701263c38",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "12/6/10, 9:51 AM",
          "commitNameOld": "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 289,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,21 +1,18 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d getFunctionArgList(function);\n-    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n-    if (!modifyCallers) {\n-        Node lastArg;\n-        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-            Var var \u003d fnScope.getVar(lastArg.getString());\n-            if (!referenced.contains(var)) {\n-                Preconditions.checkNotNull(var \u003d\u003d null);\n-                argList.removeChild(lastArg);\n-                compiler.reportCodeChange();\n-            } else {\n-                break;\n+    Node argList \u003d function.getFirstChild().getNext();\n+    Node lastArg;\n+    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+        Var var \u003d fnScope.getVar(lastArg.getString());\n+        if (!referenced.contains(var)) {\n+            if (var \u003d\u003d null) {\n+                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n+            argList.removeChild(lastArg);\n+            compiler.reportCodeChange();\n+        } else {\n+            break;\n         }\n-    } else {\n-        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
            "newValue": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n"
          }
        }
      ]
    },
    "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d455  (425 added, 1 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d59\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@593 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/6/10, 9:51 AM",
      "commitName": "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d455  (425 added, 1 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d59\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@593 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 9:51 AM",
          "commitName": "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/12/10, 1:38 PM",
          "commitNameOld": "25904fa3b61c1d6ef494dd7839eae1d1f49ff38d",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 23.84,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 313,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,18 +1,21 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d function.getFirstChild().getNext();\n-    Node lastArg;\n-    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-        Var var \u003d fnScope.getVar(lastArg.getString());\n-        if (!referenced.contains(var)) {\n-            if (var \u003d\u003d null) {\n-                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n+    Node argList \u003d getFunctionArgList(function);\n+    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+        Node lastArg;\n+        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+            Var var \u003d fnScope.getVar(lastArg.getString());\n+            if (!referenced.contains(var)) {\n+                Preconditions.checkNotNull(var \u003d\u003d null);\n+                argList.removeChild(lastArg);\n+                compiler.reportCodeChange();\n+            } else {\n+                break;\n             }\n-            argList.removeChild(lastArg);\n-            compiler.reportCodeChange();\n-        } else {\n-            break;\n         }\n+    } else {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nAllow the removal of unused parameters from call sites.\n\nR\u003dacleung\nDELTA\u003d455  (425 added, 1 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d59\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@593 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/6/10, 9:51 AM",
          "commitName": "2f29d7ee3aaf3fe2372eb49104d4eb9ab93531ca",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/12/10, 1:38 PM",
          "commitNameOld": "25904fa3b61c1d6ef494dd7839eae1d1f49ff38d",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 23.84,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d getFunctionArgList(function);\n    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n    if (!modifyCallers) {\n        Node lastArg;\n        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n            Var var \u003d fnScope.getVar(lastArg.getString());\n            if (!referenced.contains(var)) {\n                Preconditions.checkNotNull(var \u003d\u003d null);\n                argList.removeChild(lastArg);\n                compiler.reportCodeChange();\n            } else {\n                break;\n            }\n        }\n    } else {\n        callSiteOptimizer.optimize(fnScope, referenced);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 313,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,18 +1,21 @@\n private void removeUnreferencedFunctionArgs(Scope fnScope) {\n     Node function \u003d fnScope.getRootNode();\n     Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n-    Node argList \u003d function.getFirstChild().getNext();\n-    Node lastArg;\n-    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-        Var var \u003d fnScope.getVar(lastArg.getString());\n-        if (!referenced.contains(var)) {\n-            if (var \u003d\u003d null) {\n-                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n+    Node argList \u003d getFunctionArgList(function);\n+    boolean modifyCallers \u003d modifyCallSites \u0026\u0026 callSiteOptimizer.canModifyCallers(function);\n+    if (!modifyCallers) {\n+        Node lastArg;\n+        while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+            Var var \u003d fnScope.getVar(lastArg.getString());\n+            if (!referenced.contains(var)) {\n+                Preconditions.checkNotNull(var \u003d\u003d null);\n+                argList.removeChild(lastArg);\n+                compiler.reportCodeChange();\n+            } else {\n+                break;\n             }\n-            argList.removeChild(lastArg);\n-            compiler.reportCodeChange();\n-        } else {\n-            break;\n         }\n+    } else {\n+        callSiteOptimizer.optimize(fnScope, referenced);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
            "newValue": "Removes unreferenced arguments from a function declaration and when\npossible the function\u0027s callSites.\n\n@param fnScope The scope inside the function\n"
          }
        }
      ]
    },
    "747f2504d98e2d37c933ead6e40a0a1a1e36d6af": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "\nChange on 2010/08/04 13:06:31 by nicksantos\n\n\tA new var-collection mechanism for RemoveUnusedVars.  In the\n\tnew mechanism, we only traverse a subtree for references if it\n\tmight have side-effects, or if its return value is used.  If\n\tits return value is stored in a variable, then we store a\n\tcontinuation, and execute the continuation iff that variable\n\tis referenced.\n\n\tThis is a more general formulation of RemoveUnusedVars\u0027s current\n\tstrategy (\"traverse a function iff it\u0027s referenced\").\n\n\tR\u003dacleung\n\tDELTA\u003d560  (326 added, 63 deleted, 171 changed)\n\nChange on 2010/08/04 13:09:34 by rjfioravanti\n\n\tCreating externs for CSSMatrix and WebKitCSSMatrix.\n\n\tBased on documentation from the following locations:\n\thttp://www.w3.org/TR/css3-3d-transforms/#cssmatrix-interface\n\thttp://developer.apple.com/safari/library/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html#//apple_ref/javascript/instm/WebKitCSSMatrix/setMatrixValue\n\n\tR\u003dnicksantos\n\tDELTA\u003d193  (193 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@335 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/10, 5:48 PM",
      "commitName": "747f2504d98e2d37c933ead6e40a0a1a1e36d6af",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/08/04 13:06:31 by nicksantos\n\n\tA new var-collection mechanism for RemoveUnusedVars.  In the\n\tnew mechanism, we only traverse a subtree for references if it\n\tmight have side-effects, or if its return value is used.  If\n\tits return value is stored in a variable, then we store a\n\tcontinuation, and execute the continuation iff that variable\n\tis referenced.\n\n\tThis is a more general formulation of RemoveUnusedVars\u0027s current\n\tstrategy (\"traverse a function iff it\u0027s referenced\").\n\n\tR\u003dacleung\n\tDELTA\u003d560  (326 added, 63 deleted, 171 changed)\n\nChange on 2010/08/04 13:09:34 by rjfioravanti\n\n\tCreating externs for CSSMatrix and WebKitCSSMatrix.\n\n\tBased on documentation from the following locations:\n\thttp://www.w3.org/TR/css3-3d-transforms/#cssmatrix-interface\n\thttp://developer.apple.com/safari/library/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html#//apple_ref/javascript/instm/WebKitCSSMatrix/setMatrixValue\n\n\tR\u003dnicksantos\n\tDELTA\u003d193  (193 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@335 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/4/10, 5:48 PM",
          "commitName": "747f2504d98e2d37c933ead6e40a0a1a1e36d6af",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "7/23/10, 2:49 PM",
          "commitNameOld": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 12.12,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 294,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,17 +1,18 @@\n-private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n+private void removeUnreferencedFunctionArgs(Scope fnScope) {\n+    Node function \u003d fnScope.getRootNode();\n+    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n             if (var \u003d\u003d null) {\n                 throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n             argList.removeChild(lastArg);\n-            fnScope.undeclare(var);\n-            finishRemove(var);\n+            compiler.reportCodeChange();\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[function-Node, fnScope-Scope]",
            "newValue": "[fnScope-Scope]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/08/04 13:06:31 by nicksantos\n\n\tA new var-collection mechanism for RemoveUnusedVars.  In the\n\tnew mechanism, we only traverse a subtree for references if it\n\tmight have side-effects, or if its return value is used.  If\n\tits return value is stored in a variable, then we store a\n\tcontinuation, and execute the continuation iff that variable\n\tis referenced.\n\n\tThis is a more general formulation of RemoveUnusedVars\u0027s current\n\tstrategy (\"traverse a function iff it\u0027s referenced\").\n\n\tR\u003dacleung\n\tDELTA\u003d560  (326 added, 63 deleted, 171 changed)\n\nChange on 2010/08/04 13:09:34 by rjfioravanti\n\n\tCreating externs for CSSMatrix and WebKitCSSMatrix.\n\n\tBased on documentation from the following locations:\n\thttp://www.w3.org/TR/css3-3d-transforms/#cssmatrix-interface\n\thttp://developer.apple.com/safari/library/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html#//apple_ref/javascript/instm/WebKitCSSMatrix/setMatrixValue\n\n\tR\u003dnicksantos\n\tDELTA\u003d193  (193 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@335 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/4/10, 5:48 PM",
          "commitName": "747f2504d98e2d37c933ead6e40a0a1a1e36d6af",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "7/23/10, 2:49 PM",
          "commitNameOld": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 12.12,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 294,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,17 +1,18 @@\n-private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n+private void removeUnreferencedFunctionArgs(Scope fnScope) {\n+    Node function \u003d fnScope.getRootNode();\n+    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n             if (var \u003d\u003d null) {\n                 throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n             argList.removeChild(lastArg);\n-            fnScope.undeclare(var);\n-            finishRemove(var);\n+            compiler.reportCodeChange();\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/08/04 13:06:31 by nicksantos\n\n\tA new var-collection mechanism for RemoveUnusedVars.  In the\n\tnew mechanism, we only traverse a subtree for references if it\n\tmight have side-effects, or if its return value is used.  If\n\tits return value is stored in a variable, then we store a\n\tcontinuation, and execute the continuation iff that variable\n\tis referenced.\n\n\tThis is a more general formulation of RemoveUnusedVars\u0027s current\n\tstrategy (\"traverse a function iff it\u0027s referenced\").\n\n\tR\u003dacleung\n\tDELTA\u003d560  (326 added, 63 deleted, 171 changed)\n\nChange on 2010/08/04 13:09:34 by rjfioravanti\n\n\tCreating externs for CSSMatrix and WebKitCSSMatrix.\n\n\tBased on documentation from the following locations:\n\thttp://www.w3.org/TR/css3-3d-transforms/#cssmatrix-interface\n\thttp://developer.apple.com/safari/library/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html#//apple_ref/javascript/instm/WebKitCSSMatrix/setMatrixValue\n\n\tR\u003dnicksantos\n\tDELTA\u003d193  (193 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@335 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/4/10, 5:48 PM",
          "commitName": "747f2504d98e2d37c933ead6e40a0a1a1e36d6af",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "7/23/10, 2:49 PM",
          "commitNameOld": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 12.12,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function \u003d fnScope.getRootNode();\n    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            compiler.reportCodeChange();\n        } else {\n            break;\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
          "functionStartLine": 294,
          "functionName": "removeUnreferencedFunctionArgs",
          "functionAnnotation": "",
          "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n",
          "diff": "@@ -1,17 +1,18 @@\n-private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n+private void removeUnreferencedFunctionArgs(Scope fnScope) {\n+    Node function \u003d fnScope.getRootNode();\n+    Preconditions.checkState(function.getType() \u003d\u003d Token.FUNCTION);\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n             if (var \u003d\u003d null) {\n                 throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n             argList.removeChild(lastArg);\n-            fnScope.undeclare(var);\n-            finishRemove(var);\n+            compiler.reportCodeChange();\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n",
            "newValue": "Removes unreferenced arguments from a function declaration.\n\n@param fnScope The scope inside the function\n"
          }
        }
      ]
    },
    "833cd72a268c1161194038faf0d98ec6b1f203eb": {
      "type": "Ybodychange",
      "commitMessage": "\nMake RemoveUnusedVars a lot smarter about dead assigns.\nGranted, it\u0027s still nowhere near as smart as the real dead-assignment\npass, so maybe it\u0027d be better to say that this makes the pass\nless dumb.\n\nR\u003dacleung\nDELTA\u003d251  (222 added, 15 deleted, 14 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d52002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@281 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/15/10, 2:02 PM",
      "commitName": "833cd72a268c1161194038faf0d98ec6b1f203eb",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/12/10, 3:20 PM",
      "commitNameOld": "b2c12cd9f4284d58450d1a487e29d6b6a065105e",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            fnScope.undeclare(var);\n            finishRemove(var);\n        } else {\n            break;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 197,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n",
      "diff": "@@ -1,17 +1,17 @@\n private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n             if (var \u003d\u003d null) {\n                 throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n             argList.removeChild(lastArg);\n             fnScope.undeclare(var);\n-            numRemoved++;\n+            finishRemove(var);\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b2c12cd9f4284d58450d1a487e29d6b6a065105e": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/12 11:35:39 by nicksantos\n\n\tclean up RemoveUnusedVars. Update old naming conventions,\n\tand remove a logger that was no longer really accurate.\n\n\tR\u003djohnlenz\n\tDELTA\u003d35  (0 added, 18 deleted, 17 changed)\n\nChange on 2010/07/12 11:37:59 by johnlenz\n\n\tStub out an unused section of the source map, which results in\n\tslightly smaller, faster, and simplified logic.\n\n\tR\u003djschorr\n\tDELTA\u003d68  (18 added, 41 deleted, 9 changed)\n\nChange on 2010/07/12 11:39:24 by gboyer\n\n\tClipboardData is a property of Event in IE.\n\n\tDefinition copied from ie_dom.js.  I added a |undefined because it is\n\tnot defined in other browsers.\n\n\tFixes warning in Trog\u0027s paste interceptor.\n\n\tR\u003dnicksantos,skobes\n\tDELTA\u003d5  (5 added, 0 deleted, 0 changed)\n\nChange on 2010/07/12 12:42:29 by nicksantos\n\n\tClean up AliasExternals and make it work with normalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d43  (24 added, 0 deleted, 19 changed)\n\nChange on 2010/07/12 12:58:26 by nicksantos\n\n\tfix ScopedAliases when the type of a parameter is null.\n\n\tR\u003drobbyw\n\tDELTA\u003d13  (11 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d48008\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@272 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/12/10, 3:20 PM",
      "commitName": "b2c12cd9f4284d58450d1a487e29d6b6a065105e",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/2/10, 7:10 AM",
      "commitNameOld": "4672a1aca15e6d5c3e7c2e00e31767f3c8327335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 40.34,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            fnScope.undeclare(var);\n            numRemoved++;\n        } else {\n            break;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 190,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n",
      "diff": "@@ -1,17 +1,17 @@\n private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n             if (var \u003d\u003d null) {\n                 throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n             }\n             argList.removeChild(lastArg);\n             fnScope.undeclare(var);\n-            numRemoved_++;\n+            numRemoved++;\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fbf47bd6fe52121c22d9c1fa6764e6686221df99": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t use NAME for label names, introduce LABEL_NAME. This improves the correctness of the compiler as many passes don\u0027t distinguish between label names and variable names appropriately. (John)\nR\u003drobert\nDELTA\u003d57  (29 added, 12 deleted, 16 changed)\n\nRemove now unneeded checks for label names when inspecting NAME nodes. (John)\nR\u003drobert\nDELTA\u003d6  (0 added, 4 deleted, 2 changed)\n\nBetter message for the \"arguments\" problem until we can fix it. (John)\nR\u003drobert\nDELTA\u003d5  (5 added, 0 deleted, 0 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dwdxvlt\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@164 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/31/10, 2:45 PM",
      "commitName": "fbf47bd6fe52121c22d9c1fa6764e6686221df99",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/30/10, 3:01 PM",
      "commitNameOld": "1c2f9589453a5269f45adefed4f38b1b8253d235",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            if (var \u003d\u003d null) {\n                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n            }\n            argList.removeChild(lastArg);\n            fnScope.undeclare(var);\n            numRemoved_++;\n        } else {\n            break;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 178,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n",
      "diff": "@@ -1,14 +1,17 @@\n private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n         Var var \u003d fnScope.getVar(lastArg.getString());\n         if (!referenced.contains(var)) {\n+            if (var \u003d\u003d null) {\n+                throw new IllegalStateException(\"Function parameter not declared in scope: \" + lastArg.getString());\n+            }\n             argList.removeChild(lastArg);\n             fnScope.undeclare(var);\n             numRemoved_++;\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": {
      "type": "Ybodychange",
      "commitMessage": "Change the internal representation of constant variables.\n\nRun inline-variables before smart-name-removal.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/17/09, 4:20 PM",
      "commitName": "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 22.39,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!referenced.contains(var)) {\n            argList.removeChild(lastArg);\n            fnScope.undeclare(var);\n            numRemoved_++;\n        } else {\n            break;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 191,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n",
      "diff": "@@ -1,14 +1,14 @@\n private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n     Node argList \u003d function.getFirstChild().getNext();\n     Node lastArg;\n     while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n-        Scope.Var var \u003d fnScope.getVar(lastArg.getString());\n-        if (!var.referenced) {\n+        Var var \u003d fnScope.getVar(lastArg.getString());\n+        if (!referenced.contains(var)) {\n             argList.removeChild(lastArg);\n             fnScope.undeclare(var);\n             numRemoved_++;\n         } else {\n             break;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n+    Node argList \u003d function.getFirstChild().getNext();\n+    Node lastArg;\n+    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n+        Scope.Var var \u003d fnScope.getVar(lastArg.getString());\n+        if (!var.referenced) {\n+            argList.removeChild(lastArg);\n+            fnScope.undeclare(var);\n+            numRemoved_++;\n+        } else {\n+            break;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void removeUnreferencedFunctionArgs(Node function, Scope fnScope) {\n    Node argList \u003d function.getFirstChild().getNext();\n    Node lastArg;\n    while ((lastArg \u003d argList.getLastChild()) !\u003d null) {\n        Scope.Var var \u003d fnScope.getVar(lastArg.getString());\n        if (!var.referenced) {\n            argList.removeChild(lastArg);\n            fnScope.undeclare(var);\n            numRemoved_++;\n        } else {\n            break;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java",
      "functionStartLine": 182,
      "functionName": "removeUnreferencedFunctionArgs",
      "functionAnnotation": "",
      "functionDoc": "Removes unreferenced arguments from a function declaration.\n\n@param function The FUNCTION node\n@param fnScope The scope inside the function\n"
    }
  }
}