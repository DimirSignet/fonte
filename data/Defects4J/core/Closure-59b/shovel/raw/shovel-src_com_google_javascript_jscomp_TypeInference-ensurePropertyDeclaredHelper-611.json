{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeInference.java",
  "functionName": "ensurePropertyDeclaredHelper",
  "functionId": "ensurePropertyDeclaredHelper___getprop-Node__objectType-ObjectType",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeInference.java",
  "functionAnnotation": "",
  "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n",
  "functionStartLine": 611,
  "functionEndLine": 630,
  "numCommitsSeen": 50,
  "timeTaken": 3161,
  "changeHistory": [
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
    "6bbac115c9a7928a7053b2da3a78df9569df8570",
    "d1f25380b5d74c5303533491e36ae4b33a50e2da",
    "77b7c78d4aeeb6471f2f668a06c0f61a68f95ccd",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": "Ybodychange",
    "6bbac115c9a7928a7053b2da3a78df9569df8570": "Ybodychange",
    "d1f25380b5d74c5303533491e36ae4b33a50e2da": "Ybodychange",
    "77b7c78d4aeeb6471f2f668a06c0f61a68f95ccd": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": {
      "type": "Ybodychange",
      "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/11, 2:00 PM",
      "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/24/11, 10:37 AM",
      "commitNameOld": "c590fe51732eea3b712c7f894ba3f5a9d23613e1",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 38.14,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n    String propName \u003d getprop.getLastChild().getString();\n    String qName \u003d getprop.getQualifiedName();\n    if (qName !\u003d null) {\n        Var var \u003d syntacticScope.getVar(qName);\n        if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n            if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n                return objectType.defineDeclaredProperty(propName, var.getType(), getprop);\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 611,
      "functionName": "ensurePropertyDeclaredHelper",
      "functionAnnotation": "",
      "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n",
      "diff": "@@ -1,13 +1,13 @@\n private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n     String propName \u003d getprop.getLastChild().getString();\n     String qName \u003d getprop.getQualifiedName();\n     if (qName !\u003d null) {\n         Var var \u003d syntacticScope.getVar(qName);\n         if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n             if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n-                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern(), getprop);\n+                return objectType.defineDeclaredProperty(propName, var.getType(), getprop);\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bbac115c9a7928a7053b2da3a78df9569df8570": {
      "type": "Ybodychange",
      "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 9:19 AM",
      "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "12/15/10, 2:37 PM",
      "commitNameOld": "f1a08e4f38ace8c387085a7e7e2f52adaa9d88ca",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 22.78,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n    String propName \u003d getprop.getLastChild().getString();\n    String qName \u003d getprop.getQualifiedName();\n    if (qName !\u003d null) {\n        Var var \u003d syntacticScope.getVar(qName);\n        if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n            if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern(), getprop);\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 611,
      "functionName": "ensurePropertyDeclaredHelper",
      "functionAnnotation": "",
      "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n",
      "diff": "@@ -1,13 +1,13 @@\n private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n     String propName \u003d getprop.getLastChild().getString();\n     String qName \u003d getprop.getQualifiedName();\n     if (qName !\u003d null) {\n         Var var \u003d syntacticScope.getVar(qName);\n         if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n             if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n-                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n+                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern(), getprop);\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d1f25380b5d74c5303533491e36ae4b33a50e2da": {
      "type": "Ybodychange",
      "commitMessage": "Type-checking fix when the prototype is assigned directly. Fixes issue 59.\n\nAlso, make sure that DevirtualizePrototypeMethods maintains type info.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@93 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/5/10, 10:31 AM",
      "commitName": "d1f25380b5d74c5303533491e36ae4b33a50e2da",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/4/10, 1:06 PM",
      "commitNameOld": "37bc6d41f17d17a822bbcd9aed9f17649a3384fd",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n    String propName \u003d getprop.getLastChild().getString();\n    String qName \u003d getprop.getQualifiedName();\n    if (qName !\u003d null) {\n        Var var \u003d syntacticScope.getVar(qName);\n        if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n            if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 598,
      "functionName": "ensurePropertyDeclaredHelper",
      "functionAnnotation": "",
      "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n",
      "diff": "@@ -1,12 +1,13 @@\n private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n     String propName \u003d getprop.getLastChild().getString();\n     String qName \u003d getprop.getQualifiedName();\n     if (qName !\u003d null) {\n         Var var \u003d syntacticScope.getVar(qName);\n-        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType()))) {\n-            objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n-            return true;\n+        if (var !\u003d null \u0026\u0026 !var.isTypeInferred()) {\n+            if (propName.equals(\"prototype\") || (!objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType())))) {\n+                return objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n+            }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "77b7c78d4aeeb6471f2f668a06c0f61a68f95ccd": {
      "type": "Ybodychange",
      "commitMessage": "Add more unit tests for type checking.\n\nAdd phase optimization.\n\nFix a type inference bug.\n\nString.prototype.split may not return null.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@55 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/4/10, 12:18 PM",
      "commitName": "77b7c78d4aeeb6471f2f668a06c0f61a68f95ccd",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/15/09, 1:52 PM",
      "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 19.93,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n    String propName \u003d getprop.getLastChild().getString();\n    String qName \u003d getprop.getQualifiedName();\n    if (qName !\u003d null) {\n        Var var \u003d syntacticScope.getVar(qName);\n        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType()))) {\n            objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 568,
      "functionName": "ensurePropertyDeclaredHelper",
      "functionAnnotation": "",
      "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n",
      "diff": "@@ -1,12 +1,12 @@\n private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n     String propName \u003d getprop.getLastChild().getString();\n     String qName \u003d getprop.getQualifiedName();\n     if (qName !\u003d null) {\n         Var var \u003d syntacticScope.getVar(qName);\n-        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || var.isExtern())) {\n+        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || (var.isExtern() \u0026\u0026 !objectType.isNativeObjectType()))) {\n             objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n             return true;\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n+    String propName \u003d getprop.getLastChild().getString();\n+    String qName \u003d getprop.getQualifiedName();\n+    if (qName !\u003d null) {\n+        Var var \u003d syntacticScope.getVar(qName);\n+        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || var.isExtern())) {\n+            objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean ensurePropertyDeclaredHelper(Node getprop, ObjectType objectType) {\n    String propName \u003d getprop.getLastChild().getString();\n    String qName \u003d getprop.getQualifiedName();\n    if (qName !\u003d null) {\n        Var var \u003d syntacticScope.getVar(qName);\n        if (var !\u003d null \u0026\u0026 !var.isTypeInferred() \u0026\u0026 !objectType.hasOwnProperty(propName) \u0026\u0026 (!objectType.isInstanceType() || var.isExtern())) {\n            objectType.defineDeclaredProperty(propName, var.getType(), var.isExtern());\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 570,
      "functionName": "ensurePropertyDeclaredHelper",
      "functionAnnotation": "",
      "functionDoc": "Declares a property on its owner, if necessary.\n\n@return True if a property was declared.\n"
    }
  }
}