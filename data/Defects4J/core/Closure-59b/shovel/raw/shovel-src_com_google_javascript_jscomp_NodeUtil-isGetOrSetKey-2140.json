{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isGetOrSetKey",
  "functionId": "isGetOrSetKey___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Determines whether a node represents an object literal get or set key\n(e.g. key1 in {get key1() {}, set key2(a){}).\n\n@param node A node\n",
  "functionStartLine": 2140,
  "functionEndLine": 2147,
  "numCommitsSeen": 94,
  "timeTaken": 4238,
  "changeHistory": [
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e"
  ],
  "changeHistoryShort": {
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81a77a269d5a9cd6b9baf34812b17fd22933b46e": {
      "type": "Yintroduced",
      "commitMessage": "\nObject literal setters must have one parameter.\nAlso, fix crash in RemoveUnusedVars in the presence of getters and setters.\n\nR\u003dnicksantos\nDELTA\u003d157  (151 added, 5 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d157\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@643 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/16/10, 12:17 PM",
      "commitName": "81a77a269d5a9cd6b9baf34812b17fd22933b46e",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,8 @@\n+static boolean isGetOrSetKey(Node node) {\n+    switch(node.getType()) {\n+        case Token.GET:\n+        case Token.SET:\n+            return true;\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isGetOrSetKey(Node node) {\n    switch(node.getType()) {\n        case Token.GET:\n        case Token.SET:\n            return true;\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1646,
      "functionName": "isGetOrSetKey",
      "functionAnnotation": "",
      "functionDoc": "Determines whether a node represents an object literal get or set key\n(e.g. key1 in {get key1() {}, set key2(a){}).\n\n@param node A node\n"
    }
  }
}