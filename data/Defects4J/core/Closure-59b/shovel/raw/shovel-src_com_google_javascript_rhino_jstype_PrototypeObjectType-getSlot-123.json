{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrototypeObjectType.java",
  "functionName": "getSlot",
  "functionId": "getSlot___name-String",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 123,
  "functionEndLine": 141,
  "numCommitsSeen": 24,
  "timeTaken": 773,
  "changeHistory": [
    "8dc67305aec856292735bb821fe41e7f9032e7e1"
  ],
  "changeHistoryShort": {
    "8dc67305aec856292735bb821fe41e7f9032e7e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8dc67305aec856292735bb821fe41e7f9032e7e1": {
      "type": "Yintroduced",
      "commitMessage": "\nMake ObjectType implement StaticScope.\nThis is part of a long-term plan to write a general\nsymbol table with a unified API across many different types\nof data structures.\nI accidentally fixed a bug in interfaces when doing this, so added tests for the bugs i fixed.\n\nR\u003dacleung\nDELTA\u003d177  (101 added, 49 deleted, 27 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2282\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1182 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/15/11, 1:20 PM",
      "commitName": "8dc67305aec856292735bb821fe41e7f9032e7e1",
      "commitAuthor": "nicksantos@google.com",
      "diff": "@@ -0,0 +1,20 @@\n+@Override\n+public StaticSlot\u003cJSType\u003e getSlot(String name) {\n+    if (properties.containsKey(name)) {\n+        return properties.get(name);\n+    }\n+    ObjectType implicitPrototype \u003d getImplicitPrototype();\n+    if (implicitPrototype !\u003d null) {\n+        StaticSlot\u003cJSType\u003e prop \u003d implicitPrototype.getSlot(name);\n+        if (prop !\u003d null) {\n+            return prop;\n+        }\n+    }\n+    for (ObjectType interfaceType : getCtorExtendedInterfaces()) {\n+        StaticSlot\u003cJSType\u003e prop \u003d interfaceType.getSlot(name);\n+        if (prop !\u003d null) {\n+            return prop;\n+        }\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic StaticSlot\u003cJSType\u003e getSlot(String name) {\n    if (properties.containsKey(name)) {\n        return properties.get(name);\n    }\n    ObjectType implicitPrototype \u003d getImplicitPrototype();\n    if (implicitPrototype !\u003d null) {\n        StaticSlot\u003cJSType\u003e prop \u003d implicitPrototype.getSlot(name);\n        if (prop !\u003d null) {\n            return prop;\n        }\n    }\n    for (ObjectType interfaceType : getCtorExtendedInterfaces()) {\n        StaticSlot\u003cJSType\u003e prop \u003d interfaceType.getSlot(name);\n        if (prop !\u003d null) {\n            return prop;\n        }\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 123,
      "functionName": "getSlot",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}