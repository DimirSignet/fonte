{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "containsFunction",
  "functionId": "containsFunction___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Determines if the given node contains a function statement or function\nexpression.\n",
  "functionStartLine": 1441,
  "functionEndLine": 1443,
  "numCommitsSeen": 117,
  "timeTaken": 7813,
  "changeHistory": [
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Ymultichange(Yrename,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Ymultichange(Yrename,Ydocchange)",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/29/10, 1:07 PM",
          "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/23/10, 11:31 AM",
          "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 36.07,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean containsFunction(Node n) {\n    return containsType(n, Token.FUNCTION);\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 808,
          "functionName": "containsFunction",
          "functionAnnotation": "",
          "functionDoc": "Determines if the given node contains a function statement or function\nexpression.\n",
          "diff": "@@ -1,3 +1,3 @@\n-static boolean containsFunctionDeclaration(Node n) {\n+static boolean containsFunction(Node n) {\n     return containsType(n, Token.FUNCTION);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "containsFunctionDeclaration",
            "newValue": "containsFunction"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/29/10, 1:07 PM",
          "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/23/10, 11:31 AM",
          "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 36.07,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean containsFunction(Node n) {\n    return containsType(n, Token.FUNCTION);\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 808,
          "functionName": "containsFunction",
          "functionAnnotation": "",
          "functionDoc": "Determines if the given node contains a function statement or function\nexpression.\n",
          "diff": "@@ -1,3 +1,3 @@\n-static boolean containsFunctionDeclaration(Node n) {\n+static boolean containsFunction(Node n) {\n     return containsType(n, Token.FUNCTION);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Determines if the given node contains a function declaration.\n",
            "newValue": "Determines if the given node contains a function statement or function\nexpression.\n"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+static boolean containsFunctionDeclaration(Node n) {\n+    return containsType(n, Token.FUNCTION);\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean containsFunctionDeclaration(Node n) {\n    return containsType(n, Token.FUNCTION);\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 683,
      "functionName": "containsFunctionDeclaration",
      "functionAnnotation": "",
      "functionDoc": "Determines if the given node contains a function declaration.\n"
    }
  }
}