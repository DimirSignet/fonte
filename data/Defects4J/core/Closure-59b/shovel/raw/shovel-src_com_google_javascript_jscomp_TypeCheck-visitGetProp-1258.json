{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeCheck.java",
  "functionName": "visitGetProp",
  "functionId": "visitGetProp___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeCheck.java",
  "functionAnnotation": "",
  "functionDoc": "Visits a GETPROP node.\n\n@param t The node traversal object that supplies context, such as the\nscope chain to use in name lookups as well as error reporting.\n@param n The node being visited.\n@param parent The parent of \u003ccode\u003en\u003c/code\u003e\n",
  "functionStartLine": 1258,
  "functionEndLine": 1284,
  "numCommitsSeen": 48,
  "timeTaken": 3701,
  "changeHistory": [
    "9d9957fdd23ff13d187d4b8832d580bf8622baf6",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "9d9957fdd23ff13d187d4b8832d580bf8622baf6": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d9957fdd23ff13d187d4b8832d580bf8622baf6": {
      "type": "Ybodychange",
      "commitMessage": "\nFlag null pointer exceptions that are provable at compile time.\n\nR\u003djohnlenz\nDELTA\u003d48  (38 added, 0 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d236\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@682 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/10/11, 12:54 PM",
      "commitName": "9d9957fdd23ff13d187d4b8832d580bf8622baf6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "12/2/10, 12:04 PM",
      "commitNameOld": "a83c4868dbc0f3229d31af5ff1b8554c44908459",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 39.03,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "actualSource": "private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n    if (n.getJSType() !\u003d null \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n        return;\n    }\n    Node property \u003d n.getLastChild();\n    Node objNode \u003d n.getFirstChild();\n    JSType childType \u003d getJSType(objNode);\n    if (!validator.expectNotNullOrUndefined(t, n, childType, childType + \" has no properties\", getNativeType(OBJECT_TYPE))) {\n        ensureTyped(t, n);\n        return;\n    }\n    checkPropertyAccess(childType, property.getString(), t, n);\n    ensureTyped(t, n);\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 1138,
      "functionName": "visitGetProp",
      "functionAnnotation": "",
      "functionDoc": "Visits a GETPROP node.\n\n@param t The node traversal object that supplies context, such as the\nscope chain to use in name lookups as well as error reporting.\n@param n The node being visited.\n@param parent The parent of \u003ccode\u003en\u003c/code\u003e\n",
      "diff": "@@ -1,14 +1,14 @@\n private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n     if (n.getJSType() !\u003d null \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n         return;\n     }\n     Node property \u003d n.getLastChild();\n     Node objNode \u003d n.getFirstChild();\n     JSType childType \u003d getJSType(objNode);\n-    if (!validator.expectNotVoid(t, n, childType, \"undefined has no properties\", getNativeType(OBJECT_TYPE))) {\n+    if (!validator.expectNotNullOrUndefined(t, n, childType, childType + \" has no properties\", getNativeType(OBJECT_TYPE))) {\n         ensureTyped(t, n);\n         return;\n     }\n     checkPropertyAccess(childType, property.getString(), t, n);\n     ensureTyped(t, n);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n+    if (n.getJSType() !\u003d null \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n+        return;\n+    }\n+    Node property \u003d n.getLastChild();\n+    Node objNode \u003d n.getFirstChild();\n+    JSType childType \u003d getJSType(objNode);\n+    if (!validator.expectNotVoid(t, n, childType, \"undefined has no properties\", getNativeType(OBJECT_TYPE))) {\n+        ensureTyped(t, n);\n+        return;\n+    }\n+    checkPropertyAccess(childType, property.getString(), t, n);\n+    ensureTyped(t, n);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n    if (n.getJSType() !\u003d null \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n        return;\n    }\n    Node property \u003d n.getLastChild();\n    Node objNode \u003d n.getFirstChild();\n    JSType childType \u003d getJSType(objNode);\n    if (!validator.expectNotVoid(t, n, childType, \"undefined has no properties\", getNativeType(OBJECT_TYPE))) {\n        ensureTyped(t, n);\n        return;\n    }\n    checkPropertyAccess(childType, property.getString(), t, n);\n    ensureTyped(t, n);\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 1116,
      "functionName": "visitGetProp",
      "functionAnnotation": "",
      "functionDoc": "Visits a GETPROP node.\n\n@param t The node traversal object that supplies context, such as the\nscope chain to use in name lookups as well as error reporting.\n@param n The node being visited.\n@param parent The parent of \u003ccode\u003en\u003c/code\u003e\n"
    }
  }
}