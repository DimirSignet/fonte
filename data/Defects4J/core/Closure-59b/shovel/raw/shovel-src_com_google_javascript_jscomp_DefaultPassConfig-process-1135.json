{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultPassConfig.java",
  "functionName": "process",
  "functionId": "$process___externs-Node__root-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 1135,
  "functionEndLine": 1141,
  "numCommitsSeen": 118,
  "timeTaken": 7756,
  "changeHistory": [
    "ec80fa13ec02cbcfac33ccc2436cd5d38c3dfd1f",
    "9a05def053bc2ac4b24a5c1f72b35f6a2e753b0e",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec80fa13ec02cbcfac33ccc2436cd5d38c3dfd1f": "Ybodychange",
    "9a05def053bc2ac4b24a5c1f72b35f6a2e753b0e": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec80fa13ec02cbcfac33ccc2436cd5d38c3dfd1f": {
      "type": "Ybodychange",
      "commitMessage": "\nCreate some functions for incremental recompilation.\n\nR\u003dbashir,johnlenz\nDELTA\u003d114  (110 added, 2 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d88\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@606 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/7/10, 1:55 PM",
      "commitName": "ec80fa13ec02cbcfac33ccc2436cd5d38c3dfd1f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "12/6/10, 12:43 PM",
      "commitNameOld": "f42e3e4ac6273bf9f25392b34de24672e5d56883",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    if (topScope \u003d\u003d null) {\n        regenerateGlobalTypedScope(compiler, root.getParent());\n    } else {\n        compiler.getTypeRegistry().resolveTypesInScope(topScope);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 1052,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,8 @@\n @Override\n public void process(Node externs, Node root) {\n     if (topScope \u003d\u003d null) {\n-        typedScopeCreator \u003d new MemoizedScopeCreator(new TypedScopeCreator(compiler));\n-        topScope \u003d typedScopeCreator.createScope(root.getParent(), null);\n+        regenerateGlobalTypedScope(compiler, root.getParent());\n     } else {\n         compiler.getTypeRegistry().resolveTypesInScope(topScope);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9a05def053bc2ac4b24a5c1f72b35f6a2e753b0e": {
      "type": "Ybodychange",
      "commitMessage": "\nThrow the PureFunctionIdentifier harness out of\nthe pass config, so that we can benchmark it more easily.\n\nR\u003djohnlenz\nDELTA\u003d110  (66 added, 43 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d262301\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@461 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/24/10, 11:05 AM",
      "commitName": "9a05def053bc2ac4b24a5c1f72b35f6a2e753b0e",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/20/10, 10:14 AM",
      "commitNameOld": "f9d8ba4dffcd00329d5197aba72d1b7403e1d4c4",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 4.04,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    if (topScope \u003d\u003d null) {\n        typedScopeCreator \u003d new MemoizedScopeCreator(new TypedScopeCreator(compiler));\n        topScope \u003d typedScopeCreator.createScope(root.getParent(), null);\n    } else {\n        compiler.getTypeRegistry().resolveTypesInScope(topScope);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 1049,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,22 +1,9 @@\n @Override\n public void process(Node externs, Node root) {\n-    DefinitionProvider definitionProvider \u003d null;\n-    if (useNameReferenceGraph) {\n-        NameReferenceGraphConstruction graphBuilder \u003d new NameReferenceGraphConstruction(compiler);\n-        graphBuilder.process(externs, root);\n-        definitionProvider \u003d graphBuilder.getNameReferenceGraph();\n+    if (topScope \u003d\u003d null) {\n+        typedScopeCreator \u003d new MemoizedScopeCreator(new TypedScopeCreator(compiler));\n+        topScope \u003d typedScopeCreator.createScope(root.getParent(), null);\n     } else {\n-        SimpleDefinitionFinder defFinder \u003d new SimpleDefinitionFinder(compiler);\n-        defFinder.process(externs, root);\n-        definitionProvider \u003d defFinder;\n-    }\n-    PureFunctionIdentifier pureFunctionIdentifier \u003d new PureFunctionIdentifier(compiler, definitionProvider);\n-    pureFunctionIdentifier.process(externs, root);\n-    if (reportPath !\u003d null) {\n-        try {\n-            Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), Charsets.UTF_8);\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        }\n+        compiler.getTypeRegistry().resolveTypesInScope(topScope);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,22 @@\n+@Override\n+public void process(Node externs, Node root) {\n+    DefinitionProvider definitionProvider \u003d null;\n+    if (useNameReferenceGraph) {\n+        NameReferenceGraphConstruction graphBuilder \u003d new NameReferenceGraphConstruction(compiler);\n+        graphBuilder.process(externs, root);\n+        definitionProvider \u003d graphBuilder.getNameReferenceGraph();\n+    } else {\n+        SimpleDefinitionFinder defFinder \u003d new SimpleDefinitionFinder(compiler);\n+        defFinder.process(externs, root);\n+        definitionProvider \u003d defFinder;\n+    }\n+    PureFunctionIdentifier pureFunctionIdentifier \u003d new PureFunctionIdentifier(compiler, definitionProvider);\n+    pureFunctionIdentifier.process(externs, root);\n+    if (reportPath !\u003d null) {\n+        try {\n+            Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), Charsets.UTF_8);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    DefinitionProvider definitionProvider \u003d null;\n    if (useNameReferenceGraph) {\n        NameReferenceGraphConstruction graphBuilder \u003d new NameReferenceGraphConstruction(compiler);\n        graphBuilder.process(externs, root);\n        definitionProvider \u003d graphBuilder.getNameReferenceGraph();\n    } else {\n        SimpleDefinitionFinder defFinder \u003d new SimpleDefinitionFinder(compiler);\n        defFinder.process(externs, root);\n        definitionProvider \u003d defFinder;\n    }\n    PureFunctionIdentifier pureFunctionIdentifier \u003d new PureFunctionIdentifier(compiler, definitionProvider);\n    pureFunctionIdentifier.process(externs, root);\n    if (reportPath !\u003d null) {\n        try {\n            Files.write(pureFunctionIdentifier.getDebugReport(), new File(reportPath), Charsets.UTF_8);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 1216,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}