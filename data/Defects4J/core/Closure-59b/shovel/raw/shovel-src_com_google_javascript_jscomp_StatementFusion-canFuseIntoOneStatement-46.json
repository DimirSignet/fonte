{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StatementFusion.java",
  "functionName": "canFuseIntoOneStatement",
  "functionId": "canFuseIntoOneStatement___block-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/StatementFusion.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 46,
  "functionEndLine": 83,
  "numCommitsSeen": 5,
  "timeTaken": 407,
  "changeHistory": [
    "0b1171a359e8b53bdd72c8a29c13ed8e8150385d",
    "8be30b03493eb98e31eab98c0d69c1abf44104fb",
    "de70209098a5cb103655afede52ff428f001a59f"
  ],
  "changeHistoryShort": {
    "0b1171a359e8b53bdd72c8a29c13ed8e8150385d": "Ybodychange",
    "8be30b03493eb98e31eab98c0d69c1abf44104fb": "Ybodychange",
    "de70209098a5cb103655afede52ff428f001a59f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b1171a359e8b53bdd72c8a29c13ed8e8150385d": {
      "type": "Ybodychange",
      "commitMessage": "\nDon\u0027t change side effect ordering when merging into FOR-IN.\n\nR\u003djohnlenz\nDELTA\u003d4  (3 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1310\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@984 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/8/11, 3:57 PM",
      "commitName": "0b1171a359e8b53bdd72c8a29c13ed8e8150385d",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "2/14/11, 12:28 PM",
      "commitNameOld": "8be30b03493eb98e31eab98c0d69c1abf44104fb",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 53.1,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "actualSource": "private static boolean canFuseIntoOneStatement(Node block) {\n    if (block.getType() !\u003d Token.BLOCK) {\n        return false;\n    }\n    if (!block.hasChildren() || block.hasOneChild()) {\n        return false;\n    }\n    Node last \u003d block.getLastChild();\n    for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n            return false;\n        }\n    }\n    switch(last.getType()) {\n        case Token.IF:\n        case Token.THROW:\n        case Token.SWITCH:\n        case Token.EXPR_RESULT:\n            return true;\n        case Token.RETURN:\n            return last.hasChildren();\n        case Token.FOR:\n            return NodeUtil.isForIn(last) \u0026\u0026 !NodeUtil.mayHaveSideEffects(last.getFirstChild());\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/StatementFusion.java",
      "functionStartLine": 46,
      "functionName": "canFuseIntoOneStatement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,26 @@\n private static boolean canFuseIntoOneStatement(Node block) {\n     if (block.getType() !\u003d Token.BLOCK) {\n         return false;\n     }\n     if (!block.hasChildren() || block.hasOneChild()) {\n         return false;\n     }\n     Node last \u003d block.getLastChild();\n     for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n         if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n             return false;\n         }\n     }\n     switch(last.getType()) {\n         case Token.IF:\n         case Token.THROW:\n         case Token.SWITCH:\n         case Token.EXPR_RESULT:\n             return true;\n         case Token.RETURN:\n             return last.hasChildren();\n         case Token.FOR:\n-            return NodeUtil.isForIn(last);\n+            return NodeUtil.isForIn(last) \u0026\u0026 !NodeUtil.mayHaveSideEffects(last.getFirstChild());\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8be30b03493eb98e31eab98c0d69c1abf44104fb": {
      "type": "Ybodychange",
      "commitMessage": "\nFuse statements into FOR-IN loops\n\nR\u003djohnlenz\nDELTA\u003d18  (17 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d517\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@778 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/14/11, 12:28 PM",
      "commitName": "8be30b03493eb98e31eab98c0d69c1abf44104fb",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "2/10/11, 5:46 PM",
      "commitNameOld": "de70209098a5cb103655afede52ff428f001a59f",
      "commitAuthorOld": "acleung@google.com",
      "daysBetweenCommits": 3.78,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private static boolean canFuseIntoOneStatement(Node block) {\n    if (block.getType() !\u003d Token.BLOCK) {\n        return false;\n    }\n    if (!block.hasChildren() || block.hasOneChild()) {\n        return false;\n    }\n    Node last \u003d block.getLastChild();\n    for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n            return false;\n        }\n    }\n    switch(last.getType()) {\n        case Token.IF:\n        case Token.THROW:\n        case Token.SWITCH:\n        case Token.EXPR_RESULT:\n            return true;\n        case Token.RETURN:\n            return last.hasChildren();\n        case Token.FOR:\n            return NodeUtil.isForIn(last);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/StatementFusion.java",
      "functionStartLine": 46,
      "functionName": "canFuseIntoOneStatement",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,26 @@\n private static boolean canFuseIntoOneStatement(Node block) {\n     if (block.getType() !\u003d Token.BLOCK) {\n         return false;\n     }\n     if (!block.hasChildren() || block.hasOneChild()) {\n         return false;\n     }\n     Node last \u003d block.getLastChild();\n     for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n         if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n             return false;\n         }\n     }\n     switch(last.getType()) {\n         case Token.IF:\n         case Token.THROW:\n         case Token.SWITCH:\n         case Token.EXPR_RESULT:\n             return true;\n         case Token.RETURN:\n             return last.hasChildren();\n+        case Token.FOR:\n+            return NodeUtil.isForIn(last);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de70209098a5cb103655afede52ff428f001a59f": {
      "type": "Yintroduced",
      "commitMessage": "\nMerges multiple statements into one.\n\nR\u003djohnlenz\nDELTA\u003d249  (249 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d501\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@776 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/11, 5:46 PM",
      "commitName": "de70209098a5cb103655afede52ff428f001a59f",
      "commitAuthor": "acleung@google.com",
      "diff": "@@ -0,0 +1,24 @@\n+private static boolean canFuseIntoOneStatement(Node block) {\n+    if (block.getType() !\u003d Token.BLOCK) {\n+        return false;\n+    }\n+    if (!block.hasChildren() || block.hasOneChild()) {\n+        return false;\n+    }\n+    Node last \u003d block.getLastChild();\n+    for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n+        if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n+            return false;\n+        }\n+    }\n+    switch(last.getType()) {\n+        case Token.IF:\n+        case Token.THROW:\n+        case Token.SWITCH:\n+        case Token.EXPR_RESULT:\n+            return true;\n+        case Token.RETURN:\n+            return last.hasChildren();\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static boolean canFuseIntoOneStatement(Node block) {\n    if (block.getType() !\u003d Token.BLOCK) {\n        return false;\n    }\n    if (!block.hasChildren() || block.hasOneChild()) {\n        return false;\n    }\n    Node last \u003d block.getLastChild();\n    for (Node c \u003d block.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        if (!NodeUtil.isExpressionNode(c) \u0026\u0026 c !\u003d last) {\n            return false;\n        }\n    }\n    switch(last.getType()) {\n        case Token.IF:\n        case Token.THROW:\n        case Token.SWITCH:\n        case Token.EXPR_RESULT:\n            return true;\n        case Token.RETURN:\n            return last.hasChildren();\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/StatementFusion.java",
      "functionStartLine": 46,
      "functionName": "canFuseIntoOneStatement",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}