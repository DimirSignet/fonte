{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionType.java",
  "functionName": "defineProperty",
  "functionId": "defineProperty___name-String__type-JSType__inferred-boolean__propertyNode-Node",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/FunctionType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 505,
  "functionEndLine": 521,
  "numCommitsSeen": 113,
  "timeTaken": 2146,
  "changeHistory": [
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
    "6bbac115c9a7928a7053b2da3a78df9569df8570",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173",
    "d1f25380b5d74c5303533491e36ae4b33a50e2da",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": "Ymultichange(Yparameterchange,Ybodychange)",
    "6bbac115c9a7928a7053b2da3a78df9569df8570": "Ymultichange(Yparameterchange,Ybodychange)",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": "Ybodychange",
    "d1f25380b5d74c5303533491e36ae4b33a50e2da": "Ybodychange",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/11, 2:00 PM",
      "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/1/11, 2:00 PM",
          "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/15/11, 1:20 PM",
          "commitNameOld": "8dc67305aec856292735bb821fe41e7f9032e7e1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 16.03,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.isEquivalentTo(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, propertyNode);\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 505,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n+boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n             if (objType.isEquivalentTo(prototype)) {\n                 return true;\n             }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n-    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n+    return super.defineProperty(name, type, inferred, propertyNode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean, propertyNode-Node]",
            "newValue": "[name-String, type-JSType, inferred-boolean, propertyNode-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/1/11, 2:00 PM",
          "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/15/11, 1:20 PM",
          "commitNameOld": "8dc67305aec856292735bb821fe41e7f9032e7e1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 16.03,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.isEquivalentTo(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, propertyNode);\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 505,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n+boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n             if (objType.isEquivalentTo(prototype)) {\n                 return true;\n             }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n-    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n+    return super.defineProperty(name, type, inferred, propertyNode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6bbac115c9a7928a7053b2da3a78df9569df8570": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 9:19 AM",
      "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthor": "bashir@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/7/11, 9:19 AM",
          "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "12/14/10, 1:49 PM",
          "commitNameOld": "e9f7e6114414f68deb90f4116861d7a054365404",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 23.81,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.isEquivalentTo(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 427,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n             if (objType.isEquivalentTo(prototype)) {\n                 return true;\n             }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n-    return super.defineProperty(name, type, inferred, inExterns);\n+    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean]",
            "newValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean, propertyNode-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/7/11, 9:19 AM",
          "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "12/14/10, 1:49 PM",
          "commitNameOld": "e9f7e6114414f68deb90f4116861d7a054365404",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 23.81,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.isEquivalentTo(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n}",
          "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
          "functionStartLine": 427,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n             if (objType.isEquivalentTo(prototype)) {\n                 return true;\n             }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n-    return super.defineProperty(name, type, inferred, inExterns);\n+    return super.defineProperty(name, type, inferred, inExterns, propertyNode);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/26/10, 8:26 AM",
      "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/18/10, 10:06 AM",
      "commitNameOld": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.isEquivalentTo(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns);\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 429,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n-            if (objType.equals(prototype)) {\n+            if (objType.isEquivalentTo(prototype)) {\n                 return true;\n             }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n     return super.defineProperty(name, type, inferred, inExterns);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d1f25380b5d74c5303533491e36ae4b33a50e2da": {
      "type": "Ybodychange",
      "commitMessage": "Type-checking fix when the prototype is assigned directly. Fixes issue 59.\n\nAlso, make sure that DevirtualizePrototypeMethods maintains type info.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@93 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/5/10, 10:31 AM",
      "commitName": "d1f25380b5d74c5303533491e36ae4b33a50e2da",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/26/10, 1:59 PM",
      "commitNameOld": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 9.86,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            if (objType.equals(prototype)) {\n                return true;\n            }\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns);\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 471,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,15 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n     if (\"prototype\".equals(name)) {\n         ObjectType objType \u003d type.toObjectType();\n         if (objType !\u003d null) {\n+            if (objType.equals(prototype)) {\n+                return true;\n+            }\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n     return super.defineProperty(name, type, inferred, inExterns);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": {
      "type": "Ybodychange",
      "commitMessage": "Add warnings for functions that are ambiguously defined on different\nbrowsers.\n\nAdd better support for Caja.\n\nRollback the change to CoalesceVariableNames, because it had problems.\n\nInternal type system refactoring.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@33 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/15/09, 1:52 PM",
      "commitName": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 20.29,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n    if (\"prototype\".equals(name)) {\n        ObjectType objType \u003d type.toObjectType();\n        if (objType !\u003d null) {\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns);\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 461,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n     if (\"prototype\".equals(name)) {\n-        if (type instanceof ObjectType) {\n-            ObjectType objType \u003d (ObjectType) type;\n+        ObjectType objType \u003d type.toObjectType();\n+        if (objType !\u003d null) {\n             return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n         } else {\n             return false;\n         }\n     }\n     return super.defineProperty(name, type, inferred, inExterns);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+@Override\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+    if (\"prototype\".equals(name)) {\n+        if (type instanceof ObjectType) {\n+            ObjectType objType \u003d (ObjectType) type;\n+            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n+        } else {\n+            return false;\n+        }\n+    }\n+    return super.defineProperty(name, type, inferred, inExterns);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n    if (\"prototype\".equals(name)) {\n        if (type instanceof ObjectType) {\n            ObjectType objType \u003d (ObjectType) type;\n            return setPrototype(new FunctionPrototypeType(registry, this, objType, isNativeObjectType()));\n        } else {\n            return false;\n        }\n    }\n    return super.defineProperty(name, type, inferred, inExterns);\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 461,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}