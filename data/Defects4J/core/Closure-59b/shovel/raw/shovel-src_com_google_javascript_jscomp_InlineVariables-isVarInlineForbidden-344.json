{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineVariables.java",
  "functionName": "isVarInlineForbidden",
  "functionId": "$isVarInlineForbidden___var-Var",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineVariables.java",
  "functionAnnotation": "",
  "functionDoc": "Whether the given variable is forbidden from being inlined.\n",
  "functionStartLine": 344,
  "functionEndLine": 355,
  "numCommitsSeen": 23,
  "timeTaken": 1189,
  "changeHistory": [
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9",
    "bca9abb0e3062d373fe52c0e8340337588c05708",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9": "Ybodychange",
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "03db3415761aa9d8ba2fafa0ed64116a8331b1a9": {
      "type": "Ybodychange",
      "commitMessage": "\nPrevent inlining of extern vars that are redeclared.\n\nR\u003dnicksantos\nDELTA\u003d92  (58 added, 16 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2401\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1204 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/23/11, 1:45 PM",
      "commitName": "03db3415761aa9d8ba2fafa0ed64116a8331b1a9",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/16/11, 11:12 AM",
      "commitNameOld": "fb1ca6ab49d90553268b711edc805c47ceae5088",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 7.11,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isVarInlineForbidden(Var var) {\n    return var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var);\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 344,
      "functionName": "isVarInlineForbidden",
      "functionAnnotation": "",
      "functionDoc": "Whether the given variable is forbidden from being inlined.\n",
      "diff": "@@ -1,3 +1,3 @@\n private boolean isVarInlineForbidden(Var var) {\n-    return compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var);\n+    return var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Ybodychange",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 62.3,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isVarInlineForbidden(Var var) {\n    return compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var);\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 309,
      "functionName": "isVarInlineForbidden",
      "functionAnnotation": "",
      "functionDoc": "Whether the given variable is forbidden from being inlined.\n",
      "diff": "@@ -1,3 +1,3 @@\n private boolean isVarInlineForbidden(Var var) {\n-    return compiler.getCodingConvention().isExported(var.name) || staleVars.contains(var);\n+    return compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+private boolean isVarInlineForbidden(Var var) {\n+    return compiler.getCodingConvention().isExported(var.name) || staleVars.contains(var);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isVarInlineForbidden(Var var) {\n    return compiler.getCodingConvention().isExported(var.name) || staleVars.contains(var);\n}",
      "path": "src/com/google/javascript/jscomp/InlineVariables.java",
      "functionStartLine": 291,
      "functionName": "isVarInlineForbidden",
      "functionAnnotation": "",
      "functionDoc": "Whether the given variable is forbidden from being inlined.\n"
    }
  }
}