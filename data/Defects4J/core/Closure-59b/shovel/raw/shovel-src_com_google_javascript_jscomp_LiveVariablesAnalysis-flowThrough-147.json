{
  "origin": "codeshovel",
  "repositoryName": "Closure-59b",
  "repositoryPath": "/tmp/Closure-59b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LiveVariablesAnalysis.java",
  "functionName": "flowThrough",
  "functionId": "flowThrough___node-Node__input-LiveVariableLattice",
  "sourceFilePath": "src/com/google/javascript/jscomp/LiveVariablesAnalysis.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 147,
  "functionEndLine": 165,
  "numCommitsSeen": 11,
  "timeTaken": 418,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+@Override\n+LiveVariableLattice flowThrough(Node node, LiveVariableLattice input) {\n+    final BitSet gen \u003d new BitSet(input.liveSet.size());\n+    final BitSet kill \u003d new BitSet(input.liveSet.size());\n+    boolean conditional \u003d false;\n+    List\u003cDiGraphEdge\u003cNode, Branch\u003e\u003e edgeList \u003d getCfg().getOutEdges(node);\n+    for (DiGraphEdge\u003cNode, Branch\u003e edge : edgeList) {\n+        if (Branch.ON_EX.equals(edge.getValue())) {\n+            conditional \u003d true;\n+        }\n+    }\n+    computeGenKill(node, gen, kill, conditional);\n+    LiveVariableLattice result \u003d new LiveVariableLattice(input);\n+    result.liveSet.andNot(kill);\n+    result.liveSet.or(gen);\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nLiveVariableLattice flowThrough(Node node, LiveVariableLattice input) {\n    final BitSet gen \u003d new BitSet(input.liveSet.size());\n    final BitSet kill \u003d new BitSet(input.liveSet.size());\n    boolean conditional \u003d false;\n    List\u003cDiGraphEdge\u003cNode, Branch\u003e\u003e edgeList \u003d getCfg().getOutEdges(node);\n    for (DiGraphEdge\u003cNode, Branch\u003e edge : edgeList) {\n        if (Branch.ON_EX.equals(edge.getValue())) {\n            conditional \u003d true;\n        }\n    }\n    computeGenKill(node, gen, kill, conditional);\n    LiveVariableLattice result \u003d new LiveVariableLattice(input);\n    result.liveSet.andNot(kill);\n    result.liveSet.or(gen);\n    return result;\n}",
      "path": "src/com/google/javascript/jscomp/LiveVariablesAnalysis.java",
      "functionStartLine": 148,
      "functionName": "flowThrough",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}