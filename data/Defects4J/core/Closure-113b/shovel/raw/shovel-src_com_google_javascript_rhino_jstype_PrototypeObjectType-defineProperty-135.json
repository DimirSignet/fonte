{
  "origin": "codeshovel",
  "repositoryName": "Closure-113b",
  "repositoryPath": "/tmp/Closure-113b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrototypeObjectType.java",
  "functionName": "defineProperty",
  "functionId": "defineProperty___name-String__type-JSType__inferred-boolean__propertyNode-Node",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 135,
  "functionEndLine": 144,
  "numCommitsSeen": 81,
  "timeTaken": 2475,
  "changeHistory": [
    "b2430d29987b54e977a5e5e8db9242f4486c750b",
    "59aac0b247db74ec7047132f368953935edd81b8",
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
    "6c7c28651eac368f7ff4180abff580114fd0113d",
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2",
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
    "8dc67305aec856292735bb821fe41e7f9032e7e1",
    "091577d5000b2260452cdc79eacf54925de894a3",
    "6bbac115c9a7928a7053b2da3a78df9569df8570",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b2430d29987b54e977a5e5e8db9242f4486c750b": "Ybodychange",
    "59aac0b247db74ec7047132f368953935edd81b8": "Ybodychange",
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4": "Ybodychange",
    "6c7c28651eac368f7ff4180abff580114fd0113d": "Ybodychange",
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2": "Ybodychange",
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": "Ymultichange(Yparameterchange,Ybodychange)",
    "8dc67305aec856292735bb821fe41e7f9032e7e1": "Ybodychange",
    "091577d5000b2260452cdc79eacf54925de894a3": "Ybodychange",
    "6bbac115c9a7928a7053b2da3a78df9569df8570": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2430d29987b54e977a5e5e8db9242f4486c750b": {
      "type": "Ybodychange",
      "commitMessage": "\nProposal: change how we represent property sets on objects.\nI went down this rabbit-hole to experiment with a few different things:\n- Separating property bookkeeping from type relation bookkeeping.\n- Use the same property-store for \"new Foo()\" and \"Foo.prototype\".\nI don\u0027t think that maintaining separate property maps for these two\ntypes actually buys us anything, and it\u0027s inconsistent with how they\u0027re\nused in practice.\n- Use the same property-store for \"Foo.\u003cBar\u003e\" and \"Foo.\u003cBaz\u003e\"\nI actually like how this ended up--it\u0027s a lot easier to see how properties\nare inherited. But I\u0027m curious what others think.\n\nR\u003djohnlenz,dimvar\nDELTA\u003d507  (347 added, 143 deleted, 17 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5910\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2361 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/3/12, 9:30 AM",
      "commitName": "b2430d29987b54e977a5e5e8db9242f4486c750b",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/25/12, 3:36 PM",
      "commitNameOld": "e43d4fa98a5eddcf1a6fda0f21ad07ad08f6839a",
      "commitAuthorOld": "dimvar@google.com",
      "daysBetweenCommits": 38.79,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    properties.putProperty(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 206,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,9 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n     Property newProp \u003d new Property(name, type, inferred, propertyNode);\n-    Property oldProp \u003d properties.get(name);\n-    if (oldProp !\u003d null) {\n-        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n-    }\n-    properties.put(name, newProp);\n+    properties.putProperty(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "59aac0b247db74ec7047132f368953935edd81b8": {
      "type": "Ybodychange",
      "commitMessage": "\n\nMore typos and stuff, fixing bad merge\nFixes issue 734\n\nR\u003dnicksantos\nDELTA\u003d125  (0 added, 0 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4852\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1992 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/23/12, 9:49 AM",
      "commitName": "59aac0b247db74ec7047132f368953935edd81b8",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/22/12, 5:42 PM",
      "commitNameOld": "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 234,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nbreaks docs\n\n*** Original change description ***\n\nMore typos and stuff.\nFixes issue 734\n\nDELTA\u003d136  (0 added, 0 deleted, 136 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4846\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1990 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/22/12, 5:42 PM",
      "commitName": "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/22/12, 4:00 PM",
      "commitNameOld": "6c7c28651eac368f7ff4180abff580114fd0113d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 234,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "6c7c28651eac368f7ff4180abff580114fd0113d": {
      "type": "Ybodychange",
      "commitMessage": "\nMore typos and stuff.\nFixes issue 734\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4844\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1988 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/22/12, 4:00 PM",
      "commitName": "6c7c28651eac368f7ff4180abff580114fd0113d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/8/12, 4:53 PM",
      "commitNameOld": "535699c745b234bc1c89a4e298b523d6fda9d6dd",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 13.96,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 234,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "5c695ce6ca5095ba764d34e634c20f65d8a558e2": {
      "type": "Ybodychange",
      "commitMessage": "\nProper source information for function prototypes\n\nR\u003dacleung\nDELTA\u003d343  (190 added, 106 deleted, 47 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3216\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1424 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/8/11, 7:15 AM",
      "commitName": "5c695ce6ca5095ba764d34e634c20f65d8a558e2",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/31/11, 7:30 PM",
      "commitNameOld": "7e9b8336568ea7f05c33e1b58eb67fa6d4eee756",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 7.49,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 236,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n     Property newProp \u003d new Property(name, type, inferred, propertyNode);\n     Property oldProp \u003d properties.get(name);\n     if (oldProp !\u003d null) {\n-        newProp.docInfo \u003d oldProp.docInfo;\n+        newProp.setJSDocInfo(oldProp.getJSDocInfo());\n     }\n     properties.put(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "03ce555bcedcf98d99de1b4f8a6238ba75ee6850": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/11, 2:00 PM",
      "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/1/11, 2:00 PM",
          "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/15/11, 1:20 PM",
          "commitNameOld": "8dc67305aec856292735bb821fe41e7f9032e7e1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 16.03,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.docInfo \u003d oldProp.docInfo;\n    }\n    properties.put(name, newProp);\n    return true;\n}",
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
          "functionStartLine": 229,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n+boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    Property newProp \u003d new Property(name, type, inferred, inExterns, propertyNode);\n+    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n     Property oldProp \u003d properties.get(name);\n     if (oldProp !\u003d null) {\n         newProp.docInfo \u003d oldProp.docInfo;\n     }\n     properties.put(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean, propertyNode-Node]",
            "newValue": "[name-String, type-JSType, inferred-boolean, propertyNode-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nSimplify the type system a bit by pulling extern info off the nodes\n\nR\u003djohnlenz\nDELTA\u003d171  (4 added, 42 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2500\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1242 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/1/11, 2:00 PM",
          "commitName": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/15/11, 1:20 PM",
          "commitNameOld": "8dc67305aec856292735bb821fe41e7f9032e7e1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 16.03,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.docInfo \u003d oldProp.docInfo;\n    }\n    properties.put(name, newProp);\n    return true;\n}",
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
          "functionStartLine": 229,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,13 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n+boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    Property newProp \u003d new Property(name, type, inferred, inExterns, propertyNode);\n+    Property newProp \u003d new Property(name, type, inferred, propertyNode);\n     Property oldProp \u003d properties.get(name);\n     if (oldProp !\u003d null) {\n         newProp.docInfo \u003d oldProp.docInfo;\n     }\n     properties.put(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "8dc67305aec856292735bb821fe41e7f9032e7e1": {
      "type": "Ybodychange",
      "commitMessage": "\nMake ObjectType implement StaticScope.\nThis is part of a long-term plan to write a general\nsymbol table with a unified API across many different types\nof data structures.\nI accidentally fixed a bug in interfaces when doing this, so added tests for the bugs i fixed.\n\nR\u003dacleung\nDELTA\u003d177  (101 added, 49 deleted, 27 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2282\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1182 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/15/11, 1:20 PM",
      "commitName": "8dc67305aec856292735bb821fe41e7f9032e7e1",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/16/11, 12:57 PM",
      "commitNameOld": "c438dfd06013f82daa648d23b864842ff1881695",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 30.02,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(name, type, inferred, inExterns, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.docInfo \u003d oldProp.docInfo;\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 229,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    Property newProp \u003d new Property(type, inferred, inExterns, propertyNode);\n+    Property newProp \u003d new Property(name, type, inferred, inExterns, propertyNode);\n     Property oldProp \u003d properties.get(name);\n     if (oldProp !\u003d null) {\n         newProp.docInfo \u003d oldProp.docInfo;\n     }\n     properties.put(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "091577d5000b2260452cdc79eacf54925de894a3": {
      "type": "Ybodychange",
      "commitMessage": "\nMaking CheckAccessControls hot-swappable. This needed changes in defining\nproperties on PrototypeObjectType to keep previously inferred jsdoc info.\n\nR\u003dnicksantos\nDELTA\u003d57  (45 added, 2 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1806\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1070 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 8:34 AM",
      "commitName": "091577d5000b2260452cdc79eacf54925de894a3",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "4/19/11, 1:05 PM",
      "commitNameOld": "cc628d6050107e3dfcc7bd2748708c12ef15b4e0",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 20.81,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    Property newProp \u003d new Property(type, inferred, inExterns, propertyNode);\n    Property oldProp \u003d properties.get(name);\n    if (oldProp !\u003d null) {\n        newProp.docInfo \u003d oldProp.docInfo;\n    }\n    properties.put(name, newProp);\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 228,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,13 @@\n @Override\n boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    properties.put(name, new Property(type, inferred, inExterns, propertyNode));\n+    Property newProp \u003d new Property(type, inferred, inExterns, propertyNode);\n+    Property oldProp \u003d properties.get(name);\n+    if (oldProp !\u003d null) {\n+        newProp.docInfo \u003d oldProp.docInfo;\n+    }\n+    properties.put(name, newProp);\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bbac115c9a7928a7053b2da3a78df9569df8570": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 9:19 AM",
      "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthor": "bashir@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/7/11, 9:19 AM",
          "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "10/25/10, 11:23 AM",
          "commitNameOld": "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 73.96,
          "commitsBetweenForRepo": 162,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    properties.put(name, new Property(type, inferred, inExterns, propertyNode));\n    return true;\n}",
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
          "functionStartLine": 228,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    properties.put(name, new Property(type, inferred, inExterns));\n+    properties.put(name, new Property(type, inferred, inExterns, propertyNode));\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean]",
            "newValue": "[name-String, type-JSType, inferred-boolean, inExterns-boolean, propertyNode-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/7/11, 9:19 AM",
          "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
          "commitAuthor": "bashir@google.com",
          "commitDateOld": "10/25/10, 11:23 AM",
          "commitNameOld": "12e777cea2b7a6e50792d6f07475a0c4bc4a6c72",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 73.96,
          "commitsBetweenForRepo": 162,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    properties.put(name, new Property(type, inferred, inExterns, propertyNode));\n    return true;\n}",
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
          "functionStartLine": 228,
          "functionName": "defineProperty",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,8 +1,8 @@\n @Override\n-boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns, Node propertyNode) {\n     if (hasOwnDeclaredProperty(name)) {\n         return false;\n     }\n-    properties.put(name, new Property(type, inferred, inExterns));\n+    properties.put(name, new Property(type, inferred, inExterns, propertyNode));\n     return true;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+boolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n+    if (hasOwnDeclaredProperty(name)) {\n+        return false;\n+    }\n+    properties.put(name, new Property(type, inferred, inExterns));\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nboolean defineProperty(String name, JSType type, boolean inferred, boolean inExterns) {\n    if (hasOwnDeclaredProperty(name)) {\n        return false;\n    }\n    properties.put(name, new Property(type, inferred, inExterns));\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 218,
      "functionName": "defineProperty",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}