{
  "origin": "codeshovel",
  "repositoryName": "Closure-113b",
  "repositoryPath": "/tmp/Closure-113b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "processPropertyGet",
  "functionId": "$processPropertyGet___getNode-PropertyGet",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 1029,
  "functionEndLine": 1044,
  "numCommitsSeen": 90,
  "timeTaken": 7536,
  "changeHistory": [
    "42dbcc0d7086141c3f0e5a2091b23424c5d87538",
    "8e80f7108073f1ecd04a9a5ff26c2876617a0b9a",
    "a6a4c718fb161101814a374e48c82ccffed6477f",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "42dbcc0d7086141c3f0e5a2091b23424c5d87538": "Ybodychange",
    "8e80f7108073f1ecd04a9a5ff26c2876617a0b9a": "Ybodychange",
    "a6a4c718fb161101814a374e48c82ccffed6477f": "Ybodychange",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42dbcc0d7086141c3f0e5a2091b23424c5d87538": {
      "type": "Ybodychange",
      "commitMessage": "Swap where we handle ES3 keyword property quoting from the IRFactory to the CodeGenerator so these properties will be properly type-checked and optimized. Also, in ES5 mode we no longer always quote object literal keys when they are an ES3 keyword.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d48523831\n",
      "commitDate": "6/25/13, 4:15 PM",
      "commitName": "42dbcc0d7086141c3f0e5a2091b23424c5d87538",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "6/21/13, 4:44 PM",
      "commitNameOld": "8e80f7108073f1ecd04a9a5ff26c2876617a0b9a",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processPropertyGet(PropertyGet getNode) {\n    Node leftChild \u003d transform(getNode.getTarget());\n    AstNode nodeProp \u003d getNode.getProperty();\n    Node rightChild \u003d transformAsString(nodeProp);\n    if (nodeProp instanceof Name \u0026\u0026 !isAllowedProp(((Name) nodeProp).getIdentifier())) {\n        errorReporter.warning(INVALID_ES3_PROP_NAME, sourceName, rightChild.getLineno(), \"\", rightChild.getCharno());\n    }\n    Node newNode \u003d newNode(Token.GETPROP, leftChild, rightChild);\n    newNode.setLineno(leftChild.getLineno());\n    newNode.setCharno(leftChild.getCharno());\n    maybeSetLengthFrom(newNode, getNode);\n    return newNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 1028,
      "functionName": "processPropertyGet",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,14 @@\n @Override\n Node processPropertyGet(PropertyGet getNode) {\n     Node leftChild \u003d transform(getNode.getTarget());\n     AstNode nodeProp \u003d getNode.getProperty();\n     Node rightChild \u003d transformAsString(nodeProp);\n-    int nodeType \u003d Token.GETPROP;\n     if (nodeProp instanceof Name \u0026\u0026 !isAllowedProp(((Name) nodeProp).getIdentifier())) {\n-        nodeType \u003d Token.GETELEM;\n         errorReporter.warning(INVALID_ES3_PROP_NAME, sourceName, rightChild.getLineno(), \"\", rightChild.getCharno());\n     }\n-    Node newNode \u003d newNode(nodeType, leftChild, rightChild);\n+    Node newNode \u003d newNode(Token.GETPROP, leftChild, rightChild);\n     newNode.setLineno(leftChild.getLineno());\n     newNode.setCharno(leftChild.getCharno());\n     maybeSetLengthFrom(newNode, getNode);\n     return newNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8e80f7108073f1ecd04a9a5ff26c2876617a0b9a": {
      "type": "Ybodychange",
      "commitMessage": "This does three things:\n1) It makes using es3 keywords and reserved words non fatal by default, it rewrites it to be a quoted property access.\n2) It improves the error message displayed when a property like this is seen.\n3) It introduces an ES3 diagnostic group that can be used to make these warnings errors again.\n\nFixes issue 1030\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d48372507\n",
      "commitDate": "6/21/13, 4:44 PM",
      "commitName": "8e80f7108073f1ecd04a9a5ff26c2876617a0b9a",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "5/23/13, 6:49 PM",
      "commitNameOld": "3e2929ae7ab273016405b68a74cfcbf6a29b594d",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 28.91,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processPropertyGet(PropertyGet getNode) {\n    Node leftChild \u003d transform(getNode.getTarget());\n    AstNode nodeProp \u003d getNode.getProperty();\n    Node rightChild \u003d transformAsString(nodeProp);\n    int nodeType \u003d Token.GETPROP;\n    if (nodeProp instanceof Name \u0026\u0026 !isAllowedProp(((Name) nodeProp).getIdentifier())) {\n        nodeType \u003d Token.GETELEM;\n        errorReporter.warning(INVALID_ES3_PROP_NAME, sourceName, rightChild.getLineno(), \"\", rightChild.getCharno());\n    }\n    Node newNode \u003d newNode(nodeType, leftChild, rightChild);\n    newNode.setLineno(leftChild.getLineno());\n    newNode.setCharno(leftChild.getCharno());\n    maybeSetLengthFrom(newNode, getNode);\n    return newNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 1029,
      "functionName": "processPropertyGet",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,16 @@\n @Override\n Node processPropertyGet(PropertyGet getNode) {\n     Node leftChild \u003d transform(getNode.getTarget());\n-    Node newNode \u003d newNode(Token.GETPROP, leftChild, transformAsString(getNode.getProperty()));\n+    AstNode nodeProp \u003d getNode.getProperty();\n+    Node rightChild \u003d transformAsString(nodeProp);\n+    int nodeType \u003d Token.GETPROP;\n+    if (nodeProp instanceof Name \u0026\u0026 !isAllowedProp(((Name) nodeProp).getIdentifier())) {\n+        nodeType \u003d Token.GETELEM;\n+        errorReporter.warning(INVALID_ES3_PROP_NAME, sourceName, rightChild.getLineno(), \"\", rightChild.getCharno());\n+    }\n+    Node newNode \u003d newNode(nodeType, leftChild, rightChild);\n     newNode.setLineno(leftChild.getLineno());\n     newNode.setCharno(leftChild.getCharno());\n     maybeSetLengthFrom(newNode, getNode);\n     return newNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a6a4c718fb161101814a374e48c82ccffed6477f": {
      "type": "Ybodychange",
      "commitMessage": "\nGetProp \u0026 Call nodes have incorrect Line, Offset, and Charno positions.\nCalls changed from position of \u0027(\u0027 to position of the call target name.\nGetProp line\u0026char no changed to be the position of the start of the left-most child, not the \u0027.\u0027 that the GetProp represents which was incorrect when on multiple lines.\n\nR\u003dbashir,nicksantos\nDELTA\u003d37  (9 added, 6 deleted, 22 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3882\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1651 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/30/11, 6:06 AM",
      "commitName": "a6a4c718fb161101814a374e48c82ccffed6477f",
      "commitAuthor": "tylerg@google.com",
      "commitDateOld": "11/22/11, 2:28 PM",
      "commitNameOld": "9dfbc803407e714f9744555a1c9e7c4230f1816d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 7.65,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processPropertyGet(PropertyGet getNode) {\n    Node leftChild \u003d transform(getNode.getTarget());\n    Node newNode \u003d newNode(Token.GETPROP, leftChild, transformAsString(getNode.getProperty()));\n    newNode.setLineno(leftChild.getLineno());\n    newNode.setCharno(leftChild.getCharno());\n    maybeSetLengthFrom(newNode, getNode);\n    return newNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 816,
      "functionName": "processPropertyGet",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,9 @@\n @Override\n Node processPropertyGet(PropertyGet getNode) {\n-    return newNode(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n+    Node leftChild \u003d transform(getNode.getTarget());\n+    Node newNode \u003d newNode(Token.GETPROP, leftChild, transformAsString(getNode.getProperty()));\n+    newNode.setLineno(leftChild.getLineno());\n+    newNode.setCharno(leftChild.getCharno());\n+    maybeSetLengthFrom(newNode, getNode);\n+    return newNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/02 17:44:46 by nicksantos\n\n        fix RAI when comparing two types that are always equal.\n        Fixes issue 172\n\n        R\u003dacleung\n        DELTA\u003d20  (19 added, 0 deleted, 1 changed)\n\nChange on 2010/07/03 08:52:08 by johnlenz\n\n        Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.\n\n        R\u003dacleung\n        DELTA\u003d30  (0 added, 2 deleted, 28 changed)\n\nChange on 2010/07/07 11:56:02 by johnlenz\n\n        Reduce the memory cost of generating source maps by reducing the number\n        of property structure objects that are created.  We do this by taking\n        advantage of the fact the property list objects are immutable and can be\n        shared between Nodes.  The source file prop is then shared between\n        every Node in the AST for a given source file, reducing the the number\n        of property nodes used to store this information from O(ast-nodes) to\n        O(source-files).\n\n        R\u003dbowdidge\n        DELTA\u003d122  (68 added, 1 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/7/10, 3:14 PM",
      "commitName": "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/29/10, 2:10 PM",
      "commitNameOld": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processPropertyGet(PropertyGet getNode) {\n    return newNode(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 692,
      "functionName": "processPropertyGet",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n Node processPropertyGet(PropertyGet getNode) {\n-    return new Node(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n+    return newNode(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+Node processPropertyGet(PropertyGet getNode) {\n+    return new Node(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nNode processPropertyGet(PropertyGet getNode) {\n    return new Node(Token.GETPROP, transform(getNode.getTarget()), transformAsString(getNode.getProperty()));\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 633,
      "functionName": "processPropertyGet",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}