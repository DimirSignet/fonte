{
  "origin": "codeshovel",
  "repositoryName": "Closure-113b",
  "repositoryPath": "/tmp/Closure-113b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProcessClosurePrimitives.java",
  "functionName": "processRequireCall",
  "functionId": "processRequireCall___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "functionAnnotation": "",
  "functionDoc": "Handles a goog.require call.\n",
  "functionStartLine": 295,
  "functionEndLine": 334,
  "numCommitsSeen": 62,
  "timeTaken": 4463,
  "changeHistory": [
    "87071ddf324c3885361f0375b84e15c7cd62283d",
    "cf8d2a915893d370e3f883c185dec7ef3b3015e8",
    "c559972fbc64b616050017adeffb079d0b8801c0",
    "9a66dcbece400f60c7b2f71bf7b3125331cd4164",
    "83f6917e503ec7b32570af9e986ad749042d9dcf",
    "279196b617c5de1ade21110979b6b13d8eda6342",
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b"
  ],
  "changeHistoryShort": {
    "87071ddf324c3885361f0375b84e15c7cd62283d": "Ybodychange",
    "cf8d2a915893d370e3f883c185dec7ef3b3015e8": "Ybodychange",
    "c559972fbc64b616050017adeffb079d0b8801c0": "Ybodychange",
    "9a66dcbece400f60c7b2f71bf7b3125331cd4164": "Ybodychange",
    "83f6917e503ec7b32570af9e986ad749042d9dcf": "Ybodychange",
    "279196b617c5de1ade21110979b6b13d8eda6342": "Ybodychange",
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": "Ybodychange",
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "87071ddf324c3885361f0375b84e15c7cd62283d": {
      "type": "Ybodychange",
      "commitMessage": "The error level shouldn\u0027t effect compiler output. Fixes issue 1079\n",
      "commitDate": "10/2/13, 10:14 PM",
      "commitName": "87071ddf324c3885361f0375b84e15c7cd62283d",
      "commitAuthor": "Nick Santos",
      "commitDateOld": "3/20/13, 9:48 AM",
      "commitNameOld": "f423b0e9d4b2c0f3f74b3850dd5a35fd89ebc8a5",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 196.52,
      "commitsBetweenForRepo": 322,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyLastArgumentIsString(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule \u003d provided.explicitModule;\n            Preconditions.checkNotNull(providedModule);\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n            }\n        }\n        maybeAddToSymbolTable(left);\n        maybeAddStringNodeToSymbolTable(arg);\n        if (provided !\u003d null) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 295,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,24 +1,24 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyLastArgumentIsString(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule providedModule \u003d provided.explicitModule;\n             Preconditions.checkNotNull(providedModule);\n             JSModule module \u003d t.getModule();\n             if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                 compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n             }\n         }\n         maybeAddToSymbolTable(left);\n         maybeAddStringNodeToSymbolTable(arg);\n-        if (provided !\u003d null || requiresLevel.isOn()) {\n+        if (provided !\u003d null) {\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cf8d2a915893d370e3f883c185dec7ef3b3015e8": {
      "type": "Ybodychange",
      "commitMessage": "Add compiler support for goog.define\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d43915701\n",
      "commitDate": "3/14/13, 1:18 PM",
      "commitName": "cf8d2a915893d370e3f883c185dec7ef3b3015e8",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "2/12/13, 1:04 PM",
      "commitNameOld": "e24d72c26b2e2f1c9bbe8cd3e1d641a3cce46543",
      "commitAuthorOld": "Nick Santos",
      "daysBetweenCommits": 29.97,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyLastArgumentIsString(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule \u003d provided.explicitModule;\n            Preconditions.checkNotNull(providedModule);\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n            }\n        }\n        maybeAddToSymbolTable(left);\n        maybeAddStringNodeToSymbolTable(arg);\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 295,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,24 +1,24 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n-    if (verifyArgument(t, left, arg)) {\n+    if (verifyLastArgumentIsString(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule providedModule \u003d provided.explicitModule;\n             Preconditions.checkNotNull(providedModule);\n             JSModule module \u003d t.getModule();\n             if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                 compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n             }\n         }\n         maybeAddToSymbolTable(left);\n         maybeAddStringNodeToSymbolTable(arg);\n         if (provided !\u003d null || requiresLevel.isOn()) {\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c559972fbc64b616050017adeffb079d0b8801c0": {
      "type": "Ybodychange",
      "commitMessage": "\nMake sure that provide\u0027d strings get added to the symbol table,\neven when there are crazy errors\n\nR\u003djohnlenz\nDELTA\u003d15  (13 added, 2 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3705\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1597 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/14/11, 5:13 PM",
      "commitName": "c559972fbc64b616050017adeffb079d0b8801c0",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 4.36,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule \u003d provided.explicitModule;\n            Preconditions.checkNotNull(providedModule);\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n            }\n        }\n        maybeAddToSymbolTable(left);\n        maybeAddStringNodeToSymbolTable(arg);\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 270,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,24 +1,24 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyArgument(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule providedModule \u003d provided.explicitModule;\n             Preconditions.checkNotNull(providedModule);\n             JSModule module \u003d t.getModule();\n             if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                 compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n             }\n         }\n+        maybeAddToSymbolTable(left);\n+        maybeAddStringNodeToSymbolTable(arg);\n         if (provided !\u003d null || requiresLevel.isOn()) {\n-            maybeAddToSymbolTable(left);\n-            maybeAddStringNodeToSymbolTable(arg);\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9a66dcbece400f60c7b2f71bf7b3125331cd4164": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd symbol table references for closure primitives\n\nR\u003dacleung\nDELTA\u003d136  (106 added, 8 deleted, 22 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2928\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1337 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/8/11, 1:44 PM",
      "commitName": "9a66dcbece400f60c7b2f71bf7b3125331cd4164",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/29/11, 9:15 AM",
      "commitNameOld": "fa08f09b215a9ddfb9bfd3722f712505167a7697",
      "commitAuthorOld": "tylerg@google.com",
      "daysBetweenCommits": 10.19,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule \u003d provided.explicitModule;\n            Preconditions.checkNotNull(providedModule);\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n            }\n        }\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            maybeAddToSymbolTable(left);\n            maybeAddStringNodeToSymbolTable(arg);\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 270,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,22 +1,24 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyArgument(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule providedModule \u003d provided.explicitModule;\n             Preconditions.checkNotNull(providedModule);\n             JSModule module \u003d t.getModule();\n             if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                 compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n             }\n         }\n         if (provided !\u003d null || requiresLevel.isOn()) {\n+            maybeAddToSymbolTable(left);\n+            maybeAddStringNodeToSymbolTable(arg);\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83f6917e503ec7b32570af9e986ad749042d9dcf": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/27 09:25:39 by dcc\n\n\tChange NameReferenceGraph#getDefinitionsReferencedAt() to return null when there are no definitions found for a node.\n\tThis had previously been returning a singleton list with an UnknownDefinition, which is used to mean \"we found a\n\tdefinition, but we don\u0027t know what kind of definition is is\" in other contexts.\n\n\tR\u003dacleung\n\tDELTA\u003d22  (19 added, 3 deleted, 0 changed)\n\nChange on 2010/07/27 09:30:41 by nicksantos\n\n\tWhen checking provide/require order, always use the module\n\twhere there was an explicit goog.provide.\n\n\tR\u003djohnlenz\n\tDELTA\u003d53  (49 added, 1 deleted, 3 changed)\n\nChange on 2010/07/27 09:49:50 by dcc\n\n\tInitial sketch of a side effects analysis.\n\n\tR\u003dacleung\n\tDELTA\u003d558  (558 added, 0 deleted, 0 changed)\n\nChange on 2010/07/27 09:49:51 by johnlenz\n\n\tFirst phase of supporting data member on interface type declarations.\n\n\tR\u003dnicksantos\n\tDELTA\u003d45  (20 added, 1 deleted, 24 changed)\n\nChange on 2010/07/27 10:29:17 by dhans\n\n\tMinor typo in a comment fixed.\n\n\tR\u003djohnlenz\n\tDELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/07/27 14:43:46 by chrisn\n\n\tFix module set compilation to generate per-jsmodule sourcemaps by calling reset. Necessitates making reset public.\n\n\tR\u003dkevinz,johnlenz\n\tDELTA\u003d34  (4 added, 12 deleted, 18 changed)\n\nChange on 2010/07/27 17:13:04 by acleung\n\n\tMapsTest Update\n\n\tR\u003dasalaev,johnlenz\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d73001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@314 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/27/10, 6:42 PM",
      "commitName": "83f6917e503ec7b32570af9e986ad749042d9dcf",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/5/10, 4:36 PM",
      "commitNameOld": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 83.09,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule \u003d provided.explicitModule;\n            Preconditions.checkNotNull(providedModule);\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n            }\n        }\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 237,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,20 +1,22 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyArgument(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n+            JSModule providedModule \u003d provided.explicitModule;\n+            Preconditions.checkNotNull(providedModule);\n             JSModule module \u003d t.getModule();\n-            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d provided.firstModule \u0026\u0026 !moduleGraph.dependsOn(module, provided.firstModule)) {\n-                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n+            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d providedModule \u0026\u0026 !moduleGraph.dependsOn(module, providedModule)) {\n+                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, providedModule.getName(), module.getName()));\n             }\n         }\n         if (provided !\u003d null || requiresLevel.isOn()) {\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "279196b617c5de1ade21110979b6b13d8eda6342": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/5/10, 4:36 PM",
      "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 12.21,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule module \u003d t.getModule();\n            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d provided.firstModule \u0026\u0026 !moduleGraph.dependsOn(module, provided.firstModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n            }\n        }\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 237,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,20 +1,20 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyArgument(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule module \u003d t.getModule();\n-            if (module !\u003d provided.firstModule \u0026\u0026 !compiler.getModuleGraph().dependsOn(module, provided.firstModule)) {\n+            if (moduleGraph !\u003d null \u0026\u0026 module !\u003d provided.firstModule \u0026\u0026 !moduleGraph.dependsOn(module, provided.firstModule)) {\n                 compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n             }\n         }\n         if (provided !\u003d null || requiresLevel.isOn()) {\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": {
      "type": "Ybodychange",
      "commitMessage": "Remove circular dependency between error-reporting and the rest\nof the compiler. (Nick)\nR\u003dalan\nDELTA\u003d152  (27 added, 28 deleted, 97 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@159 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/29/10, 7:04 AM",
      "commitName": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/26/10, 3:45 PM",
      "commitNameOld": "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 30.6,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule module \u003d t.getModule();\n            if (module !\u003d provided.firstModule \u0026\u0026 !compiler.getModuleGraph().dependsOn(module, provided.firstModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n            }\n        }\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 241,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n",
      "diff": "@@ -1,20 +1,20 @@\n private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n     Node left \u003d n.getFirstChild();\n     Node arg \u003d left.getNext();\n     if (verifyArgument(t, left, arg)) {\n         String ns \u003d arg.getString();\n         ProvidedName provided \u003d providedNames.get(ns);\n         if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n             unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n         } else {\n             JSModule module \u003d t.getModule();\n             if (module !\u003d provided.firstModule \u0026\u0026 !compiler.getModuleGraph().dependsOn(module, provided.firstModule)) {\n-                compiler.report(JSError.make(t, n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n+                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n             }\n         }\n         if (provided !\u003d null || requiresLevel.isOn()) {\n             parent.detachFromParent();\n             compiler.reportCodeChange();\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": {
      "type": "Yintroduced",
      "commitMessage": "Fix a bunch of passes to preserve more type information.\n\nFix goog.provide/goog.require handling to work in the presence of modules.\n\nImprove a bunch of type annotations in gecko_dom.\n\nMake NameAnalyzer use the Graph package.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@95 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/8/10, 11:30 AM",
      "commitName": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,20 @@\n+private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n+    Node left \u003d n.getFirstChild();\n+    Node arg \u003d left.getNext();\n+    if (verifyArgument(t, left, arg)) {\n+        String ns \u003d arg.getString();\n+        ProvidedName provided \u003d providedNames.get(ns);\n+        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n+            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n+        } else {\n+            JSModule module \u003d t.getModule();\n+            if (module !\u003d provided.firstModule \u0026\u0026 !compiler.getModuleGraph().dependsOn(module, provided.firstModule)) {\n+                compiler.report(JSError.make(t, n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n+            }\n+        }\n+        if (provided !\u003d null || requiresLevel.isOn()) {\n+            parent.detachFromParent();\n+            compiler.reportCodeChange();\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left \u003d n.getFirstChild();\n    Node arg \u003d left.getNext();\n    if (verifyArgument(t, left, arg)) {\n        String ns \u003d arg.getString();\n        ProvidedName provided \u003d providedNames.get(ns);\n        if (provided \u003d\u003d null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule module \u003d t.getModule();\n            if (module !\u003d provided.firstModule \u0026\u0026 !compiler.getModuleGraph().dependsOn(module, provided.firstModule)) {\n                compiler.report(JSError.make(t, n, XMODULE_REQUIRE_ERROR, ns, provided.firstModule.getName(), module.getName()));\n            }\n        }\n        if (provided !\u003d null || requiresLevel.isOn()) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 240,
      "functionName": "processRequireCall",
      "functionAnnotation": "",
      "functionDoc": "Handles a goog.require call.\n"
    }
  }
}