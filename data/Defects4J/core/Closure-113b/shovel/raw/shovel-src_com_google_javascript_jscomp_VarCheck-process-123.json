{
  "origin": "codeshovel",
  "repositoryName": "Closure-113b",
  "repositoryPath": "/tmp/Closure-113b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VarCheck.java",
  "functionName": "process",
  "functionId": "process___externs-Node__root-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/VarCheck.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 123,
  "functionEndLine": 139,
  "numCommitsSeen": 49,
  "timeTaken": 1383,
  "changeHistory": [
    "fabe711b0c888bab57dc2dfc79044f1111d56416",
    "b9bc1534921f1e98da5a373e39ea2d71a4a39175",
    "0593df4f98c349d98fd00595966477494a0bcd29",
    "5da32cba7b68d69acfc535f57f21d652475d256f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "fabe711b0c888bab57dc2dfc79044f1111d56416": "Ybodychange",
    "b9bc1534921f1e98da5a373e39ea2d71a4a39175": "Ybodychange",
    "0593df4f98c349d98fd00595966477494a0bcd29": "Ybodychange",
    "5da32cba7b68d69acfc535f57f21d652475d256f": "Ymultichange(Yannotationchange,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fabe711b0c888bab57dc2dfc79044f1111d56416": {
      "type": "Ybodychange",
      "commitMessage": "Move variable redeclaration check from SyntacticScopeCreator to VarCheck.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d51577979\n",
      "commitDate": "8/29/13, 5:23 PM",
      "commitName": "fabe711b0c888bab57dc2dfc79044f1111d56416",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "8/15/13, 6:08 PM",
      "commitNameOld": "659c5484f5cb439436b44f38124adc1b24c80809",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 13.97,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    ScopeCreator scopeCreator \u003d createScopeCreator();\n    if (!sanityCheck) {\n        NodeTraversal traversal \u003d new NodeTraversal(compiler, new NameRefInExternsCheck(), scopeCreator);\n        traversal.traverse(externs);\n    }\n    NodeTraversal t \u003d new NodeTraversal(compiler, this, scopeCreator);\n    t.traverseRoots(Lists.newArrayList(externs, root));\n    for (String varName : varsToDeclareInExterns) {\n        createSynthesizedExternVar(varName);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/VarCheck.java",
      "functionStartLine": 122,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,13 @@\n @Override\n public void process(Node externs, Node root) {\n+    ScopeCreator scopeCreator \u003d createScopeCreator();\n     if (!sanityCheck) {\n-        NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n+        NodeTraversal traversal \u003d new NodeTraversal(compiler, new NameRefInExternsCheck(), scopeCreator);\n+        traversal.traverse(externs);\n     }\n-    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n+    NodeTraversal t \u003d new NodeTraversal(compiler, this, scopeCreator);\n+    t.traverseRoots(Lists.newArrayList(externs, root));\n     for (String varName : varsToDeclareInExterns) {\n         createSynthesizedExternVar(varName);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b9bc1534921f1e98da5a373e39ea2d71a4a39175": {
      "type": "Ybodychange",
      "commitMessage": "\nfix a nasty edge case in how we handle references in externs when\naliasExternals is on.\n\nR\u003dacleung\nDELTA\u003d86  (69 added, 0 deleted, 17 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d206076\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@401 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/1/10, 7:18 AM",
      "commitName": "b9bc1534921f1e98da5a373e39ea2d71a4a39175",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/31/10, 11:22 AM",
      "commitNameOld": "0593df4f98c349d98fd00595966477494a0bcd29",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.83,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    if (!sanityCheck) {\n        NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n    }\n    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n    for (String varName : varsToDeclareInExterns) {\n        createSynthesizedExternVar(varName);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/VarCheck.java",
      "functionStartLine": 99,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,10 @@\n @Override\n public void process(Node externs, Node root) {\n-    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n+    if (!sanityCheck) {\n+        NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n+    }\n     NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n     for (String varName : varsToDeclareInExterns) {\n         createSynthesizedExternVar(varName);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0593df4f98c349d98fd00595966477494a0bcd29": {
      "type": "Ybodychange",
      "commitMessage": "\nIf a variable is referenced from the externs, but not declared\nin the externs, then create a synthetic extern for it. This\nprevents a compiler crash where code removal removes all\nreferences to a variable in normal code, but there are still\nreferences in the externs.\n\nR\u003dacleung\nDELTA\u003d143  (103 added, 24 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d203478\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@397 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/31/10, 11:22 AM",
      "commitName": "0593df4f98c349d98fd00595966477494a0bcd29",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/26/10, 4:07 PM",
      "commitNameOld": "4031a54f71a1df311b0b9ab24640297e0d526bfe",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.8,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n    for (String varName : varsToDeclareInExterns) {\n        createSynthesizedExternVar(varName);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/VarCheck.java",
      "functionStartLine": 99,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,8 @@\n @Override\n public void process(Node externs, Node root) {\n     NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n     NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n+    for (String varName : varsToDeclareInExterns) {\n+        createSynthesizedExternVar(varName);\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5da32cba7b68d69acfc535f57f21d652475d256f": {
      "type": "Ymultichange(Yannotationchange,Ydocchange)",
      "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/19/10, 4:28 PM",
      "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yannotationchange",
          "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/19/10, 4:28 PM",
          "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/5/10, 12:30 PM",
          "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n}",
          "path": "src/com/google/javascript/jscomp/VarCheck.java",
          "functionStartLine": 82,
          "functionName": "process",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,5 @@\n+@Override\n public void process(Node externs, Node root) {\n     NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n     NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/19/10, 4:28 PM",
          "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/5/10, 12:30 PM",
          "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.17,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n}",
          "path": "src/com/google/javascript/jscomp/VarCheck.java",
          "functionStartLine": 82,
          "functionName": "process",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,5 @@\n+@Override\n public void process(Node externs, Node root) {\n     NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n     NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@inheritDoc}\n",
            "newValue": ""
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+public void process(Node externs, Node root) {\n+    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n+    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());\n    NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this);\n}",
      "path": "src/com/google/javascript/jscomp/VarCheck.java",
      "functionStartLine": 81,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n"
    }
  }
}