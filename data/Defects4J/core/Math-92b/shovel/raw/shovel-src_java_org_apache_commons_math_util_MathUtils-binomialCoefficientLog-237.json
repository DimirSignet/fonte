{
  "origin": "codeshovel",
  "repositoryName": "Math-92b",
  "repositoryPath": "/tmp/Math-92b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MathUtils.java",
  "functionName": "binomialCoefficientLog",
  "functionId": "binomialCoefficientLog___n-int(modifiers-final)__k-int(modifiers-final)",
  "sourceFilePath": "src/java/org/apache/commons/math/util/MathUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\u003c/p\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
  "functionStartLine": 237,
  "functionEndLine": 265,
  "numCommitsSeen": 51,
  "timeTaken": 1523,
  "changeHistory": [
    "479f7773075c136b43a9cf120704c77c0a4880ab",
    "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
    "206201617aae648e12f63d4ab8aa9751157e7e63",
    "b71d09ea4a1af895b965a703b5048d3cadba53d9",
    "04c3ab9b355b2c52e0178533068dd22586c0eabf",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "479f7773075c136b43a9cf120704c77c0a4880ab": "Ydocchange",
    "b1ade04fc274a2030fcf1df2c760755eeb83bf1b": "Ymultichange(Ydocchange,Yformatchange)",
    "206201617aae648e12f63d4ab8aa9751157e7e63": "Ydocchange",
    "b71d09ea4a1af895b965a703b5048d3cadba53d9": "Ymultichange(Ybodychange,Ydocchange)",
    "04c3ab9b355b2c52e0178533068dd22586c0eabf": "Yformatchange",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "479f7773075c136b43a9cf120704c77c0a4880ab": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only.  Added missing \u003c/p\u003e\u0027s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@617953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/2/08, 9:54 PM",
      "commitName": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/2/08, 8:39 AM",
      "commitNameOld": "96ef54d716955b6e8f8e232813a0470d982ad1af",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.55,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 225,
      "functionName": "binomialCoefficientLog",
      "functionAnnotation": "",
      "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\u003c/p\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
        "newValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\u003c/p\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n"
      }
    },
    "b1ade04fc274a2030fcf1df2c760755eeb83bf1b": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "PR: 35904\nChanged rounding methods to not rely on BigDecimal conversions which was causing numerical error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@231029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/9/05, 6:10 AM",
      "commitName": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
      "commitAuthor": "Brent Worden",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "PR: 35904\nChanged rounding methods to not rely on BigDecimal conversions which was causing numerical error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@231029 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/9/05, 6:10 AM",
          "commitName": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
          "commitAuthor": "Brent Worden",
          "commitDateOld": "7/30/05, 12:25 AM",
          "commitNameOld": "7153fa9be229ee078c7026dba8c9b2be3d791ed2",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 10.24,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 161,
          "functionName": "binomialCoefficientLog",
          "functionAnnotation": "",
          "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
            "newValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "PR: 35904\nChanged rounding methods to not rely on BigDecimal conversions which was causing numerical error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@231029 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/9/05, 6:10 AM",
          "commitName": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
          "commitAuthor": "Brent Worden",
          "commitDateOld": "7/30/05, 12:25 AM",
          "commitNameOld": "7153fa9be229ee078c7026dba8c9b2be3d791ed2",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 10.24,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 161,
          "functionName": "binomialCoefficientLog",
          "functionAnnotation": "",
          "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the \u003ca\nhref\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e Binomial\nCoefficient\u003c/a\u003e, \"\u003ccode\u003en choose k\u003c/code\u003e\", the number of\n\u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from an\n\u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "206201617aae648e12f63d4ab8aa9751157e7e63": {
      "type": "Ydocchange",
      "commitMessage": "Documented some runtime exceptions.\nPR: 29013\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141231 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/19/04, 7:16 AM",
      "commitName": "206201617aae648e12f63d4ab8aa9751157e7e63",
      "commitAuthor": "Brent Worden",
      "commitDateOld": "5/8/04, 9:36 PM",
      "commitNameOld": "b71d09ea4a1af895b965a703b5048d3cadba53d9",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 10.4,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 314,
      "functionName": "binomialCoefficientLog",
      "functionAnnotation": "",
      "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n",
        "newValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n@throws IllegalArgumentException if preconditions are not met.\n"
      }
    },
    "b71d09ea4a1af895b965a703b5048d3cadba53d9": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Changed binomial coeffient computations to allow n \u003d k \u003d 0,\nreturning 1 in this case.  This is standard and also required\nfor degenerate hypergeometric distribution computations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141217 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/8/04, 9:36 PM",
      "commitName": "b71d09ea4a1af895b965a703b5048d3cadba53d9",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Changed binomial coeffient computations to allow n \u003d k \u003d 0,\nreturning 1 in this case.  This is standard and also required\nfor degenerate hypergeometric distribution computations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141217 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/8/04, 9:36 PM",
          "commitName": "b71d09ea4a1af895b965a703b5048d3cadba53d9",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "4/26/04, 9:37 PM",
          "commitNameOld": "d877581e783f778f6204e1b607cd29f16b897a3e",
          "commitAuthorOld": "Brent Worden",
          "daysBetweenCommits": 12.0,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 309,
          "functionName": "binomialCoefficientLog",
          "functionAnnotation": "",
          "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n",
          "diff": "@@ -1,22 +1,22 @@\n public static double binomialCoefficientLog(final int n, final int k) {\n     if (n \u003c k) {\n         throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n     }\n-    if (n \u003c\u003d 0) {\n-        throw new IllegalArgumentException(\"must have n \u003e 0 for binomial coefficient (n,k)\");\n+    if (n \u003c 0) {\n+        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n     }\n     if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n         return 0;\n     }\n     if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n         return Math.log((double) n);\n     }\n     double logSum \u003d 0;\n     for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n         logSum +\u003d Math.log((double) i);\n     }\n     for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n         logSum -\u003d Math.log((double) i);\n     }\n     return logSum;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Changed binomial coeffient computations to allow n \u003d k \u003d 0,\nreturning 1 in this case.  This is standard and also required\nfor degenerate hypergeometric distribution computations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141217 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/8/04, 9:36 PM",
          "commitName": "b71d09ea4a1af895b965a703b5048d3cadba53d9",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "4/26/04, 9:37 PM",
          "commitNameOld": "d877581e783f778f6204e1b607cd29f16b897a3e",
          "commitAuthorOld": "Brent Worden",
          "daysBetweenCommits": 12.0,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c 0) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 309,
          "functionName": "binomialCoefficientLog",
          "functionAnnotation": "",
          "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n",
          "diff": "@@ -1,22 +1,22 @@\n public static double binomialCoefficientLog(final int n, final int k) {\n     if (n \u003c k) {\n         throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n     }\n-    if (n \u003c\u003d 0) {\n-        throw new IllegalArgumentException(\"must have n \u003e 0 for binomial coefficient (n,k)\");\n+    if (n \u003c 0) {\n+        throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for binomial coefficient (n,k)\");\n     }\n     if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n         return 0;\n     }\n     if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n         return Math.log((double) n);\n     }\n     double logSum \u003d 0;\n     for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n         logSum +\u003d Math.log((double) i);\n     }\n     for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n         logSum -\u003d Math.log((double) i);\n     }\n     return logSum;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n",
            "newValue": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c\u003d k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n"
          }
        }
      ]
    },
    "04c3ab9b355b2c52e0178533068dd22586c0eabf": {
      "type": "Yformatchange",
      "commitMessage": "Improved Javadoc and fixed comparison error in indicator(short).\nContributed by: Christopher Schuck\nPr #28194\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/4/04, 8:47 PM",
      "commitName": "04c3ab9b355b2c52e0178533068dd22586c0eabf",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/21/04, 1:35 PM",
      "commitNameOld": "5d66d93e57e142760603024ce1429f2d229a6c8f",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 43.26,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c\u003d 0) {\n        throw new IllegalArgumentException(\"must have n \u003e 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 303,
      "functionName": "binomialCoefficientLog",
      "functionAnnotation": "",
      "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n",
      "diff": "",
      "extendedDetails": {}
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,22 @@\n+public static double binomialCoefficientLog(final int n, final int k) {\n+    if (n \u003c k) {\n+        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n+    }\n+    if (n \u003c\u003d 0) {\n+        throw new IllegalArgumentException(\"must have n \u003e 0 for binomial coefficient (n,k)\");\n+    }\n+    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n+        return 0;\n+    }\n+    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n+        return Math.log((double) n);\n+    }\n+    double logSum \u003d 0;\n+    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n+        logSum +\u003d Math.log((double) i);\n+    }\n+    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n+        logSum -\u003d Math.log((double) i);\n+    }\n+    return logSum;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static double binomialCoefficientLog(final int n, final int k) {\n    if (n \u003c k) {\n        throw new IllegalArgumentException(\"must have n \u003e\u003d k for binomial coefficient (n,k)\");\n    }\n    if (n \u003c\u003d 0) {\n        throw new IllegalArgumentException(\"must have n \u003e 0 for binomial coefficient (n,k)\");\n    }\n    if ((n \u003d\u003d k) || (k \u003d\u003d 0)) {\n        return 0;\n    }\n    if ((k \u003d\u003d 1) || (k \u003d\u003d n - 1)) {\n        return Math.log((double) n);\n    }\n    double logSum \u003d 0;\n    for (int i \u003d k + 1; i \u003c\u003d n; i++) {\n        logSum +\u003d Math.log((double) i);\n    }\n    for (int i \u003d 2; i \u003c\u003d n - k; i++) {\n        logSum -\u003d Math.log((double) i);\n    }\n    return logSum;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 246,
      "functionName": "binomialCoefficientLog",
      "functionAnnotation": "",
      "functionDoc": "Returns the natural \u003ccode\u003elog\u003c/code\u003e of the\n\u003ca href\u003d\"http://mathworld.wolfram.com/BinomialCoefficient.html\"\u003e\nBinomial Coefficient\u003c/a\u003e,  \"\u003ccode\u003en choose k\u003c/code\u003e\",\nthe number of \u003ccode\u003ek\u003c/code\u003e-element subsets that can be selected from\nan \u003ccode\u003en\u003c/code\u003e-element set.\n\u003cp\u003e\n\u003cStrong\u003ePreconditions\u003c/strong\u003e:\u003cul\u003e\n\u003cli\u003e \u003ccode\u003e0 \u003c k \u003c\u003d n \u003c/code\u003e (otherwise\n     \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown)\u003c/li\u003e\n\u003c/ul\u003e\n\n@param n the size of the set\n@param k the size of the subsets to be counted\n@return \u003ccode\u003en choose k\u003c/code\u003e\n"
    }
  }
}