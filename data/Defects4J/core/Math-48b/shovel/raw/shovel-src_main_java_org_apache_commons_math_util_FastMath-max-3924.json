{
  "origin": "codeshovel",
  "repositoryName": "Math-48b",
  "repositoryPath": "/tmp/Math-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FastMath.java",
  "functionName": "max",
  "functionId": "max___a-double(modifiers-final)__b-double(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math/util/FastMath.java",
  "functionAnnotation": "",
  "functionDoc": "Compute the maximum of two values\n\n@param a first value\n@param b second value\n@return b if a is lesser or equal to b, a otherwise\n",
  "functionStartLine": 3924,
  "functionEndLine": 3942,
  "numCommitsSeen": 51,
  "timeTaken": 20807,
  "changeHistory": [
    "e260d84f6032cb9fdd124dfcfe1280f82096d699",
    "5e873783294c04f2a8eb47518e808445b2b2900c",
    "80b1e90b42a34856b61cec628fcea6633d1000cd"
  ],
  "changeHistoryShort": {
    "e260d84f6032cb9fdd124dfcfe1280f82096d699": "Ybodychange",
    "5e873783294c04f2a8eb47518e808445b2b2900c": "Ybodychange",
    "80b1e90b42a34856b61cec628fcea6633d1000cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e260d84f6032cb9fdd124dfcfe1280f82096d699": {
      "type": "Ybodychange",
      "commitMessage": "MATH-493 FastMath min and max fail with (Infinity,-Infinity) and (0,0, -0.0)\nFixing (0,0, -0.0) by using code from Harmony.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1062758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/11, 4:47 AM",
      "commitName": "e260d84f6032cb9fdd124dfcfe1280f82096d699",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/23/11, 2:37 PM",
      "commitNameOld": "10c5911f14592ff47b2f1614eeb0f171e1a91cfd",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.59,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double max(final double a, final double b) {\n    if (a \u003e b) {\n        return a;\n    }\n    if (a \u003c b) {\n        return b;\n    }\n    if (a !\u003d b) {\n        return Double.NaN;\n    }\n    long bits \u003d Double.doubleToRawLongBits(a);\n    if (bits \u003d\u003d 0x8000000000000000L) {\n        return b;\n    }\n    return a;\n}",
      "path": "src/main/java/org/apache/commons/math/util/FastMath.java",
      "functionStartLine": 3880,
      "functionName": "max",
      "functionAnnotation": "",
      "functionDoc": "Compute the maximum of two values\n\n@param a first value\n@param b second value\n@return b if a is lesser or equal to b, a otherwise\n",
      "diff": "@@ -1,3 +1,16 @@\n public static double max(final double a, final double b) {\n-    return (a \u003c\u003d b) ? b : ((a !\u003d a || b !\u003d b) ? Double.NaN : a);\n+    if (a \u003e b) {\n+        return a;\n+    }\n+    if (a \u003c b) {\n+        return b;\n+    }\n+    if (a !\u003d b) {\n+        return Double.NaN;\n+    }\n+    long bits \u003d Double.doubleToRawLongBits(a);\n+    if (bits \u003d\u003d 0x8000000000000000L) {\n+        return b;\n+    }\n+    return a;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5e873783294c04f2a8eb47518e808445b2b2900c": {
      "type": "Ybodychange",
      "commitMessage": "MATH-493 FastMath min and max fail with (Infinity,-Infinity)\n(still to fix zero case)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1062040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/21/11, 1:46 PM",
      "commitName": "5e873783294c04f2a8eb47518e808445b2b2900c",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/21/11, 12:24 PM",
      "commitNameOld": "97d623a094d6d0415282016a6ebaf49d6d147c29",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static double max(final double a, final double b) {\n    return (a \u003c\u003d b) ? b : ((a !\u003d a || b !\u003d b) ? Double.NaN : a);\n}",
      "path": "src/main/java/org/apache/commons/math/util/FastMath.java",
      "functionStartLine": 3667,
      "functionName": "max",
      "functionAnnotation": "",
      "functionDoc": "Compute the maximum of two values\n\n@param a first value\n@param b second value\n@return b if a is lesser or equal to b, a otherwise\n",
      "diff": "@@ -1,3 +1,3 @@\n public static double max(final double a, final double b) {\n-    return (a \u003c\u003d b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);\n+    return (a \u003c\u003d b) ? b : ((a !\u003d a || b !\u003d b) ? Double.NaN : a);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "80b1e90b42a34856b61cec628fcea6633d1000cd": {
      "type": "Yintroduced",
      "commitMessage": "added FastMath and used it everywhere in replacement of java.util.Math\nthe unit tests have not been added yet (waiting for dfp library addition)\nJIRA: MATH-375\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@990658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/29/10, 3:04 PM",
      "commitName": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,3 @@\n+public static double max(final double a, final double b) {\n+    return (a \u003c\u003d b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static double max(final double a, final double b) {\n    return (a \u003c\u003d b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);\n}",
      "path": "src/main/java/org/apache/commons/math/util/FastMath.java",
      "functionStartLine": 2963,
      "functionName": "max",
      "functionAnnotation": "",
      "functionDoc": "Compute the maximum of two values\n\n@param a first value\n@param b second value\n@return b if a is lesser or equal to b, a otherwise\n"
    }
  }
}