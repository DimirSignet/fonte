{
  "origin": "codeshovel",
  "repositoryName": "Codec-3b",
  "repositoryPath": "/tmp/Codec-3b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DoubleMetaphone.java",
  "functionName": "handleG",
  "functionId": "handleG___value-String__result-DoubleMetaphoneResult__index-int__slavoGermanic-boolean",
  "sourceFilePath": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
  "functionAnnotation": "",
  "functionDoc": "Handles \u0027G\u0027 cases\n",
  "functionStartLine": 418,
  "functionEndLine": 469,
  "numCommitsSeen": 32,
  "timeTaken": 2090,
  "changeHistory": [
    "124b73fed7492b3118c4ea43c28dc0b1bceda032",
    "e5afc85e67e21f11f7c5240f3b762ed661910b3d",
    "f0ff6ed771ce1a795ec84897254ceb008f0e98a1"
  ],
  "changeHistoryShort": {
    "124b73fed7492b3118c4ea43c28dc0b1bceda032": "Yformatchange",
    "e5afc85e67e21f11f7c5240f3b762ed661910b3d": "Yformatchange",
    "f0ff6ed771ce1a795ec84897254ceb008f0e98a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "124b73fed7492b3118c4ea43c28dc0b1bceda032": {
      "type": "Yformatchange",
      "commitMessage": "Removed all checkstyle violations from Base64, and the\nlanguage encoders.  Most of the checkstyle violations fixed\nwere violations dealing with the placement of operators\non a newline instead of on the end of the previous line.\n\nIn addition to the checkstyle fixes, DoubleMetaphone now\nhandles two cases C with a Cedilla and N with a tilde (ene).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130214 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/03, 12:56 PM",
      "commitName": "124b73fed7492b3118c4ea43c28dc0b1bceda032",
      "commitAuthor": "Timothy O\u0027Brien",
      "commitDateOld": "10/5/03, 2:45 PM",
      "commitNameOld": "c76ca5ec26d4b1fd434bc47271ef54fc58fb35d2",
      "commitAuthorOld": "Timothy O\u0027Brien",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (charAt(value, index + 1) \u003d\u003d \u0027H\u0027) {\n        index \u003d handleGH(value, result, index);\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027N\u0027) {\n        if (index \u003d\u003d 1 \u0026\u0026 isVowel(charAt(value, 0)) \u0026\u0026 !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") \u0026\u0026 charAt(value, index + 1) !\u003d \u0027Y\u0027 \u0026\u0026 !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index \u003d index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") \u0026\u0026 !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index +\u003d 2;\n    } else if (index \u003d\u003d 0 \u0026\u0026 (charAt(value, index + 1) \u003d\u003d \u0027Y\u0027 || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) \u003d\u003d \u0027Y\u0027) \u0026\u0026 !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") \u0026\u0026 !contains(value, index - 1, 1, \"E\", \"I\") \u0026\u0026 !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            result.append(\u0027K\u0027);\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append(\u0027J\u0027);\n        } else {\n            result.append(\u0027J\u0027, \u0027K\u0027);\n        }\n        index +\u003d 2;\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027G\u0027) {\n        index +\u003d 2;\n        result.append(\u0027K\u0027);\n    } else {\n        index++;\n        result.append(\u0027K\u0027);\n    }\n    return index;\n}",
      "path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
      "functionStartLine": 449,
      "functionName": "handleG",
      "functionAnnotation": "",
      "functionDoc": "Handles \u0027G\u0027 cases\n",
      "diff": "",
      "extendedDetails": {}
    },
    "e5afc85e67e21f11f7c5240f3b762ed661910b3d": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyle improvements\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130156 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/18/03, 11:43 AM",
      "commitName": "e5afc85e67e21f11f7c5240f3b762ed661910b3d",
      "commitAuthor": "Timothy O\u0027Brien",
      "commitDateOld": "6/18/03, 10:46 AM",
      "commitNameOld": "f0ff6ed771ce1a795ec84897254ceb008f0e98a1",
      "commitAuthorOld": "Timothy O\u0027Brien",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (charAt(value, index + 1) \u003d\u003d \u0027H\u0027) {\n        index \u003d handleGH(value, result, index);\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027N\u0027) {\n        if (index \u003d\u003d 1 \u0026\u0026 isVowel(charAt(value, 0)) \u0026\u0026 !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") \u0026\u0026 charAt(value, index + 1) !\u003d \u0027Y\u0027 \u0026\u0026 !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index \u003d index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") \u0026\u0026 !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index +\u003d 2;\n    } else if (index \u003d\u003d 0 \u0026\u0026 (charAt(value, index + 1) \u003d\u003d \u0027Y\u0027 || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) \u003d\u003d \u0027Y\u0027) \u0026\u0026 !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") \u0026\u0026 !contains(value, index - 1, 1, \"E\", \"I\") \u0026\u0026 !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            result.append(\u0027K\u0027);\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append(\u0027J\u0027);\n        } else {\n            result.append(\u0027J\u0027, \u0027K\u0027);\n        }\n        index +\u003d 2;\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027G\u0027) {\n        index +\u003d 2;\n        result.append(\u0027K\u0027);\n    } else {\n        index++;\n        result.append(\u0027K\u0027);\n    }\n    return index;\n}",
      "path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
      "functionStartLine": 464,
      "functionName": "handleG",
      "functionAnnotation": "",
      "functionDoc": "Handles \u0027G\u0027 cases\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f0ff6ed771ce1a795ec84897254ceb008f0e98a1": {
      "type": "Yintroduced",
      "commitMessage": "Removed characters which were breaking GUMP build.  Need to replace character literals with Unicode codes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130155 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/18/03, 10:46 AM",
      "commitName": "f0ff6ed771ce1a795ec84897254ceb008f0e98a1",
      "commitAuthor": "Timothy O\u0027Brien",
      "diff": "@@ -0,0 +1,39 @@\n+private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n+    if (charAt(value, index + 1) \u003d\u003d \u0027H\u0027) {\n+        index \u003d handleGH(value, result, index);\n+    } else if (charAt(value, index + 1) \u003d\u003d \u0027N\u0027) {\n+        if (index \u003d\u003d 1 \u0026\u0026 isVowel(charAt(value, 0)) \u0026\u0026 !slavoGermanic) {\n+            result.append(\"KN\", \"N\");\n+        } else if (!contains(value, index + 2, 2, \"EY\") \u0026\u0026 charAt(value, index + 1) !\u003d \u0027Y\u0027 \u0026\u0026 !slavoGermanic) {\n+            result.append(\"N\", \"KN\");\n+        } else {\n+            result.append(\"KN\");\n+        }\n+        index \u003d index + 2;\n+    } else if (contains(value, index + 1, 2, \"LI\") \u0026\u0026 !slavoGermanic) {\n+        result.append(\"KL\", \"L\");\n+        index +\u003d 2;\n+    } else if (index \u003d\u003d 0 \u0026\u0026 (charAt(value, index + 1) \u003d\u003d \u0027Y\u0027 || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n+        result.append(\u0027K\u0027, \u0027J\u0027);\n+        index +\u003d 2;\n+    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) \u003d\u003d \u0027Y\u0027) \u0026\u0026 !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") \u0026\u0026 !contains(value, index - 1, 1, \"E\", \"I\") \u0026\u0026 !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n+        result.append(\u0027K\u0027, \u0027J\u0027);\n+        index +\u003d 2;\n+    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n+        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n+            result.append(\u0027K\u0027);\n+        } else if (contains(value, index + 1, 4, \"IER\")) {\n+            result.append(\u0027J\u0027);\n+        } else {\n+            result.append(\u0027J\u0027, \u0027K\u0027);\n+        }\n+        index +\u003d 2;\n+    } else if (charAt(value, index + 1) \u003d\u003d \u0027G\u0027) {\n+        index +\u003d 2;\n+        result.append(\u0027K\u0027);\n+    } else {\n+        index++;\n+        result.append(\u0027K\u0027);\n+    }\n+    return index;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {\n    if (charAt(value, index + 1) \u003d\u003d \u0027H\u0027) {\n        index \u003d handleGH(value, result, index);\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027N\u0027) {\n        if (index \u003d\u003d 1 \u0026\u0026 isVowel(charAt(value, 0)) \u0026\u0026 !slavoGermanic) {\n            result.append(\"KN\", \"N\");\n        } else if (!contains(value, index + 2, 2, \"EY\") \u0026\u0026 charAt(value, index + 1) !\u003d \u0027Y\u0027 \u0026\u0026 !slavoGermanic) {\n            result.append(\"N\", \"KN\");\n        } else {\n            result.append(\"KN\");\n        }\n        index \u003d index + 2;\n    } else if (contains(value, index + 1, 2, \"LI\") \u0026\u0026 !slavoGermanic) {\n        result.append(\"KL\", \"L\");\n        index +\u003d 2;\n    } else if (index \u003d\u003d 0 \u0026\u0026 (charAt(value, index + 1) \u003d\u003d \u0027Y\u0027 || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if ((contains(value, index + 1, 2, \"ER\") || charAt(value, index + 1) \u003d\u003d \u0027Y\u0027) \u0026\u0026 !contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\") \u0026\u0026 !contains(value, index - 1, 1, \"E\", \"I\") \u0026\u0026 !contains(value, index - 1, 3, \"RGY\", \"OGY\")) {\n        result.append(\u0027K\u0027, \u0027J\u0027);\n        index +\u003d 2;\n    } else if (contains(value, index + 1, 1, \"E\", \"I\", \"Y\") || contains(value, index - 1, 4, \"AGGI\", \"OGGI\")) {\n        if ((contains(value, 0, 4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n            result.append(\u0027K\u0027);\n        } else if (contains(value, index + 1, 4, \"IER\")) {\n            result.append(\u0027J\u0027);\n        } else {\n            result.append(\u0027J\u0027, \u0027K\u0027);\n        }\n        index +\u003d 2;\n    } else if (charAt(value, index + 1) \u003d\u003d \u0027G\u0027) {\n        index +\u003d 2;\n        result.append(\u0027K\u0027);\n    } else {\n        index++;\n        result.append(\u0027K\u0027);\n    }\n    return index;\n}",
      "path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
      "functionStartLine": 421,
      "functionName": "handleG",
      "functionAnnotation": "",
      "functionDoc": "Handles \u0027G\u0027 cases\n"
    }
  }
}