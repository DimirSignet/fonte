{
  "origin": "codeshovel",
  "repositoryName": "Math-10b",
  "repositoryPath": "/tmp/Math-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DSCompiler.java",
  "functionName": "convertIndex",
  "functionId": "convertIndex___index-int(modifiers-final)__srcP-int(modifiers-final)__srcDerivativesIndirection-int[][](modifiers-final)__destP-int(modifiers-final)__destO-int(modifiers-final)__destSizes-int[][](modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
  "functionAnnotation": "",
  "functionDoc": "Convert an index from one (parameters, order) structure to another.\n\n@param index index of a partial derivative in source derivative structure\n@param srcP number of free parameters in source derivative structure\n@param srcDerivativesIndirection derivatives indirection array for the source\nderivative structure\n@param destP number of free parameters in destination derivative structure\n@param destO derivation order in destination derivative structure\n@param destSizes sizes array for the destination derivative structure\n@return index of the partial derivative with the \u003cem\u003esame\u003c/em\u003e characteristics\nin destination derivative structure\n",
  "functionStartLine": 600,
  "functionEndLine": 606,
  "numCommitsSeen": 17,
  "timeTaken": 2169,
  "changeHistory": [
    "96dfe1afa1c06fb243e312d3366daf99b88ca7b5"
  ],
  "changeHistoryShort": {
    "96dfe1afa1c06fb243e312d3366daf99b88ca7b5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96dfe1afa1c06fb243e312d3366daf99b88ca7b5": {
      "type": "Yintroduced",
      "commitMessage": "Added a new package dealing with differentials.\n\nThe package is intended to deals with one or more free parameters and\nderivation order 1 or higher.\n\nThe core elements are based on Dan Kalman paper \"Recursive Multivariate\nAutomatic Differentiation\", Mathematics Magazine, vol. 75, no. 3, June\n2002. For efficiency, the recursive structure is compiled as simple\nloops once for each pair (number of free parameters, derivation order).\n\nThis is work in progress, there are still some features missing even in\nthe most basic blocks (typically the asin, acos, atan, atant2 and taylor\nmethods in DSCompiler). There are also still no high level\ndifferentiator implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1370951 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/8/12, 1:33 PM",
      "commitName": "96dfe1afa1c06fb243e312d3366daf99b88ca7b5",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,5 @@\n+private static int convertIndex(final int index, final int srcP, final int[][] srcDerivativesIndirection, final int destP, final int destO, final int[][] destSizes) {\n+    int[] orders \u003d new int[destP];\n+    System.arraycopy(srcDerivativesIndirection[index], 0, orders, 0, FastMath.min(srcP, destP));\n+    return getPartialDerivativeIndex(destP, destO, destSizes, orders);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static int convertIndex(final int index, final int srcP, final int[][] srcDerivativesIndirection, final int destP, final int destO, final int[][] destSizes) {\n    int[] orders \u003d new int[destP];\n    System.arraycopy(srcDerivativesIndirection[index], 0, orders, 0, FastMath.min(srcP, destP));\n    return getPartialDerivativeIndex(destP, destO, destSizes, orders);\n}",
      "path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
      "functionStartLine": 589,
      "functionName": "convertIndex",
      "functionAnnotation": "",
      "functionDoc": "Convert an index from one (parameters, order) structure to another.\n\n@param index index of a partial derivative in source derivative structure\n@param srcP number of free parameters in source derivative structure\n@param srcDerivativesIndirection derivatives indirection array for the source\nderivative structure\n@param destP number of free parameters in destination derivative structure\n@param destO derivation order in destination derivative structure\n@param destSizes sizes array for the destination derivative structure\n@return index of the partial derivative with the \u003cem\u003esame\u003c/em\u003e characteristics\nin destination derivative structure\n"
    }
  }
}