{
  "origin": "codeshovel",
  "repositoryName": "Math-28b",
  "repositoryPath": "/tmp/Math-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "dropPhase1Objective",
  "functionId": "dropPhase1Objective",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
  "functionStartLine": 332,
  "functionEndLine": 374,
  "numCommitsSeen": 29,
  "timeTaken": 12851,
  "changeHistory": [
    "a55c951a3d573464e3905de7328fcdc487eebfb4",
    "3ef79313597d7d49067c48d65a09042d8d94822d",
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b59e97464fc8d910c06b90c06598d7176ce1924a",
    "573785a1cdd35971378c2f38c30d455897fe8a3b",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
    "be4cd671b1bfe2df0df6a8f7484e041c90123677",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4"
  ],
  "changeHistoryShort": {
    "a55c951a3d573464e3905de7328fcdc487eebfb4": "Ybodychange",
    "3ef79313597d7d49067c48d65a09042d8d94822d": "Ybodychange",
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b59e97464fc8d910c06b90c06598d7176ce1924a": "Ybodychange",
    "573785a1cdd35971378c2f38c30d455897fe8a3b": "Ybodychange",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": "Ybodychange",
    "be4cd671b1bfe2df0df6a8f7484e041c90123677": "Ybodychange",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a55c951a3d573464e3905de7328fcdc487eebfb4": {
      "type": "Ybodychange",
      "commitMessage": "Use a TreeSet instead of an ArrayList when dropping columns after phase 1 of the simplex solver to improve performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1367227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/12, 12:07 PM",
      "commitName": "a55c951a3d573464e3905de7328fcdc487eebfb4",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "7/28/12, 10:44 AM",
      "commitNameOld": "22ee0f157471d8061f066ead5c8f95d8c6624106",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 2.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    Set\u003cInteger\u003e columnsToDrop \u003d new TreeSet\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, epsilon) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    Integer[] drop \u003d columnsToDrop.toArray(new Integer[columnsToDrop.size()]);\n    for (int i \u003d drop.length - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) drop[i]);\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
      "functionStartLine": 332,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,33 +1,34 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n-    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n+    Set\u003cInteger\u003e columnsToDrop \u003d new TreeSet\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n         final double entry \u003d tableau.getEntry(0, i);\n         if (Precision.compareTo(entry, 0d, epsilon) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n-    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n-        columnLabels.remove((int) columnsToDrop.get(i));\n+    Integer[] drop \u003d columnsToDrop.toArray(new Integer[columnsToDrop.size()]);\n+    for (int i \u003d drop.length - 1; i \u003e\u003d 0; i--) {\n+        columnLabels.remove((int) drop[i]);\n     }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3ef79313597d7d49067c48d65a09042d8d94822d": {
      "type": "Ybodychange",
      "commitMessage": "[MATH-781] use epsilon criteria when deciding to drop columns after phase 1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1333146 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/2/12, 11:28 AM",
      "commitName": "3ef79313597d7d49067c48d65a09042d8d94822d",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/14/12, 8:17 AM",
      "commitNameOld": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 78.09,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, epsilon) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
      "functionStartLine": 327,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,33 +1,33 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n     List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n         final double entry \u003d tableau.getEntry(0, i);\n-        if (Precision.compareTo(entry, 0d, maxUlps) \u003e 0) {\n+        if (Precision.compareTo(entry, 0d, epsilon) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n     for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n         columnLabels.remove((int) columnsToDrop.get(i));\n     }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
      "functionStartLine": 327,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
        "oldMethodName": "dropPhase1Objective",
        "newMethodName": "dropPhase1Objective"
      }
    },
    "b59e97464fc8d910c06b90c06598d7176ce1924a": {
      "type": "Ybodychange",
      "commitMessage": "MATH-689\nMoved \"equals...\" and \"compareTo\" methods from \"MathUtils\" over to a new\n\"Precision\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1181282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11, 3:35 PM",
      "commitName": "b59e97464fc8d910c06b90c06598d7176ce1924a",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "9/8/11, 4:15 AM",
      "commitNameOld": "9d8f28a08be2525a0794f1f7b29e120180539c99",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 32.47,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 327,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,33 +1,33 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n     List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n         final double entry \u003d tableau.getEntry(0, i);\n-        if (MathUtils.compareTo(entry, 0d, maxUlps) \u003e 0) {\n+        if (Precision.compareTo(entry, 0d, maxUlps) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n     for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n         columnLabels.remove((int) columnsToDrop.get(i));\n     }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "573785a1cdd35971378c2f38c30d455897fe8a3b": {
      "type": "Ybodychange",
      "commitMessage": "replaced remaining getEpsilon by using ulps in double comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1091143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/11/11, 10:43 AM",
      "commitName": "573785a1cdd35971378c2f38c30d455897fe8a3b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/9/11, 12:20 PM",
      "commitNameOld": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (MathUtils.compareTo(entry, 0d, maxUlps) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 327,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,33 +1,33 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n     List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n         final double entry \u003d tableau.getEntry(0, i);\n-        if (MathUtils.compareTo(entry, 0d, getEpsilon(entry)) \u003e 0) {\n+        if (MathUtils.compareTo(entry, 0d, maxUlps) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n     for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n         columnLabels.remove((int) columnsToDrop.get(i));\n     }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": {
      "type": "Ybodychange",
      "commitMessage": "Fixed two errors in simplex solver when entries are close together or\nwhen variables are not restricted to non-negative.\n\nJira: MATH-434\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1090656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/11, 12:20 PM",
      "commitName": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/13/10, 5:26 PM",
      "commitNameOld": "3729fba951e714135102e8c3c3aa866ac8b75cf9",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 391.75,
      "commitsBetweenForRepo": 639,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        final double entry \u003d tableau.getEntry(0, i);\n        if (MathUtils.compareTo(entry, 0d, getEpsilon(entry)) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 328,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,32 +1,33 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n     List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n-        if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) \u003e 0) {\n+        final double entry \u003d tableau.getEntry(0, i);\n+        if (MathUtils.compareTo(entry, 0d, getEpsilon(entry)) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n     for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n         columnLabels.remove((int) columnsToDrop.get(i));\n     }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "be4cd671b1bfe2df0df6a8f7484e041c90123677": {
      "type": "Ybodychange",
      "commitMessage": "Fixed a OutOfBoundException in simplex solver when some constraints are tight\nJIRA: MATH-293\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@813301 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/10/09, 1:20 AM",
      "commitName": "be4cd671b1bfe2df0df6a8f7484e041c90123677",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/9/09, 1:48 AM",
      "commitNameOld": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 295,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n",
      "diff": "@@ -1,29 +1,32 @@\n protected void dropPhase1Objective() {\n     if (getNumObjectiveFunctions() \u003d\u003d 1) {\n         return;\n     }\n     List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n     columnsToDrop.add(0);\n     for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n         if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) \u003e 0) {\n             columnsToDrop.add(i);\n         }\n     }\n     for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n         int col \u003d i + getArtificialVariableOffset();\n         if (getBasicRow(col) \u003d\u003d null) {\n             columnsToDrop.add(col);\n         }\n     }\n     double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n     for (int i \u003d 1; i \u003c getHeight(); i++) {\n         int col \u003d 0;\n         for (int j \u003d 0; j \u003c getWidth(); j++) {\n             if (!columnsToDrop.contains(j)) {\n                 matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n             }\n         }\n     }\n+    for (int i \u003d columnsToDrop.size() - 1; i \u003e\u003d 0; i--) {\n+        columnLabels.remove((int) columnsToDrop.get(i));\n+    }\n     this.tableau \u003d new Array2DRowRealMatrix(matrix);\n     this.numArtificialVariables \u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": {
      "type": "Yintroduced",
      "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/9/09, 1:48 AM",
      "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,29 @@\n+protected void dropPhase1Objective() {\n+    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n+        return;\n+    }\n+    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n+    columnsToDrop.add(0);\n+    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n+        if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) \u003e 0) {\n+            columnsToDrop.add(i);\n+        }\n+    }\n+    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n+        int col \u003d i + getArtificialVariableOffset();\n+        if (getBasicRow(col) \u003d\u003d null) {\n+            columnsToDrop.add(col);\n+        }\n+    }\n+    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n+    for (int i \u003d 1; i \u003c getHeight(); i++) {\n+        int col \u003d 0;\n+        for (int j \u003d 0; j \u003c getWidth(); j++) {\n+            if (!columnsToDrop.contains(j)) {\n+                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n+            }\n+        }\n+    }\n+    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n+    this.numArtificialVariables \u003d 0;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() \u003d\u003d 1) {\n        return;\n    }\n    List\u003cInteger\u003e columnsToDrop \u003d new ArrayList\u003cInteger\u003e();\n    columnsToDrop.add(0);\n    for (int i \u003d getNumObjectiveFunctions(); i \u003c getArtificialVariableOffset(); i++) {\n        if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) \u003e 0) {\n            columnsToDrop.add(i);\n        }\n    }\n    for (int i \u003d 0; i \u003c getNumArtificialVariables(); i++) {\n        int col \u003d i + getArtificialVariableOffset();\n        if (getBasicRow(col) \u003d\u003d null) {\n            columnsToDrop.add(col);\n        }\n    }\n    double[][] matrix \u003d new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    for (int i \u003d 1; i \u003c getHeight(); i++) {\n        int col \u003d 0;\n        for (int j \u003d 0; j \u003c getWidth(); j++) {\n            if (!columnsToDrop.contains(j)) {\n                matrix[i - 1][col++] \u003d tableau.getEntry(i, j);\n            }\n        }\n    }\n    this.tableau \u003d new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables \u003d 0;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 271,
      "functionName": "dropPhase1Objective",
      "functionAnnotation": "",
      "functionDoc": "Removes the phase 1 objective function, positive cost non-artificial variables,\nand the non-basic artificial variables from this tableau.\n"
    }
  }
}