{
  "origin": "codeshovel",
  "repositoryName": "Math-28b",
  "repositoryPath": "/tmp/Math-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "createTableau",
  "functionId": "createTableau___maximize-boolean(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
  "functionStartLine": 183,
  "functionEndLine": 244,
  "numCommitsSeen": 38,
  "timeTaken": 12621,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "9d8f28a08be2525a0794f1f7b29e120180539c99",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
    "31aad6494d0e9f8cc41ea1f716fcfdea1e13bca0",
    "f335e5a33487c97808f0fc81dbe0b3afbf744a5f",
    "327124cf4ca07f9e733ccc06f7432b50e149ea9c",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "96b1276efd88c536f3c918396f7460e557b9ee65"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "9d8f28a08be2525a0794f1f7b29e120180539c99": "Ybodychange",
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": "Ybodychange",
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": "Ymultichange(Yreturntypechange,Ybodychange)",
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": "Yformatchange",
    "31aad6494d0e9f8cc41ea1f716fcfdea1e13bca0": "Ybodychange",
    "f335e5a33487c97808f0fc81dbe0b3afbf744a5f": "Yformatchange",
    "327124cf4ca07f9e733ccc06f7432b50e149ea9c": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "96b1276efd88c536f3c918396f7460e557b9ee65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealMatrix createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix.setEntry(0, 0, -1);\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);\n    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n    if (!restrictToNonNegative) {\n        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients));\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);\n        if (!restrictToNonNegative) {\n            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoefficientSum(constraint.getCoefficients()));\n        }\n        matrix.setEntry(row, width - 1, constraint.getValue());\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
      "functionStartLine": 178,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
        "oldMethodName": "createTableau",
        "newMethodName": "createTableau"
      }
    },
    "9d8f28a08be2525a0794f1f7b29e120180539c99": {
      "type": "Ybodychange",
      "commitMessage": "MATH-663\nRemoved \"getData\" method in \"RealVector\"; replaced calls with \"toArray()\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/8/11, 4:15 AM",
      "commitName": "9d8f28a08be2525a0794f1f7b29e120180539c99",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "6/3/11, 1:49 PM",
      "commitNameOld": "98e22d778b3a886be253638b9a6b7ec075c3d62d",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 96.6,
      "commitsBetweenForRepo": 282,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealMatrix createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix.setEntry(0, 0, -1);\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);\n    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n    if (!restrictToNonNegative) {\n        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients));\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);\n        if (!restrictToNonNegative) {\n            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoefficientSum(constraint.getCoefficients()));\n        }\n        matrix.setEntry(row, width - 1, constraint.getValue());\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 178,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "@@ -1,38 +1,38 @@\n protected RealMatrix createTableau(final boolean maximize) {\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n     Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n         matrix.setEntry(0, 0, -1);\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n     matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n-    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n+    copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);\n     matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n     if (!restrictToNonNegative) {\n         matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients));\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n-        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n+        copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);\n         if (!restrictToNonNegative) {\n             matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoefficientSum(constraint.getCoefficients()));\n         }\n         matrix.setEntry(row, width - 1, constraint.getValue());\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n             matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n             matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n             matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n             matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n             matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc": {
      "type": "Ybodychange",
      "commitMessage": "Fixed two errors in simplex solver when entries are close together or\nwhen variables are not restricted to non-negative.\n\nJira: MATH-434\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1090656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/9/11, 12:20 PM",
      "commitName": "ad48588bf1bb3a6761a3a7d2582af672f4f2e3dc",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/13/10, 5:26 PM",
      "commitNameOld": "3729fba951e714135102e8c3c3aa866ac8b75cf9",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 391.75,
      "commitsBetweenForRepo": 639,
      "commitsBetweenForFile": 1,
      "actualSource": "protected RealMatrix createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix.setEntry(0, 0, -1);\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n    if (!restrictToNonNegative) {\n        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients));\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n        if (!restrictToNonNegative) {\n            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoefficientSum(constraint.getCoefficients()));\n        }\n        matrix.setEntry(row, width - 1, constraint.getValue());\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 179,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "@@ -1,38 +1,38 @@\n protected RealMatrix createTableau(final boolean maximize) {\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n     Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n         matrix.setEntry(0, 0, -1);\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n     matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n     copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n     matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n     if (!restrictToNonNegative) {\n-        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(objectiveCoefficients));\n+        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients));\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n         copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n         if (!restrictToNonNegative) {\n-            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(constraint.getCoefficients()));\n+            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoefficientSum(constraint.getCoefficients()));\n         }\n         matrix.setEntry(row, width - 1, constraint.getValue());\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n             matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n             matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n             matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n             matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n             matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b05f8dca124e43a35f9d61f26aa776a423cf67e4": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/9/09, 1:48 AM",
      "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/9/09, 1:48 AM",
          "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "9/8/09, 1:40 AM",
          "commitNameOld": "71b31811964d5dc9387a53235e3f70616944de99",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected RealMatrix createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix.setEntry(0, 0, -1);\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n    if (!restrictToNonNegative) {\n        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(objectiveCoefficients));\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n        if (!restrictToNonNegative) {\n            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(constraint.getCoefficients()));\n        }\n        matrix.setEntry(row, width - 1, constraint.getValue());\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n        }\n    }\n    return matrix;\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
          "functionStartLine": 123,
          "functionName": "createTableau",
          "functionAnnotation": "",
          "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
          "diff": "@@ -1,37 +1,38 @@\n-protected double[][] createTableau(final boolean maximize) {\n+protected RealMatrix createTableau(final boolean maximize) {\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n-    double[][] matrix \u003d new double[height][width];\n+    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n-        matrix[0][0] \u003d -1;\n+        matrix.setEntry(0, 0, -1);\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n-    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n+    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n-    copyArray(objectiveCoefficients.getData(), matrix[zIndex]);\n-    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n+    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n+    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n     if (!restrictToNonNegative) {\n-        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n+        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(objectiveCoefficients));\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n-        copyArray(constraint.getCoefficients().getData(), matrix[row]);\n+        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n         if (!restrictToNonNegative) {\n-            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n+            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(constraint.getCoefficients()));\n         }\n-        matrix[row][width - 1] \u003d constraint.getValue();\n+        matrix.setEntry(row, width - 1, constraint.getValue());\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n-            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n+            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n-            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n+            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n-            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n-            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n+            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n+            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n+            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "double[][]",
            "newValue": "RealMatrix"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "applied Benjamin\u0027s patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/9/09, 1:48 AM",
          "commitName": "b05f8dca124e43a35f9d61f26aa776a423cf67e4",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "9/8/09, 1:40 AM",
          "commitNameOld": "71b31811964d5dc9387a53235e3f70616944de99",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected RealMatrix createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix.setEntry(0, 0, -1);\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n    if (!restrictToNonNegative) {\n        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(objectiveCoefficients));\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n        if (!restrictToNonNegative) {\n            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(constraint.getCoefficients()));\n        }\n        matrix.setEntry(row, width - 1, constraint.getValue());\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n        }\n    }\n    return matrix;\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
          "functionStartLine": 123,
          "functionName": "createTableau",
          "functionAnnotation": "",
          "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
          "diff": "@@ -1,37 +1,38 @@\n-protected double[][] createTableau(final boolean maximize) {\n+protected RealMatrix createTableau(final boolean maximize) {\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n-    double[][] matrix \u003d new double[height][width];\n+    Array2DRowRealMatrix matrix \u003d new Array2DRowRealMatrix(height, width);\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n-        matrix[0][0] \u003d -1;\n+        matrix.setEntry(0, 0, -1);\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n-    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n+    matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n-    copyArray(objectiveCoefficients.getData(), matrix[zIndex]);\n-    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n+    copyArray(objectiveCoefficients.getData(), matrix.getDataRef()[zIndex]);\n+    matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());\n     if (!restrictToNonNegative) {\n-        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n+        matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(objectiveCoefficients));\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n-        copyArray(constraint.getCoefficients().getData(), matrix[row]);\n+        copyArray(constraint.getCoefficients().getData(), matrix.getDataRef()[row]);\n         if (!restrictToNonNegative) {\n-            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n+            matrix.setEntry(row, getSlackVariableOffset() - 1, getInvertedCoeffiecientSum(constraint.getCoefficients()));\n         }\n-        matrix[row][width - 1] \u003d constraint.getValue();\n+        matrix.setEntry(row, width - 1, constraint.getValue());\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n-            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n+            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n-            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n+            matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1);\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n-            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n-            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n+            matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);\n+            matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);\n+            matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": {
      "type": "Yformatchange",
      "commitMessage": "Removed trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811685 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/5/09, 10:36 AM",
      "commitName": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "9/1/09, 2:02 PM",
      "commitNameOld": "d6beaeaa9c53aa4e6ae128a856e68a9eeb1cadb8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 3.86,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex]);\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row]);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 123,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "",
      "extendedDetails": {}
    },
    "31aad6494d0e9f8cc41ea1f716fcfdea1e13bca0": {
      "type": "Ybodychange",
      "commitMessage": "removed an unused argument in a private method\nJIRA: MATH-289\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@808311 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/27/09, 12:57 AM",
      "commitName": "31aad6494d0e9f8cc41ea1f716fcfdea1e13bca0",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/26/09, 1:54 AM",
      "commitNameOld": "f335e5a33487c97808f0fc81dbe0b3afbf744a5f",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex]);\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row]);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 123,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "@@ -1,37 +1,37 @@\n protected double[][] createTableau(final boolean maximize) {\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n     double[][] matrix \u003d new double[height][width];\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n         matrix[0][0] \u003d -1;\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n     matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n-    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n+    copyArray(objectiveCoefficients.getData(), matrix[zIndex]);\n     matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n     if (!restrictToNonNegative) {\n         matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n-        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n+        copyArray(constraint.getCoefficients().getData(), matrix[row]);\n         if (!restrictToNonNegative) {\n             matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n         }\n         matrix[row][width - 1] \u003d constraint.getValue();\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n             matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n             matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n             matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n             matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f335e5a33487c97808f0fc81dbe0b3afbf744a5f": {
      "type": "Yformatchange",
      "commitMessage": "fixed weird spacing as per last patch from Ben\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@807929 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/26/09, 1:54 AM",
      "commitName": "f335e5a33487c97808f0fc81dbe0b3afbf744a5f",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/26/09, 1:43 AM",
      "commitNameOld": "327124cf4ca07f9e733ccc06f7432b50e149ea9c",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 123,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "",
      "extendedDetails": {}
    },
    "327124cf4ca07f9e733ccc06f7432b50e149ea9c": {
      "type": "Ybodychange",
      "commitMessage": "fixed an error with negative constraints and unfeasible solution\nJIRA: MATH-290\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@807923 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/26/09, 1:43 AM",
      "commitName": "327124cf4ca07f9e733ccc06f7432b50e149ea9c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/21/09, 4:07 PM",
      "commitNameOld": "f36be8e8b7371fb8814456b6c095866aa802de78",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 4.4,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 123,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "@@ -1,38 +1,37 @@\n protected double[][] createTableau(final boolean maximize) {\n-    List\u003cLinearConstraint\u003e constraints \u003d getNormalizedConstraints();\n     int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n     int height \u003d constraints.size() + getNumObjectiveFunctions();\n     double[][] matrix \u003d new double[height][width];\n     if (getNumObjectiveFunctions() \u003d\u003d 2) {\n         matrix[0][0] \u003d -1;\n     }\n     int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n     matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n     RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n     copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n     matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n     if (!restrictToNonNegative) {\n         matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n     }\n     int slackVar \u003d 0;\n     int artificialVar \u003d 0;\n     for (int i \u003d 0; i \u003c constraints.size(); i++) {\n         LinearConstraint constraint \u003d constraints.get(i);\n         int row \u003d getNumObjectiveFunctions() + i;\n         copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n         if (!restrictToNonNegative) {\n             matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n         }\n         matrix[row][width - 1] \u003d constraint.getValue();\n         if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n             matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n         } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n             matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n         }\n         if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n             matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n             matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n         }\n     }\n     return matrix;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    List\u003cLinearConstraint\u003e constraints \u003d getNormalizedConstraints();\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 123,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      }
    },
    "96b1276efd88c536f3c918396f7460e557b9ee65": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of Dantzig\u0027s simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/09, 4:25 PM",
      "commitName": "96b1276efd88c536f3c918396f7460e557b9ee65",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,38 @@\n+protected double[][] createTableau(final boolean maximize) {\n+    List\u003cLinearConstraint\u003e constraints \u003d getNormalizedConstraints();\n+    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n+    int height \u003d constraints.size() + getNumObjectiveFunctions();\n+    double[][] matrix \u003d new double[height][width];\n+    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n+        matrix[0][0] \u003d -1;\n+    }\n+    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n+    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n+    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n+    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n+    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n+    if (!restrictToNonNegative) {\n+        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n+    }\n+    int slackVar \u003d 0;\n+    int artificialVar \u003d 0;\n+    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n+        LinearConstraint constraint \u003d constraints.get(i);\n+        int row \u003d getNumObjectiveFunctions() + i;\n+        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n+        if (!restrictToNonNegative) {\n+            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n+        }\n+        matrix[row][width - 1] \u003d constraint.getValue();\n+        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n+            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n+        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n+            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n+        }\n+        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n+            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n+            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n+        }\n+    }\n+    return matrix;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected double[][] createTableau(final boolean maximize) {\n    List\u003cLinearConstraint\u003e constraints \u003d getNormalizedConstraints();\n    int width \u003d numDecisionVariables + numSlackVariables + numArtificialVariables + getNumObjectiveFunctions() + 1;\n    int height \u003d constraints.size() + getNumObjectiveFunctions();\n    double[][] matrix \u003d new double[height][width];\n    if (getNumObjectiveFunctions() \u003d\u003d 2) {\n        matrix[0][0] \u003d -1;\n    }\n    int zIndex \u003d (getNumObjectiveFunctions() \u003d\u003d 1) ? 0 : 1;\n    matrix[zIndex][zIndex] \u003d maximize ? 1 : -1;\n    RealVector objectiveCoefficients \u003d maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();\n    copyArray(objectiveCoefficients.getData(), matrix[zIndex], getNumObjectiveFunctions());\n    matrix[zIndex][width - 1] \u003d maximize ? f.getConstantTerm() : -1 * f.getConstantTerm();\n    if (!restrictToNonNegative) {\n        matrix[zIndex][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(objectiveCoefficients);\n    }\n    int slackVar \u003d 0;\n    int artificialVar \u003d 0;\n    for (int i \u003d 0; i \u003c constraints.size(); i++) {\n        LinearConstraint constraint \u003d constraints.get(i);\n        int row \u003d getNumObjectiveFunctions() + i;\n        copyArray(constraint.getCoefficients().getData(), matrix[row], 1);\n        if (!restrictToNonNegative) {\n            matrix[row][getSlackVariableOffset() - 1] \u003d getInvertedCoeffiecientSum(constraint.getCoefficients());\n        }\n        matrix[row][width - 1] \u003d constraint.getValue();\n        if (constraint.getRelationship() \u003d\u003d Relationship.LEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d 1;\n        } else if (constraint.getRelationship() \u003d\u003d Relationship.GEQ) {\n            matrix[row][getSlackVariableOffset() + slackVar++] \u003d -1;\n        }\n        if ((constraint.getRelationship() \u003d\u003d Relationship.EQ) || (constraint.getRelationship() \u003d\u003d Relationship.GEQ)) {\n            matrix[0][getArtificialVariableOffset() + artificialVar] \u003d 1;\n            matrix[row][getArtificialVariableOffset() + artificialVar++] \u003d 1;\n        }\n    }\n    return matrix;\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 110,
      "functionName": "createTableau",
      "functionAnnotation": "",
      "functionDoc": "Create the tableau by itself.\n\n@param maximize if true, goal is to maximize the objective function\n@return created tableau\n"
    }
  }
}