{
  "origin": "codeshovel",
  "repositoryName": "Math-28b",
  "repositoryPath": "/tmp/Math-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplexTableau.java",
  "functionName": "divideRow",
  "functionId": "divideRow___dividendRow-int(modifiers-final)__divisor-double(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
  "functionAnnotation": "",
  "functionDoc": "Subtracts a multiple of one row from another.\n\u003cp\u003e\nAfter application of this operation, the following will hold:\n  minuendRow \u003d minuendRow - multiple * subtrahendRow\n\u003c/p\u003e\n\n@param dividendRow index of the row\n@param divisor value of the divisor\n",
  "functionStartLine": 445,
  "functionEndLine": 449,
  "numCommitsSeen": 38,
  "timeTaken": 11818,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "96b1276efd88c536f3c918396f7460e557b9ee65"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "96b1276efd88c536f3c918396f7460e557b9ee65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void divideRow(final int dividendRow, final double divisor) {\n    for (int j \u003d 0; j \u003c getWidth(); j++) {\n        tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n    }\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
      "functionStartLine": 438,
      "functionName": "divideRow",
      "functionAnnotation": "",
      "functionDoc": "Subtracts a multiple of one row from another.\n\u003cp\u003e\nAfter application of this operation, the following will hold:\n  minuendRow \u003d minuendRow - multiple * subtrahendRow\n\u003c/p\u003e\n\n@param dividendRow index of the row\n@param divisor value of the divisor\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java",
        "oldMethodName": "divideRow",
        "newMethodName": "divideRow"
      }
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void divideRow(final int dividendRow, final double divisor) {\n    for (int j \u003d 0; j \u003c getWidth(); j++) {\n        tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 351,
      "functionName": "divideRow",
      "functionAnnotation": "",
      "functionDoc": "Subtracts a multiple of one row from another.\n\u003cp\u003e\nAfter application of this operation, the following will hold:\n  minuendRow \u003d minuendRow - multiple * subtrahendRow\n\u003c/p\u003e\n\n@param dividendRow index of the row\n@param divisor value of the divisor\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      }
    },
    "96b1276efd88c536f3c918396f7460e557b9ee65": {
      "type": "Yintroduced",
      "commitMessage": "added an implementation of Dantzig\u0027s simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/26/09, 4:25 PM",
      "commitName": "96b1276efd88c536f3c918396f7460e557b9ee65",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,5 @@\n+protected void divideRow(final int dividendRow, final double divisor) {\n+    for (int j \u003d 0; j \u003c getWidth(); j++) {\n+        tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void divideRow(final int dividendRow, final double divisor) {\n    for (int j \u003d 0; j \u003c getWidth(); j++) {\n        tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);\n    }\n}",
      "path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
      "functionStartLine": 343,
      "functionName": "divideRow",
      "functionAnnotation": "",
      "functionDoc": "Subtracts a multiple of one row from another.\n\u003cp\u003e\nAfter application of this operation, the following will hold:\n  minuendRow \u003d minuendRow - multiple * subtrahendRow\n\u003c/p\u003e\n\n@param dividendRow index of the row\n@param divisor value of the divisor\n"
    }
  }
}