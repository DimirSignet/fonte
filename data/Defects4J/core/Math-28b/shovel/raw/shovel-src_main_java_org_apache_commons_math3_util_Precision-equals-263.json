{
  "origin": "codeshovel",
  "repositoryName": "Math-28b",
  "repositoryPath": "/tmp/Math-28b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Precision.java",
  "functionName": "equals",
  "functionId": "equals___x-double__y-double__eps-double",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/util/Precision.java",
  "functionAnnotation": "",
  "functionDoc": "Returns {@code true} if there is no double value strictly between the\narguments or the difference between them is within the range of allowed\nerror (inclusive).\n\n@param x First value.\n@param y Second value.\n@param eps Amount of allowed absolute error.\n@return @code true} if the values are two adjacent floating point\nnumbers or they are within range of each other.\n",
  "functionStartLine": 263,
  "functionEndLine": 265,
  "numCommitsSeen": 157,
  "timeTaken": 20281,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b59e97464fc8d910c06b90c06598d7176ce1924a",
    "76495c3c72416296f1c8f0a02e697a936d888036",
    "80b1e90b42a34856b61cec628fcea6633d1000cd",
    "adc837ab18b037b1f28974702aaaea4dcc36595f",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "7ff6d072ece0452874aa2ceeb94eba7305e02cf0",
    "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f",
    "924b6d76a2d44baf858c3aee46ab1439c9641959"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b59e97464fc8d910c06b90c06598d7176ce1924a": "Ymovefromfile",
    "76495c3c72416296f1c8f0a02e697a936d888036": "Ydocchange",
    "80b1e90b42a34856b61cec628fcea6633d1000cd": "Ybodychange",
    "adc837ab18b037b1f28974702aaaea4dcc36595f": "Ymultichange(Ybodychange,Ydocchange)",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "7ff6d072ece0452874aa2ceeb94eba7305e02cf0": "Ydocchange",
    "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f": "Ymultichange(Ybodychange,Ydocchange)",
    "924b6d76a2d44baf858c3aee46ab1439c9641959": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || FastMath.abs(y - x) \u003c\u003d eps;\n}",
      "path": "src/main/java/org/apache/commons/math3/util/Precision.java",
      "functionStartLine": 240,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns {@code true} if there is no double value strictly between the\narguments or the difference between them is within the range of allowed\nerror (inclusive).\n\n@param x First value.\n@param y Second value.\n@param eps Amount of allowed absolute error.\n@return @code true} if the values are two adjacent floating point\nnumbers or they are within range of each other.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/util/Precision.java",
        "newPath": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "oldMethodName": "equals",
        "newMethodName": "equals"
      }
    },
    "b59e97464fc8d910c06b90c06598d7176ce1924a": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-689\nMoved \"equals...\" and \"compareTo\" methods from \"MathUtils\" over to a new\n\"Precision\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1181282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11, 3:35 PM",
      "commitName": "b59e97464fc8d910c06b90c06598d7176ce1924a",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "10/10/11, 2:20 PM",
      "commitNameOld": "e24e9c1cf7e76ffb4d76c1ad541833a9b32ced5a",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || FastMath.abs(y - x) \u003c\u003d eps;\n}",
      "path": "src/main/java/org/apache/commons/math/util/Precision.java",
      "functionStartLine": 224,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns {@code true} if there is no double value strictly between the\narguments or the difference between them is within the range of allowed\nerror (inclusive).\n\n@param x First value.\n@param y Second value.\n@param eps Amount of allowed absolute error.\n@return @code true} if the values are two adjacent floating point\nnumbers or they are within range of each other.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/Precision.java",
        "oldMethodName": "equals",
        "newMethodName": "equals"
      }
    },
    "76495c3c72416296f1c8f0a02e697a936d888036": {
      "type": "Ydocchange",
      "commitMessage": "MATH-475\nUpdated the Javadoc to make clear that 2 adjacent floating point numbers\nare considered equal whatever the allowed tolerance.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1059909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/11, 5:06 AM",
      "commitName": "76495c3c72416296f1c8f0a02e697a936d888036",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "1/12/11, 6:57 PM",
      "commitNameOld": "fc024205650fd286f407da7fa40cba524a15f7ae",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || FastMath.abs(y - x) \u003c\u003d eps;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 609,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns {@code true} if there is no double value strictly between the\narguments or the difference between them is within the range of allowed\nerror (inclusive).\n\n@param x First value.\n@param y Second value.\n@param eps Amount of allowed absolute error.\n@return @code true} if the values are two adjacent floating point\nnumbers or they are within range of each other.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow.\n@return @code true} if the values are equal or within range of each other.\n",
        "newValue": "Returns {@code true} if there is no double value strictly between the\narguments or the difference between them is within the range of allowed\nerror (inclusive).\n\n@param x First value.\n@param y Second value.\n@param eps Amount of allowed absolute error.\n@return @code true} if the values are two adjacent floating point\nnumbers or they are within range of each other.\n"
      }
    },
    "80b1e90b42a34856b61cec628fcea6633d1000cd": {
      "type": "Ybodychange",
      "commitMessage": "added FastMath and used it everywhere in replacement of java.util.Math\nthe unit tests have not been added yet (waiting for dfp library addition)\nJIRA: MATH-375\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@990658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/29/10, 3:04 PM",
      "commitName": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/22/10, 4:45 PM",
      "commitNameOld": "ad93f56c541538f8f721a45f48cd133d9f06a795",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 6.93,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || FastMath.abs(y - x) \u003c\u003d eps;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 447,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow.\n@return @code true} if the values are equal or within range of each other.\n",
      "diff": "@@ -1,3 +1,3 @@\n public static boolean equals(double x, double y, double eps) {\n-    return equals(x, y, 1) || Math.abs(y - x) \u003c\u003d eps;\n+    return equals(x, y, 1) || FastMath.abs(y - x) \u003c\u003d eps;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "adc837ab18b037b1f28974702aaaea4dcc36595f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/9/10, 3:41 AM",
      "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/9/10, 3:41 AM",
          "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "3/24/10, 6:06 PM",
          "commitNameOld": "1eb4b8a4e566ca45fe4d690b236bd17d30a62f85",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 76.4,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || Math.abs(y - x) \u003c\u003d eps;\n}",
          "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 444,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow.\n@return @code true} if the values are equal or within range of each other.\n",
          "diff": "@@ -1,3 +1,3 @@\n public static boolean equals(double x, double y, double eps) {\n-    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n+    return equals(x, y, 1) || Math.abs(y - x) \u003c\u003d eps;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/9/10, 3:41 AM",
          "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "3/24/10, 6:06 PM",
          "commitNameOld": "1eb4b8a4e566ca45fe4d690b236bd17d30a62f85",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 76.4,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y, 1) || Math.abs(y - x) \u003c\u003d eps;\n}",
          "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 444,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow.\n@return @code true} if the values are equal or within range of each other.\n",
          "diff": "@@ -1,3 +1,3 @@\n public static boolean equals(double x, double y, double eps) {\n-    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n+    return equals(x, y, 1) || Math.abs(y - x) \u003c\u003d eps;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same sign.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
            "newValue": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow.\n@return @code true} if the values are equal or within range of each other.\n"
          }
        }
      ]
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 410,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same sign.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/MathUtils.java"
      }
    },
    "7ff6d072ece0452874aa2ceeb94eba7305e02cf0": {
      "type": "Ydocchange",
      "commitMessage": "fixed wrong word in javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746583 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/21/09, 12:21 PM",
      "commitName": "7ff6d072ece0452874aa2ceeb94eba7305e02cf0",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/21/09, 12:16 PM",
      "commitNameOld": "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 385,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same sign.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same size.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
        "newValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same sign.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n"
      }
    },
    "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "handle NaN and infinities correctly in the MathUtils.equals method with tolerance\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/21/09, 12:16 PM",
      "commitName": "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "handle NaN and infinities correctly in the MathUtils.equals method with tolerance\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/21/09, 12:16 PM",
          "commitName": "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "2/21/09, 12:01 PM",
          "commitNameOld": "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 385,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same size.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
          "diff": "@@ -1,3 +1,3 @@\n public static boolean equals(double x, double y, double eps) {\n-    return x \u003d\u003d y || (x \u003c y \u0026\u0026 (x + eps) \u003e\u003d y) || (x \u003e y \u0026\u0026 x \u003c\u003d (y + eps));\n+    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "handle NaN and infinities correctly in the MathUtils.equals method with tolerance\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/21/09, 12:16 PM",
          "commitName": "6eec202b7d66dbeb4e2c2b4fa4214b359134ea2f",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "2/21/09, 12:01 PM",
          "commitNameOld": "7f88773d6c3c96c0a2fd24c3e50d1eb80daca11d",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n}",
          "path": "src/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 385,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same size.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
          "diff": "@@ -1,3 +1,3 @@\n public static boolean equals(double x, double y, double eps) {\n-    return x \u003d\u003d y || (x \u003c y \u0026\u0026 (x + eps) \u003e\u003d y) || (x \u003e y \u0026\u0026 x \u003c\u003d (y + eps));\n+    return equals(x, y) || (Math.abs(y - x) \u003c\u003d eps);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n",
            "newValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\u003cp\u003e\nTwo NaNs are considered equals, as are two infinities with same size.\n\u003c/p\u003e\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n"
          }
        }
      ]
    },
    "924b6d76a2d44baf858c3aee46ab1439c9641959": {
      "type": "Yintroduced",
      "commitMessage": "Added a MathUtils method to check equality given some error bounds\nJIRA: MATH-247\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@746506 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/21/09, 5:36 AM",
      "commitName": "924b6d76a2d44baf858c3aee46ab1439c9641959",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,3 @@\n+public static boolean equals(double x, double y, double eps) {\n+    return x \u003d\u003d y || (x \u003c y \u0026\u0026 (x + eps) \u003e\u003d y) || (x \u003e y \u0026\u0026 x \u003c\u003d (y + eps));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static boolean equals(double x, double y, double eps) {\n    return x \u003d\u003d y || (x \u003c y \u0026\u0026 (x + eps) \u003e\u003d y) || (x \u003e y \u0026\u0026 x \u003c\u003d (y + eps));\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 380,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\n\n@param x first value\n@param y second value\n@param eps the amount of absolute error to allow\n@return true if the values are equal or within range of each other\n"
    }
  }
}