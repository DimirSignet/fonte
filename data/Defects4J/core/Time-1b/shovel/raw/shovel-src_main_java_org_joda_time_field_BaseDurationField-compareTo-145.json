{
  "origin": "codeshovel",
  "repositoryName": "Time-1b",
  "repositoryPath": "/tmp/Time-1b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaseDurationField.java",
  "functionName": "compareTo",
  "functionId": "compareTo___otherField-DurationField",
  "sourceFilePath": "src/main/java/org/joda/time/field/BaseDurationField.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 145,
  "functionEndLine": 157,
  "numCommitsSeen": 22,
  "timeTaken": 3089,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
    "6d0c7db8dd96b9105a415d98770ad271ad6a01ee",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": "Ymultichange(Yparameterchange,Ybodychange)",
    "6d0c7db8dd96b9105a415d98770ad271ad6a01ee": "Yfilerename",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yfilerename",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(DurationField otherField) {\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
      "path": "src/main/java/org/joda/time/field/BaseDurationField.java",
      "functionStartLine": 145,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java",
        "newPath": "src/main/java/org/joda/time/field/BaseDurationField.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(DurationField otherField) {\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java",
      "functionStartLine": 145,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/field/BaseDurationField.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java"
      }
    },
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 3:55 PM",
      "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/4/09, 3:55 PM",
          "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1731.0,
          "commitsBetweenForRepo": 689,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(DurationField otherField) {\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/field/BaseDurationField.java",
          "functionStartLine": 145,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,12 @@\n-public int compareTo(Object durationField) {\n-    DurationField otherField \u003d (DurationField) durationField;\n+public int compareTo(DurationField otherField) {\n     long otherMillis \u003d otherField.getUnitMillis();\n     long thisMillis \u003d getUnitMillis();\n     if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n     if (thisMillis \u003c otherMillis) {\n         return -1;\n     } else {\n         return 1;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[durationField-Object]",
            "newValue": "[otherField-DurationField]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "11/4/09, 3:55 PM",
          "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1731.0,
          "commitsBetweenForRepo": 689,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(DurationField otherField) {\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/field/BaseDurationField.java",
          "functionStartLine": 145,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,13 +1,12 @@\n-public int compareTo(Object durationField) {\n-    DurationField otherField \u003d (DurationField) durationField;\n+public int compareTo(DurationField otherField) {\n     long otherMillis \u003d otherField.getUnitMillis();\n     long thisMillis \u003d getUnitMillis();\n     if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n     if (thisMillis \u003c otherMillis) {\n         return -1;\n     } else {\n         return 1;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6d0c7db8dd96b9105a415d98770ad271ad6a01ee": {
      "type": "Yfilerename",
      "commitMessage": "Rename AbstractDurationField to BaseDurationField\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@263 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "7/9/04, 3:37 PM",
      "commitName": "6d0c7db8dd96b9105a415d98770ad271ad6a01ee",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/9/04, 3:35 PM",
      "commitNameOld": "c6886146e9f2290652d71c8d846a1ebe8c4053e0",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/field/BaseDurationField.java",
      "functionStartLine": 176,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/field/AbstractDurationField.java",
        "newPath": "JodaTime/src/java/org/joda/time/field/BaseDurationField.java"
      }
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yfilerename",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "1/11/04, 9:39 AM",
      "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 16.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/field/AbstractDurationField.java",
      "functionStartLine": 175,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
        "newPath": "JodaTime/src/java/org/joda/time/field/AbstractDurationField.java"
      }
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
          "functionStartLine": 175,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,13 @@\n-public int compareTo(ReadableInstant instant) {\n-    if (instant \u003d\u003d null) {\n-        throw new IllegalArgumentException(\"The instant must not be null\");\n-    }\n-    int thisValue \u003d get();\n-    int otherValue \u003d iField.get(instant.getMillis());\n-    if (thisValue \u003c otherValue) {\n-        return -1;\n-    } else if (thisValue \u003e otherValue) {\n-        return 1;\n-    } else {\n+public int compareTo(Object durationField) {\n+    DurationField otherField \u003d (DurationField) durationField;\n+    long otherMillis \u003d otherField.getUnitMillis();\n+    long thisMillis \u003d getUnitMillis();\n+    if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n+    if (thisMillis \u003c otherMillis) {\n+        return -1;\n+    } else {\n+        return 1;\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
            "oldMethodName": "compareTo",
            "newMethodName": "compareTo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
          "functionStartLine": 175,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,13 @@\n-public int compareTo(ReadableInstant instant) {\n-    if (instant \u003d\u003d null) {\n-        throw new IllegalArgumentException(\"The instant must not be null\");\n-    }\n-    int thisValue \u003d get();\n-    int otherValue \u003d iField.get(instant.getMillis());\n-    if (thisValue \u003c otherValue) {\n-        return -1;\n-    } else if (thisValue \u003e otherValue) {\n-        return 1;\n-    } else {\n+public int compareTo(Object durationField) {\n+    DurationField otherField \u003d (DurationField) durationField;\n+    long otherMillis \u003d otherField.getUnitMillis();\n+    long thisMillis \u003d getUnitMillis();\n+    if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n+    if (thisMillis \u003c otherMillis) {\n+        return -1;\n+    } else {\n+        return 1;\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
          "functionStartLine": 175,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,13 @@\n-public int compareTo(ReadableInstant instant) {\n-    if (instant \u003d\u003d null) {\n-        throw new IllegalArgumentException(\"The instant must not be null\");\n-    }\n-    int thisValue \u003d get();\n-    int otherValue \u003d iField.get(instant.getMillis());\n-    if (thisValue \u003c otherValue) {\n-        return -1;\n-    } else if (thisValue \u003e otherValue) {\n-        return 1;\n-    } else {\n+public int compareTo(Object durationField) {\n+    DurationField otherField \u003d (DurationField) durationField;\n+    long otherMillis \u003d otherField.getUnitMillis();\n+    long thisMillis \u003d getUnitMillis();\n+    if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n+    if (thisMillis \u003c otherMillis) {\n+        return -1;\n+    } else {\n+        return 1;\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Compare this field to the same field on another instant.\n\u003cp\u003e\nThe {@link #get()} method is used to obtain the value to compare for\nthis instant and the {@link ReadableInstant#get(DateTimeField)} method\nis used for the specified instant.\n\n@param instant the instant to compare to\n@return -1 if this is less, +1 if more and 0 if equal\n@throws IllegalArgumentException if the instant is null\n",
            "newValue": ""
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/18/03, 2:04 PM",
          "commitNameOld": "1ba4f9861a0cfbc32c56efced3619874a43ec5dd",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public int compareTo(Object durationField) {\n    DurationField otherField \u003d (DurationField) durationField;\n    long otherMillis \u003d otherField.getUnitMillis();\n    long thisMillis \u003d getUnitMillis();\n    if (thisMillis \u003d\u003d otherMillis) {\n        return 0;\n    }\n    if (thisMillis \u003c otherMillis) {\n        return -1;\n    } else {\n        return 1;\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractDurationField.java",
          "functionStartLine": 175,
          "functionName": "compareTo",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,13 @@\n-public int compareTo(ReadableInstant instant) {\n-    if (instant \u003d\u003d null) {\n-        throw new IllegalArgumentException(\"The instant must not be null\");\n-    }\n-    int thisValue \u003d get();\n-    int otherValue \u003d iField.get(instant.getMillis());\n-    if (thisValue \u003c otherValue) {\n-        return -1;\n-    } else if (thisValue \u003e otherValue) {\n-        return 1;\n-    } else {\n+public int compareTo(Object durationField) {\n+    DurationField otherField \u003d (DurationField) durationField;\n+    long otherMillis \u003d otherField.getUnitMillis();\n+    long thisMillis \u003d getUnitMillis();\n+    if (thisMillis \u003d\u003d otherMillis) {\n         return 0;\n     }\n+    if (thisMillis \u003c otherMillis) {\n+        return -1;\n+    } else {\n+        return 1;\n+    }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[instant-ReadableInstant]",
            "newValue": "[durationField-Object]"
          }
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,14 @@\n+public int compareTo(ReadableInstant instant) {\n+    if (instant \u003d\u003d null) {\n+        throw new IllegalArgumentException(\"The instant must not be null\");\n+    }\n+    int thisValue \u003d get();\n+    int otherValue \u003d iField.get(instant.getMillis());\n+    if (thisValue \u003c otherValue) {\n+        return -1;\n+    } else if (thisValue \u003e otherValue) {\n+        return 1;\n+    } else {\n+        return 0;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int compareTo(ReadableInstant instant) {\n    if (instant \u003d\u003d null) {\n        throw new IllegalArgumentException(\"The instant must not be null\");\n    }\n    int thisValue \u003d get();\n    int otherValue \u003d iField.get(instant.getMillis());\n    if (thisValue \u003c otherValue) {\n        return -1;\n    } else if (thisValue \u003e otherValue) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/DateTimeFieldProperty.java",
      "functionStartLine": 315,
      "functionName": "compareTo",
      "functionAnnotation": "",
      "functionDoc": "Compare this field to the same field on another instant.\n\u003cp\u003e\nThe {@link #get()} method is used to obtain the value to compare for\nthis instant and the {@link ReadableInstant#get(DateTimeField)} method\nis used for the specified instant.\n\n@param instant the instant to compare to\n@return -1 if this is less, +1 if more and 0 if equal\n@throws IllegalArgumentException if the instant is null\n"
    }
  }
}