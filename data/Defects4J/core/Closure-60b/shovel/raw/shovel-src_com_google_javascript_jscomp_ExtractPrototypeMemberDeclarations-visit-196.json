{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExtractPrototypeMemberDeclarations.java",
  "functionName": "visit",
  "functionId": "$visit___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 196,
  "functionEndLine": 222,
  "numCommitsSeen": 15,
  "timeTaken": 492,
  "changeHistory": [
    "64bdecd712848ec35f1f43d6ad09291b9d8d2bfb",
    "4cf197f69d8733ac68b02672b2e23d7939e5eb76",
    "de6bda7da621841ee37e8a92399a9e7f0088dbf2",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "64bdecd712848ec35f1f43d6ad09291b9d8d2bfb": "Ybodychange",
    "4cf197f69d8733ac68b02672b2e23d7939e5eb76": "Ybodychange",
    "de6bda7da621841ee37e8a92399a9e7f0088dbf2": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "64bdecd712848ec35f1f43d6ad09291b9d8d2bfb": {
      "type": "Ybodychange",
      "commitMessage": "\nFix ExtractPrototypeMembers so that it uses a fixed variable\nnames, so that it doesn\u0027t break normalization.\nAs it turns out, JSTestC uses anonymous function naming.\nthose anonymous function names are so long that it starts to\nblow out the browser\u0027s JsVM. They need prototype extraction to\nmake the names shorter.\n(maybe this anonymous function \"naming\" is part of the cause\nof gmail\u0027s development woes? we should follow up to see how\nthey\u0027re using it.)\n\nR\u003djohnlenz\nDELTA\u003d57  (18 added, 32 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d59001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@300 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/21/10, 9:16 AM",
      "commitName": "64bdecd712848ec35f1f43d6ad09291b9d8d2bfb",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/19/10, 4:32 PM",
      "commitNameOld": "4cf197f69d8733ac68b02672b2e23d7939e5eb76",
      "commitAuthorOld": "bella@google.com",
      "daysBetweenCommits": 1.7,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n        return;\n    }\n    for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n        PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n        if (prototypeMember \u003d\u003d null) {\n            continue;\n        }\n        ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n        cur \u003d instance.declarations.getLast().node;\n        if (instance.isFavorable()) {\n            instances.add(instance);\n            totalDelta +\u003d instance.delta;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java",
      "functionStartLine": 195,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,18 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n         return;\n     }\n-    if (prototypeAlias \u003d\u003d null) {\n-        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n-    }\n     for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n         PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n         if (prototypeMember \u003d\u003d null) {\n             continue;\n         }\n         ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n         cur \u003d instance.declarations.getLast().node;\n         if (instance.isFavorable()) {\n             instances.add(instance);\n             totalDelta +\u003d instance.delta;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4cf197f69d8733ac68b02672b2e23d7939e5eb76": {
      "type": "Ybodychange",
      "commitMessage": "\nBroke gmail\n\nR\u003dnicksantos\nDELTA\u003d50  (29 added, 14 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d54004\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@290 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/19/10, 4:32 PM",
      "commitName": "4cf197f69d8733ac68b02672b2e23d7939e5eb76",
      "commitAuthor": "bella@google.com",
      "commitDateOld": "7/19/10, 2:02 PM",
      "commitNameOld": "de6bda7da621841ee37e8a92399a9e7f0088dbf2",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n        return;\n    }\n    if (prototypeAlias \u003d\u003d null) {\n        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n    }\n    for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n        PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n        if (prototypeMember \u003d\u003d null) {\n            continue;\n        }\n        ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n        cur \u003d instance.declarations.getLast().node;\n        if (instance.isFavorable()) {\n            instances.add(instance);\n            totalDelta +\u003d instance.delta;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java",
      "functionStartLine": 195,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,21 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n         return;\n     }\n+    if (prototypeAlias \u003d\u003d null) {\n+        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n+    }\n     for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n         PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n         if (prototypeMember \u003d\u003d null) {\n             continue;\n         }\n         ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n         cur \u003d instance.declarations.getLast().node;\n         if (instance.isFavorable()) {\n             instances.add(instance);\n             totalDelta +\u003d instance.delta;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de6bda7da621841ee37e8a92399a9e7f0088dbf2": {
      "type": "Ybodychange",
      "commitMessage": "\nOnly run prototype extraction when variable renaming is on.\n\nR\u003dacleung\nDELTA\u003d50  (14 added, 29 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d53016\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@286 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/19/10, 2:02 PM",
      "commitName": "de6bda7da621841ee37e8a92399a9e7f0088dbf2",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/1/10, 7:38 AM",
      "commitNameOld": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 18.27,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n        return;\n    }\n    for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n        PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n        if (prototypeMember \u003d\u003d null) {\n            continue;\n        }\n        ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n        cur \u003d instance.declarations.getLast().node;\n        if (instance.isFavorable()) {\n            instances.add(instance);\n            totalDelta +\u003d instance.delta;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java",
      "functionStartLine": 195,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,18 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n         return;\n     }\n-    if (prototypeAlias \u003d\u003d null) {\n-        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n-    }\n     for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n         PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n         if (prototypeMember \u003d\u003d null) {\n             continue;\n         }\n         ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n         cur \u003d instance.declarations.getLast().node;\n         if (instance.isFavorable()) {\n             instances.add(instance);\n             totalDelta +\u003d instance.delta;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+@Override\n+public void visit(NodeTraversal t, Node n, Node parent) {\n+    if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n+        return;\n+    }\n+    if (prototypeAlias \u003d\u003d null) {\n+        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n+    }\n+    for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n+        PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n+        if (prototypeMember \u003d\u003d null) {\n+            continue;\n+        }\n+        ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n+        cur \u003d instance.declarations.getLast().node;\n+        if (instance.isFavorable()) {\n+            instances.add(instance);\n+            totalDelta +\u003d instance.delta;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.SCRIPT \u0026\u0026 n.getType() !\u003d Token.BLOCK) {\n        return;\n    }\n    if (prototypeAlias \u003d\u003d null) {\n        prototypeAlias \u003d new VariableNameGenerator(t.getScope()).getNameNewName();\n    }\n    for (Node cur \u003d n.getFirstChild(); cur !\u003d null; cur \u003d cur.getNext()) {\n        PrototypeMemberDeclaration prototypeMember \u003d PrototypeMemberDeclaration.extractDeclaration(cur);\n        if (prototypeMember \u003d\u003d null) {\n            continue;\n        }\n        ExtractionInstance instance \u003d new ExtractionInstance(prototypeMember, n);\n        cur \u003d instance.declarations.getLast().node;\n        if (instance.isFavorable()) {\n            instances.add(instance);\n            totalDelta +\u003d instance.delta;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java",
      "functionStartLine": 189,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}