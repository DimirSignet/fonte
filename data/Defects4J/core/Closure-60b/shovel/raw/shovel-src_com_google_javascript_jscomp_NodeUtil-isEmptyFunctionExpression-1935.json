{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isEmptyFunctionExpression",
  "functionId": "isEmptyFunctionExpression___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Determines if a node is a function expression that has an empty body.\n\n@param node a node\n@return whether the given node is a function expression that is empty\n",
  "functionStartLine": 1935,
  "functionEndLine": 1937,
  "numCommitsSeen": 93,
  "timeTaken": 6304,
  "changeHistory": [
    "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
    "192a60673cfd308fbcb735664fbab98e3cb3a21a"
  ],
  "changeHistoryShort": {
    "ad32e173b7c78f48ff85324dc310fa5b5888e2aa": "Ydocchange",
    "192a60673cfd308fbcb735664fbab98e3cb3a21a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ad32e173b7c78f48ff85324dc310fa5b5888e2aa": {
      "type": "Ydocchange",
      "commitMessage": "\nChanges to completely remove goog.userAgent as required by\njavatests/com/google/javascript/closure/CompileUserAgentTest.  This\nrequires three changes:\n\n1) being able to remove expressions without side-effects in the global\nscope with the PeepholeRemoveDeadCode pass. This is simply a change to\nhandle both BLOCK and SCRIPT.\n\n2) a change to be able to fold constant result if conditions that have\nside-effects (a \u003d 1).  This was a change to include a smarter version\nof NodeUtil.getBooleanValue. A general expression evaluator would be\npreferred.\n\n3) and finally a bit of a hack to handle assignments followed by if\nstatements.  I would prefer a general solution, but this works well\nenough for this purpose.  A good general solution would need a general\nin-place expression evaluator and control-flow value propagation, both\nof which I\u0027ve special cased. It handles this:\n\na \u003d /MSIE/\nif (a) {\na.exec(value);\n}\n\n(we want the regexp object to get inlined into the exec call so it is known to\nbe side-effect free).\n\nR\u003dgboyer,acleung\nDELTA\u003d388  (333 added, 28 deleted, 27 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d90004\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@326 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/10, 12:47 PM",
      "commitName": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "7/23/10, 2:49 PM",
      "commitNameOld": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 11.92,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isEmptyFunctionExpression(Node node) {\n    return isFunctionExpression(node) \u0026\u0026 isEmptyBlock(node.getLastChild());\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1297,
      "functionName": "isEmptyFunctionExpression",
      "functionAnnotation": "",
      "functionDoc": "Determines if a node is a function expression that has an empty body.\n\n@param node a node\n@return whether the given node is a function expression that is empty\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Determines if a node is a function expression that has an empty body.\n\n@param n a node\n@return whether the given node is a function expression that is empty\n",
        "newValue": "Determines if a node is a function expression that has an empty body.\n\n@param node a node\n@return whether the given node is a function expression that is empty\n"
      }
    },
    "192a60673cfd308fbcb735664fbab98e3cb3a21a": {
      "type": "Yintroduced",
      "commitMessage": "\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d53006\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@284 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/16/10, 2:56 AM",
      "commitName": "192a60673cfd308fbcb735664fbab98e3cb3a21a",
      "commitAuthor": "nadaa@google.com",
      "diff": "@@ -0,0 +1,3 @@\n+static boolean isEmptyFunctionExpression(Node node) {\n+    return isFunctionExpression(node) \u0026\u0026 isEmptyBlock(node.getLastChild());\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isEmptyFunctionExpression(Node node) {\n    return isFunctionExpression(node) \u0026\u0026 isEmptyBlock(node.getLastChild());\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1241,
      "functionName": "isEmptyFunctionExpression",
      "functionAnnotation": "",
      "functionDoc": "Determines if a node is a function expression that has an empty body.\n\n@param n a node\n@return whether the given node is a function expression that is empty\n"
    }
  }
}