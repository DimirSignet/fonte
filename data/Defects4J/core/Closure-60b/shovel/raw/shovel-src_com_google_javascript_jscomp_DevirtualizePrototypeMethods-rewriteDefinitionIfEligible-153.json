{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DevirtualizePrototypeMethods.java",
  "functionName": "rewriteDefinitionIfEligible",
  "functionId": "rewriteDefinitionIfEligible___defSite-DefinitionSite__defFinder-SimpleDefinitionFinder",
  "sourceFilePath": "src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java",
  "functionAnnotation": "",
  "functionDoc": "Rewrites method definition and call sites if the method is\ndefined in the global scope exactly once.\n\nDefinition and use site information is provided by the\n{@link SimpleDefinitionFinder} passed in as an argument.\n\n@param defSite definition site to process.\n@param defFinder structure that hold Node -\u003e Definition and\nDefinition -\u003e [UseSite] maps.\n",
  "functionStartLine": 153,
  "functionEndLine": 189,
  "numCommitsSeen": 16,
  "timeTaken": 553,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+private void rewriteDefinitionIfEligible(DefinitionSite defSite, SimpleDefinitionFinder defFinder) {\n+    if (defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition(defFinder, defSite)) {\n+        return;\n+    }\n+    Node node \u003d defSite.node;\n+    if (!isPrototypeMethodDefinition(node)) {\n+        return;\n+    }\n+    for (Node ancestor \u003d node.getParent(); ancestor !\u003d null; ancestor \u003d ancestor.getParent()) {\n+        if (NodeUtil.isControlStructure(ancestor)) {\n+            return;\n+        }\n+    }\n+    String newMethodName \u003d getRewrittenMethodName(node.getLastChild().getString());\n+    rewriteDefinition(node, newMethodName);\n+    rewriteCallSites(defFinder, defSite.definition, newMethodName);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void rewriteDefinitionIfEligible(DefinitionSite defSite, SimpleDefinitionFinder defFinder) {\n    if (defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition(defFinder, defSite)) {\n        return;\n    }\n    Node node \u003d defSite.node;\n    if (!isPrototypeMethodDefinition(node)) {\n        return;\n    }\n    for (Node ancestor \u003d node.getParent(); ancestor !\u003d null; ancestor \u003d ancestor.getParent()) {\n        if (NodeUtil.isControlStructure(ancestor)) {\n            return;\n        }\n    }\n    String newMethodName \u003d getRewrittenMethodName(node.getLastChild().getString());\n    rewriteDefinition(node, newMethodName);\n    rewriteCallSites(defFinder, defSite.definition, newMethodName);\n}",
      "path": "src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java",
      "functionStartLine": 142,
      "functionName": "rewriteDefinitionIfEligible",
      "functionAnnotation": "",
      "functionDoc": "Rewrites method definition and call sites if the method is\ndefined in the global scope exactly once.\n\nDefinition and use site information is provided by the\n{@link SimpleDefinitionFinder} passed in as an argument.\n\n@param defSite definition site to process.\n@param defFinder structure that hold Node -\u003e Definition and\nDefinition -\u003e [UseSite] maps.\n"
    }
  }
}