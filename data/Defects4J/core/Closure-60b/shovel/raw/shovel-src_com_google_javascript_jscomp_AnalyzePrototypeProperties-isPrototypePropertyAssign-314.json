{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnalyzePrototypeProperties.java",
  "functionName": "isPrototypePropertyAssign",
  "functionId": "$isPrototypePropertyAssign___assign-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 314,
  "functionEndLine": 334,
  "numCommitsSeen": 19,
  "timeTaken": 1034,
  "changeHistory": [
    "aa89d05b48332d68b8e6ebcee427b2ac3b4e3184",
    "828828472848b88b6d3b1e847fa8be5dde78e2da",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "aa89d05b48332d68b8e6ebcee427b2ac3b4e3184": "Ybodychange",
    "828828472848b88b6d3b1e847fa8be5dde78e2da": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa89d05b48332d68b8e6ebcee427b2ac3b4e3184": {
      "type": "Ybodychange",
      "commitMessage": "\nOnly remove prototype properties defined with simple assigment\nstatements.\nFixes issue 459.\n\nR\u003dacleung\nDELTA\u003d90  (86 added, 0 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2195\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1160 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/6/11, 3:36 PM",
      "commitName": "aa89d05b48332d68b8e6ebcee427b2ac3b4e3184",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/16/11, 3:01 PM",
      "commitNameOld": "828828472848b88b6d3b1e847fa8be5dde78e2da",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 21.02,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n \u003d assign.getFirstChild();\n    if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP \u0026\u0026 assign.getParent().getType() \u003d\u003d Token.EXPR_RESULT) {\n        boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n        if (isChainedProperty) {\n            Node child \u003d n.getFirstChild().getFirstChild().getNext();\n            if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
      "functionStartLine": 314,
      "functionName": "isPrototypePropertyAssign",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private boolean isPrototypePropertyAssign(Node assign) {\n     Node n \u003d assign.getFirstChild();\n-    if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n+    if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP \u0026\u0026 assign.getParent().getType() \u003d\u003d Token.EXPR_RESULT) {\n         boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n         if (isChainedProperty) {\n             Node child \u003d n.getFirstChild().getFirstChild().getNext();\n             if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n                 return true;\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "828828472848b88b6d3b1e847fa8be5dde78e2da": {
      "type": "Ybodychange",
      "commitMessage": "\nMake sure that the compiler doesn\u0027t crash when you have\nfunction f(undefined) {}\nand you left out the default externs.\nI blame this on a poorly-named function\n\nR\u003djohnlenz\nDELTA\u003d70  (53 added, 7 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1920\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1108 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/16/11, 3:01 PM",
      "commitName": "828828472848b88b6d3b1e847fa8be5dde78e2da",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 34.12,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n \u003d assign.getFirstChild();\n    if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n        boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n        if (isChainedProperty) {\n            Node child \u003d n.getFirstChild().getFirstChild().getNext();\n            if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
      "functionStartLine": 314,
      "functionName": "isPrototypePropertyAssign",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,13 @@\n private boolean isPrototypePropertyAssign(Node assign) {\n     Node n \u003d assign.getFirstChild();\n-    if (n !\u003d null \u0026\u0026 NodeUtil.isLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n+    if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n         boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n         if (isChainedProperty) {\n             Node child \u003d n.getFirstChild().getFirstChild().getNext();\n             if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n                 return true;\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+private boolean isPrototypePropertyAssign(Node assign) {\n+    Node n \u003d assign.getFirstChild();\n+    if (n !\u003d null \u0026\u0026 NodeUtil.isLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n+        boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n+        if (isChainedProperty) {\n+            Node child \u003d n.getFirstChild().getFirstChild().getNext();\n+            if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n \u003d assign.getFirstChild();\n    if (n !\u003d null \u0026\u0026 NodeUtil.isLhs(n, assign) \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP) {\n        boolean isChainedProperty \u003d n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n        if (isChainedProperty) {\n            Node child \u003d n.getFirstChild().getFirstChild().getNext();\n            if (child.getType() \u003d\u003d Token.STRING \u0026\u0026 child.getString().equals(\"prototype\")) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
      "functionStartLine": 277,
      "functionName": "isPrototypePropertyAssign",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}