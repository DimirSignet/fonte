{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MakeDeclaredNamesUnique.java",
  "functionName": "shouldTraverse",
  "functionId": "shouldTraverse___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 106,
  "functionEndLine": 139,
  "numCommitsSeen": 13,
  "timeTaken": 705,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,24 @@\n+@Override\n+public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n+    switch(n.getType()) {\n+        case Token.FUNCTION:\n+            {\n+                Renamer renamer \u003d nameStack.peek().forChildScope();\n+                String name \u003d n.getFirstChild().getString();\n+                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n+                    renamer.addDeclaredName(name);\n+                }\n+                nameStack.push(renamer);\n+            }\n+            break;\n+        case Token.CATCH:\n+            {\n+                Renamer renamer \u003d nameStack.peek().forChildScope();\n+                String name \u003d n.getFirstChild().getString();\n+                renamer.addDeclaredName(name);\n+                nameStack.push(renamer);\n+            }\n+            break;\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    switch(n.getType()) {\n        case Token.FUNCTION:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                    renamer.addDeclaredName(name);\n                }\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.CATCH:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                renamer.addDeclaredName(name);\n                nameStack.push(renamer);\n            }\n            break;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
      "functionStartLine": 100,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}