{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnalyzePrototypeProperties.java",
  "functionName": "markReference",
  "functionId": "$markReference___module-JSModule",
  "sourceFilePath": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
  "functionAnnotation": "",
  "functionDoc": "Mark a reference in a given module to this property name, and record\nthe deepest common module reference.\n\n@param module The module where it was referenced.\n@return Whether the name info has changed.\n",
  "functionStartLine": 655,
  "functionEndLine": 679,
  "numCommitsSeen": 19,
  "timeTaken": 880,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,19 @@\n+boolean markReference(JSModule module) {\n+    boolean hasChanged \u003d false;\n+    if (!referenced) {\n+        referenced \u003d true;\n+        hasChanged \u003d true;\n+    }\n+    if (moduleGraph !\u003d null) {\n+        JSModule originalDeepestCommon \u003d deepestCommonModuleRef;\n+        if (deepestCommonModuleRef \u003d\u003d null) {\n+            deepestCommonModuleRef \u003d module;\n+        } else {\n+            deepestCommonModuleRef \u003d moduleGraph.getDeepestCommonDependencyInclusive(deepestCommonModuleRef, module);\n+        }\n+        if (originalDeepestCommon !\u003d deepestCommonModuleRef) {\n+            hasChanged \u003d true;\n+        }\n+    }\n+    return hasChanged;\n+}\n\\ No newline at end of file\n",
      "actualSource": "boolean markReference(JSModule module) {\n    boolean hasChanged \u003d false;\n    if (!referenced) {\n        referenced \u003d true;\n        hasChanged \u003d true;\n    }\n    if (moduleGraph !\u003d null) {\n        JSModule originalDeepestCommon \u003d deepestCommonModuleRef;\n        if (deepestCommonModuleRef \u003d\u003d null) {\n            deepestCommonModuleRef \u003d module;\n        } else {\n            deepestCommonModuleRef \u003d moduleGraph.getDeepestCommonDependencyInclusive(deepestCommonModuleRef, module);\n        }\n        if (originalDeepestCommon !\u003d deepestCommonModuleRef) {\n            hasChanged \u003d true;\n        }\n    }\n    return hasChanged;\n}",
      "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
      "functionStartLine": 600,
      "functionName": "markReference",
      "functionAnnotation": "",
      "functionDoc": "Mark a reference in a given module to this property name, and record\nthe deepest common module reference.\n\n@param module The module where it was referenced.\n@return Whether the name info has changed.\n"
    }
  }
}