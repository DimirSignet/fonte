{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProcessDefines.java",
  "functionName": "overrideDefines",
  "functionId": "overrideDefines___allDefines-Map__String,DefineInfo__",
  "sourceFilePath": "src/com/google/javascript/jscomp/ProcessDefines.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 122,
  "functionEndLine": 150,
  "numCommitsSeen": 10,
  "timeTaken": 561,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,23 @@\n+private void overrideDefines(Map\u003cString, DefineInfo\u003e allDefines) {\n+    boolean changed \u003d false;\n+    for (Map.Entry\u003cString, DefineInfo\u003e def : allDefines.entrySet()) {\n+        String defineName \u003d def.getKey();\n+        DefineInfo info \u003d def.getValue();\n+        Node inputValue \u003d dominantReplacements.get(defineName);\n+        Node finalValue \u003d inputValue !\u003d null ? inputValue : info.getLastValue();\n+        if (finalValue !\u003d info.initialValue) {\n+            info.initialValueParent.replaceChild(info.initialValue, finalValue.cloneTree());\n+            compiler.addToDebugLog(\"Overriding @define variable \" + defineName);\n+            changed \u003d changed || finalValue.getType() !\u003d info.initialValue.getType() || !finalValue.isEquivalentTo(info.initialValue);\n+        }\n+    }\n+    if (changed) {\n+        compiler.reportCodeChange();\n+    }\n+    Set\u003cString\u003e unusedReplacements \u003d dominantReplacements.keySet();\n+    unusedReplacements.removeAll(allDefines.keySet());\n+    unusedReplacements.removeAll(KNOWN_DEFINES);\n+    for (String unknownDefine : unusedReplacements) {\n+        compiler.report(JSError.make(UNKNOWN_DEFINE_WARNING, unknownDefine));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void overrideDefines(Map\u003cString, DefineInfo\u003e allDefines) {\n    boolean changed \u003d false;\n    for (Map.Entry\u003cString, DefineInfo\u003e def : allDefines.entrySet()) {\n        String defineName \u003d def.getKey();\n        DefineInfo info \u003d def.getValue();\n        Node inputValue \u003d dominantReplacements.get(defineName);\n        Node finalValue \u003d inputValue !\u003d null ? inputValue : info.getLastValue();\n        if (finalValue !\u003d info.initialValue) {\n            info.initialValueParent.replaceChild(info.initialValue, finalValue.cloneTree());\n            compiler.addToDebugLog(\"Overriding @define variable \" + defineName);\n            changed \u003d changed || finalValue.getType() !\u003d info.initialValue.getType() || !finalValue.isEquivalentTo(info.initialValue);\n        }\n    }\n    if (changed) {\n        compiler.reportCodeChange();\n    }\n    Set\u003cString\u003e unusedReplacements \u003d dominantReplacements.keySet();\n    unusedReplacements.removeAll(allDefines.keySet());\n    unusedReplacements.removeAll(KNOWN_DEFINES);\n    for (String unknownDefine : unusedReplacements) {\n        compiler.report(JSError.make(UNKNOWN_DEFINE_WARNING, unknownDefine));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessDefines.java",
      "functionStartLine": 113,
      "functionName": "overrideDefines",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}