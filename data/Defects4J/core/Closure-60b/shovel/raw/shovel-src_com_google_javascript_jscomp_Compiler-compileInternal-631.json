{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Compiler.java",
  "functionName": "compileInternal",
  "functionId": "compileInternal",
  "sourceFilePath": "src/com/google/javascript/jscomp/Compiler.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 631,
  "functionEndLine": 671,
  "numCommitsSeen": 90,
  "timeTaken": 5900,
  "changeHistory": [
    "4229da4361f428863d38b99b2d6ed213246571be",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3",
    "3924ff1e4a236d68a0b5448d185537d90ca04419",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4229da4361f428863d38b99b2d6ed213246571be": "Ybodychange",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": "Ybodychange",
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": "Ybodychange",
    "3924ff1e4a236d68a0b5448d185537d90ca04419": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4229da4361f428863d38b99b2d6ed213246571be": {
      "type": "Ybodychange",
      "commitMessage": "Make it possible to extern exports without writing them out to a file\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@256 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/28/10, 12:21 PM",
      "commitName": "4229da4361f428863d38b99b2d6ed213246571be",
      "commitAuthor": "mbolin",
      "commitDateOld": "6/22/10, 4:00 PM",
      "commitNameOld": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n        return;\n    }\n    if (!precheck()) {\n        return;\n    }\n    if (options.nameAnonymousFunctionsOnly) {\n        check();\n        return;\n    }\n    if (!options.skipAllPasses) {\n        check();\n        if (hasErrors()) {\n            return;\n        }\n        if (options.isExternExportsEnabled() || options.externExportsPath !\u003d null) {\n            externExports();\n        }\n        if (!options.ideMode) {\n            optimize();\n        }\n    }\n    if (options.recordFunctionInformation) {\n        recordFunctionInformation();\n    }\n    if (options.devMode \u003d\u003d DevMode.START_AND_END) {\n        runSanityCheck();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 565,
      "functionName": "compileInternal",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,31 @@\n private void compileInternal() {\n     parse();\n     if (hasErrors()) {\n         return;\n     }\n     if (!precheck()) {\n         return;\n     }\n     if (options.nameAnonymousFunctionsOnly) {\n         check();\n         return;\n     }\n     if (!options.skipAllPasses) {\n         check();\n         if (hasErrors()) {\n             return;\n         }\n-        if (options.externExportsPath !\u003d null) {\n+        if (options.isExternExportsEnabled() || options.externExportsPath !\u003d null) {\n             externExports();\n         }\n         if (!options.ideMode) {\n             optimize();\n         }\n     }\n     if (options.recordFunctionInformation) {\n         recordFunctionInformation();\n     }\n     if (options.devMode \u003d\u003d DevMode.START_AND_END) {\n         runSanityCheck();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": {
      "type": "Ybodychange",
      "commitMessage": "fix silly 2004-era naming conventions (Nick)\nR\u003djohn\nDELTA\u003d134  (0 added, 0 deleted, 134 changed)\n\nInsert a place holder file for any empty modules. (Alan)\nR\u003dnick\nDELTA\u003d53  (46 added, 6 deleted, 1 changed)\n\nMaps API extern update.\n(Contributed by Chad Killingsworth)\nFixes issue 121\nDELTA\u003d86  (48 added, 16 deleted, 22 changed)\n\n\nGoogle Loader API externs.\n(Contributed by Chad Killingsworth)\nFixes issue 126\nDELTA\u003d54  (54 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@149 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/22/10, 10:51 PM",
      "commitName": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/22/10, 3:55 PM",
      "commitNameOld": "b347ce3a71e23a4ab92dc0a6c07d43e2f497c953",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n        return;\n    }\n    if (!precheck()) {\n        return;\n    }\n    if (options.nameAnonymousFunctionsOnly) {\n        check();\n        return;\n    }\n    if (!options.skipAllPasses) {\n        check();\n        if (hasErrors()) {\n            return;\n        }\n        if (options.externExportsPath !\u003d null) {\n            externExports();\n        }\n        if (!options.ideMode) {\n            optimize();\n        }\n    }\n    if (options.recordFunctionInformation) {\n        recordFunctionInformation();\n    }\n    if (options.devMode \u003d\u003d DevMode.START_AND_END) {\n        runSanityCheck();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 541,
      "functionName": "compileInternal",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,31 +1,31 @@\n private void compileInternal() {\n     parse();\n     if (hasErrors()) {\n         return;\n     }\n     if (!precheck()) {\n         return;\n     }\n-    if (options_.nameAnonymousFunctionsOnly) {\n+    if (options.nameAnonymousFunctionsOnly) {\n         check();\n         return;\n     }\n-    if (!options_.skipAllPasses) {\n+    if (!options.skipAllPasses) {\n         check();\n         if (hasErrors()) {\n             return;\n         }\n-        if (options_.externExportsPath !\u003d null) {\n+        if (options.externExportsPath !\u003d null) {\n             externExports();\n         }\n-        if (!options_.ideMode) {\n+        if (!options.ideMode) {\n             optimize();\n         }\n     }\n-    if (options_.recordFunctionInformation) {\n+    if (options.recordFunctionInformation) {\n         recordFunctionInformation();\n     }\n-    if (options_.devMode \u003d\u003d DevMode.START_AND_END) {\n+    if (options.devMode \u003d\u003d DevMode.START_AND_END) {\n         runSanityCheck();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": {
      "type": "Ybodychange",
      "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/8/09, 3:50 PM",
      "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/7/09, 1:53 PM",
      "commitNameOld": "845f5ff65858fd0d1829f3d2f16f758725e8028f",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n        return;\n    }\n    if (!precheck()) {\n        return;\n    }\n    if (options_.nameAnonymousFunctionsOnly) {\n        check();\n        return;\n    }\n    if (!options_.skipAllPasses) {\n        check();\n        if (hasErrors()) {\n            return;\n        }\n        if (options_.externExportsPath !\u003d null) {\n            externExports();\n        }\n        if (!options_.ideMode) {\n            optimize();\n        }\n    }\n    if (options_.recordFunctionInformation) {\n        recordFunctionInformation();\n    }\n    if (options_.devMode \u003d\u003d DevMode.START_AND_END) {\n        runSanityCheck();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 509,
      "functionName": "compileInternal",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,31 @@\n private void compileInternal() {\n     parse();\n     if (hasErrors()) {\n         return;\n     }\n     if (!precheck()) {\n         return;\n     }\n     if (options_.nameAnonymousFunctionsOnly) {\n         check();\n         return;\n     }\n     if (!options_.skipAllPasses) {\n         check();\n         if (hasErrors()) {\n             return;\n         }\n         if (options_.externExportsPath !\u003d null) {\n             externExports();\n         }\n         if (!options_.ideMode) {\n             optimize();\n         }\n     }\n     if (options_.recordFunctionInformation) {\n         recordFunctionInformation();\n     }\n+    if (options_.devMode \u003d\u003d DevMode.START_AND_END) {\n+        runSanityCheck();\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3924ff1e4a236d68a0b5448d185537d90ca04419": {
      "type": "Ybodychange",
      "commitMessage": "Warn about all with statements, unless there\u0027s an explicit\n/** @suppress {with} */ tag\n\nRefactor a bunch of stuff into PassConfigs\n\nAdd a bunch of parser tests.\n\nUp-integrate John and Norris\u0027 latest changes to Rhino at trunk\n\nMinor type-tightening bug fixes.\n\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@18 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/2/09, 5:12 PM",
      "commitName": "3924ff1e4a236d68a0b5448d185537d90ca04419",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/1/09, 8:28 AM",
      "commitNameOld": "a478193982ce1fb9271e3f7ebcc1369913c9a859",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 1.36,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n        return;\n    }\n    if (!precheck()) {\n        return;\n    }\n    if (options_.nameAnonymousFunctionsOnly) {\n        check();\n        return;\n    }\n    if (!options_.skipAllPasses) {\n        check();\n        if (hasErrors()) {\n            return;\n        }\n        if (options_.externExportsPath !\u003d null) {\n            externExports();\n        }\n        if (!options_.ideMode) {\n            optimize();\n        }\n    }\n    if (options_.recordFunctionInformation) {\n        recordFunctionInformation();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 498,
      "functionName": "compileInternal",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,28 @@\n private void compileInternal() {\n     parse();\n     if (hasErrors()) {\n         return;\n     }\n     if (!precheck()) {\n         return;\n     }\n     if (options_.nameAnonymousFunctionsOnly) {\n-        nameAnonymousFunctions(options_.anonymousFunctionNaming);\n+        check();\n         return;\n     }\n     if (!options_.skipAllPasses) {\n         check();\n         if (hasErrors()) {\n             return;\n         }\n         if (options_.externExportsPath !\u003d null) {\n             externExports();\n         }\n         if (!options_.ideMode) {\n             optimize();\n         }\n     }\n     if (options_.recordFunctionInformation) {\n         recordFunctionInformation();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,28 @@\n+private void compileInternal() {\n+    parse();\n+    if (hasErrors()) {\n+        return;\n+    }\n+    if (!precheck()) {\n+        return;\n+    }\n+    if (options_.nameAnonymousFunctionsOnly) {\n+        nameAnonymousFunctions(options_.anonymousFunctionNaming);\n+        return;\n+    }\n+    if (!options_.skipAllPasses) {\n+        check();\n+        if (hasErrors()) {\n+            return;\n+        }\n+        if (options_.externExportsPath !\u003d null) {\n+            externExports();\n+        }\n+        if (!options_.ideMode) {\n+            optimize();\n+        }\n+    }\n+    if (options_.recordFunctionInformation) {\n+        recordFunctionInformation();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void compileInternal() {\n    parse();\n    if (hasErrors()) {\n        return;\n    }\n    if (!precheck()) {\n        return;\n    }\n    if (options_.nameAnonymousFunctionsOnly) {\n        nameAnonymousFunctions(options_.anonymousFunctionNaming);\n        return;\n    }\n    if (!options_.skipAllPasses) {\n        check();\n        if (hasErrors()) {\n            return;\n        }\n        if (options_.externExportsPath !\u003d null) {\n            externExports();\n        }\n        if (!options_.ideMode) {\n            optimize();\n        }\n    }\n    if (options_.recordFunctionInformation) {\n        recordFunctionInformation();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 528,
      "functionName": "compileInternal",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}