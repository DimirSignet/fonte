{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MethodCompilerPass.java",
  "functionName": "processPrototypeParent",
  "functionId": "$processPrototypeParent___t-NodeTraversal__n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/MethodCompilerPass.java",
  "functionAnnotation": "",
  "functionDoc": "Processes the parent of a GETPROP prototype, which can either be\nanother GETPROP (in the case of Foo.prototype.bar), or can be\nan assignment (in the case of Foo.prototype \u003d ...).\n",
  "functionStartLine": 230,
  "functionEndLine": 255,
  "numCommitsSeen": 14,
  "timeTaken": 577,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+private void processPrototypeParent(NodeTraversal t, Node n) {\n+    switch(n.getType()) {\n+        case Token.GETPROP:\n+        case Token.GETELEM:\n+            Node dest \u003d n.getFirstChild().getNext();\n+            Node parent \u003d n.getParent().getParent();\n+            if (dest.getType() \u003d\u003d Token.STRING \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n+                Node assignee \u003d parent.getFirstChild().getNext();\n+                addPossibleSignature(dest.getString(), assignee, t);\n+            }\n+            break;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void processPrototypeParent(NodeTraversal t, Node n) {\n    switch(n.getType()) {\n        case Token.GETPROP:\n        case Token.GETELEM:\n            Node dest \u003d n.getFirstChild().getNext();\n            Node parent \u003d n.getParent().getParent();\n            if (dest.getType() \u003d\u003d Token.STRING \u0026\u0026 parent.getType() \u003d\u003d Token.ASSIGN) {\n                Node assignee \u003d parent.getFirstChild().getNext();\n                addPossibleSignature(dest.getString(), assignee, t);\n            }\n            break;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/MethodCompilerPass.java",
      "functionStartLine": 254,
      "functionName": "processPrototypeParent",
      "functionAnnotation": "",
      "functionDoc": "Processes the parent of a GETPROP prototype, which can either be\nanother GETPROP (in the case of Foo.prototype.bar), or can be\nan assignment (in the case of Foo.prototype \u003d ...).\n"
    }
  }
}