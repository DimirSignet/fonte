{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ControlFlowAnalysis.java",
  "functionName": "visit",
  "functionId": "visit___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 295,
  "functionEndLine": 355,
  "numCommitsSeen": 16,
  "timeTaken": 1118,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,62 @@\n+@Override\n+public void visit(NodeTraversal t, Node n, Node parent) {\n+    switch(n.getType()) {\n+        case Token.IF:\n+            handleIf(n);\n+            return;\n+        case Token.WHILE:\n+            handleWhile(n);\n+            return;\n+        case Token.DO:\n+            handleDo(n);\n+            return;\n+        case Token.FOR:\n+            handleFor(n);\n+            return;\n+        case Token.SWITCH:\n+            handleSwitch(n);\n+            return;\n+        case Token.CASE:\n+            handleCase(n);\n+            return;\n+        case Token.DEFAULT:\n+            handleDefault(n);\n+            return;\n+        case Token.BLOCK:\n+        case Token.SCRIPT:\n+            handleStmtList(n);\n+            return;\n+        case Token.FUNCTION:\n+            handleFunction(n);\n+            return;\n+        case Token.EXPR_RESULT:\n+            handleExpr(n);\n+            return;\n+        case Token.THROW:\n+            handleThrow(n);\n+            return;\n+        case Token.TRY:\n+            handleTry(n);\n+            return;\n+        case Token.CATCH:\n+            handleCatch(n);\n+            return;\n+        case Token.BREAK:\n+            handleBreak(n);\n+            return;\n+        case Token.CONTINUE:\n+            handleContinue(n);\n+            return;\n+        case Token.RETURN:\n+            handleReturn(n);\n+            return;\n+        case Token.WITH:\n+            handleWith(n);\n+            return;\n+        case Token.LABEL:\n+            return;\n+        default:\n+            handleStmt(n);\n+            return;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    switch(n.getType()) {\n        case Token.IF:\n            handleIf(n);\n            return;\n        case Token.WHILE:\n            handleWhile(n);\n            return;\n        case Token.DO:\n            handleDo(n);\n            return;\n        case Token.FOR:\n            handleFor(n);\n            return;\n        case Token.SWITCH:\n            handleSwitch(n);\n            return;\n        case Token.CASE:\n            handleCase(n);\n            return;\n        case Token.DEFAULT:\n            handleDefault(n);\n            return;\n        case Token.BLOCK:\n        case Token.SCRIPT:\n            handleStmtList(n);\n            return;\n        case Token.FUNCTION:\n            handleFunction(n);\n            return;\n        case Token.EXPR_RESULT:\n            handleExpr(n);\n            return;\n        case Token.THROW:\n            handleThrow(n);\n            return;\n        case Token.TRY:\n            handleTry(n);\n            return;\n        case Token.CATCH:\n            handleCatch(n);\n            return;\n        case Token.BREAK:\n            handleBreak(n);\n            return;\n        case Token.CONTINUE:\n            handleContinue(n);\n            return;\n        case Token.RETURN:\n            handleReturn(n);\n            return;\n        case Token.WITH:\n            handleWith(n);\n            return;\n        case Token.LABEL:\n            return;\n        default:\n            handleStmt(n);\n            return;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
      "functionStartLine": 292,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}