{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultPassConfig.java",
  "functionName": "getCodeRemovingPasses",
  "functionId": "getCodeRemovingPasses",
  "sourceFilePath": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
  "functionAnnotation": "",
  "functionDoc": "Creates several passes aimed at removing code.\n",
  "functionStartLine": 665,
  "functionEndLine": 693,
  "numCommitsSeen": 127,
  "timeTaken": 7963,
  "changeHistory": [
    "620fc21fa289cf0fda52c3d310a41d9fc2103be9",
    "f9d8ba4dffcd00329d5197aba72d1b7403e1d4c4",
    "541402929a600a95bf099513908b4efd8b0e1c5b",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "620fc21fa289cf0fda52c3d310a41d9fc2103be9": "Ybodychange",
    "f9d8ba4dffcd00329d5197aba72d1b7403e1d4c4": "Ybodychange",
    "541402929a600a95bf099513908b4efd8b0e1c5b": "Ybodychange",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Ybodychange",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": "Ymultichange(Yparameterchange,Ybodychange)",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "620fc21fa289cf0fda52c3d310a41d9fc2103be9": {
      "type": "Ybodychange",
      "commitMessage": "\nEnable local collapsing of object literals.\n\nR\u003dacleung\nDELTA\u003d81  (69 added, 9 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2323\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/17/11, 2:08 PM",
      "commitName": "620fc21fa289cf0fda52c3d310a41d9fc2103be9",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/16/11, 5:29 PM",
      "commitNameOld": "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.collapseObjectLiterals \u0026\u0026 !isInliningForbidden()) {\n        passes.add(collapseObjectLiterals);\n    }\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(peepholeOptimizations);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 669,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n",
      "diff": "@@ -1,20 +1,23 @@\n private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n+    if (options.collapseObjectLiterals \u0026\u0026 !isInliningForbidden()) {\n+        passes.add(collapseObjectLiterals);\n+    }\n     if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(peepholeOptimizations);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f9d8ba4dffcd00329d5197aba72d1b7403e1d4c4": {
      "type": "Ybodychange",
      "commitMessage": "\nRemove the removeConstantExpression option as it is now redundant.\n\nR\u003dacleung\nDELTA\u003d48  (1 added, 44 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d237411\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@443 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/20/10, 10:14 AM",
      "commitName": "f9d8ba4dffcd00329d5197aba72d1b7403e1d4c4",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "9/16/10, 2:20 PM",
      "commitNameOld": "d00fc0c64dba6762b649f9690cd52c68b849e118",
      "commitAuthorOld": "mgoodman@google.com",
      "daysBetweenCommits": 3.83,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(peepholeOptimizations);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 637,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n",
      "diff": "@@ -1,23 +1,20 @@\n private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n     if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n-    if (options.removeConstantExpressions) {\n-        passes.add(removeConstantExpressions);\n-    }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(peepholeOptimizations);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "541402929a600a95bf099513908b4efd8b0e1c5b": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/28 16:56:22 by dhans\n\n        Array(arg0, arg1, ...) folds into [arg0, arg1, ...] if\n        possible.\n\n        R\u003djohnlenz\n        DELTA\u003d126  (101 added, 0 deleted, 25 changed)\n\nChange on 2010/06/28 17:36:40 by johnlenz\n\n        Modify the AST construction so that \"-2\" is a single Node instead of a\n        \"NEG\" and a \"NUMBER\" node. Simplifies unit testing in some cases.\n        Update and enable a couple of disable tests while I\u0027m here.\n\n        R\u003dbowdidge\n        DELTA\u003d82  (63 added, 3 deleted, 16 changed)\n\nChange on 2010/06/29 00:59:44 by lukaszo\n\n        Adding adoptNode to the Document prototype.\n\n        R\u003dacleung\n        DELTA\u003d7  (7 added, 0 deleted, 0 changed)\n\nChange on 2010/06/29 08:30:43 by dcc\n\n        Remove the (now empty) FoldConstants pass and all references to it.\n\n        R\u003dacleung\n        DELTA\u003d64  (0 added, 64 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d46001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@258 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/29/10, 2:10 PM",
      "commitName": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/22/10, 4:00 PM",
      "commitNameOld": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(peepholeOptimizations);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 601,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n",
      "diff": "@@ -1,24 +1,23 @@\n private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n     if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.removeConstantExpressions) {\n         passes.add(removeConstantExpressions);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n-        passes.add(foldConstants);\n         passes.add(peepholeOptimizations);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/25/10, 10:51 AM",
      "commitNameOld": "170b23fa89cdcc38411fc29ec4453935e0903b16",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 4.09,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(foldConstants);\n        passes.add(peepholeOptimizations);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 602,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n",
      "diff": "@@ -1,23 +1,24 @@\n private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n     if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.removeConstantExpressions) {\n         passes.add(removeConstantExpressions);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(foldConstants);\n+        passes.add(peepholeOptimizations);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Change the internal representation of constant variables.\n\nRun inline-variables before smart-name-removal.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/17/09, 4:20 PM",
      "commitName": "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Change the internal representation of constant variables.\n\nRun inline-variables before smart-name-removal.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/17/09, 4:20 PM",
          "commitName": "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "12/16/09, 6:37 PM",
          "commitNameOld": "06377401a3b08af2cc75c10e603b3ded983aaf8c",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 0.9,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(foldConstants);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
          "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
          "functionStartLine": 552,
          "functionName": "getCodeRemovingPasses",
          "functionAnnotation": "",
          "functionDoc": "Creates several passes aimed at removing code.\n",
          "diff": "@@ -1,23 +1,23 @@\n-private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n+private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n-    if ((options.inlineVariables || options.inlineLocalVariables) \u0026\u0026 !beforeSmartNameRemoval) {\n+    if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.removeConstantExpressions) {\n         passes.add(removeConstantExpressions);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(foldConstants);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[beforeSmartNameRemoval-boolean]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Change the internal representation of constant variables.\n\nRun inline-variables before smart-name-removal.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/17/09, 4:20 PM",
          "commitName": "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "12/16/09, 6:37 PM",
          "commitNameOld": "06377401a3b08af2cc75c10e603b3ded983aaf8c",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 0.9,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables || options.inlineLocalVariables) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(foldConstants);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
          "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
          "functionStartLine": 552,
          "functionName": "getCodeRemovingPasses",
          "functionAnnotation": "",
          "functionDoc": "Creates several passes aimed at removing code.\n",
          "diff": "@@ -1,23 +1,23 @@\n-private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n+private List\u003cPassFactory\u003e getCodeRemovingPasses() {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n-    if ((options.inlineVariables || options.inlineLocalVariables) \u0026\u0026 !beforeSmartNameRemoval) {\n+    if (options.inlineVariables || options.inlineLocalVariables) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.removeConstantExpressions) {\n         passes.add(removeConstantExpressions);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(foldConstants);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Ybodychange",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/19/09, 1:23 PM",
      "commitNameOld": "6a6ea480bae01f40f9795218ac911bb7de18d34a",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 5.73,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if ((options.inlineVariables || options.inlineLocalVariables) \u0026\u0026 !beforeSmartNameRemoval) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(foldConstants);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 348,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n",
      "diff": "@@ -1,23 +1,23 @@\n private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n     List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n-    if (options.inlineVariables \u0026\u0026 !beforeSmartNameRemoval) {\n+    if ((options.inlineVariables || options.inlineLocalVariables) \u0026\u0026 !beforeSmartNameRemoval) {\n         passes.add(inlineVariables);\n     } else if (options.inlineConstantVars) {\n         passes.add(inlineConstants);\n     }\n     if (options.removeConstantExpressions) {\n         passes.add(removeConstantExpressions);\n     }\n     if (options.foldConstants) {\n         passes.add(minimizeExitPoints);\n         passes.add(foldConstants);\n     }\n     if (options.removeDeadCode) {\n         passes.add(removeUnreachableCode);\n     }\n     if (options.removeUnusedPrototypeProperties) {\n         passes.add(removeUnusedPrototypeProperties);\n     }\n     assertAllLoopablePasses(passes);\n     return passes;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,23 @@\n+private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n+    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n+    if (options.inlineVariables \u0026\u0026 !beforeSmartNameRemoval) {\n+        passes.add(inlineVariables);\n+    } else if (options.inlineConstantVars) {\n+        passes.add(inlineConstants);\n+    }\n+    if (options.removeConstantExpressions) {\n+        passes.add(removeConstantExpressions);\n+    }\n+    if (options.foldConstants) {\n+        passes.add(minimizeExitPoints);\n+        passes.add(foldConstants);\n+    }\n+    if (options.removeDeadCode) {\n+        passes.add(removeUnreachableCode);\n+    }\n+    if (options.removeUnusedPrototypeProperties) {\n+        passes.add(removeUnusedPrototypeProperties);\n+    }\n+    assertAllLoopablePasses(passes);\n+    return passes;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private List\u003cPassFactory\u003e getCodeRemovingPasses(boolean beforeSmartNameRemoval) {\n    List\u003cPassFactory\u003e passes \u003d Lists.newArrayList();\n    if (options.inlineVariables \u0026\u0026 !beforeSmartNameRemoval) {\n        passes.add(inlineVariables);\n    } else if (options.inlineConstantVars) {\n        passes.add(inlineConstants);\n    }\n    if (options.removeConstantExpressions) {\n        passes.add(removeConstantExpressions);\n    }\n    if (options.foldConstants) {\n        passes.add(minimizeExitPoints);\n        passes.add(foldConstants);\n    }\n    if (options.removeDeadCode) {\n        passes.add(removeUnreachableCode);\n    }\n    if (options.removeUnusedPrototypeProperties) {\n        passes.add(removeUnusedPrototypeProperties);\n    }\n    assertAllLoopablePasses(passes);\n    return passes;\n}",
      "path": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
      "functionStartLine": 337,
      "functionName": "getCodeRemovingPasses",
      "functionAnnotation": "",
      "functionDoc": "Creates several passes aimed at removing code.\n"
    }
  }
}