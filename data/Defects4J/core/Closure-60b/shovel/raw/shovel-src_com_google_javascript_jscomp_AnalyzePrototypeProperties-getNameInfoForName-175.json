{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnalyzePrototypeProperties.java",
  "functionName": "getNameInfoForName",
  "functionId": "getNameInfoForName___name-String__type-SymbolType",
  "sourceFilePath": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the name info for the property or variable of a given name,\nand creates a new one if necessary.\n\n@param name The name of the symbol.\n@param type The type of symbol.\n",
  "functionStartLine": 175,
  "functionEndLine": 186,
  "numCommitsSeen": 19,
  "timeTaken": 816,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+private NameInfo getNameInfoForName(String name, SymbolType type) {\n+    Map\u003cString, NameInfo\u003e map \u003d type \u003d\u003d PROPERTY ? propertyNameInfo : varNameInfo;\n+    if (map.containsKey(name)) {\n+        return map.get(name);\n+    } else {\n+        NameInfo nameInfo \u003d new NameInfo(name);\n+        map.put(name, nameInfo);\n+        symbolGraph.createNode(nameInfo);\n+        return nameInfo;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private NameInfo getNameInfoForName(String name, SymbolType type) {\n    Map\u003cString, NameInfo\u003e map \u003d type \u003d\u003d PROPERTY ? propertyNameInfo : varNameInfo;\n    if (map.containsKey(name)) {\n        return map.get(name);\n    } else {\n        NameInfo nameInfo \u003d new NameInfo(name);\n        map.put(name, nameInfo);\n        symbolGraph.createNode(nameInfo);\n        return nameInfo;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
      "functionStartLine": 174,
      "functionName": "getNameInfoForName",
      "functionAnnotation": "",
      "functionDoc": "Gets the name info for the property or variable of a given name,\nand creates a new one if necessary.\n\n@param name The name of the symbol.\n@param type The type of symbol.\n"
    }
  }
}