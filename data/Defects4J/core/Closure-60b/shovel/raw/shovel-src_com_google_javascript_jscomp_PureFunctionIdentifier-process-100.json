{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PureFunctionIdentifier.java",
  "functionName": "process",
  "functionId": "process___externsAst-Node__srcAst-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 100,
  "functionEndLine": 117,
  "numCommitsSeen": 25,
  "timeTaken": 1329,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+@Override\n+public void process(Node externsAst, Node srcAst) {\n+    if (externs !\u003d null || root !\u003d null) {\n+        throw new IllegalStateException(\"It is illegal to call PureFunctionIdentifier.process \" + \"twice the same instance.  Please use a new \" + \"PureFunctionIdentifier instance each time.\");\n+    }\n+    externs \u003d externsAst;\n+    root \u003d srcAst;\n+    NodeTraversal.traverse(compiler, externs, new FunctionAnalyzer(true));\n+    NodeTraversal.traverse(compiler, root, new FunctionAnalyzer(false));\n+    propagateSideEffects();\n+    markPureFunctionCalls();\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void process(Node externsAst, Node srcAst) {\n    if (externs !\u003d null || root !\u003d null) {\n        throw new IllegalStateException(\"It is illegal to call PureFunctionIdentifier.process \" + \"twice the same instance.  Please use a new \" + \"PureFunctionIdentifier instance each time.\");\n    }\n    externs \u003d externsAst;\n    root \u003d srcAst;\n    NodeTraversal.traverse(compiler, externs, new FunctionAnalyzer(true));\n    NodeTraversal.traverse(compiler, root, new FunctionAnalyzer(false));\n    propagateSideEffects();\n    markPureFunctionCalls();\n}",
      "path": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
      "functionStartLine": 86,
      "functionName": "process",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}