{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionRewriter.java",
  "functionName": "reduce",
  "functionId": "$reduce___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionRewriter.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 245,
  "functionEndLine": 252,
  "numCommitsSeen": 12,
  "timeTaken": 501,
  "changeHistory": [
    "ebb59a97610015bc41bda7f458dd1428a3a3e335",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/23/10, 11:31 AM",
      "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "12/8/09, 3:50 PM",
      "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 135.78,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic Node reduce(Node node) {\n    if (!NodeUtil.isFunctionExpression(node)) {\n        return node;\n    }\n    Node propName \u003d getSetPropertyName(node);\n    if (propName !\u003d null) {\n        if (propName.getType() !\u003d Token.STRING) {\n            throw new IllegalStateException(\"Expected STRING, got \" + Token.name(propName.getType()));\n        }\n        return buildCallNode(FACTORY_METHOD_NAME, propName, node.getLineno(), node.getCharno());\n    } else {\n        return node;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionRewriter.java",
      "functionStartLine": 492,
      "functionName": "reduce",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n @Override\n public Node reduce(Node node) {\n-    if (!NodeUtil.isAnonymousFunction(node)) {\n+    if (!NodeUtil.isFunctionExpression(node)) {\n         return node;\n     }\n     Node propName \u003d getSetPropertyName(node);\n     if (propName !\u003d null) {\n         if (propName.getType() !\u003d Token.STRING) {\n             throw new IllegalStateException(\"Expected STRING, got \" + Token.name(propName.getType()));\n         }\n         return buildCallNode(FACTORY_METHOD_NAME, propName, node.getLineno(), node.getCharno());\n     } else {\n         return node;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+@Override\n+public Node reduce(Node node) {\n+    if (!NodeUtil.isAnonymousFunction(node)) {\n+        return node;\n+    }\n+    Node propName \u003d getSetPropertyName(node);\n+    if (propName !\u003d null) {\n+        if (propName.getType() !\u003d Token.STRING) {\n+            throw new IllegalStateException(\"Expected STRING, got \" + Token.name(propName.getType()));\n+        }\n+        return buildCallNode(FACTORY_METHOD_NAME, propName, node.getLineno(), node.getCharno());\n+    } else {\n+        return node;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic Node reduce(Node node) {\n    if (!NodeUtil.isAnonymousFunction(node)) {\n        return node;\n    }\n    Node propName \u003d getSetPropertyName(node);\n    if (propName !\u003d null) {\n        if (propName.getType() !\u003d Token.STRING) {\n            throw new IllegalStateException(\"Expected STRING, got \" + Token.name(propName.getType()));\n        }\n        return buildCallNode(FACTORY_METHOD_NAME, propName, node.getLineno(), node.getCharno());\n    } else {\n        return node;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionRewriter.java",
      "functionStartLine": 492,
      "functionName": "reduce",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}