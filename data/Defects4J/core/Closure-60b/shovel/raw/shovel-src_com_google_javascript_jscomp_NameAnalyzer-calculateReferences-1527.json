{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameAnalyzer.java",
  "functionName": "calculateReferences",
  "functionId": "calculateReferences",
  "sourceFilePath": "src/com/google/javascript/jscomp/NameAnalyzer.java",
  "functionAnnotation": "",
  "functionDoc": "Propagate \"referenced\" property down the graph.\n",
  "functionStartLine": 1527,
  "functionEndLine": 1536,
  "numCommitsSeen": 28,
  "timeTaken": 1979,
  "changeHistory": [
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": "Ymultichange(Ybodychange,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Fix a bunch of passes to preserve more type information.\n\nFix goog.provide/goog.require handling to work in the presence of modules.\n\nImprove a bunch of type annotations in gecko_dom.\n\nMake NameAnalyzer use the Graph package.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@95 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/8/10, 11:30 AM",
      "commitName": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Fix a bunch of passes to preserve more type information.\n\nFix goog.provide/goog.require handling to work in the presence of modules.\n\nImprove a bunch of type annotations in gecko_dom.\n\nMake NameAnalyzer use the Graph package.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@95 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/8/10, 11:30 AM",
          "commitName": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "1/8/10, 1:41 PM",
          "commitNameOld": "6d374c3ee4c9c2651ffb44048924e127fd2bf37c",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 30.91,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "private void calculateReferences() {\n    JsName window \u003d getName(WINDOW, true);\n    window.referenced \u003d true;\n    JsName function \u003d getName(FUNCTION, true);\n    function.referenced \u003d true;\n    FixedPointGraphTraversal.newTraversal(new ReferencePropagationCallback()).computeFixedPoint(referenceGraph);\n}",
          "path": "src/com/google/javascript/jscomp/NameAnalyzer.java",
          "functionStartLine": 1288,
          "functionName": "calculateReferences",
          "functionAnnotation": "",
          "functionDoc": "Propagate \"referenced\" property down the graph.\n",
          "diff": "@@ -1,26 +1,7 @@\n private void calculateReferences() {\n-    Set\u003cJsName\u003e curGeneration \u003d Sets.newHashSet();\n     JsName window \u003d getName(WINDOW, true);\n-    window.generation \u003d 0;\n     window.referenced \u003d true;\n-    curGeneration.add(window);\n     JsName function \u003d getName(FUNCTION, true);\n-    function.generation \u003d 0;\n     function.referenced \u003d true;\n-    curGeneration.add(function);\n-    for (String s : externalNames) {\n-        JsName jsn \u003d getName(s, true);\n-        if (jsn.refersTo.size() \u003e 0) {\n-            jsn.generation \u003d 0;\n-            jsn.referenced \u003d true;\n-            curGeneration.add(jsn);\n-        }\n-    }\n-    generations.add(curGeneration);\n-    int iters \u003d 0;\n-    while (curGeneration.size() \u003e 0 \u0026\u0026 iters \u003c 100) {\n-        curGeneration \u003d referenceMore(curGeneration);\n-        generations.add(curGeneration);\n-        iters++;\n-    }\n+    FixedPointGraphTraversal.newTraversal(new ReferencePropagationCallback()).computeFixedPoint(referenceGraph);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Fix a bunch of passes to preserve more type information.\n\nFix goog.provide/goog.require handling to work in the presence of modules.\n\nImprove a bunch of type annotations in gecko_dom.\n\nMake NameAnalyzer use the Graph package.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@95 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/8/10, 11:30 AM",
          "commitName": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "1/8/10, 1:41 PM",
          "commitNameOld": "6d374c3ee4c9c2651ffb44048924e127fd2bf37c",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 30.91,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "actualSource": "private void calculateReferences() {\n    JsName window \u003d getName(WINDOW, true);\n    window.referenced \u003d true;\n    JsName function \u003d getName(FUNCTION, true);\n    function.referenced \u003d true;\n    FixedPointGraphTraversal.newTraversal(new ReferencePropagationCallback()).computeFixedPoint(referenceGraph);\n}",
          "path": "src/com/google/javascript/jscomp/NameAnalyzer.java",
          "functionStartLine": 1288,
          "functionName": "calculateReferences",
          "functionAnnotation": "",
          "functionDoc": "Propagate \"referenced\" property down the graph.\n",
          "diff": "@@ -1,26 +1,7 @@\n private void calculateReferences() {\n-    Set\u003cJsName\u003e curGeneration \u003d Sets.newHashSet();\n     JsName window \u003d getName(WINDOW, true);\n-    window.generation \u003d 0;\n     window.referenced \u003d true;\n-    curGeneration.add(window);\n     JsName function \u003d getName(FUNCTION, true);\n-    function.generation \u003d 0;\n     function.referenced \u003d true;\n-    curGeneration.add(function);\n-    for (String s : externalNames) {\n-        JsName jsn \u003d getName(s, true);\n-        if (jsn.refersTo.size() \u003e 0) {\n-            jsn.generation \u003d 0;\n-            jsn.referenced \u003d true;\n-            curGeneration.add(jsn);\n-        }\n-    }\n-    generations.add(curGeneration);\n-    int iters \u003d 0;\n-    while (curGeneration.size() \u003e 0 \u0026\u0026 iters \u003c 100) {\n-        curGeneration \u003d referenceMore(curGeneration);\n-        generations.add(curGeneration);\n-        iters++;\n-    }\n+    FixedPointGraphTraversal.newTraversal(new ReferencePropagationCallback()).computeFixedPoint(referenceGraph);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Calculates all of the references. The results will be stored in the\ngenerations member variable.\n",
            "newValue": "Propagate \"referenced\" property down the graph.\n"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,26 @@\n+private void calculateReferences() {\n+    Set\u003cJsName\u003e curGeneration \u003d Sets.newHashSet();\n+    JsName window \u003d getName(WINDOW, true);\n+    window.generation \u003d 0;\n+    window.referenced \u003d true;\n+    curGeneration.add(window);\n+    JsName function \u003d getName(FUNCTION, true);\n+    function.generation \u003d 0;\n+    function.referenced \u003d true;\n+    curGeneration.add(function);\n+    for (String s : externalNames) {\n+        JsName jsn \u003d getName(s, true);\n+        if (jsn.refersTo.size() \u003e 0) {\n+            jsn.generation \u003d 0;\n+            jsn.referenced \u003d true;\n+            curGeneration.add(jsn);\n+        }\n+    }\n+    generations.add(curGeneration);\n+    int iters \u003d 0;\n+    while (curGeneration.size() \u003e 0 \u0026\u0026 iters \u003c 100) {\n+        curGeneration \u003d referenceMore(curGeneration);\n+        generations.add(curGeneration);\n+        iters++;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void calculateReferences() {\n    Set\u003cJsName\u003e curGeneration \u003d Sets.newHashSet();\n    JsName window \u003d getName(WINDOW, true);\n    window.generation \u003d 0;\n    window.referenced \u003d true;\n    curGeneration.add(window);\n    JsName function \u003d getName(FUNCTION, true);\n    function.generation \u003d 0;\n    function.referenced \u003d true;\n    curGeneration.add(function);\n    for (String s : externalNames) {\n        JsName jsn \u003d getName(s, true);\n        if (jsn.refersTo.size() \u003e 0) {\n            jsn.generation \u003d 0;\n            jsn.referenced \u003d true;\n            curGeneration.add(jsn);\n        }\n    }\n    generations.add(curGeneration);\n    int iters \u003d 0;\n    while (curGeneration.size() \u003e 0 \u0026\u0026 iters \u003c 100) {\n        curGeneration \u003d referenceMore(curGeneration);\n        generations.add(curGeneration);\n        iters++;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NameAnalyzer.java",
      "functionStartLine": 1305,
      "functionName": "calculateReferences",
      "functionAnnotation": "",
      "functionDoc": "Calculates all of the references. The results will be stored in the\ngenerations member variable.\n"
    }
  }
}