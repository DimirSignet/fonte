{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CoalesceVariableNames.java",
  "functionName": "enterScope",
  "functionId": "enterScope___t-NodeTraversal",
  "sourceFilePath": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 92,
  "functionEndLine": 124,
  "numCommitsSeen": 25,
  "timeTaken": 941,
  "changeHistory": [
    "97bbbffb65eda01aa9b38a5cec43a598afb39070",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6",
    "06377401a3b08af2cc75c10e603b3ded983aaf8c",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404",
    "31193006e16b909a3115f998789057fb05d76b18",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": "Ybodychange",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": "Ybodychange",
    "06377401a3b08af2cc75c10e603b3ded983aaf8c": "Ybodychange",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": "Ybodychange",
    "31193006e16b909a3115f998789057fb05d76b18": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/13/10, 10:46 AM",
      "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/15/10, 4:45 PM",
      "commitNameOld": "e3bcc1c6e7ce7e9bfc3098cd5bf57774049f5baa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 27.75,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    if (t.inGlobalScope()) {\n        return;\n    }\n    Scope scope \u003d t.getScope();\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    if (scope.getRootNode().getFirstChild().getNext().getChildCount() \u003d\u003d 2) {\n        liveness.markAllParametersEscaped();\n    }\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n public void enterScope(NodeTraversal t) {\n-    Scope scope \u003d t.getScope();\n-    if (scope.isGlobal()) {\n+    if (t.inGlobalScope()) {\n         return;\n     }\n+    Scope scope \u003d t.getScope();\n     ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n     LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n     if (scope.getRootNode().getFirstChild().getNext().getChildCount() \u003d\u003d 2) {\n         liveness.markAllParametersEscaped();\n     }\n     liveness.analyze();\n     UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n     GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n     coloring.color();\n     colorings.push(coloring);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": {
      "type": "Ybodychange",
      "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 11:58 PM",
      "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/8/10, 1:41 PM",
      "commitNameOld": "6d374c3ee4c9c2651ffb44048924e127fd2bf37c",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 87.39,
      "commitsBetweenForRepo": 103,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    Scope scope \u003d t.getScope();\n    if (scope.isGlobal()) {\n        return;\n    }\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    if (scope.getRootNode().getFirstChild().getNext().getChildCount() \u003d\u003d 2) {\n        liveness.markAllParametersEscaped();\n    }\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,17 @@\n @Override\n public void enterScope(NodeTraversal t) {\n     Scope scope \u003d t.getScope();\n     if (scope.isGlobal()) {\n         return;\n     }\n     ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n     LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n+    if (scope.getRootNode().getFirstChild().getNext().getChildCount() \u003d\u003d 2) {\n+        liveness.markAllParametersEscaped();\n+    }\n     liveness.analyze();\n     UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n     GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n     coloring.color();\n     colorings.push(coloring);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "06377401a3b08af2cc75c10e603b3ded983aaf8c": {
      "type": "Ybodychange",
      "commitMessage": "Fix for issue #75.\n\nRe-introduce the debugging option for name coalescing, now that its issues\nhave been fixed.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@34 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/16/09, 6:37 PM",
      "commitName": "06377401a3b08af2cc75c10e603b3ded983aaf8c",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/15/09, 1:52 PM",
      "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 1.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    Scope scope \u003d t.getScope();\n    if (scope.isGlobal()) {\n        return;\n    }\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n @Override\n public void enterScope(NodeTraversal t) {\n     Scope scope \u003d t.getScope();\n     if (scope.isGlobal()) {\n         return;\n     }\n     ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n     LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n     liveness.analyze();\n     UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n-    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n+    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n     coloring.color();\n     colorings.push(coloring);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": {
      "type": "Ybodychange",
      "commitMessage": "Add warnings for functions that are ambiguously defined on different\nbrowsers.\n\nAdd better support for Caja.\n\nRollback the change to CoalesceVariableNames, because it had problems.\n\nInternal type system refactoring.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@33 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/15/09, 1:52 PM",
      "commitName": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/14/09, 4:18 PM",
      "commitNameOld": "31193006e16b909a3115f998789057fb05d76b18",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 0.9,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    Scope scope \u003d t.getScope();\n    if (scope.isGlobal()) {\n        return;\n    }\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n @Override\n public void enterScope(NodeTraversal t) {\n     Scope scope \u003d t.getScope();\n     if (scope.isGlobal()) {\n         return;\n     }\n     ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n     LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n     liveness.analyze();\n     UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n-    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n+    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n     coloring.color();\n     colorings.push(coloring);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "31193006e16b909a3115f998789057fb05d76b18": {
      "type": "Ybodychange",
      "commitMessage": "Add a --debug flag for easier debugging.\n\nTurn off autoboxing from number -\u003e Number, string -\u003e String, etc.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@32 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/14/09, 4:18 PM",
      "commitName": "31193006e16b909a3115f998789057fb05d76b18",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 19.39,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    Scope scope \u003d t.getScope();\n    if (scope.isGlobal()) {\n        return;\n    }\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n @Override\n public void enterScope(NodeTraversal t) {\n     Scope scope \u003d t.getScope();\n     if (scope.isGlobal()) {\n         return;\n     }\n     ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n     LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n     liveness.analyze();\n     UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n-    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n+    GraphColoring\u003cVar, Void\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n     coloring.color();\n     colorings.push(coloring);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+@Override\n+public void enterScope(NodeTraversal t) {\n+    Scope scope \u003d t.getScope();\n+    if (scope.isGlobal()) {\n+        return;\n+    }\n+    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n+    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n+    liveness.analyze();\n+    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n+    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n+    coloring.color();\n+    colorings.push(coloring);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void enterScope(NodeTraversal t) {\n    Scope scope \u003d t.getScope();\n    if (scope.isGlobal()) {\n        return;\n    }\n    ControlFlowGraph\u003cNode\u003e cfg \u003d t.getControlFlowGraph();\n    LiveVariablesAnalysis liveness \u003d new LiveVariablesAnalysis(cfg, scope, compiler);\n    liveness.analyze();\n    UndiGraph\u003cVar, Void\u003e interferenceGraph \u003d computeVariableNamesInterferenceGraph(t, cfg, liveness.getEscapedLocals());\n    GraphColoring\u003cVar, ?\u003e coloring \u003d new GreedyGraphColoring\u003cVar, Void\u003e(interferenceGraph, coloringTieBreaker);\n    coloring.color();\n    colorings.push(coloring);\n}",
      "path": "src/com/google/javascript/jscomp/CoalesceVariableNames.java",
      "functionStartLine": 91,
      "functionName": "enterScope",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}