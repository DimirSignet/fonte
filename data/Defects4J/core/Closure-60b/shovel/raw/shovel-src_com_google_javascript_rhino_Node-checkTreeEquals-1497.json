{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Node.java",
  "functionName": "checkTreeEquals",
  "functionId": "checkTreeEquals___node2-Node",
  "sourceFilePath": "src/com/google/javascript/rhino/Node.java",
  "functionAnnotation": "",
  "functionDoc": "Checks if the subtree under this node is the same as another subtree.\nReturns null if it\u0027s equal, or a message describing the differences.\n",
  "functionStartLine": 1497,
  "functionEndLine": 1507,
  "numCommitsSeen": 45,
  "timeTaken": 3681,
  "changeHistory": [
    "43859717972907dd1ecebd8dca6e05036386e28b",
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
    "66485d3df654fa92b7500d5e15b58300677edca3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "43859717972907dd1ecebd8dca6e05036386e28b": "Yformatchange",
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": "Ybodychange",
    "66485d3df654fa92b7500d5e15b58300677edca3": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43859717972907dd1ecebd8dca6e05036386e28b": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/04/14 by john\n\n        Stop creating specialized Node types for FUNCTION and SCRIPT as the added functionality isn\u0027t used anywhere.\n\n        Also correct some formatting issue with Node (as it won\u0027t need to be merged with anything else anymore).\n\n        R\u003dsteve,robert\n        DELTA\u003d3969  (1913 added, 1925 deleted, 131 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source information in MinimizeExitPoints.\n\n        R\u003drobert\n        DELTA\u003d10  (5 added, 2 deleted, 3 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information.\n\n        R\u003dantonio\n        DELTA\u003d17  (11 added, 0 deleted, 6 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information through FoldConstants.\n\n        R\u003drobert\n        DELTA\u003d42  (22 added, 0 deleted, 20 changed)\n\nChange on 2010/04/14 by nick\n\n        lock down function type construction\n\n        R\u003djohn\n        DELTA\u003d111  (83 added, 9 deleted, 19 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source info in CollapseProperties.\n\n        R\u003dnick\n        DELTA\u003d17  (8 added, 3 deleted, 6 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dmbevwz\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@184 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 4:53 PM",
      "commitName": "43859717972907dd1ecebd8dca6e05036386e28b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/13/10, 2:39 PM",
      "commitNameOld": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public String checkTreeEquals(Node node2) {\n    NodeMismatch diff \u003d checkTreeEqualsImpl(node2);\n    if (diff !\u003d null) {\n        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1327,
      "functionName": "checkTreeEquals",
      "functionAnnotation": "",
      "functionDoc": "Checks if the subtree under this node is the same as another subtree.\nReturns null if it\u0027s equal, or a message describing the differences.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": {
      "type": "Ybodychange",
      "commitMessage": "Make debugging function inlining issues a little bit easier. (John)\nR\u003dalan\nDELTA\u003d3  (2 added, 0 deleted, 1 changed)\n\nPretty-print anonymous object types, so that it\u0027s easier to see\nwhat\u0027s in them. (Nick)\nR\u003dalan\n\nAdd externs for new methods of HTML5 History class. (Naoki)\nR\u003dalan\nDELTA\u003d19  (19 added, 0 deleted, 0 changed)\n\n\nHandle classes that have been renamed by the normalizer pass by reading the NAME\nfrom the AST instead of just using the reference name. (Andrew)\nR\u003dnada\nDELTA\u003d50  (33 added, 1 deleted, 16 changed)\n\nFix runtime type check to check the global this object instead of window since not all javascript will have a DOM. (Andrew)\nR\u003dnada\nDELTA\u003d21  (19 added, 0 deleted, 2 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003drvhacw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@166 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/1/10, 8:34 AM",
      "commitName": "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/30/10, 3:01 PM",
      "commitNameOld": "1c2f9589453a5269f45adefed4f38b1b8253d235",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.73,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public String checkTreeEquals(Node node2) {\n    NodeMismatch diff \u003d checkTreeEqualsImpl(node2);\n    if (diff !\u003d null) {\n        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1326,
      "functionName": "checkTreeEquals",
      "functionAnnotation": "",
      "functionDoc": "Checks if the subtree under this node is the same as another subtree.\nReturns null if it\u0027s equal, or a message describing the differences.\n",
      "diff": "@@ -1,7 +1,7 @@\n public String checkTreeEquals(Node node2) {\n     NodeMismatch diff \u003d checkTreeEqualsImpl(node2);\n     if (diff !\u003d null) {\n-        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree();\n+        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "66485d3df654fa92b7500d5e15b58300677edca3": {
      "type": "Ybodychange",
      "commitMessage": "Use non-generic data structures in a bunch of places.\n(More for readability reasons than anything else)\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@70 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/15/10, 1:56 PM",
      "commitName": "66485d3df654fa92b7500d5e15b58300677edca3",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "12/21/09, 10:13 AM",
      "commitNameOld": "d964d232de65db2370c06ce04de9865a3b2c8c9f",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 25.15,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public String checkTreeEquals(Node node2) {\n    NodeMismatch diff \u003d checkTreeEqualsImpl(node2);\n    if (diff !\u003d null) {\n        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1324,
      "functionName": "checkTreeEquals",
      "functionAnnotation": "",
      "functionDoc": "Checks if the subtree under this node is the same as another subtree.\nReturns null if it\u0027s equal, or a message describing the differences.\n",
      "diff": "@@ -1,7 +1,7 @@\n public String checkTreeEquals(Node node2) {\n-    Pair\u003cNode, Node\u003e diff \u003d checkTreeEqualsImpl(node2);\n+    NodeMismatch diff \u003d checkTreeEqualsImpl(node2);\n     if (diff !\u003d null) {\n         return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree();\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+public String checkTreeEquals(Node node2) {\n+    Pair\u003cNode, Node\u003e diff \u003d checkTreeEqualsImpl(node2);\n+    if (diff !\u003d null) {\n+        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree();\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String checkTreeEquals(Node node2) {\n    Pair\u003cNode, Node\u003e diff \u003d checkTreeEqualsImpl(node2);\n    if (diff !\u003d null) {\n        return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\" + node2.toStringTree();\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1299,
      "functionName": "checkTreeEquals",
      "functionAnnotation": "",
      "functionDoc": "Checks if the subtree under this node is the same as another subtree.\nReturns null if it\u0027s equal, or a message describing the differences.\n"
    }
  }
}