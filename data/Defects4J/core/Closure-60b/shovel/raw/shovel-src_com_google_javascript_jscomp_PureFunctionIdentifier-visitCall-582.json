{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PureFunctionIdentifier.java",
  "functionName": "visitCall",
  "functionId": "$visitCall___sideEffectInfo-FunctionInformation__node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
  "functionAnnotation": "",
  "functionDoc": "Record information about a call site.\n",
  "functionStartLine": 582,
  "functionEndLine": 596,
  "numCommitsSeen": 66,
  "timeTaken": 1721,
  "changeHistory": [
    "d48e656b8ef676a9d4d87503028d59628013307f",
    "6d4979514fd802dd4deded67f3ba1929e74a928d",
    "80fe41fd0173c3eaa56f4abb783031966ea89cef",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "d48e656b8ef676a9d4d87503028d59628013307f": "Yparameterchange",
    "6d4979514fd802dd4deded67f3ba1929e74a928d": "Yparameterchange",
    "80fe41fd0173c3eaa56f4abb783031966ea89cef": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d48e656b8ef676a9d4d87503028d59628013307f": {
      "type": "Yparameterchange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks builds\n\n*** Original change description ***\n\nPropagate known local value information across functions.  This also fixes\nproblems with incomplete local information.\n\nR\u003dacleung,niranjan\nDELTA\u003d1003  (254 added, 671 deleted, 78 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@568 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/22/10, 7:55 PM",
      "commitName": "d48e656b8ef676a9d4d87503028d59628013307f",
      "commitAuthor": "diegosalas@google.com",
      "commitDateOld": "11/22/10, 3:02 PM",
      "commitNameOld": "6d4979514fd802dd4deded67f3ba1929e74a928d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n    if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n        return;\n    }\n    if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n        return;\n    }\n    sideEffectInfo.appendCall(node);\n}",
      "path": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
      "functionStartLine": 582,
      "functionName": "visitCall",
      "functionAnnotation": "",
      "functionDoc": "Record information about a call site.\n",
      "diff": "@@ -1,9 +1,9 @@\n-private void visitCall(FunctionSideEffectData sideEffectInfo, Node node) {\n+private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n     if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n         return;\n     }\n     if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n         return;\n     }\n     sideEffectInfo.appendCall(node);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[sideEffectInfo-FunctionSideEffectData, node-Node]",
        "newValue": "[sideEffectInfo-FunctionInformation, node-Node]"
      }
    },
    "6d4979514fd802dd4deded67f3ba1929e74a928d": {
      "type": "Yparameterchange",
      "commitMessage": "\nPropagate known local value information across functions.  This also fixes\nproblems with incomplete local information.\n\nR\u003dnicksantos\nDELTA\u003d1000  (667 added, 250 deleted, 83 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d0\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@567 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/22/10, 3:02 PM",
      "commitName": "6d4979514fd802dd4deded67f3ba1929e74a928d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/15/10, 10:20 PM",
      "commitNameOld": "da794a3a9cb2cebc0efb708ba9b465a4510c7235",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 6.7,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private void visitCall(FunctionSideEffectData sideEffectInfo, Node node) {\n    if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n        return;\n    }\n    if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n        return;\n    }\n    sideEffectInfo.appendCall(node);\n}",
      "path": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
      "functionStartLine": 558,
      "functionName": "visitCall",
      "functionAnnotation": "",
      "functionDoc": "Record information about a call site.\n",
      "diff": "@@ -1,9 +1,9 @@\n-private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n+private void visitCall(FunctionSideEffectData sideEffectInfo, Node node) {\n     if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n         return;\n     }\n     if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n         return;\n     }\n     sideEffectInfo.appendCall(node);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[sideEffectInfo-FunctionInformation, node-Node]",
        "newValue": "[sideEffectInfo-FunctionSideEffectData, node-Node]"
      }
    },
    "80fe41fd0173c3eaa56f4abb783031966ea89cef": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/09 by john\n\n        Part II: Use global RegExp reference information to optimize references when possible.\n\n        R\u003dalan\n        DELTA\u003d231  (173 added, 17 deleted, 41 changed)\n\nChange on 2010/04/09 by nicksantos\n\n        Make JsFileLineParser much more efficient for large files\n        (we were running into problems with it running out of memory.)\n\n        R\u003dandrew\n        DELTA\u003d192  (157 added, 1 deleted, 34 changed)\n\nChange on 2010/04/09 by alan\n\n        Fix typed code gen crash when generating typed code.\n\n        R\u003dnicksantos\n        DELTA\u003d35  (24 added, 2 deleted, 9 changed)\n\nChange on 2010/04/09 by alan\n\n        Disable method motion on functions that reads closure variables.\n\n        R\u003dnicksantos\n        DELTA\u003d171  (162 added, 1 deleted, 8 changed)\n\nChange on 2010/04/12 by nada\n\n        In AmbiguateProperties, invert the related type relationship, by\n        considering subclasses and implementors (down) instead of superclasses\n        and implemented interfaces (up). This has two advantages:\n\n        - The \u0027independent of\u0027 relationship is simplified, because we only\n          need to consider whether the related types intersect.\n\n        - We can account for \u0027multiple inheritance\u0027, which is a practical\n          issue because of interfaces.\n\n        Note that the \u0027up\u0027 relationship allows us to easily find common\n        ancestors while the \u0027down\u0027 relationship allows us to easily find\n        common descendants -- and this is what we care about for ambiguation.\n\n\n        R\u003dmoedinger\n        DELTA\u003d173  (124 added, 15 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dmwgnge\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@180 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/12/10, 7:59 AM",
      "commitName": "80fe41fd0173c3eaa56f4abb783031966ea89cef",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/25/10, 8:58 AM",
      "commitNameOld": "3ce4716848eb71b6e78a4545a2cc0c27e74a29b3",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 17.96,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n    if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n        return;\n    }\n    if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n        return;\n    }\n    sideEffectInfo.appendCall(node);\n}",
      "path": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
      "functionStartLine": 436,
      "functionName": "visitCall",
      "functionAnnotation": "",
      "functionDoc": "Record information about a call site.\n",
      "diff": "@@ -1,3 +1,9 @@\n private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n+    if (NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.functionCallHasSideEffects(node, compiler)) {\n+        return;\n+    }\n+    if (NodeUtil.isNew(node) \u0026\u0026 !NodeUtil.constructorCallHasSideEffects(node)) {\n+        return;\n+    }\n     sideEffectInfo.appendCall(node);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n+    sideEffectInfo.appendCall(node);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void visitCall(FunctionInformation sideEffectInfo, Node node) {\n    sideEffectInfo.appendCall(node);\n}",
      "path": "src/com/google/javascript/jscomp/PureFunctionIdentifier.java",
      "functionStartLine": 404,
      "functionName": "visitCall",
      "functionAnnotation": "",
      "functionDoc": "Record information about a call site.\n"
    }
  }
}