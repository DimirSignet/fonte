{
  "origin": "codeshovel",
  "repositoryName": "Closure-60b",
  "repositoryPath": "/tmp/Closure-60b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CollapseAnonymousFunctions.java",
  "functionName": "visit",
  "functionId": "$visit___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 54,
  "functionEndLine": 95,
  "numCommitsSeen": 11,
  "timeTaken": 314,
  "changeHistory": [
    "8f4f620ebc773ac935157e9319ea3989fd84110d",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "8f4f620ebc773ac935157e9319ea3989fd84110d": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f4f620ebc773ac935157e9319ea3989fd84110d": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/09 16:42:20 by nicksantos\n\n\tMake CollapseAnonymousFunction normalized.\n\n\tR\u003djohnlenz\n\tDELTA\u003d17  (17 added, 0 deleted, 0 changed)\n\nChange on 2010/07/09 18:02:18 by nicksantos\n\n\tbuild kung-fu for putting autogenerated maps v3 externs\n\tinto svn.\n\n\tR\u003dacleung\n\tDELTA\u003d6239  (3123 added, 3114 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d48006\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@271 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/9/10, 8:45 PM",
      "commitName": "8f4f620ebc773ac935157e9319ea3989fd84110d",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 77.38,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.VAR) {\n        return;\n    }\n    Node grandparent \u003d parent.getParent();\n    if (!(parent.getType() \u003d\u003d Token.SCRIPT || grandparent !\u003d null \u0026\u0026 grandparent.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 parent.getType() \u003d\u003d Token.BLOCK)) {\n        return;\n    }\n    Preconditions.checkState(n.hasOneChild());\n    Node name \u003d n.getFirstChild();\n    Node value \u003d name.getFirstChild();\n    if (value !\u003d null \u0026\u0026 value.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 !isRecursiveFunction(value)) {\n        Node fnName \u003d value.getFirstChild();\n        fnName.setString(name.getString());\n        NodeUtil.copyNameAnnotations(name, fnName);\n        name.removeChild(value);\n        parent.replaceChild(n, value);\n        if (!t.inGlobalScope() \u0026\u0026 NodeUtil.isHoistedFunctionDeclaration(value)) {\n            parent.addChildToFront(value.detachFromParent());\n        }\n        compiler.reportCodeChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java",
      "functionStartLine": 55,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,24 @@\n @Override\n public void visit(NodeTraversal t, Node n, Node parent) {\n     if (n.getType() !\u003d Token.VAR) {\n         return;\n     }\n     Node grandparent \u003d parent.getParent();\n     if (!(parent.getType() \u003d\u003d Token.SCRIPT || grandparent !\u003d null \u0026\u0026 grandparent.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 parent.getType() \u003d\u003d Token.BLOCK)) {\n         return;\n     }\n     Preconditions.checkState(n.hasOneChild());\n     Node name \u003d n.getFirstChild();\n     Node value \u003d name.getFirstChild();\n     if (value !\u003d null \u0026\u0026 value.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 !isRecursiveFunction(value)) {\n         Node fnName \u003d value.getFirstChild();\n         fnName.setString(name.getString());\n         NodeUtil.copyNameAnnotations(name, fnName);\n         name.removeChild(value);\n         parent.replaceChild(n, value);\n+        if (!t.inGlobalScope() \u0026\u0026 NodeUtil.isHoistedFunctionDeclaration(value)) {\n+            parent.addChildToFront(value.detachFromParent());\n+        }\n         compiler.reportCodeChange();\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+@Override\n+public void visit(NodeTraversal t, Node n, Node parent) {\n+    if (n.getType() !\u003d Token.VAR) {\n+        return;\n+    }\n+    Node grandparent \u003d parent.getParent();\n+    if (!(parent.getType() \u003d\u003d Token.SCRIPT || grandparent !\u003d null \u0026\u0026 grandparent.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 parent.getType() \u003d\u003d Token.BLOCK)) {\n+        return;\n+    }\n+    Preconditions.checkState(n.hasOneChild());\n+    Node name \u003d n.getFirstChild();\n+    Node value \u003d name.getFirstChild();\n+    if (value !\u003d null \u0026\u0026 value.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 !isRecursiveFunction(value)) {\n+        Node fnName \u003d value.getFirstChild();\n+        fnName.setString(name.getString());\n+        NodeUtil.copyNameAnnotations(name, fnName);\n+        name.removeChild(value);\n+        parent.replaceChild(n, value);\n+        compiler.reportCodeChange();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.getType() !\u003d Token.VAR) {\n        return;\n    }\n    Node grandparent \u003d parent.getParent();\n    if (!(parent.getType() \u003d\u003d Token.SCRIPT || grandparent !\u003d null \u0026\u0026 grandparent.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 parent.getType() \u003d\u003d Token.BLOCK)) {\n        return;\n    }\n    Preconditions.checkState(n.hasOneChild());\n    Node name \u003d n.getFirstChild();\n    Node value \u003d name.getFirstChild();\n    if (value !\u003d null \u0026\u0026 value.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 !isRecursiveFunction(value)) {\n        Node fnName \u003d value.getFirstChild();\n        fnName.setString(name.getString());\n        NodeUtil.copyNameAnnotations(name, fnName);\n        name.removeChild(value);\n        parent.replaceChild(n, value);\n        compiler.reportCodeChange();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CollapseAnonymousFunctions.java",
      "functionStartLine": 55,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}