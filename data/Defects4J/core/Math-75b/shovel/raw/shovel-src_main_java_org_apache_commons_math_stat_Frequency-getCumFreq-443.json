{
  "origin": "codeshovel",
  "repositoryName": "Math-75b",
  "repositoryPath": "/tmp/Math-75b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Frequency.java",
  "functionName": "getCumFreq",
  "functionId": "getCumFreq___v-long",
  "sourceFilePath": "src/main/java/org/apache/commons/math/stat/Frequency.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
  "functionStartLine": 443,
  "functionEndLine": 445,
  "numCommitsSeen": 54,
  "timeTaken": 1401,
  "changeHistory": [
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
    "479f7773075c136b43a9cf120704c77c0a4880ab",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7",
    "83caf3972c8f49953e0e31e12542f57b7728f9f4",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb"
  ],
  "changeHistoryShort": {
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": "Yformatchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": "Ybodychange",
    "479f7773075c136b43a9cf120704c77c0a4880ab": "Ydocchange",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": "Ydocchange",
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7": "Yformatchange",
    "83caf3972c8f49953e0e31e12542f57b7728f9f4": "Ydocchange",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": {
      "type": "Yformatchange",
      "commitMessage": "Removed trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811685 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/5/09, 10:36 AM",
      "commitName": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "8/1/09, 7:30 AM",
      "commitNameOld": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 35.13,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(Long.valueOf(v));\n}",
      "path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 442,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(Long.valueOf(v));\n}",
      "path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 442,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/stat/Frequency.java",
        "newPath": "src/main/java/org/apache/commons/math/stat/Frequency.java"
      }
    },
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": {
      "type": "Ybodychange",
      "commitMessage": "replaced inefficient use of constructors for Integer, Long, Float and Double\nby the recommended static valueOf methods that cache results\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@666292 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/08, 12:32 PM",
      "commitName": "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/2/08, 9:54 PM",
      "commitNameOld": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 128.57,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(Long.valueOf(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 359,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "@@ -1,3 +1,3 @@\n public long getCumFreq(long v) {\n-    return getCumFreq(new Long(v));\n+    return getCumFreq(Long.valueOf(v));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "479f7773075c136b43a9cf120704c77c0a4880ab": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only.  Added missing \u003c/p\u003e\u0027s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@617953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/2/08, 9:54 PM",
      "commitName": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/2/08, 10:07 AM",
      "commitNameOld": "fa601ee57b549eabdd099489b7cb09d2af08b5dc",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 359,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
        "newValue": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\u003c/p\u003e\n\n@param v the value to lookup\n@return the proportion of values equal to v\n"
      }
    },
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": {
      "type": "Ydocchange",
      "commitMessage": "Changed implementation to use TreeMap directly, eliminating [collections] depenency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141328 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/20/04, 9:53 AM",
      "commitName": "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/1/04, 5:24 PM",
      "commitNameOld": "94d130188d16bd3a1ca2560bd372bdcf48999172",
      "commitAuthorOld": "Mark R. Diggory",
      "daysBetweenCommits": 18.69,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 327,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
        "newValue": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup\n@return the proportion of values equal to v\n"
      }
    },
    "b1872b6749d527f17cdb58abc66d58f3fcad71d7": {
      "type": "Yformatchange",
      "commitMessage": "Fixed error in getCumFreq (use custom comparator when one is supplied). Removed tabs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141118 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/6/04, 4:54 PM",
      "commitName": "b1872b6749d527f17cdb58abc66d58f3fcad71d7",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/22/04, 2:01 PM",
      "commitNameOld": "5cb403cbbcb292481c680728298cb87c46663914",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 13.12,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 303,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {}
    },
    "83caf3972c8f49953e0e31e12542f57b7728f9f4": {
      "type": "Ydocchange",
      "commitMessage": "fixed spelling error: cummulative -\u003e cumulative.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/17/04, 8:04 PM",
      "commitName": "83caf3972c8f49953e0e31e12542f57b7728f9f4",
      "commitAuthor": "Brent Worden",
      "commitDateOld": "2/15/04, 10:32 PM",
      "commitNameOld": "526956b3d938c45d24df7000bb0184837cf332e2",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 332,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the cummulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
        "newValue": "Returns the cumulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n"
      }
    },
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": {
      "type": "Yintroduced",
      "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/8/04, 11:51 AM",
      "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
      "commitAuthor": "Phil Steitz",
      "diff": "@@ -0,0 +1,3 @@\n+public long getCumFreq(long v) {\n+    return getCumFreq(new Long(v));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public long getCumFreq(long v) {\n    return getCumFreq(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 332,
      "functionName": "getCumFreq",
      "functionAnnotation": "",
      "functionDoc": "Returns the cummulative frequency of values less than or equal to v.\n\u003cp\u003e\nReturns 0 if v is not comparable to the values set.\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n"
    }
  }
}