{
  "origin": "codeshovel",
  "repositoryName": "Math-75b",
  "repositoryPath": "/tmp/Math-75b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Frequency.java",
  "functionName": "getPct",
  "functionId": "getPct___v-int",
  "sourceFilePath": "src/main/java/org/apache/commons/math/stat/Frequency.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
  "functionStartLine": 330,
  "functionEndLine": 332,
  "numCommitsSeen": 65,
  "timeTaken": 1324,
  "changeHistory": [
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
    "1ffdfcd9b750da404b0a379620c1e592e0ae0744",
    "5cb403cbbcb292481c680728298cb87c46663914",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": "Yformatchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": "Ybodychange",
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": "Ydocchange",
    "1ffdfcd9b750da404b0a379620c1e592e0ae0744": "Ydocchange",
    "5cb403cbbcb292481c680728298cb87c46663914": "Ydocchange",
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26dac5a0e7fc9c6be9571b3e71a15d8502480d96": {
      "type": "Yformatchange",
      "commitMessage": "Removed trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811685 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/5/09, 10:36 AM",
      "commitName": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "8/1/09, 7:30 AM",
      "commitNameOld": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 35.13,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(Long.valueOf(v));\n}",
      "path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 329,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(Long.valueOf(v));\n}",
      "path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 329,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/stat/Frequency.java",
        "newPath": "src/main/java/org/apache/commons/math/stat/Frequency.java"
      }
    },
    "fd0f87590d1c88c18f669e9b168c8fd20631f23c": {
      "type": "Ybodychange",
      "commitMessage": "replaced inefficient use of constructors for Integer, Long, Float and Double\nby the recommended static valueOf methods that cache results\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@666292 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/08, 12:32 PM",
      "commitName": "fd0f87590d1c88c18f669e9b168c8fd20631f23c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/2/08, 9:54 PM",
      "commitNameOld": "479f7773075c136b43a9cf120704c77c0a4880ab",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 128.57,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(Long.valueOf(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 261,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "@@ -1,3 +1,3 @@\n public double getPct(int v) {\n-    return getPct(new Long(v));\n+    return getPct(Long.valueOf(v));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2ae4998c4b53c951160f8a0b63fa8f7493d956cb": {
      "type": "Ydocchange",
      "commitMessage": "Changed implementation to use TreeMap directly, eliminating [collections] depenency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141328 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/20/04, 9:53 AM",
      "commitName": "2ae4998c4b53c951160f8a0b63fa8f7493d956cb",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "6/1/04, 5:24 PM",
      "commitNameOld": "94d130188d16bd3a1ca2560bd372bdcf48999172",
      "commitAuthorOld": "Mark R. Diggory",
      "daysBetweenCommits": 18.69,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 235,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
        "newValue": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup\n@return the proportion of values equal to v\n"
      }
    },
    "1ffdfcd9b750da404b0a379620c1e592e0ae0744": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc fixes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141254 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/31/04, 1:57 PM",
      "commitName": "1ffdfcd9b750da404b0a379620c1e592e0ae0744",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "5/19/04, 7:16 AM",
      "commitNameOld": "206201617aae648e12f63d4ab8aa9751157e7e63",
      "commitAuthorOld": "Brent Worden",
      "daysBetweenCommits": 12.28,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 220,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the cumulative percentatge of values less than or equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
        "newValue": "Returns the percentage of values that are equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n"
      }
    },
    "5cb403cbbcb292481c680728298cb87c46663914": {
      "type": "Ydocchange",
      "commitMessage": "javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/22/04, 2:01 PM",
      "commitName": "5cb403cbbcb292481c680728298cb87c46663914",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/21/04, 1:35 PM",
      "commitNameOld": "5d66d93e57e142760603024ce1429f2d229a6c8f",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 218,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the cumulative percentatge of values less than or equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the percentage of values \u003d v (as a proportion -- i.e. between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
        "newValue": "Returns the cumulative percentatge of values less than or equal to v\n(as a proportion between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n"
      }
    },
    "d740b517d5ecd91b1bcdce96977b57a80823c3fb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/8/04, 11:51 AM",
      "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
      "commitAuthor": "Phil Steitz",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/8/04, 11:51 AM",
          "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "1/28/04, 4:49 PM",
          "commitNameOld": "ea117cb81769e5d205cec3c07b29fda343bd7868",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 254,
          "functionName": "getPct",
          "functionAnnotation": "",
          "functionDoc": "Returns the percentage of values \u003d v (as a proportion -- i.e. between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
          "diff": "@@ -1,3 +1,3 @@\n-public double getPct(String v) {\n-    return (double) getCount(v) / (double) getSumFreq();\n+public double getPct(int v) {\n+    return getPct(new Long(v));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[v-String]",
            "newValue": "[v-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/8/04, 11:51 AM",
          "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "1/28/04, 4:49 PM",
          "commitNameOld": "ea117cb81769e5d205cec3c07b29fda343bd7868",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 254,
          "functionName": "getPct",
          "functionAnnotation": "",
          "functionDoc": "Returns the percentage of values \u003d v (as a proportion -- i.e. between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
          "diff": "@@ -1,3 +1,3 @@\n-public double getPct(String v) {\n-    return (double) getCount(v) / (double) getSumFreq();\n+public double getPct(int v) {\n+    return getPct(new Long(v));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactored Frequency to support cummulative frequency counts and percentages. Also eliminated the name property.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141089 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/8/04, 11:51 AM",
          "commitName": "d740b517d5ecd91b1bcdce96977b57a80823c3fb",
          "commitAuthor": "Phil Steitz",
          "commitDateOld": "1/28/04, 4:49 PM",
          "commitNameOld": "ea117cb81769e5d205cec3c07b29fda343bd7868",
          "commitAuthorOld": "Mark R. Diggory",
          "daysBetweenCommits": 10.79,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getPct(int v) {\n    return getPct(new Long(v));\n}",
          "path": "src/java/org/apache/commons/math/stat/Frequency.java",
          "functionStartLine": 254,
          "functionName": "getPct",
          "functionAnnotation": "",
          "functionDoc": "Returns the percentage of values \u003d v (as a proportion -- i.e. between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n",
          "diff": "@@ -1,3 +1,3 @@\n-public double getPct(String v) {\n-    return (double) getCount(v) / (double) getSumFreq();\n+public double getPct(int v) {\n+    return getPct(new Long(v));\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns the percentage of values \u003d v.\n\n@param v the value to lookup.\n@return the relative frequency of v.\n",
            "newValue": "Returns the percentage of values \u003d v (as a proportion -- i.e. between 0 and 1).\n\n@param v the value to lookup.\n@return the proportion of values equal to v\n"
          }
        }
      ]
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,3 @@\n+public double getPct(String v) {\n+    return (double) getCount(v) / (double) getSumFreq();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double getPct(String v) {\n    return (double) getCount(v) / (double) getSumFreq();\n}",
      "path": "src/java/org/apache/commons/math/stat/Frequency.java",
      "functionStartLine": 156,
      "functionName": "getPct",
      "functionAnnotation": "",
      "functionDoc": "Returns the percentage of values \u003d v.\n\n@param v the value to lookup.\n@return the relative frequency of v.\n"
    }
  }
}