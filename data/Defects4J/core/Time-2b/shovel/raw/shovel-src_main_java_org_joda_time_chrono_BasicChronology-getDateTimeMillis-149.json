{
  "origin": "codeshovel",
  "repositoryName": "Time-2b",
  "repositoryPath": "/tmp/Time-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicChronology.java",
  "functionName": "getDateTimeMillis",
  "functionId": "getDateTimeMillis___year-int__monthOfYear-int__dayOfMonth-int__millisOfDay-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/BasicChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 149,
  "functionEndLine": 160,
  "numCommitsSeen": 44,
  "timeTaken": 6134,
  "changeHistory": [
    "790a3a234c91f7af7ba21f87df4808b03adca5e8",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
    "7b7cb44562d5942add1f093111e84a5836780de4",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
    "6bdd176eed470329a73d7ee08498183e579cea60",
    "194de43297ee92161aef886025d5aeba42db637e",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b"
  ],
  "changeHistoryShort": {
    "790a3a234c91f7af7ba21f87df4808b03adca5e8": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": "Yfilerename",
    "7b7cb44562d5942add1f093111e84a5836780de4": "Ymodifierchange",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Ybodychange",
    "6bdd176eed470329a73d7ee08498183e579cea60": "Yfilerename",
    "194de43297ee92161aef886025d5aeba42db637e": "Ybodychange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "790a3a234c91f7af7ba21f87df4808b03adca5e8": {
      "type": "Ybodychange",
      "commitMessage": "Fix validation in BasicChronology.getDateTimeMillis\n\nPreviously this allowed a millisOfDay value one too large\n",
      "commitDate": "2/21/12, 8:37 AM",
      "commitName": "790a3a234c91f7af7ba21f87df4808b03adca5e8",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 280.98,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY - 1);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 149,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n     Chronology base;\n     if ((base \u003d getBase()) !\u003d null) {\n         return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n     }\n-    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY - 1);\n     return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 149,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 149,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": {
      "type": "Yfilerename",
      "commitMessage": "Rename BaseGJChronology to BasicChronology, ensuring serialization OK\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@960 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/5/05, 2:46 PM",
      "commitName": "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "12/5/05, 2:37 PM",
      "commitNameOld": "b947d2de15ad63651dbc40e496187ac7743a69f8",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 149,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "7b7cb44562d5942add1f093111e84a5836780de4": {
      "type": "Ymodifierchange",
      "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/8/05, 3:57 PM",
      "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/30/05, 11:20 AM",
      "commitNameOld": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 9.19,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 173,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n-public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n+public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n     Chronology base;\n     if ((base \u003d getBase()) !\u003d null) {\n         return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n     }\n     FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n     return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[public, final]",
        "newValue": "[public]"
      }
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Ybodychange",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "2/21/05, 8:55 PM",
      "commitNameOld": "b87ac3b95ef4ca3fde725b568371c10779bf1427",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 97.56,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 205,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n     Chronology base;\n     if ((base \u003d getBase()) !\u003d null) {\n         return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n     }\n-    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n     return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bdd176eed470329a73d7ee08498183e579cea60": {
      "type": "Yfilerename",
      "commitMessage": "Change Chronology to abstract class\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@432 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/22/04, 8:15 AM",
      "commitName": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 7:44 AM",
      "commitNameOld": "5f9b9b675631bda3568df0d47ca305126d426011",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 241,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java"
      }
    },
    "194de43297ee92161aef886025d5aeba42db637e": {
      "type": "Ybodychange",
      "commitMessage": "Removed those pesky getDateOnlyMillis and getTimeOnlyMillis methods.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@306 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "7/17/04, 12:16 PM",
      "commitName": "194de43297ee92161aef886025d5aeba42db637e",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "5/16/04, 9:08 AM",
      "commitNameOld": "e962cbde6f664bb68e7df67703d77ef660ef0de4",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 62.13,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
      "functionStartLine": 241,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n     Chronology base;\n     if ((base \u003d getBase()) !\u003d null) {\n         return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n     }\n     FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n-    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n+    return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
          "functionStartLine": 285,
          "functionName": "getDateTimeMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,8 @@\n public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n-    Utils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    Chronology base;\n+    if ((base \u003d getBase()) !\u003d null) {\n+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n+    }\n+    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n     return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/gj/ProlepticChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
            "oldMethodName": "getDateTimeMillis",
            "newMethodName": "getDateTimeMillis"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
          "functionStartLine": 285,
          "functionName": "getDateTimeMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,8 @@\n public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n-    Utils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    Chronology base;\n+    if ((base \u003d getBase()) !\u003d null) {\n+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n+    }\n+    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n     return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "1/27/04, 11:12 PM",
          "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
          "commitAuthor": "Brian S O\u0027Neill",
          "commitDateOld": "1/11/04, 9:39 AM",
          "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 16.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Chronology base;\n    if ((base \u003d getBase()) !\u003d null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n    }\n    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
          "functionStartLine": 285,
          "functionName": "getDateTimeMillis",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,4 +1,8 @@\n public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n-    Utils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    Chronology base;\n+    if ((base \u003d getBase()) !\u003d null) {\n+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay);\n+    }\n+    FieldUtils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n     return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Override the default implementation\n",
            "newValue": ""
          }
        }
      ]
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Yintroduced",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,4 @@\n+public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n+    Utils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n+    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException {\n    Utils.verifyValueBounds(\"millisOfDay\", millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY);\n    return getDateOnlyMillis(year, monthOfYear, dayOfMonth) + millisOfDay;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/gj/ProlepticChronology.java",
      "functionStartLine": 323,
      "functionName": "getDateTimeMillis",
      "functionAnnotation": "",
      "functionDoc": "Override the default implementation\n"
    }
  }
}