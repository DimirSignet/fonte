{
  "origin": "codeshovel",
  "repositoryName": "Time-2b",
  "repositoryPath": "/tmp/Time-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AssembledChronology.java",
  "functionName": "setFields",
  "functionId": "setFields",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/AssembledChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 318,
  "functionEndLine": 386,
  "numCommitsSeen": 12,
  "timeTaken": 3800,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "c5a0687412741edbf6e78fb779a24153b8a5d189",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "c5a0687412741edbf6e78fb779a24153b8a5d189": "Ybodychange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void setFields() {\n    Fields fields \u003d new Fields();\n    if (iBase !\u003d null) {\n        fields.copyFieldsFrom(iBase);\n    }\n    assemble(fields);\n    {\n        DurationField f;\n        iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n        iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n        iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n        iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n        iHalfdays \u003d (f \u003d fields.halfdays) !\u003d null ? f : super.halfdays();\n        iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n        iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n        iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n        iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n        iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n        iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n        iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n    }\n    {\n        DateTimeField f;\n        iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n        iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n        iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n        iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n        iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n        iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n        iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n        iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n        iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n        iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n        iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n        iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n        iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n        iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n        iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n        iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n        iWeekyearOfCentury \u003d (f \u003d fields.weekyearOfCentury) !\u003d null ? f : super.weekyearOfCentury();\n        iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n        iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n        iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n        iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n        iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n        iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n    }\n    int flags;\n    if (iBase \u003d\u003d null) {\n        flags \u003d 0;\n    } else {\n        flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n    }\n    iBaseFlags \u003d flags;\n}",
      "path": "src/main/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 318,
      "functionName": "setFields",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/AssembledChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void setFields() {\n    Fields fields \u003d new Fields();\n    if (iBase !\u003d null) {\n        fields.copyFieldsFrom(iBase);\n    }\n    assemble(fields);\n    {\n        DurationField f;\n        iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n        iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n        iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n        iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n        iHalfdays \u003d (f \u003d fields.halfdays) !\u003d null ? f : super.halfdays();\n        iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n        iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n        iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n        iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n        iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n        iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n        iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n    }\n    {\n        DateTimeField f;\n        iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n        iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n        iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n        iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n        iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n        iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n        iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n        iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n        iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n        iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n        iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n        iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n        iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n        iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n        iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n        iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n        iWeekyearOfCentury \u003d (f \u003d fields.weekyearOfCentury) !\u003d null ? f : super.weekyearOfCentury();\n        iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n        iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n        iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n        iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n        iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n        iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n    }\n    int flags;\n    if (iBase \u003d\u003d null) {\n        flags \u003d 0;\n    } else {\n        flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n    }\n    iBaseFlags \u003d flags;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 318,
      "functionName": "setFields",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java"
      }
    },
    "c5a0687412741edbf6e78fb779a24153b8a5d189": {
      "type": "Ybodychange",
      "commitMessage": "Add halfdays and weekyearOfCentury fields\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@471 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/3/04, 1:48 PM",
      "commitName": "c5a0687412741edbf6e78fb779a24153b8a5d189",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 8:15 AM",
      "commitNameOld": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 12.23,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "actualSource": "private void setFields() {\n    Fields fields \u003d new Fields();\n    if (iBase !\u003d null) {\n        fields.copyFieldsFrom(iBase);\n    }\n    assemble(fields);\n    {\n        DurationField f;\n        iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n        iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n        iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n        iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n        iHalfdays \u003d (f \u003d fields.halfdays) !\u003d null ? f : super.halfdays();\n        iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n        iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n        iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n        iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n        iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n        iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n        iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n    }\n    {\n        DateTimeField f;\n        iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n        iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n        iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n        iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n        iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n        iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n        iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n        iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n        iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n        iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n        iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n        iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n        iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n        iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n        iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n        iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n        iWeekyearOfCentury \u003d (f \u003d fields.weekyearOfCentury) !\u003d null ? f : super.weekyearOfCentury();\n        iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n        iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n        iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n        iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n        iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n        iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n    }\n    int flags;\n    if (iBase \u003d\u003d null) {\n        flags \u003d 0;\n    } else {\n        flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n    }\n    iBaseFlags \u003d flags;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 356,
      "functionName": "setFields",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,53 +1,55 @@\n private void setFields() {\n     Fields fields \u003d new Fields();\n     if (iBase !\u003d null) {\n         fields.copyFieldsFrom(iBase);\n     }\n     assemble(fields);\n     {\n         DurationField f;\n         iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n         iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n         iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n         iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n+        iHalfdays \u003d (f \u003d fields.halfdays) !\u003d null ? f : super.halfdays();\n         iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n         iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n         iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n         iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n         iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n         iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n         iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n     }\n     {\n         DateTimeField f;\n         iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n         iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n         iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n         iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n         iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n         iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n         iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n         iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n         iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n         iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n         iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n         iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n         iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n         iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n         iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n         iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n+        iWeekyearOfCentury \u003d (f \u003d fields.weekyearOfCentury) !\u003d null ? f : super.weekyearOfCentury();\n         iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n         iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n         iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n         iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n         iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n         iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n     }\n     int flags;\n     if (iBase \u003d\u003d null) {\n         flags \u003d 0;\n     } else {\n         flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n     }\n     iBaseFlags \u003d flags;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yintroduced",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,53 @@\n+private void setFields() {\n+    Fields fields \u003d new Fields();\n+    if (iBase !\u003d null) {\n+        fields.copyFieldsFrom(iBase);\n+    }\n+    assemble(fields);\n+    {\n+        DurationField f;\n+        iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n+        iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n+        iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n+        iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n+        iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n+        iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n+        iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n+        iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n+        iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n+        iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n+        iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n+    }\n+    {\n+        DateTimeField f;\n+        iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n+        iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n+        iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n+        iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n+        iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n+        iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n+        iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n+        iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n+        iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n+        iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n+        iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n+        iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n+        iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n+        iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n+        iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n+        iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n+        iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n+        iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n+        iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n+        iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n+        iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n+        iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n+    }\n+    int flags;\n+    if (iBase \u003d\u003d null) {\n+        flags \u003d 0;\n+    } else {\n+        flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n+    }\n+    iBaseFlags \u003d flags;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void setFields() {\n    Fields fields \u003d new Fields();\n    if (iBase !\u003d null) {\n        fields.copyFieldsFrom(iBase);\n    }\n    assemble(fields);\n    {\n        DurationField f;\n        iMillis \u003d (f \u003d fields.millis) !\u003d null ? f : super.millis();\n        iSeconds \u003d (f \u003d fields.seconds) !\u003d null ? f : super.seconds();\n        iMinutes \u003d (f \u003d fields.minutes) !\u003d null ? f : super.minutes();\n        iHours \u003d (f \u003d fields.hours) !\u003d null ? f : super.hours();\n        iDays \u003d (f \u003d fields.days) !\u003d null ? f : super.days();\n        iWeeks \u003d (f \u003d fields.weeks) !\u003d null ? f : super.weeks();\n        iWeekyears \u003d (f \u003d fields.weekyears) !\u003d null ? f : super.weekyears();\n        iMonths \u003d (f \u003d fields.months) !\u003d null ? f : super.months();\n        iYears \u003d (f \u003d fields.years) !\u003d null ? f : super.years();\n        iCenturies \u003d (f \u003d fields.centuries) !\u003d null ? f : super.centuries();\n        iEras \u003d (f \u003d fields.eras) !\u003d null ? f : super.eras();\n    }\n    {\n        DateTimeField f;\n        iMillisOfSecond \u003d (f \u003d fields.millisOfSecond) !\u003d null ? f : super.millisOfSecond();\n        iMillisOfDay \u003d (f \u003d fields.millisOfDay) !\u003d null ? f : super.millisOfDay();\n        iSecondOfMinute \u003d (f \u003d fields.secondOfMinute) !\u003d null ? f : super.secondOfMinute();\n        iSecondOfDay \u003d (f \u003d fields.secondOfDay) !\u003d null ? f : super.secondOfDay();\n        iMinuteOfHour \u003d (f \u003d fields.minuteOfHour) !\u003d null ? f : super.minuteOfHour();\n        iMinuteOfDay \u003d (f \u003d fields.minuteOfDay) !\u003d null ? f : super.minuteOfDay();\n        iHourOfDay \u003d (f \u003d fields.hourOfDay) !\u003d null ? f : super.hourOfDay();\n        iClockhourOfDay \u003d (f \u003d fields.clockhourOfDay) !\u003d null ? f : super.clockhourOfDay();\n        iHourOfHalfday \u003d (f \u003d fields.hourOfHalfday) !\u003d null ? f : super.hourOfHalfday();\n        iClockhourOfHalfday \u003d (f \u003d fields.clockhourOfHalfday) !\u003d null ? f : super.clockhourOfHalfday();\n        iHalfdayOfDay \u003d (f \u003d fields.halfdayOfDay) !\u003d null ? f : super.halfdayOfDay();\n        iDayOfWeek \u003d (f \u003d fields.dayOfWeek) !\u003d null ? f : super.dayOfWeek();\n        iDayOfMonth \u003d (f \u003d fields.dayOfMonth) !\u003d null ? f : super.dayOfMonth();\n        iDayOfYear \u003d (f \u003d fields.dayOfYear) !\u003d null ? f : super.dayOfYear();\n        iWeekOfWeekyear \u003d (f \u003d fields.weekOfWeekyear) !\u003d null ? f : super.weekOfWeekyear();\n        iWeekyear \u003d (f \u003d fields.weekyear) !\u003d null ? f : super.weekyear();\n        iMonthOfYear \u003d (f \u003d fields.monthOfYear) !\u003d null ? f : super.monthOfYear();\n        iYear \u003d (f \u003d fields.year) !\u003d null ? f : super.year();\n        iYearOfEra \u003d (f \u003d fields.yearOfEra) !\u003d null ? f : super.yearOfEra();\n        iYearOfCentury \u003d (f \u003d fields.yearOfCentury) !\u003d null ? f : super.yearOfCentury();\n        iCenturyOfEra \u003d (f \u003d fields.centuryOfEra) !\u003d null ? f : super.centuryOfEra();\n        iEra \u003d (f \u003d fields.era) !\u003d null ? f : super.era();\n    }\n    int flags;\n    if (iBase \u003d\u003d null) {\n        flags \u003d 0;\n    } else {\n        flags \u003d ((iHourOfDay \u003d\u003d iBase.hourOfDay() \u0026\u0026 iMinuteOfHour \u003d\u003d iBase.minuteOfHour() \u0026\u0026 iSecondOfMinute \u003d\u003d iBase.secondOfMinute() \u0026\u0026 iMillisOfSecond \u003d\u003d iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay \u003d\u003d iBase.millisOfDay()) ? 2 : 0) | ((iYear \u003d\u003d iBase.year() \u0026\u0026 iMonthOfYear \u003d\u003d iBase.monthOfYear() \u0026\u0026 iDayOfMonth \u003d\u003d iBase.dayOfMonth()) ? 4 : 0);\n    }\n    iBaseFlags \u003d flags;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 383,
      "functionName": "setFields",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}