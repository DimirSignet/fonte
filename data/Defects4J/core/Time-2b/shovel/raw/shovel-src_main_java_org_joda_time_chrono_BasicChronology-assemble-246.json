{
  "origin": "codeshovel",
  "repositoryName": "Time-2b",
  "repositoryPath": "/tmp/Time-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicChronology.java",
  "functionName": "assemble",
  "functionId": "assemble___fields-Fields",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/BasicChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 246,
  "functionEndLine": 306,
  "numCommitsSeen": 41,
  "timeTaken": 4529,
  "changeHistory": [
    "81a818471a9ef5f0e884ae2d319668eff5002738",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
    "6c7032e613b5be8d6dbc19811f2e11221bf65c6c",
    "7b7cb44562d5942add1f093111e84a5836780de4",
    "79b24183d3e4517e3bceb2c2754758bb0e204410",
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
    "c5a0687412741edbf6e78fb779a24153b8a5d189",
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48",
    "4f78ec4d836c5aa1a1706eaf9c75a6e5c41d1d16",
    "6bdd176eed470329a73d7ee08498183e579cea60",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7"
  ],
  "changeHistoryShort": {
    "81a818471a9ef5f0e884ae2d319668eff5002738": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": "Yfilerename",
    "6c7032e613b5be8d6dbc19811f2e11221bf65c6c": "Ybodychange",
    "7b7cb44562d5942add1f093111e84a5836780de4": "Ybodychange",
    "79b24183d3e4517e3bceb2c2754758bb0e204410": "Ybodychange",
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f": "Ybodychange",
    "c5a0687412741edbf6e78fb779a24153b8a5d189": "Ybodychange",
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48": "Ybodychange",
    "4f78ec4d836c5aa1a1706eaf9c75a6e5c41d1d16": "Ybodychange",
    "6bdd176eed470329a73d7ee08498183e579cea60": "Yfilerename",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81a818471a9ef5f0e884ae2d319668eff5002738": {
      "type": "Ybodychange",
      "commitMessage": "DurationField is incorrect in complex DateTimeField instances\n\nFixes #92\n",
      "commitDate": "11/27/13, 4:36 AM",
      "commitName": "81a818471a9ef5f0e884ae2d319668eff5002738",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/16/13, 7:46 AM",
      "commitNameOld": "a6d5c6b54095e93a27e989670f11549395c4c8ce",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 102.91,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, fields.centuries, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 246,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,39 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n     fields.year \u003d new BasicYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n+    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n-    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n+    field \u003d new RemainderDateTimeField(fields.weekyear, fields.centuries, DateTimeFieldType.weekyearOfCentury(), 100);\n     fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n-    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 237,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 237,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "9c0781d414b9eee98f78d168b5db6c2cdda5147d": {
      "type": "Yfilerename",
      "commitMessage": "Rename BaseGJChronology to BasicChronology, ensuring serialization OK\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@960 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/5/05, 2:46 PM",
      "commitName": "9c0781d414b9eee98f78d168b5db6c2cdda5147d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "12/5/05, 2:37 PM",
      "commitNameOld": "b947d2de15ad63651dbc40e496187ac7743a69f8",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java",
      "functionStartLine": 216,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicChronology.java"
      }
    },
    "6c7032e613b5be8d6dbc19811f2e11221bf65c6c": {
      "type": "Ybodychange",
      "commitMessage": "Add since tags\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@820 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "7/19/05, 1:26 PM",
      "commitName": "6c7032e613b5be8d6dbc19811f2e11221bf65c6c",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "6/19/05, 9:48 PM",
      "commitNameOld": "a498adb4a3d6b355cd7e653e55b179acfbf3f4f9",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 29.65,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 238,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,39 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n     fields.year \u003d new BasicYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n-    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n+    fields.dayOfYear \u003d new BasicDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n-    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n-    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n+    fields.weekyear \u003d new BasicWeekyearDateTimeField(this);\n+    fields.weekOfWeekyear \u003d new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);\n     field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n     fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7b7cb44562d5942add1f093111e84a5836780de4": {
      "type": "Ybodychange",
      "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/8/05, 3:57 PM",
      "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/30/05, 11:20 AM",
      "commitNameOld": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 9.19,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 240,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,39 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n-    fields.year \u003d new GJYearDateTimeField(this);\n+    fields.year \u003d new BasicYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n-    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n+    fields.dayOfMonth \u003d new BasicDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n     field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n     fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "79b24183d3e4517e3bceb2c2754758bb0e204410": {
      "type": "Ybodychange",
      "commitMessage": "Rollback to 0.99 for 1.0 release\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@726 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/18/05, 4:54 PM",
      "commitName": "79b24183d3e4517e3bceb2c2754758bb0e204410",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/18/05, 3:02 PM",
      "commitNameOld": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 273,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,39 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n-    fields.year \u003d new BasicYearDateTimeField(this);\n+    fields.year \u003d new GJYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n     field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n     fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f": {
      "type": "Ybodychange",
      "commitMessage": "Refactor year classes into BaseGJChronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@725 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/18/05, 3:02 PM",
      "commitName": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/7/05, 3:51 PM",
      "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 10.97,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new BasicYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 275,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,39 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n-    fields.year \u003d new GJYearDateTimeField(this);\n+    fields.year \u003d new BasicYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n     field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n     fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c5a0687412741edbf6e78fb779a24153b8a5d189": {
      "type": "Ybodychange",
      "commitMessage": "Add halfdays and weekyearOfCentury fields\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@471 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/3/04, 1:48 PM",
      "commitName": "c5a0687412741edbf6e78fb779a24153b8a5d189",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "9/2/04, 3:47 PM",
      "commitNameOld": "0d18055d0b3c2e687197a8651b3a06e097fe5c48",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.92,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.halfdays \u003d cHalfdaysField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 311,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,39 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n+    fields.halfdays \u003d cHalfdaysField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n     fields.year \u003d new GJYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n     fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n+    field \u003d new RemainderDateTimeField(fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);\n+    fields.weekyearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0d18055d0b3c2e687197a8651b3a06e097fe5c48": {
      "type": "Ybodychange",
      "commitMessage": "Use DurationFieldType in DurationField\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@468 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/2/04, 3:47 PM",
      "commitName": "0d18055d0b3c2e687197a8651b3a06e097fe5c48",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "9/2/04, 2:40 PM",
      "commitNameOld": "4f78ec4d836c5aa1a1706eaf9c75a6e5c41d1d16",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 311,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n     fields.year \u003d new GJYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n     DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n-    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), \"centuries\", 100);\n+    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100);\n     field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n     fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4f78ec4d836c5aa1a1706eaf9c75a6e5c41d1d16": {
      "type": "Ybodychange",
      "commitMessage": "Use DateTimeFieldType in DateTimeField\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@466 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/2/04, 2:40 PM",
      "commitName": "4f78ec4d836c5aa1a1706eaf9c75a6e5c41d1d16",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 9:16 AM",
      "commitNameOld": "55ba9b0b65cfa904eb0d499b46ae4cd3c028b7d8",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 11.23,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), \"centuries\", 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 310,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n protected void assemble(Fields fields) {\n     fields.millis \u003d cMillisField;\n     fields.seconds \u003d cSecondsField;\n     fields.minutes \u003d cMinutesField;\n     fields.hours \u003d cHoursField;\n     fields.days \u003d cDaysField;\n     fields.weeks \u003d cWeeksField;\n     fields.millisOfSecond \u003d cMillisOfSecondField;\n     fields.millisOfDay \u003d cMillisOfDayField;\n     fields.secondOfMinute \u003d cSecondOfMinuteField;\n     fields.secondOfDay \u003d cSecondOfDayField;\n     fields.minuteOfHour \u003d cMinuteOfHourField;\n     fields.minuteOfDay \u003d cMinuteOfDayField;\n     fields.hourOfDay \u003d cHourOfDayField;\n     fields.hourOfHalfday \u003d cHourOfHalfdayField;\n     fields.clockhourOfDay \u003d cClockhourOfDayField;\n     fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n     fields.halfdayOfDay \u003d cHalfdayOfDayField;\n     fields.year \u003d new GJYearDateTimeField(this);\n     fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n-    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, \"\", 99);\n-    fields.centuryOfEra \u003d new DividedDateTimeField(field, \"centuryOfEra\", \"centuries\", 100);\n-    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra, \"\");\n-    fields.yearOfCentury \u003d new OffsetDateTimeField(field, \"yearOfCentury\", 1);\n+    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, 99);\n+    fields.centuryOfEra \u003d new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), \"centuries\", 100);\n+    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra);\n+    fields.yearOfCentury \u003d new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1);\n     fields.era \u003d new GJEraDateTimeField(this);\n     fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n     fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n     fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n     fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n     fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n     fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n     fields.years \u003d fields.year.getDurationField();\n     fields.centuries \u003d fields.centuryOfEra.getDurationField();\n     fields.months \u003d fields.monthOfYear.getDurationField();\n     fields.weekyears \u003d fields.weekyear.getDurationField();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bdd176eed470329a73d7ee08498183e579cea60": {
      "type": "Yfilerename",
      "commitMessage": "Change Chronology to abstract class\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@432 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/22/04, 8:15 AM",
      "commitName": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 7:44 AM",
      "commitNameOld": "5f9b9b675631bda3568df0d47ca305126d426011",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, \"\", 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, \"centuryOfEra\", \"centuries\", 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra, \"\");\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, \"yearOfCentury\", 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 308,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java"
      }
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yintroduced",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,36 @@\n+protected void assemble(Fields fields) {\n+    fields.millis \u003d cMillisField;\n+    fields.seconds \u003d cSecondsField;\n+    fields.minutes \u003d cMinutesField;\n+    fields.hours \u003d cHoursField;\n+    fields.days \u003d cDaysField;\n+    fields.weeks \u003d cWeeksField;\n+    fields.millisOfSecond \u003d cMillisOfSecondField;\n+    fields.millisOfDay \u003d cMillisOfDayField;\n+    fields.secondOfMinute \u003d cSecondOfMinuteField;\n+    fields.secondOfDay \u003d cSecondOfDayField;\n+    fields.minuteOfHour \u003d cMinuteOfHourField;\n+    fields.minuteOfDay \u003d cMinuteOfDayField;\n+    fields.hourOfDay \u003d cHourOfDayField;\n+    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n+    fields.clockhourOfDay \u003d cClockhourOfDayField;\n+    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n+    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n+    fields.year \u003d new GJYearDateTimeField(this);\n+    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n+    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, \"\", 99);\n+    fields.centuryOfEra \u003d new DividedDateTimeField(field, \"centuryOfEra\", \"centuries\", 100);\n+    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra, \"\");\n+    fields.yearOfCentury \u003d new OffsetDateTimeField(field, \"yearOfCentury\", 1);\n+    fields.era \u003d new GJEraDateTimeField(this);\n+    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n+    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n+    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n+    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n+    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n+    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n+    fields.years \u003d fields.year.getDurationField();\n+    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n+    fields.months \u003d fields.monthOfYear.getDurationField();\n+    fields.weekyears \u003d fields.weekyear.getDurationField();\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void assemble(Fields fields) {\n    fields.millis \u003d cMillisField;\n    fields.seconds \u003d cSecondsField;\n    fields.minutes \u003d cMinutesField;\n    fields.hours \u003d cHoursField;\n    fields.days \u003d cDaysField;\n    fields.weeks \u003d cWeeksField;\n    fields.millisOfSecond \u003d cMillisOfSecondField;\n    fields.millisOfDay \u003d cMillisOfDayField;\n    fields.secondOfMinute \u003d cSecondOfMinuteField;\n    fields.secondOfDay \u003d cSecondOfDayField;\n    fields.minuteOfHour \u003d cMinuteOfHourField;\n    fields.minuteOfDay \u003d cMinuteOfDayField;\n    fields.hourOfDay \u003d cHourOfDayField;\n    fields.hourOfHalfday \u003d cHourOfHalfdayField;\n    fields.clockhourOfDay \u003d cClockhourOfDayField;\n    fields.clockhourOfHalfday \u003d cClockhourOfHalfdayField;\n    fields.halfdayOfDay \u003d cHalfdayOfDayField;\n    fields.year \u003d new GJYearDateTimeField(this);\n    fields.yearOfEra \u003d new GJYearOfEraDateTimeField(fields.year, this);\n    DateTimeField field \u003d new OffsetDateTimeField(fields.yearOfEra, \"\", 99);\n    fields.centuryOfEra \u003d new DividedDateTimeField(field, \"centuryOfEra\", \"centuries\", 100);\n    field \u003d new RemainderDateTimeField((DividedDateTimeField) fields.centuryOfEra, \"\");\n    fields.yearOfCentury \u003d new OffsetDateTimeField(field, \"yearOfCentury\", 1);\n    fields.era \u003d new GJEraDateTimeField(this);\n    fields.dayOfWeek \u003d new GJDayOfWeekDateTimeField(this, fields.days);\n    fields.dayOfMonth \u003d new GJDayOfMonthDateTimeField(this, fields.days);\n    fields.dayOfYear \u003d new GJDayOfYearDateTimeField(this, fields.days);\n    fields.monthOfYear \u003d new GJMonthOfYearDateTimeField(this);\n    fields.weekyear \u003d new GJWeekyearDateTimeField(this);\n    fields.weekOfWeekyear \u003d new GJWeekOfWeekyearDateTimeField(this, fields.weeks);\n    fields.years \u003d fields.year.getDurationField();\n    fields.centuries \u003d fields.centuryOfEra.getDurationField();\n    fields.months \u003d fields.monthOfYear.getDurationField();\n    fields.weekyears \u003d fields.weekyear.getDurationField();\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
      "functionStartLine": 356,
      "functionName": "assemble",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}