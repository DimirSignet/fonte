{
  "origin": "codeshovel",
  "repositoryName": "Time-2b",
  "repositoryPath": "/tmp/Time-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FieldUtils.java",
  "functionName": "verifyValueBounds",
  "functionId": "verifyValueBounds___fieldType-DateTimeFieldType__value-int__lowerBound-int__upperBound-int",
  "sourceFilePath": "src/main/java/org/joda/time/field/FieldUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n",
  "functionStartLine": 249,
  "functionEndLine": 256,
  "numCommitsSeen": 23,
  "timeTaken": 1488,
  "changeHistory": [
    "9d991bcfd898a7b06239dbe1788774ba5106562b",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "22b39081c85640ff5add5ed3a8037f4ac00ccb49",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9"
  ],
  "changeHistoryShort": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "22b39081c85640ff5add5ed3a8037f4ac00ccb49": "Ydocchange",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d991bcfd898a7b06239dbe1788774ba5106562b": {
      "type": "Ybodychange",
      "commitMessage": "use the Integer cache where possible\n",
      "commitDate": "7/14/11, 8:56 PM",
      "commitName": "9d991bcfd898a7b06239dbe1788774ba5106562b",
      "commitAuthor": "Dave Brosius",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 59.45,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(fieldType, Integer.valueOf(value), Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n    }\n}",
      "path": "src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 230,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n",
      "diff": "@@ -1,5 +1,5 @@\n public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n     if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n-        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n+        throw new IllegalFieldValueException(fieldType, Integer.valueOf(value), Integer.valueOf(lowerBound), Integer.valueOf(upperBound));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 230,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
        "newPath": "src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 230,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "22b39081c85640ff5add5ed3a8037f4ac00ccb49": {
      "type": "Ydocchange",
      "commitMessage": "Add since tags for 1.1\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@854 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/10/05, 3:34 PM",
      "commitName": "22b39081c85640ff5add5ed3a8037f4ac00ccb49",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "6/8/05, 9:15 AM",
      "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 63.26,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 181,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n",
        "newValue": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n@since 1.1\n"
      }
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,5 @@\n+public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n+    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n+        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound) {\n    if ((value \u003c lowerBound) || (value \u003e upperBound)) {\n        throw new IllegalFieldValueException(fieldType, new Integer(value), new Integer(lowerBound), new Integer(upperBound));\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 158,
      "functionName": "verifyValueBounds",
      "functionAnnotation": "",
      "functionDoc": "Verify that input values are within specified bounds.\n\n@param value the value to check\n@param lowerBound the lower bound allowed for value\n@param upperBound the upper bound allowed for value\n@throws IllegalFieldValueException if value is not in the specified bounds\n"
    }
  }
}