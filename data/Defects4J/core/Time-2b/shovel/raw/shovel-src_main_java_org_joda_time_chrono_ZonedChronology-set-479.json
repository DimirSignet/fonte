{
  "origin": "codeshovel",
  "repositoryName": "Time-2b",
  "repositoryPath": "/tmp/Time-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZonedChronology.java",
  "functionName": "set",
  "functionId": "$set___instant-long__value-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/ZonedChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 479,
  "functionEndLine": 490,
  "numCommitsSeen": 34,
  "timeTaken": 1848,
  "changeHistory": [
    "2fcc704a0e7d863f19b5b14fb412c14f3c063dd4",
    "9d991bcfd898a7b06239dbe1788774ba5106562b",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "c7a581e55fc988bd90fa4bb1b0acece5181b7c5f",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "2fcc704a0e7d863f19b5b14fb412c14f3c063dd4": "Ybodychange",
    "9d991bcfd898a7b06239dbe1788774ba5106562b": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "c7a581e55fc988bd90fa4bb1b0acece5181b7c5f": "Ybodychange",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b": "Ybodychange",
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808": "Ybodychange",
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": "Ybodychange",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ymultichange(Yparameterchange,Ybodychange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2fcc704a0e7d863f19b5b14fb412c14f3c063dd4": {
      "type": "Ybodychange",
      "commitMessage": "Add IllegalInstantException\n\nBetter handle DST gaps\n",
      "commitDate": "1/7/13, 5:04 AM",
      "commitName": "2fcc704a0e7d863f19b5b14fb412c14f3c063dd4",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/14/11, 8:56 PM",
      "commitNameOld": "9d991bcfd898a7b06239dbe1788774ba5106562b",
      "commitAuthorOld": "Dave Brosius",
      "daysBetweenCommits": 542.38,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n    if (get(result) !\u003d value) {\n        IllegalInstantException cause \u003d new IllegalInstantException(localInstant, iZone.getID());\n        IllegalFieldValueException ex \u003d new IllegalFieldValueException(iField.getType(), Integer.valueOf(value), cause.getMessage());\n        ex.initCause(cause);\n        throw ex;\n    }\n    return result;\n}",
      "path": "src/main/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 461,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,12 @@\n public long set(long instant, int value) {\n     long localInstant \u003d iZone.convertUTCToLocal(instant);\n     localInstant \u003d iField.set(localInstant, value);\n     long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n     if (get(result) !\u003d value) {\n-        throw new IllegalFieldValueException(iField.getType(), Integer.valueOf(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n+        IllegalInstantException cause \u003d new IllegalInstantException(localInstant, iZone.getID());\n+        IllegalFieldValueException ex \u003d new IllegalFieldValueException(iField.getType(), Integer.valueOf(value), cause.getMessage());\n+        ex.initCause(cause);\n+        throw ex;\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9d991bcfd898a7b06239dbe1788774ba5106562b": {
      "type": "Ybodychange",
      "commitMessage": "use the Integer cache where possible\n",
      "commitDate": "7/14/11, 8:56 PM",
      "commitName": "9d991bcfd898a7b06239dbe1788774ba5106562b",
      "commitAuthor": "Dave Brosius",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 59.45,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n    if (get(result) !\u003d value) {\n        throw new IllegalFieldValueException(iField.getType(), Integer.valueOf(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n    }\n    return result;\n}",
      "path": "src/main/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 464,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n public long set(long instant, int value) {\n     long localInstant \u003d iZone.convertUTCToLocal(instant);\n     localInstant \u003d iField.set(localInstant, value);\n     long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n     if (get(result) !\u003d value) {\n-        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n+        throw new IllegalFieldValueException(iField.getType(), Integer.valueOf(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n    if (get(result) !\u003d value) {\n        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n    }\n    return result;\n}",
      "path": "src/main/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 464,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/ZonedChronology.java"
      }
    },
    "c7a581e55fc988bd90fa4bb1b0acece5181b7c5f": {
      "type": "Ybodychange",
      "commitMessage": "DateTimeZone.convertLocalToUTC [bugs 3102760,2182444,2553453]\nNew method now retains the offset wherever possible during calculations\nThis affects higher methods like withHourOfDay/withMinuteOfHour/withSecondOfMinute/withMillisOfSecond which now do not change offset when called within a DST overlap\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1595 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/5/10, 1:27 PM",
      "commitName": "c7a581e55fc988bd90fa4bb1b0acece5181b7c5f",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:17 PM",
      "commitNameOld": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 118.88,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n    if (get(result) !\u003d value) {\n        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n    }\n    return result;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 464,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n public long set(long instant, int value) {\n     long localInstant \u003d iZone.convertUTCToLocal(instant);\n     localInstant \u003d iField.set(localInstant, value);\n-    long result \u003d iZone.convertLocalToUTC(localInstant, false);\n+    long result \u003d iZone.convertLocalToUTC(localInstant, false, instant);\n     if (get(result) !\u003d value) {\n         throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false);\n    if (get(result) !\u003d value) {\n        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n    }\n    return result;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 464,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java"
      }
    },
    "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b": {
      "type": "Ybodychange",
      "commitMessage": "Fix DateTimeZone to better handle spring DST cutover\nbugs 1710316, 1747219, 1755158\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1232 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/4/07, 10:23 AM",
      "commitName": "c41eff1e6026a6e0b88ea45edda3e41eecc6ac7b",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "10/21/06, 10:00 AM",
      "commitNameOld": "9d1583cdfe52999c071b4151455e8c53e2468abb",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 287.02,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long localInstant \u003d iZone.convertUTCToLocal(instant);\n    localInstant \u003d iField.set(localInstant, value);\n    long result \u003d iZone.convertLocalToUTC(localInstant, false);\n    if (get(result) !\u003d value) {\n        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n    }\n    return result;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 464,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,9 @@\n public long set(long instant, int value) {\n-    long offset \u003d getOffsetToAdd(instant);\n-    instant \u003d iField.set(instant + offset, value);\n-    long offsetFromLocal \u003d getOffsetFromLocalToSubtract(instant);\n-    instant -\u003d offsetFromLocal;\n-    if (offset !\u003d offsetFromLocal) {\n-        if (get(instant) !\u003d value) {\n-            throw new IllegalFieldValueException(iField.getType(), new Integer(value), null, null);\n-        }\n+    long localInstant \u003d iZone.convertUTCToLocal(instant);\n+    localInstant \u003d iField.set(localInstant, value);\n+    long result \u003d iZone.convertLocalToUTC(localInstant, false);\n+    if (get(result) !\u003d value) {\n+        throw new IllegalFieldValueException(iField.getType(), new Integer(value), \"Illegal instant due to time zone offset transition: \" + DateTimeFormat.forPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSS\").print(new Instant(localInstant)) + \" (\" + iZone.getID() + \")\");\n     }\n-    return instant;\n+    return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808": {
      "type": "Ybodychange",
      "commitMessage": "Improved overflow detection and handling.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@895 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/7/05, 11:26 AM",
      "commitName": "3dd31f2d88ad2109502a508bfaf1d81f9f7a3808",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "8/23/05, 12:56 PM",
      "commitNameOld": "69c3d758fa58a5abe835e1c7f61bd5e85bc0dc73",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 14.94,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long offset \u003d getOffsetToAdd(instant);\n    instant \u003d iField.set(instant + offset, value);\n    long offsetFromLocal \u003d getOffsetFromLocalToSubtract(instant);\n    instant -\u003d offsetFromLocal;\n    if (offset !\u003d offsetFromLocal) {\n        if (get(instant) !\u003d value) {\n            throw new IllegalFieldValueException(iField.getType(), new Integer(value), null, null);\n        }\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 401,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n public long set(long instant, int value) {\n-    long offset \u003d this.iZone.getOffset(instant);\n+    long offset \u003d getOffsetToAdd(instant);\n     instant \u003d iField.set(instant + offset, value);\n-    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n+    long offsetFromLocal \u003d getOffsetFromLocalToSubtract(instant);\n     instant -\u003d offsetFromLocal;\n     if (offset !\u003d offsetFromLocal) {\n         if (get(instant) !\u003d value) {\n             throw new IllegalFieldValueException(iField.getType(), new Integer(value), null, null);\n         }\n     }\n     return instant;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9": {
      "type": "Ybodychange",
      "commitMessage": "Added IllegalFieldValueException class.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@766 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "5/30/05, 11:20 AM",
      "commitName": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "2/7/05, 3:51 PM",
      "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 111.77,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "actualSource": "public long set(long instant, int value) {\n    long offset \u003d this.iZone.getOffset(instant);\n    instant \u003d iField.set(instant + offset, value);\n    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n    instant -\u003d offsetFromLocal;\n    if (offset !\u003d offsetFromLocal) {\n        if (get(instant) !\u003d value) {\n            throw new IllegalFieldValueException(iField.getType(), new Integer(value), null, null);\n        }\n    }\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 370,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n public long set(long instant, int value) {\n     long offset \u003d this.iZone.getOffset(instant);\n     instant \u003d iField.set(instant + offset, value);\n     long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n     instant -\u003d offsetFromLocal;\n     if (offset !\u003d offsetFromLocal) {\n         if (get(instant) !\u003d value) {\n-            throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n+            throw new IllegalFieldValueException(iField.getType(), new Integer(value), null, null);\n         }\n     }\n     return instant;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public long set(long instant, int value) {\n    long offset \u003d this.iZone.getOffset(instant);\n    instant \u003d iField.set(instant + offset, value);\n    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n    instant -\u003d offsetFromLocal;\n    if (offset !\u003d offsetFromLocal) {\n        if (get(instant) !\u003d value) {\n            throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n        }\n    }\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
          "functionStartLine": 616,
          "functionName": "set",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-public long set(long millis, int value) {\n-    long offset \u003d this.iZone.getOffset(millis);\n-    millis \u003d iField.set(millis + offset, value);\n-    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(millis);\n-    millis -\u003d offsetFromLocal;\n+public long set(long instant, int value) {\n+    long offset \u003d this.iZone.getOffset(instant);\n+    instant \u003d iField.set(instant + offset, value);\n+    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n+    instant -\u003d offsetFromLocal;\n     if (offset !\u003d offsetFromLocal) {\n-        if (get(millis) !\u003d value) {\n+        if (get(instant) !\u003d value) {\n             throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n         }\n     }\n-    return millis;\n+    return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[millis-long, value-int]",
            "newValue": "[instant-long, value-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "12/18/03, 6:07 PM",
          "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "12/16/03, 1:39 PM",
          "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 2.19,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public long set(long instant, int value) {\n    long offset \u003d this.iZone.getOffset(instant);\n    instant \u003d iField.set(instant + offset, value);\n    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n    instant -\u003d offsetFromLocal;\n    if (offset !\u003d offsetFromLocal) {\n        if (get(instant) !\u003d value) {\n            throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n        }\n    }\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
          "functionStartLine": 616,
          "functionName": "set",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,12 @@\n-public long set(long millis, int value) {\n-    long offset \u003d this.iZone.getOffset(millis);\n-    millis \u003d iField.set(millis + offset, value);\n-    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(millis);\n-    millis -\u003d offsetFromLocal;\n+public long set(long instant, int value) {\n+    long offset \u003d this.iZone.getOffset(instant);\n+    instant \u003d iField.set(instant + offset, value);\n+    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(instant);\n+    instant -\u003d offsetFromLocal;\n     if (offset !\u003d offsetFromLocal) {\n-        if (get(millis) !\u003d value) {\n+        if (get(instant) !\u003d value) {\n             throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n         }\n     }\n-    return millis;\n+    return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,12 @@\n+public long set(long millis, int value) {\n+    long offset \u003d this.iZone.getOffset(millis);\n+    millis \u003d iField.set(millis + offset, value);\n+    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(millis);\n+    millis -\u003d offsetFromLocal;\n+    if (offset !\u003d offsetFromLocal) {\n+        if (get(millis) !\u003d value) {\n+            throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n+        }\n+    }\n+    return millis;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public long set(long millis, int value) {\n    long offset \u003d this.iZone.getOffset(millis);\n    millis \u003d iField.set(millis + offset, value);\n    long offsetFromLocal \u003d this.iZone.getOffsetFromLocal(millis);\n    millis -\u003d offsetFromLocal;\n    if (offset !\u003d offsetFromLocal) {\n        if (get(millis) !\u003d value) {\n            throw new IllegalArgumentException(\"Illegal value for \" + iField.getName() + \": \" + value);\n        }\n    }\n    return millis;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java",
      "functionStartLine": 344,
      "functionName": "set",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}