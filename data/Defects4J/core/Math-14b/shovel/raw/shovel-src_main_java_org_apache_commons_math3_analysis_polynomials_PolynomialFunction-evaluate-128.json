{
  "origin": "codeshovel",
  "repositoryName": "Math-14b",
  "repositoryPath": "/tmp/Math-14b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PolynomialFunction.java",
  "functionName": "evaluate",
  "functionId": "evaluate___coefficients-double[]__argument-double",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
  "functionAnnotation": "",
  "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n",
  "functionStartLine": 128,
  "functionEndLine": 140,
  "numCommitsSeen": 44,
  "timeTaken": 12573,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "e9c6d1de301072c16a48587db682542f967b3a9b",
    "feb43d631efa5fef4c842f6ba02e417e555293a2",
    "623ba574065bd409789968951c7060904cdaccb4",
    "96eca83048dfa6759382e3f4942e0ebfcf2db635",
    "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
    "1eaea0b549f685bd416cef68faa3a137b9bb3519",
    "bd345d954b85ef8eb3867c5044f933e34df0c124",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "95d2cf0a090068a561701ae57a0e17436ec8c284",
    "1d1436557bcb21887d9b352dd0f5f3d3acb71e11",
    "390ff2075b0c662d78d42abef2807675ee4bdb84"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "e9c6d1de301072c16a48587db682542f967b3a9b": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
    "feb43d631efa5fef4c842f6ba02e417e555293a2": "Yformatchange",
    "623ba574065bd409789968951c7060904cdaccb4": "Ydocchange",
    "96eca83048dfa6759382e3f4942e0ebfcf2db635": "Ymultichange(Ybodychange,Ydocchange)",
    "40c5b89fa66110e4d29ef8cebb61344c35f6c876": "Ymultichange(Ybodychange,Ydocchange)",
    "1eaea0b549f685bd416cef68faa3a137b9bb3519": "Ybodychange",
    "bd345d954b85ef8eb3867c5044f933e34df0c124": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "95d2cf0a090068a561701ae57a0e17436ec8c284": "Ybodychange",
    "1d1436557bcb21887d9b352dd0f5f3d3acb71e11": "Yfilerename",
    "390ff2075b0c662d78d42abef2807675ee4bdb84": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n    MathUtils.checkNotNull(coefficients);\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 126,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
        "newPath": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
        "oldMethodName": "evaluate",
        "newMethodName": "evaluate"
      }
    },
    "e9c6d1de301072c16a48587db682542f967b3a9b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "Replaced NullPointerException by NullArgumentException\n\nJIRA: MATH-403\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1132432 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/11, 7:59 AM",
      "commitName": "e9c6d1de301072c16a48587db682542f967b3a9b",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Replaced NullPointerException by NullArgumentException\n\nJIRA: MATH-403\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1132432 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/5/11, 7:59 AM",
          "commitName": "e9c6d1de301072c16a48587db682542f967b3a9b",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/3/11, 1:49 PM",
          "commitNameOld": "98e22d778b3a886be253638b9a6b7ec075c3d62d",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.76,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n    MathUtils.checkNotNull(coefficients);\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 126,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n",
          "diff": "@@ -1,11 +1,12 @@\n-protected static double evaluate(double[] coefficients, double argument) {\n+protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n+    MathUtils.checkNotNull(coefficients);\n     int n \u003d coefficients.length;\n     if (n \u003d\u003d 0) {\n         throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[NullArgumentException, NoDataException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Replaced NullPointerException by NullArgumentException\n\nJIRA: MATH-403\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1132432 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/5/11, 7:59 AM",
          "commitName": "e9c6d1de301072c16a48587db682542f967b3a9b",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/3/11, 1:49 PM",
          "commitNameOld": "98e22d778b3a886be253638b9a6b7ec075c3d62d",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.76,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n    MathUtils.checkNotNull(coefficients);\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 126,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n",
          "diff": "@@ -1,11 +1,12 @@\n-protected static double evaluate(double[] coefficients, double argument) {\n+protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n+    MathUtils.checkNotNull(coefficients);\n     int n \u003d coefficients.length;\n     if (n \u003d\u003d 0) {\n         throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Replaced NullPointerException by NullArgumentException\n\nJIRA: MATH-403\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1132432 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/5/11, 7:59 AM",
          "commitName": "e9c6d1de301072c16a48587db682542f967b3a9b",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/3/11, 1:49 PM",
          "commitNameOld": "98e22d778b3a886be253638b9a6b7ec075c3d62d",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.76,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n    MathUtils.checkNotNull(coefficients);\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 126,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n",
          "diff": "@@ -1,11 +1,12 @@\n-protected static double evaluate(double[] coefficients, double argument) {\n+protected static double evaluate(double[] coefficients, double argument) throws NullArgumentException, NoDataException {\n+    MathUtils.checkNotNull(coefficients);\n     int n \u003d coefficients.length;\n     if (n \u003d\u003d 0) {\n         throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullPointerException if {@code coefficients} is {@code null}.\n",
            "newValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullArgumentException if {@code coefficients} is {@code null}.\n"
          }
        }
      ]
    },
    "feb43d631efa5fef4c842f6ba02e417e555293a2": {
      "type": "Yformatchange",
      "commitMessage": "MATH-534\nRefactored \"PolynomialFitter\". Moved parametric function inner class to\n\"PolynomialFunction\".\nAdapted affected classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1075054 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/27/11, 5:31 AM",
      "commitName": "feb43d631efa5fef4c842f6ba02e417e555293a2",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/27/11, 4:58 AM",
      "commitNameOld": "623ba574065bd409789968951c7060904cdaccb4",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 122,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullPointerException if {@code coefficients} is {@code null}.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "623ba574065bd409789968951c7060904cdaccb4": {
      "type": "Ydocchange",
      "commitMessage": "MATH-536\nSimplified string representation (when a coefficient is an integer number).\nUpgraded unit tests to JUnit 4.\nCode and Javadoc formatting clean-up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1075048 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/27/11, 4:58 AM",
      "commitName": "623ba574065bd409789968951c7060904cdaccb4",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "12/5/10, 11:25 AM",
      "commitNameOld": "3c8c9511575b08419483a0e3c57e551ff43358a7",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 83.73,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 121,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullPointerException if {@code coefficients} is {@code null}.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NoDataException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
        "newValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients Coefficients of the polynomial to evaluate.\n@param argument Input value.\n@return the value of the polynomial.\n@throws NoDataException if {@code coefficients} is empty.\n@throws NullPointerException if {@code coefficients} is {@code null}.\n"
      }
    },
    "96eca83048dfa6759382e3f4942e0ebfcf2db635": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/9/10, 2:40 PM",
      "commitName": "96eca83048dfa6759382e3f4942e0ebfcf2db635",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962702 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/9/10, 2:40 PM",
          "commitName": "96eca83048dfa6759382e3f4942e0ebfcf2db635",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "7/9/10, 6:15 AM",
          "commitNameOld": "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 123,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NoDataException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
          "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n-    if (n \u003c 1) {\n-        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n+    if (n \u003d\u003d 0) {\n+        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962702 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/9/10, 2:40 PM",
          "commitName": "96eca83048dfa6759382e3f4942e0ebfcf2db635",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "7/9/10, 6:15 AM",
          "commitNameOld": "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003d\u003d 0) {\n        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 123,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NoDataException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
          "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n-    if (n \u003c 1) {\n-        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n+    if (n \u003d\u003d 0) {\n+        throw new NoDataException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NotStrictlyPositiveException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
            "newValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NoDataException if coefficients is empty\n@throws NullPointerException if coefficients is null\n"
          }
        }
      ]
    },
    "40c5b89fa66110e4d29ef8cebb61344c35f6c876": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/9/10, 6:15 AM",
      "commitName": "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962515 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/9/10, 6:15 AM",
          "commitName": "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "6/16/10, 4:03 PM",
          "commitNameOld": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 22.59,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 124,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NotStrictlyPositiveException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
          "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n     if (n \u003c 1) {\n-        throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n+        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962515 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/9/10, 6:15 AM",
          "commitName": "40c5b89fa66110e4d29ef8cebb61344c35f6c876",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "6/16/10, 4:03 PM",
          "commitNameOld": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 22.59,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
          "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 124,
          "functionName": "evaluate",
          "functionAnnotation": "",
          "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NotStrictlyPositiveException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
          "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n     if (n \u003c 1) {\n-        throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n+        throw new NotStrictlyPositiveException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, n);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
            "newValue": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws NotStrictlyPositiveException if coefficients is empty\n@throws NullPointerException if coefficients is null\n"
          }
        }
      ]
    },
    "1eaea0b549f685bd416cef68faa3a137b9bb3519": {
      "type": "Ybodychange",
      "commitMessage": "changed the localization mechanism for error messages. The new system is based on an enum rather than on duplicated string literals.\nJIRA: MATH-361\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955423 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10, 4:03 PM",
      "commitName": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "3/13/10, 5:35 PM",
      "commitNameOld": "416ed796d9618d3d840ad7b90c172e3df630730a",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 94.89,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 123,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
      "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n     if (n \u003c 1) {\n-        throw MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);\n+        throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bd345d954b85ef8eb3867c5044f933e34df0c124": {
      "type": "Ybodychange",
      "commitMessage": "replaced duplicated strings by a single static string in many classes\nthis will later allow enabling the MultipleStringLiterals rule in checkstyle\n(there are many other duplicated strings, so this cannot be enabled yet, I\u0027ll\ndo another pass on it later on)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@885278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/29/09, 1:47 PM",
      "commitName": "bd345d954b85ef8eb3867c5044f933e34df0c124",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/5/09, 10:36 AM",
      "commitNameOld": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 85.17,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 126,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
      "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n     if (n \u003c 1) {\n-        throw MathRuntimeException.createIllegalArgumentException(\"empty polynomials coefficients array\");\n+        throw MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw MathRuntimeException.createIllegalArgumentException(\"empty polynomials coefficients array\");\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 122,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
        "newPath": "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java"
      }
    },
    "95d2cf0a090068a561701ae57a0e17436ec8c284": {
      "type": "Ybodychange",
      "commitMessage": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@771097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/3/09, 11:24 AM",
      "commitName": "95d2cf0a090068a561701ae57a0e17436ec8c284",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "4/5/09, 9:48 AM",
      "commitNameOld": "f46ebfe991c8078e254143385ffd61c42cb48f88",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 28.07,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw MathRuntimeException.createIllegalArgumentException(\"empty polynomials coefficients array\");\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 119,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
      "diff": "@@ -1,11 +1,11 @@\n protected static double evaluate(double[] coefficients, double argument) {\n     int n \u003d coefficients.length;\n     if (n \u003c 1) {\n-        throw new IllegalArgumentException(\"Coefficient array must have positive length for evaluation\");\n+        throw MathRuntimeException.createIllegalArgumentException(\"empty polynomials coefficients array\");\n     }\n     double result \u003d coefficients[n - 1];\n     for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n         result \u003d argument * result + coefficients[j];\n     }\n     return result;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1d1436557bcb21887d9b352dd0f5f3d3acb71e11": {
      "type": "Yfilerename",
      "commitMessage": "split the analysis package into several sub-packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@735449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/18/09, 5:07 AM",
      "commitName": "1d1436557bcb21887d9b352dd0f5f3d3acb71e11",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "1/17/09, 9:08 AM",
      "commitNameOld": "3a8a9685ec252116dce375ae9ca61f4cd41fa70f",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 0.83,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw new IllegalArgumentException(\"Coefficient array must have positive length for evaluation\");\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java",
      "functionStartLine": 115,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/analysis/PolynomialFunction.java",
        "newPath": "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java"
      }
    },
    "390ff2075b0c662d78d42abef2807675ee4bdb84": {
      "type": "Yintroduced",
      "commitMessage": "Modified constructor to copy input coefficients array.\nChanged evaluation to use Horner\u0027s method.\nExposed coefficients as read-only property\nImplemented DifferentiableUnivariateRealFunction interfaces\nDropped redundant firstDerivative, secondDerivative methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141144 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/2/04, 1:08 PM",
      "commitName": "390ff2075b0c662d78d42abef2807675ee4bdb84",
      "commitAuthor": "Phil Steitz",
      "diff": "@@ -0,0 +1,11 @@\n+protected static double evaluate(double[] coefficients, double argument) {\n+    int n \u003d coefficients.length;\n+    if (n \u003c 1) {\n+        throw new IllegalArgumentException(\"Coefficient array must have positive length for evaluation\");\n+    }\n+    double result \u003d coefficients[n - 1];\n+    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n+        result \u003d argument * result + coefficients[j];\n+    }\n+    return result;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected static double evaluate(double[] coefficients, double argument) {\n    int n \u003d coefficients.length;\n    if (n \u003c 1) {\n        throw new IllegalArgumentException(\"Coefficient array must have positive length for evaluation\");\n    }\n    double result \u003d coefficients[n - 1];\n    for (int j \u003d n - 2; j \u003e\u003d 0; j--) {\n        result \u003d argument * result + coefficients[j];\n    }\n    return result;\n}",
      "path": "src/java/org/apache/commons/math/analysis/PolynomialFunction.java",
      "functionStartLine": 105,
      "functionName": "evaluate",
      "functionAnnotation": "",
      "functionDoc": "Uses Horner\u0027s Method to evaluate the polynomial with the given coefficients at\nthe argument.\n\n@param coefficients the coefficients of the polynomial to evaluate\n@param argument the input value\n@return the value of the polynomial\n@throws IllegalArgumentException if coefficients is empty\n@throws NullPointerException if coefficients is null\n"
    }
  }
}