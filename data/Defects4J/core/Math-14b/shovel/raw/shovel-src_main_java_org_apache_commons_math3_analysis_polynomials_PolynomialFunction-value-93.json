{
  "origin": "codeshovel",
  "repositoryName": "Math-14b",
  "repositoryPath": "/tmp/Math-14b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PolynomialFunction.java",
  "functionName": "value",
  "functionId": "value___x-double",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
  "functionAnnotation": "",
  "functionDoc": "Compute the value of the function for the given argument.\n\u003cp\u003e\n The value returned is \u003cbr/\u003e\n \u003ccode\u003ecoefficients[n] * x^n + ... + coefficients[1] * x  + coefficients[0]\u003c/code\u003e\n\u003c/p\u003e\n\n@param x Argument for which the function value should be computed.\n@return the value of the polynomial at the given point.\n@see UnivariateFunction#value(double)\n",
  "functionStartLine": 93,
  "functionEndLine": 95,
  "numCommitsSeen": 29,
  "timeTaken": 12189,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "8302dd02498495277ec0db9301edb2158bb0e314",
    "80b1e90b42a34856b61cec628fcea6633d1000cd",
    "eab0f248f86dd0954405e4250272989e4d75cadd",
    "6a978ea29f680a87dfc380c760adf2e17b2e7c9c",
    "402160b94a9ffd5f400d8e5717badcaa2fd3c5af",
    "0a904461932f2c0455611e77ec6a8d8aced2980b"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
    "8302dd02498495277ec0db9301edb2158bb0e314": "Yexceptionschange",
    "80b1e90b42a34856b61cec628fcea6633d1000cd": "Ybodychange",
    "eab0f248f86dd0954405e4250272989e4d75cadd": "Yfilerename",
    "6a978ea29f680a87dfc380c760adf2e17b2e7c9c": "Yexceptionschange",
    "402160b94a9ffd5f400d8e5717badcaa2fd3c5af": "Ybodychange",
    "0a904461932f2c0455611e77ec6a8d8aced2980b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange)",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/14/12, 8:17 AM",
          "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/14/12, 6:34 AM",
          "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double value(double x) {\n    return evaluate(coefficients, x);\n}",
          "path": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 91,
          "functionName": "value",
          "functionAnnotation": "",
          "functionDoc": "Compute the value of the function for the given argument.\n\u003cp\u003e\n The value returned is \u003cbr/\u003e\n \u003ccode\u003ecoefficients[n] * x^n + ... + coefficients[1] * x  + coefficients[0]\u003c/code\u003e\n\u003c/p\u003e\n\n@param x Argument for which the function value should be computed.\n@return the value of the polynomial at the given point.\n@see UnivariateFunction#value(double)\n",
          "diff": "@@ -1,3 +1,3 @@\n public double value(double x) {\n-    return FastMath.cos(x);\n+    return evaluate(coefficients, x);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/test/java/org/apache/commons/math/analysis/SinFunction.java",
            "newPath": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
            "oldMethodName": "value",
            "newMethodName": "value"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/14/12, 8:17 AM",
          "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/14/12, 6:34 AM",
          "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double value(double x) {\n    return evaluate(coefficients, x);\n}",
          "path": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 91,
          "functionName": "value",
          "functionAnnotation": "",
          "functionDoc": "Compute the value of the function for the given argument.\n\u003cp\u003e\n The value returned is \u003cbr/\u003e\n \u003ccode\u003ecoefficients[n] * x^n + ... + coefficients[1] * x  + coefficients[0]\u003c/code\u003e\n\u003c/p\u003e\n\n@param x Argument for which the function value should be computed.\n@return the value of the polynomial at the given point.\n@see UnivariateFunction#value(double)\n",
          "diff": "@@ -1,3 +1,3 @@\n public double value(double x) {\n-    return FastMath.cos(x);\n+    return evaluate(coefficients, x);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/14/12, 8:17 AM",
          "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/14/12, 6:34 AM",
          "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double value(double x) {\n    return evaluate(coefficients, x);\n}",
          "path": "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java",
          "functionStartLine": 91,
          "functionName": "value",
          "functionAnnotation": "",
          "functionDoc": "Compute the value of the function for the given argument.\n\u003cp\u003e\n The value returned is \u003cbr/\u003e\n \u003ccode\u003ecoefficients[n] * x^n + ... + coefficients[1] * x  + coefficients[0]\u003c/code\u003e\n\u003c/p\u003e\n\n@param x Argument for which the function value should be computed.\n@return the value of the polynomial at the given point.\n@see UnivariateFunction#value(double)\n",
          "diff": "@@ -1,3 +1,3 @@\n public double value(double x) {\n-    return FastMath.cos(x);\n+    return evaluate(coefficients, x);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Compute the value of the function for the given argument.\n\u003cp\u003e\n The value returned is \u003cbr/\u003e\n \u003ccode\u003ecoefficients[n] * x^n + ... + coefficients[1] * x  + coefficients[0]\u003c/code\u003e\n\u003c/p\u003e\n\n@param x Argument for which the function value should be computed.\n@return the value of the polynomial at the given point.\n@see UnivariateFunction#value(double)\n"
          }
        }
      ]
    },
    "8302dd02498495277ec0db9301edb2158bb0e314": {
      "type": "Yexceptionschange",
      "commitMessage": "removed FunctionEvaluationException, DerivativeException and MatrixVisitorException\nthese exception were  deprecated in 2.2 and a smooth transition path was set up to help users, now all user functions should use the new unchecked MathUserException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037328 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/20/10, 1:01 PM",
      "commitName": "8302dd02498495277ec0db9301edb2158bb0e314",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "11/3/10, 6:46 AM",
      "commitNameOld": "51ec76cc5685566569af3f312efee2aaccadddfc",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 17.3,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) {\n    return FastMath.cos(x);\n}",
      "path": "src/test/java/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 44,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n-public double value(double x) throws FunctionEvaluationException {\n+public double value(double x) {\n     return FastMath.cos(x);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[FunctionEvaluationException]",
        "newValue": "[]"
      }
    },
    "80b1e90b42a34856b61cec628fcea6633d1000cd": {
      "type": "Ybodychange",
      "commitMessage": "added FastMath and used it everywhere in replacement of java.util.Math\nthe unit tests have not been added yet (waiting for dfp library addition)\nJIRA: MATH-375\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@990658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/29/10, 3:04 PM",
      "commitName": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "9/5/09, 10:36 AM",
      "commitNameOld": "26dac5a0e7fc9c6be9571b3e71a15d8502480d96",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 358.19,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) throws FunctionEvaluationException {\n    return FastMath.cos(x);\n}",
      "path": "src/test/java/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 45,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n public double value(double x) throws FunctionEvaluationException {\n-    return Math.cos(x);\n+    return FastMath.cos(x);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "eab0f248f86dd0954405e4250272989e4d75cadd": {
      "type": "Yfilerename",
      "commitMessage": "moved test java and resources directories for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:44 AM",
      "commitName": "eab0f248f86dd0954405e4250272989e4d75cadd",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:30 AM",
      "commitNameOld": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) throws FunctionEvaluationException {\n    return Math.cos(x);\n}",
      "path": "src/test/java/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 44,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/math/analysis/SinFunction.java",
        "newPath": "src/test/java/org/apache/commons/math/analysis/SinFunction.java"
      }
    },
    "6a978ea29f680a87dfc380c760adf2e17b2e7c9c": {
      "type": "Yexceptionschange",
      "commitMessage": "-Changed UnivariateRealFunction.solve() to throw FunctionEvaluationException.\n-Changed UnivariateRealSolver.solve() to throw more specific exceptions:\n  ConvergenceException if max iterations is exceeded\n  IllegalArgumentException if endpoints do not (appear to) bracket a root\n  FunctionEvaluationException if an error occurs evaluating the function\n-Changed UnivariateRealSolver setters to throw IllegalArgumentException\n instead of MathException when input property values are out of range.\n-Changed AbstractContinuousDistribution.inverseCumulativeProbability to handle\n corner cases where solution equals domain lower or upper bound.\n-Improved javadoc.\n-Improved test coverage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/17/04, 2:19 PM",
      "commitName": "6a978ea29f680a87dfc380c760adf2e17b2e7c9c",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "4/8/04, 2:19 PM",
      "commitNameOld": "402160b94a9ffd5f400d8e5717badcaa2fd3c5af",
      "commitAuthorOld": "Brent Worden",
      "daysBetweenCommits": 100.0,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) throws FunctionEvaluationException {\n    return Math.cos(x);\n}",
      "path": "src/test/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 43,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n-public double value(double x) throws MathException {\n+public double value(double x) throws FunctionEvaluationException {\n     return Math.cos(x);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[MathException]",
        "newValue": "[FunctionEvaluationException]"
      }
    },
    "402160b94a9ffd5f400d8e5717badcaa2fd3c5af": {
      "type": "Ybodychange",
      "commitMessage": "Newton\u0027s method using the new differentiable interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141161 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/8/04, 2:19 PM",
      "commitName": "402160b94a9ffd5f400d8e5717badcaa2fd3c5af",
      "commitAuthor": "Brent Worden",
      "commitDateOld": "2/21/04, 1:35 PM",
      "commitNameOld": "5d66d93e57e142760603024ce1429f2d229a6c8f",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 46.99,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) throws MathException {\n    return Math.cos(x);\n}",
      "path": "src/test/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 43,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,3 +1,3 @@\n public double value(double x) throws MathException {\n-    return Math.sin(x);\n+    return Math.cos(x);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0a904461932f2c0455611e77ec6a8d8aced2980b": {
      "type": "Yintroduced",
      "commitMessage": "Attempting to recover last revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/03, 2:25 PM",
      "commitName": "0a904461932f2c0455611e77ec6a8d8aced2980b",
      "commitAuthor": "Mark R. Diggory",
      "diff": "@@ -0,0 +1,3 @@\n+public double value(double x) throws MathException {\n+    return Math.sin(x);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double value(double x) throws MathException {\n    return Math.sin(x);\n}",
      "path": "src/test/org/apache/commons/math/analysis/SinFunction.java",
      "functionStartLine": 73,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}