{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataFlowAnalysis.java",
  "functionName": "flow",
  "functionId": "$flow___node-DiGraphNode__N,Branch__",
  "sourceFilePath": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 442,
  "functionEndLine": 453,
  "numCommitsSeen": 17,
  "timeTaken": 738,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+@Override\n+protected final boolean flow(DiGraphNode\u003cN, Branch\u003e node) {\n+    BranchedFlowState\u003cL\u003e state \u003d node.getAnnotation();\n+    List\u003cL\u003e outBefore \u003d state.out;\n+    state.out \u003d branchedFlowThrough(node.getValue(), state.in);\n+    Preconditions.checkState(outBefore.size() \u003d\u003d state.out.size());\n+    for (int i \u003d 0; i \u003c outBefore.size(); i++) {\n+        if (!outBefore.get(i).equals(state.out.get(i))) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nprotected final boolean flow(DiGraphNode\u003cN, Branch\u003e node) {\n    BranchedFlowState\u003cL\u003e state \u003d node.getAnnotation();\n    List\u003cL\u003e outBefore \u003d state.out;\n    state.out \u003d branchedFlowThrough(node.getValue(), state.in);\n    Preconditions.checkState(outBefore.size() \u003d\u003d state.out.size());\n    for (int i \u003d 0; i \u003c outBefore.size(); i++) {\n        if (!outBefore.get(i).equals(state.out.get(i))) {\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
      "functionStartLine": 506,
      "functionName": "flow",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}