{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArrowType.java",
  "functionName": "resolveInternal",
  "functionId": "resolveInternal___t-ErrorReporter__scope-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/ArrowType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 232,
  "functionEndLine": 241,
  "numCommitsSeen": 13,
  "timeTaken": 2402,
  "changeHistory": [
    "bca9abb0e3062d373fe52c0e8340337588c05708"
  ],
  "changeHistoryShort": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Yintroduced",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,10 @@\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n+    returnType \u003d safeResolve(returnType, t, scope);\n+    if (parameters !\u003d null) {\n+        for (Node paramNode \u003d parameters.getFirstChild(); paramNode !\u003d null; paramNode \u003d paramNode.getNext()) {\n+            paramNode.setJSType(paramNode.getJSType().resolve(t, scope));\n+        }\n+    }\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    returnType \u003d safeResolve(returnType, t, scope);\n    if (parameters !\u003d null) {\n        for (Node paramNode \u003d parameters.getFirstChild(); paramNode !\u003d null; paramNode \u003d paramNode.getNext()) {\n            paramNode.setJSType(paramNode.getJSType().resolve(t, scope));\n        }\n    }\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
      "functionStartLine": 234,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}