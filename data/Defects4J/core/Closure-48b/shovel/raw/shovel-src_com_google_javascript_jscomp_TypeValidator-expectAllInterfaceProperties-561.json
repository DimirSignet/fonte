{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeValidator.java",
  "functionName": "expectAllInterfaceProperties",
  "functionId": "expectAllInterfaceProperties___t-NodeTraversal__n-Node__type-FunctionType",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeValidator.java",
  "functionAnnotation": "",
  "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n",
  "functionStartLine": 561,
  "functionEndLine": 572,
  "numCommitsSeen": 44,
  "timeTaken": 1785,
  "changeHistory": [
    "09ed556367fbe81b3003881dfacad643939664c0",
    "0895c28861ee4a1969acc858f1a703ab11ddc64c",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "09ed556367fbe81b3003881dfacad643939664c0": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
    "0895c28861ee4a1969acc858f1a703ab11ddc64c": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "09ed556367fbe81b3003881dfacad643939664c0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "\nFixes issue 204\nAdd support for data members on interfaces\n\nR\u003djohnlenz,nicksantos,acleung\nDELTA\u003d211  (77 added, 125 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d692\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@829 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/28/11, 8:08 AM",
      "commitName": "09ed556367fbe81b3003881dfacad643939664c0",
      "commitAuthor": "zhuyi@google.com",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nFixes issue 204\nAdd support for data members on interfaces\n\nR\u003djohnlenz,nicksantos,acleung\nDELTA\u003d211  (77 added, 125 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d692\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@829 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/28/11, 8:08 AM",
          "commitName": "09ed556367fbe81b3003881dfacad643939664c0",
          "commitAuthor": "zhuyi@google.com",
          "commitDateOld": "1/26/11, 8:30 AM",
          "commitNameOld": "043a352c2e85815a90a1926d112902d924bab6c1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 32.98,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "actualSource": "void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                expectInterfaceProperty(t, n, instance, implemented, prop);\n            }\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/TypeValidator.java",
          "functionStartLine": 567,
          "functionName": "expectAllInterfaceProperties",
          "functionAnnotation": "",
          "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n",
          "diff": "@@ -1,19 +1,10 @@\n-void expectAllInterfacePropertiesImplemented(FunctionType type) {\n+void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n     ObjectType instance \u003d type.getInstanceType();\n     for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n         if (implemented.getImplicitPrototype() !\u003d null) {\n             for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n-                if (!instance.hasProperty(prop)) {\n-                    Node source \u003d type.getSource();\n-                    Preconditions.checkNotNull(source);\n-                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n-                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n-                    if (shouldReport) {\n-                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n-                    }\n-                    registerMismatch(instance, implemented);\n-                }\n+                expectInterfaceProperty(t, n, instance, implemented, prop);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "expectAllInterfacePropertiesImplemented",
            "newValue": "expectAllInterfaceProperties"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\nFixes issue 204\nAdd support for data members on interfaces\n\nR\u003djohnlenz,nicksantos,acleung\nDELTA\u003d211  (77 added, 125 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d692\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@829 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/28/11, 8:08 AM",
          "commitName": "09ed556367fbe81b3003881dfacad643939664c0",
          "commitAuthor": "zhuyi@google.com",
          "commitDateOld": "1/26/11, 8:30 AM",
          "commitNameOld": "043a352c2e85815a90a1926d112902d924bab6c1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 32.98,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "actualSource": "void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                expectInterfaceProperty(t, n, instance, implemented, prop);\n            }\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/TypeValidator.java",
          "functionStartLine": 567,
          "functionName": "expectAllInterfaceProperties",
          "functionAnnotation": "",
          "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n",
          "diff": "@@ -1,19 +1,10 @@\n-void expectAllInterfacePropertiesImplemented(FunctionType type) {\n+void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n     ObjectType instance \u003d type.getInstanceType();\n     for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n         if (implemented.getImplicitPrototype() !\u003d null) {\n             for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n-                if (!instance.hasProperty(prop)) {\n-                    Node source \u003d type.getSource();\n-                    Preconditions.checkNotNull(source);\n-                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n-                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n-                    if (shouldReport) {\n-                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n-                    }\n-                    registerMismatch(instance, implemented);\n-                }\n+                expectInterfaceProperty(t, n, instance, implemented, prop);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[type-FunctionType]",
            "newValue": "[t-NodeTraversal, n-Node, type-FunctionType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nFixes issue 204\nAdd support for data members on interfaces\n\nR\u003djohnlenz,nicksantos,acleung\nDELTA\u003d211  (77 added, 125 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d692\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@829 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/28/11, 8:08 AM",
          "commitName": "09ed556367fbe81b3003881dfacad643939664c0",
          "commitAuthor": "zhuyi@google.com",
          "commitDateOld": "1/26/11, 8:30 AM",
          "commitNameOld": "043a352c2e85815a90a1926d112902d924bab6c1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 32.98,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "actualSource": "void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                expectInterfaceProperty(t, n, instance, implemented, prop);\n            }\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/TypeValidator.java",
          "functionStartLine": 567,
          "functionName": "expectAllInterfaceProperties",
          "functionAnnotation": "",
          "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n",
          "diff": "@@ -1,19 +1,10 @@\n-void expectAllInterfacePropertiesImplemented(FunctionType type) {\n+void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n     ObjectType instance \u003d type.getInstanceType();\n     for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n         if (implemented.getImplicitPrototype() !\u003d null) {\n             for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n-                if (!instance.hasProperty(prop)) {\n-                    Node source \u003d type.getSource();\n-                    Preconditions.checkNotNull(source);\n-                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n-                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n-                    if (shouldReport) {\n-                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n-                    }\n-                    registerMismatch(instance, implemented);\n-                }\n+                expectInterfaceProperty(t, n, instance, implemented, prop);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nFixes issue 204\nAdd support for data members on interfaces\n\nR\u003djohnlenz,nicksantos,acleung\nDELTA\u003d211  (77 added, 125 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d692\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@829 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/28/11, 8:08 AM",
          "commitName": "09ed556367fbe81b3003881dfacad643939664c0",
          "commitAuthor": "zhuyi@google.com",
          "commitDateOld": "1/26/11, 8:30 AM",
          "commitNameOld": "043a352c2e85815a90a1926d112902d924bab6c1",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 32.98,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "actualSource": "void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                expectInterfaceProperty(t, n, instance, implemented, prop);\n            }\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/TypeValidator.java",
          "functionStartLine": 567,
          "functionName": "expectAllInterfaceProperties",
          "functionAnnotation": "",
          "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n",
          "diff": "@@ -1,19 +1,10 @@\n-void expectAllInterfacePropertiesImplemented(FunctionType type) {\n+void expectAllInterfaceProperties(NodeTraversal t, Node n, FunctionType type) {\n     ObjectType instance \u003d type.getInstanceType();\n     for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n         if (implemented.getImplicitPrototype() !\u003d null) {\n             for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n-                if (!instance.hasProperty(prop)) {\n-                    Node source \u003d type.getSource();\n-                    Preconditions.checkNotNull(source);\n-                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n-                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n-                    if (shouldReport) {\n-                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n-                    }\n-                    registerMismatch(instance, implemented);\n-                }\n+                expectInterfaceProperty(t, n, instance, implemented, prop);\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Expect that all properties on interfaces that this type implements are\nimplemented.\n",
            "newValue": "Expect that all properties on interfaces that this type implements are\nimplemented and correctly typed.\n"
          }
        }
      ]
    },
    "0895c28861ee4a1969acc858f1a703ab11ddc64c": {
      "type": "Ybodychange",
      "commitMessage": "\n\nChange on 2010/06/16 by johnlenz\n\n        Remove unused member variable.\n\n        R\u003dacleung\n        DELTA\u003d17  (0 added, 12 deleted, 5 changed)\n\nChange on 2010/06/16 by acleung\n\n        Make @notypecheck behaves like it is doing typechecking except for reporting errors.\n\n        R\u003djohnlenz\n        DELTA\u003d144  (89 added, 17 deleted, 38 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d28012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@245 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/17/10, 10:16 AM",
      "commitName": "0895c28861ee4a1969acc858f1a703ab11ddc64c",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/29/10, 7:04 AM",
      "commitNameOld": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 80.13,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "actualSource": "void expectAllInterfacePropertiesImplemented(FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                if (!instance.hasProperty(prop)) {\n                    Node source \u003d type.getSource();\n                    Preconditions.checkNotNull(source);\n                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n                    if (shouldReport) {\n                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n                    }\n                    registerMismatch(instance, implemented);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeValidator.java",
      "functionStartLine": 524,
      "functionName": "expectAllInterfacePropertiesImplemented",
      "functionAnnotation": "",
      "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented.\n",
      "diff": "@@ -1,17 +1,19 @@\n void expectAllInterfacePropertiesImplemented(FunctionType type) {\n     ObjectType instance \u003d type.getInstanceType();\n     for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n         if (implemented.getImplicitPrototype() !\u003d null) {\n             for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                 if (!instance.hasProperty(prop)) {\n                     Node source \u003d type.getSource();\n                     Preconditions.checkNotNull(source);\n                     String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n                     sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n-                    compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n+                    if (shouldReport) {\n+                        compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n+                    }\n                     registerMismatch(instance, implemented);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+void expectAllInterfacePropertiesImplemented(FunctionType type) {\n+    ObjectType instance \u003d type.getInstanceType();\n+    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n+        if (implemented.getImplicitPrototype() !\u003d null) {\n+            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n+                if (!instance.hasProperty(prop)) {\n+                    Node source \u003d type.getSource();\n+                    Preconditions.checkNotNull(source);\n+                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n+                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n+                    compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n+                    registerMismatch(instance, implemented);\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void expectAllInterfacePropertiesImplemented(FunctionType type) {\n    ObjectType instance \u003d type.getInstanceType();\n    for (ObjectType implemented : type.getAllImplementedInterfaces()) {\n        if (implemented.getImplicitPrototype() !\u003d null) {\n            for (String prop : implemented.getImplicitPrototype().getOwnPropertyNames()) {\n                if (!instance.hasProperty(prop)) {\n                    Node source \u003d type.getSource();\n                    Preconditions.checkNotNull(source);\n                    String sourceName \u003d (String) source.getProp(Node.SOURCENAME_PROP);\n                    sourceName \u003d sourceName \u003d\u003d null ? \"\" : sourceName;\n                    compiler.report(JSError.make(sourceName, source, INTERFACE_METHOD_NOT_IMPLEMENTED, prop, implemented.toString(), instance.toString()));\n                    registerMismatch(instance, implemented);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeValidator.java",
      "functionStartLine": 504,
      "functionName": "expectAllInterfacePropertiesImplemented",
      "functionAnnotation": "",
      "functionDoc": "Expect that all properties on interfaces that this type implements are\nimplemented.\n"
    }
  }
}