{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeInference.java",
  "functionName": "traverseCall",
  "functionId": "traverseCall___n-Node__scope-FlowScope",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeInference.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 740,
  "functionEndLine": 758,
  "numCommitsSeen": 63,
  "timeTaken": 4044,
  "changeHistory": [
    "bd9c7b620384fe5a98772729001ed56304459bc6",
    "01d1238a2a577d8988a72c29304a3283ca05a29a",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f",
    "643bd6436989e7a957ccefeed8ea5ecc8e84a748",
    "279196b617c5de1ade21110979b6b13d8eda6342",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "bd9c7b620384fe5a98772729001ed56304459bc6": "Ybodychange",
    "01d1238a2a577d8988a72c29304a3283ca05a29a": "Ybodychange",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": "Ybodychange",
    "643bd6436989e7a957ccefeed8ea5ecc8e84a748": "Ybodychange",
    "279196b617c5de1ade21110979b6b13d8eda6342": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd9c7b620384fe5a98772729001ed56304459bc6": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\ntry #2. the bugs in jstestc were fixed. this cl is exactly\nthe same as the original\n\nR\u003djohnlenz\nDELTA\u003d317  (79 added, 47 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3078\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1367 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 3:46 PM",
      "commitName": "bd9c7b620384fe5a98772729001ed56304459bc6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 10:40 AM",
      "commitNameOld": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType.isFunctionType()) {\n            FunctionType fnType \u003d functionType.toMaybeFunctionType();\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParameters(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    scope \u003d tightenTypesAfterAssertions(scope, n);\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 796,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n private FlowScope traverseCall(Node n, FlowScope scope) {\n     scope \u003d traverseChildren(n, scope);\n     Node left \u003d n.getFirstChild();\n     JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n     if (functionType !\u003d null) {\n-        if (functionType instanceof FunctionType) {\n-            FunctionType fnType \u003d (FunctionType) functionType;\n+        if (functionType.isFunctionType()) {\n+            FunctionType fnType \u003d functionType.toMaybeFunctionType();\n             n.setJSType(fnType.getReturnType());\n             updateTypeOfParameters(n, fnType);\n             updateTypeOfThisOnClosure(n, fnType);\n         } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n             n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n         }\n     }\n     scope \u003d tightenTypesAfterAssertions(scope, n);\n     return scope;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "01d1238a2a577d8988a72c29304a3283ca05a29a": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nbroke some tests\n\n*** Original change description ***\n\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nDELTA\u003d318  (48 added, 79 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3075\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1364 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 10:40 AM",
      "commitName": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 9:38 AM",
      "commitNameOld": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType instanceof FunctionType) {\n            FunctionType fnType \u003d (FunctionType) functionType;\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParameters(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    scope \u003d tightenTypesAfterAssertions(scope, n);\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 796,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n private FlowScope traverseCall(Node n, FlowScope scope) {\n     scope \u003d traverseChildren(n, scope);\n     Node left \u003d n.getFirstChild();\n     JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n     if (functionType !\u003d null) {\n-        if (functionType.isFunctionType()) {\n-            FunctionType fnType \u003d functionType.toMaybeFunctionType();\n+        if (functionType instanceof FunctionType) {\n+            FunctionType fnType \u003d (FunctionType) functionType;\n             n.setJSType(fnType.getReturnType());\n             updateTypeOfParameters(n, fnType);\n             updateTypeOfThisOnClosure(n, fnType);\n         } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n             n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n         }\n     }\n     scope \u003d tightenTypesAfterAssertions(scope, n);\n     return scope;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nR\u003djohnlenz\nDELTA\u003d318  (79 added, 48 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3074\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1363 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 9:38 AM",
      "commitName": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/17/11, 11:43 AM",
      "commitNameOld": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType.isFunctionType()) {\n            FunctionType fnType \u003d functionType.toMaybeFunctionType();\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParameters(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    scope \u003d tightenTypesAfterAssertions(scope, n);\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 796,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n private FlowScope traverseCall(Node n, FlowScope scope) {\n     scope \u003d traverseChildren(n, scope);\n     Node left \u003d n.getFirstChild();\n     JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n     if (functionType !\u003d null) {\n-        if (functionType instanceof FunctionType) {\n-            FunctionType fnType \u003d (FunctionType) functionType;\n+        if (functionType.isFunctionType()) {\n+            FunctionType fnType \u003d functionType.toMaybeFunctionType();\n             n.setJSType(fnType.getReturnType());\n             updateTypeOfParameters(n, fnType);\n             updateTypeOfThisOnClosure(n, fnType);\n         } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n             n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n         }\n     }\n     scope \u003d tightenTypesAfterAssertions(scope, n);\n     return scope;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "643bd6436989e7a957ccefeed8ea5ecc8e84a748": {
      "type": "Ybodychange",
      "commitMessage": "\nInfer properties of anonymous objects\n\nR\u003dzhuyi\nDELTA\u003d106  (98 added, 6 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1996\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1125 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/23/11, 8:37 AM",
      "commitName": "643bd6436989e7a957ccefeed8ea5ecc8e84a748",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/9/11, 4:32 PM",
      "commitNameOld": "de306603cfe39c64672539af78bb74a10439e1b3",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 13.67,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType instanceof FunctionType) {\n            FunctionType fnType \u003d (FunctionType) functionType;\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParameters(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    scope \u003d tightenTypesAfterAssertions(scope, n);\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 797,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n private FlowScope traverseCall(Node n, FlowScope scope) {\n     scope \u003d traverseChildren(n, scope);\n     Node left \u003d n.getFirstChild();\n     JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n     if (functionType !\u003d null) {\n         if (functionType instanceof FunctionType) {\n             FunctionType fnType \u003d (FunctionType) functionType;\n             n.setJSType(fnType.getReturnType());\n-            updateTypeOfParametersOnClosure(n, fnType);\n+            updateTypeOfParameters(n, fnType);\n             updateTypeOfThisOnClosure(n, fnType);\n         } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n             n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n         }\n     }\n     scope \u003d tightenTypesAfterAssertions(scope, n);\n     return scope;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "279196b617c5de1ade21110979b6b13d8eda6342": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/5/10, 4:36 PM",
      "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 12.21,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType instanceof FunctionType) {\n            FunctionType fnType \u003d (FunctionType) functionType;\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParametersOnClosure(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    scope \u003d tightenTypesAfterAssertions(scope, n);\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 777,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,17 @@\n private FlowScope traverseCall(Node n, FlowScope scope) {\n     scope \u003d traverseChildren(n, scope);\n     Node left \u003d n.getFirstChild();\n     JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n     if (functionType !\u003d null) {\n         if (functionType instanceof FunctionType) {\n             FunctionType fnType \u003d (FunctionType) functionType;\n             n.setJSType(fnType.getReturnType());\n             updateTypeOfParametersOnClosure(n, fnType);\n             updateTypeOfThisOnClosure(n, fnType);\n         } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n             n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n         }\n     }\n+    scope \u003d tightenTypesAfterAssertions(scope, n);\n     return scope;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,16 @@\n+private FlowScope traverseCall(Node n, FlowScope scope) {\n+    scope \u003d traverseChildren(n, scope);\n+    Node left \u003d n.getFirstChild();\n+    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n+    if (functionType !\u003d null) {\n+        if (functionType instanceof FunctionType) {\n+            FunctionType fnType \u003d (FunctionType) functionType;\n+            n.setJSType(fnType.getReturnType());\n+            updateTypeOfParametersOnClosure(n, fnType);\n+            updateTypeOfThisOnClosure(n, fnType);\n+        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n+            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n+        }\n+    }\n+    return scope;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private FlowScope traverseCall(Node n, FlowScope scope) {\n    scope \u003d traverseChildren(n, scope);\n    Node left \u003d n.getFirstChild();\n    JSType functionType \u003d getJSType(left).restrictByNotNullOrUndefined();\n    if (functionType !\u003d null) {\n        if (functionType instanceof FunctionType) {\n            FunctionType fnType \u003d (FunctionType) functionType;\n            n.setJSType(fnType.getReturnType());\n            updateTypeOfParametersOnClosure(n, fnType);\n            updateTypeOfThisOnClosure(n, fnType);\n        } else if (functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE))) {\n            n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE));\n        }\n    }\n    return scope;\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 715,
      "functionName": "traverseCall",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}