{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "transform",
  "functionId": "transform___node-AstNode",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 269,
  "functionEndLine": 277,
  "numCommitsSeen": 54,
  "timeTaken": 4261,
  "changeHistory": [
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6",
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719",
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8",
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6": "Ybodychange",
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719": "Ybodychange",
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8": "Ybodychange",
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6": {
      "type": "Ybodychange",
      "commitMessage": "\nPart 3, source name/input id split:\nChange the construction of JSDocInfo to allow the determination of\nthe source type (extern or not) without requiring the source to be looked\nup by name.\n\nR\u003dnicksantos\nDELTA\u003d99  (51 added, 21 deleted, 27 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2898\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1327 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/11, 9:23 AM",
      "commitName": "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.71,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transform(AstNode node) {\n    Node irNode \u003d justTransform(node);\n    JSDocInfo jsDocInfo \u003d handleJsDoc(node, irNode);\n    if (jsDocInfo !\u003d null) {\n        irNode.setJSDocInfo(jsDocInfo);\n    }\n    setSourceInfo(irNode, node);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 263,
      "functionName": "transform",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n private Node transform(AstNode node) {\n-    JSDocInfo jsDocInfo \u003d handleJsDoc(node);\n     Node irNode \u003d justTransform(node);\n+    JSDocInfo jsDocInfo \u003d handleJsDoc(node, irNode);\n     if (jsDocInfo !\u003d null) {\n         irNode.setJSDocInfo(jsDocInfo);\n     }\n     setSourceInfo(irNode, node);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719": {
      "type": "Ybodychange",
      "commitMessage": "\nEnable keywords as property names for ECMASCRIPT5\n\nR\u003dacleung\nDELTA\u003d106  (91 added, 1 deleted, 14 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d884\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@892 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/15/11, 3:57 PM",
      "commitName": "e4d80a3331cf7a9c1b7bdc9e2082d330381c3719",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "3/15/11, 12:33 PM",
      "commitNameOld": "653599e7c3922059a78958ea32b216ff9c42800e",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transform(AstNode node) {\n    JSDocInfo jsDocInfo \u003d handleJsDoc(node);\n    Node irNode \u003d justTransform(node);\n    if (jsDocInfo !\u003d null) {\n        irNode.setJSDocInfo(jsDocInfo);\n    }\n    setSourceInfo(irNode, node);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 235,
      "functionName": "transform",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,9 @@\n private Node transform(AstNode node) {\n     JSDocInfo jsDocInfo \u003d handleJsDoc(node);\n     Node irNode \u003d justTransform(node);\n     if (jsDocInfo !\u003d null) {\n         irNode.setJSDocInfo(jsDocInfo);\n     }\n-    if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n-        irNode.setLineno(irNode.getFirstChild().getLineno());\n-        irNode.setCharno(irNode.getFirstChild().getCharno());\n-    } else {\n-        if (irNode.getLineno() \u003d\u003d -1) {\n-            int lineno \u003d node.getLineno();\n-            irNode.setLineno(lineno);\n-            int charno \u003d position2charno(node.getAbsolutePosition());\n-            irNode.setCharno(charno);\n-        }\n-    }\n+    setSourceInfo(irNode, node);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8": {
      "type": "Ybodychange",
      "commitMessage": "\nClean up some record keeping of comments.  This doesn\u0027t appear to have\nhelped the parsing speed at all.\n\nR\u003dnicksantos\nDELTA\u003d134  (45 added, 66 deleted, 23 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d266012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@465 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/27/10, 1:21 PM",
      "commitName": "f95797059bdc7b6c4cfc4960081f0773ec85bbf8",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 14.09,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transform(AstNode node) {\n    JSDocInfo jsDocInfo \u003d handleJsDoc(node);\n    Node irNode \u003d justTransform(node);\n    if (jsDocInfo !\u003d null) {\n        irNode.setJSDocInfo(jsDocInfo);\n    }\n    if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n        irNode.setLineno(irNode.getFirstChild().getLineno());\n        irNode.setCharno(irNode.getFirstChild().getCharno());\n    } else {\n        if (irNode.getLineno() \u003d\u003d -1) {\n            int lineno \u003d node.getLineno();\n            irNode.setLineno(lineno);\n            int charno \u003d position2charno(node.getAbsolutePosition());\n            irNode.setCharno(charno);\n        }\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 204,
      "functionName": "transform",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,19 @@\n private Node transform(AstNode node) {\n-    String jsDoc \u003d node.getJsDoc();\n-    NodeWithJsDoc nodeWithJsDoc \u003d null;\n-    if (jsDoc !\u003d null) {\n-        nodeWithJsDoc \u003d new NodeWithJsDoc();\n-        nodesWithJsDoc.put(jsDoc, nodeWithJsDoc);\n-    }\n+    JSDocInfo jsDocInfo \u003d handleJsDoc(node);\n     Node irNode \u003d justTransform(node);\n-    if (nodeWithJsDoc !\u003d null) {\n-        nodeWithJsDoc.node \u003d irNode;\n+    if (jsDocInfo !\u003d null) {\n+        irNode.setJSDocInfo(jsDocInfo);\n     }\n     if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n         irNode.setLineno(irNode.getFirstChild().getLineno());\n         irNode.setCharno(irNode.getFirstChild().getCharno());\n     } else {\n         if (irNode.getLineno() \u003d\u003d -1) {\n             int lineno \u003d node.getLineno();\n             irNode.setLineno(lineno);\n             int charno \u003d position2charno(node.getAbsolutePosition());\n             irNode.setCharno(charno);\n         }\n     }\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": {
      "type": "Ybodychange",
      "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/10, 3:02 PM",
      "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "12/8/09, 3:50 PM",
      "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 63.97,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transform(AstNode node) {\n    String jsDoc \u003d node.getJsDoc();\n    NodeWithJsDoc nodeWithJsDoc \u003d null;\n    if (jsDoc !\u003d null) {\n        nodeWithJsDoc \u003d new NodeWithJsDoc();\n        nodesWithJsDoc.put(jsDoc, nodeWithJsDoc);\n    }\n    Node irNode \u003d justTransform(node);\n    if (nodeWithJsDoc !\u003d null) {\n        nodeWithJsDoc.node \u003d irNode;\n    }\n    if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n        irNode.setLineno(irNode.getFirstChild().getLineno());\n        irNode.setCharno(irNode.getFirstChild().getCharno());\n    } else {\n        if (irNode.getLineno() \u003d\u003d -1) {\n            int lineno \u003d node.getLineno();\n            irNode.setLineno(lineno);\n            int charno \u003d position2charno(node.getAbsolutePosition());\n            irNode.setCharno(charno);\n        }\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 177,
      "functionName": "transform",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,24 @@\n private Node transform(AstNode node) {\n+    String jsDoc \u003d node.getJsDoc();\n+    NodeWithJsDoc nodeWithJsDoc \u003d null;\n+    if (jsDoc !\u003d null) {\n+        nodeWithJsDoc \u003d new NodeWithJsDoc();\n+        nodesWithJsDoc.put(jsDoc, nodeWithJsDoc);\n+    }\n     Node irNode \u003d justTransform(node);\n+    if (nodeWithJsDoc !\u003d null) {\n+        nodeWithJsDoc.node \u003d irNode;\n+    }\n     if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n         irNode.setLineno(irNode.getFirstChild().getLineno());\n         irNode.setCharno(irNode.getFirstChild().getCharno());\n     } else {\n         if (irNode.getLineno() \u003d\u003d -1) {\n             int lineno \u003d node.getLineno();\n             irNode.setLineno(lineno);\n             int charno \u003d position2charno(node.getAbsolutePosition());\n             irNode.setCharno(charno);\n         }\n     }\n-    if (node.getJsDoc() !\u003d null) {\n-        irNode.putProp(TMP_JSDOC_PROP, node.getJsDoc());\n-    }\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+private Node transform(AstNode node) {\n+    Node irNode \u003d justTransform(node);\n+    if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n+        irNode.setLineno(irNode.getFirstChild().getLineno());\n+        irNode.setCharno(irNode.getFirstChild().getCharno());\n+    } else {\n+        if (irNode.getLineno() \u003d\u003d -1) {\n+            int lineno \u003d node.getLineno();\n+            irNode.setLineno(lineno);\n+            int charno \u003d position2charno(node.getAbsolutePosition());\n+            irNode.setCharno(charno);\n+        }\n+    }\n+    if (node.getJsDoc() !\u003d null) {\n+        irNode.putProp(TMP_JSDOC_PROP, node.getJsDoc());\n+    }\n+    return irNode;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node transform(AstNode node) {\n    Node irNode \u003d justTransform(node);\n    if (irNode.getType() \u003d\u003d Token.FUNCTION \u0026\u0026 irNode.getFirstChild().getLineno() !\u003d -1) {\n        irNode.setLineno(irNode.getFirstChild().getLineno());\n        irNode.setCharno(irNode.getFirstChild().getCharno());\n    } else {\n        if (irNode.getLineno() \u003d\u003d -1) {\n            int lineno \u003d node.getLineno();\n            irNode.setLineno(lineno);\n            int charno \u003d position2charno(node.getAbsolutePosition());\n            irNode.setCharno(charno);\n        }\n    }\n    if (node.getJsDoc() !\u003d null) {\n        irNode.putProp(TMP_JSDOC_PROP, node.getJsDoc());\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 155,
      "functionName": "transform",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}