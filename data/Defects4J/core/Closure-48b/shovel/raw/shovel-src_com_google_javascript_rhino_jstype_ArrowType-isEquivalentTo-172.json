{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArrowType.java",
  "functionName": "isEquivalentTo",
  "functionId": "isEquivalentTo___object-JSType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/ArrowType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 172,
  "functionEndLine": 182,
  "numCommitsSeen": 17,
  "timeTaken": 694,
  "changeHistory": [
    "2c90b14c19d8e4f920872e6a4340502cce1fb50c",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173",
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
    "97bbbffb65eda01aa9b38a5cec43a598afb39070",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "2c90b14c19d8e4f920872e6a4340502cce1fb50c": "Ybodychange",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d": "Ybodychange",
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2c90b14c19d8e4f920872e6a4340502cce1fb50c": {
      "type": "Ybodychange",
      "commitMessage": "\nTweak the definition of ArrowType equality.\nAs-is, it has false negatives, and the error message is really\ncryptic\n\nR\u003djohnlenz\nDELTA\u003d17  (15 added, 1 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d971\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@916 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/21/11, 11:01 AM",
      "commitName": "2c90b14c19d8e4f920872e6a4340502cce1fb50c",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/22/10, 6:29 AM",
      "commitNameOld": "83026babd3b768f508780b0c38c3cef2bb9242a5",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 150.19,
      "commitsBetweenForRepo": 393,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.isEquivalentTo(that.returnType)) {\n        return false;\n    }\n    return hasEqualParameters(that);\n}",
      "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
      "functionStartLine": 172,
      "functionName": "isEquivalentTo",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n @Override\n public boolean isEquivalentTo(JSType object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n+    if (!returnType.isEquivalentTo(that.returnType)) {\n         return false;\n     }\n     return hasEqualParameters(that);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/26/10, 8:26 AM",
      "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/18/10, 10:06 AM",
          "commitNameOld": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n        return false;\n    }\n    return hasEqualParameters(that);\n}",
          "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
          "functionStartLine": 174,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,11 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (!returnType.equals(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n+    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n         return false;\n     }\n     return hasEqualParameters(that);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "equals",
            "newValue": "isEquivalentTo"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/18/10, 10:06 AM",
          "commitNameOld": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n        return false;\n    }\n    return hasEqualParameters(that);\n}",
          "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
          "functionStartLine": 174,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,11 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (!returnType.equals(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n+    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n         return false;\n     }\n     return hasEqualParameters(that);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[object-Object]",
            "newValue": "[object-JSType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/18/10, 10:06 AM",
          "commitNameOld": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n        return false;\n    }\n    return hasEqualParameters(that);\n}",
          "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
          "functionStartLine": 174,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,11 +1,11 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (!returnType.equals(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n+    if (!returnType.isEquivalentTo(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n         return false;\n     }\n     return hasEqualParameters(that);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a9757e8c7d85f9ee9622b3e5352955ba3429733d": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/17 by robby\n\n        Check for non-alias locals in ScopedAliases.\n\n        R\u003dnick\n        DELTA\u003d26  (22 added, 3 deleted, 1 changed)\n\nChange on 2010/05/18 by nick\n\n        Add inferred return types.\n        Make the inf/sup relationship for function types a bit richer.\n        Make sure that the [call] pointer can never be null.\n\n        R\u003dandrew\n        DELTA\u003d192  (134 added, 30 deleted, 28 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@216 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/10, 10:06 AM",
      "commitName": "a9757e8c7d85f9ee9622b3e5352955ba3429733d",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/13/10, 10:46 AM",
      "commitNameOld": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 4.97,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean equals(Object object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.equals(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n        return false;\n    }\n    return hasEqualParameters(that);\n}",
      "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
      "functionStartLine": 174,
      "functionName": "equals",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,11 @@\n @Override\n public boolean equals(Object object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (!returnType.equals(that.returnType)) {\n+    if (!returnType.equals(that.returnType) || returnTypeInferred !\u003d that.returnTypeInferred) {\n         return false;\n     }\n-    Node thisParam \u003d parameters.getFirstChild();\n-    Node otherParam \u003d that.parameters.getFirstChild();\n-    while (thisParam !\u003d null \u0026\u0026 otherParam !\u003d null) {\n-        JSType thisParamType \u003d thisParam.getJSType();\n-        JSType otherParamType \u003d otherParam.getJSType();\n-        if (thisParamType !\u003d null) {\n-            if (otherParamType !\u003d null \u0026\u0026 !thisParamType.equals(otherParamType)) {\n-                return false;\n-            }\n-        } else {\n-            if (otherParamType !\u003d null) {\n-                return false;\n-            }\n-        }\n-        thisParam \u003d thisParam.getNext();\n-        otherParam \u003d otherParam.getNext();\n-    }\n-    return thisParam \u003d\u003d otherParam;\n+    return hasEqualParameters(that);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/13/10, 10:46 AM",
      "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/26/10, 1:59 PM",
      "commitNameOld": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 106.82,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean equals(Object object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (!returnType.equals(that.returnType)) {\n        return false;\n    }\n    Node thisParam \u003d parameters.getFirstChild();\n    Node otherParam \u003d that.parameters.getFirstChild();\n    while (thisParam !\u003d null \u0026\u0026 otherParam !\u003d null) {\n        JSType thisParamType \u003d thisParam.getJSType();\n        JSType otherParamType \u003d otherParam.getJSType();\n        if (thisParamType !\u003d null) {\n            if (otherParamType !\u003d null \u0026\u0026 !thisParamType.equals(otherParamType)) {\n                return false;\n            }\n        } else {\n            if (otherParamType !\u003d null) {\n                return false;\n            }\n        }\n        thisParam \u003d thisParam.getNext();\n        otherParam \u003d otherParam.getNext();\n    }\n    return thisParam \u003d\u003d otherParam;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
      "functionStartLine": 136,
      "functionName": "equals",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,42 +1,28 @@\n @Override\n public boolean equals(Object object) {\n     if (!(object instanceof ArrowType)) {\n         return false;\n     }\n     ArrowType that \u003d (ArrowType) object;\n-    if (returnType \u003d\u003d null) {\n-        if (that.returnType !\u003d null) {\n-            return false;\n-        }\n-    } else {\n-        if (that.returnType \u003d\u003d null) {\n-            return false;\n-        }\n-        if (!returnType.equals(that.returnType)) {\n-            return false;\n-        }\n-    }\n-    if (parameters \u003d\u003d null) {\n-        return that.parameters \u003d\u003d null;\n-    } else if (that.parameters \u003d\u003d null) {\n+    if (!returnType.equals(that.returnType)) {\n         return false;\n     }\n     Node thisParam \u003d parameters.getFirstChild();\n     Node otherParam \u003d that.parameters.getFirstChild();\n     while (thisParam !\u003d null \u0026\u0026 otherParam !\u003d null) {\n         JSType thisParamType \u003d thisParam.getJSType();\n         JSType otherParamType \u003d otherParam.getJSType();\n         if (thisParamType !\u003d null) {\n             if (otherParamType !\u003d null \u0026\u0026 !thisParamType.equals(otherParamType)) {\n                 return false;\n             }\n         } else {\n             if (otherParamType !\u003d null) {\n                 return false;\n             }\n         }\n         thisParam \u003d thisParam.getNext();\n         otherParam \u003d otherParam.getNext();\n     }\n     return thisParam \u003d\u003d otherParam;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,42 @@\n+@Override\n+public boolean equals(Object object) {\n+    if (!(object instanceof ArrowType)) {\n+        return false;\n+    }\n+    ArrowType that \u003d (ArrowType) object;\n+    if (returnType \u003d\u003d null) {\n+        if (that.returnType !\u003d null) {\n+            return false;\n+        }\n+    } else {\n+        if (that.returnType \u003d\u003d null) {\n+            return false;\n+        }\n+        if (!returnType.equals(that.returnType)) {\n+            return false;\n+        }\n+    }\n+    if (parameters \u003d\u003d null) {\n+        return that.parameters \u003d\u003d null;\n+    } else if (that.parameters \u003d\u003d null) {\n+        return false;\n+    }\n+    Node thisParam \u003d parameters.getFirstChild();\n+    Node otherParam \u003d that.parameters.getFirstChild();\n+    while (thisParam !\u003d null \u0026\u0026 otherParam !\u003d null) {\n+        JSType thisParamType \u003d thisParam.getJSType();\n+        JSType otherParamType \u003d otherParam.getJSType();\n+        if (thisParamType !\u003d null) {\n+            if (otherParamType !\u003d null \u0026\u0026 !thisParamType.equals(otherParamType)) {\n+                return false;\n+            }\n+        } else {\n+            if (otherParamType !\u003d null) {\n+                return false;\n+            }\n+        }\n+        thisParam \u003d thisParam.getNext();\n+        otherParam \u003d otherParam.getNext();\n+    }\n+    return thisParam \u003d\u003d otherParam;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean equals(Object object) {\n    if (!(object instanceof ArrowType)) {\n        return false;\n    }\n    ArrowType that \u003d (ArrowType) object;\n    if (returnType \u003d\u003d null) {\n        if (that.returnType !\u003d null) {\n            return false;\n        }\n    } else {\n        if (that.returnType \u003d\u003d null) {\n            return false;\n        }\n        if (!returnType.equals(that.returnType)) {\n            return false;\n        }\n    }\n    if (parameters \u003d\u003d null) {\n        return that.parameters \u003d\u003d null;\n    } else if (that.parameters \u003d\u003d null) {\n        return false;\n    }\n    Node thisParam \u003d parameters.getFirstChild();\n    Node otherParam \u003d that.parameters.getFirstChild();\n    while (thisParam !\u003d null \u0026\u0026 otherParam !\u003d null) {\n        JSType thisParamType \u003d thisParam.getJSType();\n        JSType otherParamType \u003d otherParam.getJSType();\n        if (thisParamType !\u003d null) {\n            if (otherParamType !\u003d null \u0026\u0026 !thisParamType.equals(otherParamType)) {\n                return false;\n            }\n        } else {\n            if (otherParamType !\u003d null) {\n                return false;\n            }\n        }\n        thisParam \u003d thisParam.getNext();\n        otherParam \u003d otherParam.getNext();\n    }\n    return thisParam \u003d\u003d otherParam;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ArrowType.java",
      "functionStartLine": 141,
      "functionName": "equals",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}