{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsDocInfoParser.java",
  "functionName": "checkExtendedTypes",
  "functionId": "checkExtendedTypes___extendedTypes-List__ExtendedTypeInfo__",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 942,
  "functionEndLine": 957,
  "numCommitsSeen": 53,
  "timeTaken": 2819,
  "changeHistory": [
    "c438dfd06013f82daa648d23b864842ff1881695",
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
    "cc628d6050107e3dfcc7bd2748708c12ef15b4e0"
  ],
  "changeHistoryShort": {
    "c438dfd06013f82daa648d23b864842ff1881695": "Ybodychange",
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24": "Ybodychange",
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb": "Ybodychange",
    "cc628d6050107e3dfcc7bd2748708c12ef15b4e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c438dfd06013f82daa648d23b864842ff1881695": {
      "type": "Ybodychange",
      "commitMessage": "\nImplement multiple extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d711  (635 added, 41 deleted, 35 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1917\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1105 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/16/11, 12:57 PM",
      "commitName": "c438dfd06013f82daa648d23b864842ff1881695",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "5/10/11, 2:34 PM",
      "commitNameOld": "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n    for (ExtendedTypeInfo typeInfo : extendedTypes) {\n        if (jsdocBuilder.isInterfaceRecorded()) {\n            if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n            }\n        } else {\n            if (!jsdocBuilder.recordBaseType(typeInfo.type)) {\n                parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 915,
      "functionName": "checkExtendedTypes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,13 @@\n private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n     for (ExtendedTypeInfo typeInfo : extendedTypes) {\n         if (jsdocBuilder.isInterfaceRecorded()) {\n             if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                 parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n             }\n-        }\n-        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n-            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n+        } else {\n+            if (!jsdocBuilder.recordBaseType(typeInfo.type)) {\n+                parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nGot multiple cases broken from different teams.\n\n*** Original change description ***\n\nImplement multi extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d635  (41 added, 560 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1813\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1077 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 2:34 PM",
      "commitName": "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "5/10/11, 1:26 PM",
      "commitNameOld": "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n    for (ExtendedTypeInfo typeInfo : extendedTypes) {\n        if (jsdocBuilder.isInterfaceRecorded()) {\n            if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n            }\n        }\n        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 915,
      "functionName": "checkExtendedTypes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,12 @@\n private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n     for (ExtendedTypeInfo typeInfo : extendedTypes) {\n         if (jsdocBuilder.isInterfaceRecorded()) {\n             if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                 parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n             }\n-        } else {\n-            if (!jsdocBuilder.recordBaseType(typeInfo.type)) {\n-                parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n-            }\n+        }\n+        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n+            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb": {
      "type": "Ybodychange",
      "commitMessage": "\nImplement multi extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d635  (560 added, 41 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1810\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1074 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 1:26 PM",
      "commitName": "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "4/19/11, 1:05 PM",
      "commitNameOld": "cc628d6050107e3dfcc7bd2748708c12ef15b4e0",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 21.02,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n    for (ExtendedTypeInfo typeInfo : extendedTypes) {\n        if (jsdocBuilder.isInterfaceRecorded()) {\n            if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n            }\n        } else {\n            if (!jsdocBuilder.recordBaseType(typeInfo.type)) {\n                parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 915,
      "functionName": "checkExtendedTypes",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,13 @@\n private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n     for (ExtendedTypeInfo typeInfo : extendedTypes) {\n         if (jsdocBuilder.isInterfaceRecorded()) {\n             if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                 parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n             }\n-        }\n-        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n-            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n+        } else {\n+            if (!jsdocBuilder.recordBaseType(typeInfo.type)) {\n+                parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n+            }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cc628d6050107e3dfcc7bd2748708c12ef15b4e0": {
      "type": "Yintroduced",
      "commitMessage": "\nAdd multiple extends annotations for interfaces in JsDoc\n\nR\u003dnicksantos,johnlenz\nDELTA\u003d151  (143 added, 1 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1505\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1022 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/19/11, 1:05 PM",
      "commitName": "cc628d6050107e3dfcc7bd2748708c12ef15b4e0",
      "commitAuthor": "zhuyi@google.com",
      "diff": "@@ -0,0 +1,12 @@\n+private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n+    for (ExtendedTypeInfo typeInfo : extendedTypes) {\n+        if (jsdocBuilder.isInterfaceRecorded()) {\n+            if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n+                parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n+            }\n+        }\n+        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n+            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void checkExtendedTypes(List\u003cExtendedTypeInfo\u003e extendedTypes) {\n    for (ExtendedTypeInfo typeInfo : extendedTypes) {\n        if (jsdocBuilder.isInterfaceRecorded()) {\n            if (!jsdocBuilder.recordExtendedInterface(typeInfo.type)) {\n                parser.addParserWarning(\"msg.jsdoc.extends.duplicate\", typeInfo.lineno, typeInfo.charno);\n            }\n        }\n        if (!jsdocBuilder.recordBaseType(typeInfo.type) \u0026\u0026 !jsdocBuilder.isInterfaceRecorded()) {\n            parser.addTypeWarning(\"msg.jsdoc.incompat.type\", typeInfo.lineno, typeInfo.charno);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 915,
      "functionName": "checkExtendedTypes",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}