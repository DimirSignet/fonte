{
  "origin": "codeshovel",
  "repositoryName": "Closure-48b",
  "repositoryPath": "/tmp/Closure-48b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeTraversal.java",
  "functionName": "traverseRoots",
  "functionId": "traverseRoots___roots-List__Node__",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeTraversal.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 288,
  "functionEndLine": 311,
  "numCommitsSeen": 20,
  "timeTaken": 952,
  "changeHistory": [
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": {
      "type": "Ybodychange",
      "commitMessage": "\nPart 4, source name/input id split: Require an InputId to lookup a CompilerInput.\n\nR\u003dnicksantos\nDELTA\u003d266  (106 added, 20 deleted, 140 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2899\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1328 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/11, 11:43 AM",
      "commitName": "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.81,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public void traverseRoots(List\u003cNode\u003e roots) {\n    if (roots.isEmpty()) {\n        return;\n    }\n    try {\n        Node scopeRoot \u003d roots.get(0).getParent();\n        Preconditions.checkState(scopeRoot !\u003d null);\n        inputId \u003d NodeUtil.getInputId(scopeRoot);\n        sourceName \u003d \"\";\n        curNode \u003d scopeRoot;\n        pushScope(scopeRoot);\n        for (Node root : roots) {\n            Preconditions.checkState(root.getParent() \u003d\u003d scopeRoot);\n            traverseBranch(root, scopeRoot);\n        }\n        popScope();\n    } catch (Exception unexpectedException) {\n        throwUnexpectedException(unexpectedException);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 270,
      "functionName": "traverseRoots",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,20 @@\n public void traverseRoots(List\u003cNode\u003e roots) {\n     if (roots.isEmpty()) {\n         return;\n     }\n     try {\n         Node scopeRoot \u003d roots.get(0).getParent();\n         Preconditions.checkState(scopeRoot !\u003d null);\n+        inputId \u003d NodeUtil.getInputId(scopeRoot);\n         sourceName \u003d \"\";\n         curNode \u003d scopeRoot;\n         pushScope(scopeRoot);\n         for (Node root : roots) {\n             Preconditions.checkState(root.getParent() \u003d\u003d scopeRoot);\n             traverseBranch(root, scopeRoot);\n         }\n         popScope();\n     } catch (Exception unexpectedException) {\n         throwUnexpectedException(unexpectedException);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,19 @@\n+public void traverseRoots(List\u003cNode\u003e roots) {\n+    if (roots.isEmpty()) {\n+        return;\n+    }\n+    try {\n+        Node scopeRoot \u003d roots.get(0).getParent();\n+        Preconditions.checkState(scopeRoot !\u003d null);\n+        sourceName \u003d \"\";\n+        curNode \u003d scopeRoot;\n+        pushScope(scopeRoot);\n+        for (Node root : roots) {\n+            Preconditions.checkState(root.getParent() \u003d\u003d scopeRoot);\n+            traverseBranch(root, scopeRoot);\n+        }\n+        popScope();\n+    } catch (Exception unexpectedException) {\n+        throwUnexpectedException(unexpectedException);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void traverseRoots(List\u003cNode\u003e roots) {\n    if (roots.isEmpty()) {\n        return;\n    }\n    try {\n        Node scopeRoot \u003d roots.get(0).getParent();\n        Preconditions.checkState(scopeRoot !\u003d null);\n        sourceName \u003d \"\";\n        curNode \u003d scopeRoot;\n        pushScope(scopeRoot);\n        for (Node root : roots) {\n            Preconditions.checkState(root.getParent() \u003d\u003d scopeRoot);\n            traverseBranch(root, scopeRoot);\n        }\n        popScope();\n    } catch (Exception unexpectedException) {\n        throwUnexpectedException(unexpectedException);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 256,
      "functionName": "traverseRoots",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}