{
  "origin": "codeshovel",
  "repositoryName": "Math-25b",
  "repositoryPath": "/tmp/Math-25b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HarmonicFitter.java",
  "functionName": "sortObservations",
  "functionId": "$sortObservations",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
  "functionAnnotation": "",
  "functionDoc": "Sort the observations with respect to the abscissa.\n",
  "functionStartLine": 223,
  "functionEndLine": 245,
  "numCommitsSeen": 22,
  "timeTaken": 12535,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b67bf47e45fa177c25fd5c445011d868a5383a6d",
    "6033d14c1fc1b408e4f20e0a7f2a7b52ce81ca44",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "8fd1834813ca42fa107b783fd57672f4f5bc9091"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b67bf47e45fa177c25fd5c445011d868a5383a6d": "Ymultichange(Ymovefromfile,Yformatchange)",
    "6033d14c1fc1b408e4f20e0a7f2a7b52ce81ca44": "Ybodychange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "8fd1834813ca42fa107b783fd57672f4f5bc9091": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
      "functionStartLine": 223,
      "functionName": "sortObservations",
      "functionAnnotation": "",
      "functionDoc": "Sort the observations with respect to the abscissa.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "newPath": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "oldMethodName": "sortObservations",
        "newMethodName": "sortObservations"
      }
    },
    "b67bf47e45fa177c25fd5c445011d868a5383a6d": {
      "type": "Ymultichange(Ymovefromfile,Yformatchange)",
      "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/22/11, 8:13 AM",
      "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 223,
          "functionName": "sortObservations",
          "functionAnnotation": "",
          "functionDoc": "Sort the observations with respect to the abscissa.\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
            "newPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
            "oldMethodName": "sortObservations",
            "newMethodName": "sortObservations"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 223,
          "functionName": "sortObservations",
          "functionAnnotation": "",
          "functionDoc": "Sort the observations with respect to the abscissa.\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "6033d14c1fc1b408e4f20e0a7f2a7b52ce81ca44": {
      "type": "Ybodychange",
      "commitMessage": "Fixed an awkward statement that triggered a false positive warning\nJIRA: MATH-467\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1056035 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/6/11, 11:43 AM",
      "commitName": "6033d14c1fc1b408e4f20e0a7f2a7b52ce81ca44",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/29/10, 3:04 PM",
      "commitNameOld": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 129.9,
      "commitsBetweenForRepo": 218,
      "commitsBetweenForFile": 1,
      "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
      "functionStartLine": 163,
      "functionName": "sortObservations",
      "functionAnnotation": "",
      "functionDoc": "Sort the observations with respect to the abscissa.\n",
      "diff": "@@ -1,21 +1,19 @@\n private void sortObservations() {\n     WeightedObservedPoint curr \u003d observations[0];\n     for (int j \u003d 1; j \u003c observations.length; ++j) {\n         WeightedObservedPoint prec \u003d curr;\n         curr \u003d observations[j];\n         if (curr.getX() \u003c prec.getX()) {\n             int i \u003d j - 1;\n             WeightedObservedPoint mI \u003d observations[i];\n             while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                 observations[i + 1] \u003d mI;\n                 if (i-- !\u003d 0) {\n                     mI \u003d observations[i];\n-                } else {\n-                    mI \u003d null;\n                 }\n             }\n             observations[i + 1] \u003d curr;\n             curr \u003d observations[j];\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                } else {\n                    mI \u003d null;\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
      "functionStartLine": 161,
      "functionName": "sortObservations",
      "functionAnnotation": "",
      "functionDoc": "Sort the observations with respect to the abscissa.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java"
      }
    },
    "8fd1834813ca42fa107b783fd57672f4f5bc9091": {
      "type": "Yintroduced",
      "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/19/09, 5:36 AM",
      "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,21 @@\n+private void sortObservations() {\n+    WeightedObservedPoint curr \u003d observations[0];\n+    for (int j \u003d 1; j \u003c observations.length; ++j) {\n+        WeightedObservedPoint prec \u003d curr;\n+        curr \u003d observations[j];\n+        if (curr.getX() \u003c prec.getX()) {\n+            int i \u003d j - 1;\n+            WeightedObservedPoint mI \u003d observations[i];\n+            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n+                observations[i + 1] \u003d mI;\n+                if (i-- !\u003d 0) {\n+                    mI \u003d observations[i];\n+                } else {\n+                    mI \u003d null;\n+                }\n+            }\n+            observations[i + 1] \u003d curr;\n+            curr \u003d observations[j];\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void sortObservations() {\n    WeightedObservedPoint curr \u003d observations[0];\n    for (int j \u003d 1; j \u003c observations.length; ++j) {\n        WeightedObservedPoint prec \u003d curr;\n        curr \u003d observations[j];\n        if (curr.getX() \u003c prec.getX()) {\n            int i \u003d j - 1;\n            WeightedObservedPoint mI \u003d observations[i];\n            while ((i \u003e\u003d 0) \u0026\u0026 (curr.getX() \u003c mI.getX())) {\n                observations[i + 1] \u003d mI;\n                if (i-- !\u003d 0) {\n                    mI \u003d observations[i];\n                } else {\n                    mI \u003d null;\n                }\n            }\n            observations[i + 1] \u003d curr;\n            curr \u003d observations[j];\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
      "functionStartLine": 161,
      "functionName": "sortObservations",
      "functionAnnotation": "",
      "functionDoc": "Sort the observations with respect to the abscissa.\n"
    }
  }
}