{
  "origin": "codeshovel",
  "repositoryName": "Math-25b",
  "repositoryPath": "/tmp/Math-25b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HarmonicFitter.java",
  "functionName": "guess",
  "functionId": "$guess",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
  "functionAnnotation": "",
  "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
  "functionStartLine": 213,
  "functionEndLine": 218,
  "numCommitsSeen": 25,
  "timeTaken": 12496,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b67bf47e45fa177c25fd5c445011d868a5383a6d",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "8fd1834813ca42fa107b783fd57672f4f5bc9091",
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b67bf47e45fa177c25fd5c445011d868a5383a6d": "Ymultichange(Ymovefromfile,Yreturntypechange,Yexceptionschange,Ybodychange,Ydocchange)",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "8fd1834813ca42fa107b783fd57672f4f5bc9091": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Ydocchange)",
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
      "path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
      "functionStartLine": 213,
      "functionName": "guess",
      "functionAnnotation": "",
      "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "newPath": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "oldMethodName": "guess",
        "newMethodName": "guess"
      }
    },
    "b67bf47e45fa177c25fd5c445011d868a5383a6d": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/22/11, 8:13 AM",
      "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 213,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "@@ -1,5 +1,6 @@\n-public void guess() throws OptimizationException {\n+public double[] guess() {\n     sortObservations();\n     guessAOmega();\n     guessPhi();\n+    return new double[] { a, omega, phi };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
            "newPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
            "oldMethodName": "guess",
            "newMethodName": "guess"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 213,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "@@ -1,5 +1,6 @@\n-public void guess() throws OptimizationException {\n+public double[] guess() {\n     sortObservations();\n     guessAOmega();\n     guessPhi();\n+    return new double[] { a, omega, phi };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "double[]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 213,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "@@ -1,5 +1,6 @@\n-public void guess() throws OptimizationException {\n+public double[] guess() {\n     sortObservations();\n     guessAOmega();\n     guessPhi();\n+    return new double[] { a, omega, phi };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[OptimizationException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 213,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "@@ -1,5 +1,6 @@\n-public void guess() throws OptimizationException {\n+public double[] guess() {\n     sortObservations();\n     guessAOmega();\n     guessPhi();\n+    return new double[] { a, omega, phi };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-517\n\"HarmonicFitter\" refactored to include the functionality of\n\"HarmonicCoefficientsGuesser\" as an inner class, and now using\n\"HarmonicOscillator\" (from package \"analysis.function\") instead of\n\"HarmonicFunction\" (from package \"optimization.fitting\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1073378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/22/11, 8:13 AM",
          "commitName": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/22/11, 7:34 AM",
          "commitNameOld": "b8a0427d9e70b2da0e88edebcb76371bc5cd3c84",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double[] guess() {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n    return new double[] { a, omega, phi };\n}",
          "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
          "functionStartLine": 213,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "@@ -1,5 +1,6 @@\n-public void guess() throws OptimizationException {\n+public double[] guess() {\n     sortObservations();\n     guessAOmega();\n     guessPhi();\n+    return new double[] { a, omega, phi };\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
            "newValue": "Estimate a first guess of the coefficients.\n\n@return the guessed coefficients, in the following order:\n\u003cul\u003e\n \u003cli\u003eAmplitude\u003c/li\u003e\n \u003cli\u003eAngular frequency\u003c/li\u003e\n \u003cli\u003ePhase\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        }
      ]
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void guess() throws OptimizationException {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
      "functionStartLine": 153,
      "functionName": "guess",
      "functionAnnotation": "",
      "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java"
      }
    },
    "8fd1834813ca42fa107b783fd57672f4f5bc9091": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Ydocchange)",
      "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/19/09, 5:36 AM",
      "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/19/09, 5:36 AM",
          "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/19/09, 5:33 AM",
          "commitNameOld": "2f65d00640bf4ba57dd24f390c489b131480cc2f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void guess() throws OptimizationException {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n}",
          "path": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
          "functionStartLine": 153,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
          "diff": "@@ -1,4 +1,5 @@\n-public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n+public void guess() throws OptimizationException {\n+    sortObservations();\n     guessAOmega();\n     guessPhi();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/mantissa/src/org/spaceroots/mantissa/fitting/HarmonicCoefficientsGuesser.java",
            "newPath": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
            "oldMethodName": "guess",
            "newMethodName": "guess"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/19/09, 5:36 AM",
          "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/19/09, 5:33 AM",
          "commitNameOld": "2f65d00640bf4ba57dd24f390c489b131480cc2f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void guess() throws OptimizationException {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n}",
          "path": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
          "functionStartLine": 153,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
          "diff": "@@ -1,4 +1,5 @@\n-public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n+public void guess() throws OptimizationException {\n+    sortObservations();\n     guessAOmega();\n     guessPhi();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[ExhaustedSampleException, FunctionException, EstimationException]",
            "newValue": "[OptimizationException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/19/09, 5:36 AM",
          "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/19/09, 5:33 AM",
          "commitNameOld": "2f65d00640bf4ba57dd24f390c489b131480cc2f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void guess() throws OptimizationException {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n}",
          "path": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
          "functionStartLine": 153,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
          "diff": "@@ -1,4 +1,5 @@\n-public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n+public void guess() throws OptimizationException {\n+    sortObservations();\n     guessAOmega();\n     guessPhi();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "merged curve fitting from mantissa into commons-math\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786479 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/19/09, 5:36 AM",
          "commitName": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "6/19/09, 5:33 AM",
          "commitNameOld": "2f65d00640bf4ba57dd24f390c489b131480cc2f",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void guess() throws OptimizationException {\n    sortObservations();\n    guessAOmega();\n    guessPhi();\n}",
          "path": "src/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java",
          "functionStartLine": 153,
          "functionName": "guess",
          "functionAnnotation": "",
          "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
          "diff": "@@ -1,4 +1,5 @@\n-public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n+public void guess() throws OptimizationException {\n+    sortObservations();\n     guessAOmega();\n     guessPhi();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Estimate a first guess of the coefficients.\n\n@exception ExhaustedSampleException if the sample is exhausted.\n@exception FunctionException if the integrator throws one.\n@exception EstimationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n",
            "newValue": "Estimate a first guess of the coefficients.\n\n@exception OptimizationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n"
          }
        }
      ]
    },
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@476930 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/19/06, 1:36 PM",
      "commitName": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
      "commitAuthor": "Phil Steitz",
      "diff": "@@ -0,0 +1,4 @@\n+public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n+    guessAOmega();\n+    guessPhi();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void guess() throws ExhaustedSampleException, FunctionException, EstimationException {\n    guessAOmega();\n    guessPhi();\n}",
      "path": "src/mantissa/src/org/spaceroots/mantissa/fitting/HarmonicCoefficientsGuesser.java",
      "functionStartLine": 156,
      "functionName": "guess",
      "functionAnnotation": "",
      "functionDoc": "Estimate a first guess of the coefficients.\n\n@exception ExhaustedSampleException if the sample is exhausted.\n@exception FunctionException if the integrator throws one.\n@exception EstimationException if the sample is too short or if\nthe first guess cannot be computed (when the elements under the\nsquare roots are negative).\n"
    }
  }
}