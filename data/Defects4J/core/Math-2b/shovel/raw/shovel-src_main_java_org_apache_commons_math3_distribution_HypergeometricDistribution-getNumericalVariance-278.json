{
  "origin": "codeshovel",
  "repositoryName": "Math-2b",
  "repositoryPath": "/tmp/Math-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HypergeometricDistribution.java",
  "functionName": "getNumericalVariance",
  "functionId": "getNumericalVariance",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
  "functionAnnotation": "",
  "functionDoc": "@inheritDoc}\n\nFor population size {@code N}, number of successes {@code m}, and sample\nsize {@code n}, the variance is\n{@code [n * m * (N - n) * (N - m)] / [N^2 * (N - 1)]}.\n",
  "functionStartLine": 278,
  "functionEndLine": 284,
  "numCommitsSeen": 28,
  "timeTaken": 13105,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b7c6f9c6616bf63d910b00796169b288c0af1b42",
    "bdf6eb6b804f623b5e52813ce59b1bd2fd5eb91e",
    "5b07ef0c551e36a188c92c050963735dd0ccbf7d",
    "681ce013786d7db57b116865394c826e802bd8f4",
    "0e86e9253ee4b04e622ee0e63e891199cc00ad98",
    "d43bb18d7e691cbd9d387ff1683ee62f057def27"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymultichange(Ymovefromfile,Ydocchange)",
    "b7c6f9c6616bf63d910b00796169b288c0af1b42": "Ymultichange(Ymovefromfile,Ydocchange,Yformatchange)",
    "bdf6eb6b804f623b5e52813ce59b1bd2fd5eb91e": "Ydocchange",
    "5b07ef0c551e36a188c92c050963735dd0ccbf7d": "Yannotationchange",
    "681ce013786d7db57b116865394c826e802bd8f4": "Yannotationchange",
    "0e86e9253ee4b04e622ee0e63e891199cc00ad98": "Ymultichange(Ydocchange,Yformatchange)",
    "d43bb18d7e691cbd9d387ff1683ee62f057def27": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymultichange(Ymovefromfile,Ydocchange)",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/14/12, 8:17 AM",
          "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/14/12, 6:34 AM",
          "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
          "functionStartLine": 281,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\nFor population size {@code N}, number of successes {@code m}, and sample\nsize {@code n}, the variance is\n{@code [n * m * (N - n) * (N - m)] / [N^2 * (N - 1)]}.\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java",
            "newPath": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
            "oldMethodName": "getNumericalVariance",
            "newMethodName": "getNumericalVariance"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/14/12, 8:17 AM",
          "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "2/14/12, 6:34 AM",
          "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
          "commitAuthorOld": "Gilles Sadowski",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
          "functionStartLine": 281,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\nFor population size {@code N}, number of successes {@code m}, and sample\nsize {@code n}, the variance is\n{@code [n * m * (N - n) * (N - m)] / [N^2 * (N - 1)]}.\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "@inheritDoc}\n\nFor number of elements {@code N} and exponent {@code s}, the mean is\n{@code (Hs2 / Hs) - (Hs1^2 / Hs^2)}, where\n\u003cul\u003e\n \u003cli\u003e{@code Hs2 \u003d generalizedHarmonic(N, s - 2)},\u003c/li\u003e\n \u003cli\u003e{@code Hs1 \u003d generalizedHarmonic(N, s - 1)},\u003c/li\u003e\n \u003cli\u003e{@code Hs \u003d generalizedHarmonic(N, s)}.\u003c/li\u003e\n\u003c/ul\u003e\n",
            "newValue": "@inheritDoc}\n\nFor population size {@code N}, number of successes {@code m}, and sample\nsize {@code n}, the variance is\n{@code [n * m * (N - n) * (N - m)] / [N^2 * (N - 1)]}.\n"
          }
        }
      ]
    },
    "b7c6f9c6616bf63d910b00796169b288c0af1b42": {
      "type": "Ymultichange(Ymovefromfile,Ydocchange,Yformatchange)",
      "commitMessage": "Patch contributed by Christian Winter (MATH-703).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1209836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/2/11, 10:17 PM",
      "commitName": "b7c6f9c6616bf63d910b00796169b288c0af1b42",
      "commitAuthor": "Sebastien Brisard",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Patch contributed by Christian Winter (MATH-703).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1209836 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/2/11, 10:17 PM",
          "commitName": "b7c6f9c6616bf63d910b00796169b288c0af1b42",
          "commitAuthor": "Sebastien Brisard",
          "commitDateOld": "12/1/11, 3:24 PM",
          "commitNameOld": "c8becc7c47963bcdc1578298846ad6fbf08f64ef",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java",
          "functionStartLine": 170,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\nFor number of elements {@code N} and exponent {@code s}, the mean is\n{@code (Hs2 / Hs) - (Hs1^2 / Hs^2)}, where\n\u003cul\u003e\n \u003cli\u003e{@code Hs2 \u003d generalizedHarmonic(N, s - 2)},\u003c/li\u003e\n \u003cli\u003e{@code Hs1 \u003d generalizedHarmonic(N, s - 1)},\u003c/li\u003e\n \u003cli\u003e{@code Hs \u003d generalizedHarmonic(N, s)}.\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
            "newPath": "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java",
            "oldMethodName": "getNumericalVariance",
            "newMethodName": "getNumericalVariance"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Patch contributed by Christian Winter (MATH-703).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1209836 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/2/11, 10:17 PM",
          "commitName": "b7c6f9c6616bf63d910b00796169b288c0af1b42",
          "commitAuthor": "Sebastien Brisard",
          "commitDateOld": "12/1/11, 3:24 PM",
          "commitNameOld": "c8becc7c47963bcdc1578298846ad6fbf08f64ef",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java",
          "functionStartLine": 170,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\nFor number of elements {@code N} and exponent {@code s}, the mean is\n{@code (Hs2 / Hs) - (Hs1^2 / Hs^2)}, where\n\u003cul\u003e\n \u003cli\u003e{@code Hs2 \u003d generalizedHarmonic(N, s - 2)},\u003c/li\u003e\n \u003cli\u003e{@code Hs1 \u003d generalizedHarmonic(N, s - 1)},\u003c/li\u003e\n \u003cli\u003e{@code Hs \u003d generalizedHarmonic(N, s)}.\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistribution}) or\nDouble.NaN if it\u0027s not defined\n",
            "newValue": "@inheritDoc}\n\nFor number of elements {@code N} and exponent {@code s}, the mean is\n{@code (Hs2 / Hs) - (Hs1^2 / Hs^2)}, where\n\u003cul\u003e\n \u003cli\u003e{@code Hs2 \u003d generalizedHarmonic(N, s - 2)},\u003c/li\u003e\n \u003cli\u003e{@code Hs1 \u003d generalizedHarmonic(N, s - 1)},\u003c/li\u003e\n \u003cli\u003e{@code Hs \u003d generalizedHarmonic(N, s)}.\u003c/li\u003e\n\u003c/ul\u003e\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Patch contributed by Christian Winter (MATH-703).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1209836 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/2/11, 10:17 PM",
          "commitName": "b7c6f9c6616bf63d910b00796169b288c0af1b42",
          "commitAuthor": "Sebastien Brisard",
          "commitDateOld": "12/1/11, 3:24 PM",
          "commitNameOld": "c8becc7c47963bcdc1578298846ad6fbf08f64ef",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java",
          "functionStartLine": 170,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "@inheritDoc}\n\nFor number of elements {@code N} and exponent {@code s}, the mean is\n{@code (Hs2 / Hs) - (Hs1^2 / Hs^2)}, where\n\u003cul\u003e\n \u003cli\u003e{@code Hs2 \u003d generalizedHarmonic(N, s - 2)},\u003c/li\u003e\n \u003cli\u003e{@code Hs1 \u003d generalizedHarmonic(N, s - 1)},\u003c/li\u003e\n \u003cli\u003e{@code Hs \u003d generalizedHarmonic(N, s)}.\u003c/li\u003e\n\u003c/ul\u003e\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "bdf6eb6b804f623b5e52813ce59b1bd2fd5eb91e": {
      "type": "Ydocchange",
      "commitMessage": "Merged PoissonDistribution and PoissonDistributionImpl (MATH-711).\nMerged TDistribution and TDistributionImpl (MATH-711).\nMerged WeibullDistribution and WeibullDistributionImpl (MATH-711).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1206434 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/26/11, 5:23 AM",
      "commitName": "bdf6eb6b804f623b5e52813ce59b1bd2fd5eb91e",
      "commitAuthor": "Sebastien Brisard",
      "commitDateOld": "11/10/11, 6:11 AM",
      "commitNameOld": "5b07ef0c551e36a188c92c050963735dd0ccbf7d",
      "commitAuthorOld": "Sebastien Brisard",
      "daysBetweenCommits": 15.97,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
      "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
      "functionStartLine": 109,
      "functionName": "getNumericalVariance",
      "functionAnnotation": "",
      "functionDoc": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistribution}) or\nDouble.NaN if it\u0027s not defined\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n",
        "newValue": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistribution}) or\nDouble.NaN if it\u0027s not defined\n"
      }
    },
    "5b07ef0c551e36a188c92c050963735dd0ccbf7d": {
      "type": "Yannotationchange",
      "commitMessage": "Removed illegal @Override.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200334 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/11, 6:11 AM",
      "commitName": "5b07ef0c551e36a188c92c050963735dd0ccbf7d",
      "commitAuthor": "Sebastien Brisard",
      "commitDateOld": "11/9/11, 10:21 PM",
      "commitNameOld": "681ce013786d7db57b116865394c826e802bd8f4",
      "commitAuthorOld": "Sebastien Brisard",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
      "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
      "functionStartLine": 109,
      "functionName": "getNumericalVariance",
      "functionAnnotation": "",
      "functionDoc": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n",
      "diff": "@@ -1,8 +1,7 @@\n-@Override\n public double getNumericalVariance() {\n     if (!numericalVarianceIsCalculated) {\n         numericalVariance \u003d calculateNumericalVariance();\n         numericalVarianceIsCalculated \u003d true;\n     }\n     return numericalVariance;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "@Override",
        "newValue": ""
      }
    },
    "681ce013786d7db57b116865394c826e802bd8f4": {
      "type": "Yannotationchange",
      "commitMessage": "Modifications to the hierarchy of distributions, according to MATH-692. Patch contributed by Christian Winter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200179 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/9/11, 10:21 PM",
      "commitName": "681ce013786d7db57b116865394c826e802bd8f4",
      "commitAuthor": "Sebastien Brisard",
      "commitDateOld": "10/2/11, 9:36 PM",
      "commitNameOld": "3f0b2ae731c85b184f2bc569aad5557c7bbfa822",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 38.07,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
      "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
      "functionStartLine": 112,
      "functionName": "getNumericalVariance",
      "functionAnnotation": "@Override",
      "functionDoc": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n",
      "diff": "@@ -1,7 +1,8 @@\n+@Override\n public double getNumericalVariance() {\n     if (!numericalVarianceIsCalculated) {\n         numericalVariance \u003d calculateNumericalVariance();\n         numericalVarianceIsCalculated \u003d true;\n     }\n     return numericalVariance;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "0e86e9253ee4b04e622ee0e63e891199cc00ad98": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Removed trailing spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1060449 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/18/11, 8:24 AM",
      "commitName": "0e86e9253ee4b04e622ee0e63e891199cc00ad98",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Removed trailing spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1060449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/18/11, 8:24 AM",
          "commitName": "0e86e9253ee4b04e622ee0e63e891199cc00ad98",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "12/31/10, 6:41 PM",
          "commitNameOld": "18a2e9030f08dae5cc843e88aa9790986766028f",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 17.57,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
          "functionStartLine": 122,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Use this method to get the numerical value of the variance of this \ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as \nfor certain cases in {@link TDistributionImpl}) or \nDouble.NaN if it\u0027s not defined\n",
            "newValue": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Removed trailing spaces.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1060449 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/18/11, 8:24 AM",
          "commitName": "0e86e9253ee4b04e622ee0e63e891199cc00ad98",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "12/31/10, 6:41 PM",
          "commitNameOld": "18a2e9030f08dae5cc843e88aa9790986766028f",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 17.57,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
          "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
          "functionStartLine": 122,
          "functionName": "getNumericalVariance",
          "functionAnnotation": "",
          "functionDoc": "Use this method to get the numerical value of the variance of this\ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as\nfor certain cases in {@link TDistributionImpl}) or\nDouble.NaN if it\u0027s not defined\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "d43bb18d7e691cbd9d387ff1683ee62f057def27": {
      "type": "Yintroduced",
      "commitMessage": "Fixes MATH-385\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1053032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/27/10, 1:51 AM",
      "commitName": "d43bb18d7e691cbd9d387ff1683ee62f057def27",
      "commitAuthor": "Mikkel Meyer Andersen",
      "diff": "@@ -0,0 +1,7 @@\n+public double getNumericalVariance() {\n+    if (!numericalVarianceIsCalculated) {\n+        numericalVariance \u003d calculateNumericalVariance();\n+        numericalVarianceIsCalculated \u003d true;\n+    }\n+    return numericalVariance;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double getNumericalVariance() {\n    if (!numericalVarianceIsCalculated) {\n        numericalVariance \u003d calculateNumericalVariance();\n        numericalVarianceIsCalculated \u003d true;\n    }\n    return numericalVariance;\n}",
      "path": "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java",
      "functionStartLine": 116,
      "functionName": "getNumericalVariance",
      "functionAnnotation": "",
      "functionDoc": "Use this method to get the numerical value of the variance of this \ndistribution.\n\n@return the variance (possibly Double.POSITIVE_INFINITY as \nfor certain cases in {@link TDistributionImpl}) or \nDouble.NaN if it\u0027s not defined\n"
    }
  }
}