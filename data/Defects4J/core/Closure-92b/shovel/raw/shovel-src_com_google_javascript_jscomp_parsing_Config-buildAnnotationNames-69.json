{
  "origin": "codeshovel",
  "repositoryName": "Closure-92b",
  "repositoryPath": "/tmp/Closure-92b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Config.java",
  "functionName": "buildAnnotationNames",
  "functionId": "buildAnnotationNames___annotationWhitelist-Set__String__",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/Config.java",
  "functionAnnotation": "",
  "functionDoc": "Create the annotation names from the user-specified\nannotation whitelist.\n",
  "functionStartLine": 69,
  "functionEndLine": 82,
  "numCommitsSeen": 14,
  "timeTaken": 2201,
  "changeHistory": [
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
    "026c346555bbcc9d25fdeedbc85a6d68f0307775",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
    "026c346555bbcc9d25fdeedbc85a6d68f0307775": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Ydocchange,Yparameterchange)",
      "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/10, 3:02 PM",
      "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/10/10, 1:06 PM",
          "commitNameOld": "886045138bcce825f994ea7fa386d855f5e80b30",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n    for (String unrecognizedAnnotation : annotationWhitelist) {\n        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.build();\n}",
          "path": "src/com/google/javascript/jscomp/parsing/Config.java",
          "functionStartLine": 64,
          "functionName": "buildAnnotationNames",
          "functionAnnotation": "",
          "functionDoc": "Create the annotation names from the user-specified\nannotation whitelist.\n",
          "diff": "@@ -1,10 +1,10 @@\n-private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n+private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n     ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n-    annotationBuilder.putAll(recognizedAnnotations);\n-    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n-        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n+    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n+    for (String unrecognizedAnnotation : annotationWhitelist) {\n+        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n             annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n         }\n     }\n     return annotationBuilder.build();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
            "newPath": "src/com/google/javascript/jscomp/parsing/Config.java",
            "oldMethodName": "buildAnnotationNames",
            "newMethodName": "buildAnnotationNames"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/10/10, 1:06 PM",
          "commitNameOld": "886045138bcce825f994ea7fa386d855f5e80b30",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n    for (String unrecognizedAnnotation : annotationWhitelist) {\n        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.build();\n}",
          "path": "src/com/google/javascript/jscomp/parsing/Config.java",
          "functionStartLine": 64,
          "functionName": "buildAnnotationNames",
          "functionAnnotation": "",
          "functionDoc": "Create the annotation names from the user-specified\nannotation whitelist.\n",
          "diff": "@@ -1,10 +1,10 @@\n-private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n+private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n     ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n-    annotationBuilder.putAll(recognizedAnnotations);\n-    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n-        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n+    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n+    for (String unrecognizedAnnotation : annotationWhitelist) {\n+        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n             annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n         }\n     }\n     return annotationBuilder.build();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/10/10, 1:06 PM",
          "commitNameOld": "886045138bcce825f994ea7fa386d855f5e80b30",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n    for (String unrecognizedAnnotation : annotationWhitelist) {\n        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.build();\n}",
          "path": "src/com/google/javascript/jscomp/parsing/Config.java",
          "functionStartLine": 64,
          "functionName": "buildAnnotationNames",
          "functionAnnotation": "",
          "functionDoc": "Create the annotation names from the user-specified\nannotation whitelist.\n",
          "diff": "@@ -1,10 +1,10 @@\n-private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n+private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n     ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n-    annotationBuilder.putAll(recognizedAnnotations);\n-    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n-        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n+    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n+    for (String unrecognizedAnnotation : annotationWhitelist) {\n+        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n             annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n         }\n     }\n     return annotationBuilder.build();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Create the annotation names from the user-specified config.\n",
            "newValue": "Create the annotation names from the user-specified\nannotation whitelist.\n"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "2/10/10, 1:06 PM",
          "commitNameOld": "886045138bcce825f994ea7fa386d855f5e80b30",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n    for (String unrecognizedAnnotation : annotationWhitelist) {\n        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.build();\n}",
          "path": "src/com/google/javascript/jscomp/parsing/Config.java",
          "functionStartLine": 64,
          "functionName": "buildAnnotationNames",
          "functionAnnotation": "",
          "functionDoc": "Create the annotation names from the user-specified\nannotation whitelist.\n",
          "diff": "@@ -1,10 +1,10 @@\n-private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n+private static Map\u003cString, Annotation\u003e buildAnnotationNames(Set\u003cString\u003e annotationWhitelist) {\n     ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n-    annotationBuilder.putAll(recognizedAnnotations);\n-    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n-        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n+    annotationBuilder.putAll(Annotation.recognizedAnnotations);\n+    for (String unrecognizedAnnotation : annotationWhitelist) {\n+        if (!Annotation.recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n             annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n         }\n     }\n     return annotationBuilder.build();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[config-Config]",
            "newValue": "[annotationWhitelist-Set\u003cString\u003e]"
          }
        }
      ]
    },
    "026c346555bbcc9d25fdeedbc85a6d68f0307775": {
      "type": "Ybodychange",
      "commitMessage": "Use ImmutableMap.Builder instead of ImmutableMapBuilder.\n\nGenerate jsdoc for generated protocol buffers.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@72 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/19/10, 7:30 AM",
      "commitName": "026c346555bbcc9d25fdeedbc85a6d68f0307775",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "12/11/09, 3:29 PM",
      "commitNameOld": "168bc14ff5e9e664863c3b1146f2a5b7a30ffb42",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 38.67,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n    annotationBuilder.putAll(recognizedAnnotations);\n    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.build();\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 201,
      "functionName": "buildAnnotationNames",
      "functionAnnotation": "",
      "functionDoc": "Create the annotation names from the user-specified config.\n",
      "diff": "@@ -1,9 +1,10 @@\n private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n-    ImmutableMapBuilder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMapBuilder.fromMap(recognizedAnnotations);\n+    ImmutableMap.Builder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMap.builder();\n+    annotationBuilder.putAll(recognizedAnnotations);\n     for (String unrecognizedAnnotation : config.annotationWhitelist) {\n         if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n             annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n         }\n     }\n-    return annotationBuilder.getMap();\n+    return annotationBuilder.build();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n+    ImmutableMapBuilder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMapBuilder.fromMap(recognizedAnnotations);\n+    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n+        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n+            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n+        }\n+    }\n+    return annotationBuilder.getMap();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static Map\u003cString, Annotation\u003e buildAnnotationNames(Config config) {\n    ImmutableMapBuilder\u003cString, Annotation\u003e annotationBuilder \u003d ImmutableMapBuilder.fromMap(recognizedAnnotations);\n    for (String unrecognizedAnnotation : config.annotationWhitelist) {\n        if (!recognizedAnnotations.containsKey(unrecognizedAnnotation)) {\n            annotationBuilder.put(unrecognizedAnnotation, Annotation.NOT_IMPLEMENTED);\n        }\n    }\n    return annotationBuilder.getMap();\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 199,
      "functionName": "buildAnnotationNames",
      "functionAnnotation": "",
      "functionDoc": "Create the annotation names from the user-specified config.\n"
    }
  }
}