{
  "origin": "codeshovel",
  "repositoryName": "Closure-92b",
  "repositoryPath": "/tmp/Closure-92b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProcessClosurePrimitives.java",
  "functionName": "addProvide",
  "functionId": "$addProvide___node-Node__module-JSModule__explicit-boolean",
  "sourceFilePath": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "functionAnnotation": "",
  "functionDoc": "Add an implicit or explicit provide.\n",
  "functionStartLine": 695,
  "functionEndLine": 703,
  "numCommitsSeen": 23,
  "timeTaken": 1429,
  "changeHistory": [
    "83f6917e503ec7b32570af9e986ad749042d9dcf",
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
    "1046b0c09e2371f8924f72331d42db5b554c4a32"
  ],
  "changeHistoryShort": {
    "83f6917e503ec7b32570af9e986ad749042d9dcf": "Ybodychange",
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": "Ybodychange",
    "1046b0c09e2371f8924f72331d42db5b554c4a32": "Yintroduced"
  },
  "changeHistoryDetails": {
    "83f6917e503ec7b32570af9e986ad749042d9dcf": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/27 09:25:39 by dcc\n\n\tChange NameReferenceGraph#getDefinitionsReferencedAt() to return null when there are no definitions found for a node.\n\tThis had previously been returning a singleton list with an UnknownDefinition, which is used to mean \"we found a\n\tdefinition, but we don\u0027t know what kind of definition is is\" in other contexts.\n\n\tR\u003dacleung\n\tDELTA\u003d22  (19 added, 3 deleted, 0 changed)\n\nChange on 2010/07/27 09:30:41 by nicksantos\n\n\tWhen checking provide/require order, always use the module\n\twhere there was an explicit goog.provide.\n\n\tR\u003djohnlenz\n\tDELTA\u003d53  (49 added, 1 deleted, 3 changed)\n\nChange on 2010/07/27 09:49:50 by dcc\n\n\tInitial sketch of a side effects analysis.\n\n\tR\u003dacleung\n\tDELTA\u003d558  (558 added, 0 deleted, 0 changed)\n\nChange on 2010/07/27 09:49:51 by johnlenz\n\n\tFirst phase of supporting data member on interface type declarations.\n\n\tR\u003dnicksantos\n\tDELTA\u003d45  (20 added, 1 deleted, 24 changed)\n\nChange on 2010/07/27 10:29:17 by dhans\n\n\tMinor typo in a comment fixed.\n\n\tR\u003djohnlenz\n\tDELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/07/27 14:43:46 by chrisn\n\n\tFix module set compilation to generate per-jsmodule sourcemaps by calling reset. Necessitates making reset public.\n\n\tR\u003dkevinz,johnlenz\n\tDELTA\u003d34  (4 added, 12 deleted, 18 changed)\n\nChange on 2010/07/27 17:13:04 by acleung\n\n\tMapsTest Update\n\n\tR\u003dasalaev,johnlenz\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d73001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@314 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/27/10, 6:42 PM",
      "commitName": "83f6917e503ec7b32570af9e986ad749042d9dcf",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/5/10, 4:36 PM",
      "commitNameOld": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 83.09,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "actualSource": "void addProvide(Node node, JSModule module, boolean explicit) {\n    if (explicit) {\n        Preconditions.checkState(explicitNode \u003d\u003d null);\n        Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n        explicitNode \u003d node;\n        explicitModule \u003d module;\n    }\n    updateMinimumModule(module);\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 698,
      "functionName": "addProvide",
      "functionAnnotation": "",
      "functionDoc": "Add an implicit or explicit provide.\n",
      "diff": "@@ -1,8 +1,9 @@\n void addProvide(Node node, JSModule module, boolean explicit) {\n     if (explicit) {\n         Preconditions.checkState(explicitNode \u003d\u003d null);\n         Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n         explicitNode \u003d node;\n+        explicitModule \u003d module;\n     }\n     updateMinimumModule(module);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b": {
      "type": "Ybodychange",
      "commitMessage": "Fix a bunch of passes to preserve more type information.\n\nFix goog.provide/goog.require handling to work in the presence of modules.\n\nImprove a bunch of type annotations in gecko_dom.\n\nMake NameAnalyzer use the Graph package.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@95 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/8/10, 11:30 AM",
      "commitName": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/5/10, 11:27 AM",
      "commitNameOld": "1046b0c09e2371f8924f72331d42db5b554c4a32",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "void addProvide(Node node, JSModule module, boolean explicit) {\n    if (explicit) {\n        Preconditions.checkState(explicitNode \u003d\u003d null);\n        Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n        explicitNode \u003d node;\n    }\n    updateMinimumModule(module);\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 696,
      "functionName": "addProvide",
      "functionAnnotation": "",
      "functionDoc": "Add an implicit or explicit provide.\n",
      "diff": "@@ -1,7 +1,8 @@\n void addProvide(Node node, JSModule module, boolean explicit) {\n     if (explicit) {\n         Preconditions.checkState(explicitNode \u003d\u003d null);\n         Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n         explicitNode \u003d node;\n     }\n+    updateMinimumModule(module);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1046b0c09e2371f8924f72331d42db5b554c4a32": {
      "type": "Yintroduced",
      "commitMessage": "Rewrite ProcessClosurePrimitives to have a distinct indexing and mutation step.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@94 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/5/10, 11:27 AM",
      "commitName": "1046b0c09e2371f8924f72331d42db5b554c4a32",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,7 @@\n+void addProvide(Node node, JSModule module, boolean explicit) {\n+    if (explicit) {\n+        Preconditions.checkState(explicitNode \u003d\u003d null);\n+        Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n+        explicitNode \u003d node;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void addProvide(Node node, JSModule module, boolean explicit) {\n    if (explicit) {\n        Preconditions.checkState(explicitNode \u003d\u003d null);\n        Preconditions.checkArgument(NodeUtil.isExpressionNode(node));\n        explicitNode \u003d node;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 673,
      "functionName": "addProvide",
      "functionAnnotation": "",
      "functionDoc": "Add an implicit or explicit provide.\n"
    }
  }
}