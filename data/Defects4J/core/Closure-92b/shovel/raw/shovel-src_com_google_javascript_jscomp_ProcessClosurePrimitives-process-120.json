{
  "origin": "codeshovel",
  "repositoryName": "Closure-92b",
  "repositoryPath": "/tmp/Closure-92b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProcessClosurePrimitives.java",
  "functionName": "process",
  "functionId": "process___externs-Node__root-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 120,
  "functionEndLine": 142,
  "numCommitsSeen": 23,
  "timeTaken": 1321,
  "changeHistory": [
    "5da32cba7b68d69acfc535f57f21d652475d256f",
    "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
    "1046b0c09e2371f8924f72331d42db5b554c4a32",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5da32cba7b68d69acfc535f57f21d652475d256f": "Ymultichange(Yannotationchange,Ydocchange)",
    "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0": "Ybodychange",
    "1046b0c09e2371f8924f72331d42db5b554c4a32": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5da32cba7b68d69acfc535f57f21d652475d256f": {
      "type": "Ymultichange(Yannotationchange,Ydocchange)",
      "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/19/10, 4:28 PM",
      "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yannotationchange",
          "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/19/10, 4:28 PM",
          "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/29/10, 7:04 AM",
          "commitNameOld": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 21.39,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    new NodeTraversal(compiler, this).traverse(root);\n    for (ProvidedName pn : providedNames.values()) {\n        pn.replace();\n    }\n    if (requiresLevel.isOn()) {\n        for (UnrecognizedRequire r : unrecognizedRequires) {\n            DiagnosticType error;\n            ProvidedName expectedName \u003d providedNames.get(r.namespace);\n            if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                error \u003d LATE_PROVIDE_ERROR;\n            } else {\n                error \u003d MISSING_PROVIDE_ERROR;\n            }\n            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
          "functionStartLine": 123,
          "functionName": "process",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,19 @@\n+@Override\n public void process(Node externs, Node root) {\n     new NodeTraversal(compiler, this).traverse(root);\n     for (ProvidedName pn : providedNames.values()) {\n         pn.replace();\n     }\n     if (requiresLevel.isOn()) {\n         for (UnrecognizedRequire r : unrecognizedRequires) {\n             DiagnosticType error;\n             ProvidedName expectedName \u003d providedNames.get(r.namespace);\n             if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                 error \u003d LATE_PROVIDE_ERROR;\n             } else {\n                 error \u003d MISSING_PROVIDE_ERROR;\n             }\n             compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/04/19 by anatol\n\n        Replace {@inheritDoc} javadoc annotation with @Override.\n        @Override is better as it implies documentation inheritance plus checks\n        that the parent method exists at the compile-time.\n\n        R\u003dnick\n        DELTA\u003d137  (0 added, 70 deleted, 67 changed)\n\nChange on 2010/04/19 by nick\n\n        Change how we resolve types.\n        Instead of leaving shell proxy types around, unbox the proxy types.\n\n        R\u003dandrew,john\n        DELTA\u003d103  (84 added, 5 deleted, 14 changed)\n\nChange on 2010/04/19 by acleung\n\n        Enable Flow Sensitive Inlining by default.\n\n        R\u003djohn\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dpqvliw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@191 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/19/10, 4:28 PM",
          "commitName": "5da32cba7b68d69acfc535f57f21d652475d256f",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/29/10, 7:04 AM",
          "commitNameOld": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 21.39,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void process(Node externs, Node root) {\n    new NodeTraversal(compiler, this).traverse(root);\n    for (ProvidedName pn : providedNames.values()) {\n        pn.replace();\n    }\n    if (requiresLevel.isOn()) {\n        for (UnrecognizedRequire r : unrecognizedRequires) {\n            DiagnosticType error;\n            ProvidedName expectedName \u003d providedNames.get(r.namespace);\n            if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                error \u003d LATE_PROVIDE_ERROR;\n            } else {\n                error \u003d MISSING_PROVIDE_ERROR;\n            }\n            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n        }\n    }\n}",
          "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
          "functionStartLine": 123,
          "functionName": "process",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,19 @@\n+@Override\n public void process(Node externs, Node root) {\n     new NodeTraversal(compiler, this).traverse(root);\n     for (ProvidedName pn : providedNames.values()) {\n         pn.replace();\n     }\n     if (requiresLevel.isOn()) {\n         for (UnrecognizedRequire r : unrecognizedRequires) {\n             DiagnosticType error;\n             ProvidedName expectedName \u003d providedNames.get(r.namespace);\n             if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                 error \u003d LATE_PROVIDE_ERROR;\n             } else {\n                 error \u003d MISSING_PROVIDE_ERROR;\n             }\n             compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@inheritDoc}\n",
            "newValue": ""
          }
        }
      ]
    },
    "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0": {
      "type": "Ybodychange",
      "commitMessage": "emit the right error message when goog is required. (Nick)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@118 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/26/10, 3:45 PM",
      "commitName": "50c1b3d39ff5b17c956a2235f97f7b5da05ab6f0",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/11/10, 1:02 PM",
      "commitNameOld": "1771d2005a441cb87df2a488069f265bd71ed9ee",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 15.11,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public void process(Node externs, Node root) {\n    new NodeTraversal(compiler, this).traverse(root);\n    for (ProvidedName pn : providedNames.values()) {\n        pn.replace();\n    }\n    if (requiresLevel.isOn()) {\n        for (UnrecognizedRequire r : unrecognizedRequires) {\n            DiagnosticType error;\n            ProvidedName expectedName \u003d providedNames.get(r.namespace);\n            if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                error \u003d LATE_PROVIDE_ERROR;\n            } else {\n                error \u003d MISSING_PROVIDE_ERROR;\n            }\n            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 125,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,17 +1,18 @@\n public void process(Node externs, Node root) {\n     new NodeTraversal(compiler, this).traverse(root);\n     for (ProvidedName pn : providedNames.values()) {\n         pn.replace();\n     }\n     if (requiresLevel.isOn()) {\n         for (UnrecognizedRequire r : unrecognizedRequires) {\n             DiagnosticType error;\n-            if (providedNames.get(r.namespace) !\u003d null) {\n+            ProvidedName expectedName \u003d providedNames.get(r.namespace);\n+            if (expectedName !\u003d null \u0026\u0026 expectedName.firstNode !\u003d null) {\n                 error \u003d LATE_PROVIDE_ERROR;\n             } else {\n                 error \u003d MISSING_PROVIDE_ERROR;\n             }\n             compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1046b0c09e2371f8924f72331d42db5b554c4a32": {
      "type": "Ybodychange",
      "commitMessage": "Rewrite ProcessClosurePrimitives to have a distinct indexing and mutation step.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@94 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/5/10, 11:27 AM",
      "commitName": "1046b0c09e2371f8924f72331d42db5b554c4a32",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "2/3/10, 7:26 AM",
      "commitNameOld": "449fdd3c1163cf42d9caa4e7382e37f20f2ca6ac",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public void process(Node externs, Node root) {\n    new NodeTraversal(compiler, this).traverse(root);\n    for (ProvidedName pn : providedNames.values()) {\n        pn.replace();\n    }\n    if (requiresLevel.isOn()) {\n        for (UnrecognizedRequire r : unrecognizedRequires) {\n            DiagnosticType error;\n            if (providedNames.get(r.namespace) !\u003d null) {\n                error \u003d LATE_PROVIDE_ERROR;\n            } else {\n                error \u003d MISSING_PROVIDE_ERROR;\n            }\n            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 123,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "@@ -1,19 +1,17 @@\n public void process(Node externs, Node root) {\n     new NodeTraversal(compiler, this).traverse(root);\n-    for (ProvidedNode pn : providedNodes.values()) {\n-        if (pn !\u003d null) {\n-            pn.maybeRemove();\n-        }\n+    for (ProvidedName pn : providedNames.values()) {\n+        pn.replace();\n     }\n     if (requiresLevel.isOn()) {\n         for (UnrecognizedRequire r : unrecognizedRequires) {\n             DiagnosticType error;\n-            if (providedNodes.get(r.namespace) !\u003d null) {\n+            if (providedNames.get(r.namespace) !\u003d null) {\n                 error \u003d LATE_PROVIDE_ERROR;\n             } else {\n                 error \u003d MISSING_PROVIDE_ERROR;\n             }\n             compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,19 @@\n+public void process(Node externs, Node root) {\n+    new NodeTraversal(compiler, this).traverse(root);\n+    for (ProvidedNode pn : providedNodes.values()) {\n+        if (pn !\u003d null) {\n+            pn.maybeRemove();\n+        }\n+    }\n+    if (requiresLevel.isOn()) {\n+        for (UnrecognizedRequire r : unrecognizedRequires) {\n+            DiagnosticType error;\n+            if (providedNodes.get(r.namespace) !\u003d null) {\n+                error \u003d LATE_PROVIDE_ERROR;\n+            } else {\n+                error \u003d MISSING_PROVIDE_ERROR;\n+            }\n+            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void process(Node externs, Node root) {\n    new NodeTraversal(compiler, this).traverse(root);\n    for (ProvidedNode pn : providedNodes.values()) {\n        if (pn !\u003d null) {\n            pn.maybeRemove();\n        }\n    }\n    if (requiresLevel.isOn()) {\n        for (UnrecognizedRequire r : unrecognizedRequires) {\n            DiagnosticType error;\n            if (providedNodes.get(r.namespace) !\u003d null) {\n                error \u003d LATE_PROVIDE_ERROR;\n            } else {\n                error \u003d MISSING_PROVIDE_ERROR;\n            }\n            compiler.report(JSError.make(r.inputName, r.requireNode, requiresLevel, error, r.namespace));\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
      "functionStartLine": 140,
      "functionName": "process",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n"
    }
  }
}