{
  "origin": "codeshovel",
  "repositoryName": "Closure-92b",
  "repositoryPath": "/tmp/Closure-92b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "newQualifiedNameNode",
  "functionId": "newQualifiedNameNode___name-String__lineno-int__charno-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Creates a node representing a qualified name.\n\n@param name A qualified name (e.g. \"foo\" or \"foo.bar.baz\")\n@param lineno The source line offset.\n@param charno The source character offset from start of the line.\n@return A NAME or GETPROP node\n",
  "functionStartLine": 1702,
  "functionEndLine": 1722,
  "numCommitsSeen": 44,
  "timeTaken": 2939,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+public static Node newQualifiedNameNode(String name, int lineno, int charno) {\n+    int endPos \u003d name.indexOf(\u0027.\u0027);\n+    if (endPos \u003d\u003d -1) {\n+        return Node.newString(Token.NAME, name, lineno, charno);\n+    }\n+    Node node \u003d Node.newString(Token.NAME, name.substring(0, endPos), lineno, charno);\n+    int startPos;\n+    do {\n+        startPos \u003d endPos + 1;\n+        endPos \u003d name.indexOf(\u0027.\u0027, startPos);\n+        String part \u003d (endPos \u003d\u003d -1 ? name.substring(startPos) : name.substring(startPos, endPos));\n+        node \u003d new Node(Token.GETPROP, node, Node.newString(Token.STRING, part, lineno, charno), lineno, charno);\n+    } while (endPos !\u003d -1);\n+    return node;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Node newQualifiedNameNode(String name, int lineno, int charno) {\n    int endPos \u003d name.indexOf(\u0027.\u0027);\n    if (endPos \u003d\u003d -1) {\n        return Node.newString(Token.NAME, name, lineno, charno);\n    }\n    Node node \u003d Node.newString(Token.NAME, name.substring(0, endPos), lineno, charno);\n    int startPos;\n    do {\n        startPos \u003d endPos + 1;\n        endPos \u003d name.indexOf(\u0027.\u0027, startPos);\n        String part \u003d (endPos \u003d\u003d -1 ? name.substring(startPos) : name.substring(startPos, endPos));\n        node \u003d new Node(Token.GETPROP, node, Node.newString(Token.STRING, part, lineno, charno), lineno, charno);\n    } while (endPos !\u003d -1);\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1469,
      "functionName": "newQualifiedNameNode",
      "functionAnnotation": "",
      "functionDoc": "Creates a node representing a qualified name.\n\n@param name A qualified name (e.g. \"foo\" or \"foo.bar.baz\")\n@param lineno The source line offset.\n@param charno The source character offset from start of the line.\n@return A NAME or GETPROP node\n"
    }
  }
}