{
  "origin": "codeshovel",
  "repositoryName": "Closure-61b",
  "repositoryPath": "/tmp/Closure-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isSimpleOperatorType",
  "functionId": "isSimpleOperatorType___type-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "A \"simple\" operator is one whose children are expressions,\nhas no direct side-effects (unlike \u0027+\u003d\u0027), and has no\nconditional aspects (unlike \u0027||\u0027).\n",
  "functionStartLine": 642,
  "functionEndLine": 678,
  "numCommitsSeen": 90,
  "timeTaken": 7312,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,36 @@\n+static boolean isSimpleOperatorType(int type) {\n+    switch(type) {\n+        case Token.ADD:\n+        case Token.BITAND:\n+        case Token.BITNOT:\n+        case Token.BITOR:\n+        case Token.BITXOR:\n+        case Token.COMMA:\n+        case Token.DIV:\n+        case Token.EQ:\n+        case Token.GE:\n+        case Token.GETELEM:\n+        case Token.GETPROP:\n+        case Token.GT:\n+        case Token.INSTANCEOF:\n+        case Token.LE:\n+        case Token.LSH:\n+        case Token.LT:\n+        case Token.MOD:\n+        case Token.MUL:\n+        case Token.NE:\n+        case Token.NOT:\n+        case Token.RSH:\n+        case Token.SHEQ:\n+        case Token.SHNE:\n+        case Token.SUB:\n+        case Token.TYPEOF:\n+        case Token.VOID:\n+        case Token.POS:\n+        case Token.NEG:\n+        case Token.URSH:\n+            return true;\n+        default:\n+            return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isSimpleOperatorType(int type) {\n    switch(type) {\n        case Token.ADD:\n        case Token.BITAND:\n        case Token.BITNOT:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.COMMA:\n        case Token.DIV:\n        case Token.EQ:\n        case Token.GE:\n        case Token.GETELEM:\n        case Token.GETPROP:\n        case Token.GT:\n        case Token.INSTANCEOF:\n        case Token.LE:\n        case Token.LSH:\n        case Token.LT:\n        case Token.MOD:\n        case Token.MUL:\n        case Token.NE:\n        case Token.NOT:\n        case Token.RSH:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.SUB:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.POS:\n        case Token.NEG:\n        case Token.URSH:\n            return true;\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 280,
      "functionName": "isSimpleOperatorType",
      "functionAnnotation": "",
      "functionDoc": "A \"simple\" operator is one whose children are expressions,\nhas no direct side-effects (unlike \u0027+\u003d\u0027), and has no\nconditional aspects (unlike \u0027||\u0027).\n"
    }
  }
}