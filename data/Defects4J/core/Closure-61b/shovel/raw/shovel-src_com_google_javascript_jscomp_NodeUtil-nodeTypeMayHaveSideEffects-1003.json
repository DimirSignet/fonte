{
  "origin": "codeshovel",
  "repositoryName": "Closure-61b",
  "repositoryPath": "/tmp/Closure-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "nodeTypeMayHaveSideEffects",
  "functionId": "nodeTypeMayHaveSideEffects___n-Node__compiler-AbstractCompiler",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1003,
  "functionEndLine": 1024,
  "numCommitsSeen": 125,
  "timeTaken": 7261,
  "changeHistory": [
    "48701cc70fde194c05ecd008fc1015b9d82921d1",
    "7eaa0d8eca2549742649af34671eaf3da83b5c08",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "48701cc70fde194c05ecd008fc1015b9d82921d1": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "7eaa0d8eca2549742649af34671eaf3da83b5c08": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "48701cc70fde194c05ecd008fc1015b9d82921d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "\n- Generalize unused operation removal and remove a couple of special cases (HOOK, NOT).\n- Add handling for other AST locations that can have unused ops removed (COMMA lhs and FOR increment expressions).\n\nR\u003dacleung\nDELTA\u003d358  (260 added, 80 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d197245\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@390 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/27/10, 3:09 PM",
      "commitName": "48701cc70fde194c05ecd008fc1015b9d82921d1",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\n- Generalize unused operation removal and remove a couple of special cases (HOOK, NOT).\n- Add handling for other AST locations that can have unused ops removed (COMMA lhs and FOR increment expressions).\n\nR\u003dacleung\nDELTA\u003d358  (260 added, 80 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d197245\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@390 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/27/10, 3:09 PM",
          "commitName": "48701cc70fde194c05ecd008fc1015b9d82921d1",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "8/12/10, 6:02 PM",
          "commitNameOld": "15acafb00636f99295b394145b9b60a5e624ddfa",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.88,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n    if (isAssignmentOp(n)) {\n        return true;\n    }\n    switch(n.getType()) {\n        case Token.DELPROP:\n        case Token.DEC:\n        case Token.INC:\n        case Token.THROW:\n            return true;\n        case Token.CALL:\n            return NodeUtil.functionCallHasSideEffects(n, compiler);\n        case Token.NEW:\n            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n        case Token.NAME:\n            return n.hasChildren();\n        default:\n            return false;\n    }\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 641,
          "functionName": "nodeTypeMayHaveSideEffects",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,20 @@\n-static boolean nodeTypeMayHaveSideEffects(Node n) {\n+static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n     if (isAssignmentOp(n)) {\n         return true;\n     }\n     switch(n.getType()) {\n-        case Token.CALL:\n         case Token.DELPROP:\n-        case Token.NEW:\n         case Token.DEC:\n         case Token.INC:\n         case Token.THROW:\n             return true;\n+        case Token.CALL:\n+            return NodeUtil.functionCallHasSideEffects(n, compiler);\n+        case Token.NEW:\n+            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n         case Token.NAME:\n             return n.hasChildren();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[n-Node]",
            "newValue": "[n-Node, compiler-AbstractCompiler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\n- Generalize unused operation removal and remove a couple of special cases (HOOK, NOT).\n- Add handling for other AST locations that can have unused ops removed (COMMA lhs and FOR increment expressions).\n\nR\u003dacleung\nDELTA\u003d358  (260 added, 80 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d197245\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@390 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/27/10, 3:09 PM",
          "commitName": "48701cc70fde194c05ecd008fc1015b9d82921d1",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "8/12/10, 6:02 PM",
          "commitNameOld": "15acafb00636f99295b394145b9b60a5e624ddfa",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.88,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n    if (isAssignmentOp(n)) {\n        return true;\n    }\n    switch(n.getType()) {\n        case Token.DELPROP:\n        case Token.DEC:\n        case Token.INC:\n        case Token.THROW:\n            return true;\n        case Token.CALL:\n            return NodeUtil.functionCallHasSideEffects(n, compiler);\n        case Token.NEW:\n            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n        case Token.NAME:\n            return n.hasChildren();\n        default:\n            return false;\n    }\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 641,
          "functionName": "nodeTypeMayHaveSideEffects",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,20 @@\n-static boolean nodeTypeMayHaveSideEffects(Node n) {\n+static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n     if (isAssignmentOp(n)) {\n         return true;\n     }\n     switch(n.getType()) {\n-        case Token.CALL:\n         case Token.DELPROP:\n-        case Token.NEW:\n         case Token.DEC:\n         case Token.INC:\n         case Token.THROW:\n             return true;\n+        case Token.CALL:\n+            return NodeUtil.functionCallHasSideEffects(n, compiler);\n+        case Token.NEW:\n+            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n         case Token.NAME:\n             return n.hasChildren();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\n- Generalize unused operation removal and remove a couple of special cases (HOOK, NOT).\n- Add handling for other AST locations that can have unused ops removed (COMMA lhs and FOR increment expressions).\n\nR\u003dacleung\nDELTA\u003d358  (260 added, 80 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d197245\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@390 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/27/10, 3:09 PM",
          "commitName": "48701cc70fde194c05ecd008fc1015b9d82921d1",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "8/12/10, 6:02 PM",
          "commitNameOld": "15acafb00636f99295b394145b9b60a5e624ddfa",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.88,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n    if (isAssignmentOp(n)) {\n        return true;\n    }\n    switch(n.getType()) {\n        case Token.DELPROP:\n        case Token.DEC:\n        case Token.INC:\n        case Token.THROW:\n            return true;\n        case Token.CALL:\n            return NodeUtil.functionCallHasSideEffects(n, compiler);\n        case Token.NEW:\n            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n        case Token.NAME:\n            return n.hasChildren();\n        default:\n            return false;\n    }\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 641,
          "functionName": "nodeTypeMayHaveSideEffects",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,20 @@\n-static boolean nodeTypeMayHaveSideEffects(Node n) {\n+static boolean nodeTypeMayHaveSideEffects(Node n, AbstractCompiler compiler) {\n     if (isAssignmentOp(n)) {\n         return true;\n     }\n     switch(n.getType()) {\n-        case Token.CALL:\n         case Token.DELPROP:\n-        case Token.NEW:\n         case Token.DEC:\n         case Token.INC:\n         case Token.THROW:\n             return true;\n+        case Token.CALL:\n+            return NodeUtil.functionCallHasSideEffects(n, compiler);\n+        case Token.NEW:\n+            return NodeUtil.constructorCallHasSideEffects(n, compiler);\n         case Token.NAME:\n             return n.hasChildren();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns true if the current node\u0027s type implies side effects.\n\nThis is a non-recursive version of the may have side effects\ncheck; used to check wherever the current node\u0027s type is one of\nthe reason\u0027s why a subtree has side effects.\n",
            "newValue": ""
          }
        }
      ]
    },
    "7eaa0d8eca2549742649af34671eaf3da83b5c08": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/06 by john\n\n        Update RemoveConstantExpressions to handle removing expressions whose\n        roots are calls to functions without side-effects.\n\n        R\u003dantonio\n        DELTA\u003d19  (18 added, 0 deleted, 1 changed)\n\nChange on 2010/04/06 by john\n\n        Cleanup NodeUtil self references.\n\n        R\u003drobert\n        DELTA\u003d12  (0 added, 0 deleted, 12 changed)\n\nChange on 2010/04/07 by john\n\n        Make things easier for shell escaping, accept both single and double\n        quotes for strings in --define flags.\n        Fixes issue 139.\n\n        R\u003drobert\n        DELTA\u003d18  (14 added, 0 deleted, 4 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dwdwbvk\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@173 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/7/10, 11:34 AM",
      "commitName": "7eaa0d8eca2549742649af34671eaf3da83b5c08",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean nodeTypeMayHaveSideEffects(Node n) {\n    if (isAssignmentOp(n)) {\n        return true;\n    }\n    switch(n.getType()) {\n        case Token.CALL:\n        case Token.DELPROP:\n        case Token.NEW:\n        case Token.DEC:\n        case Token.INC:\n        case Token.THROW:\n            return true;\n        case Token.NAME:\n            return n.hasChildren();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 546,
      "functionName": "nodeTypeMayHaveSideEffects",
      "functionAnnotation": "",
      "functionDoc": "Returns true if the current node\u0027s type implies side effects.\n\nThis is a non-recursive version of the may have side effects\ncheck; used to check wherever the current node\u0027s type is one of\nthe reason\u0027s why a subtree has side effects.\n",
      "diff": "@@ -1,18 +1,18 @@\n static boolean nodeTypeMayHaveSideEffects(Node n) {\n-    if (NodeUtil.isAssignmentOp(n)) {\n+    if (isAssignmentOp(n)) {\n         return true;\n     }\n     switch(n.getType()) {\n         case Token.CALL:\n         case Token.DELPROP:\n         case Token.NEW:\n         case Token.DEC:\n         case Token.INC:\n         case Token.THROW:\n             return true;\n         case Token.NAME:\n             return n.hasChildren();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+static boolean nodeTypeMayHaveSideEffects(Node n) {\n+    if (NodeUtil.isAssignmentOp(n)) {\n+        return true;\n+    }\n+    switch(n.getType()) {\n+        case Token.CALL:\n+        case Token.DELPROP:\n+        case Token.NEW:\n+        case Token.DEC:\n+        case Token.INC:\n+        case Token.THROW:\n+            return true;\n+        case Token.NAME:\n+            return n.hasChildren();\n+        default:\n+            return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean nodeTypeMayHaveSideEffects(Node n) {\n    if (NodeUtil.isAssignmentOp(n)) {\n        return true;\n    }\n    switch(n.getType()) {\n        case Token.CALL:\n        case Token.DELPROP:\n        case Token.NEW:\n        case Token.DEC:\n        case Token.INC:\n        case Token.THROW:\n            return true;\n        case Token.NAME:\n            return n.hasChildren();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 523,
      "functionName": "nodeTypeMayHaveSideEffects",
      "functionAnnotation": "",
      "functionDoc": "Returns true if the current node\u0027s type implies side effects.\n\nThis is a non-recursive version of the may have side effects\ncheck; used to check wherever the current node\u0027s type is one of\nthe reason\u0027s why a subtree has side effects.\n"
    }
  }
}