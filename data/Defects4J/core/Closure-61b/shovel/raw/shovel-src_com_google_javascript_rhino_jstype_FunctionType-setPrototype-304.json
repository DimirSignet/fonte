{
  "origin": "codeshovel",
  "repositoryName": "Closure-61b",
  "repositoryPath": "/tmp/Closure-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionType.java",
  "functionName": "setPrototype",
  "functionId": "setPrototype___prototype-FunctionPrototypeType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/FunctionType.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n",
  "functionStartLine": 304,
  "functionEndLine": 336,
  "numCommitsSeen": 42,
  "timeTaken": 1850,
  "changeHistory": [
    "c438dfd06013f82daa648d23b864842ff1881695",
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
    "840ddca5b28cea7563a5be20d2624478af67bc02",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "c438dfd06013f82daa648d23b864842ff1881695": "Ybodychange",
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24": "Ybodychange",
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb": "Ybodychange",
    "840ddca5b28cea7563a5be20d2624478af67bc02": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c438dfd06013f82daa648d23b864842ff1881695": {
      "type": "Ybodychange",
      "commitMessage": "\nImplement multiple extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d711  (635 added, 41 deleted, 35 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1917\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1105 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/16/11, 12:57 PM",
      "commitName": "c438dfd06013f82daa648d23b864842ff1881695",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "5/10/11, 2:34 PM",
      "commitNameOld": "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean setPrototype(FunctionPrototypeType prototype) {\n    if (prototype \u003d\u003d null) {\n        return false;\n    }\n    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n        return false;\n    }\n    boolean replacedPrototype \u003d prototype !\u003d null;\n    this.prototype \u003d prototype;\n    if (isConstructor() || isInterface()) {\n        FunctionType superClass \u003d getSuperClassConstructor();\n        if (superClass !\u003d null) {\n            superClass.addSubType(this);\n        }\n        if (isInterface()) {\n            for (ObjectType interfaceType : getExtendedInterfaces()) {\n                if (interfaceType.getConstructor() !\u003d null) {\n                    interfaceType.getConstructor().addSubType(this);\n                }\n            }\n        }\n    }\n    if (replacedPrototype) {\n        clearCachedValues();\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 304,
      "functionName": "setPrototype",
      "functionAnnotation": "",
      "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n",
      "diff": "@@ -1,20 +1,27 @@\n public boolean setPrototype(FunctionPrototypeType prototype) {\n     if (prototype \u003d\u003d null) {\n         return false;\n     }\n     if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n         return false;\n     }\n     boolean replacedPrototype \u003d prototype !\u003d null;\n     this.prototype \u003d prototype;\n     if (isConstructor() || isInterface()) {\n         FunctionType superClass \u003d getSuperClassConstructor();\n         if (superClass !\u003d null) {\n             superClass.addSubType(this);\n         }\n+        if (isInterface()) {\n+            for (ObjectType interfaceType : getExtendedInterfaces()) {\n+                if (interfaceType.getConstructor() !\u003d null) {\n+                    interfaceType.getConstructor().addSubType(this);\n+                }\n+            }\n+        }\n     }\n     if (replacedPrototype) {\n         clearCachedValues();\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2851a41947bed8b8e100c7dac7d1edbc1c909d24": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nGot multiple cases broken from different teams.\n\n*** Original change description ***\n\nImplement multi extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d635  (41 added, 560 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1813\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1077 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 2:34 PM",
      "commitName": "2851a41947bed8b8e100c7dac7d1edbc1c909d24",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "5/10/11, 1:26 PM",
      "commitNameOld": "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean setPrototype(FunctionPrototypeType prototype) {\n    if (prototype \u003d\u003d null) {\n        return false;\n    }\n    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n        return false;\n    }\n    boolean replacedPrototype \u003d prototype !\u003d null;\n    this.prototype \u003d prototype;\n    if (isConstructor() || isInterface()) {\n        FunctionType superClass \u003d getSuperClassConstructor();\n        if (superClass !\u003d null) {\n            superClass.addSubType(this);\n        }\n    }\n    if (replacedPrototype) {\n        clearCachedValues();\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 298,
      "functionName": "setPrototype",
      "functionAnnotation": "",
      "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n",
      "diff": "@@ -1,27 +1,20 @@\n public boolean setPrototype(FunctionPrototypeType prototype) {\n     if (prototype \u003d\u003d null) {\n         return false;\n     }\n     if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n         return false;\n     }\n     boolean replacedPrototype \u003d prototype !\u003d null;\n     this.prototype \u003d prototype;\n     if (isConstructor() || isInterface()) {\n         FunctionType superClass \u003d getSuperClassConstructor();\n         if (superClass !\u003d null) {\n             superClass.addSubType(this);\n         }\n-        if (isInterface()) {\n-            for (ObjectType interfaceType : getExtendedInterfaces()) {\n-                if (interfaceType.getConstructor() !\u003d null) {\n-                    interfaceType.getConstructor().addSubType(this);\n-                }\n-            }\n-        }\n     }\n     if (replacedPrototype) {\n         clearCachedValues();\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a36a61a9027c5bca5752b0ecca7c609c07e568bb": {
      "type": "Ybodychange",
      "commitMessage": "\nImplement multi extends for interfaces\n\nR\u003dnicksantos\nDELTA\u003d635  (560 added, 41 deleted, 34 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1810\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1074 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/10/11, 1:26 PM",
      "commitName": "a36a61a9027c5bca5752b0ecca7c609c07e568bb",
      "commitAuthor": "zhuyi@google.com",
      "commitDateOld": "4/19/11, 5:06 PM",
      "commitNameOld": "e82290302eaf2757281651588ee43441ed6d57d6",
      "commitAuthorOld": "zhuyi@google.com",
      "daysBetweenCommits": 20.85,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean setPrototype(FunctionPrototypeType prototype) {\n    if (prototype \u003d\u003d null) {\n        return false;\n    }\n    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n        return false;\n    }\n    boolean replacedPrototype \u003d prototype !\u003d null;\n    this.prototype \u003d prototype;\n    if (isConstructor() || isInterface()) {\n        FunctionType superClass \u003d getSuperClassConstructor();\n        if (superClass !\u003d null) {\n            superClass.addSubType(this);\n        }\n        if (isInterface()) {\n            for (ObjectType interfaceType : getExtendedInterfaces()) {\n                if (interfaceType.getConstructor() !\u003d null) {\n                    interfaceType.getConstructor().addSubType(this);\n                }\n            }\n        }\n    }\n    if (replacedPrototype) {\n        clearCachedValues();\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 304,
      "functionName": "setPrototype",
      "functionAnnotation": "",
      "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n",
      "diff": "@@ -1,20 +1,27 @@\n public boolean setPrototype(FunctionPrototypeType prototype) {\n     if (prototype \u003d\u003d null) {\n         return false;\n     }\n     if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n         return false;\n     }\n     boolean replacedPrototype \u003d prototype !\u003d null;\n     this.prototype \u003d prototype;\n     if (isConstructor() || isInterface()) {\n         FunctionType superClass \u003d getSuperClassConstructor();\n         if (superClass !\u003d null) {\n             superClass.addSubType(this);\n         }\n+        if (isInterface()) {\n+            for (ObjectType interfaceType : getExtendedInterfaces()) {\n+                if (interfaceType.getConstructor() !\u003d null) {\n+                    interfaceType.getConstructor().addSubType(this);\n+                }\n+            }\n+        }\n     }\n     if (replacedPrototype) {\n         clearCachedValues();\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "840ddca5b28cea7563a5be20d2624478af67bc02": {
      "type": "Ybodychange",
      "commitMessage": "\nFix a regression for when the user assigns an unknown\nvalue to a prototype. We don\u0027t need to handle this case well,\nas long as we handle it consistently.\n\nR\u003djohnlenz\nDELTA\u003d73  (73 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d298\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@699 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/18/11, 9:27 AM",
      "commitName": "840ddca5b28cea7563a5be20d2624478af67bc02",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "1/7/11, 9:19 AM",
      "commitNameOld": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthorOld": "bashir@google.com",
      "daysBetweenCommits": 11.01,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean setPrototype(FunctionPrototypeType prototype) {\n    if (prototype \u003d\u003d null) {\n        return false;\n    }\n    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n        return false;\n    }\n    boolean replacedPrototype \u003d prototype !\u003d null;\n    this.prototype \u003d prototype;\n    if (isConstructor() || isInterface()) {\n        FunctionType superClass \u003d getSuperClassConstructor();\n        if (superClass !\u003d null) {\n            superClass.addSubType(this);\n        }\n    }\n    if (replacedPrototype) {\n        clearCachedValues();\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 286,
      "functionName": "setPrototype",
      "functionAnnotation": "",
      "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n",
      "diff": "@@ -1,16 +1,20 @@\n public boolean setPrototype(FunctionPrototypeType prototype) {\n     if (prototype \u003d\u003d null) {\n         return false;\n     }\n     if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n         return false;\n     }\n+    boolean replacedPrototype \u003d prototype !\u003d null;\n     this.prototype \u003d prototype;\n     if (isConstructor() || isInterface()) {\n         FunctionType superClass \u003d getSuperClassConstructor();\n         if (superClass !\u003d null) {\n             superClass.addSubType(this);\n         }\n     }\n+    if (replacedPrototype) {\n+        clearCachedValues();\n+    }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,16 @@\n+public boolean setPrototype(FunctionPrototypeType prototype) {\n+    if (prototype \u003d\u003d null) {\n+        return false;\n+    }\n+    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n+        return false;\n+    }\n+    this.prototype \u003d prototype;\n+    if (isConstructor() || isInterface()) {\n+        FunctionType superClass \u003d getSuperClassConstructor();\n+        if (superClass !\u003d null) {\n+            superClass.addSubType(this);\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean setPrototype(FunctionPrototypeType prototype) {\n    if (prototype \u003d\u003d null) {\n        return false;\n    }\n    if (isConstructor() \u0026\u0026 prototype \u003d\u003d getInstanceType()) {\n        return false;\n    }\n    this.prototype \u003d prototype;\n    if (isConstructor() || isInterface()) {\n        FunctionType superClass \u003d getSuperClassConstructor();\n        if (superClass !\u003d null) {\n            superClass.addSubType(this);\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/FunctionType.java",
      "functionStartLine": 335,
      "functionName": "setPrototype",
      "functionAnnotation": "",
      "functionDoc": "Sets the prototype.\n\n@param prototype the prototype. If this value is {@code null} it will\n       silently be discarded.\n"
    }
  }
}