{
  "origin": "codeshovel",
  "repositoryName": "Closure-66b",
  "repositoryPath": "/tmp/Closure-66b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ControlFlowAnalysis.java",
  "functionName": "connectToPossibleExceptionHandler",
  "functionId": "connectToPossibleExceptionHandler___cfgNode-Node__target-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
  "functionAnnotation": "",
  "functionDoc": "Connects cfgNode to the proper CATCH block if target subtree might throw\nan exception. If there are FINALLY blocks reached before a CATCH, it will\nmake the corresponding entry in finallyMap.\n",
  "functionStartLine": 820,
  "functionEndLine": 847,
  "numCommitsSeen": 16,
  "timeTaken": 1004,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,27 @@\n+private void connectToPossibleExceptionHandler(Node cfgNode, Node target) {\n+    if (mayThrowException(target) \u0026\u0026 !exceptionHandler.isEmpty()) {\n+        Node lastJump \u003d cfgNode;\n+        for (Node handler : exceptionHandler) {\n+            if (NodeUtil.isFunction(handler)) {\n+                return;\n+            }\n+            Preconditions.checkState(handler.getType() \u003d\u003d Token.TRY);\n+            Node catchBlock \u003d NodeUtil.getCatchBlock(handler);\n+            if (!NodeUtil.hasCatchHandler(catchBlock)) {\n+                if (lastJump \u003d\u003d cfgNode) {\n+                    createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n+                } else {\n+                    finallyMap.put(lastJump, handler.getLastChild());\n+                }\n+            } else {\n+                if (lastJump \u003d\u003d cfgNode) {\n+                    createEdge(cfgNode, Branch.ON_EX, catchBlock);\n+                    return;\n+                } else {\n+                    finallyMap.put(lastJump, catchBlock);\n+                }\n+            }\n+            lastJump \u003d handler;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void connectToPossibleExceptionHandler(Node cfgNode, Node target) {\n    if (mayThrowException(target) \u0026\u0026 !exceptionHandler.isEmpty()) {\n        Node lastJump \u003d cfgNode;\n        for (Node handler : exceptionHandler) {\n            if (NodeUtil.isFunction(handler)) {\n                return;\n            }\n            Preconditions.checkState(handler.getType() \u003d\u003d Token.TRY);\n            Node catchBlock \u003d NodeUtil.getCatchBlock(handler);\n            if (!NodeUtil.hasCatchHandler(catchBlock)) {\n                if (lastJump \u003d\u003d cfgNode) {\n                    createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n                } else {\n                    finallyMap.put(lastJump, handler.getLastChild());\n                }\n            } else {\n                if (lastJump \u003d\u003d cfgNode) {\n                    createEdge(cfgNode, Branch.ON_EX, catchBlock);\n                    return;\n                } else {\n                    finallyMap.put(lastJump, catchBlock);\n                }\n            }\n            lastJump \u003d handler;\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
      "functionStartLine": 805,
      "functionName": "connectToPossibleExceptionHandler",
      "functionAnnotation": "",
      "functionDoc": "Connects cfgNode to the proper CATCH block if target subtree might throw\nan exception. If there are FINALLY blocks reached before a CATCH, it will\nmake the corresponding entry in finallyMap.\n"
    }
  }
}