{
  "origin": "codeshovel",
  "repositoryName": "Closure-66b",
  "repositoryPath": "/tmp/Closure-66b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JSDocInfoBuilder.java",
  "functionName": "recordEnumParameterType",
  "functionId": "recordEnumParameterType___type-JSTypeExpression",
  "sourceFilePath": "src/com/google/javascript/rhino/JSDocInfoBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Records a parameter type to an enum.\n\n@return @code true} if the enum\u0027s parameter type was recorded and\n    {@code false} if it was invalid or already defined\n",
  "functionStartLine": 461,
  "functionEndLine": 469,
  "numCommitsSeen": 20,
  "timeTaken": 723,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+public boolean recordEnumParameterType(JSTypeExpression type) {\n+    if (type !\u003d null \u0026\u0026 !hasAnyTypeRelatedTags()) {\n+        currentInfo.setEnumParameterType(type);\n+        populated \u003d true;\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean recordEnumParameterType(JSTypeExpression type) {\n    if (type !\u003d null \u0026\u0026 !hasAnyTypeRelatedTags()) {\n        currentInfo.setEnumParameterType(type);\n        populated \u003d true;\n        return true;\n    } else {\n        return false;\n    }\n}",
      "path": "src/com/google/javascript/rhino/JSDocInfoBuilder.java",
      "functionStartLine": 430,
      "functionName": "recordEnumParameterType",
      "functionAnnotation": "",
      "functionDoc": "Records a parameter type to an enum.\n\n@return @code true} if the enum\u0027s parameter type was recorded and\n    {@code false} if it was invalid or already defined\n"
    }
  }
}