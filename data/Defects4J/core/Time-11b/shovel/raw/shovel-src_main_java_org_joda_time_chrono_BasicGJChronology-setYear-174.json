{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BasicGJChronology.java",
  "functionName": "setYear",
  "functionId": "setYear___instant-long__year-int",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/BasicGJChronology.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 174,
  "functionEndLine": 199,
  "numCommitsSeen": 29,
  "timeTaken": 4333,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "b501bed838191e3fb64fca2eb3e62d0407861dc3",
    "7b7cb44562d5942add1f093111e84a5836780de4",
    "79b24183d3e4517e3bceb2c2754758bb0e204410",
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
    "6bdd176eed470329a73d7ee08498183e579cea60",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "b501bed838191e3fb64fca2eb3e62d0407861dc3": "Yfilerename",
    "7b7cb44562d5942add1f093111e84a5836780de4": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
    "79b24183d3e4517e3bceb2c2754758bb0e204410": "Ymultichange(Ymodifierchange,Ydocchange)",
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f": "Ymultichange(Ymodifierchange,Ydocchange)",
    "6bdd176eed470329a73d7ee08498183e579cea60": "Yfilerename",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
      "path": "src/main/java/org/joda/time/chrono/BasicGJChronology.java",
      "functionStartLine": 174,
      "functionName": "setYear",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/BasicGJChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java",
      "functionStartLine": 174,
      "functionName": "setYear",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java"
      }
    },
    "b501bed838191e3fb64fca2eb3e62d0407861dc3": {
      "type": "Yfilerename",
      "commitMessage": "Refactor abstract chronology classes to be package scoped and better named\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@928 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/2/05, 1:52 PM",
      "commitName": "b501bed838191e3fb64fca2eb3e62d0407861dc3",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/2/05, 9:26 AM",
      "commitNameOld": "beec594614e14f83c57ca24414179de8f9b564ea",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java",
      "functionStartLine": 184,
      "functionName": "setYear",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java"
      }
    },
    "7b7cb44562d5942add1f093111e84a5836780de4": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
      "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/8/05, 3:57 PM",
      "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 184,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-final long setYear(long instant, int year) {\n+long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
            "newPath": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
            "oldMethodName": "setYear",
            "newMethodName": "setYear"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 184,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-final long setYear(long instant, int year) {\n+long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[final]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactor chronology classes to avoid dupication in code\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@779 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "6/8/05, 3:57 PM",
          "commitName": "7b7cb44562d5942add1f093111e84a5836780de4",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/8/05, 9:15 AM",
          "commitNameOld": "84617fb61cc9a81b10aa0918740325ae6c0a3765",
          "commitAuthorOld": "Brian S O\u0027Neill",
          "daysBetweenCommits": 0.28,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/CommonGJChronology.java",
          "functionStartLine": 184,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,19 +1,19 @@\n-final long setYear(long instant, int year) {\n+long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@param instant millis from 1970-01-01T00:00:00Z\n",
            "newValue": ""
          }
        }
      ]
    },
    "79b24183d3e4517e3bceb2c2754758bb0e204410": {
      "type": "Ymultichange(Ymodifierchange,Ydocchange)",
      "commitMessage": "Rollback to 0.99 for 1.0 release\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@726 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/18/05, 4:54 PM",
      "commitName": "79b24183d3e4517e3bceb2c2754758bb0e204410",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Rollback to 0.99 for 1.0 release\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@726 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/18/05, 4:54 PM",
          "commitName": "79b24183d3e4517e3bceb2c2754758bb0e204410",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/18/05, 3:02 PM",
          "commitNameOld": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "final long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 540,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "\n@param instant millis from 1970-01-01T00:00:00Z\n",
          "diff": "@@ -1,19 +1,19 @@\n-long setYear(long instant, int year) {\n+final long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[final]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Rollback to 0.99 for 1.0 release\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@726 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/18/05, 4:54 PM",
          "commitName": "79b24183d3e4517e3bceb2c2754758bb0e204410",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/18/05, 3:02 PM",
          "commitNameOld": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "final long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 540,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "\n@param instant millis from 1970-01-01T00:00:00Z\n",
          "diff": "@@ -1,19 +1,19 @@\n-long setYear(long instant, int year) {\n+final long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Sets the year.\n\n@param instant millis from 1970-01-01T00:00:00Z\n@param year the year to set\n",
            "newValue": "\n@param instant millis from 1970-01-01T00:00:00Z\n"
          }
        }
      ]
    },
    "e675e6d020b4261801fb6b2738acbfa7f9d00c6f": {
      "type": "Ymultichange(Ymodifierchange,Ydocchange)",
      "commitMessage": "Refactor year classes into BaseGJChronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@725 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "2/18/05, 3:02 PM",
      "commitName": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Refactor year classes into BaseGJChronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@725 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/18/05, 3:02 PM",
          "commitName": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 10.97,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 545,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "Sets the year.\n\n@param instant millis from 1970-01-01T00:00:00Z\n@param year the year to set\n",
          "diff": "@@ -1,19 +1,19 @@\n-final long setYear(long instant, int year) {\n+long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[final]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Refactor year classes into BaseGJChronology\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@725 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "2/18/05, 3:02 PM",
          "commitName": "e675e6d020b4261801fb6b2738acbfa7f9d00c6f",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 10.97,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "actualSource": "long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
          "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
          "functionStartLine": 545,
          "functionName": "setYear",
          "functionAnnotation": "",
          "functionDoc": "Sets the year.\n\n@param instant millis from 1970-01-01T00:00:00Z\n@param year the year to set\n",
          "diff": "@@ -1,19 +1,19 @@\n-final long setYear(long instant, int year) {\n+long setYear(long instant, int year) {\n     int thisYear \u003d getYear(instant);\n     int dayOfYear \u003d getDayOfYear(instant, thisYear);\n     int millisOfDay \u003d getMillisOfDay(instant);\n     if (dayOfYear \u003e (31 + 28)) {\n         if (isLeapYear(thisYear)) {\n             if (!isLeapYear(year)) {\n                 dayOfYear--;\n             }\n         } else {\n             if (isLeapYear(year)) {\n                 dayOfYear++;\n             }\n         }\n     }\n     instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n     instant +\u003d millisOfDay;\n     return instant;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@param instant millis from 1970-01-01T00:00:00Z\n",
            "newValue": "Sets the year.\n\n@param instant millis from 1970-01-01T00:00:00Z\n@param year the year to set\n"
          }
        }
      ]
    },
    "6bdd176eed470329a73d7ee08498183e579cea60": {
      "type": "Yfilerename",
      "commitMessage": "Change Chronology to abstract class\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@432 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/22/04, 8:15 AM",
      "commitName": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 7:44 AM",
      "commitNameOld": "5f9b9b675631bda3568df0d47ca305126d426011",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "final long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java",
      "functionStartLine": 568,
      "functionName": "setYear",
      "functionAnnotation": "",
      "functionDoc": "\n@param instant millis from 1970-01-01T00:00:00Z\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
        "newPath": "JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java"
      }
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yintroduced",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,19 @@\n+final long setYear(long instant, int year) {\n+    int thisYear \u003d getYear(instant);\n+    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n+    int millisOfDay \u003d getMillisOfDay(instant);\n+    if (dayOfYear \u003e (31 + 28)) {\n+        if (isLeapYear(thisYear)) {\n+            if (!isLeapYear(year)) {\n+                dayOfYear--;\n+            }\n+        } else {\n+            if (isLeapYear(year)) {\n+                dayOfYear++;\n+            }\n+        }\n+    }\n+    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n+    instant +\u003d millisOfDay;\n+    return instant;\n+}\n\\ No newline at end of file\n",
      "actualSource": "final long setYear(long instant, int year) {\n    int thisYear \u003d getYear(instant);\n    int dayOfYear \u003d getDayOfYear(instant, thisYear);\n    int millisOfDay \u003d getMillisOfDay(instant);\n    if (dayOfYear \u003e (31 + 28)) {\n        if (isLeapYear(thisYear)) {\n            if (!isLeapYear(year)) {\n                dayOfYear--;\n            }\n        } else {\n            if (isLeapYear(year)) {\n                dayOfYear++;\n            }\n        }\n    }\n    instant \u003d getYearMonthDayMillis(year, 1, dayOfYear);\n    instant +\u003d millisOfDay;\n    return instant;\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java",
      "functionStartLine": 606,
      "functionName": "setYear",
      "functionAnnotation": "",
      "functionDoc": "\n@param instant millis from 1970-01-01T00:00:00Z\n"
    }
  }
}