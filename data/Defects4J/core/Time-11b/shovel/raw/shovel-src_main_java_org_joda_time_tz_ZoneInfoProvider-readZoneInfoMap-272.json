{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZoneInfoProvider.java",
  "functionName": "readZoneInfoMap",
  "functionId": "readZoneInfoMap___din-DataInputStream__zimap-Map__String,Object__",
  "sourceFilePath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
  "functionAnnotation": "",
  "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
  "functionStartLine": 272,
  "functionEndLine": 289,
  "numCommitsSeen": 33,
  "timeTaken": 3889,
  "changeHistory": [
    "0993b376430000ffb90aa749db7eda482f9e7411",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
    "4db6cb0fc688b11f32b52651a683560d92640d80",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b"
  ],
  "changeHistoryShort": {
    "0993b376430000ffb90aa749db7eda482f9e7411": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": "Yparameterchange",
    "4db6cb0fc688b11f32b52651a683560d92640d80": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0993b376430000ffb90aa749db7eda482f9e7411": {
      "type": "Ybodychange",
      "commitMessage": "Checkstyle\n",
      "commitDate": "2/22/12, 9:35 AM",
      "commitName": "0993b376430000ffb90aa749db7eda482f9e7411",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 10:02 AM",
      "commitNameOld": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 282.02,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException ex) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
      "path": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 272,
      "functionName": "readZoneInfoMap",
      "functionAnnotation": "",
      "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
      "diff": "@@ -1,15 +1,15 @@\n private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n     int size \u003d din.readUnsignedShort();\n     String[] pool \u003d new String[size];\n     for (int i \u003d 0; i \u003c size; i++) {\n         pool[i] \u003d din.readUTF().intern();\n     }\n     size \u003d din.readUnsignedShort();\n     for (int i \u003d 0; i \u003c size; i++) {\n         try {\n             zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n-        } catch (ArrayIndexOutOfBoundsException e) {\n+        } catch (ArrayIndexOutOfBoundsException ex) {\n             throw new IOException(\"Corrupt zone info map\");\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
      "path": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 272,
      "functionName": "readZoneInfoMap",
      "functionAnnotation": "",
      "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 272,
      "functionName": "readZoneInfoMap",
      "functionAnnotation": "",
      "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": {
      "type": "Yparameterchange",
      "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 3:55 PM",
      "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/14/06, 8:03 AM",
      "commitNameOld": "ad3e968db59c8e717c6314a8cd44f054b1718dce",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 1086.33,
      "commitsBetweenForRepo": 210,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 272,
      "functionName": "readZoneInfoMap",
      "functionAnnotation": "",
      "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
      "diff": "@@ -1,15 +1,15 @@\n-private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n+private static void readZoneInfoMap(DataInputStream din, Map\u003cString, Object\u003e zimap) throws IOException {\n     int size \u003d din.readUnsignedShort();\n     String[] pool \u003d new String[size];\n     for (int i \u003d 0; i \u003c size; i++) {\n         pool[i] \u003d din.readUTF().intern();\n     }\n     size \u003d din.readUnsignedShort();\n     for (int i \u003d 0; i \u003c size; i++) {\n         try {\n             zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new IOException(\"Corrupt zone info map\");\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[din-DataInputStream, zimap-Map]",
        "newValue": "[din-DataInputStream, zimap-Map\u003cString,Object\u003e]"
      }
    },
    "4db6cb0fc688b11f32b52651a683560d92640d80": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
      "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "3/5/05, 9:21 AM",
      "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "3/5/05, 9:21 AM",
          "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "3/3/05, 2:54 PM",
          "commitNameOld": "ce5cb6026c654f0ec928dfb2d9761bea2216e2df",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.77,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 267,
          "functionName": "readZoneInfoMap",
          "functionAnnotation": "",
          "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
          "diff": "@@ -1,15 +1,15 @@\n-static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n+private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n     int size \u003d din.readUnsignedShort();\n     String[] pool \u003d new String[size];\n     for (int i \u003d 0; i \u003c size; i++) {\n         pool[i] \u003d din.readUTF().intern();\n     }\n     size \u003d din.readUnsignedShort();\n     for (int i \u003d 0; i \u003c size; i++) {\n         try {\n             zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new IOException(\"Corrupt zone info map\");\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java",
            "newPath": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
            "oldMethodName": "readZoneInfoMap",
            "newMethodName": "readZoneInfoMap"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "3/5/05, 9:21 AM",
          "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "3/3/05, 2:54 PM",
          "commitNameOld": "ce5cb6026c654f0ec928dfb2d9761bea2216e2df",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.77,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 267,
          "functionName": "readZoneInfoMap",
          "functionAnnotation": "",
          "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
          "diff": "@@ -1,15 +1,15 @@\n-static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n+private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n     int size \u003d din.readUnsignedShort();\n     String[] pool \u003d new String[size];\n     for (int i \u003d 0; i \u003c size; i++) {\n         pool[i] \u003d din.readUTF().intern();\n     }\n     size \u003d din.readUnsignedShort();\n     for (int i \u003d 0; i \u003c size; i++) {\n         try {\n             zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new IOException(\"Corrupt zone info map\");\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "3/5/05, 9:21 AM",
          "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "3/3/05, 2:54 PM",
          "commitNameOld": "ce5cb6026c654f0ec928dfb2d9761bea2216e2df",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 1.77,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 267,
          "functionName": "readZoneInfoMap",
          "functionAnnotation": "",
          "functionDoc": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n",
          "diff": "@@ -1,15 +1,15 @@\n-static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n+private static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n     int size \u003d din.readUnsignedShort();\n     String[] pool \u003d new String[size];\n     for (int i \u003d 0; i \u003c size; i++) {\n         pool[i] \u003d din.readUTF().intern();\n     }\n     size \u003d din.readUnsignedShort();\n     for (int i \u003d 0; i \u003c size; i++) {\n         try {\n             zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n         } catch (ArrayIndexOutOfBoundsException e) {\n             throw new IOException(\"Corrupt zone info map\");\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\n@param zimap gets filled with string id to string id mappings\n",
            "newValue": "Reads the zone info map from file.\n\n@param din the input stream\n@param zimap gets filled with string id to string id mappings\n"
          }
        }
      ]
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Yintroduced",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,15 @@\n+static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n+    int size \u003d din.readUnsignedShort();\n+    String[] pool \u003d new String[size];\n+    for (int i \u003d 0; i \u003c size; i++) {\n+        pool[i] \u003d din.readUTF().intern();\n+    }\n+    size \u003d din.readUnsignedShort();\n+    for (int i \u003d 0; i \u003c size; i++) {\n+        try {\n+            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n+        } catch (ArrayIndexOutOfBoundsException e) {\n+            throw new IOException(\"Corrupt zone info map\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static void readZoneInfoMap(DataInputStream din, Map zimap) throws IOException {\n    int size \u003d din.readUnsignedShort();\n    String[] pool \u003d new String[size];\n    for (int i \u003d 0; i \u003c size; i++) {\n        pool[i] \u003d din.readUTF().intern();\n    }\n    size \u003d din.readUnsignedShort();\n    for (int i \u003d 0; i \u003c size; i++) {\n        try {\n            zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new IOException(\"Corrupt zone info map\");\n        }\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java",
      "functionStartLine": 190,
      "functionName": "readZoneInfoMap",
      "functionAnnotation": "",
      "functionDoc": "\n@param zimap gets filled with string id to string id mappings\n"
    }
  }
}