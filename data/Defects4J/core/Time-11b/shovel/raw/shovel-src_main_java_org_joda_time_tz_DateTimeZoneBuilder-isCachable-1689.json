{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeZoneBuilder.java",
  "functionName": "isCachable",
  "functionId": "$isCachable",
  "sourceFilePath": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1689,
  "functionEndLine": 1726,
  "numCommitsSeen": 24,
  "timeTaken": 2378,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean isCachable() {\n    if (iTailZone !\u003d null) {\n        return true;\n    }\n    long[] transitions \u003d iTransitions;\n    if (transitions.length \u003c\u003d 1) {\n        return false;\n    }\n    double distances \u003d 0;\n    int count \u003d 0;\n    for (int i \u003d 1; i \u003c transitions.length; i++) {\n        long diff \u003d transitions[i] - transitions[i - 1];\n        if (diff \u003c ((366L + 365) * 24 * 60 * 60 * 1000)) {\n            distances +\u003d (double) diff;\n            count++;\n        }\n    }\n    if (count \u003e 0) {\n        double avg \u003d distances / count;\n        avg /\u003d 24 * 60 * 60 * 1000;\n        if (avg \u003e\u003d 25) {\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1689,
      "functionName": "isCachable",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
        "newPath": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public boolean isCachable() {\n    if (iTailZone !\u003d null) {\n        return true;\n    }\n    long[] transitions \u003d iTransitions;\n    if (transitions.length \u003c\u003d 1) {\n        return false;\n    }\n    double distances \u003d 0;\n    int count \u003d 0;\n    for (int i \u003d 1; i \u003c transitions.length; i++) {\n        long diff \u003d transitions[i] - transitions[i - 1];\n        if (diff \u003c ((366L + 365) * 24 * 60 * 60 * 1000)) {\n            distances +\u003d (double) diff;\n            count++;\n        }\n    }\n    if (count \u003e 0) {\n        double avg \u003d distances / count;\n        avg /\u003d 24 * 60 * 60 * 1000;\n        if (avg \u003e\u003d 25) {\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1685,
      "functionName": "isCachable",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java"
      }
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,26 @@\n+public boolean isCachable() {\n+    if (iTailZone !\u003d null) {\n+        return true;\n+    }\n+    long[] transitions \u003d iTransitions;\n+    if (transitions.length \u003c\u003d 1) {\n+        return false;\n+    }\n+    double distances \u003d 0;\n+    int count \u003d 0;\n+    for (int i \u003d 1; i \u003c transitions.length; i++) {\n+        long diff \u003d transitions[i] - transitions[i - 1];\n+        if (diff \u003c ((366L + 365) * 24 * 60 * 60 * 1000)) {\n+            distances +\u003d (double) diff;\n+            count++;\n+        }\n+    }\n+    if (count \u003e 0) {\n+        double avg \u003d distances / count;\n+        avg /\u003d 24 * 60 * 60 * 1000;\n+        if (avg \u003e\u003d 25) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public boolean isCachable() {\n    if (iTailZone !\u003d null) {\n        return true;\n    }\n    long[] transitions \u003d iTransitions;\n    if (transitions.length \u003c\u003d 1) {\n        return false;\n    }\n    double distances \u003d 0;\n    int count \u003d 0;\n    for (int i \u003d 1; i \u003c transitions.length; i++) {\n        long diff \u003d transitions[i] - transitions[i - 1];\n        if (diff \u003c ((366L + 365) * 24 * 60 * 60 * 1000)) {\n            distances +\u003d (double) diff;\n            count++;\n        }\n    }\n    if (count \u003e 0) {\n        double avg \u003d distances / count;\n        avg /\u003d 24 * 60 * 60 * 1000;\n        if (avg \u003e\u003d 25) {\n            return true;\n        }\n    }\n    return false;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1516,
      "functionName": "isCachable",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}