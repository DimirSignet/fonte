{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZoneInfoProvider.java",
  "functionName": "getZone",
  "functionId": "getZone___id-String",
  "sourceFilePath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
  "functionAnnotation": "",
  "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
  "functionStartLine": 135,
  "functionEndLine": 163,
  "numCommitsSeen": 17,
  "timeTaken": 891,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "a7416aad902ed34ca44f03b1edd3d6ea6f9c721f",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
    "4db6cb0fc688b11f32b52651a683560d92640d80",
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "a7416aad902ed34ca44f03b1edd3d6ea6f9c721f": "Ymodifierchange",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": "Ybodychange",
    "4db6cb0fc688b11f32b52651a683560d92640d80": "Ydocchange",
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737": "Ymultichange(Yrename,Ybodychange)",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference\u003c?\u003e) {\n        @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n        DateTimeZone tz \u003d ref.get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
      "path": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 135,
      "functionName": "getZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "a7416aad902ed34ca44f03b1edd3d6ea6f9c721f": {
      "type": "Ymodifierchange",
      "commitMessage": "DateTimeZone.forID(String) now case-sensitive\nUse ConcurrentHashMap instead of synchronized\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1579 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "10/27/10, 1:41 PM",
      "commitName": "a7416aad902ed34ca44f03b1edd3d6ea6f9c721f",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:17 PM",
      "commitNameOld": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 79.85,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "actualSource": "public DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference\u003c?\u003e) {\n        @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n        DateTimeZone tz \u003d ref.get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 135,
      "functionName": "getZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
      "diff": "@@ -1,21 +1,21 @@\n-public synchronized DateTimeZone getZone(String id) {\n+public DateTimeZone getZone(String id) {\n     if (id \u003d\u003d null) {\n         return null;\n     }\n     Object obj \u003d iZoneInfoMap.get(id);\n     if (obj \u003d\u003d null) {\n         return null;\n     }\n     if (id.equals(obj)) {\n         return loadZoneData(id);\n     }\n     if (obj instanceof SoftReference\u003c?\u003e) {\n         @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n         DateTimeZone tz \u003d ref.get();\n         if (tz !\u003d null) {\n             return tz;\n         }\n         return loadZoneData(id);\n     }\n     return getZone((String) obj);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference\u003c?\u003e) {\n        @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n        DateTimeZone tz \u003d ref.get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 135,
      "functionName": "getZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": {
      "type": "Ybodychange",
      "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 3:55 PM",
      "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/14/06, 8:03 AM",
      "commitNameOld": "ad3e968db59c8e717c6314a8cd44f054b1718dce",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 1086.33,
      "commitsBetweenForRepo": 210,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference\u003c?\u003e) {\n        @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n        DateTimeZone tz \u003d ref.get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 135,
      "functionName": "getZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
      "diff": "@@ -1,20 +1,21 @@\n public synchronized DateTimeZone getZone(String id) {\n     if (id \u003d\u003d null) {\n         return null;\n     }\n     Object obj \u003d iZoneInfoMap.get(id);\n     if (obj \u003d\u003d null) {\n         return null;\n     }\n     if (id.equals(obj)) {\n         return loadZoneData(id);\n     }\n-    if (obj instanceof SoftReference) {\n-        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n+    if (obj instanceof SoftReference\u003c?\u003e) {\n+        @SuppressWarnings(\"unchecked\") SoftReference\u003cDateTimeZone\u003e ref \u003d (SoftReference\u003cDateTimeZone\u003e) obj;\n+        DateTimeZone tz \u003d ref.get();\n         if (tz !\u003d null) {\n             return tz;\n         }\n         return loadZoneData(id);\n     }\n     return getZone((String) obj);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4db6cb0fc688b11f32b52651a683560d92640d80": {
      "type": "Ydocchange",
      "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "3/5/05, 9:21 AM",
      "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/7/05, 3:51 PM",
      "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 25.73,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "actualSource": "public synchronized DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference) {\n        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 135,
      "functionName": "getZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n",
        "newValue": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n\n@param id the id to load\n@return the loaded zone\n"
      }
    },
    "a26563f0cd1fbdd5587a0f9d3c0c77864553d737": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Rename getDateTimeZone methods to getZone etc\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@177 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "4/14/04, 4:43 PM",
      "commitName": "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Rename getDateTimeZone methods to getZone etc\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@177 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "4/14/04, 4:43 PM",
          "commitName": "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "1/3/04, 4:24 AM",
          "commitNameOld": "35aca9c2020c7c426b67fbe19e57ddcb9f1b389d",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 102.47,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "actualSource": "public synchronized DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference) {\n        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 180,
          "functionName": "getZone",
          "functionAnnotation": "",
          "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n",
          "diff": "@@ -1,20 +1,20 @@\n-public synchronized DateTimeZone getDateTimeZone(String id) {\n+public synchronized DateTimeZone getZone(String id) {\n     if (id \u003d\u003d null) {\n         return null;\n     }\n     Object obj \u003d iZoneInfoMap.get(id);\n     if (obj \u003d\u003d null) {\n         return null;\n     }\n     if (id.equals(obj)) {\n         return loadZoneData(id);\n     }\n     if (obj instanceof SoftReference) {\n         DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n         if (tz !\u003d null) {\n             return tz;\n         }\n         return loadZoneData(id);\n     }\n-    return getDateTimeZone((String) obj);\n+    return getZone((String) obj);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "getDateTimeZone",
            "newValue": "getZone"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename getDateTimeZone methods to getZone etc\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@177 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "4/14/04, 4:43 PM",
          "commitName": "a26563f0cd1fbdd5587a0f9d3c0c77864553d737",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "1/3/04, 4:24 AM",
          "commitNameOld": "35aca9c2020c7c426b67fbe19e57ddcb9f1b389d",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 102.47,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "actualSource": "public synchronized DateTimeZone getZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference) {\n        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getZone((String) obj);\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 180,
          "functionName": "getZone",
          "functionAnnotation": "",
          "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n",
          "diff": "@@ -1,20 +1,20 @@\n-public synchronized DateTimeZone getDateTimeZone(String id) {\n+public synchronized DateTimeZone getZone(String id) {\n     if (id \u003d\u003d null) {\n         return null;\n     }\n     Object obj \u003d iZoneInfoMap.get(id);\n     if (obj \u003d\u003d null) {\n         return null;\n     }\n     if (id.equals(obj)) {\n         return loadZoneData(id);\n     }\n     if (obj instanceof SoftReference) {\n         DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n         if (tz !\u003d null) {\n             return tz;\n         }\n         return loadZoneData(id);\n     }\n-    return getDateTimeZone((String) obj);\n+    return getZone((String) obj);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,20 @@\n+public synchronized DateTimeZone getDateTimeZone(String id) {\n+    if (id \u003d\u003d null) {\n+        return null;\n+    }\n+    Object obj \u003d iZoneInfoMap.get(id);\n+    if (obj \u003d\u003d null) {\n+        return null;\n+    }\n+    if (id.equals(obj)) {\n+        return loadZoneData(id);\n+    }\n+    if (obj instanceof SoftReference) {\n+        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n+        if (tz !\u003d null) {\n+            return tz;\n+        }\n+        return loadZoneData(id);\n+    }\n+    return getDateTimeZone((String) obj);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public synchronized DateTimeZone getDateTimeZone(String id) {\n    if (id \u003d\u003d null) {\n        return null;\n    }\n    Object obj \u003d iZoneInfoMap.get(id);\n    if (obj \u003d\u003d null) {\n        return null;\n    }\n    if (id.equals(obj)) {\n        return loadZoneData(id);\n    }\n    if (obj instanceof SoftReference) {\n        DateTimeZone tz \u003d (DateTimeZone) ((SoftReference) obj).get();\n        if (tz !\u003d null) {\n            return tz;\n        }\n        return loadZoneData(id);\n    }\n    return getDateTimeZone((String) obj);\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 164,
      "functionName": "getDateTimeZone",
      "functionAnnotation": "",
      "functionDoc": "If an error is thrown while loading zone data, uncaughtException is\ncalled to log the error and null is returned for this and all future\nrequests.\n"
    }
  }
}