{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DateTimeZoneBuilder.java",
  "functionName": "firstTransition",
  "functionId": "$firstTransition___firstMillis-long(modifiers-final)",
  "sourceFilePath": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n",
  "functionStartLine": 1010,
  "functionEndLine": 1068,
  "numCommitsSeen": 24,
  "timeTaken": 2610,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "e1b20335ff8c90189a7dce4b43107edc0313eb71",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "e1b20335ff8c90189a7dce4b43107edc0313eb71": "Ybodychange",
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": "Ybodychange",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Transition firstTransition(final long firstMillis) {\n    if (iInitialNameKey !\u003d null) {\n        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n    }\n    ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n    long millis \u003d Long.MIN_VALUE;\n    int saveMillis \u003d 0;\n    Transition first \u003d null;\n    Transition next;\n    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n        millis \u003d next.getMillis();\n        if (millis \u003d\u003d firstMillis) {\n            first \u003d new Transition(firstMillis, next);\n            break;\n        }\n        if (millis \u003e firstMillis) {\n            if (first \u003d\u003d null) {\n                for (Rule rule : copy) {\n                    if (rule.getSaveMillis() \u003d\u003d 0) {\n                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                        break;\n                    }\n                }\n            }\n            if (first \u003d\u003d null) {\n                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n            }\n            break;\n        }\n        first \u003d new Transition(firstMillis, next);\n        saveMillis \u003d next.getSaveMillis();\n    }\n    iRules \u003d copy;\n    return first;\n}",
      "path": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1010,
      "functionName": "firstTransition",
      "functionAnnotation": "",
      "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
        "newPath": "src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Transition firstTransition(final long firstMillis) {\n    if (iInitialNameKey !\u003d null) {\n        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n    }\n    ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n    long millis \u003d Long.MIN_VALUE;\n    int saveMillis \u003d 0;\n    Transition first \u003d null;\n    Transition next;\n    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n        millis \u003d next.getMillis();\n        if (millis \u003d\u003d firstMillis) {\n            first \u003d new Transition(firstMillis, next);\n            break;\n        }\n        if (millis \u003e firstMillis) {\n            if (first \u003d\u003d null) {\n                for (Rule rule : copy) {\n                    if (rule.getSaveMillis() \u003d\u003d 0) {\n                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                        break;\n                    }\n                }\n            }\n            if (first \u003d\u003d null) {\n                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n            }\n            break;\n        }\n        first \u003d new Transition(firstMillis, next);\n        saveMillis \u003d next.getSaveMillis();\n    }\n    iRules \u003d copy;\n    return first;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1010,
      "functionName": "firstTransition",
      "functionAnnotation": "",
      "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java"
      }
    },
    "e1b20335ff8c90189a7dce4b43107edc0313eb71": {
      "type": "Ybodychange",
      "commitMessage": "Move to Java 5 with foreach loop\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1407 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 4:01 PM",
      "commitName": "e1b20335ff8c90189a7dce4b43107edc0313eb71",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/4/09, 3:55 PM",
      "commitNameOld": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Transition firstTransition(final long firstMillis) {\n    if (iInitialNameKey !\u003d null) {\n        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n    }\n    ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n    long millis \u003d Long.MIN_VALUE;\n    int saveMillis \u003d 0;\n    Transition first \u003d null;\n    Transition next;\n    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n        millis \u003d next.getMillis();\n        if (millis \u003d\u003d firstMillis) {\n            first \u003d new Transition(firstMillis, next);\n            break;\n        }\n        if (millis \u003e firstMillis) {\n            if (first \u003d\u003d null) {\n                for (Rule rule : copy) {\n                    if (rule.getSaveMillis() \u003d\u003d 0) {\n                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                        break;\n                    }\n                }\n            }\n            if (first \u003d\u003d null) {\n                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n            }\n            break;\n        }\n        first \u003d new Transition(firstMillis, next);\n        saveMillis \u003d next.getSaveMillis();\n    }\n    iRules \u003d copy;\n    return first;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1010,
      "functionName": "firstTransition",
      "functionAnnotation": "",
      "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n",
      "diff": "@@ -1,37 +1,35 @@\n public Transition firstTransition(final long firstMillis) {\n     if (iInitialNameKey !\u003d null) {\n         return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n     }\n     ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n     long millis \u003d Long.MIN_VALUE;\n     int saveMillis \u003d 0;\n     Transition first \u003d null;\n     Transition next;\n     while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n         millis \u003d next.getMillis();\n         if (millis \u003d\u003d firstMillis) {\n             first \u003d new Transition(firstMillis, next);\n             break;\n         }\n         if (millis \u003e firstMillis) {\n             if (first \u003d\u003d null) {\n-                Iterator\u003cRule\u003e it \u003d copy.iterator();\n-                while (it.hasNext()) {\n-                    Rule rule \u003d it.next();\n+                for (Rule rule : copy) {\n                     if (rule.getSaveMillis() \u003d\u003d 0) {\n                         first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                         break;\n                     }\n                 }\n             }\n             if (first \u003d\u003d null) {\n                 first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n             }\n             break;\n         }\n         first \u003d new Transition(firstMillis, next);\n         saveMillis \u003d next.getSaveMillis();\n     }\n     iRules \u003d copy;\n     return first;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3f1e047c898c9c925e1faac33bb07e1cb05d88cb": {
      "type": "Ybodychange",
      "commitMessage": "Move to Java 5 with generics\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1406 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "11/4/09, 3:55 PM",
      "commitName": "3f1e047c898c9c925e1faac33bb07e1cb05d88cb",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/13/09, 4:26 PM",
      "commitNameOld": "6cd3a18f8cb3c907107017849ab1ac3b88e43fb5",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 83.02,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public Transition firstTransition(final long firstMillis) {\n    if (iInitialNameKey !\u003d null) {\n        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n    }\n    ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n    long millis \u003d Long.MIN_VALUE;\n    int saveMillis \u003d 0;\n    Transition first \u003d null;\n    Transition next;\n    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n        millis \u003d next.getMillis();\n        if (millis \u003d\u003d firstMillis) {\n            first \u003d new Transition(firstMillis, next);\n            break;\n        }\n        if (millis \u003e firstMillis) {\n            if (first \u003d\u003d null) {\n                Iterator\u003cRule\u003e it \u003d copy.iterator();\n                while (it.hasNext()) {\n                    Rule rule \u003d it.next();\n                    if (rule.getSaveMillis() \u003d\u003d 0) {\n                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                        break;\n                    }\n                }\n            }\n            if (first \u003d\u003d null) {\n                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n            }\n            break;\n        }\n        first \u003d new Transition(firstMillis, next);\n        saveMillis \u003d next.getSaveMillis();\n    }\n    iRules \u003d copy;\n    return first;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 1010,
      "functionName": "firstTransition",
      "functionAnnotation": "",
      "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n",
      "diff": "@@ -1,37 +1,37 @@\n public Transition firstTransition(final long firstMillis) {\n     if (iInitialNameKey !\u003d null) {\n         return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n     }\n-    ArrayList copy \u003d new ArrayList(iRules);\n+    ArrayList\u003cRule\u003e copy \u003d new ArrayList\u003cRule\u003e(iRules);\n     long millis \u003d Long.MIN_VALUE;\n     int saveMillis \u003d 0;\n     Transition first \u003d null;\n     Transition next;\n     while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n         millis \u003d next.getMillis();\n         if (millis \u003d\u003d firstMillis) {\n             first \u003d new Transition(firstMillis, next);\n             break;\n         }\n         if (millis \u003e firstMillis) {\n             if (first \u003d\u003d null) {\n-                Iterator it \u003d copy.iterator();\n+                Iterator\u003cRule\u003e it \u003d copy.iterator();\n                 while (it.hasNext()) {\n-                    Rule rule \u003d (Rule) it.next();\n+                    Rule rule \u003d it.next();\n                     if (rule.getSaveMillis() \u003d\u003d 0) {\n                         first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                         break;\n                     }\n                 }\n             }\n             if (first \u003d\u003d null) {\n                 first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n             }\n             break;\n         }\n         first \u003d new Transition(firstMillis, next);\n         saveMillis \u003d next.getSaveMillis();\n     }\n     iRules \u003d copy;\n     return first;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,37 @@\n+public Transition firstTransition(final long firstMillis) {\n+    if (iInitialNameKey !\u003d null) {\n+        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n+    }\n+    ArrayList copy \u003d new ArrayList(iRules);\n+    long millis \u003d Long.MIN_VALUE;\n+    int saveMillis \u003d 0;\n+    Transition first \u003d null;\n+    Transition next;\n+    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n+        millis \u003d next.getMillis();\n+        if (millis \u003d\u003d firstMillis) {\n+            first \u003d new Transition(firstMillis, next);\n+            break;\n+        }\n+        if (millis \u003e firstMillis) {\n+            if (first \u003d\u003d null) {\n+                Iterator it \u003d copy.iterator();\n+                while (it.hasNext()) {\n+                    Rule rule \u003d (Rule) it.next();\n+                    if (rule.getSaveMillis() \u003d\u003d 0) {\n+                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n+                        break;\n+                    }\n+                }\n+            }\n+            if (first \u003d\u003d null) {\n+                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n+            }\n+            break;\n+        }\n+        first \u003d new Transition(firstMillis, next);\n+        saveMillis \u003d next.getSaveMillis();\n+    }\n+    iRules \u003d copy;\n+    return first;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Transition firstTransition(final long firstMillis) {\n    if (iInitialNameKey !\u003d null) {\n        return new Transition(firstMillis, iInitialNameKey, iStandardOffset + iInitialSaveMillis, iStandardOffset);\n    }\n    ArrayList copy \u003d new ArrayList(iRules);\n    long millis \u003d Long.MIN_VALUE;\n    int saveMillis \u003d 0;\n    Transition first \u003d null;\n    Transition next;\n    while ((next \u003d nextTransition(millis, saveMillis)) !\u003d null) {\n        millis \u003d next.getMillis();\n        if (millis \u003d\u003d firstMillis) {\n            first \u003d new Transition(firstMillis, next);\n            break;\n        }\n        if (millis \u003e firstMillis) {\n            if (first \u003d\u003d null) {\n                Iterator it \u003d copy.iterator();\n                while (it.hasNext()) {\n                    Rule rule \u003d (Rule) it.next();\n                    if (rule.getSaveMillis() \u003d\u003d 0) {\n                        first \u003d new Transition(firstMillis, rule, iStandardOffset);\n                        break;\n                    }\n                }\n            }\n            if (first \u003d\u003d null) {\n                first \u003d new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset);\n            }\n            break;\n        }\n        first \u003d new Transition(firstMillis, next);\n        saveMillis \u003d next.getSaveMillis();\n    }\n    iRules \u003d copy;\n    return first;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java",
      "functionStartLine": 992,
      "functionName": "firstTransition",
      "functionAnnotation": "",
      "functionDoc": "Returns a transition at firstMillis with the first name key and\noffsets for this rule set. This method may return null.\n\n@param firstMillis millis of first transition\n"
    }
  }
}