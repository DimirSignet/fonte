{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AssembledChronology.java",
  "functionName": "copyFieldsFrom",
  "functionId": "$copyFieldsFrom___chrono-Chronology",
  "sourceFilePath": "src/main/java/org/joda/time/chrono/AssembledChronology.java",
  "functionAnnotation": "",
  "functionDoc": "Copy the supported fields from a chronology into this container.\n",
  "functionStartLine": 442,
  "functionEndLine": 555,
  "numCommitsSeen": 12,
  "timeTaken": 3505,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "c5a0687412741edbf6e78fb779a24153b8a5d189",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "c5a0687412741edbf6e78fb779a24153b8a5d189": "Ybodychange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void copyFieldsFrom(Chronology chrono) {\n    {\n        DurationField f;\n        if (isSupported(f \u003d chrono.millis())) {\n            millis \u003d f;\n        }\n        if (isSupported(f \u003d chrono.seconds())) {\n            seconds \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minutes())) {\n            minutes \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hours())) {\n            hours \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdays())) {\n            halfdays \u003d f;\n        }\n        if (isSupported(f \u003d chrono.days())) {\n            days \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weeks())) {\n            weeks \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyears())) {\n            weekyears \u003d f;\n        }\n        if (isSupported(f \u003d chrono.months())) {\n            months \u003d f;\n        }\n        if (isSupported(f \u003d chrono.years())) {\n            years \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuries())) {\n            centuries \u003d f;\n        }\n        if (isSupported(f \u003d chrono.eras())) {\n            eras \u003d f;\n        }\n    }\n    {\n        DateTimeField f;\n        if (isSupported(f \u003d chrono.millisOfSecond())) {\n            millisOfSecond \u003d f;\n        }\n        if (isSupported(f \u003d chrono.millisOfDay())) {\n            millisOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfMinute())) {\n            secondOfMinute \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfDay())) {\n            secondOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfHour())) {\n            minuteOfHour \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfDay())) {\n            minuteOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfDay())) {\n            hourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfDay())) {\n            clockhourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfHalfday())) {\n            hourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n            clockhourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdayOfDay())) {\n            halfdayOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfWeek())) {\n            dayOfWeek \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfMonth())) {\n            dayOfMonth \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfYear())) {\n            dayOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n            weekOfWeekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyear())) {\n            weekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyearOfCentury())) {\n            weekyearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.monthOfYear())) {\n            monthOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.year())) {\n            year \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfEra())) {\n            yearOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfCentury())) {\n            yearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuryOfEra())) {\n            centuryOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.era())) {\n            era \u003d f;\n        }\n    }\n}",
      "path": "src/main/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 442,
      "functionName": "copyFieldsFrom",
      "functionAnnotation": "",
      "functionDoc": "Copy the supported fields from a chronology into this container.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java",
        "newPath": "src/main/java/org/joda/time/chrono/AssembledChronology.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void copyFieldsFrom(Chronology chrono) {\n    {\n        DurationField f;\n        if (isSupported(f \u003d chrono.millis())) {\n            millis \u003d f;\n        }\n        if (isSupported(f \u003d chrono.seconds())) {\n            seconds \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minutes())) {\n            minutes \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hours())) {\n            hours \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdays())) {\n            halfdays \u003d f;\n        }\n        if (isSupported(f \u003d chrono.days())) {\n            days \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weeks())) {\n            weeks \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyears())) {\n            weekyears \u003d f;\n        }\n        if (isSupported(f \u003d chrono.months())) {\n            months \u003d f;\n        }\n        if (isSupported(f \u003d chrono.years())) {\n            years \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuries())) {\n            centuries \u003d f;\n        }\n        if (isSupported(f \u003d chrono.eras())) {\n            eras \u003d f;\n        }\n    }\n    {\n        DateTimeField f;\n        if (isSupported(f \u003d chrono.millisOfSecond())) {\n            millisOfSecond \u003d f;\n        }\n        if (isSupported(f \u003d chrono.millisOfDay())) {\n            millisOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfMinute())) {\n            secondOfMinute \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfDay())) {\n            secondOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfHour())) {\n            minuteOfHour \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfDay())) {\n            minuteOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfDay())) {\n            hourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfDay())) {\n            clockhourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfHalfday())) {\n            hourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n            clockhourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdayOfDay())) {\n            halfdayOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfWeek())) {\n            dayOfWeek \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfMonth())) {\n            dayOfMonth \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfYear())) {\n            dayOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n            weekOfWeekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyear())) {\n            weekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyearOfCentury())) {\n            weekyearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.monthOfYear())) {\n            monthOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.year())) {\n            year \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfEra())) {\n            yearOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfCentury())) {\n            yearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuryOfEra())) {\n            centuryOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.era())) {\n            era \u003d f;\n        }\n    }\n}",
      "path": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 442,
      "functionName": "copyFieldsFrom",
      "functionAnnotation": "",
      "functionDoc": "Copy the supported fields from a chronology into this container.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java"
      }
    },
    "c5a0687412741edbf6e78fb779a24153b8a5d189": {
      "type": "Ybodychange",
      "commitMessage": "Add halfdays and weekyearOfCentury fields\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@471 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "9/3/04, 1:48 PM",
      "commitName": "c5a0687412741edbf6e78fb779a24153b8a5d189",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/22/04, 8:15 AM",
      "commitNameOld": "6bdd176eed470329a73d7ee08498183e579cea60",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 12.23,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "actualSource": "public void copyFieldsFrom(Chronology chrono) {\n    {\n        DurationField f;\n        if (isSupported(f \u003d chrono.millis())) {\n            millis \u003d f;\n        }\n        if (isSupported(f \u003d chrono.seconds())) {\n            seconds \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minutes())) {\n            minutes \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hours())) {\n            hours \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdays())) {\n            halfdays \u003d f;\n        }\n        if (isSupported(f \u003d chrono.days())) {\n            days \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weeks())) {\n            weeks \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyears())) {\n            weekyears \u003d f;\n        }\n        if (isSupported(f \u003d chrono.months())) {\n            months \u003d f;\n        }\n        if (isSupported(f \u003d chrono.years())) {\n            years \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuries())) {\n            centuries \u003d f;\n        }\n        if (isSupported(f \u003d chrono.eras())) {\n            eras \u003d f;\n        }\n    }\n    {\n        DateTimeField f;\n        if (isSupported(f \u003d chrono.millisOfSecond())) {\n            millisOfSecond \u003d f;\n        }\n        if (isSupported(f \u003d chrono.millisOfDay())) {\n            millisOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfMinute())) {\n            secondOfMinute \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfDay())) {\n            secondOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfHour())) {\n            minuteOfHour \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfDay())) {\n            minuteOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfDay())) {\n            hourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfDay())) {\n            clockhourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfHalfday())) {\n            hourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n            clockhourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdayOfDay())) {\n            halfdayOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfWeek())) {\n            dayOfWeek \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfMonth())) {\n            dayOfMonth \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfYear())) {\n            dayOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n            weekOfWeekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyear())) {\n            weekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyearOfCentury())) {\n            weekyearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.monthOfYear())) {\n            monthOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.year())) {\n            year \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfEra())) {\n            yearOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfCentury())) {\n            yearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuryOfEra())) {\n            centuryOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.era())) {\n            era \u003d f;\n        }\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 480,
      "functionName": "copyFieldsFrom",
      "functionAnnotation": "",
      "functionDoc": "Copy the supported fields from a chronology into this container.\n",
      "diff": "@@ -1,107 +1,113 @@\n public void copyFieldsFrom(Chronology chrono) {\n     {\n         DurationField f;\n         if (isSupported(f \u003d chrono.millis())) {\n             millis \u003d f;\n         }\n         if (isSupported(f \u003d chrono.seconds())) {\n             seconds \u003d f;\n         }\n         if (isSupported(f \u003d chrono.minutes())) {\n             minutes \u003d f;\n         }\n         if (isSupported(f \u003d chrono.hours())) {\n             hours \u003d f;\n         }\n+        if (isSupported(f \u003d chrono.halfdays())) {\n+            halfdays \u003d f;\n+        }\n         if (isSupported(f \u003d chrono.days())) {\n             days \u003d f;\n         }\n         if (isSupported(f \u003d chrono.weeks())) {\n             weeks \u003d f;\n         }\n         if (isSupported(f \u003d chrono.weekyears())) {\n             weekyears \u003d f;\n         }\n         if (isSupported(f \u003d chrono.months())) {\n             months \u003d f;\n         }\n         if (isSupported(f \u003d chrono.years())) {\n             years \u003d f;\n         }\n         if (isSupported(f \u003d chrono.centuries())) {\n             centuries \u003d f;\n         }\n         if (isSupported(f \u003d chrono.eras())) {\n             eras \u003d f;\n         }\n     }\n     {\n         DateTimeField f;\n         if (isSupported(f \u003d chrono.millisOfSecond())) {\n             millisOfSecond \u003d f;\n         }\n         if (isSupported(f \u003d chrono.millisOfDay())) {\n             millisOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.secondOfMinute())) {\n             secondOfMinute \u003d f;\n         }\n         if (isSupported(f \u003d chrono.secondOfDay())) {\n             secondOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.minuteOfHour())) {\n             minuteOfHour \u003d f;\n         }\n         if (isSupported(f \u003d chrono.minuteOfDay())) {\n             minuteOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.hourOfDay())) {\n             hourOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.clockhourOfDay())) {\n             clockhourOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.hourOfHalfday())) {\n             hourOfHalfday \u003d f;\n         }\n         if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n             clockhourOfHalfday \u003d f;\n         }\n         if (isSupported(f \u003d chrono.halfdayOfDay())) {\n             halfdayOfDay \u003d f;\n         }\n         if (isSupported(f \u003d chrono.dayOfWeek())) {\n             dayOfWeek \u003d f;\n         }\n         if (isSupported(f \u003d chrono.dayOfMonth())) {\n             dayOfMonth \u003d f;\n         }\n         if (isSupported(f \u003d chrono.dayOfYear())) {\n             dayOfYear \u003d f;\n         }\n         if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n             weekOfWeekyear \u003d f;\n         }\n         if (isSupported(f \u003d chrono.weekyear())) {\n             weekyear \u003d f;\n         }\n+        if (isSupported(f \u003d chrono.weekyearOfCentury())) {\n+            weekyearOfCentury \u003d f;\n+        }\n         if (isSupported(f \u003d chrono.monthOfYear())) {\n             monthOfYear \u003d f;\n         }\n         if (isSupported(f \u003d chrono.year())) {\n             year \u003d f;\n         }\n         if (isSupported(f \u003d chrono.yearOfEra())) {\n             yearOfEra \u003d f;\n         }\n         if (isSupported(f \u003d chrono.yearOfCentury())) {\n             yearOfCentury \u003d f;\n         }\n         if (isSupported(f \u003d chrono.centuryOfEra())) {\n             centuryOfEra \u003d f;\n         }\n         if (isSupported(f \u003d chrono.era())) {\n             era \u003d f;\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yintroduced",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "diff": "@@ -0,0 +1,107 @@\n+public void copyFieldsFrom(Chronology chrono) {\n+    {\n+        DurationField f;\n+        if (isSupported(f \u003d chrono.millis())) {\n+            millis \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.seconds())) {\n+            seconds \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.minutes())) {\n+            minutes \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.hours())) {\n+            hours \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.days())) {\n+            days \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.weeks())) {\n+            weeks \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.weekyears())) {\n+            weekyears \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.months())) {\n+            months \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.years())) {\n+            years \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.centuries())) {\n+            centuries \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.eras())) {\n+            eras \u003d f;\n+        }\n+    }\n+    {\n+        DateTimeField f;\n+        if (isSupported(f \u003d chrono.millisOfSecond())) {\n+            millisOfSecond \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.millisOfDay())) {\n+            millisOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.secondOfMinute())) {\n+            secondOfMinute \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.secondOfDay())) {\n+            secondOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.minuteOfHour())) {\n+            minuteOfHour \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.minuteOfDay())) {\n+            minuteOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.hourOfDay())) {\n+            hourOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.clockhourOfDay())) {\n+            clockhourOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.hourOfHalfday())) {\n+            hourOfHalfday \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n+            clockhourOfHalfday \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.halfdayOfDay())) {\n+            halfdayOfDay \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.dayOfWeek())) {\n+            dayOfWeek \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.dayOfMonth())) {\n+            dayOfMonth \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.dayOfYear())) {\n+            dayOfYear \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n+            weekOfWeekyear \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.weekyear())) {\n+            weekyear \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.monthOfYear())) {\n+            monthOfYear \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.year())) {\n+            year \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.yearOfEra())) {\n+            yearOfEra \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.yearOfCentury())) {\n+            yearOfCentury \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.centuryOfEra())) {\n+            centuryOfEra \u003d f;\n+        }\n+        if (isSupported(f \u003d chrono.era())) {\n+            era \u003d f;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void copyFieldsFrom(Chronology chrono) {\n    {\n        DurationField f;\n        if (isSupported(f \u003d chrono.millis())) {\n            millis \u003d f;\n        }\n        if (isSupported(f \u003d chrono.seconds())) {\n            seconds \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minutes())) {\n            minutes \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hours())) {\n            hours \u003d f;\n        }\n        if (isSupported(f \u003d chrono.days())) {\n            days \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weeks())) {\n            weeks \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyears())) {\n            weekyears \u003d f;\n        }\n        if (isSupported(f \u003d chrono.months())) {\n            months \u003d f;\n        }\n        if (isSupported(f \u003d chrono.years())) {\n            years \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuries())) {\n            centuries \u003d f;\n        }\n        if (isSupported(f \u003d chrono.eras())) {\n            eras \u003d f;\n        }\n    }\n    {\n        DateTimeField f;\n        if (isSupported(f \u003d chrono.millisOfSecond())) {\n            millisOfSecond \u003d f;\n        }\n        if (isSupported(f \u003d chrono.millisOfDay())) {\n            millisOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfMinute())) {\n            secondOfMinute \u003d f;\n        }\n        if (isSupported(f \u003d chrono.secondOfDay())) {\n            secondOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfHour())) {\n            minuteOfHour \u003d f;\n        }\n        if (isSupported(f \u003d chrono.minuteOfDay())) {\n            minuteOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfDay())) {\n            hourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfDay())) {\n            clockhourOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.hourOfHalfday())) {\n            hourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.clockhourOfHalfday())) {\n            clockhourOfHalfday \u003d f;\n        }\n        if (isSupported(f \u003d chrono.halfdayOfDay())) {\n            halfdayOfDay \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfWeek())) {\n            dayOfWeek \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfMonth())) {\n            dayOfMonth \u003d f;\n        }\n        if (isSupported(f \u003d chrono.dayOfYear())) {\n            dayOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekOfWeekyear())) {\n            weekOfWeekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.weekyear())) {\n            weekyear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.monthOfYear())) {\n            monthOfYear \u003d f;\n        }\n        if (isSupported(f \u003d chrono.year())) {\n            year \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfEra())) {\n            yearOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.yearOfCentury())) {\n            yearOfCentury \u003d f;\n        }\n        if (isSupported(f \u003d chrono.centuryOfEra())) {\n            centuryOfEra \u003d f;\n        }\n        if (isSupported(f \u003d chrono.era())) {\n            era \u003d f;\n        }\n    }\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java",
      "functionStartLine": 500,
      "functionName": "copyFieldsFrom",
      "functionAnnotation": "",
      "functionDoc": "Copy the supported fields from a chronology into this container.\n"
    }
  }
}