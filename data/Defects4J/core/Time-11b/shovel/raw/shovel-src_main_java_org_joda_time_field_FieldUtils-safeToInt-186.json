{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FieldUtils.java",
  "functionName": "safeToInt",
  "functionId": "safeToInt___value-long",
  "sourceFilePath": "src/main/java/org/joda/time/field/FieldUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n@throws ArithmeticException if the value is too big or too small\n",
  "functionStartLine": 186,
  "functionEndLine": 191,
  "numCommitsSeen": 23,
  "timeTaken": 3006,
  "changeHistory": [
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "fb030b32c9fb884e382f58a2a08fc0ed3ae129eb",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b"
  ],
  "changeHistoryShort": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "fb030b32c9fb884e382f58a2a08fc0ed3ae129eb": "Ydocchange",
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": "Yfilerename",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int safeToInt(long value) {\n    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n        return (int) value;\n    }\n    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n}",
      "path": "src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 183,
      "functionName": "safeToInt",
      "functionAnnotation": "",
      "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n@throws ArithmeticException if the value is too big or too small\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
        "newPath": "src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int safeToInt(long value) {\n    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n        return (int) value;\n    }\n    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n}",
      "path": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 183,
      "functionName": "safeToInt",
      "functionAnnotation": "",
      "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n@throws ArithmeticException if the value is too big or too small\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "fb030b32c9fb884e382f58a2a08fc0ed3ae129eb": {
      "type": "Ydocchange",
      "commitMessage": "Add methods to simplify common addition and subtraction of periods\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@774 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "6/7/05, 4:02 PM",
      "commitName": "fb030b32c9fb884e382f58a2a08fc0ed3ae129eb",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/30/05, 11:20 AM",
      "commitNameOld": "e9a0d0df22a9b3d06940daa76f6accb5e63b2df9",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 8.2,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int safeToInt(long value) {\n    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n        return (int) value;\n    }\n    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n}",
      "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 133,
      "functionName": "safeToInt",
      "functionAnnotation": "",
      "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n@throws ArithmeticException if the value is too big or too small\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n",
        "newValue": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n@throws ArithmeticException if the value is too big or too small\n"
      }
    },
    "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7": {
      "type": "Yfilerename",
      "commitMessage": "Re-organized chronology package and created new field package.\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@125 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "1/27/04, 11:12 PM",
      "commitName": "14dcaf0e3931855913d79d0fbe8d1e6f1421b7a7",
      "commitAuthor": "Brian S O\u0027Neill",
      "commitDateOld": "1/11/04, 9:39 AM",
      "commitNameOld": "6f5522f58c1d2abdec37b5d22e5981716d4ec731",
      "commitAuthorOld": "Brian S O\u0027Neill",
      "daysBetweenCommits": 16.56,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static int safeToInt(long value) {\n    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n        return (int) value;\n    }\n    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n}",
      "path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
      "functionStartLine": 118,
      "functionName": "safeToInt",
      "functionAnnotation": "",
      "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
        "newPath": "JodaTime/src/java/org/joda/time/field/FieldUtils.java"
      }
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Yintroduced",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,6 @@\n+public static int safeToInt(long value) {\n+    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n+        return (int) value;\n+    }\n+    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static int safeToInt(long value) {\n    if (Integer.MIN_VALUE \u003c\u003d value \u0026\u0026 value \u003c\u003d Integer.MAX_VALUE) {\n        return (int) value;\n    }\n    throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n}",
      "path": "JodaTime/src/java/org/joda/time/chrono/Utils.java",
      "functionStartLine": 118,
      "functionName": "safeToInt",
      "functionAnnotation": "",
      "functionDoc": "Casts to an int throwing an exception if overflow occurs.\n\n@param value the value\n@return the value as an int\n"
    }
  }
}