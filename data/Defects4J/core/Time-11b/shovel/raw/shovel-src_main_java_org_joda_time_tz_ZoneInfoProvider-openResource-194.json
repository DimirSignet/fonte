{
  "origin": "codeshovel",
  "repositoryName": "Time-11b",
  "repositoryPath": "/tmp/Time-11b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZoneInfoProvider.java",
  "functionName": "openResource",
  "functionId": "openResource___name-String",
  "sourceFilePath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
  "functionAnnotation": "",
  "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
  "functionStartLine": 194,
  "functionEndLine": 215,
  "numCommitsSeen": 14,
  "timeTaken": 748,
  "changeHistory": [
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1",
    "4db6cb0fc688b11f32b52651a683560d92640d80",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb"
  ],
  "changeHistoryShort": {
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c": "Ybodychange",
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": "Yfilerename",
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": "Yfilerename",
    "4db6cb0fc688b11f32b52651a683560d92640d80": "Ymultichange(Ybodychange,Ydocchange)",
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": "Ybodychange",
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66c4a1c10d33243fb0a6f850d350226ab4d55a6c": {
      "type": "Ybodychange",
      "commitMessage": "Change some StringBuffer uses to StringBuilder [3532330]\n",
      "commitDate": "6/6/12, 3:35 AM",
      "commitName": "66c4a1c10d33243fb0a6f850d350226ab4d55a6c",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/22/12, 9:35 AM",
      "commitNameOld": "0993b376430000ffb90aa749db7eda482f9e7411",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 104.71,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuilder buf \u003d new StringBuilder(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
      "path": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 194,
      "functionName": "openResource",
      "functionAnnotation": "",
      "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
      "diff": "@@ -1,18 +1,18 @@\n private InputStream openResource(String name) throws IOException {\n     InputStream in;\n     if (iFileDir !\u003d null) {\n         in \u003d new FileInputStream(new File(iFileDir, name));\n     } else {\n         String path \u003d iResourcePath.concat(name);\n         if (iLoader !\u003d null) {\n             in \u003d iLoader.getResourceAsStream(path);\n         } else {\n             in \u003d ClassLoader.getSystemResourceAsStream(path);\n         }\n         if (in \u003d\u003d null) {\n-            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n+            StringBuilder buf \u003d new StringBuilder(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n             throw new IOException(buf.toString());\n         }\n     }\n     return in;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df4a82f4fb46cc2248280c462e18f08d55a3d112": {
      "type": "Yfilerename",
      "commitMessage": "Remove JodaTime folder moving files to top level\n",
      "commitDate": "5/16/11, 10:02 AM",
      "commitName": "df4a82f4fb46cc2248280c462e18f08d55a3d112",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "5/16/11, 9:58 AM",
      "commitNameOld": "72b22654962284bac59c2777131b42a2d1f53228",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
      "path": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 194,
      "functionName": "openResource",
      "functionAnnotation": "",
      "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "53feb3fa56af7260e607844524b7e5a9be49ecc1": {
      "type": "Yfilerename",
      "commitMessage": "Convert to maven 2\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@1540 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "8/8/10, 5:17 PM",
      "commitName": "53feb3fa56af7260e607844524b7e5a9be49ecc1",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/10, 5:02 PM",
      "commitNameOld": "7fa2ceaf5d95d050095432aa646ea803aa35e122",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
      "path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 194,
      "functionName": "openResource",
      "functionAnnotation": "",
      "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
        "newPath": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java"
      }
    },
    "4db6cb0fc688b11f32b52651a683560d92640d80": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "3/5/05, 9:21 AM",
      "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "3/5/05, 9:21 AM",
          "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 25.73,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 189,
          "functionName": "openResource",
          "functionAnnotation": "",
          "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
          "diff": "@@ -1,22 +1,18 @@\n private InputStream openResource(String name) throws IOException {\n     InputStream in;\n     if (iFileDir !\u003d null) {\n         in \u003d new FileInputStream(new File(iFileDir, name));\n     } else {\n         String path \u003d iResourcePath.concat(name);\n         if (iLoader !\u003d null) {\n             in \u003d iLoader.getResourceAsStream(path);\n         } else {\n             in \u003d ClassLoader.getSystemResourceAsStream(path);\n         }\n         if (in \u003d\u003d null) {\n-            StringBuffer buf \u003d new StringBuffer(40);\n-            buf.append(\"Resource not found: \\\"\");\n-            buf.append(path);\n-            buf.append(\"\\\" ClassLoader: \");\n-            buf.append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n+            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n             throw new IOException(buf.toString());\n         }\n     }\n     return in;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Move zone info load to ZoneInfoProvider\n(allows ZoneInfoCompiler to be dropped from jar)\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@736 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
          "commitDate": "3/5/05, 9:21 AM",
          "commitName": "4db6cb0fc688b11f32b52651a683560d92640d80",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "2/7/05, 3:51 PM",
          "commitNameOld": "bf9c0997431172e5d0c4d52b218fd92a225ed5ac",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 25.73,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
          "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
          "functionStartLine": 189,
          "functionName": "openResource",
          "functionAnnotation": "",
          "functionDoc": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n",
          "diff": "@@ -1,22 +1,18 @@\n private InputStream openResource(String name) throws IOException {\n     InputStream in;\n     if (iFileDir !\u003d null) {\n         in \u003d new FileInputStream(new File(iFileDir, name));\n     } else {\n         String path \u003d iResourcePath.concat(name);\n         if (iLoader !\u003d null) {\n             in \u003d iLoader.getResourceAsStream(path);\n         } else {\n             in \u003d ClassLoader.getSystemResourceAsStream(path);\n         }\n         if (in \u003d\u003d null) {\n-            StringBuffer buf \u003d new StringBuffer(40);\n-            buf.append(\"Resource not found: \\\"\");\n-            buf.append(path);\n-            buf.append(\"\\\" ClassLoader: \");\n-            buf.append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n+            StringBuffer buf \u003d new StringBuffer(40).append(\"Resource not found: \\\"\").append(path).append(\"\\\" ClassLoader: \").append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n             throw new IOException(buf.toString());\n         }\n     }\n     return in;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "Opens a resource from file or classpath.\n\n@param name the name to open\n@return the input stream\n@throws IOException if an error occurs\n"
          }
        }
      ]
    },
    "0e07ac6b2cff63550d7df336355ca63cc05aa40b": {
      "type": "Ybodychange",
      "commitMessage": "Move from Joda CVS\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@10 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/18/03, 6:07 PM",
      "commitName": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "12/16/03, 1:39 PM",
      "commitNameOld": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.19,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            StringBuffer buf \u003d new StringBuffer(40);\n            buf.append(\"Resource not found: \\\"\");\n            buf.append(path);\n            buf.append(\"\\\" ClassLoader: \");\n            buf.append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n            throw new IOException(buf.toString());\n        }\n    }\n    return in;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 222,
      "functionName": "openResource",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,22 @@\n private InputStream openResource(String name) throws IOException {\n     InputStream in;\n     if (iFileDir !\u003d null) {\n         in \u003d new FileInputStream(new File(iFileDir, name));\n     } else {\n         String path \u003d iResourcePath.concat(name);\n         if (iLoader !\u003d null) {\n             in \u003d iLoader.getResourceAsStream(path);\n         } else {\n             in \u003d ClassLoader.getSystemResourceAsStream(path);\n         }\n         if (in \u003d\u003d null) {\n-            throw new IOException(\"Resource not found: \" + path);\n+            StringBuffer buf \u003d new StringBuffer(40);\n+            buf.append(\"Resource not found: \\\"\");\n+            buf.append(path);\n+            buf.append(\"\\\" ClassLoader: \");\n+            buf.append(iLoader !\u003d null ? iLoader.toString() : \"system\");\n+            throw new IOException(buf.toString());\n         }\n     }\n     return in;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7fe68f297f7c372b515fde7f0bc8d721ec257ceb": {
      "type": "Yintroduced",
      "commitMessage": "Move version 0.9 to joda-time repository\n\n\ngit-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk@4 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1\n",
      "commitDate": "12/16/03, 1:39 PM",
      "commitName": "7fe68f297f7c372b515fde7f0bc8d721ec257ceb",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,17 @@\n+private InputStream openResource(String name) throws IOException {\n+    InputStream in;\n+    if (iFileDir !\u003d null) {\n+        in \u003d new FileInputStream(new File(iFileDir, name));\n+    } else {\n+        String path \u003d iResourcePath.concat(name);\n+        if (iLoader !\u003d null) {\n+            in \u003d iLoader.getResourceAsStream(path);\n+        } else {\n+            in \u003d ClassLoader.getSystemResourceAsStream(path);\n+        }\n+        if (in \u003d\u003d null) {\n+            throw new IOException(\"Resource not found: \" + path);\n+        }\n+    }\n+    return in;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private InputStream openResource(String name) throws IOException {\n    InputStream in;\n    if (iFileDir !\u003d null) {\n        in \u003d new FileInputStream(new File(iFileDir, name));\n    } else {\n        String path \u003d iResourcePath.concat(name);\n        if (iLoader !\u003d null) {\n            in \u003d iLoader.getResourceAsStream(path);\n        } else {\n            in \u003d ClassLoader.getSystemResourceAsStream(path);\n        }\n        if (in \u003d\u003d null) {\n            throw new IOException(\"Resource not found: \" + path);\n        }\n    }\n    return in;\n}",
      "path": "JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java",
      "functionStartLine": 205,
      "functionName": "openResource",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}