{
  "origin": "codeshovel",
  "repositoryName": "Lang-61b",
  "repositoryPath": "/tmp/Lang-61b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StrBuilder.java",
  "functionName": "indexOf",
  "functionId": "indexOf___str-String__startIndex-int",
  "sourceFilePath": "src/java/org/apache/commons/lang/text/StrBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, invalid index rounded to edge\n@return the first index of the string, or -1 if not found\n",
  "functionStartLine": 1760,
  "functionEndLine": 1786,
  "numCommitsSeen": 44,
  "timeTaken": 2942,
  "changeHistory": [
    "4abacfbf779d2b9ae9dbad8283792ad05f3b84be",
    "1e095ef79a0fc10f365cbfaf71f96545d9b2fb0d",
    "1d99bf252bf815fd632d198d8358459763f0da59",
    "dc03d7c8f81fa7933a095e65860078c1e0c595b8",
    "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"
  ],
  "changeHistoryShort": {
    "4abacfbf779d2b9ae9dbad8283792ad05f3b84be": "Ybodychange",
    "1e095ef79a0fc10f365cbfaf71f96545d9b2fb0d": "Ydocchange",
    "1d99bf252bf815fd632d198d8358459763f0da59": "Ybodychange",
    "dc03d7c8f81fa7933a095e65860078c1e0c595b8": "Ybodychange",
    "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4abacfbf779d2b9ae9dbad8283792ad05f3b84be": {
      "type": "Ybodychange",
      "commitMessage": "Increase test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@232876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/15/05, 1:57 PM",
      "commitName": "4abacfbf779d2b9ae9dbad8283792ad05f3b84be",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/14/05, 2:55 PM",
      "commitNameOld": "bfedc322198338d37a4a31cd57739bdbf8d556cf",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int indexOf(String str, int startIndex) {\n    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n    if (str \u003d\u003d null || startIndex \u003e\u003d size) {\n        return -1;\n    }\n    int strLen \u003d str.length();\n    if (strLen \u003d\u003d 1) {\n        return indexOf(str.charAt(0), startIndex);\n    }\n    if (strLen \u003d\u003d 0) {\n        return startIndex;\n    }\n    if (strLen \u003e size) {\n        return -1;\n    }\n    char[] thisBuf \u003d buffer;\n    outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n        for (int j \u003d 0; j \u003c strLen; j++) {\n            if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                continue outer;\n            }\n        }\n        return i;\n    }\n    return -1;\n}",
      "path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
      "functionStartLine": 1689,
      "functionName": "indexOf",
      "functionAnnotation": "",
      "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, invalid index rounded to edge\n@return the first index of the string, or -1 if not found\n",
      "diff": "@@ -1,24 +1,26 @@\n public int indexOf(String str, int startIndex) {\n     startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n     if (str \u003d\u003d null || startIndex \u003e\u003d size) {\n         return -1;\n     }\n     int strLen \u003d str.length();\n-    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n-        if (strLen \u003d\u003d 1) {\n-            return indexOf(str.charAt(0), startIndex);\n-        }\n-        char[] thisBuf \u003d buffer;\n-        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n-            for (int j \u003d 0; j \u003c strLen; j++) {\n-                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n-                    continue outer;\n-                }\n+    if (strLen \u003d\u003d 1) {\n+        return indexOf(str.charAt(0), startIndex);\n+    }\n+    if (strLen \u003d\u003d 0) {\n+        return startIndex;\n+    }\n+    if (strLen \u003e size) {\n+        return -1;\n+    }\n+    char[] thisBuf \u003d buffer;\n+    outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n+        for (int j \u003d 0; j \u003c strLen; j++) {\n+            if (str.charAt(j) !\u003d thisBuf[i + j]) {\n+                continue outer;\n             }\n-            return i;\n         }\n-    } else if (strLen \u003d\u003d 0) {\n-        return 0;\n+        return i;\n     }\n     return -1;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1e095ef79a0fc10f365cbfaf71f96545d9b2fb0d": {
      "type": "Ydocchange",
      "commitMessage": "Add StrMatcher and update StrBuilder and test cases to use it, plus fix other bugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@232652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/14/05, 2:45 PM",
      "commitName": "1e095ef79a0fc10f365cbfaf71f96545d9b2fb0d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/10/05, 2:22 PM",
      "commitNameOld": "72b0971a40eb02851b88c1de5c4ae8052a38cbbe",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 4.02,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public int indexOf(String str, int startIndex) {\n    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n    if (str \u003d\u003d null || startIndex \u003e\u003d size) {\n        return -1;\n    }\n    int strLen \u003d str.length();\n    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n        if (strLen \u003d\u003d 1) {\n            return indexOf(str.charAt(0), startIndex);\n        }\n        char[] thisBuf \u003d buffer;\n        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n            for (int j \u003d 0; j \u003c strLen; j++) {\n                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }\n    } else if (strLen \u003d\u003d 0) {\n        return 0;\n    }\n    return -1;\n}",
      "path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
      "functionStartLine": 1674,
      "functionName": "indexOf",
      "functionAnnotation": "",
      "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, invalid index rounded to edge\n@return the first index of the string, or -1 if not found\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, must be valid\n@return the first index of the string, or -1 if not found\n",
        "newValue": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, invalid index rounded to edge\n@return the first index of the string, or -1 if not found\n"
      }
    },
    "1d99bf252bf815fd632d198d8358459763f0da59": {
      "type": "Ybodychange",
      "commitMessage": "Fix indexOf and lastIndexOf with null input\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@230921 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/8/05, 4:15 PM",
      "commitName": "1d99bf252bf815fd632d198d8358459763f0da59",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "8/8/05, 3:44 PM",
      "commitNameOld": "cf9a7c86acbf1349982b07a24bae823f36666915",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int indexOf(String str, int startIndex) {\n    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n    if (str \u003d\u003d null || startIndex \u003e\u003d size) {\n        return -1;\n    }\n    int strLen \u003d str.length();\n    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n        if (strLen \u003d\u003d 1) {\n            return indexOf(str.charAt(0), startIndex);\n        }\n        char[] thisBuf \u003d buffer;\n        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n            for (int j \u003d 0; j \u003c strLen; j++) {\n                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }\n    } else if (strLen \u003d\u003d 0) {\n        return 0;\n    }\n    return -1;\n}",
      "path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
      "functionStartLine": 1457,
      "functionName": "indexOf",
      "functionAnnotation": "",
      "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, must be valid\n@return the first index of the string, or -1 if not found\n",
      "diff": "@@ -1,24 +1,24 @@\n public int indexOf(String str, int startIndex) {\n     startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n-    if (startIndex \u003e\u003d size) {\n+    if (str \u003d\u003d null || startIndex \u003e\u003d size) {\n         return -1;\n     }\n-    int strLen \u003d (str \u003d\u003d null ? 0 : str.length());\n+    int strLen \u003d str.length();\n     if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n         if (strLen \u003d\u003d 1) {\n             return indexOf(str.charAt(0), startIndex);\n         }\n         char[] thisBuf \u003d buffer;\n         outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n             for (int j \u003d 0; j \u003c strLen; j++) {\n                 if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                     continue outer;\n                 }\n             }\n             return i;\n         }\n     } else if (strLen \u003d\u003d 0) {\n         return 0;\n     }\n     return -1;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dc03d7c8f81fa7933a095e65860078c1e0c595b8": {
      "type": "Ybodychange",
      "commitMessage": "Use the name \"buffer\", not \"buf\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@227240 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/3/05, 11:02 AM",
      "commitName": "dc03d7c8f81fa7933a095e65860078c1e0c595b8",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "8/3/05, 11:00 AM",
      "commitNameOld": "57696acf0979b0d3a6e69639c14acda8b01ded28",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public int indexOf(String str, int startIndex) {\n    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n    if (startIndex \u003e\u003d size) {\n        return -1;\n    }\n    int strLen \u003d (str \u003d\u003d null ? 0 : str.length());\n    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n        if (strLen \u003d\u003d 1) {\n            return indexOf(str.charAt(0), startIndex);\n        }\n        char[] thisBuf \u003d buffer;\n        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n            for (int j \u003d 0; j \u003c strLen; j++) {\n                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }\n    } else if (strLen \u003d\u003d 0) {\n        return 0;\n    }\n    return -1;\n}",
      "path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
      "functionStartLine": 1354,
      "functionName": "indexOf",
      "functionAnnotation": "",
      "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, must be valid\n@return the first index of the string, or -1 if not found\n",
      "diff": "@@ -1,24 +1,24 @@\n public int indexOf(String str, int startIndex) {\n     startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n     if (startIndex \u003e\u003d size) {\n         return -1;\n     }\n     int strLen \u003d (str \u003d\u003d null ? 0 : str.length());\n     if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n         if (strLen \u003d\u003d 1) {\n             return indexOf(str.charAt(0), startIndex);\n         }\n-        char[] thisBuf \u003d buf;\n+        char[] thisBuf \u003d buffer;\n         outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n             for (int j \u003d 0; j \u003c strLen; j++) {\n                 if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                     continue outer;\n                 }\n             }\n             return i;\n         }\n     } else if (strLen \u003d\u003d 0) {\n         return 0;\n     }\n     return -1;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b": {
      "type": "Yintroduced",
      "commitMessage": "Add initial version of StrBuilder, currently without any tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137978 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/16/04, 8:09 AM",
      "commitName": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,24 @@\n+public int indexOf(String str, int startIndex) {\n+    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n+    if (startIndex \u003e\u003d size) {\n+        return -1;\n+    }\n+    int strLen \u003d (str \u003d\u003d null ? 0 : str.length());\n+    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n+        if (strLen \u003d\u003d 1) {\n+            return indexOf(str.charAt(0), startIndex);\n+        }\n+        char[] thisBuf \u003d buf;\n+        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n+            for (int j \u003d 0; j \u003c strLen; j++) {\n+                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n+                    continue outer;\n+                }\n+            }\n+            return i;\n+        }\n+    } else if (strLen \u003d\u003d 0) {\n+        return 0;\n+    }\n+    return -1;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public int indexOf(String str, int startIndex) {\n    startIndex \u003d (startIndex \u003c 0 ? 0 : startIndex);\n    if (startIndex \u003e\u003d size) {\n        return -1;\n    }\n    int strLen \u003d (str \u003d\u003d null ? 0 : str.length());\n    if (strLen \u003e 0 \u0026\u0026 strLen \u003c\u003d size) {\n        if (strLen \u003d\u003d 1) {\n            return indexOf(str.charAt(0), startIndex);\n        }\n        char[] thisBuf \u003d buf;\n        outer: for (int i \u003d startIndex; i \u003c thisBuf.length - strLen; i++) {\n            for (int j \u003d 0; j \u003c strLen; j++) {\n                if (str.charAt(j) !\u003d thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }\n    } else if (strLen \u003d\u003d 0) {\n        return 0;\n    }\n    return -1;\n}",
      "path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
      "functionStartLine": 1274,
      "functionName": "indexOf",
      "functionAnnotation": "",
      "functionDoc": "Searches the string builder to find the first reference to the specified\nstring starting searching from the given index.\n\u003cp\u003e\nNote that a null input string will return -1, whereas the JDK throws an exception.\n\n@param str the string to find, null returns -1\n@param startIndex the index to start at, must be valid\n@return the first index of the string, or -1 if not found\n"
    }
  }
}