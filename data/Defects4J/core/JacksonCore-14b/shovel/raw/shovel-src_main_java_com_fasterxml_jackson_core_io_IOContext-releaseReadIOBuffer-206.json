{
  "origin": "codeshovel",
  "repositoryName": "JacksonCore-14b",
  "repositoryPath": "/tmp/JacksonCore-14b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IOContext.java",
  "functionName": "releaseReadIOBuffer",
  "functionId": "releaseReadIOBuffer___buf-byte[]",
  "sourceFilePath": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
  "functionAnnotation": "",
  "functionDoc": "Method to call when all the processing buffers can be safely\nrecycled.\n",
  "functionStartLine": 206,
  "functionEndLine": 215,
  "numCommitsSeen": 13,
  "timeTaken": 365,
  "changeHistory": [
    "f633f108db4fe343a0f7652eb4b29e0fa625a6fc",
    "2343927df4929441e817e356fec2a3624a0c5b1c",
    "1dc2c61b0e45d5f19078d297b9b63bc084804975",
    "f15531c04f87f9e4e4724772426603a909eabe2c"
  ],
  "changeHistoryShort": {
    "f633f108db4fe343a0f7652eb4b29e0fa625a6fc": "Ybodychange",
    "2343927df4929441e817e356fec2a3624a0c5b1c": "Ybodychange",
    "1dc2c61b0e45d5f19078d297b9b63bc084804975": "Ymodifierchange",
    "f15531c04f87f9e4e4724772426603a909eabe2c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f633f108db4fe343a0f7652eb4b29e0fa625a6fc": {
      "type": "Ybodychange",
      "commitMessage": "bit of source code sanitization\n",
      "commitDate": "12/13/13, 9:15 PM",
      "commitName": "f633f108db4fe343a0f7652eb4b29e0fa625a6fc",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "4/6/13, 8:44 PM",
      "commitNameOld": "2343927df4929441e817e356fec2a3624a0c5b1c",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 251.06,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "actualSource": "public void releaseReadIOBuffer(byte[] buf) {\n    if (buf !\u003d null) {\n        _verifyRelease(buf, _readIOBuffer);\n        _readIOBuffer \u003d null;\n        _bufferRecycler.releaseByteBuffer(BufferRecycler.BYTE_READ_IO_BUFFER, buf);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
      "functionStartLine": 178,
      "functionName": "releaseReadIOBuffer",
      "functionAnnotation": "",
      "functionDoc": "Method to call when all the processing buffers can be safely\nrecycled.\n",
      "diff": "@@ -1,7 +1,7 @@\n public void releaseReadIOBuffer(byte[] buf) {\n     if (buf !\u003d null) {\n         _verifyRelease(buf, _readIOBuffer);\n         _readIOBuffer \u003d null;\n-        _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n+        _bufferRecycler.releaseByteBuffer(BufferRecycler.BYTE_READ_IO_BUFFER, buf);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2343927df4929441e817e356fec2a3624a0c5b1c": {
      "type": "Ybodychange",
      "commitMessage": "trying to clean up code, to trim unneeded code\n",
      "commitDate": "4/6/13, 8:44 PM",
      "commitName": "2343927df4929441e817e356fec2a3624a0c5b1c",
      "commitAuthor": "Tatu Saloranta",
      "commitDateOld": "9/29/12, 2:20 AM",
      "commitNameOld": "1dc2c61b0e45d5f19078d297b9b63bc084804975",
      "commitAuthorOld": "Francis Galiegue",
      "daysBetweenCommits": 189.77,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "actualSource": "public void releaseReadIOBuffer(byte[] buf) {\n    if (buf !\u003d null) {\n        _verifyRelease(buf, _readIOBuffer);\n        _readIOBuffer \u003d null;\n        _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
      "functionStartLine": 178,
      "functionName": "releaseReadIOBuffer",
      "functionAnnotation": "",
      "functionDoc": "Method to call when all the processing buffers can be safely\nrecycled.\n",
      "diff": "@@ -1,9 +1,7 @@\n public void releaseReadIOBuffer(byte[] buf) {\n     if (buf !\u003d null) {\n-        if (buf !\u003d _readIOBuffer) {\n-            throw new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n-        }\n+        _verifyRelease(buf, _readIOBuffer);\n         _readIOBuffer \u003d null;\n         _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1dc2c61b0e45d5f19078d297b9b63bc084804975": {
      "type": "Ymodifierchange",
      "commitMessage": "No need to declare methods \"final\" in final classes\n\nFound by IDEA.\n\nTested.\n",
      "commitDate": "9/29/12, 2:20 AM",
      "commitName": "1dc2c61b0e45d5f19078d297b9b63bc084804975",
      "commitAuthor": "Francis Galiegue",
      "commitDateOld": "6/4/12, 10:21 PM",
      "commitNameOld": "2e70a2a03007748110ba8887ad1db7ea34350819",
      "commitAuthorOld": "Tatu Saloranta",
      "daysBetweenCommits": 116.17,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "public void releaseReadIOBuffer(byte[] buf) {\n    if (buf !\u003d null) {\n        if (buf !\u003d _readIOBuffer) {\n            throw new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n        }\n        _readIOBuffer \u003d null;\n        _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
      "functionStartLine": 197,
      "functionName": "releaseReadIOBuffer",
      "functionAnnotation": "",
      "functionDoc": "Method to call when all the processing buffers can be safely\nrecycled.\n",
      "diff": "@@ -1,9 +1,9 @@\n-public final void releaseReadIOBuffer(byte[] buf) {\n+public void releaseReadIOBuffer(byte[] buf) {\n     if (buf !\u003d null) {\n         if (buf !\u003d _readIOBuffer) {\n             throw new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n         }\n         _readIOBuffer \u003d null;\n         _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[public, final]",
        "newValue": "[public]"
      }
    },
    "f15531c04f87f9e4e4724772426603a909eabe2c": {
      "type": "Yintroduced",
      "commitMessage": "Check in actual sources, moved to the new package, cleaned up a bit\n",
      "commitDate": "12/22/11, 11:00 PM",
      "commitName": "f15531c04f87f9e4e4724772426603a909eabe2c",
      "commitAuthor": "Tatu Saloranta",
      "diff": "@@ -0,0 +1,9 @@\n+public final void releaseReadIOBuffer(byte[] buf) {\n+    if (buf !\u003d null) {\n+        if (buf !\u003d _readIOBuffer) {\n+            throw new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n+        }\n+        _readIOBuffer \u003d null;\n+        _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public final void releaseReadIOBuffer(byte[] buf) {\n    if (buf !\u003d null) {\n        if (buf !\u003d _readIOBuffer) {\n            throw new IllegalArgumentException(\"Trying to release buffer not owned by the context\");\n        }\n        _readIOBuffer \u003d null;\n        _bufferRecycler.releaseByteBuffer(BufferRecycler.ByteBufferType.READ_IO_BUFFER, buf);\n    }\n}",
      "path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
      "functionStartLine": 179,
      "functionName": "releaseReadIOBuffer",
      "functionAnnotation": "",
      "functionDoc": "Method to call when all the processing buffers can be safely\nrecycled.\n"
    }
  }
}