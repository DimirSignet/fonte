{
  "origin": "codeshovel",
  "repositoryName": "Closure-128b",
  "repositoryPath": "/tmp/Closure-128b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeConsumer.java",
  "functionName": "addNumber",
  "functionId": "addNumber___x-double",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeConsumer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 240,
  "functionEndLine": 276,
  "numCommitsSeen": 22,
  "timeTaken": 991,
  "changeHistory": [
    "caa80b44a19c854951bff480cc156ab1dace25a4",
    "59dbb7a28680caad08ddb1658123fe0cbb1ae689",
    "8cf08115c6b252f8c6b54348a4089dccc45a01fb",
    "a02241e5df48e44e23dc0e66dbef3fdc3c91eb3e",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "caa80b44a19c854951bff480cc156ab1dace25a4": "Ybodychange",
    "59dbb7a28680caad08ddb1658123fe0cbb1ae689": "Ybodychange",
    "8cf08115c6b252f8c6b54348a4089dccc45a01fb": "Ybodychange",
    "a02241e5df48e44e23dc0e66dbef3fdc3c91eb3e": "Ybodychange",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": "Ybodychange",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "caa80b44a19c854951bff480cc156ab1dace25a4": {
      "type": "Ybodychange",
      "commitMessage": "\nMore concise representation of some numbers\nContributed by Robert Gust-Bardon\nfixes issue 748\n\nR\u003djohnlenz\nDELTA\u003d17  (11 added, 0 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4965\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2027 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/7/12, 8:58 AM",
      "commitName": "caa80b44a19c854951bff480cc156ab1dace25a4",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/18/12, 11:09 AM",
      "commitNameOld": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 19.91,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    boolean negativeZero \u003d isNegativeZero(x);\n    if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if (negativeZero) {\n        addConstant(\"-0\");\n    } else if ((long) x \u003d\u003d x) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            addConstant(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            long valueAbs \u003d Math.abs(value);\n            if (Long.toHexString(valueAbs).length() + 2 \u003c Long.toString(valueAbs).length()) {\n                addConstant((value \u003c 0 ? \"-\" : \"\") + \"0x\" + Long.toHexString(valueAbs));\n            } else {\n                addConstant(Long.toString(value));\n            }\n        }\n    } else {\n        addConstant(String.valueOf(x).replace(\".0E\", \"E\"));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 240,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,32 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     boolean negativeZero \u003d isNegativeZero(x);\n     if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n-    if ((long) x \u003d\u003d x \u0026\u0026 !negativeZero) {\n+    if (negativeZero) {\n+        addConstant(\"-0\");\n+    } else if ((long) x \u003d\u003d x) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n         if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n             addConstant(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n-            addConstant(Long.toString(value));\n+            long valueAbs \u003d Math.abs(value);\n+            if (Long.toHexString(valueAbs).length() + 2 \u003c Long.toString(valueAbs).length()) {\n+                addConstant((value \u003c 0 ? \"-\" : \"\") + \"0x\" + Long.toHexString(valueAbs));\n+            } else {\n+                addConstant(Long.toString(value));\n+            }\n         }\n     } else {\n-        addConstant(String.valueOf(x));\n+        addConstant(String.valueOf(x).replace(\".0E\", \"E\"));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "59dbb7a28680caad08ddb1658123fe0cbb1ae689": {
      "type": "Ybodychange",
      "commitMessage": "\nLower the cost of true/false/null.\nFixes issue 728\n\nR\u003djohnlenz\nDELTA\u003d35  (27 added, 0 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4778\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1969 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/14/12, 11:02 AM",
      "commitName": "59dbb7a28680caad08ddb1658123fe0cbb1ae689",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "2/13/12, 8:07 AM",
      "commitNameOld": "8cf08115c6b252f8c6b54348a4089dccc45a01fb",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 91.08,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    boolean negativeZero \u003d isNegativeZero(x);\n    if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x \u0026\u0026 !negativeZero) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            addConstant(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            addConstant(Long.toString(value));\n        }\n    } else {\n        addConstant(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 240,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,25 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     boolean negativeZero \u003d isNegativeZero(x);\n     if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n     if ((long) x \u003d\u003d x \u0026\u0026 !negativeZero) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n         if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n-            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n+            addConstant(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n-            add(Long.toString(value));\n+            addConstant(Long.toString(value));\n         }\n     } else {\n-        add(String.valueOf(x));\n+        addConstant(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8cf08115c6b252f8c6b54348a4089dccc45a01fb": {
      "type": "Ybodychange",
      "commitMessage": "\nNegative zero is a special case, and needs to be handled\ndifferently to prevent it from getting confused with decrement\nfixes issue 657\n\nR\u003djohnlenz\nDELTA\u003d9  (7 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4211\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1775 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/13/12, 8:07 AM",
      "commitName": "8cf08115c6b252f8c6b54348a4089dccc45a01fb",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "12/12/11, 3:41 PM",
      "commitNameOld": "64bb2291f9a9bbab67d865dffe603f8a0df8ef30",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 62.69,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    boolean negativeZero \u003d isNegativeZero(x);\n    if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x \u0026\u0026 !negativeZero) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 240,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,25 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n-    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n+    boolean negativeZero \u003d isNegativeZero(x);\n+    if ((x \u003c 0 || negativeZero) \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n-    if ((long) x \u003d\u003d x \u0026\u0026 !isNegativeZero(x)) {\n+    if ((long) x \u003d\u003d x \u0026\u0026 !negativeZero) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n         if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n             add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n             add(Long.toString(value));\n         }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a02241e5df48e44e23dc0e66dbef3fdc3c91eb3e": {
      "type": "Ybodychange",
      "commitMessage": "\nCorrect output of -0.0.\nFixes issue 582.\n\nR\u003dacleung\nDELTA\u003d9  (8 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3489\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1519 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/17/11, 2:07 PM",
      "commitName": "a02241e5df48e44e23dc0e66dbef3fdc3c91eb3e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 188.08,
      "commitsBetweenForRepo": 483,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x \u0026\u0026 !isNegativeZero(x)) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 233,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n-    if ((long) x \u003d\u003d x) {\n+    if ((long) x \u003d\u003d x \u0026\u0026 !isNegativeZero(x)) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n         if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n             add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n             add(Long.toString(value));\n         }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 4:00 PM",
      "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 78.15,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 262,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n     if ((long) x \u003d\u003d x) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n-        if (x \u003e\u003d 100) {\n+        if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n             add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n             add(Long.toString(value));\n         }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": {
      "type": "Ybodychange",
      "commitMessage": "Better number printing.\nAdd flags for fine-grained warning controls.\nBetter type-declaration finding.\nAdded some missing externs.\nMarked externs that don\u0027t have side effects.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@10 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/13/09, 11:38 AM",
      "commitName": "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 9.82,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (x \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 262,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,24 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n     if ((long) x \u003d\u003d x) {\n-        add(Long.toString((long) x));\n+        long value \u003d (long) x;\n+        long mantissa \u003d value;\n+        int exp \u003d 0;\n+        if (x \u003e\u003d 100) {\n+            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n+                mantissa /\u003d 10;\n+                exp++;\n+            }\n+        }\n+        if (exp \u003e 2) {\n+            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n+        } else {\n+            add(Long.toString(value));\n+        }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+void addNumber(double x) {\n+    char prev \u003d getLastChar();\n+    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n+        add(\" \");\n+    }\n+    if ((long) x \u003d\u003d x) {\n+        add(Long.toString((long) x));\n+    } else {\n+        add(String.valueOf(x));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        add(Long.toString((long) x));\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 261,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}