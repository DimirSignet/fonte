{
  "origin": "codeshovel",
  "repositoryName": "Closure-10b",
  "repositoryPath": "/tmp/Closure-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PeepholeFoldConstants.java",
  "functionName": "tryFoldAdd",
  "functionId": "tryFoldAdd___node-Node__left-Node__right-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 827,
  "functionEndLine": 847,
  "numCommitsSeen": 82,
  "timeTaken": 7189,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
    "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "1a7fbd18b47c102152869c3b046b65ff0f12fc43": "Ybodychange",
    "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6": "Ybodychange",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange,Yparameterchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.isAdd());\n    if (NodeUtil.mayBeString(node, true)) {\n        if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n            return tryFoldAddConstantString(node, left, right);\n        } else {\n            return tryFoldChildAddString(node, left, right);\n        }\n    } else {\n        Node result \u003d tryFoldArithmeticOp(node, left, right);\n        if (result !\u003d node) {\n            return result;\n        }\n        return tryFoldLeftChildOp(node, left, right);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 839,
      "functionName": "tryFoldAdd",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n private Node tryFoldAdd(Node node, Node left, Node right) {\n-    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    Preconditions.checkArgument(node.isAdd());\n     if (NodeUtil.mayBeString(node, true)) {\n         if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n             return tryFoldAddConstantString(node, left, right);\n         } else {\n             return tryFoldChildAddString(node, left, right);\n         }\n     } else {\n         Node result \u003d tryFoldArithmeticOp(node, left, right);\n         if (result !\u003d node) {\n             return result;\n         }\n         return tryFoldLeftChildOp(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1a7fbd18b47c102152869c3b046b65ff0f12fc43": {
      "type": "Ybodychange",
      "commitMessage": "\nAllow more folding of Token.ADD.\n\nR\u003dacleung\nDELTA\u003d160  (107 added, 4 deleted, 49 changed)\n\nHi Jason!\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d453\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@764 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/7/11, 2:59 PM",
      "commitName": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "1/19/11, 3:22 PM",
      "commitNameOld": "bb877849306e221202b283f9b8eb3873d7bdc9ae",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 18.98,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.mayBeString(node, true)) {\n        if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n            return tryFoldAddConstantString(node, left, right);\n        } else {\n            return tryFoldChildAddString(node, left, right);\n        }\n    } else {\n        Node result \u003d tryFoldArithmeticOp(node, left, right);\n        if (result !\u003d node) {\n            return result;\n        }\n        return tryFoldLeftChildOp(node, left, right);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 776,
      "functionName": "tryFoldAdd",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,16 @@\n private Node tryFoldAdd(Node node, Node left, Node right) {\n     Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n-    if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n-        return tryFoldAddConstant(node, left, right);\n+    if (NodeUtil.mayBeString(node, true)) {\n+        if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n+            return tryFoldAddConstantString(node, left, right);\n+        } else {\n+            return tryFoldChildAddString(node, left, right);\n+        }\n     } else {\n-        return tryFoldLeftChildAdd(node, left, right);\n+        Node result \u003d tryFoldArithmeticOp(node, left, right);\n+        if (result !\u003d node) {\n+            return result;\n+        }\n+        return tryFoldLeftChildOp(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6": {
      "type": "Ybodychange",
      "commitMessage": "\nfix a bug where NodeUtil was reporting function literals\nas immutable. functions are mutable.\nMake isLiteralValue a bit more flexible, so that it can\nidentify function literals.\ndo some additional folding on function literals.\n\nR\u003dacleung\nDELTA\u003d68  (35 added, 1 deleted, 32 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d64001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@308 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/23/10, 2:49 PM",
      "commitName": "f0362b1ab1ae1339e017b1d04f016980e3fa6cb6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "7/19/10, 4:41 PM",
      "commitNameOld": "ee749e286b477f8d6f53ff5960a38453baf50f31",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 3.92,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 588,
      "functionName": "tryFoldAdd",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n private Node tryFoldAdd(Node node, Node left, Node right) {\n     Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n-    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+    if (NodeUtil.isLiteralValue(left, false) \u0026\u0026 NodeUtil.isLiteralValue(right, false)) {\n         return tryFoldAddConstant(node, left, right);\n     } else {\n         return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/28/10, 5:30 PM",
      "commitNameOld": "9925370292834ea846727f1f9db76af0d40261df",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
      "functionStartLine": 582,
      "functionName": "tryFoldAdd",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Ydocchange,Yparameterchange)",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 4:00 PM",
      "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/jscomp/FoldConstants.java",
            "newPath": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
            "oldMethodName": "tryFoldAdd",
            "newMethodName": "tryFoldAdd"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "Node"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Try to fold a ADD node\n",
            "newValue": ""
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/22/10, 4:00 PM",
          "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "6/21/10, 12:59 PM",
          "commitNameOld": "5f09a76531fb4f6e182238411017e6fc7e74ad16",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 1.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private Node tryFoldAdd(Node node, Node left, Node right) {\n    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n        return tryFoldAddConstant(node, left, right);\n    } else {\n        return tryFoldLeftChildAdd(node, left, right);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
          "functionStartLine": 571,
          "functionName": "tryFoldAdd",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,8 @@\n-void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n-    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n-        String leftString \u003d NodeUtil.getStringValue(left);\n-        String rightString \u003d NodeUtil.getStringValue(right);\n-        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n-            parent.replaceChild(n, Node.newString(leftString + rightString));\n-            t.getCompiler().reportCodeChange();\n-        }\n+private Node tryFoldAdd(Node node, Node left, Node right) {\n+    Preconditions.checkArgument(node.getType() \u003d\u003d Token.ADD);\n+    if (NodeUtil.isLiteralValue(left) \u0026\u0026 NodeUtil.isLiteralValue(right)) {\n+        return tryFoldAddConstant(node, left, right);\n     } else {\n-        tryFoldArithmetic(t, n, left, right, parent);\n+        return tryFoldLeftChildAdd(node, left, right);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[t-NodeTraversal, n-Node, left-Node, right-Node, parent-Node]",
            "newValue": "[node-Node, left-Node, right-Node]"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n+    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n+        String leftString \u003d NodeUtil.getStringValue(left);\n+        String rightString \u003d NodeUtil.getStringValue(right);\n+        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n+            parent.replaceChild(n, Node.newString(leftString + rightString));\n+            t.getCompiler().reportCodeChange();\n+        }\n+    } else {\n+        tryFoldArithmetic(t, n, left, right, parent);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent) {\n    if (left.getType() \u003d\u003d Token.STRING || right.getType() \u003d\u003d Token.STRING) {\n        String leftString \u003d NodeUtil.getStringValue(left);\n        String rightString \u003d NodeUtil.getStringValue(right);\n        if (leftString !\u003d null \u0026\u0026 rightString !\u003d null) {\n            parent.replaceChild(n, Node.newString(leftString + rightString));\n            t.getCompiler().reportCodeChange();\n        }\n    } else {\n        tryFoldArithmetic(t, n, left, right, parent);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FoldConstants.java",
      "functionStartLine": 1040,
      "functionName": "tryFoldAdd",
      "functionAnnotation": "",
      "functionDoc": "Try to fold a ADD node\n"
    }
  }
}