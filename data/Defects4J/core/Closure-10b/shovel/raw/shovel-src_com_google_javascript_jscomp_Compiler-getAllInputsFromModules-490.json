{
  "origin": "codeshovel",
  "repositoryName": "Closure-10b",
  "repositoryPath": "/tmp/Closure-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Compiler.java",
  "functionName": "getAllInputsFromModules",
  "functionId": "getAllInputsFromModules___modules-List__JSModule__",
  "sourceFilePath": "src/com/google/javascript/jscomp/Compiler.java",
  "functionAnnotation": "",
  "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
  "functionStartLine": 490,
  "functionEndLine": 506,
  "numCommitsSeen": 179,
  "timeTaken": 10441,
  "changeHistory": [
    "279196b617c5de1ade21110979b6b13d8eda6342",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "279196b617c5de1ade21110979b6b13d8eda6342": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": "Ymultichange(Yreturntypechange,Ybodychange)",
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "279196b617c5de1ade21110979b6b13d8eda6342": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/5/10, 4:36 PM",
      "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/5/10, 4:36 PM",
          "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/3/10, 7:03 AM",
          "commitNameOld": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            inputs.add(input);\n            inputMap.put(inputName, module);\n        }\n    }\n    return inputs;\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 384,
          "functionName": "getAllInputsFromModules",
          "functionAnnotation": "",
          "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
          "diff": "@@ -1,20 +1,12 @@\n-private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n+private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n     List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n     Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n     for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n-            JSModule firstModule \u003d inputMap.get(inputName);\n-            if (firstModule \u003d\u003d null) {\n-                inputs.add(input);\n-                inputMap.put(inputName, module);\n-            } else {\n-                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n-            }\n+            inputs.add(input);\n+            inputMap.put(inputName, module);\n         }\n     }\n-    if (hasErrors()) {\n-        return ImmutableList.of();\n-    }\n     return inputs;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[modules-List\u003cJSModule\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/5/10, 4:36 PM",
          "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/3/10, 7:03 AM",
          "commitNameOld": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            inputs.add(input);\n            inputMap.put(inputName, module);\n        }\n    }\n    return inputs;\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 384,
          "functionName": "getAllInputsFromModules",
          "functionAnnotation": "",
          "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
          "diff": "@@ -1,20 +1,12 @@\n-private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n+private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n     List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n     Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n     for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n-            JSModule firstModule \u003d inputMap.get(inputName);\n-            if (firstModule \u003d\u003d null) {\n-                inputs.add(input);\n-                inputMap.put(inputName, module);\n-            } else {\n-                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n-            }\n+            inputs.add(input);\n+            inputMap.put(inputName, module);\n         }\n     }\n-    if (hasErrors()) {\n-        return ImmutableList.of();\n-    }\n     return inputs;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/5/10, 4:36 PM",
          "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "5/3/10, 7:03 AM",
          "commitNameOld": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            inputs.add(input);\n            inputMap.put(inputName, module);\n        }\n    }\n    return inputs;\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 384,
          "functionName": "getAllInputsFromModules",
          "functionAnnotation": "",
          "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
          "diff": "@@ -1,20 +1,12 @@\n-private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n+private static List\u003cCompilerInput\u003e getAllInputsFromModules(List\u003cJSModule\u003e modules) {\n     List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n     Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n     for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n-            JSModule firstModule \u003d inputMap.get(inputName);\n-            if (firstModule \u003d\u003d null) {\n-                inputs.add(input);\n-                inputMap.put(inputName, module);\n-            } else {\n-                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n-            }\n+            inputs.add(input);\n+            inputMap.put(inputName, module);\n         }\n     }\n-    if (hasErrors()) {\n-        return ImmutableList.of();\n-    }\n     return inputs;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 11:58 PM",
      "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/5/10, 11:58 PM",
          "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/22/10, 10:51 PM",
          "commitNameOld": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            JSModule firstModule \u003d inputMap.get(inputName);\n            if (firstModule \u003d\u003d null) {\n                inputs.add(input);\n                inputMap.put(inputName, module);\n            } else {\n                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n            }\n        }\n    }\n    if (hasErrors()) {\n        return ImmutableList.of();\n    }\n    return inputs;\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 378,
          "functionName": "getAllInputsFromModules",
          "functionAnnotation": "",
          "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
          "diff": "@@ -1,20 +1,20 @@\n-private CompilerInput[] getAllInputsFromModules() {\n-    List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n-    Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n+private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n+    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n+    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n     for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n             JSModule firstModule \u003d inputMap.get(inputName);\n             if (firstModule \u003d\u003d null) {\n                 inputs.add(input);\n                 inputMap.put(inputName, module);\n             } else {\n                 report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n             }\n         }\n     }\n     if (hasErrors()) {\n-        return new CompilerInput[0];\n+        return ImmutableList.of();\n     }\n-    return inputs.toArray(new CompilerInput[inputs.size()]);\n+    return inputs;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "CompilerInput[]",
            "newValue": "List\u003cCompilerInput\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "4/5/10, 11:58 PM",
          "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "3/22/10, 10:51 PM",
          "commitNameOld": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            JSModule firstModule \u003d inputMap.get(inputName);\n            if (firstModule \u003d\u003d null) {\n                inputs.add(input);\n                inputMap.put(inputName, module);\n            } else {\n                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n            }\n        }\n    }\n    if (hasErrors()) {\n        return ImmutableList.of();\n    }\n    return inputs;\n}",
          "path": "src/com/google/javascript/jscomp/Compiler.java",
          "functionStartLine": 378,
          "functionName": "getAllInputsFromModules",
          "functionAnnotation": "",
          "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
          "diff": "@@ -1,20 +1,20 @@\n-private CompilerInput[] getAllInputsFromModules() {\n-    List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n-    Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n+private List\u003cCompilerInput\u003e getAllInputsFromModules() {\n+    List\u003cCompilerInput\u003e inputs \u003d Lists.newArrayList();\n+    Map\u003cString, JSModule\u003e inputMap \u003d Maps.newHashMap();\n     for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n             JSModule firstModule \u003d inputMap.get(inputName);\n             if (firstModule \u003d\u003d null) {\n                 inputs.add(input);\n                 inputMap.put(inputName, module);\n             } else {\n                 report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n             }\n         }\n     }\n     if (hasErrors()) {\n-        return new CompilerInput[0];\n+        return ImmutableList.of();\n     }\n-    return inputs.toArray(new CompilerInput[inputs.size()]);\n+    return inputs;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b": {
      "type": "Ybodychange",
      "commitMessage": "fix silly 2004-era naming conventions (Nick)\nR\u003djohn\nDELTA\u003d134  (0 added, 0 deleted, 134 changed)\n\nInsert a place holder file for any empty modules. (Alan)\nR\u003dnick\nDELTA\u003d53  (46 added, 6 deleted, 1 changed)\n\nMaps API extern update.\n(Contributed by Chad Killingsworth)\nFixes issue 121\nDELTA\u003d86  (48 added, 16 deleted, 22 changed)\n\n\nGoogle Loader API externs.\n(Contributed by Chad Killingsworth)\nFixes issue 126\nDELTA\u003d54  (54 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@149 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/22/10, 10:51 PM",
      "commitName": "a70a7c599e53a7752cf4b9e6e82b4408c3c4c04b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/22/10, 3:55 PM",
      "commitNameOld": "b347ce3a71e23a4ab92dc0a6c07d43e2f497c953",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private CompilerInput[] getAllInputsFromModules() {\n    List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n    Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n    for (JSModule module : modules) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            JSModule firstModule \u003d inputMap.get(inputName);\n            if (firstModule \u003d\u003d null) {\n                inputs.add(input);\n                inputMap.put(inputName, module);\n            } else {\n                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n            }\n        }\n    }\n    if (hasErrors()) {\n        return new CompilerInput[0];\n    }\n    return inputs.toArray(new CompilerInput[inputs.size()]);\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 357,
      "functionName": "getAllInputsFromModules",
      "functionAnnotation": "",
      "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n",
      "diff": "@@ -1,20 +1,20 @@\n private CompilerInput[] getAllInputsFromModules() {\n     List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n     Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n-    for (JSModule module : modules_) {\n+    for (JSModule module : modules) {\n         for (CompilerInput input : module.getInputs()) {\n             String inputName \u003d input.getName();\n             JSModule firstModule \u003d inputMap.get(inputName);\n             if (firstModule \u003d\u003d null) {\n                 inputs.add(input);\n                 inputMap.put(inputName, module);\n             } else {\n                 report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n             }\n         }\n     }\n     if (hasErrors()) {\n         return new CompilerInput[0];\n     }\n     return inputs.toArray(new CompilerInput[inputs.size()]);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,20 @@\n+private CompilerInput[] getAllInputsFromModules() {\n+    List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n+    Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n+    for (JSModule module : modules_) {\n+        for (CompilerInput input : module.getInputs()) {\n+            String inputName \u003d input.getName();\n+            JSModule firstModule \u003d inputMap.get(inputName);\n+            if (firstModule \u003d\u003d null) {\n+                inputs.add(input);\n+                inputMap.put(inputName, module);\n+            } else {\n+                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n+            }\n+        }\n+    }\n+    if (hasErrors()) {\n+        return new CompilerInput[0];\n+    }\n+    return inputs.toArray(new CompilerInput[inputs.size()]);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private CompilerInput[] getAllInputsFromModules() {\n    List\u003cCompilerInput\u003e inputs \u003d new ArrayList\u003cCompilerInput\u003e();\n    Map\u003cString, JSModule\u003e inputMap \u003d new HashMap\u003cString, JSModule\u003e();\n    for (JSModule module : modules_) {\n        for (CompilerInput input : module.getInputs()) {\n            String inputName \u003d input.getName();\n            JSModule firstModule \u003d inputMap.get(inputName);\n            if (firstModule \u003d\u003d null) {\n                inputs.add(input);\n                inputMap.put(inputName, module);\n            } else {\n                report(JSError.make(DUPLICATE_INPUT_IN_MODULES, firstModule.getName(), module.getName(), inputName));\n            }\n        }\n    }\n    if (hasErrors()) {\n        return new CompilerInput[0];\n    }\n    return inputs.toArray(new CompilerInput[inputs.size()]);\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 344,
      "functionName": "getAllInputsFromModules",
      "functionAnnotation": "",
      "functionDoc": "Builds a single list of all module inputs. Verifies that it contains no\nduplicates.\n"
    }
  }
}