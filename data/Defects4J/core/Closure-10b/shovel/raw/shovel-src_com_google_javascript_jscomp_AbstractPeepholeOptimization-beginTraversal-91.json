{
  "origin": "codeshovel",
  "repositoryName": "Closure-10b",
  "repositoryPath": "/tmp/Closure-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractPeepholeOptimization.java",
  "functionName": "beginTraversal",
  "functionId": "beginTraversal___compiler-AbstractCompiler",
  "sourceFilePath": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
  "functionAnnotation": "",
  "functionDoc": "Informs the optimization that a traversal will begin.\n",
  "functionStartLine": 91,
  "functionEndLine": 93,
  "numCommitsSeen": 45,
  "timeTaken": 2143,
  "changeHistory": [
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a"
  ],
  "changeHistoryShort": {
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28": "Ymultichange(Yparameterchange,Ybodychange)",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nIn my sample, using this approach to running the\npeephole optimizations to a fixed point reduces build time by ~30%, the\nnumber of overall runs for the \"code removing passes\" are reduced from\n30 to 14 for one target and InlineVariables becomes the \"long\npole\".\n\nR\u003dacleung\nDELTA\u003d153  (113 added, 3 deleted, 37 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4281\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1793 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/27/12, 1:41 PM",
      "commitName": "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nIn my sample, using this approach to running the\npeephole optimizations to a fixed point reduces build time by ~30%, the\nnumber of overall runs for the \"code removing passes\" are reduced from\n30 to 14 for one target and InlineVariables becomes the \"long\npole\".\n\nR\u003dacleung\nDELTA\u003d153  (113 added, 3 deleted, 37 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4281\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1793 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/27/12, 1:41 PM",
          "commitName": "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "2/1/12, 3:11 PM",
          "commitNameOld": "a90f4b4fba37c52376d5f074729233d59ce08408",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 25.94,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "actualSource": "void beginTraversal(AbstractCompiler compiler) {\n    this.compiler \u003d compiler;\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 91,
          "functionName": "beginTraversal",
          "functionAnnotation": "",
          "functionDoc": "Informs the optimization that a traversal will begin.\n",
          "diff": "@@ -1,3 +1,3 @@\n-void beginTraversal(NodeTraversal traversal) {\n-    currentTraversal \u003d traversal;\n+void beginTraversal(AbstractCompiler compiler) {\n+    this.compiler \u003d compiler;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[traversal-NodeTraversal]",
            "newValue": "[compiler-AbstractCompiler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nIn my sample, using this approach to running the\npeephole optimizations to a fixed point reduces build time by ~30%, the\nnumber of overall runs for the \"code removing passes\" are reduced from\n30 to 14 for one target and InlineVariables becomes the \"long\npole\".\n\nR\u003dacleung\nDELTA\u003d153  (113 added, 3 deleted, 37 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4281\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1793 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/27/12, 1:41 PM",
          "commitName": "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "2/1/12, 3:11 PM",
          "commitNameOld": "a90f4b4fba37c52376d5f074729233d59ce08408",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 25.94,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "actualSource": "void beginTraversal(AbstractCompiler compiler) {\n    this.compiler \u003d compiler;\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 91,
          "functionName": "beginTraversal",
          "functionAnnotation": "",
          "functionDoc": "Informs the optimization that a traversal will begin.\n",
          "diff": "@@ -1,3 +1,3 @@\n-void beginTraversal(NodeTraversal traversal) {\n-    currentTraversal \u003d traversal;\n+void beginTraversal(AbstractCompiler compiler) {\n+    this.compiler \u003d compiler;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Yintroduced",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,3 @@\n+void beginTraversal(NodeTraversal traversal) {\n+    currentTraversal \u003d traversal;\n+}\n\\ No newline at end of file\n",
      "actualSource": "void beginTraversal(NodeTraversal traversal) {\n    currentTraversal \u003d traversal;\n}",
      "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
      "functionStartLine": 80,
      "functionName": "beginTraversal",
      "functionAnnotation": "",
      "functionDoc": "Informs the optimization that a traversal will begin.\n"
    }
  }
}