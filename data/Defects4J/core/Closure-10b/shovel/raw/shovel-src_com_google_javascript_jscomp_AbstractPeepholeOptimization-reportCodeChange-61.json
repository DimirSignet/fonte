{
  "origin": "codeshovel",
  "repositoryName": "Closure-10b",
  "repositoryPath": "/tmp/Closure-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractPeepholeOptimization.java",
  "functionName": "reportCodeChange",
  "functionId": "reportCodeChange",
  "sourceFilePath": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
  "functionAnnotation": "",
  "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
  "functionStartLine": 61,
  "functionEndLine": 64,
  "numCommitsSeen": 24,
  "timeTaken": 2146,
  "changeHistory": [
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
    "a90f4b4fba37c52376d5f074729233d59ce08408",
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a"
  ],
  "changeHistoryShort": {
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28": "Ybodychange",
    "a90f4b4fba37c52376d5f074729233d59ce08408": "Ymultichange(Ymodifierchange,Yannotationchange)",
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce": "Ymultichange(Ymodifierchange,Yannotationchange)",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Ydocchange",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28": {
      "type": "Ybodychange",
      "commitMessage": "\nIn my sample, using this approach to running the\npeephole optimizations to a fixed point reduces build time by ~30%, the\nnumber of overall runs for the \"code removing passes\" are reduced from\n30 to 14 for one target and InlineVariables becomes the \"long\npole\".\n\nR\u003dacleung\nDELTA\u003d153  (113 added, 3 deleted, 37 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4281\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1793 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/27/12, 1:41 PM",
      "commitName": "e88cd847e5f7f0b0aa23aa3d8860bcf58896fa28",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/1/12, 3:11 PM",
      "commitNameOld": "a90f4b4fba37c52376d5f074729233d59ce08408",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 25.94,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void reportCodeChange() {\n    Preconditions.checkNotNull(compiler);\n    compiler.reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
      "functionStartLine": 61,
      "functionName": "reportCodeChange",
      "functionAnnotation": "",
      "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
      "diff": "@@ -1,4 +1,4 @@\n protected void reportCodeChange() {\n-    Preconditions.checkNotNull(currentTraversal);\n-    currentTraversal.getCompiler().reportCodeChange();\n+    Preconditions.checkNotNull(compiler);\n+    compiler.reportCodeChange();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a90f4b4fba37c52376d5f074729233d59ce08408": {
      "type": "Ymultichange(Ymodifierchange,Yannotationchange)",
      "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes\n\n... description truncated by g4 rollback ...\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4161\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1758 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/12, 3:11 PM",
      "commitName": "a90f4b4fba37c52376d5f074729233d59ce08408",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes\n\n... description truncated by g4 rollback ...\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4161\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1758 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/1/12, 3:11 PM",
          "commitName": "a90f4b4fba37c52376d5f074729233d59ce08408",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "2/1/12, 1:09 PM",
          "commitNameOld": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 60,
          "functionName": "reportCodeChange",
          "functionAnnotation": "",
          "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
          "diff": "@@ -1,5 +1,4 @@\n-@Override\n-public void reportCodeChange() {\n+protected void reportCodeChange() {\n     Preconditions.checkNotNull(currentTraversal);\n     currentTraversal.getCompiler().reportCodeChange();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes\n\n... description truncated by g4 rollback ...\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4161\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1758 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/1/12, 3:11 PM",
          "commitName": "a90f4b4fba37c52376d5f074729233d59ce08408",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "2/1/12, 1:09 PM",
          "commitNameOld": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 60,
          "functionName": "reportCodeChange",
          "functionAnnotation": "",
          "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
          "diff": "@@ -1,5 +1,4 @@\n-@Override\n-public void reportCodeChange() {\n+protected void reportCodeChange() {\n     Preconditions.checkNotNull(currentTraversal);\n     currentTraversal.getCompiler().reportCodeChange();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "@Override",
            "newValue": ""
          }
        }
      ]
    },
    "8a630ccc7ad6416e6f4b12d6be837d418a81cdce": {
      "type": "Ymultichange(Ymodifierchange,Yannotationchange)",
      "commitMessage": "\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes to the property don\u0027t prevent removal of the candidates.\nObject property definitions are simply one more write now so don\u0027t\nautomatically rescue other definitions unless used in a known method\n(JSCompiler_renameProperty, goog.reflect.object).\n\nThis effective replaces RemoveUnusedClassProperties\n\nR\u003dnicksantos\nDELTA\u003d1498  (856 added, 514 deleted, 128 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4160\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1757 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/12, 1:09 PM",
      "commitName": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes to the property don\u0027t prevent removal of the candidates.\nObject property definitions are simply one more write now so don\u0027t\nautomatically rescue other definitions unless used in a known method\n(JSCompiler_renameProperty, goog.reflect.object).\n\nThis effective replaces RemoveUnusedClassProperties\n\nR\u003dnicksantos\nDELTA\u003d1498  (856 added, 514 deleted, 128 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4160\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1757 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/1/12, 1:09 PM",
          "commitName": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/14/11, 6:13 PM",
          "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 78.79,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 61,
          "functionName": "reportCodeChange",
          "functionAnnotation": "@Override",
          "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
          "diff": "@@ -1,4 +1,5 @@\n-protected void reportCodeChange() {\n+@Override\n+public void reportCodeChange() {\n     Preconditions.checkNotNull(currentTraversal);\n     currentTraversal.getCompiler().reportCodeChange();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "\nSupport removing properties defined using \"this\" as part of\nRemoveUnusedPrototypeProperties. This requires handling properties\nassigned expressions containing side-effects properly which was not\nthe case prior to this change.  I expect we got away with it because\nprototype properties are generally assigned literals or simple variable\nreferences.\n\nAs part of this change I also change the rules, so that any property\nwrite (\u003d, +\u003d, ++) on a prototype or this property is removalable, and\nother writes to the property don\u0027t prevent removal of the candidates.\nObject property definitions are simply one more write now so don\u0027t\nautomatically rescue other definitions unless used in a known method\n(JSCompiler_renameProperty, goog.reflect.object).\n\nThis effective replaces RemoveUnusedClassProperties\n\nR\u003dnicksantos\nDELTA\u003d1498  (856 added, 514 deleted, 128 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4160\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1757 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/1/12, 1:09 PM",
          "commitName": "8a630ccc7ad6416e6f4b12d6be837d418a81cdce",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/14/11, 6:13 PM",
          "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 78.79,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
          "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
          "functionStartLine": 61,
          "functionName": "reportCodeChange",
          "functionAnnotation": "@Override",
          "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
          "diff": "@@ -1,4 +1,5 @@\n-protected void reportCodeChange() {\n+@Override\n+public void reportCodeChange() {\n     Preconditions.checkNotNull(currentTraversal);\n     currentTraversal.getCompiler().reportCodeChange();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        }
      ]
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Ydocchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/22/10, 4:00 PM",
      "commitNameOld": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.65,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
      "functionStartLine": 60,
      "functionName": "reportCodeChange",
      "functionAnnotation": "",
      "functionDoc": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Helper method for telling the compiler that something has changed. \nSubclasses must call these if they have changed the AST.\n",
        "newValue": "Helper method for telling the compiler that something has changed.\nSubclasses must call these if they have changed the AST.\n"
      }
    },
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Yintroduced",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,4 @@\n+protected void reportCodeChange() {\n+    Preconditions.checkNotNull(currentTraversal);\n+    currentTraversal.getCompiler().reportCodeChange();\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected void reportCodeChange() {\n    Preconditions.checkNotNull(currentTraversal);\n    currentTraversal.getCompiler().reportCodeChange();\n}",
      "path": "src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java",
      "functionStartLine": 60,
      "functionName": "reportCodeChange",
      "functionAnnotation": "",
      "functionDoc": "Helper method for telling the compiler that something has changed. \nSubclasses must call these if they have changed the AST.\n"
    }
  }
}