{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Compiler.java",
  "functionName": "initModules",
  "functionId": "initModules___externs-List__T____modules-List__JSModule____options-CompilerOptions",
  "sourceFilePath": "src/com/google/javascript/jscomp/Compiler.java",
  "functionAnnotation": "",
  "functionDoc": "Initializes the instance state needed for a compile job if the sources\nare in modules.\n",
  "functionStartLine": 396,
  "functionEndLine": 426,
  "numCommitsSeen": 312,
  "timeTaken": 12467,
  "changeHistory": [
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf",
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
    "279196b617c5de1ade21110979b6b13d8eda6342",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6"
  ],
  "changeHistoryShort": {
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf": "Yparameterchange",
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": "Ybodychange",
    "279196b617c5de1ade21110979b6b13d8eda6342": "Ybodychange",
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "887038f8ecbd740944b4b9e1333837cef7f9e2cf": {
      "type": "Yparameterchange",
      "commitMessage": "\nSourceFile is OK\n\nR\u003djohnlenz\nDELTA\u003d436  (107 added, 104 deleted, 225 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4320\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1810 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/5/12, 9:43 AM",
      "commitName": "887038f8ecbd740944b4b9e1333837cef7f9e2cf",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "3/1/12, 3:23 PM",
      "commitNameOld": "0f70487944b9b934abbbc2d32c323398da2cdbe8",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 3.76,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public \u003cT extends SourceFile\u003e void initModules(List\u003cT\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n    initOptions(options);\n    checkFirstModule(modules);\n    fillEmptyModules(modules);\n    this.externs \u003d makeCompilerInput(externs, true);\n    this.modules \u003d modules;\n    if (modules.size() \u003e 1) {\n        try {\n            this.moduleGraph \u003d new JSModuleGraph(modules);\n        } catch (JSModuleGraph.ModuleDependenceException e) {\n            report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n            return;\n        }\n    } else {\n        this.moduleGraph \u003d null;\n    }\n    this.inputs \u003d getAllInputsFromModules(modules);\n    initBasedOnOptions();\n    initInputsByIdMap();\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 334,
      "functionName": "initModules",
      "functionAnnotation": "",
      "functionDoc": "Initializes the instance state needed for a compile job if the sources\nare in modules.\n",
      "diff": "@@ -1,20 +1,20 @@\n-public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n+public \u003cT extends SourceFile\u003e void initModules(List\u003cT\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n     initOptions(options);\n     checkFirstModule(modules);\n     fillEmptyModules(modules);\n     this.externs \u003d makeCompilerInput(externs, true);\n     this.modules \u003d modules;\n     if (modules.size() \u003e 1) {\n         try {\n             this.moduleGraph \u003d new JSModuleGraph(modules);\n         } catch (JSModuleGraph.ModuleDependenceException e) {\n             report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n             return;\n         }\n     } else {\n         this.moduleGraph \u003d null;\n     }\n     this.inputs \u003d getAllInputsFromModules(modules);\n     initBasedOnOptions();\n     initInputsByIdMap();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[externs-List\u003cJSSourceFile\u003e, modules-List\u003cJSModule\u003e, options-CompilerOptions]",
        "newValue": "[externs-List\u003cT\u003e, modules-List\u003cJSModule\u003e, options-CompilerOptions]"
      }
    },
    "1b8156d41fe441ab03999f1e2c5ac4537e79fc75": {
      "type": "Ybodychange",
      "commitMessage": "\nPart 4, source name/input id split: Require an InputId to lookup a CompilerInput.\n\nR\u003dnicksantos\nDELTA\u003d266  (106 added, 20 deleted, 140 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2899\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1328 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/11, 11:43 AM",
      "commitName": "1b8156d41fe441ab03999f1e2c5ac4537e79fc75",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "8/2/11, 7:38 AM",
      "commitNameOld": "a552292e3b4f37b367a8b554a6e708506ad3781f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n    initOptions(options);\n    checkFirstModule(modules);\n    fillEmptyModules(modules);\n    this.externs \u003d makeCompilerInput(externs, true);\n    this.modules \u003d modules;\n    if (modules.size() \u003e 1) {\n        try {\n            this.moduleGraph \u003d new JSModuleGraph(modules);\n        } catch (JSModuleGraph.ModuleDependenceException e) {\n            report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n            return;\n        }\n    } else {\n        this.moduleGraph \u003d null;\n    }\n    this.inputs \u003d getAllInputsFromModules(modules);\n    initBasedOnOptions();\n    initInputsByIdMap();\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 328,
      "functionName": "initModules",
      "functionAnnotation": "",
      "functionDoc": "Initializes the instance state needed for a compile job if the sources\nare in modules.\n",
      "diff": "@@ -1,20 +1,20 @@\n public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n     initOptions(options);\n     checkFirstModule(modules);\n     fillEmptyModules(modules);\n     this.externs \u003d makeCompilerInput(externs, true);\n     this.modules \u003d modules;\n     if (modules.size() \u003e 1) {\n         try {\n             this.moduleGraph \u003d new JSModuleGraph(modules);\n         } catch (JSModuleGraph.ModuleDependenceException e) {\n             report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n             return;\n         }\n     } else {\n         this.moduleGraph \u003d null;\n     }\n     this.inputs \u003d getAllInputsFromModules(modules);\n     initBasedOnOptions();\n-    initInputsByNameMap();\n+    initInputsByIdMap();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "279196b617c5de1ade21110979b6b13d8eda6342": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/04 by nick\n\n        Pipe everything through the module code path.\n        This teases out a bunch of edge-case bugs that worked in the non-module\n        code path, but not the module code path (and vice-versa)\n\n        R\u003dalan\n        DELTA\u003d136  (67 added, 19 deleted, 50 changed)\n\nChange on 2010/05/04 by nick\n\n        fiddle with the check_global_this_level decision tree\n        This should be off by default if collapse_properties is off,\n        and on by default if collapse_properties is on.\n\n        R\u003dalan\n        DELTA\u003d47  (32 added, 4 deleted, 11 changed)\n\nChange on 2010/05/04 by andrew\n\n        -Infer that arguments to goog.asserts.assert() are non-nullable after the\n        call.\n        -Infer the types of arguments to goog.asserts.assert{String,Number,...} after\n        the call.\n\n        Tested:\n          -Added new unit tests.\n\n        R\u003dnick\n        DELTA\u003d277  (266 added, 4 deleted, 7 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dqdhuno\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@203 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/5/10, 4:36 PM",
      "commitName": "279196b617c5de1ade21110979b6b13d8eda6342",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/3/10, 7:03 AM",
      "commitNameOld": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.4,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n    initOptions(options);\n    checkFirstModule(modules);\n    fillEmptyModules(modules);\n    this.externs \u003d makeCompilerInput(externs, true);\n    this.modules \u003d modules;\n    if (modules.size() \u003e 1) {\n        try {\n            this.moduleGraph \u003d new JSModuleGraph(modules);\n        } catch (JSModuleGraph.ModuleDependenceException e) {\n            report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n            return;\n        }\n    } else {\n        this.moduleGraph \u003d null;\n    }\n    this.inputs \u003d getAllInputsFromModules(modules);\n    initBasedOnOptions();\n    initInputsByNameMap();\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 284,
      "functionName": "initModules",
      "functionAnnotation": "",
      "functionDoc": "Initializes the instance state needed for a compile job if the sources\nare in modules.\n",
      "diff": "@@ -1,16 +1,20 @@\n public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n     initOptions(options);\n     checkFirstModule(modules);\n     fillEmptyModules(modules);\n     this.externs \u003d makeCompilerInput(externs, true);\n     this.modules \u003d modules;\n-    try {\n-        this.moduleGraph \u003d new JSModuleGraph(modules);\n-    } catch (JSModuleGraph.ModuleDependenceException e) {\n-        report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n-        return;\n+    if (modules.size() \u003e 1) {\n+        try {\n+            this.moduleGraph \u003d new JSModuleGraph(modules);\n+        } catch (JSModuleGraph.ModuleDependenceException e) {\n+            report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n+            return;\n+        }\n+    } else {\n+        this.moduleGraph \u003d null;\n     }\n-    this.inputs \u003d getAllInputsFromModules();\n+    this.inputs \u003d getAllInputsFromModules(modules);\n     initBasedOnOptions();\n     initInputsByNameMap();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c25df7eca2462861bf42ad8b74215099c3f81ae6": {
      "type": "Yintroduced",
      "commitMessage": "Make lists the canonical representation of compiler sources.\nThey\u0027re so much easier to sort and mutate, which is going to\nmake a difference once we start sorting sources. (Nick)\nR\u003drobert\nDELTA\u003d97  (58 added, 6 deleted, 33 changed)\n\ninclude everything in the @license tag. (Nick)\nR\u003drobert\nDELTA\u003d78  (32 added, 19 deleted, 27 changed)\n\ntag externs files with the @externs tag. (Nick)\nR\u003dalan\nDELTA\u003d45  (45 added, 0 deleted, 0 changed)\n\nfix for issue 58.\nwork-around a bug in IE where it gets confused if the comparator\npassed to Array.prototype.sort writes to its own parameters. (Nick)\nR\u003dalan\nDELTA\u003d33  (30 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddpiluc\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@171 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 11:58 PM",
      "commitName": "c25df7eca2462861bf42ad8b74215099c3f81ae6",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,16 @@\n+public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n+    initOptions(options);\n+    checkFirstModule(modules);\n+    fillEmptyModules(modules);\n+    this.externs \u003d makeCompilerInput(externs, true);\n+    this.modules \u003d modules;\n+    try {\n+        this.moduleGraph \u003d new JSModuleGraph(modules);\n+    } catch (JSModuleGraph.ModuleDependenceException e) {\n+        report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n+        return;\n+    }\n+    this.inputs \u003d getAllInputsFromModules();\n+    initBasedOnOptions();\n+    initInputsByNameMap();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void initModules(List\u003cJSSourceFile\u003e externs, List\u003cJSModule\u003e modules, CompilerOptions options) {\n    initOptions(options);\n    checkFirstModule(modules);\n    fillEmptyModules(modules);\n    this.externs \u003d makeCompilerInput(externs, true);\n    this.modules \u003d modules;\n    try {\n        this.moduleGraph \u003d new JSModuleGraph(modules);\n    } catch (JSModuleGraph.ModuleDependenceException e) {\n        report(JSError.make(MODULE_DEPENDENCY_ERROR, e.getModule().getName(), e.getDependentModule().getName()));\n        return;\n    }\n    this.inputs \u003d getAllInputsFromModules();\n    initBasedOnOptions();\n    initInputsByNameMap();\n}",
      "path": "src/com/google/javascript/jscomp/Compiler.java",
      "functionStartLine": 280,
      "functionName": "initModules",
      "functionAnnotation": "",
      "functionDoc": "Initializes the instance state needed for a compile job if the sources\nare in modules.\n"
    }
  }
}