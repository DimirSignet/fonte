{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodingConventions.java",
  "functionName": "isInlinableFunction",
  "functionId": "$isInlinableFunction___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodingConventions.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 356,
  "functionEndLine": 359,
  "numCommitsSeen": 11,
  "timeTaken": 1214,
  "changeHistory": [
    "f58f7523c285197df175ad780dbe6288c67bc08c"
  ],
  "changeHistoryShort": {
    "f58f7523c285197df175ad780dbe6288c67bc08c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f58f7523c285197df175ad780dbe6288c67bc08c": {
      "type": "Yintroduced",
      "commitMessage": "\nAdd a coding convention interface that allow for certain functions or\nmehtods to be un-inlineable.\n\nR\u003dnicksantos\nDELTA\u003d496  (302 added, 188 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4640\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1939 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/30/12, 4:40 PM",
      "commitName": "f58f7523c285197df175ad780dbe6288c67bc08c",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,5 @@\n+@Override\n+public boolean isInlinableFunction(Node n) {\n+    Preconditions.checkState(n.isFunction());\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean isInlinableFunction(Node n) {\n    Preconditions.checkState(n.isFunction());\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/CodingConventions.java",
      "functionStartLine": 345,
      "functionName": "isInlinableFunction",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}