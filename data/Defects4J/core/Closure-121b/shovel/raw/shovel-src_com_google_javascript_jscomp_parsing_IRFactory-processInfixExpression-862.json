{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "processInfixExpression",
  "functionId": "$processInfixExpression___exprNode-InfixExpression",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 862,
  "functionEndLine": 871,
  "numCommitsSeen": 89,
  "timeTaken": 7244,
  "changeHistory": [
    "7cc4ff4da4a64e03809419dd9d308b1bd5bf2fab",
    "b306cef6eb2cc01882b5aac7fcc64eb184b02378",
    "c1db3fbae26fce9181fe259e61d562758aff9711",
    "df632b1e20c0a9e8a625bfe97a4cd1d675fabf20",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "7cc4ff4da4a64e03809419dd9d308b1bd5bf2fab": "Ybodychange",
    "b306cef6eb2cc01882b5aac7fcc64eb184b02378": "Ybodychange",
    "c1db3fbae26fce9181fe259e61d562758aff9711": "Ybodychange",
    "df632b1e20c0a9e8a625bfe97a4cd1d675fabf20": "Ybodychange",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7cc4ff4da4a64e03809419dd9d308b1bd5bf2fab": {
      "type": "Ybodychange",
      "commitMessage": "\nTrying this change again.  I don\u0027t think the breakages were actually caused by this CL. \n\nSo we\u0027ll try this again once the dust settles.\n\n*** Original change description ***\n\nModify rhino so that infix expressions use a starte position and line number that point to the start of the expression rather than the position of the operator.\nModify IRFactory to maintain this new position logic when it does its translation pass.\nAdjusted the test file expectations accordingly.\n\nR\u003dnicksantos\nDELTA\u003d207  (8 added, 21 deleted, 178 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3506\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1524 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/20/11, 12:39 PM",
      "commitName": "7cc4ff4da4a64e03809419dd9d308b1bd5bf2fab",
      "commitAuthor": "miketaylor@google.com",
      "commitDateOld": "10/20/11, 6:29 AM",
      "commitNameOld": "b306cef6eb2cc01882b5aac7fcc64eb184b02378",
      "commitAuthorOld": "miketaylor@google.com",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition()));\n    maybeSetLengthFrom(n, exprNode);\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 671,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n Node processInfixExpression(InfixExpression exprNode) {\n     Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n     n.setLineno(exprNode.getLineno());\n-    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n+    n.setCharno(position2charno(exprNode.getAbsolutePosition()));\n     maybeSetLengthFrom(n, exprNode);\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b306cef6eb2cc01882b5aac7fcc64eb184b02378": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nSeems to have broken a several things.\n\n*** Original change description ***\n\nModify rhino so that infix expressions use a starte position and line number that point to the start of the expression rather than the position of the operator.\nModify IRFactory to maintain this new position logic when it does its translation pass.\nAdjusted the test file expectations accordingly.\n\nR\u003dnicksantos\nDELTA\u003d207  (21 added, 8 deleted, 178 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3505\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1523 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/20/11, 6:29 AM",
      "commitName": "b306cef6eb2cc01882b5aac7fcc64eb184b02378",
      "commitAuthor": "miketaylor@google.com",
      "commitDateOld": "10/20/11, 6:00 AM",
      "commitNameOld": "c1db3fbae26fce9181fe259e61d562758aff9711",
      "commitAuthorOld": "miketaylor@google.com",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n    maybeSetLengthFrom(n, exprNode);\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 671,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n Node processInfixExpression(InfixExpression exprNode) {\n     Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n     n.setLineno(exprNode.getLineno());\n-    n.setCharno(position2charno(exprNode.getAbsolutePosition()));\n+    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n     maybeSetLengthFrom(n, exprNode);\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c1db3fbae26fce9181fe259e61d562758aff9711": {
      "type": "Ybodychange",
      "commitMessage": "\nModify rhino so that infix expressions use a starte position and line number that point to the start of the expression rather than the position of the operator.\nModify IRFactory to maintain this new position logic when it does its translation pass.\nAdjusted the test file expectations accordingly.\n\nR\u003dtylerg,acleung,nicksantos\nDELTA\u003d207  (8 added, 21 deleted, 178 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3504\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1522 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/20/11, 6:00 AM",
      "commitName": "c1db3fbae26fce9181fe259e61d562758aff9711",
      "commitAuthor": "miketaylor@google.com",
      "commitDateOld": "9/26/11, 9:16 AM",
      "commitNameOld": "afc8fd66475d6ac122a5ab0891ba763c43a44cf3",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition()));\n    maybeSetLengthFrom(n, exprNode);\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 671,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n Node processInfixExpression(InfixExpression exprNode) {\n     Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n     n.setLineno(exprNode.getLineno());\n-    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n+    n.setCharno(position2charno(exprNode.getAbsolutePosition()));\n     maybeSetLengthFrom(n, exprNode);\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df632b1e20c0a9e8a625bfe97a4cd1d675fabf20": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd length to Node in IDE mode\n\nR\u003djohnlenz\nDELTA\u003d135  (38 added, 0 deleted, 97 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2508\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1250 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/6/11, 8:36 PM",
      "commitName": "df632b1e20c0a9e8a625bfe97a4cd1d675fabf20",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "6/30/11, 1:25 PM",
      "commitNameOld": "9320feca198878ca9464aae089399a8891c314d7",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 6.3,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n    maybeSetLengthFrom(n, exprNode);\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 678,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,8 @@\n @Override\n Node processInfixExpression(InfixExpression exprNode) {\n     Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n     n.setLineno(exprNode.getLineno());\n     n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n+    maybeSetLengthFrom(n, exprNode);\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/02 17:44:46 by nicksantos\n\n        fix RAI when comparing two types that are always equal.\n        Fixes issue 172\n\n        R\u003dacleung\n        DELTA\u003d20  (19 added, 0 deleted, 1 changed)\n\nChange on 2010/07/03 08:52:08 by johnlenz\n\n        Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.\n\n        R\u003dacleung\n        DELTA\u003d30  (0 added, 2 deleted, 28 changed)\n\nChange on 2010/07/07 11:56:02 by johnlenz\n\n        Reduce the memory cost of generating source maps by reducing the number\n        of property structure objects that are created.  We do this by taking\n        advantage of the fact the property list objects are immutable and can be\n        shared between Nodes.  The source file prop is then shared between\n        every Node in the AST for a given source file, reducing the the number\n        of property nodes used to store this information from O(ast-nodes) to\n        O(source-files).\n\n        R\u003dbowdidge\n        DELTA\u003d122  (68 added, 1 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/7/10, 3:14 PM",
      "commitName": "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/29/10, 2:10 PM",
      "commitNameOld": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 595,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,7 +1,7 @@\n @Override\n Node processInfixExpression(InfixExpression exprNode) {\n-    Node n \u003d new Node(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n+    Node n \u003d newNode(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n     n.setLineno(exprNode.getLineno());\n     n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n     return n;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+@Override\n+Node processInfixExpression(InfixExpression exprNode) {\n+    Node n \u003d new Node(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n+    n.setLineno(exprNode.getLineno());\n+    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n+    return n;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d new Node(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 547,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}