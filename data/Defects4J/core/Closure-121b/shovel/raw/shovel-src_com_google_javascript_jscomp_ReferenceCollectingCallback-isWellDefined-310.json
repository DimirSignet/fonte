{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReferenceCollectingCallback.java",
  "functionName": "isWellDefined",
  "functionId": "$isWellDefined",
  "sourceFilePath": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
  "functionAnnotation": "",
  "functionDoc": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgment.\n",
  "functionStartLine": 310,
  "functionEndLine": 333,
  "numCommitsSeen": 33,
  "timeTaken": 1478,
  "changeHistory": [
    "70a5626922ea7e8c98747e22b6986638ba38fadc",
    "78995bf9e88599055a8c4165d89c09dc92a44b30",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": "Ydocchange",
    "78995bf9e88599055a8c4165d89c09dc92a44b30": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70a5626922ea7e8c98747e22b6986638ba38fadc": {
      "type": "Ydocchange",
      "commitMessage": "\nFix various typos, spelling and grammar errors.\nFixes issue 734. \nContributed by Robert Gust Bardon\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4827\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1979 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/12, 11:09 AM",
      "commitName": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/14/11, 6:13 PM",
      "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 185.66,
      "commitsBetweenForRepo": 323,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean isWellDefined() {\n    int size \u003d references.size();\n    if (size \u003d\u003d 0) {\n        return false;\n    }\n    Reference init \u003d getInitializingReference();\n    if (init \u003d\u003d null) {\n        return false;\n    }\n    Preconditions.checkState(references.get(0).isDeclaration());\n    BasicBlock initBlock \u003d init.getBasicBlock();\n    for (int i \u003d 1; i \u003c size; i++) {\n        if (!initBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
      "functionStartLine": 310,
      "functionName": "isWellDefined",
      "functionAnnotation": "",
      "functionDoc": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgment.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgement.\n",
        "newValue": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgment.\n"
      }
    },
    "78995bf9e88599055a8c4165d89c09dc92a44b30": {
      "type": "Ybodychange",
      "commitMessage": "Fix synthesis of vars in DEFAULT mode.\nBetter variable inlining\nBetter function inlining\nAssorted bug fixes\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@6 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/09, 11:16 AM",
      "commitName": "78995bf9e88599055a8c4165d89c09dc92a44b30",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/6/09, 5:24 PM",
      "commitNameOld": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "protected boolean isWellDefined() {\n    int size \u003d references.size();\n    if (size \u003d\u003d 0) {\n        return false;\n    }\n    Reference init \u003d getInitializingReference();\n    if (init \u003d\u003d null) {\n        return false;\n    }\n    Preconditions.checkState(references.get(0).isDeclaration());\n    BasicBlock initBlock \u003d init.getBasicBlock();\n    for (int i \u003d 1; i \u003c size; i++) {\n        if (!initBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
      "functionStartLine": 243,
      "functionName": "isWellDefined",
      "functionAnnotation": "",
      "functionDoc": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgement.\n",
      "diff": "@@ -1,17 +1,18 @@\n protected boolean isWellDefined() {\n     int size \u003d references.size();\n     if (size \u003d\u003d 0) {\n         return false;\n     }\n-    Reference decl \u003d references.get(0);\n-    if (!decl.isInitializingDeclaration()) {\n+    Reference init \u003d getInitializingReference();\n+    if (init \u003d\u003d null) {\n         return false;\n     }\n-    BasicBlock declBlock \u003d decl.getBasicBlock();\n+    Preconditions.checkState(references.get(0).isDeclaration());\n+    BasicBlock initBlock \u003d init.getBasicBlock();\n     for (int i \u003d 1; i \u003c size; i++) {\n-        if (!declBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n+        if (!initBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n             return false;\n         }\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+protected boolean isWellDefined() {\n+    int size \u003d references.size();\n+    if (size \u003d\u003d 0) {\n+        return false;\n+    }\n+    Reference decl \u003d references.get(0);\n+    if (!decl.isInitializingDeclaration()) {\n+        return false;\n+    }\n+    BasicBlock declBlock \u003d decl.getBasicBlock();\n+    for (int i \u003d 1; i \u003c size; i++) {\n+        if (!declBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected boolean isWellDefined() {\n    int size \u003d references.size();\n    if (size \u003d\u003d 0) {\n        return false;\n    }\n    Reference decl \u003d references.get(0);\n    if (!decl.isInitializingDeclaration()) {\n        return false;\n    }\n    BasicBlock declBlock \u003d decl.getBasicBlock();\n    for (int i \u003d 1; i \u003c size; i++) {\n        if (!declBlock.provablyExecutesBefore(references.get(i).getBasicBlock())) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
      "functionStartLine": 257,
      "functionName": "isWellDefined",
      "functionAnnotation": "",
      "functionDoc": "Determines if the variable for this reference collection is\n\"well-defined.\" A variable is well-defined if we can prove at\ncompile-time that it\u0027s assigned a value before it\u0027s used.\n\nNotice that if this function returns false, this doesn\u0027t imply that the\nvariable is used before it\u0027s assigned. It just means that we don\u0027t\nhave enough information to make a definitive judgement.\n"
    }
  }
}