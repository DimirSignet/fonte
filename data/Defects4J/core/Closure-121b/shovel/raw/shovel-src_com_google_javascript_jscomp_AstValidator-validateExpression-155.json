{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AstValidator.java",
  "functionName": "validateExpression",
  "functionId": "validateExpression___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/AstValidator.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 155,
  "functionEndLine": 276,
  "numCommitsSeen": 19,
  "timeTaken": 2015,
  "changeHistory": [
    "0b054d7d1b185b02c595c646bc0f11a6d809c934",
    "24fd842a5380a350bcde0bed60287053bc9b37f0",
    "5428589fcac11bb899a44ef827e12a253e29d323",
    "70a5626922ea7e8c98747e22b6986638ba38fadc",
    "4e976ac213f448bab78f5c1432340c489b533d7b",
    "7dfe089019805bd9a62ce26c1993b3c86d1aa3d1"
  ],
  "changeHistoryShort": {
    "0b054d7d1b185b02c595c646bc0f11a6d809c934": "Ybodychange",
    "24fd842a5380a350bcde0bed60287053bc9b37f0": "Ybodychange",
    "5428589fcac11bb899a44ef827e12a253e29d323": "Ybodychange",
    "70a5626922ea7e8c98747e22b6986638ba38fadc": "Ybodychange",
    "4e976ac213f448bab78f5c1432340c489b533d7b": "Ybodychange",
    "7dfe089019805bd9a62ce26c1993b3c86d1aa3d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b054d7d1b185b02c595c646bc0f11a6d809c934": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nDisable cast warnings by default. Most projects however have\nit turn up to ERROR.\n\n*** Original change description ***\n\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nbreaks various projects without whitelists\n\n*** Original change description ***\n\nIntroduced a CAST ast node\n\nR\u003dnicksantos\nDELTA\u003d1968  (1746 added, 44 deleted, 178 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5970\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2394 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/12/12, 5:18 PM",
      "commitName": "0b054d7d1b185b02c595c646bc0f11a6d809c934",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/19/12, 3:19 PM",
      "commitNameOld": "24fd842a5380a350bcde0bed60287053bc9b37f0",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 23.08,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n        case Token.CAST:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 154,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,99 +1,100 @@\n public void validateExpression(Node n) {\n     switch(n.getType()) {\n         case Token.FALSE:\n         case Token.NULL:\n         case Token.THIS:\n         case Token.TRUE:\n             validateChildless(n);\n             return;\n         case Token.DELPROP:\n         case Token.POS:\n         case Token.NEG:\n         case Token.NOT:\n         case Token.INC:\n         case Token.DEC:\n         case Token.TYPEOF:\n         case Token.VOID:\n         case Token.BITNOT:\n+        case Token.CAST:\n             validateUnaryOp(n);\n             return;\n         case Token.COMMA:\n         case Token.OR:\n         case Token.AND:\n         case Token.BITOR:\n         case Token.BITXOR:\n         case Token.BITAND:\n         case Token.EQ:\n         case Token.NE:\n         case Token.SHEQ:\n         case Token.SHNE:\n         case Token.LT:\n         case Token.GT:\n         case Token.LE:\n         case Token.GE:\n         case Token.INSTANCEOF:\n         case Token.IN:\n         case Token.LSH:\n         case Token.RSH:\n         case Token.URSH:\n         case Token.SUB:\n         case Token.ADD:\n         case Token.MUL:\n         case Token.MOD:\n         case Token.DIV:\n             validateBinaryOp(n);\n             return;\n         case Token.ASSIGN:\n         case Token.ASSIGN_BITOR:\n         case Token.ASSIGN_BITXOR:\n         case Token.ASSIGN_BITAND:\n         case Token.ASSIGN_LSH:\n         case Token.ASSIGN_RSH:\n         case Token.ASSIGN_URSH:\n         case Token.ASSIGN_ADD:\n         case Token.ASSIGN_SUB:\n         case Token.ASSIGN_MUL:\n         case Token.ASSIGN_DIV:\n         case Token.ASSIGN_MOD:\n             validateAssignmentExpression(n);\n             return;\n         case Token.HOOK:\n             validateTrinaryOp(n);\n             return;\n         case Token.STRING:\n             validateString(n);\n             return;\n         case Token.NUMBER:\n             validateNumber(n);\n             return;\n         case Token.NAME:\n             validateName(n);\n             return;\n         case Token.GETELEM:\n             validateBinaryOp(n);\n             return;\n         case Token.GETPROP:\n             validateGetProp(n);\n             return;\n         case Token.ARRAYLIT:\n             validateArrayLit(n);\n             return;\n         case Token.OBJECTLIT:\n             validateObjectLit(n);\n             return;\n         case Token.REGEXP:\n             validateRegExpLit(n);\n             return;\n         case Token.CALL:\n             validateCall(n);\n             return;\n         case Token.NEW:\n             validateNew(n);\n             return;\n         case Token.FUNCTION:\n             validateFunctionExpression(n);\n             return;\n         default:\n             violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "24fd842a5380a350bcde0bed60287053bc9b37f0": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback \n\n*** Reason for rollback ***\n\nbreaks various projects without whitelists\n\n*** Original change description ***\n\nIntroduced a CAST ast node\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5848\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2334 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/19/12, 3:19 PM",
      "commitName": "24fd842a5380a350bcde0bed60287053bc9b37f0",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/19/12, 1:47 PM",
      "commitNameOld": "5428589fcac11bb899a44ef827e12a253e29d323",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 154,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,100 +1,99 @@\n public void validateExpression(Node n) {\n     switch(n.getType()) {\n         case Token.FALSE:\n         case Token.NULL:\n         case Token.THIS:\n         case Token.TRUE:\n             validateChildless(n);\n             return;\n         case Token.DELPROP:\n         case Token.POS:\n         case Token.NEG:\n         case Token.NOT:\n         case Token.INC:\n         case Token.DEC:\n         case Token.TYPEOF:\n         case Token.VOID:\n         case Token.BITNOT:\n-        case Token.CAST:\n             validateUnaryOp(n);\n             return;\n         case Token.COMMA:\n         case Token.OR:\n         case Token.AND:\n         case Token.BITOR:\n         case Token.BITXOR:\n         case Token.BITAND:\n         case Token.EQ:\n         case Token.NE:\n         case Token.SHEQ:\n         case Token.SHNE:\n         case Token.LT:\n         case Token.GT:\n         case Token.LE:\n         case Token.GE:\n         case Token.INSTANCEOF:\n         case Token.IN:\n         case Token.LSH:\n         case Token.RSH:\n         case Token.URSH:\n         case Token.SUB:\n         case Token.ADD:\n         case Token.MUL:\n         case Token.MOD:\n         case Token.DIV:\n             validateBinaryOp(n);\n             return;\n         case Token.ASSIGN:\n         case Token.ASSIGN_BITOR:\n         case Token.ASSIGN_BITXOR:\n         case Token.ASSIGN_BITAND:\n         case Token.ASSIGN_LSH:\n         case Token.ASSIGN_RSH:\n         case Token.ASSIGN_URSH:\n         case Token.ASSIGN_ADD:\n         case Token.ASSIGN_SUB:\n         case Token.ASSIGN_MUL:\n         case Token.ASSIGN_DIV:\n         case Token.ASSIGN_MOD:\n             validateAssignmentExpression(n);\n             return;\n         case Token.HOOK:\n             validateTrinaryOp(n);\n             return;\n         case Token.STRING:\n             validateString(n);\n             return;\n         case Token.NUMBER:\n             validateNumber(n);\n             return;\n         case Token.NAME:\n             validateName(n);\n             return;\n         case Token.GETELEM:\n             validateBinaryOp(n);\n             return;\n         case Token.GETPROP:\n             validateGetProp(n);\n             return;\n         case Token.ARRAYLIT:\n             validateArrayLit(n);\n             return;\n         case Token.OBJECTLIT:\n             validateObjectLit(n);\n             return;\n         case Token.REGEXP:\n             validateRegExpLit(n);\n             return;\n         case Token.CALL:\n             validateCall(n);\n             return;\n         case Token.NEW:\n             validateNew(n);\n             return;\n         case Token.FUNCTION:\n             validateFunctionExpression(n);\n             return;\n         default:\n             violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5428589fcac11bb899a44ef827e12a253e29d323": {
      "type": "Ybodychange",
      "commitMessage": "\nIntroduced a CAST ast node\n\nR\u003dnicksantos,dimvar\nDELTA\u003d2832  (2746 added, 13 deleted, 73 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5846\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2332 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/19/12, 1:47 PM",
      "commitName": "5428589fcac11bb899a44ef827e12a253e29d323",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/25/12, 8:39 AM",
      "commitNameOld": "eea16887f19eb56e5e01f3b5627988c7197fed80",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 178.25,
      "commitsBetweenForRepo": 309,
      "commitsBetweenForFile": 1,
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n        case Token.CAST:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 154,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,99 +1,100 @@\n public void validateExpression(Node n) {\n     switch(n.getType()) {\n         case Token.FALSE:\n         case Token.NULL:\n         case Token.THIS:\n         case Token.TRUE:\n             validateChildless(n);\n             return;\n         case Token.DELPROP:\n         case Token.POS:\n         case Token.NEG:\n         case Token.NOT:\n         case Token.INC:\n         case Token.DEC:\n         case Token.TYPEOF:\n         case Token.VOID:\n         case Token.BITNOT:\n+        case Token.CAST:\n             validateUnaryOp(n);\n             return;\n         case Token.COMMA:\n         case Token.OR:\n         case Token.AND:\n         case Token.BITOR:\n         case Token.BITXOR:\n         case Token.BITAND:\n         case Token.EQ:\n         case Token.NE:\n         case Token.SHEQ:\n         case Token.SHNE:\n         case Token.LT:\n         case Token.GT:\n         case Token.LE:\n         case Token.GE:\n         case Token.INSTANCEOF:\n         case Token.IN:\n         case Token.LSH:\n         case Token.RSH:\n         case Token.URSH:\n         case Token.SUB:\n         case Token.ADD:\n         case Token.MUL:\n         case Token.MOD:\n         case Token.DIV:\n             validateBinaryOp(n);\n             return;\n         case Token.ASSIGN:\n         case Token.ASSIGN_BITOR:\n         case Token.ASSIGN_BITXOR:\n         case Token.ASSIGN_BITAND:\n         case Token.ASSIGN_LSH:\n         case Token.ASSIGN_RSH:\n         case Token.ASSIGN_URSH:\n         case Token.ASSIGN_ADD:\n         case Token.ASSIGN_SUB:\n         case Token.ASSIGN_MUL:\n         case Token.ASSIGN_DIV:\n         case Token.ASSIGN_MOD:\n             validateAssignmentExpression(n);\n             return;\n         case Token.HOOK:\n             validateTrinaryOp(n);\n             return;\n         case Token.STRING:\n             validateString(n);\n             return;\n         case Token.NUMBER:\n             validateNumber(n);\n             return;\n         case Token.NAME:\n             validateName(n);\n             return;\n         case Token.GETELEM:\n             validateBinaryOp(n);\n             return;\n         case Token.GETPROP:\n             validateGetProp(n);\n             return;\n         case Token.ARRAYLIT:\n             validateArrayLit(n);\n             return;\n         case Token.OBJECTLIT:\n             validateObjectLit(n);\n             return;\n         case Token.REGEXP:\n             validateRegExpLit(n);\n             return;\n         case Token.CALL:\n             validateCall(n);\n             return;\n         case Token.NEW:\n             validateNew(n);\n             return;\n         case Token.FUNCTION:\n             validateFunctionExpression(n);\n             return;\n         default:\n             violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "70a5626922ea7e8c98747e22b6986638ba38fadc": {
      "type": "Ybodychange",
      "commitMessage": "\nFix various typos, spelling and grammar errors.\nFixes issue 734. \nContributed by Robert Gust Bardon\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4827\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1979 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/18/12, 11:09 AM",
      "commitName": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/25/12, 1:34 PM",
      "commitNameOld": "f412f0c0efd54842b30207c845d65cb826217fd6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 22.9,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 155,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "4e976ac213f448bab78f5c1432340c489b533d7b": {
      "type": "Ybodychange",
      "commitMessage": "\nRemove redundant Token to string function.\n\nR\u003dnicksantos\nDELTA\u003d148  (16 added, 89 deleted, 43 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3765\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1621 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/17/11, 10:08 AM",
      "commitName": "4e976ac213f448bab78f5c1432340c489b533d7b",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 5.73,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 155,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,99 +1,99 @@\n public void validateExpression(Node n) {\n     switch(n.getType()) {\n         case Token.FALSE:\n         case Token.NULL:\n         case Token.THIS:\n         case Token.TRUE:\n             validateChildless(n);\n             return;\n         case Token.DELPROP:\n         case Token.POS:\n         case Token.NEG:\n         case Token.NOT:\n         case Token.INC:\n         case Token.DEC:\n         case Token.TYPEOF:\n         case Token.VOID:\n         case Token.BITNOT:\n             validateUnaryOp(n);\n             return;\n         case Token.COMMA:\n         case Token.OR:\n         case Token.AND:\n         case Token.BITOR:\n         case Token.BITXOR:\n         case Token.BITAND:\n         case Token.EQ:\n         case Token.NE:\n         case Token.SHEQ:\n         case Token.SHNE:\n         case Token.LT:\n         case Token.GT:\n         case Token.LE:\n         case Token.GE:\n         case Token.INSTANCEOF:\n         case Token.IN:\n         case Token.LSH:\n         case Token.RSH:\n         case Token.URSH:\n         case Token.SUB:\n         case Token.ADD:\n         case Token.MUL:\n         case Token.MOD:\n         case Token.DIV:\n             validateBinaryOp(n);\n             return;\n         case Token.ASSIGN:\n         case Token.ASSIGN_BITOR:\n         case Token.ASSIGN_BITXOR:\n         case Token.ASSIGN_BITAND:\n         case Token.ASSIGN_LSH:\n         case Token.ASSIGN_RSH:\n         case Token.ASSIGN_URSH:\n         case Token.ASSIGN_ADD:\n         case Token.ASSIGN_SUB:\n         case Token.ASSIGN_MUL:\n         case Token.ASSIGN_DIV:\n         case Token.ASSIGN_MOD:\n             validateAssignmentExpression(n);\n             return;\n         case Token.HOOK:\n             validateTrinaryOp(n);\n             return;\n         case Token.STRING:\n             validateString(n);\n             return;\n         case Token.NUMBER:\n             validateNumber(n);\n             return;\n         case Token.NAME:\n             validateName(n);\n             return;\n         case Token.GETELEM:\n             validateBinaryOp(n);\n             return;\n         case Token.GETPROP:\n             validateGetProp(n);\n             return;\n         case Token.ARRAYLIT:\n             validateArrayLit(n);\n             return;\n         case Token.OBJECTLIT:\n             validateObjectLit(n);\n             return;\n         case Token.REGEXP:\n             validateRegExpLit(n);\n             return;\n         case Token.CALL:\n             validateCall(n);\n             return;\n         case Token.NEW:\n             validateNew(n);\n             return;\n         case Token.FUNCTION:\n             validateFunctionExpression(n);\n             return;\n         default:\n-            violation(\"Expected expression but was \" + Node.tokenToName(n.getType()), n);\n+            violation(\"Expected expression but was \" + Token.name(n.getType()), n);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7dfe089019805bd9a62ce26c1993b3c86d1aa3d1": {
      "type": "Yintroduced",
      "commitMessage": "\nIntroduce an ast validator.\n\nR\u003dacleung\nDELTA\u003d823  (823 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1314\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@988 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/11/11, 9:52 AM",
      "commitName": "7dfe089019805bd9a62ce26c1993b3c86d1aa3d1",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,99 @@\n+public void validateExpression(Node n) {\n+    switch(n.getType()) {\n+        case Token.FALSE:\n+        case Token.NULL:\n+        case Token.THIS:\n+        case Token.TRUE:\n+            validateChildless(n);\n+            return;\n+        case Token.DELPROP:\n+        case Token.POS:\n+        case Token.NEG:\n+        case Token.NOT:\n+        case Token.INC:\n+        case Token.DEC:\n+        case Token.TYPEOF:\n+        case Token.VOID:\n+        case Token.BITNOT:\n+            validateUnaryOp(n);\n+            return;\n+        case Token.COMMA:\n+        case Token.OR:\n+        case Token.AND:\n+        case Token.BITOR:\n+        case Token.BITXOR:\n+        case Token.BITAND:\n+        case Token.EQ:\n+        case Token.NE:\n+        case Token.SHEQ:\n+        case Token.SHNE:\n+        case Token.LT:\n+        case Token.GT:\n+        case Token.LE:\n+        case Token.GE:\n+        case Token.INSTANCEOF:\n+        case Token.IN:\n+        case Token.LSH:\n+        case Token.RSH:\n+        case Token.URSH:\n+        case Token.SUB:\n+        case Token.ADD:\n+        case Token.MUL:\n+        case Token.MOD:\n+        case Token.DIV:\n+            validateBinaryOp(n);\n+            return;\n+        case Token.ASSIGN:\n+        case Token.ASSIGN_BITOR:\n+        case Token.ASSIGN_BITXOR:\n+        case Token.ASSIGN_BITAND:\n+        case Token.ASSIGN_LSH:\n+        case Token.ASSIGN_RSH:\n+        case Token.ASSIGN_URSH:\n+        case Token.ASSIGN_ADD:\n+        case Token.ASSIGN_SUB:\n+        case Token.ASSIGN_MUL:\n+        case Token.ASSIGN_DIV:\n+        case Token.ASSIGN_MOD:\n+            validateAssignmentExpression(n);\n+            return;\n+        case Token.HOOK:\n+            validateTrinaryOp(n);\n+            return;\n+        case Token.STRING:\n+            validateString(n);\n+            return;\n+        case Token.NUMBER:\n+            validateNumber(n);\n+            return;\n+        case Token.NAME:\n+            validateName(n);\n+            return;\n+        case Token.GETELEM:\n+            validateBinaryOp(n);\n+            return;\n+        case Token.GETPROP:\n+            validateGetProp(n);\n+            return;\n+        case Token.ARRAYLIT:\n+            validateArrayLit(n);\n+            return;\n+        case Token.OBJECTLIT:\n+            validateObjectLit(n);\n+            return;\n+        case Token.REGEXP:\n+            validateRegExpLit(n);\n+            return;\n+        case Token.CALL:\n+            validateCall(n);\n+            return;\n+        case Token.NEW:\n+            validateNew(n);\n+            return;\n+        case Token.FUNCTION:\n+            validateFunctionExpression(n);\n+            return;\n+        default:\n+            violation(\"Expected expression but was \" + Node.tokenToName(n.getType()), n);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void validateExpression(Node n) {\n    switch(n.getType()) {\n        case Token.FALSE:\n        case Token.NULL:\n        case Token.THIS:\n        case Token.TRUE:\n            validateChildless(n);\n            return;\n        case Token.DELPROP:\n        case Token.POS:\n        case Token.NEG:\n        case Token.NOT:\n        case Token.INC:\n        case Token.DEC:\n        case Token.TYPEOF:\n        case Token.VOID:\n        case Token.BITNOT:\n            validateUnaryOp(n);\n            return;\n        case Token.COMMA:\n        case Token.OR:\n        case Token.AND:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n        case Token.EQ:\n        case Token.NE:\n        case Token.SHEQ:\n        case Token.SHNE:\n        case Token.LT:\n        case Token.GT:\n        case Token.LE:\n        case Token.GE:\n        case Token.INSTANCEOF:\n        case Token.IN:\n        case Token.LSH:\n        case Token.RSH:\n        case Token.URSH:\n        case Token.SUB:\n        case Token.ADD:\n        case Token.MUL:\n        case Token.MOD:\n        case Token.DIV:\n            validateBinaryOp(n);\n            return;\n        case Token.ASSIGN:\n        case Token.ASSIGN_BITOR:\n        case Token.ASSIGN_BITXOR:\n        case Token.ASSIGN_BITAND:\n        case Token.ASSIGN_LSH:\n        case Token.ASSIGN_RSH:\n        case Token.ASSIGN_URSH:\n        case Token.ASSIGN_ADD:\n        case Token.ASSIGN_SUB:\n        case Token.ASSIGN_MUL:\n        case Token.ASSIGN_DIV:\n        case Token.ASSIGN_MOD:\n            validateAssignmentExpression(n);\n            return;\n        case Token.HOOK:\n            validateTrinaryOp(n);\n            return;\n        case Token.STRING:\n            validateString(n);\n            return;\n        case Token.NUMBER:\n            validateNumber(n);\n            return;\n        case Token.NAME:\n            validateName(n);\n            return;\n        case Token.GETELEM:\n            validateBinaryOp(n);\n            return;\n        case Token.GETPROP:\n            validateGetProp(n);\n            return;\n        case Token.ARRAYLIT:\n            validateArrayLit(n);\n            return;\n        case Token.OBJECTLIT:\n            validateObjectLit(n);\n            return;\n        case Token.REGEXP:\n            validateRegExpLit(n);\n            return;\n        case Token.CALL:\n            validateCall(n);\n            return;\n        case Token.NEW:\n            validateNew(n);\n            return;\n        case Token.FUNCTION:\n            validateFunctionExpression(n);\n            return;\n        default:\n            violation(\"Expected expression but was \" + Node.tokenToName(n.getType()), n);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/AstValidator.java",
      "functionStartLine": 148,
      "functionName": "validateExpression",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}