{
  "origin": "codeshovel",
  "repositoryName": "Closure-121b",
  "repositoryPath": "/tmp/Closure-121b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeGenerator.java",
  "functionName": "addExpr",
  "functionId": "addExpr___n-Node__minPrecedence-int__context-Context",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeGenerator.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 925,
  "functionEndLine": 934,
  "numCommitsSeen": 83,
  "timeTaken": 5358,
  "changeHistory": [
    "b7c2861bf45b358b26ebc5ee1be9b6ce96bec78a",
    "925a8f78c8c6a407435e6fb4513ad96d617643a3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b7c2861bf45b358b26ebc5ee1be9b6ce96bec78a": "Ybodychange",
    "925a8f78c8c6a407435e6fb4513ad96d617643a3": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b7c2861bf45b358b26ebc5ee1be9b6ce96bec78a": {
      "type": "Ybodychange",
      "commitMessage": "\nFixes issue 756.\nhttp://code.google.com/p/closure-compiler/issues/detail?id\u003d756\nThe bug was that a START_OF_EXPR context is passed downward to the\nobject literal, so parentheses are inserted. The addExpr function was\nclearing only the IN_FOR_INIT_CLAUSE context, but it\u0027s safe to clear all\ncontexts, so I did. The function clearContextForNoInOperator is no\nlonger needed, so I removed it.\nI also deleted the old regression-test script.\n\nR\u003dnicksantos,johnlenz\nDELTA\u003d87  (1 added, 84 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5204\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2100 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/23/12, 1:29 PM",
      "commitName": "b7c2861bf45b358b26ebc5ee1be9b6ce96bec78a",
      "commitAuthor": "dimvar@google.com",
      "commitDateOld": "5/18/12, 11:09 AM",
      "commitNameOld": "70a5626922ea7e8c98747e22b6986638ba38fadc",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 66.1,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "actualSource": "private void addExpr(Node n, int minPrecedence, Context context) {\n    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 n.isIn())) {\n        add(\"(\");\n        add(n, Context.OTHER);\n        add(\")\");\n    } else {\n        add(n, context);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 883,
      "functionName": "addExpr",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n private void addExpr(Node n, int minPrecedence, Context context) {\n-    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.isIn()))) {\n+    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 n.isIn())) {\n         add(\"(\");\n-        add(n, clearContextForNoInOperator(context));\n+        add(n, Context.OTHER);\n         add(\")\");\n     } else {\n         add(n, context);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "925a8f78c8c6a407435e6fb4513ad96d617643a3": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace some straggler \"n.isType() \u003d\u003d Token.XX\" calls.\n\nR\u003dnicksantos\nDELTA\u003d70  (36 added, 6 deleted, 28 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3725\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1601 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/15/11, 5:35 PM",
      "commitName": "925a8f78c8c6a407435e6fb4513ad96d617643a3",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/14/11, 6:13 PM",
      "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void addExpr(Node n, int minPrecedence, Context context) {\n    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.isIn()))) {\n        add(\"(\");\n        add(n, clearContextForNoInOperator(context));\n        add(\")\");\n    } else {\n        add(n, context);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 859,
      "functionName": "addExpr",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,9 @@\n private void addExpr(Node n, int minPrecedence, Context context) {\n-    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.getType() \u003d\u003d Token.IN))) {\n+    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.isIn()))) {\n         add(\"(\");\n         add(n, clearContextForNoInOperator(context));\n         add(\")\");\n     } else {\n         add(n, context);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+private void addExpr(Node n, int minPrecedence, Context context) {\n+    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.getType() \u003d\u003d Token.IN))) {\n+        add(\"(\");\n+        add(n, clearContextForNoInOperator(context));\n+        add(\")\");\n+    } else {\n+        add(n, context);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void addExpr(Node n, int minPrecedence, Context context) {\n    if ((NodeUtil.precedence(n.getType()) \u003c minPrecedence) || ((context \u003d\u003d Context.IN_FOR_INIT_CLAUSE) \u0026\u0026 (n.getType() \u003d\u003d Token.IN))) {\n        add(\"(\");\n        add(n, clearContextForNoInOperator(context));\n        add(\")\");\n    } else {\n        add(n, context);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 656,
      "functionName": "addExpr",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}