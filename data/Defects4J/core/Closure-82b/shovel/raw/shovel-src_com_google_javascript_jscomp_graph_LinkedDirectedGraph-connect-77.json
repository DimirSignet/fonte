{
  "origin": "codeshovel",
  "repositoryName": "Closure-82b",
  "repositoryPath": "/tmp/Closure-82b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinkedDirectedGraph.java",
  "functionName": "connect",
  "functionId": "connect___srcValue-N__edgeValue-E__destValue-N",
  "sourceFilePath": "src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 77,
  "functionEndLine": 86,
  "numCommitsSeen": 10,
  "timeTaken": 702,
  "changeHistory": [
    "3c5a6f6a1b87c655c5eb3ed0ebcfce886ab6a614",
    "97bbbffb65eda01aa9b38a5cec43a598afb39070",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3c5a6f6a1b87c655c5eb3ed0ebcfce886ab6a614": "Ybodychange",
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": "Ymultichange(Yreturntypechange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c5a6f6a1b87c655c5eb3ed0ebcfce886ab6a614": {
      "type": "Ybodychange",
      "commitMessage": "\nAllow graphs without annotations.\n\nR\u003dacleung\nDELTA\u003d405  (249 added, 83 deleted, 73 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d58\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@592 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/3/10, 2:10 PM",
      "commitName": "3c5a6f6a1b87c655c5eb3ed0ebcfce886ab6a614",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/11/10, 9:42 PM",
      "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 21.69,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void connect(N srcValue, E edgeValue, N destValue) {\n    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d useEdgeAnnotations ? new AnnotatedLinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest) : new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n    src.getOutEdges().add(edge);\n    dest.getInEdges().add(edge);\n}",
      "path": "src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
      "functionStartLine": 77,
      "functionName": "connect",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Override\n public void connect(N srcValue, E edgeValue, N destValue) {\n     LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n     LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n-    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n+    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d useEdgeAnnotations ? new AnnotatedLinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest) : new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n     src.getOutEdges().add(edge);\n     dest.getInEdges().add(edge);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/13/10, 10:46 AM",
      "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/13/10, 10:46 AM",
          "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/2/10, 3:08 PM",
          "commitNameOld": "0d98b3ca84c0b6179b71a9de75b0a2fe42d7343f",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 40.82,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void connect(N srcValue, E edgeValue, N destValue) {\n    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n    src.getOutEdges().add(edge);\n    dest.getInEdges().add(edge);\n}",
          "path": "src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
          "functionStartLine": 57,
          "functionName": "connect",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,17 +1,8 @@\n @Override\n-public GraphEdge\u003cN, E\u003e connect(N srcValue, E edgeValue, N destValue) {\n-    DiGraphNode\u003cN, E\u003e node \u003d getDirectedGraphNode(srcValue);\n-    if (node \u003d\u003d null) {\n-        throw new IllegalArgumentException(srcValue + \" does not exist in graph\");\n-    }\n-    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n-    node \u003d getDirectedGraphNode(destValue);\n-    if (node \u003d\u003d null) {\n-        throw new IllegalArgumentException(destValue + \" does not exist in graph\");\n-    }\n-    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n+public void connect(N srcValue, E edgeValue, N destValue) {\n+    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n+    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n     LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n     src.getOutEdges().add(edge);\n     dest.getInEdges().add(edge);\n-    return edge;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "GraphEdge\u003cN,E\u003e",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/13/10, 10:46 AM",
          "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/2/10, 3:08 PM",
          "commitNameOld": "0d98b3ca84c0b6179b71a9de75b0a2fe42d7343f",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 40.82,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void connect(N srcValue, E edgeValue, N destValue) {\n    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n    src.getOutEdges().add(edge);\n    dest.getInEdges().add(edge);\n}",
          "path": "src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
          "functionStartLine": 57,
          "functionName": "connect",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,17 +1,8 @@\n @Override\n-public GraphEdge\u003cN, E\u003e connect(N srcValue, E edgeValue, N destValue) {\n-    DiGraphNode\u003cN, E\u003e node \u003d getDirectedGraphNode(srcValue);\n-    if (node \u003d\u003d null) {\n-        throw new IllegalArgumentException(srcValue + \" does not exist in graph\");\n-    }\n-    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n-    node \u003d getDirectedGraphNode(destValue);\n-    if (node \u003d\u003d null) {\n-        throw new IllegalArgumentException(destValue + \" does not exist in graph\");\n-    }\n-    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n+public void connect(N srcValue, E edgeValue, N destValue) {\n+    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d getNodeOrFail(srcValue);\n+    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d getNodeOrFail(destValue);\n     LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n     src.getOutEdges().add(edge);\n     dest.getInEdges().add(edge);\n-    return edge;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+@Override\n+public GraphEdge\u003cN, E\u003e connect(N srcValue, E edgeValue, N destValue) {\n+    DiGraphNode\u003cN, E\u003e node \u003d getDirectedGraphNode(srcValue);\n+    if (node \u003d\u003d null) {\n+        throw new IllegalArgumentException(srcValue + \" does not exist in graph\");\n+    }\n+    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n+    node \u003d getDirectedGraphNode(destValue);\n+    if (node \u003d\u003d null) {\n+        throw new IllegalArgumentException(destValue + \" does not exist in graph\");\n+    }\n+    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n+    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n+    src.getOutEdges().add(edge);\n+    dest.getInEdges().add(edge);\n+    return edge;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic GraphEdge\u003cN, E\u003e connect(N srcValue, E edgeValue, N destValue) {\n    DiGraphNode\u003cN, E\u003e node \u003d getDirectedGraphNode(srcValue);\n    if (node \u003d\u003d null) {\n        throw new IllegalArgumentException(srcValue + \" does not exist in graph\");\n    }\n    LinkedDirectedGraphNode\u003cN, E\u003e src \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n    node \u003d getDirectedGraphNode(destValue);\n    if (node \u003d\u003d null) {\n        throw new IllegalArgumentException(destValue + \" does not exist in graph\");\n    }\n    LinkedDirectedGraphNode\u003cN, E\u003e dest \u003d (LinkedDirectedGraphNode\u003cN, E\u003e) node;\n    LinkedDirectedGraphEdge\u003cN, E\u003e edge \u003d new LinkedDirectedGraphEdge\u003cN, E\u003e(src, edgeValue, dest);\n    src.getOutEdges().add(edge);\n    dest.getInEdges().add(edge);\n    return edge;\n}",
      "path": "src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java",
      "functionStartLine": 49,
      "functionName": "connect",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}