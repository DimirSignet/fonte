{
  "origin": "codeshovel",
  "repositoryName": "Closure-82b",
  "repositoryPath": "/tmp/Closure-82b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeInference.java",
  "functionName": "ensurePropertyDefined",
  "functionId": "ensurePropertyDefined___getprop-Node__rightType-JSType",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeInference.java",
  "functionAnnotation": "",
  "functionDoc": "Defines a property if the property has not been defined yet.\n",
  "functionStartLine": 548,
  "functionEndLine": 590,
  "numCommitsSeen": 42,
  "timeTaken": 2733,
  "changeHistory": [
    "6bbac115c9a7928a7053b2da3a78df9569df8570",
    "6bf3a6410d71c3da0ea29c8ca425962d284f361c",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6bbac115c9a7928a7053b2da3a78df9569df8570": "Ybodychange",
    "6bf3a6410d71c3da0ea29c8ca425962d284f361c": "Ybodychange",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6bbac115c9a7928a7053b2da3a78df9569df8570": {
      "type": "Ybodychange",
      "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 9:19 AM",
      "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "12/15/10, 2:37 PM",
      "commitNameOld": "f1a08e4f38ace8c387085a7e7e2f52adaa9d88ca",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 22.78,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private void ensurePropertyDefined(Node getprop, JSType rightType) {\n    String propName \u003d getprop.getLastChild().getString();\n    JSType nodeType \u003d getJSType(getprop.getFirstChild());\n    ObjectType objectType \u003d ObjectType.cast(nodeType.restrictByNotNullOrUndefined());\n    if (objectType \u003d\u003d null) {\n        registry.registerPropertyOnType(propName, nodeType);\n    } else {\n        if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n            return;\n        }\n        if (!objectType.isPropertyTypeDeclared(propName)) {\n            if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                if (\"prototype\".equals(propName)) {\n                    objectType.defineDeclaredProperty(propName, rightType, false, getprop);\n                } else {\n                    objectType.defineInferredProperty(propName, rightType, false, getprop);\n                }\n            } else {\n                if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                    objectType.defineInferredProperty(propName, rightType, false, getprop);\n                } else {\n                    registry.registerPropertyOnType(propName, objectType);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 548,
      "functionName": "ensurePropertyDefined",
      "functionAnnotation": "",
      "functionDoc": "Defines a property if the property has not been defined yet.\n",
      "diff": "@@ -1,27 +1,27 @@\n private void ensurePropertyDefined(Node getprop, JSType rightType) {\n     String propName \u003d getprop.getLastChild().getString();\n     JSType nodeType \u003d getJSType(getprop.getFirstChild());\n     ObjectType objectType \u003d ObjectType.cast(nodeType.restrictByNotNullOrUndefined());\n     if (objectType \u003d\u003d null) {\n         registry.registerPropertyOnType(propName, nodeType);\n     } else {\n         if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n             return;\n         }\n         if (!objectType.isPropertyTypeDeclared(propName)) {\n             if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                 if (\"prototype\".equals(propName)) {\n-                    objectType.defineDeclaredProperty(propName, rightType, false);\n+                    objectType.defineDeclaredProperty(propName, rightType, false, getprop);\n                 } else {\n-                    objectType.defineInferredProperty(propName, rightType, false);\n+                    objectType.defineInferredProperty(propName, rightType, false, getprop);\n                 }\n             } else {\n                 if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n-                    objectType.defineInferredProperty(propName, rightType, false);\n+                    objectType.defineInferredProperty(propName, rightType, false, getprop);\n                 } else {\n                     registry.registerPropertyOnType(propName, objectType);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6bf3a6410d71c3da0ea29c8ca425962d284f361c": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/14 09:56:57 by nicksantos\n\n\twhen looking for missing properties, make sure we track properties\n\tassigned to ALL types and partial-object UNION types.\n\n\tR\u003dmoedinger\n\tDELTA\u003d57  (53 added, 1 deleted, 3 changed)\n\nChange on 2010/07/14 12:34:22 by acleung\n\n\tPrevent future JDK change onCollections.sort that would breaks GraphColoringTest.\n\n\tR\u003dnicksantos\n\tDELTA\u003d2  (2 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d51006\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@277 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/14/10, 3:50 PM",
      "commitName": "6bf3a6410d71c3da0ea29c8ca425962d284f361c",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "7/14/10, 10:45 AM",
      "commitNameOld": "3c4504a78a84e4715439cddb4028c25be2ce308f",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void ensurePropertyDefined(Node getprop, JSType rightType) {\n    String propName \u003d getprop.getLastChild().getString();\n    JSType nodeType \u003d getJSType(getprop.getFirstChild());\n    ObjectType objectType \u003d ObjectType.cast(nodeType.restrictByNotNullOrUndefined());\n    if (objectType \u003d\u003d null) {\n        registry.registerPropertyOnType(propName, nodeType);\n    } else {\n        if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n            return;\n        }\n        if (!objectType.isPropertyTypeDeclared(propName)) {\n            if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                if (\"prototype\".equals(propName)) {\n                    objectType.defineDeclaredProperty(propName, rightType, false);\n                } else {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                }\n            } else {\n                if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                } else {\n                    registry.registerPropertyOnType(propName, objectType);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 547,
      "functionName": "ensurePropertyDefined",
      "functionAnnotation": "",
      "functionDoc": "Defines a property if the property has not been defined yet.\n",
      "diff": "@@ -1,24 +1,27 @@\n private void ensurePropertyDefined(Node getprop, JSType rightType) {\n-    ObjectType objectType \u003d ObjectType.cast(getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());\n-    if (objectType !\u003d null) {\n+    String propName \u003d getprop.getLastChild().getString();\n+    JSType nodeType \u003d getJSType(getprop.getFirstChild());\n+    ObjectType objectType \u003d ObjectType.cast(nodeType.restrictByNotNullOrUndefined());\n+    if (objectType \u003d\u003d null) {\n+        registry.registerPropertyOnType(propName, nodeType);\n+    } else {\n         if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n             return;\n         }\n-        String propName \u003d getprop.getLastChild().getString();\n         if (!objectType.isPropertyTypeDeclared(propName)) {\n             if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                 if (\"prototype\".equals(propName)) {\n                     objectType.defineDeclaredProperty(propName, rightType, false);\n                 } else {\n                     objectType.defineInferredProperty(propName, rightType, false);\n                 }\n             } else {\n                 if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                     objectType.defineInferredProperty(propName, rightType, false);\n                 } else {\n                     registry.registerPropertyOnType(propName, objectType);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": {
      "type": "Ybodychange",
      "commitMessage": "Add warnings for functions that are ambiguously defined on different\nbrowsers.\n\nAdd better support for Caja.\n\nRollback the change to CoalesceVariableNames, because it had problems.\n\nInternal type system refactoring.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@33 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/15/09, 1:52 PM",
      "commitName": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 20.29,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private void ensurePropertyDefined(Node getprop, JSType rightType) {\n    ObjectType objectType \u003d ObjectType.cast(getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());\n    if (objectType !\u003d null) {\n        if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n            return;\n        }\n        String propName \u003d getprop.getLastChild().getString();\n        if (!objectType.isPropertyTypeDeclared(propName)) {\n            if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                if (\"prototype\".equals(propName)) {\n                    objectType.defineDeclaredProperty(propName, rightType, false);\n                } else {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                }\n            } else {\n                if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                } else {\n                    registry.registerPropertyOnType(propName, objectType);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 508,
      "functionName": "ensurePropertyDefined",
      "functionAnnotation": "",
      "functionDoc": "Defines a property if the property has not been defined yet.\n",
      "diff": "@@ -1,25 +1,24 @@\n private void ensurePropertyDefined(Node getprop, JSType rightType) {\n-    JSType ownerType \u003d getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined();\n-    if (ownerType instanceof ObjectType) {\n-        ObjectType objectType \u003d (ObjectType) ownerType;\n+    ObjectType objectType \u003d ObjectType.cast(getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());\n+    if (objectType !\u003d null) {\n         if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n             return;\n         }\n         String propName \u003d getprop.getLastChild().getString();\n         if (!objectType.isPropertyTypeDeclared(propName)) {\n             if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                 if (\"prototype\".equals(propName)) {\n                     objectType.defineDeclaredProperty(propName, rightType, false);\n                 } else {\n                     objectType.defineInferredProperty(propName, rightType, false);\n                 }\n             } else {\n                 if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                     objectType.defineInferredProperty(propName, rightType, false);\n                 } else {\n                     registry.registerPropertyOnType(propName, objectType);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,25 @@\n+private void ensurePropertyDefined(Node getprop, JSType rightType) {\n+    JSType ownerType \u003d getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined();\n+    if (ownerType instanceof ObjectType) {\n+        ObjectType objectType \u003d (ObjectType) ownerType;\n+        if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n+            return;\n+        }\n+        String propName \u003d getprop.getLastChild().getString();\n+        if (!objectType.isPropertyTypeDeclared(propName)) {\n+            if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n+                if (\"prototype\".equals(propName)) {\n+                    objectType.defineDeclaredProperty(propName, rightType, false);\n+                } else {\n+                    objectType.defineInferredProperty(propName, rightType, false);\n+                }\n+            } else {\n+                if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n+                    objectType.defineInferredProperty(propName, rightType, false);\n+                } else {\n+                    registry.registerPropertyOnType(propName, objectType);\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void ensurePropertyDefined(Node getprop, JSType rightType) {\n    JSType ownerType \u003d getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined();\n    if (ownerType instanceof ObjectType) {\n        ObjectType objectType \u003d (ObjectType) ownerType;\n        if (ensurePropertyDeclaredHelper(getprop, objectType)) {\n            return;\n        }\n        String propName \u003d getprop.getLastChild().getString();\n        if (!objectType.isPropertyTypeDeclared(propName)) {\n            if (objectType.hasProperty(propName) || !objectType.isInstanceType()) {\n                if (\"prototype\".equals(propName)) {\n                    objectType.defineDeclaredProperty(propName, rightType, false);\n                } else {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                }\n            } else {\n                if (getprop.getFirstChild().getType() \u003d\u003d Token.THIS \u0026\u0026 getJSType(syntacticScope.getRootNode()).isConstructor()) {\n                    objectType.defineInferredProperty(propName, rightType, false);\n                } else {\n                    registry.registerPropertyOnType(propName, objectType);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 509,
      "functionName": "ensurePropertyDefined",
      "functionAnnotation": "",
      "functionDoc": "Defines a property if the property has not been defined yet.\n"
    }
  }
}