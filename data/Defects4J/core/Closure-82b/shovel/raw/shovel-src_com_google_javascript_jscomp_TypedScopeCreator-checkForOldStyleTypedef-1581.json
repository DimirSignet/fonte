{
  "origin": "codeshovel",
  "repositoryName": "Closure-82b",
  "repositoryPath": "/tmp/Closure-82b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypedScopeCreator.java",
  "functionName": "checkForOldStyleTypedef",
  "functionId": "$checkForOldStyleTypedef___t-NodeTraversal__candidate-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1581,
  "functionEndLine": 1607,
  "numCommitsSeen": 42,
  "timeTaken": 2952,
  "changeHistory": [
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25",
    "c764a46abf211d4677fadc33f7d466e5b14fa088",
    "83e4a9768aadbdfb0481a0aa44157b4dc80189d2",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25": "Ybodychange",
    "c764a46abf211d4677fadc33f7d466e5b14fa088": "Ybodychange",
    "83e4a9768aadbdfb0481a0aa44157b4dc80189d2": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3faef1d4959a55ebd86a09cd5395afb54ab5ec25": {
      "type": "Ybodychange",
      "commitMessage": "\nHandle circular typedefs in a more robust way.\nThis comes up when we switch to different type-resolution algorithms\nthat resolve the forward-declared type later and ubox it.\nSadly, i don\u0027t have a good test case for this right now.\n\nR\u003djohnlenz\nDELTA\u003d17  (10 added, 1 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d764010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@516 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/27/10, 9:43 AM",
      "commitName": "3faef1d4959a55ebd86a09cd5395afb54ab5ec25",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/26/10, 8:07 AM",
      "commitNameOld": "1bd8d2f0f4f3edcc11aa441f50223967a98bf85d",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n    String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n    if (typedef !\u003d null) {\n        typeRegistry.declareType(typedef, getNativeType(UNKNOWN_TYPE));\n        JSDocInfo info \u003d candidate.getJSDocInfo();\n        JSType realType \u003d null;\n        if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n            realType \u003d info.getType().evaluate(scope, typeRegistry);\n        }\n        if (realType \u003d\u003d null) {\n            compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n        }\n        typeRegistry.overwriteDeclaredType(typedef, realType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1458,
      "functionName": "checkForOldStyleTypedef",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n     String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n     if (typedef !\u003d null) {\n-        typeRegistry.forwardDeclareType(typedef);\n+        typeRegistry.declareType(typedef, getNativeType(UNKNOWN_TYPE));\n         JSDocInfo info \u003d candidate.getJSDocInfo();\n         JSType realType \u003d null;\n         if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n             realType \u003d info.getType().evaluate(scope, typeRegistry);\n         }\n         if (realType \u003d\u003d null) {\n             compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n         }\n-        typeRegistry.declareType(typedef, realType);\n+        typeRegistry.overwriteDeclaredType(typedef, realType);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c764a46abf211d4677fadc33f7d466e5b14fa088": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/13 by john\n\n        Here is a crazy thought, let\u0027s not require the JSTypeRegistry during\n        parsing.\n\n        There are basically two changes here:\n        1) The IRFactory was looking for enums to seed the JSTypeRegistry, so\n        we do that when we setup for type interence.\n        2) The JSDocParser was checking the types of @defines objects, now do\n        that during ProcessDefines.\n\n        R\u003drobert,mark\n        DELTA\u003d207  (82 added, 89 deleted, 36 changed)\n\nChange on 2010/04/14 by nick\n\n        Add a debugging function for JSType hashcodes.\n        i found this useful, and thought others might too.\n\n        R\u003djohn\n        DELTA\u003d69  (69 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dfqsoxx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@183 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 9:15 AM",
      "commitName": "c764a46abf211d4677fadc33f7d466e5b14fa088",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/13/10, 2:39 PM",
      "commitNameOld": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n    String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n    if (typedef !\u003d null) {\n        typeRegistry.forwardDeclareType(typedef);\n        JSDocInfo info \u003d candidate.getJSDocInfo();\n        JSType realType \u003d null;\n        if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n            realType \u003d info.getType().evaluate(scope, typeRegistry);\n        }\n        if (realType \u003d\u003d null) {\n            compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n        }\n        typeRegistry.declareType(typedef, realType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 993,
      "functionName": "checkForOldStyleTypedef",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n     String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n     if (typedef !\u003d null) {\n         typeRegistry.forwardDeclareType(typedef);\n         JSDocInfo info \u003d candidate.getJSDocInfo();\n         JSType realType \u003d null;\n         if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n-            realType \u003d info.getType().evaluate(scope);\n+            realType \u003d info.getType().evaluate(scope, typeRegistry);\n         }\n         if (realType \u003d\u003d null) {\n             compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n         }\n         typeRegistry.declareType(typedef, realType);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "83e4a9768aadbdfb0481a0aa44157b4dc80189d2": {
      "type": "Ybodychange",
      "commitMessage": "Fix a null pointer exception in TypedScopeCreator\n\nAdd AST annotations for @javadispatch\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@82 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/10, 9:35 AM",
      "commitName": "83e4a9768aadbdfb0481a0aa44157b4dc80189d2",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/8/10, 1:41 PM",
      "commitNameOld": "6d374c3ee4c9c2651ffb44048924e127fd2bf37c",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 23.83,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n    String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n    if (typedef !\u003d null) {\n        typeRegistry.forwardDeclareType(typedef);\n        JSDocInfo info \u003d candidate.getJSDocInfo();\n        JSType realType \u003d null;\n        if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n            realType \u003d info.getType().evaluate(scope);\n        }\n        if (realType \u003d\u003d null) {\n            compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n        }\n        typeRegistry.declareType(typedef, realType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 956,
      "functionName": "checkForOldStyleTypedef",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,15 @@\n private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n     String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n     if (typedef !\u003d null) {\n         typeRegistry.forwardDeclareType(typedef);\n         JSDocInfo info \u003d candidate.getJSDocInfo();\n-        JSType realType \u003d info \u003d\u003d null ? null : info.getType().evaluate(scope);\n+        JSType realType \u003d null;\n+        if (info !\u003d null \u0026\u0026 info.getType() !\u003d null) {\n+            realType \u003d info.getType().evaluate(scope);\n+        }\n         if (realType \u003d\u003d null) {\n             compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n         }\n         typeRegistry.declareType(typedef, realType);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n+    String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n+    if (typedef !\u003d null) {\n+        typeRegistry.forwardDeclareType(typedef);\n+        JSDocInfo info \u003d candidate.getJSDocInfo();\n+        JSType realType \u003d info \u003d\u003d null ? null : info.getType().evaluate(scope);\n+        if (realType \u003d\u003d null) {\n+            compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n+        }\n+        typeRegistry.declareType(typedef, realType);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n    String typedef \u003d codingConvention.identifyTypeDefAssign(candidate);\n    if (typedef !\u003d null) {\n        typeRegistry.forwardDeclareType(typedef);\n        JSDocInfo info \u003d candidate.getJSDocInfo();\n        JSType realType \u003d info \u003d\u003d null ? null : info.getType().evaluate(scope);\n        if (realType \u003d\u003d null) {\n            compiler.report(JSError.make(t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n        }\n        typeRegistry.declareType(typedef, realType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 926,
      "functionName": "checkForOldStyleTypedef",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}