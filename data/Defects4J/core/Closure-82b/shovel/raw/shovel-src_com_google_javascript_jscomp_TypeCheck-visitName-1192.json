{
  "origin": "codeshovel",
  "repositoryName": "Closure-82b",
  "repositoryPath": "/tmp/Closure-82b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeCheck.java",
  "functionName": "visitName",
  "functionId": "visitName___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeCheck.java",
  "functionAnnotation": "",
  "functionDoc": "Visits a NAME node.\n\n@param t The node traversal object that supplies context, such as the\nscope chain to use in name lookups as well as error reporting.\n@param n The node being visited.\n@param parent The parent of the node n.\n@return whether the node is typeable or not\n",
  "functionStartLine": 1192,
  "functionEndLine": 1221,
  "numCommitsSeen": 32,
  "timeTaken": 2642,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,19 @@\n+boolean visitName(NodeTraversal t, Node n, Node parent) {\n+    int parentNodeType \u003d parent.getType();\n+    if (parentNodeType \u003d\u003d Token.FUNCTION || parentNodeType \u003d\u003d Token.CATCH || parentNodeType \u003d\u003d Token.LP || parentNodeType \u003d\u003d Token.VAR) {\n+        return false;\n+    }\n+    JSType type \u003d n.getJSType();\n+    if (type \u003d\u003d null) {\n+        type \u003d getNativeType(UNKNOWN_TYPE);\n+        Var var \u003d t.getScope().getVar(n.getString());\n+        if (var !\u003d null) {\n+            JSType varType \u003d var.getType();\n+            if (varType !\u003d null) {\n+                type \u003d varType;\n+            }\n+        }\n+    }\n+    ensureTyped(t, n, type);\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "boolean visitName(NodeTraversal t, Node n, Node parent) {\n    int parentNodeType \u003d parent.getType();\n    if (parentNodeType \u003d\u003d Token.FUNCTION || parentNodeType \u003d\u003d Token.CATCH || parentNodeType \u003d\u003d Token.LP || parentNodeType \u003d\u003d Token.VAR) {\n        return false;\n    }\n    JSType type \u003d n.getJSType();\n    if (type \u003d\u003d null) {\n        type \u003d getNativeType(UNKNOWN_TYPE);\n        Var var \u003d t.getScope().getVar(n.getString());\n        if (var !\u003d null) {\n            JSType varType \u003d var.getType();\n            if (varType !\u003d null) {\n                type \u003d varType;\n            }\n        }\n    }\n    ensureTyped(t, n, type);\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 1077,
      "functionName": "visitName",
      "functionAnnotation": "",
      "functionDoc": "Visits a NAME node.\n\n@param t The node traversal object that supplies context, such as the\nscope chain to use in name lookups as well as error reporting.\n@param n The node being visited.\n@param parent The parent of the node n.\n@return whether the node is typeable or not\n"
    }
  }
}