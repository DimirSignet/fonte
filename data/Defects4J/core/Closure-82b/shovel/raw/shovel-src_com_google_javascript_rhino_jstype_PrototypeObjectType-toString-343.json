{
  "origin": "codeshovel",
  "repositoryName": "Closure-82b",
  "repositoryPath": "/tmp/Closure-82b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrototypeObjectType.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 343,
  "functionEndLine": 381,
  "numCommitsSeen": 11,
  "timeTaken": 439,
  "changeHistory": [
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": "Ybodychange",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a2f9d4f043be0fac4d868061fbc5d088ed31823b": {
      "type": "Ybodychange",
      "commitMessage": "Make debugging function inlining issues a little bit easier. (John)\nR\u003dalan\nDELTA\u003d3  (2 added, 0 deleted, 1 changed)\n\nPretty-print anonymous object types, so that it\u0027s easier to see\nwhat\u0027s in them. (Nick)\nR\u003dalan\n\nAdd externs for new methods of HTML5 History class. (Naoki)\nR\u003dalan\nDELTA\u003d19  (19 added, 0 deleted, 0 changed)\n\n\nHandle classes that have been renamed by the normalizer pass by reading the NAME\nfrom the AST instead of just using the reference name. (Andrew)\nR\u003dnada\nDELTA\u003d50  (33 added, 1 deleted, 16 changed)\n\nFix runtime type check to check the global this object instead of window since not all javascript will have a DOM. (Andrew)\nR\u003dnada\nDELTA\u003d21  (19 added, 0 deleted, 2 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003drvhacw\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@166 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/1/10, 8:34 AM",
      "commitName": "a2f9d4f043be0fac4d868061fbc5d088ed31823b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/26/10, 1:59 PM",
      "commitNameOld": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 64.73,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic String toString() {\n    if (hasReferenceName()) {\n        return getReferenceName();\n    } else if (prettyPrint) {\n        Set\u003cString\u003e propertyNames \u003d Sets.newTreeSet();\n        for (ObjectType current \u003d this; current !\u003d null \u0026\u0026 !current.isNativeObjectType() \u0026\u0026 propertyNames.size() \u003c\u003d MAX_PRETTY_PRINTED_PROPERTIES; current \u003d current.getImplicitPrototype()) {\n            propertyNames.addAll(current.getOwnPropertyNames());\n        }\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(\"{\");\n        int i \u003d 0;\n        for (String property : propertyNames) {\n            if (i \u003e 0) {\n                sb.append(\", \");\n            }\n            sb.append(property);\n            sb.append(\": \");\n            sb.append(getPropertyType(property).toString());\n            ++i;\n            if (i \u003d\u003d MAX_PRETTY_PRINTED_PROPERTIES) {\n                sb.append(\", ...\");\n                break;\n            }\n        }\n        sb.append(\"}\");\n        return sb.toString();\n    } else {\n        return \"{...}\";\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 329,
      "functionName": "toString",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,31 @@\n @Override\n public String toString() {\n-    return getReferenceName();\n+    if (hasReferenceName()) {\n+        return getReferenceName();\n+    } else if (prettyPrint) {\n+        Set\u003cString\u003e propertyNames \u003d Sets.newTreeSet();\n+        for (ObjectType current \u003d this; current !\u003d null \u0026\u0026 !current.isNativeObjectType() \u0026\u0026 propertyNames.size() \u003c\u003d MAX_PRETTY_PRINTED_PROPERTIES; current \u003d current.getImplicitPrototype()) {\n+            propertyNames.addAll(current.getOwnPropertyNames());\n+        }\n+        StringBuilder sb \u003d new StringBuilder();\n+        sb.append(\"{\");\n+        int i \u003d 0;\n+        for (String property : propertyNames) {\n+            if (i \u003e 0) {\n+                sb.append(\", \");\n+            }\n+            sb.append(property);\n+            sb.append(\": \");\n+            sb.append(getPropertyType(property).toString());\n+            ++i;\n+            if (i \u003d\u003d MAX_PRETTY_PRINTED_PROPERTIES) {\n+                sb.append(\", ...\");\n+                break;\n+            }\n+        }\n+        sb.append(\"}\");\n+        return sb.toString();\n+    } else {\n+        return \"{...}\";\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Ybodychange",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 21.63,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic String toString() {\n    return getReferenceName();\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 320,
      "functionName": "toString",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,4 @@\n @Override\n public String toString() {\n-    return getName();\n+    return getReferenceName();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+public String toString() {\n+    return getName();\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic String toString() {\n    return getName();\n}",
      "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
      "functionStartLine": 320,
      "functionName": "toString",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}