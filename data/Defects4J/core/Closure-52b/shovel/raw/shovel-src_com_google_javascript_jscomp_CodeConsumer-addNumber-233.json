{
  "origin": "codeshovel",
  "repositoryName": "Closure-52b",
  "repositoryPath": "/tmp/Closure-52b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeConsumer.java",
  "functionName": "addNumber",
  "functionId": "addNumber___x-double",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeConsumer.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 233,
  "functionEndLine": 259,
  "numCommitsSeen": 16,
  "timeTaken": 438,
  "changeHistory": [
    "c9e89727dc8063d087d28e42629606f4fd74a6e5",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": "Ybodychange",
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c9e89727dc8063d087d28e42629606f4fd74a6e5": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/22 by nicksantos\n\n\tvariable coalescing better be run AFTER ambiguate properties, and\n\tafter denormalization.\n\n\tR\u003djohnlenz\n\tDELTA\u003d36  (20 added, 16 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d34005\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@248 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/22/10, 4:00 PM",
      "commitName": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 78.15,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (Math.abs(x) \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 262,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n     if ((long) x \u003d\u003d x) {\n         long value \u003d (long) x;\n         long mantissa \u003d value;\n         int exp \u003d 0;\n-        if (x \u003e\u003d 100) {\n+        if (Math.abs(x) \u003e\u003d 100) {\n             while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                 mantissa /\u003d 10;\n                 exp++;\n             }\n         }\n         if (exp \u003e 2) {\n             add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n         } else {\n             add(Long.toString(value));\n         }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "efd3c178e471df6a689c1a50fbd7c404e778bfaa": {
      "type": "Ybodychange",
      "commitMessage": "Better number printing.\nAdd flags for fine-grained warning controls.\nBetter type-declaration finding.\nAdded some missing externs.\nMarked externs that don\u0027t have side effects.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@10 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/13/09, 11:38 AM",
      "commitName": "efd3c178e471df6a689c1a50fbd7c404e778bfaa",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 9.82,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        long value \u003d (long) x;\n        long mantissa \u003d value;\n        int exp \u003d 0;\n        if (x \u003e\u003d 100) {\n            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n                mantissa /\u003d 10;\n                exp++;\n            }\n        }\n        if (exp \u003e 2) {\n            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n        } else {\n            add(Long.toString(value));\n        }\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 262,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,24 @@\n void addNumber(double x) {\n     char prev \u003d getLastChar();\n     if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n         add(\" \");\n     }\n     if ((long) x \u003d\u003d x) {\n-        add(Long.toString((long) x));\n+        long value \u003d (long) x;\n+        long mantissa \u003d value;\n+        int exp \u003d 0;\n+        if (x \u003e\u003d 100) {\n+            while (mantissa / 10 * Math.pow(10, exp + 1) \u003d\u003d value) {\n+                mantissa /\u003d 10;\n+                exp++;\n+            }\n+        }\n+        if (exp \u003e 2) {\n+            add(Long.toString(mantissa) + \"E\" + Integer.toString(exp));\n+        } else {\n+            add(Long.toString(value));\n+        }\n     } else {\n         add(String.valueOf(x));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+void addNumber(double x) {\n+    char prev \u003d getLastChar();\n+    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n+        add(\" \");\n+    }\n+    if ((long) x \u003d\u003d x) {\n+        add(Long.toString((long) x));\n+    } else {\n+        add(String.valueOf(x));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void addNumber(double x) {\n    char prev \u003d getLastChar();\n    if (x \u003c 0 \u0026\u0026 prev \u003d\u003d \u0027-\u0027) {\n        add(\" \");\n    }\n    if ((long) x \u003d\u003d x) {\n        add(Long.toString((long) x));\n    } else {\n        add(String.valueOf(x));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeConsumer.java",
      "functionStartLine": 261,
      "functionName": "addNumber",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}