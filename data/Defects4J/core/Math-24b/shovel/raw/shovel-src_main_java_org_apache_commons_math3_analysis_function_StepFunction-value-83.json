{
  "origin": "codeshovel",
  "repositoryName": "Math-24b",
  "repositoryPath": "/tmp/Math-24b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StepFunction.java",
  "functionName": "value",
  "functionId": "value___x-double",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java",
  "functionAnnotation": "",
  "functionDoc": "@inheritDoc}\n",
  "functionStartLine": 83,
  "functionEndLine": 100,
  "numCommitsSeen": 11,
  "timeTaken": 12091,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "d6f6b71901744f34524767875e87c3cb8689ac61"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "d6f6b71901744f34524767875e87c3cb8689ac61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public double value(double x) {\n    int index \u003d Arrays.binarySearch(abscissa, x);\n    double fx \u003d 0;\n    if (index \u003c -1) {\n        fx \u003d ordinate[-index - 2];\n    } else if (index \u003e\u003d 0) {\n        fx \u003d ordinate[index];\n    } else {\n        fx \u003d ordinate[0];\n    }\n    return fx;\n}",
      "path": "src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java",
      "functionStartLine": 80,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/analysis/function/StepFunction.java",
        "newPath": "src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java",
        "oldMethodName": "value",
        "newMethodName": "value"
      }
    },
    "d6f6b71901744f34524767875e87c3cb8689ac61": {
      "type": "Yintroduced",
      "commitMessage": "MATH-503\nStep function.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1066018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/1/11, 4:01 AM",
      "commitName": "d6f6b71901744f34524767875e87c3cb8689ac61",
      "commitAuthor": "Gilles Sadowski",
      "diff": "@@ -0,0 +1,12 @@\n+public double value(double x) {\n+    int index \u003d Arrays.binarySearch(abscissa, x);\n+    double fx \u003d 0;\n+    if (index \u003c -1) {\n+        fx \u003d ordinate[-index - 2];\n+    } else if (index \u003e\u003d 0) {\n+        fx \u003d ordinate[index];\n+    } else {\n+        fx \u003d ordinate[0];\n+    }\n+    return fx;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public double value(double x) {\n    int index \u003d Arrays.binarySearch(abscissa, x);\n    double fx \u003d 0;\n    if (index \u003c -1) {\n        fx \u003d ordinate[-index - 2];\n    } else if (index \u003e\u003d 0) {\n        fx \u003d ordinate[index];\n    } else {\n        fx \u003d ordinate[0];\n    }\n    return fx;\n}",
      "path": "src/main/java/org/apache/commons/math/analysis/function/StepFunction.java",
      "functionStartLine": 71,
      "functionName": "value",
      "functionAnnotation": "",
      "functionDoc": "@inheritDoc}\n"
    }
  }
}