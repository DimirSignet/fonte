{
  "origin": "codeshovel",
  "repositoryName": "Math-26b",
  "repositoryPath": "/tmp/Math-26b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArgUtils.java",
  "functionName": "flatten",
  "functionId": "flatten___array-Object[]",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/exception/util/ArgUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
  "functionStartLine": 41,
  "functionEndLine": 55,
  "numCommitsSeen": 13,
  "timeTaken": 11611,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b848e5cc58519899c0abde9e68a4640165209f92",
    "cb50fe991de0296fc781a10ba0e28e19016e52a8",
    "3693e024d208baa431442218ed5b2f9f7a6d43e7"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b848e5cc58519899c0abde9e68a4640165209f92": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "cb50fe991de0296fc781a10ba0e28e19016e52a8": "Ybodychange",
    "3693e024d208baa431442218ed5b2f9f7a6d43e7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                for (Object oR : flatten((Object[]) o)) {\n                    list.add(oR);\n                }\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list.toArray();\n}",
      "path": "src/main/java/org/apache/commons/math3/exception/util/ArgUtils.java",
      "functionStartLine": 41,
      "functionName": "flatten",
      "functionAnnotation": "",
      "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
        "newPath": "src/main/java/org/apache/commons/math3/exception/util/ArgUtils.java",
        "oldMethodName": "flatten",
        "newMethodName": "flatten"
      }
    },
    "b848e5cc58519899c0abde9e68a4640165209f92": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Moved exception utilities to package \"exception.util\". Created\n\"MathUnsupportedOperationException\". Replaced factory method\n\"createUnsupportedOperationException\" occurences by an explicit\nconstruction of a \"MathUnsupportedOperationException\".\nCorrected a bug (in \"AbstractRealVector\") where a \"dimension\"\nwas stored in a \"double\". Replaced a \"createIllegalArgumentException\"\nby a \"DimensionMismatchException\".\nRemoved checks for \"null\" in \"BigFraction\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982526 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/5/10, 2:51 AM",
      "commitName": "b848e5cc58519899c0abde9e68a4640165209f92",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Moved exception utilities to package \"exception.util\". Created\n\"MathUnsupportedOperationException\". Replaced factory method\n\"createUnsupportedOperationException\" occurences by an explicit\nconstruction of a \"MathUnsupportedOperationException\".\nCorrected a bug (in \"AbstractRealVector\") where a \"dimension\"\nwas stored in a \"double\". Replaced a \"createIllegalArgumentException\"\nby a \"DimensionMismatchException\".\nRemoved checks for \"null\" in \"BigFraction\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982526 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/10, 2:51 AM",
          "commitName": "b848e5cc58519899c0abde9e68a4640165209f92",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/10, 1:48 AM",
          "commitNameOld": "a4f9188a55e6935d4d38ae97806af4d59e671588",
          "commitAuthorOld": "Dimitri Pourbaix",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                for (Object oR : flatten((Object[]) o)) {\n                    list.add(oR);\n                }\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list.toArray();\n}",
          "path": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
          "functionStartLine": 30,
          "functionName": "flatten",
          "functionAnnotation": "",
          "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
          "diff": "@@ -1,13 +1,15 @@\n-private List\u003cObject\u003e flatten(Object[] array) {\n+public static Object[] flatten(Object[] array) {\n     final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n     if (array !\u003d null) {\n         for (Object o : array) {\n             if (o instanceof Object[]) {\n-                list.addAll(flatten((Object[]) o));\n+                for (Object oR : flatten((Object[]) o)) {\n+                    list.add(oR);\n+                }\n             } else {\n                 list.add(o);\n             }\n         }\n     }\n-    return list;\n+    return list.toArray();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java",
            "newPath": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
            "oldMethodName": "flatten",
            "newMethodName": "flatten"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Moved exception utilities to package \"exception.util\". Created\n\"MathUnsupportedOperationException\". Replaced factory method\n\"createUnsupportedOperationException\" occurences by an explicit\nconstruction of a \"MathUnsupportedOperationException\".\nCorrected a bug (in \"AbstractRealVector\") where a \"dimension\"\nwas stored in a \"double\". Replaced a \"createIllegalArgumentException\"\nby a \"DimensionMismatchException\".\nRemoved checks for \"null\" in \"BigFraction\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982526 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/10, 2:51 AM",
          "commitName": "b848e5cc58519899c0abde9e68a4640165209f92",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/10, 1:48 AM",
          "commitNameOld": "a4f9188a55e6935d4d38ae97806af4d59e671588",
          "commitAuthorOld": "Dimitri Pourbaix",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                for (Object oR : flatten((Object[]) o)) {\n                    list.add(oR);\n                }\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list.toArray();\n}",
          "path": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
          "functionStartLine": 30,
          "functionName": "flatten",
          "functionAnnotation": "",
          "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
          "diff": "@@ -1,13 +1,15 @@\n-private List\u003cObject\u003e flatten(Object[] array) {\n+public static Object[] flatten(Object[] array) {\n     final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n     if (array !\u003d null) {\n         for (Object o : array) {\n             if (o instanceof Object[]) {\n-                list.addAll(flatten((Object[]) o));\n+                for (Object oR : flatten((Object[]) o)) {\n+                    list.add(oR);\n+                }\n             } else {\n                 list.add(o);\n             }\n         }\n     }\n-    return list;\n+    return list.toArray();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "List\u003cObject\u003e",
            "newValue": "Object[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Moved exception utilities to package \"exception.util\". Created\n\"MathUnsupportedOperationException\". Replaced factory method\n\"createUnsupportedOperationException\" occurences by an explicit\nconstruction of a \"MathUnsupportedOperationException\".\nCorrected a bug (in \"AbstractRealVector\") where a \"dimension\"\nwas stored in a \"double\". Replaced a \"createIllegalArgumentException\"\nby a \"DimensionMismatchException\".\nRemoved checks for \"null\" in \"BigFraction\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982526 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/10, 2:51 AM",
          "commitName": "b848e5cc58519899c0abde9e68a4640165209f92",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/10, 1:48 AM",
          "commitNameOld": "a4f9188a55e6935d4d38ae97806af4d59e671588",
          "commitAuthorOld": "Dimitri Pourbaix",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                for (Object oR : flatten((Object[]) o)) {\n                    list.add(oR);\n                }\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list.toArray();\n}",
          "path": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
          "functionStartLine": 30,
          "functionName": "flatten",
          "functionAnnotation": "",
          "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
          "diff": "@@ -1,13 +1,15 @@\n-private List\u003cObject\u003e flatten(Object[] array) {\n+public static Object[] flatten(Object[] array) {\n     final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n     if (array !\u003d null) {\n         for (Object o : array) {\n             if (o instanceof Object[]) {\n-                list.addAll(flatten((Object[]) o));\n+                for (Object oR : flatten((Object[]) o)) {\n+                    list.add(oR);\n+                }\n             } else {\n                 list.add(o);\n             }\n         }\n     }\n-    return list;\n+    return list.toArray();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moved exception utilities to package \"exception.util\". Created\n\"MathUnsupportedOperationException\". Replaced factory method\n\"createUnsupportedOperationException\" occurences by an explicit\nconstruction of a \"MathUnsupportedOperationException\".\nCorrected a bug (in \"AbstractRealVector\") where a \"dimension\"\nwas stored in a \"double\". Replaced a \"createIllegalArgumentException\"\nby a \"DimensionMismatchException\".\nRemoved checks for \"null\" in \"BigFraction\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982526 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "8/5/10, 2:51 AM",
          "commitName": "b848e5cc58519899c0abde9e68a4640165209f92",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "8/5/10, 1:48 AM",
          "commitNameOld": "a4f9188a55e6935d4d38ae97806af4d59e671588",
          "commitAuthorOld": "Dimitri Pourbaix",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                for (Object oR : flatten((Object[]) o)) {\n                    list.add(oR);\n                }\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list.toArray();\n}",
          "path": "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java",
          "functionStartLine": 30,
          "functionName": "flatten",
          "functionAnnotation": "",
          "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
          "diff": "@@ -1,13 +1,15 @@\n-private List\u003cObject\u003e flatten(Object[] array) {\n+public static Object[] flatten(Object[] array) {\n     final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n     if (array !\u003d null) {\n         for (Object o : array) {\n             if (o instanceof Object[]) {\n-                list.addAll(flatten((Object[]) o));\n+                for (Object oR : flatten((Object[]) o)) {\n+                    list.add(oR);\n+                }\n             } else {\n                 list.add(o);\n             }\n         }\n     }\n-    return list;\n+    return list.toArray();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "cb50fe991de0296fc781a10ba0e28e19016e52a8": {
      "type": "Ybodychange",
      "commitMessage": "MATH-361.\nAdded a check to avoid triggering a \"NullPointerException\" if the argument\nlist is \"null\".\nAdded unit tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@958551 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/28/10, 5:01 AM",
      "commitName": "cb50fe991de0296fc781a10ba0e28e19016e52a8",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "6/25/10, 6:00 AM",
      "commitNameOld": "3693e024d208baa431442218ed5b2f9f7a6d43e7",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 2.96,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cObject\u003e flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    if (array !\u003d null) {\n        for (Object o : array) {\n            if (o instanceof Object[]) {\n                list.addAll(flatten((Object[]) o));\n            } else {\n                list.add(o);\n            }\n        }\n    }\n    return list;\n}",
      "path": "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java",
      "functionStartLine": 73,
      "functionName": "flatten",
      "functionAnnotation": "",
      "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n",
      "diff": "@@ -1,11 +1,13 @@\n private List\u003cObject\u003e flatten(Object[] array) {\n     final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n-    for (Object o : array) {\n-        if (o instanceof Object[]) {\n-            list.addAll(flatten((Object[]) o));\n-        } else {\n-            list.add(o);\n+    if (array !\u003d null) {\n+        for (Object o : array) {\n+            if (o instanceof Object[]) {\n+                list.addAll(flatten((Object[]) o));\n+            } else {\n+                list.add(o);\n+            }\n         }\n     }\n     return list;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3693e024d208baa431442218ed5b2f9f7a6d43e7": {
      "type": "Yintroduced",
      "commitMessage": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@957930 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/25/10, 6:00 AM",
      "commitName": "3693e024d208baa431442218ed5b2f9f7a6d43e7",
      "commitAuthor": "Gilles Sadowski",
      "diff": "@@ -0,0 +1,11 @@\n+private List\u003cObject\u003e flatten(Object[] array) {\n+    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n+    for (Object o : array) {\n+        if (o instanceof Object[]) {\n+            list.addAll(flatten((Object[]) o));\n+        } else {\n+            list.add(o);\n+        }\n+    }\n+    return list;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private List\u003cObject\u003e flatten(Object[] array) {\n    final List\u003cObject\u003e list \u003d new ArrayList\u003cObject\u003e();\n    for (Object o : array) {\n        if (o instanceof Object[]) {\n            list.addAll(flatten((Object[]) o));\n        } else {\n            list.add(o);\n        }\n    }\n    return list;\n}",
      "path": "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java",
      "functionStartLine": 73,
      "functionName": "flatten",
      "functionAnnotation": "",
      "functionDoc": "Transform a multidimensional array into a one-dimensional list.\n\n@param array Array (possibly multidimensional).\n@return a list of all the {@code Object} instances contained in\n{@code array}.\n"
    }
  }
}