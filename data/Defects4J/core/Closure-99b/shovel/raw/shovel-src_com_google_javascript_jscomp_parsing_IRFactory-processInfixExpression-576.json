{
  "origin": "codeshovel",
  "repositoryName": "Closure-99b",
  "repositoryPath": "/tmp/Closure-99b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "processInfixExpression",
  "functionId": "$processInfixExpression___exprNode-InfixExpression",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 576,
  "functionEndLine": 590,
  "numCommitsSeen": 12,
  "timeTaken": 1249,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+@Override\n+Node processInfixExpression(InfixExpression exprNode) {\n+    Node n \u003d new Node(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n+    n.setLineno(exprNode.getLineno());\n+    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n+    return n;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nNode processInfixExpression(InfixExpression exprNode) {\n    Node n \u003d new Node(transformTokenType(exprNode.getType()), transform(exprNode.getLeft()), transform(exprNode.getRight()));\n    n.setLineno(exprNode.getLineno());\n    n.setCharno(position2charno(exprNode.getAbsolutePosition() + exprNode.getOperatorPosition()));\n    return n;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 547,
      "functionName": "processInfixExpression",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}