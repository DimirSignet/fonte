{
  "origin": "codeshovel",
  "repositoryName": "Closure-99b",
  "repositoryPath": "/tmp/Closure-99b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "createJsDocInfoParser",
  "functionId": "createJsDocInfoParser___comment-String__lineno-int__position-int__fileLevelJsDocBuilder-Node.FileLevelJsDocBuilder__fileOverviewInfo-JSDocInfo",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n",
  "functionStartLine": 230,
  "functionEndLine": 248,
  "numCommitsSeen": 14,
  "timeTaken": 1664,
  "changeHistory": [
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/10, 3:02 PM",
      "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/8/09, 3:50 PM",
          "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 63.97,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n    int numOpeningChars \u003d 3;\n    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n    jsdocParser.parse();\n    return jsdocParser;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 223,
          "functionName": "createJsDocInfoParser",
          "functionAnnotation": "",
          "functionDoc": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n",
          "diff": "@@ -1,12 +1,8 @@\n-private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n+private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n     int numOpeningChars \u003d 3;\n     JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n     jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n     jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n     jsdocParser.parse();\n-    if (fileLevelJsDocBuilder !\u003d null) {\n-        return jsdocParser.getFileOverviewJSDocInfo();\n-    } else {\n-        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n-    }\n+    return jsdocParser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "parseJSDocInfo",
            "newValue": "createJsDocInfoParser"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/8/09, 3:50 PM",
          "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 63.97,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n    int numOpeningChars \u003d 3;\n    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n    jsdocParser.parse();\n    return jsdocParser;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 223,
          "functionName": "createJsDocInfoParser",
          "functionAnnotation": "",
          "functionDoc": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n",
          "diff": "@@ -1,12 +1,8 @@\n-private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n+private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n     int numOpeningChars \u003d 3;\n     JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n     jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n     jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n     jsdocParser.parse();\n-    if (fileLevelJsDocBuilder !\u003d null) {\n-        return jsdocParser.getFileOverviewJSDocInfo();\n-    } else {\n-        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n-    }\n+    return jsdocParser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "JSDocInfo",
            "newValue": "JsDocInfoParser"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/8/09, 3:50 PM",
          "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 63.97,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n    int numOpeningChars \u003d 3;\n    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n    jsdocParser.parse();\n    return jsdocParser;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 223,
          "functionName": "createJsDocInfoParser",
          "functionAnnotation": "",
          "functionDoc": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n",
          "diff": "@@ -1,12 +1,8 @@\n-private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n+private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n     int numOpeningChars \u003d 3;\n     JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n     jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n     jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n     jsdocParser.parse();\n-    if (fileLevelJsDocBuilder !\u003d null) {\n-        return jsdocParser.getFileOverviewJSDocInfo();\n-    } else {\n-        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n-    }\n+    return jsdocParser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "2/10/10, 3:02 PM",
          "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/8/09, 3:50 PM",
          "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 63.97,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "actualSource": "private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n    int numOpeningChars \u003d 3;\n    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n    jsdocParser.parse();\n    return jsdocParser;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 223,
          "functionName": "createJsDocInfoParser",
          "functionAnnotation": "",
          "functionDoc": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n",
          "diff": "@@ -1,12 +1,8 @@\n-private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n+private JsDocInfoParser createJsDocInfoParser(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n     int numOpeningChars \u003d 3;\n     JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n     jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n     jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n     jsdocParser.parse();\n-    if (fileLevelJsDocBuilder !\u003d null) {\n-        return jsdocParser.getFileOverviewJSDocInfo();\n-    } else {\n-        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n-    }\n+    return jsdocParser;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Parse a JsDoc string into a JSDocInfo.\n\nUsed both for handling individual JSDoc comments (when it returns the new\nJSDocInfo for the node) and for handling file-level JSDoc comments\n(@fileoverview and @license).  In this second case, it returns a\nJSDocInfo if it found another @fileoverview, or null if not.  Also in\nthe second case, all @license text found gets shoved into the\nfileLevelJsDocBuilder object.\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo. If not\n    null, this method parses to a fileOverview JSDocInfo as opposed to a\n    node-level one.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfo. May be null if the method parses to the wrong level.\n",
            "newValue": "Creates a JsDocInfoParser and parses the JsDoc string.\n\nUsed both for handling individual JSDoc comments and for handling\nfile-level JSDoc comments (@fileoverview and @license).\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfoParser. Will contain either fileoverview jsdoc, or\n    normal jsdoc, or no jsdoc (if the method parses to the wrong level).\n"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n+    int numOpeningChars \u003d 3;\n+    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n+    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n+    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n+    jsdocParser.parse();\n+    if (fileLevelJsDocBuilder !\u003d null) {\n+        return jsdocParser.getFileOverviewJSDocInfo();\n+    } else {\n+        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private JSDocInfo parseJSDocInfo(String comment, int lineno, int position, Node.FileLevelJsDocBuilder fileLevelJsDocBuilder, JSDocInfo fileOverviewInfo) {\n    int numOpeningChars \u003d 3;\n    JsDocInfoParser jsdocParser \u003d new JsDocInfoParser(new JsDocTokenStream(comment.substring(numOpeningChars), lineno, position2charno(position) + numOpeningChars), sourceName, config, errorReporter);\n    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);\n    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);\n    jsdocParser.parse();\n    if (fileLevelJsDocBuilder !\u003d null) {\n        return jsdocParser.getFileOverviewJSDocInfo();\n    } else {\n        return jsdocParser.retrieveAndResetParsedJSDocInfo();\n    }\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 256,
      "functionName": "parseJSDocInfo",
      "functionAnnotation": "",
      "functionDoc": "Parse a JsDoc string into a JSDocInfo.\n\nUsed both for handling individual JSDoc comments (when it returns the new\nJSDocInfo for the node) and for handling file-level JSDoc comments\n(@fileoverview and @license).  In this second case, it returns a\nJSDocInfo if it found another @fileoverview, or null if not.  Also in\nthe second case, all @license text found gets shoved into the\nfileLevelJsDocBuilder object.\n\n@param comment The JsDoc comment to parse.\n@param lineno The line number of the node this comment is attached to.\n@param fileLevelJsDocBuilder The builder for file-level JSDocInfo. If not\n    null, this method parses to a fileOverview JSDocInfo as opposed to a\n    node-level one.\n@param fileOverviewInfo The current @fileoverview JSDocInfo, so that the\n    parser may warn if another @fileoverview is found. May be null.\n@return A JSDocInfo. May be null if the method parses to the wrong level.\n"
    }
  }
}