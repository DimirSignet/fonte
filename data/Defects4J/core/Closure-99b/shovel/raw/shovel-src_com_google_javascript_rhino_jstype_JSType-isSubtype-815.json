{
  "origin": "codeshovel",
  "repositoryName": "Closure-99b",
  "repositoryPath": "/tmp/Closure-99b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JSType.java",
  "functionName": "isSubtype",
  "functionId": "isSubtype___thisType-JSType__thatType-JSType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/JSType.java",
  "functionAnnotation": "",
  "functionDoc": "A generic implementation meant to be used as a helper for common subtyping\ncases.\n",
  "functionStartLine": 815,
  "functionEndLine": 842,
  "numCommitsSeen": 14,
  "timeTaken": 575,
  "changeHistory": [
    "cf5fd88f13f0b11625ac407f85cb58b36862e173",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/26/10, 8:26 AM",
      "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/4/10, 7:39 AM",
      "commitNameOld": "58c3e4ce1d17ec619bcc4964bdeebc676f93567d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 22.03,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isSubtype(JSType thisType, JSType thatType) {\n    if (thatType.isUnknownType()) {\n        return true;\n    }\n    if (thisType.isEquivalentTo(thatType)) {\n        return true;\n    }\n    if (thatType.isAllType()) {\n        return true;\n    }\n    if (thatType instanceof UnionType) {\n        UnionType union \u003d (UnionType) thatType;\n        for (JSType element : union.alternates) {\n            if (thisType.isSubtype(element)) {\n                return true;\n            }\n        }\n    }\n    if (thatType instanceof NamedType) {\n        return thisType.isSubtype(((NamedType) thatType).referencedType);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSType.java",
      "functionStartLine": 815,
      "functionName": "isSubtype",
      "functionAnnotation": "",
      "functionDoc": "A generic implementation meant to be used as a helper for common subtyping\ncases.\n",
      "diff": "@@ -1,23 +1,23 @@\n static boolean isSubtype(JSType thisType, JSType thatType) {\n     if (thatType.isUnknownType()) {\n         return true;\n     }\n-    if (thisType.equals(thatType)) {\n+    if (thisType.isEquivalentTo(thatType)) {\n         return true;\n     }\n     if (thatType.isAllType()) {\n         return true;\n     }\n     if (thatType instanceof UnionType) {\n         UnionType union \u003d (UnionType) thatType;\n         for (JSType element : union.alternates) {\n             if (thisType.isSubtype(element)) {\n                 return true;\n             }\n         }\n     }\n     if (thatType instanceof NamedType) {\n         return thisType.isSubtype(((NamedType) thatType).referencedType);\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,23 @@\n+static boolean isSubtype(JSType thisType, JSType thatType) {\n+    if (thatType.isUnknownType()) {\n+        return true;\n+    }\n+    if (thisType.equals(thatType)) {\n+        return true;\n+    }\n+    if (thatType.isAllType()) {\n+        return true;\n+    }\n+    if (thatType instanceof UnionType) {\n+        UnionType union \u003d (UnionType) thatType;\n+        for (JSType element : union.alternates) {\n+            if (thisType.isSubtype(element)) {\n+                return true;\n+            }\n+        }\n+    }\n+    if (thatType instanceof NamedType) {\n+        return thisType.isSubtype(((NamedType) thatType).referencedType);\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isSubtype(JSType thisType, JSType thatType) {\n    if (thatType.isUnknownType()) {\n        return true;\n    }\n    if (thisType.equals(thatType)) {\n        return true;\n    }\n    if (thatType.isAllType()) {\n        return true;\n    }\n    if (thatType instanceof UnionType) {\n        UnionType union \u003d (UnionType) thatType;\n        for (JSType element : union.alternates) {\n            if (thisType.isSubtype(element)) {\n                return true;\n            }\n        }\n    }\n    if (thatType instanceof NamedType) {\n        return thisType.isSubtype(((NamedType) thatType).referencedType);\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/JSType.java",
      "functionStartLine": 796,
      "functionName": "isSubtype",
      "functionAnnotation": "",
      "functionDoc": "A generic implementation meant to be used as a helper for common subtyping\ncases.\n"
    }
  }
}