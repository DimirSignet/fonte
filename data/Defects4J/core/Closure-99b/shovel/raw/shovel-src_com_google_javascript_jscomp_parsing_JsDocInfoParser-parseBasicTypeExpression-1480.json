{
  "origin": "codeshovel",
  "repositoryName": "Closure-99b",
  "repositoryPath": "/tmp/Closure-99b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsDocInfoParser.java",
  "functionName": "parseBasicTypeExpression",
  "functionId": "parseBasicTypeExpression___token-JsDocToken",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
  "functionAnnotation": "",
  "functionDoc": "BasicTypeExpression :\u003d \u0027*\u0027 | \u0027null\u0027 | \u0027undefined\u0027 | TypeName\n    | FunctionType | UnionType | RecordType | ArrayType\n",
  "functionStartLine": 1480,
  "functionEndLine": 1505,
  "numCommitsSeen": 15,
  "timeTaken": 1822,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,25 @@\n+private Node parseBasicTypeExpression(JsDocToken token) {\n+    if (token \u003d\u003d JsDocToken.STAR) {\n+        return newNode(Token.STAR);\n+    } else if (token \u003d\u003d JsDocToken.LB) {\n+        skipEOLs();\n+        return parseArrayType(next());\n+    } else if (token \u003d\u003d JsDocToken.LC) {\n+        skipEOLs();\n+        return parseRecordType(next());\n+    } else if (token \u003d\u003d JsDocToken.LP) {\n+        skipEOLs();\n+        return parseUnionType(next());\n+    } else if (token \u003d\u003d JsDocToken.STRING) {\n+        String string \u003d stream.getString();\n+        if (\"function\".equals(string)) {\n+            skipEOLs();\n+            return parseFunctionType(next());\n+        } else if (\"null\".equals(string) || \"undefined\".equals(string)) {\n+            return newStringNode(string);\n+        } else {\n+            return parseTypeName(token);\n+        }\n+    }\n+    return reportGenericTypeSyntaxWarning();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node parseBasicTypeExpression(JsDocToken token) {\n    if (token \u003d\u003d JsDocToken.STAR) {\n        return newNode(Token.STAR);\n    } else if (token \u003d\u003d JsDocToken.LB) {\n        skipEOLs();\n        return parseArrayType(next());\n    } else if (token \u003d\u003d JsDocToken.LC) {\n        skipEOLs();\n        return parseRecordType(next());\n    } else if (token \u003d\u003d JsDocToken.LP) {\n        skipEOLs();\n        return parseUnionType(next());\n    } else if (token \u003d\u003d JsDocToken.STRING) {\n        String string \u003d stream.getString();\n        if (\"function\".equals(string)) {\n            skipEOLs();\n            return parseFunctionType(next());\n        } else if (\"null\".equals(string) || \"undefined\".equals(string)) {\n            return newStringNode(string);\n        } else {\n            return parseTypeName(token);\n        }\n    }\n    return reportGenericTypeSyntaxWarning();\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 1516,
      "functionName": "parseBasicTypeExpression",
      "functionAnnotation": "",
      "functionDoc": "BasicTypeExpression :\u003d \u0027*\u0027 | \u0027null\u0027 | \u0027undefined\u0027 | TypeName\n    | FunctionType | UnionType | RecordType | ArrayType\n"
    }
  }
}