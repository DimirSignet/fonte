{
  "origin": "codeshovel",
  "repositoryName": "Math-101b",
  "repositoryPath": "/tmp/Math-101b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComplexFormat.java",
  "functionName": "parseNextCharacter",
  "functionId": "parseNextCharacter___source-String__pos-ParsePosition",
  "sourceFilePath": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
  "functionAnnotation": "",
  "functionDoc": "Parses \u003ccode\u003esource\u003c/code\u003e until a non-whitespace character is found.\n\n@param source the string to parse\n@param pos input/ouput parsing parameter.\n@return the first non-whitespace character.\n",
  "functionStartLine": 409,
  "functionEndLine": 427,
  "numCommitsSeen": 15,
  "timeTaken": 560,
  "changeHistory": [
    "322706393973a99fc70f0cbd8cadee38bae3aa94"
  ],
  "changeHistoryShort": {
    "322706393973a99fc70f0cbd8cadee38bae3aa94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "322706393973a99fc70f0cbd8cadee38bae3aa94": {
      "type": "Yintroduced",
      "commitMessage": "PR: 29000\nMade ComplexFormat extend java.text.Format providing complex object formatting and parsing.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@141256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/1/04, 6:47 AM",
      "commitName": "322706393973a99fc70f0cbd8cadee38bae3aa94",
      "commitAuthor": "Brent Worden",
      "diff": "@@ -0,0 +1,16 @@\n+private char parseNextCharacter(String source, ParsePosition pos) {\n+    int index \u003d pos.getIndex();\n+    int n \u003d source.length();\n+    char ret \u003d 0;\n+    if (index \u003c n) {\n+        char c;\n+        do {\n+            c \u003d source.charAt(index++);\n+        } while (Character.isWhitespace(c) \u0026\u0026 index \u003c n);\n+        pos.setIndex(index);\n+        if (index \u003c n) {\n+            ret \u003d c;\n+        }\n+    }\n+    return ret;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private char parseNextCharacter(String source, ParsePosition pos) {\n    int index \u003d pos.getIndex();\n    int n \u003d source.length();\n    char ret \u003d 0;\n    if (index \u003c n) {\n        char c;\n        do {\n            c \u003d source.charAt(index++);\n        } while (Character.isWhitespace(c) \u0026\u0026 index \u003c n);\n        pos.setIndex(index);\n        if (index \u003c n) {\n            ret \u003d c;\n        }\n    }\n    return ret;\n}",
      "path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
      "functionStartLine": 369,
      "functionName": "parseNextCharacter",
      "functionAnnotation": "",
      "functionDoc": "Parses \u003ccode\u003esource\u003c/code\u003e until a non-whitespace character is found.\n\n@param source the string to parse\n@param pos input/ouput parsing parameter.\n@return the first non-whitespace character.\n"
    }
  }
}