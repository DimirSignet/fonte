{
  "origin": "codeshovel",
  "repositoryName": "Math-63b",
  "repositoryPath": "/tmp/Math-63b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MathUtils.java",
  "functionName": "equals",
  "functionId": "equals___x-double[]__y-double[]",
  "sourceFilePath": "src/main/java/org/apache/commons/math/util/MathUtils.java",
  "functionAnnotation": "",
  "functionDoc": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link #equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n",
  "functionStartLine": 534,
  "functionEndLine": 547,
  "numCommitsSeen": 98,
  "timeTaken": 3625,
  "changeHistory": [
    "8c131082913e0edc1ae248d36407f88991d7aa53",
    "adc837ab18b037b1f28974702aaaea4dcc36595f",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "a7755a3c8c1b7aa200f1b0411851d392ee35702b",
    "830e82333b97fa884f13127380bf725884c78481",
    "b8a46f6657147be4ddc194c04bcbd5aa00abf23f"
  ],
  "changeHistoryShort": {
    "8c131082913e0edc1ae248d36407f88991d7aa53": "Ydocchange",
    "adc837ab18b037b1f28974702aaaea4dcc36595f": "Ydocchange",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "a7755a3c8c1b7aa200f1b0411851d392ee35702b": "Ydocchange",
    "830e82333b97fa884f13127380bf725884c78481": "Ydocchange",
    "b8a46f6657147be4ddc194c04bcbd5aa00abf23f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c131082913e0edc1ae248d36407f88991d7aa53": {
      "type": "Ydocchange",
      "commitMessage": "MATH-361\nAdded new exceptions. Replaced several instances of \"IllegalArgumentException\"\nwith a more specific exception.\nFor not yet released code, removed the checked \"DimensionMismatchException\"\nfrom the method signature and replaced its instances with the new (unchecked)\nversion of the exception.\nCorrected typos in Javadoc comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@959634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/1/10, 5:30 AM",
      "commitName": "8c131082913e0edc1ae248d36407f88991d7aa53",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "6/17/10, 12:07 PM",
      "commitNameOld": "d81a1dfb5f1b033506393b4b837b7544118fb706",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 13.72,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 532,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link #equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n",
        "newValue": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link #equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n"
      }
    },
    "adc837ab18b037b1f28974702aaaea4dcc36595f": {
      "type": "Ydocchange",
      "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/9/10, 3:41 AM",
      "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "3/24/10, 6:06 PM",
      "commitNameOld": "1eb4b8a4e566ca45fe4d690b236bd17d30a62f85",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 76.4,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 531,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n@since 1.2\n",
        "newValue": "Returns true iff both arguments are null or have same dimensions and all\ntheir elements are equal as defined by\n{@link #equals(double,double) this method}.\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements.\n@deprecated This method considers that {@code NaN \u003d\u003d NaN}. In release\n3.0, the semantics will change in order to comply with IEEE754 where it\nis specified that {@code NaN !\u003d NaN}.\nNew methods have been added for those cases wher the old semantics is\nuseful (see e.g. {@link equalsIncludingNaN(double[],double[])\nequalsIncludingNaN}.\n"
      }
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 457,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n@since 1.2\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/MathUtils.java"
      }
    },
    "a7755a3c8c1b7aa200f1b0411851d392ee35702b": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only. Added @since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@620312 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/10/08, 11:28 AM",
      "commitName": "a7755a3c8c1b7aa200f1b0411851d392ee35702b",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "2/8/08, 4:42 AM",
      "commitNameOld": "830e82333b97fa884f13127380bf725884c78481",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 2.28,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 291,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n@since 1.2\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n",
        "newValue": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n@since 1.2\n"
      }
    },
    "830e82333b97fa884f13127380bf725884c78481": {
      "type": "Ydocchange",
      "commitMessage": "fixed typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@619862 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/8/08, 4:42 AM",
      "commitName": "830e82333b97fa884f13127380bf725884c78481",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/8/08, 4:36 AM",
      "commitNameOld": "69bf5a32257372a958d895c130fc85cbbaa3dbe9",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 290,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true iff both arguments aren null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n",
        "newValue": "Returns true iff both arguments are null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n"
      }
    },
    "b8a46f6657147be4ddc194c04bcbd5aa00abf23f": {
      "type": "Yintroduced",
      "commitMessage": "added equals and hash methods for double arrays (supporting null) in MathUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@619836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/8/08, 3:22 AM",
      "commitName": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,14 @@\n+public static boolean equals(double[] x, double[] y) {\n+    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n+        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n+    }\n+    if (x.length !\u003d y.length) {\n+        return false;\n+    }\n+    for (int i \u003d 0; i \u003c x.length; ++i) {\n+        if (!equals(x[i], y[i])) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static boolean equals(double[] x, double[] y) {\n    if ((x \u003d\u003d null) || (y \u003d\u003d null)) {\n        return !((x \u003d\u003d null) ^ (y \u003d\u003d null));\n    }\n    if (x.length !\u003d y.length) {\n        return false;\n    }\n    for (int i \u003d 0; i \u003c x.length; ++i) {\n        if (!equals(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 287,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments aren null or have same dimensions\nand all their elements are {@link #equals(double,double) equals}\n\n@param x first array\n@param y second array\n@return true if the values are both null or have same dimension\nand equal elements\n"
    }
  }
}