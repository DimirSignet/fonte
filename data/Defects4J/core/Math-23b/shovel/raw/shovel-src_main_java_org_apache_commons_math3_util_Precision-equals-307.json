{
  "origin": "codeshovel",
  "repositoryName": "Math-23b",
  "repositoryPath": "/tmp/Math-23b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Precision.java",
  "functionName": "equals",
  "functionId": "equals___x-double__y-double__maxUlps-int",
  "sourceFilePath": "src/main/java/org/apache/commons/math3/util/Precision.java",
  "functionAnnotation": "",
  "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
  "functionStartLine": 307,
  "functionEndLine": 322,
  "numCommitsSeen": 160,
  "timeTaken": 20145,
  "changeHistory": [
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
    "b59e97464fc8d910c06b90c06598d7176ce1924a",
    "9efc28529ba8d6c514e12b949fa88a1f91f6692f",
    "32209ce225eae6832c8b438d0b627c1238d5130b",
    "80b1e90b42a34856b61cec628fcea6633d1000cd",
    "ee555fecaf3a86dc55468b27c28cc28c2983e87b",
    "adc837ab18b037b1f28974702aaaea4dcc36595f",
    "d6a438e931412713e99624cf9ed74470f1040184",
    "b4a6a0e049eb4525ba44562a20ed964489deb11a"
  ],
  "changeHistoryShort": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": "Ymovefromfile",
    "b59e97464fc8d910c06b90c06598d7176ce1924a": "Ymovefromfile",
    "9efc28529ba8d6c514e12b949fa88a1f91f6692f": "Ybodychange",
    "32209ce225eae6832c8b438d0b627c1238d5130b": "Ydocchange",
    "80b1e90b42a34856b61cec628fcea6633d1000cd": "Ybodychange",
    "ee555fecaf3a86dc55468b27c28cc28c2983e87b": "Ybodychange",
    "adc837ab18b037b1f28974702aaaea4dcc36595f": "Ymultichange(Ybodychange,Ydocchange)",
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "b4a6a0e049eb4525ba44562a20ed964489deb11a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-444\nBase package name change: \"o.a.c.math\" -\u003e \"o.a.c.math3\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1244107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/14/12, 8:17 AM",
      "commitName": "2d698e4905cb75bd125e2fe1f5223d7e68f0adcd",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "2/14/12, 6:34 AM",
      "commitNameOld": "53257329dd394be1333b38bae787bf0cf19dc900",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math3/util/Precision.java",
      "functionStartLine": 276,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/util/Precision.java",
        "newPath": "src/main/java/org/apache/commons/math3/util/Precision.java",
        "oldMethodName": "equals",
        "newMethodName": "equals"
      }
    },
    "b59e97464fc8d910c06b90c06598d7176ce1924a": {
      "type": "Ymovefromfile",
      "commitMessage": "MATH-689\nMoved \"equals...\" and \"compareTo\" methods from \"MathUtils\" over to a new\n\"Precision\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1181282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11, 3:35 PM",
      "commitName": "b59e97464fc8d910c06b90c06598d7176ce1924a",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "10/10/11, 2:20 PM",
      "commitNameOld": "e24e9c1cf7e76ffb4d76c1ad541833a9b32ced5a",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math/util/Precision.java",
      "functionStartLine": 260,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/Precision.java",
        "oldMethodName": "equals",
        "newMethodName": "equals"
      }
    },
    "9efc28529ba8d6c514e12b949fa88a1f91f6692f": {
      "type": "Ybodychange",
      "commitMessage": "MATH-559\nRemoved \"assert\" statements.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1091378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11, 4:46 AM",
      "commitName": "9efc28529ba8d6c514e12b949fa88a1f91f6692f",
      "commitAuthor": "Gilles Sadowski",
      "commitDateOld": "4/10/11, 8:56 AM",
      "commitNameOld": "edf9205a6dc8c634985fa2f0e07a7ef598881fd9",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 1.83,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 673,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "@@ -1,13 +1,12 @@\n public static boolean equals(double x, double y, int maxUlps) {\n-    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n     long xInt \u003d Double.doubleToLongBits(x);\n     long yInt \u003d Double.doubleToLongBits(y);\n     if (xInt \u003c 0) {\n         xInt \u003d SGN_MASK - xInt;\n     }\n     if (yInt \u003c 0) {\n         yInt \u003d SGN_MASK - yInt;\n     }\n     final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n     return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "32209ce225eae6832c8b438d0b627c1238d5130b": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc grammar\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1058072 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/12/11, 3:07 AM",
      "commitName": "32209ce225eae6832c8b438d0b627c1238d5130b",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/6/11, 8:17 AM",
      "commitNameOld": "0b954c55d91d02491f6a5ba6cacec1f40ae7a908",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 5.78,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 485,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
        "newValue": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or fewer) floating point numbers between them, i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are fewer than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n"
      }
    },
    "80b1e90b42a34856b61cec628fcea6633d1000cd": {
      "type": "Ybodychange",
      "commitMessage": "added FastMath and used it everywhere in replacement of java.util.Math\nthe unit tests have not been added yet (waiting for dfp library addition)\nJIRA: MATH-375\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@990658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/29/10, 3:04 PM",
      "commitName": "80b1e90b42a34856b61cec628fcea6633d1000cd",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/22/10, 4:45 PM",
      "commitNameOld": "ad93f56c541538f8f721a45f48cd133d9f06a795",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 6.93,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 482,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "@@ -1,13 +1,13 @@\n public static boolean equals(double x, double y, int maxUlps) {\n     assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n     long xInt \u003d Double.doubleToLongBits(x);\n     long yInt \u003d Double.doubleToLongBits(y);\n     if (xInt \u003c 0) {\n         xInt \u003d SGN_MASK - xInt;\n     }\n     if (yInt \u003c 0) {\n         yInt \u003d SGN_MASK - yInt;\n     }\n-    final boolean isEqual \u003d Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n+    final boolean isEqual \u003d FastMath.abs(xInt - yInt) \u003c\u003d maxUlps;\n     return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ee555fecaf3a86dc55468b27c28cc28c2983e87b": {
      "type": "Ybodychange",
      "commitMessage": "fixed numerous checkstyle warnings (javadoc, trailing spaces, tabs, parenthesis, declaration order ...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@980981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/10, 3:03 PM",
      "commitName": "ee555fecaf3a86dc55468b27c28cc28c2983e87b",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "7/1/10, 5:30 AM",
      "commitNameOld": "8c131082913e0edc1ae248d36407f88991d7aa53",
      "commitAuthorOld": "Gilles Sadowski",
      "daysBetweenCommits": 29.4,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 480,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
      "diff": "@@ -1,13 +1,13 @@\n public static boolean equals(double x, double y, int maxUlps) {\n     assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n     long xInt \u003d Double.doubleToLongBits(x);\n     long yInt \u003d Double.doubleToLongBits(y);\n     if (xInt \u003c 0) {\n         xInt \u003d SGN_MASK - xInt;\n     }\n     if (yInt \u003c 0) {\n         yInt \u003d SGN_MASK - yInt;\n     }\n-    final boolean isEqual \u003d (Math.abs(xInt - yInt) \u003c\u003d maxUlps);\n+    final boolean isEqual \u003d Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n     return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "adc837ab18b037b1f28974702aaaea4dcc36595f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/9/10, 3:41 AM",
      "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
      "commitAuthor": "Gilles Sadowski",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/9/10, 3:41 AM",
          "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "3/24/10, 6:06 PM",
          "commitNameOld": "1eb4b8a4e566ca45fe4d690b236bd17d30a62f85",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 76.4,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d (Math.abs(xInt - yInt) \u003c\u003d maxUlps);\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
          "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 479,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
          "diff": "@@ -1,12 +1,13 @@\n public static boolean equals(double x, double y, int maxUlps) {\n     assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n     long xInt \u003d Double.doubleToLongBits(x);\n     long yInt \u003d Double.doubleToLongBits(y);\n     if (xInt \u003c 0) {\n         xInt \u003d SGN_MASK - xInt;\n     }\n     if (yInt \u003c 0) {\n         yInt \u003d SGN_MASK - yInt;\n     }\n-    return Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n+    final boolean isEqual \u003d (Math.abs(xInt - yInt) \u003c\u003d maxUlps);\n+    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/9/10, 3:41 AM",
          "commitName": "adc837ab18b037b1f28974702aaaea4dcc36595f",
          "commitAuthor": "Gilles Sadowski",
          "commitDateOld": "3/24/10, 6:06 PM",
          "commitNameOld": "1eb4b8a4e566ca45fe4d690b236bd17d30a62f85",
          "commitAuthorOld": "Phil Steitz",
          "daysBetweenCommits": 76.4,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    final boolean isEqual \u003d (Math.abs(xInt - yInt) \u003c\u003d maxUlps);\n    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n}",
          "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
          "functionStartLine": 479,
          "functionName": "equals",
          "functionAnnotation": "",
          "functionDoc": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n",
          "diff": "@@ -1,12 +1,13 @@\n public static boolean equals(double x, double y, int maxUlps) {\n     assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n     long xInt \u003d Double.doubleToLongBits(x);\n     long yInt \u003d Double.doubleToLongBits(y);\n     if (xInt \u003c 0) {\n         xInt \u003d SGN_MASK - xInt;\n     }\n     if (yInt \u003c 0) {\n         yInt \u003d SGN_MASK - yInt;\n     }\n-    return Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n+    final boolean isEqual \u003d (Math.abs(xInt - yInt) \u003c\u003d maxUlps);\n+    return isEqual \u0026\u0026 !Double.isNaN(x) \u0026\u0026 !Double.isNaN(y);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}\n",
            "newValue": "Returns true if both arguments are equal or within the range of allowed\nerror (inclusive).\nTwo float numbers are considered equal if there are {@code (maxUlps - 1)}\n(or less) floating point numbers between them (i.e. two adjacent floating\npoint numbers are considered equal.\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}.\n"
          }
        }
      ]
    },
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    return Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n}",
      "path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 428,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/util/MathUtils.java",
        "newPath": "src/main/java/org/apache/commons/math/util/MathUtils.java"
      }
    },
    "b4a6a0e049eb4525ba44562a20ed964489deb11a": {
      "type": "Yintroduced",
      "commitMessage": "Added an utility equality method between double numbers using tolerance\nin ulps (Units in Last Position) \nJIRA: MATH-264\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@769867 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/29/09, 11:33 AM",
      "commitName": "b4a6a0e049eb4525ba44562a20ed964489deb11a",
      "commitAuthor": "Luc Maisonobe",
      "diff": "@@ -0,0 +1,12 @@\n+public static boolean equals(double x, double y, int maxUlps) {\n+    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n+    long xInt \u003d Double.doubleToLongBits(x);\n+    long yInt \u003d Double.doubleToLongBits(y);\n+    if (xInt \u003c 0) {\n+        xInt \u003d SGN_MASK - xInt;\n+    }\n+    if (yInt \u003c 0) {\n+        yInt \u003d SGN_MASK - yInt;\n+    }\n+    return Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static boolean equals(double x, double y, int maxUlps) {\n    assert maxUlps \u003e 0 \u0026\u0026 maxUlps \u003c NAN_GAP;\n    long xInt \u003d Double.doubleToLongBits(x);\n    long yInt \u003d Double.doubleToLongBits(y);\n    if (xInt \u003c 0) {\n        xInt \u003d SGN_MASK - xInt;\n    }\n    if (yInt \u003c 0) {\n        yInt \u003d SGN_MASK - yInt;\n    }\n    return Math.abs(xInt - yInt) \u003c\u003d maxUlps;\n}",
      "path": "src/java/org/apache/commons/math/util/MathUtils.java",
      "functionStartLine": 426,
      "functionName": "equals",
      "functionAnnotation": "",
      "functionDoc": "Returns true iff both arguments are equal or within the range of allowed\nerror (inclusive).\nAdapted from \u003ca\nhref\u003d\"http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm\"\u003e\nBruce Dawson\u003c/a\u003e\n\n@param x first value\n@param y second value\n@param maxUlps @code (maxUlps - 1)} is the number of floating point\nvalues between {@code x} and {@code y}.\n@return @code true} if there are less than {@code maxUlps} floating\npoint values between {@code x} and {@code y}\n"
    }
  }
}