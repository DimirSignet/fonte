{
  "origin": "codeshovel",
  "repositoryName": "Lang-40b",
  "repositoryPath": "/tmp/Lang-40b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringUtils.java",
  "functionName": "contains",
  "functionId": "contains___str-String__searchStr-String",
  "sourceFilePath": "src/java/org/apache/commons/lang/StringUtils.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(String)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
  "functionStartLine": 1014,
  "functionEndLine": 1019,
  "numCommitsSeen": 203,
  "timeTaken": 13500,
  "changeHistory": [
    "3c153e5accabea74adf577ab574b2feaec520a20",
    "f349629500ff5a85683dff0a807ff8e9b5b88809",
    "4991a323e370713bd82b3df647c45a208be90de2",
    "f9d71a6faf7a0d3bc2bbfa8f80d8633be1ae179d",
    "3814b58ddc878ad45f72196ee018e3103c1af37e",
    "704f45e9346848b19560b08ed62b896dd4d0df44",
    "251a47618ed658d9ffb9c8522248b76ee345a98c"
  ],
  "changeHistoryShort": {
    "3c153e5accabea74adf577ab574b2feaec520a20": "Ydocchange",
    "f349629500ff5a85683dff0a807ff8e9b5b88809": "Ybodychange",
    "4991a323e370713bd82b3df647c45a208be90de2": "Ydocchange",
    "f9d71a6faf7a0d3bc2bbfa8f80d8633be1ae179d": "Ydocchange",
    "3814b58ddc878ad45f72196ee018e3103c1af37e": "Ydocchange",
    "704f45e9346848b19560b08ed62b896dd4d0df44": "Ydocchange",
    "251a47618ed658d9ffb9c8522248b76ee345a98c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c153e5accabea74adf577ab574b2feaec520a20": {
      "type": "Ydocchange",
      "commitMessage": "Fixed incorrect JDK API link.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@491757 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/1/07, 11:50 PM",
      "commitName": "3c153e5accabea74adf577ab574b2feaec520a20",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "11/5/06, 8:02 PM",
      "commitNameOld": "8a1148782c0db469ad9328b0fc1ea63ddba1714c",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 57.16,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return str.indexOf(searchStr) \u003e\u003d 0;\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1030,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(String)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
        "newValue": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(String)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n"
      }
    },
    "f349629500ff5a85683dff0a807ff8e9b5b88809": {
      "type": "Ybodychange",
      "commitMessage": "Removed extra C style parens in return statements (as discussed on commons-dev).\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@161229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/13/05, 3:36 PM",
      "commitName": "f349629500ff5a85683dff0a807ff8e9b5b88809",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "4/10/05, 4:25 PM",
      "commitNameOld": "a0dee62d950e3f8c3d590947b41ba60f0775d540",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return str.indexOf(searchStr) \u003e\u003d 0;\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1049,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
      "diff": "@@ -1,6 +1,6 @@\n public static boolean contains(String str, String searchStr) {\n     if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n         return false;\n     }\n-    return (str.indexOf(searchStr) \u003e\u003d 0);\n+    return str.indexOf(searchStr) \u003e\u003d 0;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4991a323e370713bd82b3df647c45a208be90de2": {
      "type": "Ydocchange",
      "commitMessage": "Remove end of line spaces\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/29/03, 5:13 AM",
      "commitName": "4991a323e370713bd82b3df647c45a208be90de2",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/23/03, 12:44 PM",
      "commitNameOld": "acbec152e96b08491313903d00aea079ec7259c1",
      "commitAuthorOld": "Phil Steitz",
      "daysBetweenCommits": 5.69,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return (str.indexOf(searchStr) \u003e\u003d 0);\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1085,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
        "newValue": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String,\n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n"
      }
    },
    "f9d71a6faf7a0d3bc2bbfa8f80d8633be1ae179d": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc of method contains\nbug 23430, from Michael Heuer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137689 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/23/03, 1:49 PM",
      "commitName": "f9d71a6faf7a0d3bc2bbfa8f80d8633be1ae179d",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "10/23/03, 1:40 PM",
      "commitNameOld": "18189371b0b80131c78e4849c916d0da96c8d572",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return (str.indexOf(searchStr) \u003e\u003d 0);\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1082,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
        "newValue": "\u003cp\u003eChecks if String contains a search String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search String, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n"
      }
    },
    "3814b58ddc878ad45f72196ee018e3103c1af37e": {
      "type": "Ydocchange",
      "commitMessage": "Add @since 2.0 tags based on http://www.apache.org/~bayard/commons-lang-2.0/Commons-Lang-1.0.1-to-2.0/missingSinces.txt\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/20/03, 10:57 PM",
      "commitName": "3814b58ddc878ad45f72196ee018e3103c1af37e",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "8/18/03, 5:11 PM",
      "commitNameOld": "6bf80e9dc5ed08cff53506722e88190a1085e430",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return (str.indexOf(searchStr) \u003e\u003d 0);\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1030,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n",
        "newValue": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n@since 2.0\n"
      }
    },
    "704f45e9346848b19560b08ed62b896dd4d0df44": {
      "type": "Ydocchange",
      "commitMessage": "Update Javadoc and tests\nbug 21750, from Phil Steitz\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/20/03, 4:57 PM",
      "commitName": "704f45e9346848b19560b08ed62b896dd4d0df44",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/20/03, 8:41 AM",
      "commitNameOld": "3910597ef632ef74ece00f5a754120cb92e5471b",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return (str.indexOf(searchStr) \u003e\u003d 0);\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 1005,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(String)}\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003e-1\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, null)  \u003d false\nStringUtils.contains(\"\", null)    \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n",
        "newValue": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(int)}.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, *)     \u003d false\nStringUtils.contains(*, null)     \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n"
      }
    },
    "251a47618ed658d9ffb9c8522248b76ee345a98c": {
      "type": "Yintroduced",
      "commitMessage": "Add new methods for null-safe indexOf/lastIndexOf\nAdd new methods for contains\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137461 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/19/03, 4:29 PM",
      "commitName": "251a47618ed658d9ffb9c8522248b76ee345a98c",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,6 @@\n+public static boolean contains(String str, String searchStr) {\n+    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n+        return false;\n+    }\n+    return (str.indexOf(searchStr) \u003e\u003d 0);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static boolean contains(String str, String searchStr) {\n    if (str \u003d\u003d null || searchStr \u003d\u003d null) {\n        return false;\n    }\n    return (str.indexOf(searchStr) \u003e\u003d 0);\n}",
      "path": "src/java/org/apache/commons/lang/StringUtils.java",
      "functionStartLine": 761,
      "functionName": "contains",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eFind the first index within a String, handling \u003ccode\u003enull\u003c/code\u003e.\nThis method uses {@link String#indexOf(String)}\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e String will return \u003ccode\u003e-1\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\nStringUtils.contains(null, null)  \u003d false\nStringUtils.contains(\"\", null)    \u003d false\nStringUtils.contains(\"\", \"\")      \u003d true\nStringUtils.contains(\"abc\", \"\")   \u003d true\nStringUtils.contains(\"abc\", \"a\")  \u003d true\nStringUtils.contains(\"abc\", \"z\")  \u003d false\n\u003c/pre\u003e\n\n@param str the String to check, may be null\n@param searchStr the String to find, may be null\n@return true if the String contains the search character, \n false if not or \u003ccode\u003enull\u003c/code\u003e string input\n"
    }
  }
}