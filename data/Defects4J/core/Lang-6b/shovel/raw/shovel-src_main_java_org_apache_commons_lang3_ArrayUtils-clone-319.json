{
  "origin": "codeshovel",
  "repositoryName": "Lang-6b",
  "repositoryPath": "/tmp/Lang-6b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArrayUtils.java",
  "functionName": "clone",
  "functionId": "clone___array-T[]",
  "sourceFilePath": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param \u003cT\u003e the component type of the array\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n",
  "functionStartLine": 319,
  "functionEndLine": 324,
  "numCommitsSeen": 212,
  "timeTaken": 11763,
  "changeHistory": [
    "413fe0119592f91eed2ff149acf02c1f16c4468e",
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27",
    "b1686009b5494119575d43525b0829162ab79853",
    "586080851f6bca4d7aa84a7d307203ad8222407e",
    "f1f885f17f9039702cc258fb7bc7688755fc0229",
    "3cf81045ac69de08065ea38c7f4839570295631e",
    "d3f274d23b3fdab5cfb5af16579392f200eebfb6",
    "a6e6f51c35ea53d75ba994a96f1baf02eca651a5",
    "af1684a234abae7439ea46635d714cd78b780f10",
    "b14a198b0a7930aa1d3e23e56cf3b12dff33fe13",
    "0fdd78fc2a51ce8e18a1926416aaa7ed21743511",
    "8c3f1ab110daf96b9ded27c359f15a05ce7a373d",
    "9ef58479afdbc67a7f4fd4c9cd6ea4c033ec6fff",
    "30a5db352bf74d4f869f65cc320c63ccfd2f8cc7",
    "6a8eb444afab305867c0862bc4ff762a113667ce",
    "30c4fa45e2dd1bf5c0136be21e39d6a93dfcb347"
  ],
  "changeHistoryShort": {
    "413fe0119592f91eed2ff149acf02c1f16c4468e": "Ydocchange",
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27": "Ydocchange",
    "b1686009b5494119575d43525b0829162ab79853": "Yfilerename",
    "586080851f6bca4d7aa84a7d307203ad8222407e": "Yfilerename",
    "f1f885f17f9039702cc258fb7bc7688755fc0229": "Ymultichange(Yparameterchange,Yreturntypechange)",
    "3cf81045ac69de08065ea38c7f4839570295631e": "Ybodychange",
    "d3f274d23b3fdab5cfb5af16579392f200eebfb6": "Ydocchange",
    "a6e6f51c35ea53d75ba994a96f1baf02eca651a5": "Yparametermetachange",
    "af1684a234abae7439ea46635d714cd78b780f10": "Ydocchange",
    "b14a198b0a7930aa1d3e23e56cf3b12dff33fe13": "Ydocchange",
    "0fdd78fc2a51ce8e18a1926416aaa7ed21743511": "Ydocchange",
    "8c3f1ab110daf96b9ded27c359f15a05ce7a373d": "Ymultichange(Yparametermetachange,Ydocchange)",
    "9ef58479afdbc67a7f4fd4c9cd6ea4c033ec6fff": "Ydocchange",
    "30a5db352bf74d4f869f65cc320c63ccfd2f8cc7": "Ydocchange",
    "6a8eb444afab305867c0862bc4ff762a113667ce": "Ydocchange",
    "30c4fa45e2dd1bf5c0136be21e39d6a93dfcb347": "Yintroduced"
  },
  "changeHistoryDetails": {
    "413fe0119592f91eed2ff149acf02c1f16c4468e": {
      "type": "Ydocchange",
      "commitMessage": "Checkstyle and trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1083060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/18/11, 1:51 PM",
      "commitName": "413fe0119592f91eed2ff149acf02c1f16c4468e",
      "commitAuthor": "Oliver Heger",
      "commitDateOld": "3/8/11, 8:29 AM",
      "commitNameOld": "b733934479d537d1a439b437183e74014bc85c32",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 10.18,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
      "path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
      "functionStartLine": 327,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param \u003cT\u003e the component type of the array\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param \u003cT\u003e the component type of the array\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n"
      }
    },
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1078032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/4/11, 8:07 AM",
      "commitName": "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "3/4/11, 4:41 AM",
      "commitNameOld": "2382755d1ddb4862e4298d1220e7d76f86d93b15",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
      "path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
      "functionStartLine": 322,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n{@code null}.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns {@code null} for a {@code null} input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be {@code null}\n@return the cloned array, {@code null} if {@code null} input\n"
      }
    },
    "b1686009b5494119575d43525b0829162ab79853": {
      "type": "Yfilerename",
      "commitMessage": "Move main source to src/main/java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@895322 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/2/10, 6:11 PM",
      "commitName": "b1686009b5494119575d43525b0829162ab79853",
      "commitAuthor": "Paul C. Benedict Jr",
      "commitDateOld": "1/2/10, 6:09 PM",
      "commitNameOld": "1f725a97e73edd27301e889408832b34a3d69e63",
      "commitAuthorOld": "Paul C. Benedict Jr",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
      "path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
      "functionStartLine": 309,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang3/ArrayUtils.java",
        "newPath": "src/main/java/org/apache/commons/lang3/ArrayUtils.java"
      }
    },
    "586080851f6bca4d7aa84a7d307203ad8222407e": {
      "type": "Yfilerename",
      "commitMessage": "Changing directory name from lang to lang3. Build will fail (probably) until Java code is changed in subsequent commit. LANG-563\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@889202 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/09, 3:33 AM",
      "commitName": "586080851f6bca4d7aa84a7d307203ad8222407e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/10/09, 3:31 AM",
      "commitNameOld": "da479d635f66c1f82a1f858591cfb1b9941457ae",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
      "path": "src/java/org/apache/commons/lang3/ArrayUtils.java",
      "functionStartLine": 264,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang/ArrayUtils.java",
        "newPath": "src/java/org/apache/commons/lang3/ArrayUtils.java"
      }
    },
    "f1f885f17f9039702cc258fb7bc7688755fc0229": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange)",
      "commitMessage": "ArrayUtils generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@813971 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/09, 11:27 AM",
      "commitName": "f1f885f17f9039702cc258fb7bc7688755fc0229",
      "commitAuthor": "Matthew Jason Benson",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "ArrayUtils generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@813971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/11/09, 11:27 AM",
          "commitName": "f1f885f17f9039702cc258fb7bc7688755fc0229",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "5/17/09, 8:15 PM",
          "commitNameOld": "26f122acd58d9df5d2600a213ff0954707d56213",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 116.63,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
          "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
          "functionStartLine": 278,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
          "diff": "@@ -1,6 +1,6 @@\n-public static Object[] clone(Object[] array) {\n+public static \u003cT\u003e T[] clone(T[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n     return array.clone();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[array-Object[]]",
            "newValue": "[array-T[]]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "ArrayUtils generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@813971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/11/09, 11:27 AM",
          "commitName": "f1f885f17f9039702cc258fb7bc7688755fc0229",
          "commitAuthor": "Matthew Jason Benson",
          "commitDateOld": "5/17/09, 8:15 PM",
          "commitNameOld": "26f122acd58d9df5d2600a213ff0954707d56213",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 116.63,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "actualSource": "public static \u003cT\u003e T[] clone(T[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
          "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
          "functionStartLine": 278,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
          "diff": "@@ -1,6 +1,6 @@\n-public static Object[] clone(Object[] array) {\n+public static \u003cT\u003e T[] clone(T[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n     return array.clone();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Object[]",
            "newValue": "T[]"
          }
        }
      ]
    },
    "3cf81045ac69de08065ea38c7f4839570295631e": {
      "type": "Ybodychange",
      "commitMessage": "Unnecessary casts (clone)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@753658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/14/09, 6:55 AM",
      "commitName": "3cf81045ac69de08065ea38c7f4839570295631e",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "2/29/08, 4:21 PM",
      "commitNameOld": "853de2a62aeadf6b98fc64f1a19ae7e3f2b65e34",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 378.57,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 277,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "@@ -1,6 +1,6 @@\n public static Object[] clone(Object[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n-    return (Object[]) array.clone();\n+    return array.clone();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d3f274d23b3fdab5cfb5af16579392f200eebfb6": {
      "type": "Ydocchange",
      "commitMessage": "Replace internal use of the magic number -1 with a new constant INDEX_NOT_FOUND. Javadoc changes: Use the active voice \"Finds...\" (was \"Find...\"), mention INDEX_NOT_FOUND, and other minor Javadoc nit picking.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@394613 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/16/06, 11:06 PM",
      "commitName": "d3f274d23b3fdab5cfb5af16579392f200eebfb6",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "8/7/05, 5:43 PM",
      "commitNameOld": "08c610501d518fa6d705fe2d2e5c1ed791560a85",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 252.22,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 276,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e for a \u003ccode\u003enull\u003c/code\u003e input array.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n"
      }
    },
    "a6e6f51c35ea53d75ba994a96f1baf02eca651a5": {
      "type": "Yparametermetachange",
      "commitMessage": "we do not use the final parameter code style in the rest of Lang, so bringing these two classes in line with the others\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137891 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/14/04, 7:12 PM",
      "commitName": "a6e6f51c35ea53d75ba994a96f1baf02eca651a5",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/27/04, 2:10 PM",
      "commitNameOld": "6f2cdc34024b289c9e1cfd5f8389e3ba27adfe56",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 18.21,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 268,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "@@ -1,6 +1,6 @@\n-public static Object[] clone(final Object[] array) {\n+public static Object[] clone(Object[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n     return (Object[]) array.clone();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[array-Object[](modifiers-final)]",
        "newValue": "[array-Object[]]"
      }
    },
    "af1684a234abae7439ea46635d714cd78b780f10": {
      "type": "Ydocchange",
      "commitMessage": "A simple spelling fix for ArrayUtils JavaDoc on the clone(Object[] array) method\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137759 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/24/04, 4:09 PM",
      "commitName": "af1684a234abae7439ea46635d714cd78b780f10",
      "commitAuthor": "Timothy O\u0027Brien",
      "commitDateOld": "1/19/04, 3:24 PM",
      "commitNameOld": "aa63078a6842c23d816f189e13e6a5acec6b61b5",
      "commitAuthorOld": "Fredrik Westermarck",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(final Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 306,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objects in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n"
      }
    },
    "b14a198b0a7930aa1d3e23e56cf3b12dff33fe13": {
      "type": "Ydocchange",
      "commitMessage": "Document null behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137457 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/19/03, 1:21 PM",
      "commitName": "b14a198b0a7930aa1d3e23e56cf3b12dff33fe13",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/14/03, 3:25 PM",
      "commitNameOld": "c66659d62dbf69d4c1ccc5c9c50938273436c1b3",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 4.91,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(final Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 298,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input\n"
      }
    },
    "0fdd78fc2a51ce8e18a1926416aaa7ed21743511": {
      "type": "Ydocchange",
      "commitMessage": "Add indexOf for primitive arrays\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/12/03, 3:09 AM",
      "commitName": "0fdd78fc2a51ce8e18a1926416aaa7ed21743511",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "6/28/03, 11:01 AM",
      "commitNameOld": "ded3f8617ebf37b65729d444e6b83d574d6b23e5",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 13.67,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(final Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 256,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e array input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n"
      }
    },
    "8c3f1ab110daf96b9ded27c359f15a05ce7a373d": {
      "type": "Ymultichange(Yparametermetachange,Ydocchange)",
      "commitMessage": "Add new empty array constants for number objects\nDeclare variables as final\nFix null behaviour to be null tolerant\nJavadoc null behaviour\nFix formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137380 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/25/03, 4:32 PM",
      "commitName": "8c3f1ab110daf96b9ded27c359f15a05ce7a373d",
      "commitAuthor": "Stephen Colebourne",
      "subchanges": [
        {
          "type": "Yparametermetachange",
          "commitMessage": "Add new empty array constants for number objects\nDeclare variables as final\nFix null behaviour to be null tolerant\nJavadoc null behaviour\nFix formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137380 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/25/03, 4:32 PM",
          "commitName": "8c3f1ab110daf96b9ded27c359f15a05ce7a373d",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/20/03, 1:03 AM",
          "commitNameOld": "fb733bd1f81242d3e93e711aebe7fe60e6f5f8ad",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 5.64,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] clone(final Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
          "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
          "functionStartLine": 254,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
          "diff": "@@ -1,6 +1,6 @@\n-public static Object[] clone(Object[] array) {\n+public static Object[] clone(final Object[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n     return (Object[]) array.clone();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[array-Object[]]",
            "newValue": "[array-Object[](modifiers-final)]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Add new empty array constants for number objects\nDeclare variables as final\nFix null behaviour to be null tolerant\nJavadoc null behaviour\nFix formatting\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137380 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/25/03, 4:32 PM",
          "commitName": "8c3f1ab110daf96b9ded27c359f15a05ce7a373d",
          "commitAuthor": "Stephen Colebourne",
          "commitDateOld": "6/20/03, 1:03 AM",
          "commitNameOld": "fb733bd1f81242d3e93e711aebe7fe60e6f5f8ad",
          "commitAuthorOld": "Stephen Colebourne",
          "daysBetweenCommits": 5.64,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object[] clone(final Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
          "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
          "functionStartLine": 254,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
          "diff": "@@ -1,6 +1,6 @@\n-public static Object[] clone(Object[] array) {\n+public static Object[] clone(final Object[] array) {\n     if (array \u003d\u003d null) {\n         return null;\n     }\n     return (Object[]) array.clone();\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
            "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n\u003cp\u003eThis method returns \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e input.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n"
          }
        }
      ]
    },
    "9ef58479afdbc67a7f4fd4c9cd6ea4c033ec6fff": {
      "type": "Ydocchange",
      "commitMessage": "Add to ArrayUtils and test it\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137134 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/16/02, 4:56 AM",
      "commitName": "9ef58479afdbc67a7f4fd4c9cd6ea4c033ec6fff",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/16/02, 2:41 AM",
      "commitNameOld": "30a5db352bf74d4f869f65cc320c63ccfd2f8cc7",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 339,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned.\u003c/p\u003e\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned, thus there is no special\nhandling for multi-dimensional arrays.\u003c/p\u003e\n\n@param array the array to shallow clone, may be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n"
      }
    },
    "30a5db352bf74d4f869f65cc320c63ccfd2f8cc7": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc formatting patch, by Fredrik Westermarck\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137133 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/16/02, 2:41 AM",
      "commitName": "30a5db352bf74d4f869f65cc320c63ccfd2f8cc7",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "11/14/02, 4:25 PM",
      "commitNameOld": "ae91631a4cc3816ac17ccfe5706351b9332418d3",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 1.43,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 307,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned.\u003c/p\u003e\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Shallow clones an array returning a typecast result and handling \u003ccode\u003enull\u003c/code\u003e.\n\u003cp\u003e\nThe objecs in the array are not cloned.\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e passed in\n",
        "newValue": "\u003cp\u003eShallow clones an array returning a typecast result and handling\n\u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe objecs in the array are not cloned.\u003c/p\u003e\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e\n passed in\n"
      }
    },
    "6a8eb444afab305867c0862bc4ff762a113667ce": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc fixes, from Fredrik Westermarck\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137129 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/14/02, 2:29 PM",
      "commitName": "6a8eb444afab305867c0862bc4ff762a113667ce",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "10/13/02, 3:42 PM",
      "commitNameOld": "30c4fa45e2dd1bf5c0136be21e39d6a93dfcb347",
      "commitAuthorOld": "Stephen Colebourne",
      "daysBetweenCommits": 31.99,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 293,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "Shallow clones an array returning a typecast result and handling \u003ccode\u003enull\u003c/code\u003e.\n\u003cp\u003e\nThe objecs in the array are not cloned.\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e passed in\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Shallow clones an array returning a typecast result and handling null.\n\u003cp\u003e\nThe objecs in the array are not cloned.\n\n@param array the array to shallow clone, may not be null\n@return the cloned array, or null if null passed in\n",
        "newValue": "Shallow clones an array returning a typecast result and handling \u003ccode\u003enull\u003c/code\u003e.\n\u003cp\u003e\nThe objecs in the array are not cloned.\n\n@param array the array to shallow clone, may not be \u003ccode\u003enull\u003c/code\u003e\n@return the cloned array, or \u003ccode\u003enull\u003c/code\u003e if \u003ccode\u003enull\u003c/code\u003e passed in\n"
      }
    },
    "30c4fa45e2dd1bf5c0136be21e39d6a93dfcb347": {
      "type": "Yintroduced",
      "commitMessage": "Initial version of ArrayUtils, includes toMap\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137098 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/13/02, 3:42 PM",
      "commitName": "30c4fa45e2dd1bf5c0136be21e39d6a93dfcb347",
      "commitAuthor": "Stephen Colebourne",
      "diff": "@@ -0,0 +1,6 @@\n+public static Object[] clone(Object[] array) {\n+    if (array \u003d\u003d null) {\n+        return null;\n+    }\n+    return (Object[]) array.clone();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Object[] clone(Object[] array) {\n    if (array \u003d\u003d null) {\n        return null;\n    }\n    return (Object[]) array.clone();\n}",
      "path": "src/java/org/apache/commons/lang/ArrayUtils.java",
      "functionStartLine": 293,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "Shallow clones an array returning a typecast result and handling null.\n\u003cp\u003e\nThe objecs in the array are not cloned.\n\n@param array the array to shallow clone, may not be null\n@return the cloned array, or null if null passed in\n"
    }
  }
}