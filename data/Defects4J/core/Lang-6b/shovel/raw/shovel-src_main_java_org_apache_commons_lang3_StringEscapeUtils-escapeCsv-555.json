{
  "origin": "codeshovel",
  "repositoryName": "Lang-6b",
  "repositoryPath": "/tmp/Lang-6b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringEscapeUtils.java",
  "functionName": "escapeCsv",
  "functionId": "escapeCsv___input-String",
  "sourceFilePath": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eReturns a {@code String} value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, {@code null} if null string input\n@since 2.4\n",
  "functionStartLine": 555,
  "functionEndLine": 557,
  "numCommitsSeen": 162,
  "timeTaken": 2512,
  "changeHistory": [
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27",
    "b1686009b5494119575d43525b0829162ab79853",
    "586080851f6bca4d7aa84a7d307203ad8222407e",
    "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
    "300d09e7d067770bc24a41b3f406f9dd90e8d3d7",
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
    "188afe1a13dc6f6fe49d69ca5de3845f06d77900",
    "25cec7ac110d1e976744cdcdb8a5bdf8da22828f",
    "29a7fd5e735ab0fb3c4196a24e977a643eedc004",
    "cfd18564a338cb90b4fc8f494a750fcee3312c87",
    "ce182bf2a4876f4591c270109ccc462e259920e5"
  ],
  "changeHistoryShort": {
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27": "Ydocchange",
    "b1686009b5494119575d43525b0829162ab79853": "Yfilerename",
    "586080851f6bca4d7aa84a7d307203ad8222407e": "Yfilerename",
    "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange,Ydocchange)",
    "300d09e7d067770bc24a41b3f406f9dd90e8d3d7": "Ybodychange",
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1": "Ybodychange",
    "188afe1a13dc6f6fe49d69ca5de3845f06d77900": "Ybodychange",
    "25cec7ac110d1e976744cdcdb8a5bdf8da22828f": "Ybodychange",
    "29a7fd5e735ab0fb3c4196a24e977a643eedc004": "Ybodychange",
    "cfd18564a338cb90b4fc8f494a750fcee3312c87": "Ydocchange",
    "ce182bf2a4876f4591c270109ccc462e259920e5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1078032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/4/11, 8:07 AM",
      "commitName": "3fce71c9c1e59a4b555ac4591b0cfa35ddc94e27",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "2/1/11, 10:41 PM",
      "commitNameOld": "22a2c7c5a4e5752b8c67183e1a26b06d1a9cba09",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 30.39,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
      "path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
      "functionStartLine": 444,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a {@code String} value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, {@code null} if null string input\n@since 2.4\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
        "newValue": "\u003cp\u003eReturns a {@code String} value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, {@code null} if null string input\n@since 2.4\n"
      }
    },
    "b1686009b5494119575d43525b0829162ab79853": {
      "type": "Yfilerename",
      "commitMessage": "Move main source to src/main/java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@895322 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/2/10, 6:11 PM",
      "commitName": "b1686009b5494119575d43525b0829162ab79853",
      "commitAuthor": "Paul C. Benedict Jr",
      "commitDateOld": "1/2/10, 6:09 PM",
      "commitNameOld": "1f725a97e73edd27301e889408832b34a3d69e63",
      "commitAuthorOld": "Paul C. Benedict Jr",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
      "path": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java",
      "functionStartLine": 419,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang3/StringEscapeUtils.java",
        "newPath": "src/main/java/org/apache/commons/lang3/StringEscapeUtils.java"
      }
    },
    "586080851f6bca4d7aa84a7d307203ad8222407e": {
      "type": "Yfilerename",
      "commitMessage": "Changing directory name from lang to lang3. Build will fail (probably) until Java code is changed in subsequent commit. LANG-563\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@889202 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/09, 3:33 AM",
      "commitName": "586080851f6bca4d7aa84a7d307203ad8222407e",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "12/10/09, 3:31 AM",
      "commitNameOld": "da479d635f66c1f82a1f858591cfb1b9941457ae",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
      "path": "src/java/org/apache/commons/lang3/StringEscapeUtils.java",
      "functionStartLine": 419,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "newPath": "src/java/org/apache/commons/lang3/StringEscapeUtils.java"
      }
    },
    "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange,Ydocchange)",
      "commitMessage": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/17/09, 12:45 AM",
      "commitName": "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/17/09, 12:45 AM",
          "commitName": "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "11/16/09, 11:52 PM",
          "commitNameOld": "1818fb39698aaa7202e423f68179376378091fe2",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
          "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
          "functionStartLine": 424,
          "functionName": "escapeCsv",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
          "diff": "@@ -1,3 +1,3 @@\n-public static String escapeCsv(String str) {\n-    return EscapeUtils.escapeCsv(str);\n+public static final String escapeCsv(String input) {\n+    return ESCAPE_CSV.translate(input);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[str-String]",
            "newValue": "[input-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/17/09, 12:45 AM",
          "commitName": "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "11/16/09, 11:52 PM",
          "commitNameOld": "1818fb39698aaa7202e423f68179376378091fe2",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
          "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
          "functionStartLine": 424,
          "functionName": "escapeCsv",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
          "diff": "@@ -1,3 +1,3 @@\n-public static String escapeCsv(String str) {\n-    return EscapeUtils.escapeCsv(str);\n+public static final String escapeCsv(String input) {\n+    return ESCAPE_CSV.translate(input);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public, static, final]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/17/09, 12:45 AM",
          "commitName": "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "11/16/09, 11:52 PM",
          "commitNameOld": "1818fb39698aaa7202e423f68179376378091fe2",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
          "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
          "functionStartLine": 424,
          "functionName": "escapeCsv",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
          "diff": "@@ -1,3 +1,3 @@\n-public static String escapeCsv(String str) {\n-    return EscapeUtils.escapeCsv(str);\n+public static final String escapeCsv(String input) {\n+    return ESCAPE_CSV.translate(input);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/17/09, 12:45 AM",
          "commitName": "b58cb22f8ddbd8cf9b8d5dc64514cf1f0ebb9d52",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "11/16/09, 11:52 PM",
          "commitNameOld": "1818fb39698aaa7202e423f68179376378091fe2",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static final String escapeCsv(String input) {\n    return ESCAPE_CSV.translate(input);\n}",
          "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
          "functionStartLine": 424,
          "functionName": "escapeCsv",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
          "diff": "@@ -1,3 +1,3 @@\n-public static String escapeCsv(String str) {\n-    return EscapeUtils.escapeCsv(str);\n+public static final String escapeCsv(String input) {\n+    return ESCAPE_CSV.translate(input);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
            "newValue": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param input the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n"
          }
        }
      ]
    },
    "300d09e7d067770bc24a41b3f406f9dd90e8d3d7": {
      "type": "Ybodychange",
      "commitMessage": "Adding escapeXxx(String) and unescapeXxx(String) methods to EscapeUtils + UnescapeUtils, and changing StringEscapeUtils to use them. LANG-505\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@787903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/23/09, 9:41 PM",
      "commitName": "300d09e7d067770bc24a41b3f406f9dd90e8d3d7",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/22/09, 11:15 PM",
      "commitNameOld": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    return EscapeUtils.escapeCsv(str);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 426,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "@@ -1,3 +1,3 @@\n public static String escapeCsv(String str) {\n-    return EscapeUtils.ESCAPE_CSV.translate(str);\n+    return EscapeUtils.escapeCsv(str);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1": {
      "type": "Ybodychange",
      "commitMessage": "Committing a rewrite of StringEscapeUtils guts - LANG-505. Entities.java can now go away. Most of the code is in the new text.translate package. More work is needed, including what to actually define as \u0027ESCAPE_XML\u0027 etc, but it\u0027s now easy for someone to look at the source to EscapeUtils and UnescapeUtils and put their own ESCAPE_XML variable together, and with lots of reuse value. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@787560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/22/09, 11:15 PM",
      "commitName": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/20/09, 10:35 PM",
      "commitNameOld": "65417daad583fff78085ac502ecf4648422219d5",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    return EscapeUtils.ESCAPE_CSV.translate(str);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 426,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "@@ -1,12 +1,3 @@\n public static String escapeCsv(String str) {\n-    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n-        return str;\n-    }\n-    try {\n-        StringWriter writer \u003d new StringWriter();\n-        escapeCsv(writer, str);\n-        return writer.toString();\n-    } catch (IOException ioe) {\n-        throw new UnhandledException(ioe);\n-    }\n+    return EscapeUtils.ESCAPE_CSV.translate(str);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "188afe1a13dc6f6fe49d69ca5de3845f06d77900": {
      "type": "Ybodychange",
      "commitMessage": "Switching from printStackTrace to UnhandledException as per LANG-450\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@688011 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/22/08, 12:49 AM",
      "commitName": "188afe1a13dc6f6fe49d69ca5de3845f06d77900",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/10/08, 11:26 PM",
      "commitNameOld": "775b9158147fa4337ce13a153b3dba30cf85c762",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 103.06,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n        return str;\n    }\n    try {\n        StringWriter writer \u003d new StringWriter();\n        escapeCsv(writer, str);\n        return writer.toString();\n    } catch (IOException ioe) {\n        throw new UnhandledException(ioe);\n    }\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 720,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "@@ -1,13 +1,12 @@\n public static String escapeCsv(String str) {\n     if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n         return str;\n     }\n     try {\n         StringWriter writer \u003d new StringWriter();\n         escapeCsv(writer, str);\n         return writer.toString();\n     } catch (IOException ioe) {\n-        ioe.printStackTrace();\n-        return null;\n+        throw new UnhandledException(ioe);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "25cec7ac110d1e976744cdcdb8a5bdf8da22828f": {
      "type": "Ybodychange",
      "commitMessage": "Replacing the escaped quote with CSV_QUOTE, and changing the non-Writer version to reuse the Writer version - See: LANG-374\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@597281 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/21/07, 5:26 PM",
      "commitName": "25cec7ac110d1e976744cdcdb8a5bdf8da22828f",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "11/17/07, 1:27 AM",
      "commitNameOld": "29a7fd5e735ab0fb3c4196a24e977a643eedc004",
      "commitAuthorOld": "Niall Kegan Pemberton",
      "daysBetweenCommits": 4.67,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n        return str;\n    }\n    try {\n        StringWriter writer \u003d new StringWriter();\n        escapeCsv(writer, str);\n        return writer.toString();\n    } catch (IOException ioe) {\n        ioe.printStackTrace();\n        return null;\n    }\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 719,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "@@ -1,16 +1,13 @@\n public static String escapeCsv(String str) {\n     if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n         return str;\n     }\n-    StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n-    buffer.append(\u0027\"\u0027);\n-    for (int i \u003d 0; i \u003c str.length(); i++) {\n-        char c \u003d str.charAt(i);\n-        if (c \u003d\u003d \u0027\"\u0027) {\n-            buffer.append(\u0027\"\u0027);\n-        }\n-        buffer.append(c);\n+    try {\n+        StringWriter writer \u003d new StringWriter();\n+        escapeCsv(writer, str);\n+        return writer.toString();\n+    } catch (IOException ioe) {\n+        ioe.printStackTrace();\n+        return null;\n     }\n-    buffer.append(\u0027\"\u0027);\n-    return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "29a7fd5e735ab0fb3c4196a24e977a643eedc004": {
      "type": "Ybodychange",
      "commitMessage": "LANG-374 - implement Sebb\u0027s improvement to use StringUtils.containsNone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@595927 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/17/07, 1:27 AM",
      "commitName": "29a7fd5e735ab0fb3c4196a24e977a643eedc004",
      "commitAuthor": "Niall Kegan Pemberton",
      "commitDateOld": "11/15/07, 8:26 PM",
      "commitNameOld": "cfd18564a338cb90b4fc8f494a750fcee3312c87",
      "commitAuthorOld": "Niall Kegan Pemberton",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n        return str;\n    }\n    StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n    buffer.append(\u0027\"\u0027);\n    for (int i \u003d 0; i \u003c str.length(); i++) {\n        char c \u003d str.charAt(i);\n        if (c \u003d\u003d \u0027\"\u0027) {\n            buffer.append(\u0027\"\u0027);\n        }\n        buffer.append(c);\n    }\n    buffer.append(\u0027\"\u0027);\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 717,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "@@ -1,16 +1,16 @@\n public static String escapeCsv(String str) {\n-    if (!containsCsvChars(str)) {\n+    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n         return str;\n     }\n     StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n     buffer.append(\u0027\"\u0027);\n     for (int i \u003d 0; i \u003c str.length(); i++) {\n         char c \u003d str.charAt(i);\n         if (c \u003d\u003d \u0027\"\u0027) {\n             buffer.append(\u0027\"\u0027);\n         }\n         buffer.append(c);\n     }\n     buffer.append(\u0027\"\u0027);\n     return buffer.toString();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cfd18564a338cb90b4fc8f494a750fcee3312c87": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc changes only\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@595544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/15/07, 8:26 PM",
      "commitName": "cfd18564a338cb90b4fc8f494a750fcee3312c87",
      "commitAuthor": "Niall Kegan Pemberton",
      "commitDateOld": "11/15/07, 8:12 PM",
      "commitNameOld": "ce182bf2a4876f4591c270109ccc462e259920e5",
      "commitAuthorOld": "Niall Kegan Pemberton",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String escapeCsv(String str) {\n    if (!containsCsvChars(str)) {\n        return str;\n    }\n    StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n    buffer.append(\u0027\"\u0027);\n    for (int i \u003d 0; i \u003c str.length(); i++) {\n        char c \u003d str.charAt(i);\n        if (c \u003d\u003d \u0027\"\u0027) {\n            buffer.append(\u0027\"\u0027);\n        }\n        buffer.append(c);\n    }\n    buffer.append(\u0027\"\u0027);\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 715,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column escaping with double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the string to escape, may be null\n@return a new String, escaped for CSV, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n",
        "newValue": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column enclosed in double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\n\u003cp\u003eIf the value does not contain a comma, newline or double quote, then the\n   String value is returned unchanged.\u003c/p\u003e\n\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the input CSV column String, may be null\n@return the input String, enclosed in double quotes if the value contains a comma,\nnewline or double quote, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n"
      }
    },
    "ce182bf2a4876f4591c270109ccc462e259920e5": {
      "type": "Yintroduced",
      "commitMessage": "LANG-374 - Add escaping for CSV columns to StringEscapeUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@595541 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/15/07, 8:12 PM",
      "commitName": "ce182bf2a4876f4591c270109ccc462e259920e5",
      "commitAuthor": "Niall Kegan Pemberton",
      "diff": "@@ -0,0 +1,16 @@\n+public static String escapeCsv(String str) {\n+    if (!containsCsvChars(str)) {\n+        return str;\n+    }\n+    StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n+    buffer.append(\u0027\"\u0027);\n+    for (int i \u003d 0; i \u003c str.length(); i++) {\n+        char c \u003d str.charAt(i);\n+        if (c \u003d\u003d \u0027\"\u0027) {\n+            buffer.append(\u0027\"\u0027);\n+        }\n+        buffer.append(c);\n+    }\n+    buffer.append(\u0027\"\u0027);\n+    return buffer.toString();\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static String escapeCsv(String str) {\n    if (!containsCsvChars(str)) {\n        return str;\n    }\n    StringBuffer buffer \u003d new StringBuffer(str.length() + 10);\n    buffer.append(\u0027\"\u0027);\n    for (int i \u003d 0; i \u003c str.length(); i++) {\n        char c \u003d str.charAt(i);\n        if (c \u003d\u003d \u0027\"\u0027) {\n            buffer.append(\u0027\"\u0027);\n        }\n        buffer.append(c);\n    }\n    buffer.append(\u0027\"\u0027);\n    return buffer.toString();\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 710,
      "functionName": "escapeCsv",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns a \u003ccode\u003eString\u003c/code\u003e value for a CSV column escaping with double quotes,\nif required.\u003c/p\u003e\n\n\u003cp\u003eIf the value contains a comma, newline or double quote, then the\n   String value is returned enclosed in double quotes.\u003c/p\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAny double quote characters in the value are escaped with another double quote.\u003c/p\u003e\n\nsee \u003ca href\u003d\"http://en.wikipedia.org/wiki/Comma-separated_values\"\u003eWikipedia\u003c/a\u003e and\n\u003ca href\u003d\"http://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e.\n\n@param str the string to escape, may be null\n@return a new String, escaped for CSV, \u003ccode\u003enull\u003c/code\u003e if null string input\n@since 2.4\n"
    }
  }
}