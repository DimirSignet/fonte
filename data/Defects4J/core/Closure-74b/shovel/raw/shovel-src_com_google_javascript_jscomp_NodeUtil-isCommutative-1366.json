{
  "origin": "codeshovel",
  "repositoryName": "Closure-74b",
  "repositoryPath": "/tmp/Closure-74b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isCommutative",
  "functionId": "isCommutative___type-int",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Returns true if the operator is commutative.\ne.g. (a * b) * c \u003d c * (b * a)\nNote 1: \"+\" is not commutative because it is also the concatenation\nfor strings. e.g. \"a\" + (1 + 2) is not \"a\" + 1 + 2\nNote 2: only operations on literals and pure functions are commutative.\n",
  "functionStartLine": 1366,
  "functionEndLine": 1376,
  "numCommitsSeen": 80,
  "timeTaken": 3886,
  "changeHistory": [
    "685443251d5be1186e0d8abf4ad1181153bebe01",
    "b14f33a0c7d07320600acdf732f16f6f52aa999c"
  ],
  "changeHistoryShort": {
    "685443251d5be1186e0d8abf4ad1181153bebe01": "Ybodychange",
    "b14f33a0c7d07320600acdf732f16f6f52aa999c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "685443251d5be1186e0d8abf4ad1181153bebe01": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd BITXOR to the list of commutative and associative operators.\n\nR\u003dnicksantos\nDELTA\u003d21  (21 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d250\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@687 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/11/11, 3:59 PM",
      "commitName": "685443251d5be1186e0d8abf4ad1181153bebe01",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "1/11/11, 12:06 PM",
      "commitNameOld": "711b76ac1015234f86805f1735ff2c3da195f55c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isCommutative(int type) {\n    switch(type) {\n        case Token.MUL:\n        case Token.BITOR:\n        case Token.BITXOR:\n        case Token.BITAND:\n            return true;\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1136,
      "functionName": "isCommutative",
      "functionAnnotation": "",
      "functionDoc": "Returns true if the operator is commutative.\ne.g. (a * b) * c \u003d c * (b * a)\nNote 1: \"+\" is not commutative because it is also the concatenation\nfor strings. e.g. \"a\" + (1 + 2) is not \"a\" + 1 + 2\nNote 2: only operations on literals and pure functions are commutative.\n",
      "diff": "@@ -1,10 +1,11 @@\n static boolean isCommutative(int type) {\n     switch(type) {\n         case Token.MUL:\n         case Token.BITOR:\n+        case Token.BITXOR:\n         case Token.BITAND:\n             return true;\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b14f33a0c7d07320600acdf732f16f6f52aa999c": {
      "type": "Yintroduced",
      "commitMessage": "\nFold more associative operations.\nFixes issue 245\n\nR\u003dnicksantos\nDELTA\u003d250  (139 added, 61 deleted, 50 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1041044\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@530 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/1/10, 9:37 AM",
      "commitName": "b14f33a0c7d07320600acdf732f16f6f52aa999c",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,10 @@\n+static boolean isCommutative(int type) {\n+    switch(type) {\n+        case Token.MUL:\n+        case Token.BITOR:\n+        case Token.BITAND:\n+            return true;\n+        default:\n+            return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isCommutative(int type) {\n    switch(type) {\n        case Token.MUL:\n        case Token.BITOR:\n        case Token.BITAND:\n            return true;\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 948,
      "functionName": "isCommutative",
      "functionAnnotation": "",
      "functionDoc": "Returns true if the operator is commutative.\ne.g. (a * b) * c \u003d c * (b * a)\nNote 1: \"+\" is not commutative because it is also the concatenation\nfor strings. e.g. \"a\" + (1 + 2) is not \"a\" + 1 + 2\nNote 2: only operations on literals and pure functions are commutative.\n"
    }
  }
}