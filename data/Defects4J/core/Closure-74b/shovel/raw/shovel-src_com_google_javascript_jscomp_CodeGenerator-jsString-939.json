{
  "origin": "codeshovel",
  "repositoryName": "Closure-74b",
  "repositoryPath": "/tmp/Closure-74b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeGenerator.java",
  "functionName": "jsString",
  "functionId": "jsString___s-String__outputCharsetEncoder-CharsetEncoder",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeGenerator.java",
  "functionAnnotation": "",
  "functionDoc": "Outputs a js string, using the optimal (single/double) quote character\n",
  "functionStartLine": 939,
  "functionEndLine": 966,
  "numCommitsSeen": 48,
  "timeTaken": 3274,
  "changeHistory": [
    "847b296c23a63aa0a0b38cc3e63883e1688288e3",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "847b296c23a63aa0a0b38cc3e63883e1688288e3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/8/09, 3:50 PM",
      "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/8/09, 3:50 PM",
          "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "11/3/09, 3:51 PM",
          "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 35.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "static String jsString(String s, CharsetEncoder outputCharsetEncoder) {\n    int singleq \u003d 0, doubleq \u003d 0;\n    for (int i \u003d 0; i \u003c s.length(); i++) {\n        switch(s.charAt(i)) {\n            case \u0027\"\u0027:\n                doubleq++;\n                break;\n            case \u0027\\\u0027\u0027:\n                singleq++;\n                break;\n        }\n    }\n    String doublequote, singlequote;\n    char quote;\n    if (singleq \u003c doubleq) {\n        quote \u003d \u0027\\\u0027\u0027;\n        doublequote \u003d \"\\\"\";\n        singlequote \u003d \"\\\\\\\u0027\";\n    } else {\n        quote \u003d \u0027\\\"\u0027;\n        doublequote \u003d \"\\\\\\\"\";\n        singlequote \u003d \"\\\u0027\";\n    }\n    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\", outputCharsetEncoder);\n}",
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
          "functionStartLine": 751,
          "functionName": "jsString",
          "functionAnnotation": "",
          "functionDoc": "Outputs a js string, using the optimal (single/double) quote character\n",
          "diff": "@@ -1,25 +1,25 @@\n-static String jsString(String s) {\n+static String jsString(String s, CharsetEncoder outputCharsetEncoder) {\n     int singleq \u003d 0, doubleq \u003d 0;\n     for (int i \u003d 0; i \u003c s.length(); i++) {\n         switch(s.charAt(i)) {\n             case \u0027\"\u0027:\n                 doubleq++;\n                 break;\n             case \u0027\\\u0027\u0027:\n                 singleq++;\n                 break;\n         }\n     }\n     String doublequote, singlequote;\n     char quote;\n     if (singleq \u003c doubleq) {\n         quote \u003d \u0027\\\u0027\u0027;\n         doublequote \u003d \"\\\"\";\n         singlequote \u003d \"\\\\\\\u0027\";\n     } else {\n         quote \u003d \u0027\\\"\u0027;\n         doublequote \u003d \"\\\\\\\"\";\n         singlequote \u003d \"\\\u0027\";\n     }\n-    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\");\n+    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\", outputCharsetEncoder);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[s-String]",
            "newValue": "[s-String, outputCharsetEncoder-CharsetEncoder]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Add support for other charset types.\n\nAdd support for ES5 directives.\n\nFork unit tests, so that they run more hermetically.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@21 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/8/09, 3:50 PM",
          "commitName": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
          "commitAuthor": "nicholas.j.santos@gmail.com",
          "commitDateOld": "11/3/09, 3:51 PM",
          "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 35.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "static String jsString(String s, CharsetEncoder outputCharsetEncoder) {\n    int singleq \u003d 0, doubleq \u003d 0;\n    for (int i \u003d 0; i \u003c s.length(); i++) {\n        switch(s.charAt(i)) {\n            case \u0027\"\u0027:\n                doubleq++;\n                break;\n            case \u0027\\\u0027\u0027:\n                singleq++;\n                break;\n        }\n    }\n    String doublequote, singlequote;\n    char quote;\n    if (singleq \u003c doubleq) {\n        quote \u003d \u0027\\\u0027\u0027;\n        doublequote \u003d \"\\\"\";\n        singlequote \u003d \"\\\\\\\u0027\";\n    } else {\n        quote \u003d \u0027\\\"\u0027;\n        doublequote \u003d \"\\\\\\\"\";\n        singlequote \u003d \"\\\u0027\";\n    }\n    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\", outputCharsetEncoder);\n}",
          "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
          "functionStartLine": 751,
          "functionName": "jsString",
          "functionAnnotation": "",
          "functionDoc": "Outputs a js string, using the optimal (single/double) quote character\n",
          "diff": "@@ -1,25 +1,25 @@\n-static String jsString(String s) {\n+static String jsString(String s, CharsetEncoder outputCharsetEncoder) {\n     int singleq \u003d 0, doubleq \u003d 0;\n     for (int i \u003d 0; i \u003c s.length(); i++) {\n         switch(s.charAt(i)) {\n             case \u0027\"\u0027:\n                 doubleq++;\n                 break;\n             case \u0027\\\u0027\u0027:\n                 singleq++;\n                 break;\n         }\n     }\n     String doublequote, singlequote;\n     char quote;\n     if (singleq \u003c doubleq) {\n         quote \u003d \u0027\\\u0027\u0027;\n         doublequote \u003d \"\\\"\";\n         singlequote \u003d \"\\\\\\\u0027\";\n     } else {\n         quote \u003d \u0027\\\"\u0027;\n         doublequote \u003d \"\\\\\\\"\";\n         singlequote \u003d \"\\\u0027\";\n     }\n-    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\");\n+    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\", outputCharsetEncoder);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,25 @@\n+static String jsString(String s) {\n+    int singleq \u003d 0, doubleq \u003d 0;\n+    for (int i \u003d 0; i \u003c s.length(); i++) {\n+        switch(s.charAt(i)) {\n+            case \u0027\"\u0027:\n+                doubleq++;\n+                break;\n+            case \u0027\\\u0027\u0027:\n+                singleq++;\n+                break;\n+        }\n+    }\n+    String doublequote, singlequote;\n+    char quote;\n+    if (singleq \u003c doubleq) {\n+        quote \u003d \u0027\\\u0027\u0027;\n+        doublequote \u003d \"\\\"\";\n+        singlequote \u003d \"\\\\\\\u0027\";\n+    } else {\n+        quote \u003d \u0027\\\"\u0027;\n+        doublequote \u003d \"\\\\\\\"\";\n+        singlequote \u003d \"\\\u0027\";\n+    }\n+    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "static String jsString(String s) {\n    int singleq \u003d 0, doubleq \u003d 0;\n    for (int i \u003d 0; i \u003c s.length(); i++) {\n        switch(s.charAt(i)) {\n            case \u0027\"\u0027:\n                doubleq++;\n                break;\n            case \u0027\\\u0027\u0027:\n                singleq++;\n                break;\n        }\n    }\n    String doublequote, singlequote;\n    char quote;\n    if (singleq \u003c doubleq) {\n        quote \u003d \u0027\\\u0027\u0027;\n        doublequote \u003d \"\\\"\";\n        singlequote \u003d \"\\\\\\\u0027\";\n    } else {\n        quote \u003d \u0027\\\"\u0027;\n        doublequote \u003d \"\\\\\\\"\";\n        singlequote \u003d \"\\\u0027\";\n    }\n    return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\");\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 733,
      "functionName": "jsString",
      "functionAnnotation": "",
      "functionDoc": "Outputs a js string, using the optimal (single/double) quote character\n"
    }
  }
}