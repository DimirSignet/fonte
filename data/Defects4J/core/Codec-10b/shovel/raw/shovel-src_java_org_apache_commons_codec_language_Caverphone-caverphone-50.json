{
  "origin": "codeshovel",
  "repositoryName": "Codec-10b",
  "repositoryPath": "/tmp/Codec-10b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Caverphone.java",
  "functionName": "caverphone",
  "functionId": "caverphone___txt-String",
  "sourceFilePath": "src/java/org/apache/commons/codec/language/Caverphone.java",
  "functionAnnotation": "",
  "functionDoc": "Encodes the given String into a Caverphone value.\n\n@param txt String the source string\n@return A caverphone code for the given String\n",
  "functionStartLine": 50,
  "functionEndLine": 140,
  "numCommitsSeen": 8,
  "timeTaken": 365,
  "changeHistory": [
    "0c4dca4e4edc3864b24d8badafddee51d824473c",
    "52d82d1dfff8c2b2ded9d843e0b03017af6d747c",
    "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
    "66555de56715ccb185dee4dd2b25b1e93cc5c73e"
  ],
  "changeHistoryShort": {
    "0c4dca4e4edc3864b24d8badafddee51d824473c": "Ydocchange",
    "52d82d1dfff8c2b2ded9d843e0b03017af6d747c": "Ybodychange",
    "7882213ce2fde3ef9b990c494f47aeae7b6f6946": "Ybodychange",
    "66555de56715ccb185dee4dd2b25b1e93cc5c73e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c4dca4e4edc3864b24d8badafddee51d824473c": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075400 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/28/11, 8:06 AM",
      "commitName": "0c4dca4e4edc3864b24d8badafddee51d824473c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "7/24/09, 4:28 PM",
      "commitNameOld": "3210069a57d060b1aaec24af66042798c8942ef4",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 583.69,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "actualSource": "public String caverphone(String txt) {\n    if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n        return \"1111111111\";\n    }\n    txt \u003d txt.toLowerCase(java.util.Locale.ENGLISH);\n    txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n    txt \u003d txt.replaceAll(\"e$\", \"\");\n    txt \u003d txt.replaceAll(\"^cough\", \"cou2f\");\n    txt \u003d txt.replaceAll(\"^rough\", \"rou2f\");\n    txt \u003d txt.replaceAll(\"^tough\", \"tou2f\");\n    txt \u003d txt.replaceAll(\"^enough\", \"enou2f\");\n    txt \u003d txt.replaceAll(\"^trough\", \"trou2f\");\n    txt \u003d txt.replaceAll(\"^gn\", \"2n\");\n    txt \u003d txt.replaceAll(\"^mb\", \"m2\");\n    txt \u003d txt.replaceAll(\"cq\", \"2q\");\n    txt \u003d txt.replaceAll(\"ci\", \"si\");\n    txt \u003d txt.replaceAll(\"ce\", \"se\");\n    txt \u003d txt.replaceAll(\"cy\", \"sy\");\n    txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n    txt \u003d txt.replaceAll(\"c\", \"k\");\n    txt \u003d txt.replaceAll(\"q\", \"k\");\n    txt \u003d txt.replaceAll(\"x\", \"k\");\n    txt \u003d txt.replaceAll(\"v\", \"f\");\n    txt \u003d txt.replaceAll(\"dg\", \"2g\");\n    txt \u003d txt.replaceAll(\"tio\", \"sio\");\n    txt \u003d txt.replaceAll(\"tia\", \"sia\");\n    txt \u003d txt.replaceAll(\"d\", \"t\");\n    txt \u003d txt.replaceAll(\"ph\", \"fh\");\n    txt \u003d txt.replaceAll(\"b\", \"p\");\n    txt \u003d txt.replaceAll(\"sh\", \"s2\");\n    txt \u003d txt.replaceAll(\"z\", \"s\");\n    txt \u003d txt.replaceAll(\"^[aeiou]\", \"A\");\n    txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n    txt \u003d txt.replaceAll(\"j\", \"y\");\n    txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n    txt \u003d txt.replaceAll(\"^y\", \"A\");\n    txt \u003d txt.replaceAll(\"y\", \"3\");\n    txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n    txt \u003d txt.replaceAll(\"gh\", \"22\");\n    txt \u003d txt.replaceAll(\"g\", \"k\");\n    txt \u003d txt.replaceAll(\"s+\", \"S\");\n    txt \u003d txt.replaceAll(\"t+\", \"T\");\n    txt \u003d txt.replaceAll(\"p+\", \"P\");\n    txt \u003d txt.replaceAll(\"k+\", \"K\");\n    txt \u003d txt.replaceAll(\"f+\", \"F\");\n    txt \u003d txt.replaceAll(\"m+\", \"M\");\n    txt \u003d txt.replaceAll(\"n+\", \"N\");\n    txt \u003d txt.replaceAll(\"w3\", \"W3\");\n    txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n    txt \u003d txt.replaceAll(\"w$\", \"3\");\n    txt \u003d txt.replaceAll(\"w\", \"2\");\n    txt \u003d txt.replaceAll(\"^h\", \"A\");\n    txt \u003d txt.replaceAll(\"h\", \"2\");\n    txt \u003d txt.replaceAll(\"r3\", \"R3\");\n    txt \u003d txt.replaceAll(\"r$\", \"3\");\n    txt \u003d txt.replaceAll(\"r\", \"2\");\n    txt \u003d txt.replaceAll(\"l3\", \"L3\");\n    txt \u003d txt.replaceAll(\"l$\", \"3\");\n    txt \u003d txt.replaceAll(\"l\", \"2\");\n    txt \u003d txt.replaceAll(\"2\", \"\");\n    txt \u003d txt.replaceAll(\"3$\", \"A\");\n    txt \u003d txt.replaceAll(\"3\", \"\");\n    txt \u003d txt + \"111111\" + \"1111\";\n    return txt.substring(0, 10);\n}",
      "path": "src/java/org/apache/commons/codec/language/Caverphone.java",
      "functionStartLine": 50,
      "functionName": "caverphone",
      "functionAnnotation": "",
      "functionDoc": "Encodes the given String into a Caverphone value.\n\n@param txt String the source string\n@return A caverphone code for the given String\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Find the caverphone value of a String.\n\n@param txt String to find the caverphone code for\n@return A caverphone code corresponding to the String supplied\n",
        "newValue": "Encodes the given String into a Caverphone value.\n\n@param txt String the source string\n@return A caverphone code for the given String\n"
      }
    },
    "52d82d1dfff8c2b2ded9d843e0b03017af6d747c": {
      "type": "Ybodychange",
      "commitMessage": "Applying Benjamin Bentmann\u0027s patch from CODEC-65, which changes the various encoders to use a locale when lowercasing. The encoders all assume the English locale, so when running in non English locales the default toLowerCase sometimes does not work as the encoder expects. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@651874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/26/08, 5:35 PM",
      "commitName": "52d82d1dfff8c2b2ded9d843e0b03017af6d747c",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "4/25/08, 4:11 AM",
      "commitNameOld": "628ece3a5b40c65bc114cb2ffb219599b19db380",
      "commitAuthorOld": "Niall Kegan Pemberton",
      "daysBetweenCommits": 1.56,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public String caverphone(String txt) {\n    if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n        return \"1111111111\";\n    }\n    txt \u003d txt.toLowerCase(java.util.Locale.ENGLISH);\n    txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n    txt \u003d txt.replaceAll(\"e$\", \"\");\n    txt \u003d txt.replaceAll(\"^cough\", \"cou2f\");\n    txt \u003d txt.replaceAll(\"^rough\", \"rou2f\");\n    txt \u003d txt.replaceAll(\"^tough\", \"tou2f\");\n    txt \u003d txt.replaceAll(\"^enough\", \"enou2f\");\n    txt \u003d txt.replaceAll(\"^trough\", \"trou2f\");\n    txt \u003d txt.replaceAll(\"^gn\", \"2n\");\n    txt \u003d txt.replaceAll(\"^mb\", \"m2\");\n    txt \u003d txt.replaceAll(\"cq\", \"2q\");\n    txt \u003d txt.replaceAll(\"ci\", \"si\");\n    txt \u003d txt.replaceAll(\"ce\", \"se\");\n    txt \u003d txt.replaceAll(\"cy\", \"sy\");\n    txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n    txt \u003d txt.replaceAll(\"c\", \"k\");\n    txt \u003d txt.replaceAll(\"q\", \"k\");\n    txt \u003d txt.replaceAll(\"x\", \"k\");\n    txt \u003d txt.replaceAll(\"v\", \"f\");\n    txt \u003d txt.replaceAll(\"dg\", \"2g\");\n    txt \u003d txt.replaceAll(\"tio\", \"sio\");\n    txt \u003d txt.replaceAll(\"tia\", \"sia\");\n    txt \u003d txt.replaceAll(\"d\", \"t\");\n    txt \u003d txt.replaceAll(\"ph\", \"fh\");\n    txt \u003d txt.replaceAll(\"b\", \"p\");\n    txt \u003d txt.replaceAll(\"sh\", \"s2\");\n    txt \u003d txt.replaceAll(\"z\", \"s\");\n    txt \u003d txt.replaceAll(\"^[aeiou]\", \"A\");\n    txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n    txt \u003d txt.replaceAll(\"j\", \"y\");\n    txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n    txt \u003d txt.replaceAll(\"^y\", \"A\");\n    txt \u003d txt.replaceAll(\"y\", \"3\");\n    txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n    txt \u003d txt.replaceAll(\"gh\", \"22\");\n    txt \u003d txt.replaceAll(\"g\", \"k\");\n    txt \u003d txt.replaceAll(\"s+\", \"S\");\n    txt \u003d txt.replaceAll(\"t+\", \"T\");\n    txt \u003d txt.replaceAll(\"p+\", \"P\");\n    txt \u003d txt.replaceAll(\"k+\", \"K\");\n    txt \u003d txt.replaceAll(\"f+\", \"F\");\n    txt \u003d txt.replaceAll(\"m+\", \"M\");\n    txt \u003d txt.replaceAll(\"n+\", \"N\");\n    txt \u003d txt.replaceAll(\"w3\", \"W3\");\n    txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n    txt \u003d txt.replaceAll(\"w$\", \"3\");\n    txt \u003d txt.replaceAll(\"w\", \"2\");\n    txt \u003d txt.replaceAll(\"^h\", \"A\");\n    txt \u003d txt.replaceAll(\"h\", \"2\");\n    txt \u003d txt.replaceAll(\"r3\", \"R3\");\n    txt \u003d txt.replaceAll(\"r$\", \"3\");\n    txt \u003d txt.replaceAll(\"r\", \"2\");\n    txt \u003d txt.replaceAll(\"l3\", \"L3\");\n    txt \u003d txt.replaceAll(\"l$\", \"3\");\n    txt \u003d txt.replaceAll(\"l\", \"2\");\n    txt \u003d txt.replaceAll(\"2\", \"\");\n    txt \u003d txt.replaceAll(\"3$\", \"A\");\n    txt \u003d txt.replaceAll(\"3\", \"\");\n    txt \u003d txt + \"111111\" + \"1111\";\n    return txt.substring(0, 10);\n}",
      "path": "src/java/org/apache/commons/codec/language/Caverphone.java",
      "functionStartLine": 50,
      "functionName": "caverphone",
      "functionAnnotation": "",
      "functionDoc": "Find the caverphone value of a String.\n\n@param txt String to find the caverphone code for\n@return A caverphone code corresponding to the String supplied\n",
      "diff": "@@ -1,65 +1,65 @@\n public String caverphone(String txt) {\n     if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n         return \"1111111111\";\n     }\n-    txt \u003d txt.toLowerCase();\n+    txt \u003d txt.toLowerCase(java.util.Locale.ENGLISH);\n     txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n     txt \u003d txt.replaceAll(\"e$\", \"\");\n     txt \u003d txt.replaceAll(\"^cough\", \"cou2f\");\n     txt \u003d txt.replaceAll(\"^rough\", \"rou2f\");\n     txt \u003d txt.replaceAll(\"^tough\", \"tou2f\");\n     txt \u003d txt.replaceAll(\"^enough\", \"enou2f\");\n     txt \u003d txt.replaceAll(\"^trough\", \"trou2f\");\n     txt \u003d txt.replaceAll(\"^gn\", \"2n\");\n     txt \u003d txt.replaceAll(\"^mb\", \"m2\");\n     txt \u003d txt.replaceAll(\"cq\", \"2q\");\n     txt \u003d txt.replaceAll(\"ci\", \"si\");\n     txt \u003d txt.replaceAll(\"ce\", \"se\");\n     txt \u003d txt.replaceAll(\"cy\", \"sy\");\n     txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n     txt \u003d txt.replaceAll(\"c\", \"k\");\n     txt \u003d txt.replaceAll(\"q\", \"k\");\n     txt \u003d txt.replaceAll(\"x\", \"k\");\n     txt \u003d txt.replaceAll(\"v\", \"f\");\n     txt \u003d txt.replaceAll(\"dg\", \"2g\");\n     txt \u003d txt.replaceAll(\"tio\", \"sio\");\n     txt \u003d txt.replaceAll(\"tia\", \"sia\");\n     txt \u003d txt.replaceAll(\"d\", \"t\");\n     txt \u003d txt.replaceAll(\"ph\", \"fh\");\n     txt \u003d txt.replaceAll(\"b\", \"p\");\n     txt \u003d txt.replaceAll(\"sh\", \"s2\");\n     txt \u003d txt.replaceAll(\"z\", \"s\");\n     txt \u003d txt.replaceAll(\"^[aeiou]\", \"A\");\n     txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n     txt \u003d txt.replaceAll(\"j\", \"y\");\n     txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n     txt \u003d txt.replaceAll(\"^y\", \"A\");\n     txt \u003d txt.replaceAll(\"y\", \"3\");\n     txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n     txt \u003d txt.replaceAll(\"gh\", \"22\");\n     txt \u003d txt.replaceAll(\"g\", \"k\");\n     txt \u003d txt.replaceAll(\"s+\", \"S\");\n     txt \u003d txt.replaceAll(\"t+\", \"T\");\n     txt \u003d txt.replaceAll(\"p+\", \"P\");\n     txt \u003d txt.replaceAll(\"k+\", \"K\");\n     txt \u003d txt.replaceAll(\"f+\", \"F\");\n     txt \u003d txt.replaceAll(\"m+\", \"M\");\n     txt \u003d txt.replaceAll(\"n+\", \"N\");\n     txt \u003d txt.replaceAll(\"w3\", \"W3\");\n     txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n     txt \u003d txt.replaceAll(\"w$\", \"3\");\n     txt \u003d txt.replaceAll(\"w\", \"2\");\n     txt \u003d txt.replaceAll(\"^h\", \"A\");\n     txt \u003d txt.replaceAll(\"h\", \"2\");\n     txt \u003d txt.replaceAll(\"r3\", \"R3\");\n     txt \u003d txt.replaceAll(\"r$\", \"3\");\n     txt \u003d txt.replaceAll(\"r\", \"2\");\n     txt \u003d txt.replaceAll(\"l3\", \"L3\");\n     txt \u003d txt.replaceAll(\"l$\", \"3\");\n     txt \u003d txt.replaceAll(\"l\", \"2\");\n     txt \u003d txt.replaceAll(\"2\", \"\");\n     txt \u003d txt.replaceAll(\"3$\", \"A\");\n     txt \u003d txt.replaceAll(\"3\", \"\");\n     txt \u003d txt + \"111111\" + \"1111\";\n     return txt.substring(0, 10);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7882213ce2fde3ef9b990c494f47aeae7b6f6946": {
      "type": "Ybodychange",
      "commitMessage": "Oops; use replaceAll, not replace - stop trying to optimize for ^\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/08, 1:40 AM",
      "commitName": "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "3/8/08, 1:30 AM",
      "commitNameOld": "751061272644721cd1f27fc6ca2ec3acef36bd47",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public String caverphone(String txt) {\n    if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n        return \"1111111111\";\n    }\n    txt \u003d txt.toLowerCase();\n    txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n    txt \u003d txt.replaceAll(\"e$\", \"\");\n    txt \u003d txt.replaceAll(\"^cough\", \"cou2f\");\n    txt \u003d txt.replaceAll(\"^rough\", \"rou2f\");\n    txt \u003d txt.replaceAll(\"^tough\", \"tou2f\");\n    txt \u003d txt.replaceAll(\"^enough\", \"enou2f\");\n    txt \u003d txt.replaceAll(\"^trough\", \"trou2f\");\n    txt \u003d txt.replaceAll(\"^gn\", \"2n\");\n    txt \u003d txt.replaceAll(\"^mb\", \"m2\");\n    txt \u003d txt.replaceAll(\"cq\", \"2q\");\n    txt \u003d txt.replaceAll(\"ci\", \"si\");\n    txt \u003d txt.replaceAll(\"ce\", \"se\");\n    txt \u003d txt.replaceAll(\"cy\", \"sy\");\n    txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n    txt \u003d txt.replaceAll(\"c\", \"k\");\n    txt \u003d txt.replaceAll(\"q\", \"k\");\n    txt \u003d txt.replaceAll(\"x\", \"k\");\n    txt \u003d txt.replaceAll(\"v\", \"f\");\n    txt \u003d txt.replaceAll(\"dg\", \"2g\");\n    txt \u003d txt.replaceAll(\"tio\", \"sio\");\n    txt \u003d txt.replaceAll(\"tia\", \"sia\");\n    txt \u003d txt.replaceAll(\"d\", \"t\");\n    txt \u003d txt.replaceAll(\"ph\", \"fh\");\n    txt \u003d txt.replaceAll(\"b\", \"p\");\n    txt \u003d txt.replaceAll(\"sh\", \"s2\");\n    txt \u003d txt.replaceAll(\"z\", \"s\");\n    txt \u003d txt.replaceAll(\"^[aeiou]\", \"A\");\n    txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n    txt \u003d txt.replaceAll(\"j\", \"y\");\n    txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n    txt \u003d txt.replaceAll(\"^y\", \"A\");\n    txt \u003d txt.replaceAll(\"y\", \"3\");\n    txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n    txt \u003d txt.replaceAll(\"gh\", \"22\");\n    txt \u003d txt.replaceAll(\"g\", \"k\");\n    txt \u003d txt.replaceAll(\"s+\", \"S\");\n    txt \u003d txt.replaceAll(\"t+\", \"T\");\n    txt \u003d txt.replaceAll(\"p+\", \"P\");\n    txt \u003d txt.replaceAll(\"k+\", \"K\");\n    txt \u003d txt.replaceAll(\"f+\", \"F\");\n    txt \u003d txt.replaceAll(\"m+\", \"M\");\n    txt \u003d txt.replaceAll(\"n+\", \"N\");\n    txt \u003d txt.replaceAll(\"w3\", \"W3\");\n    txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n    txt \u003d txt.replaceAll(\"w$\", \"3\");\n    txt \u003d txt.replaceAll(\"w\", \"2\");\n    txt \u003d txt.replaceAll(\"^h\", \"A\");\n    txt \u003d txt.replaceAll(\"h\", \"2\");\n    txt \u003d txt.replaceAll(\"r3\", \"R3\");\n    txt \u003d txt.replaceAll(\"r$\", \"3\");\n    txt \u003d txt.replaceAll(\"r\", \"2\");\n    txt \u003d txt.replaceAll(\"l3\", \"L3\");\n    txt \u003d txt.replaceAll(\"l$\", \"3\");\n    txt \u003d txt.replaceAll(\"l\", \"2\");\n    txt \u003d txt.replaceAll(\"2\", \"\");\n    txt \u003d txt.replaceAll(\"3$\", \"A\");\n    txt \u003d txt.replaceAll(\"3\", \"\");\n    txt \u003d txt + \"111111\" + \"1111\";\n    return txt.substring(0, 10);\n}",
      "path": "src/java/org/apache/commons/codec/language/Caverphone.java",
      "functionStartLine": 50,
      "functionName": "caverphone",
      "functionAnnotation": "",
      "functionDoc": "Find the caverphone value of a String.\n\n@param txt String to find the caverphone code for\n@return A caverphone code corresponding to the String supplied\n",
      "diff": "@@ -1,65 +1,65 @@\n public String caverphone(String txt) {\n     if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n         return \"1111111111\";\n     }\n     txt \u003d txt.toLowerCase();\n     txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n-    txt \u003d txt.replace(\"e$\", \"\");\n-    txt \u003d txt.replace(\"^cough\", \"cou2f\");\n-    txt \u003d txt.replace(\"^rough\", \"rou2f\");\n-    txt \u003d txt.replace(\"^tough\", \"tou2f\");\n-    txt \u003d txt.replace(\"^enough\", \"enou2f\");\n-    txt \u003d txt.replace(\"^trough\", \"trou2f\");\n-    txt \u003d txt.replace(\"^gn\", \"2n\");\n-    txt \u003d txt.replace(\"^mb\", \"m2\");\n+    txt \u003d txt.replaceAll(\"e$\", \"\");\n+    txt \u003d txt.replaceAll(\"^cough\", \"cou2f\");\n+    txt \u003d txt.replaceAll(\"^rough\", \"rou2f\");\n+    txt \u003d txt.replaceAll(\"^tough\", \"tou2f\");\n+    txt \u003d txt.replaceAll(\"^enough\", \"enou2f\");\n+    txt \u003d txt.replaceAll(\"^trough\", \"trou2f\");\n+    txt \u003d txt.replaceAll(\"^gn\", \"2n\");\n+    txt \u003d txt.replaceAll(\"^mb\", \"m2\");\n     txt \u003d txt.replaceAll(\"cq\", \"2q\");\n     txt \u003d txt.replaceAll(\"ci\", \"si\");\n     txt \u003d txt.replaceAll(\"ce\", \"se\");\n     txt \u003d txt.replaceAll(\"cy\", \"sy\");\n     txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n     txt \u003d txt.replaceAll(\"c\", \"k\");\n     txt \u003d txt.replaceAll(\"q\", \"k\");\n     txt \u003d txt.replaceAll(\"x\", \"k\");\n     txt \u003d txt.replaceAll(\"v\", \"f\");\n     txt \u003d txt.replaceAll(\"dg\", \"2g\");\n     txt \u003d txt.replaceAll(\"tio\", \"sio\");\n     txt \u003d txt.replaceAll(\"tia\", \"sia\");\n     txt \u003d txt.replaceAll(\"d\", \"t\");\n     txt \u003d txt.replaceAll(\"ph\", \"fh\");\n     txt \u003d txt.replaceAll(\"b\", \"p\");\n     txt \u003d txt.replaceAll(\"sh\", \"s2\");\n     txt \u003d txt.replaceAll(\"z\", \"s\");\n-    txt \u003d txt.replace(\"^[aeiou]\", \"A\");\n+    txt \u003d txt.replaceAll(\"^[aeiou]\", \"A\");\n     txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n     txt \u003d txt.replaceAll(\"j\", \"y\");\n     txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n     txt \u003d txt.replaceAll(\"^y\", \"A\");\n     txt \u003d txt.replaceAll(\"y\", \"3\");\n     txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n     txt \u003d txt.replaceAll(\"gh\", \"22\");\n     txt \u003d txt.replaceAll(\"g\", \"k\");\n     txt \u003d txt.replaceAll(\"s+\", \"S\");\n     txt \u003d txt.replaceAll(\"t+\", \"T\");\n     txt \u003d txt.replaceAll(\"p+\", \"P\");\n     txt \u003d txt.replaceAll(\"k+\", \"K\");\n     txt \u003d txt.replaceAll(\"f+\", \"F\");\n     txt \u003d txt.replaceAll(\"m+\", \"M\");\n     txt \u003d txt.replaceAll(\"n+\", \"N\");\n     txt \u003d txt.replaceAll(\"w3\", \"W3\");\n     txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n     txt \u003d txt.replaceAll(\"w$\", \"3\");\n     txt \u003d txt.replaceAll(\"w\", \"2\");\n-    txt \u003d txt.replace(\"^h\", \"A\");\n+    txt \u003d txt.replaceAll(\"^h\", \"A\");\n     txt \u003d txt.replaceAll(\"h\", \"2\");\n     txt \u003d txt.replaceAll(\"r3\", \"R3\");\n     txt \u003d txt.replaceAll(\"r$\", \"3\");\n     txt \u003d txt.replaceAll(\"r\", \"2\");\n     txt \u003d txt.replaceAll(\"l3\", \"L3\");\n     txt \u003d txt.replaceAll(\"l$\", \"3\");\n     txt \u003d txt.replaceAll(\"l\", \"2\");\n     txt \u003d txt.replaceAll(\"2\", \"\");\n     txt \u003d txt.replaceAll(\"3$\", \"A\");\n     txt \u003d txt.replaceAll(\"3\", \"\");\n     txt \u003d txt + \"111111\" + \"1111\";\n     return txt.substring(0, 10);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "66555de56715ccb185dee4dd2b25b1e93cc5c73e": {
      "type": "Yintroduced",
      "commitMessage": "Applying my second patch from CODEC-60; adding the Caverphone 2.0 algorithm\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634911 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/8/08, 1:00 AM",
      "commitName": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,65 @@\n+public String caverphone(String txt) {\n+    if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n+        return \"1111111111\";\n+    }\n+    txt \u003d txt.toLowerCase();\n+    txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n+    txt \u003d txt.replace(\"e$\", \"\");\n+    txt \u003d txt.replace(\"^cough\", \"cou2f\");\n+    txt \u003d txt.replace(\"^rough\", \"rou2f\");\n+    txt \u003d txt.replace(\"^tough\", \"tou2f\");\n+    txt \u003d txt.replace(\"^enough\", \"enou2f\");\n+    txt \u003d txt.replace(\"^trough\", \"trou2f\");\n+    txt \u003d txt.replace(\"^gn\", \"2n\");\n+    txt \u003d txt.replace(\"^mb\", \"m2\");\n+    txt \u003d txt.replaceAll(\"cq\", \"2q\");\n+    txt \u003d txt.replaceAll(\"ci\", \"si\");\n+    txt \u003d txt.replaceAll(\"ce\", \"se\");\n+    txt \u003d txt.replaceAll(\"cy\", \"sy\");\n+    txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n+    txt \u003d txt.replaceAll(\"c\", \"k\");\n+    txt \u003d txt.replaceAll(\"q\", \"k\");\n+    txt \u003d txt.replaceAll(\"x\", \"k\");\n+    txt \u003d txt.replaceAll(\"v\", \"f\");\n+    txt \u003d txt.replaceAll(\"dg\", \"2g\");\n+    txt \u003d txt.replaceAll(\"tio\", \"sio\");\n+    txt \u003d txt.replaceAll(\"tia\", \"sia\");\n+    txt \u003d txt.replaceAll(\"d\", \"t\");\n+    txt \u003d txt.replaceAll(\"ph\", \"fh\");\n+    txt \u003d txt.replaceAll(\"b\", \"p\");\n+    txt \u003d txt.replaceAll(\"sh\", \"s2\");\n+    txt \u003d txt.replaceAll(\"z\", \"s\");\n+    txt \u003d txt.replace(\"^[aeiou]\", \"A\");\n+    txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n+    txt \u003d txt.replaceAll(\"j\", \"y\");\n+    txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n+    txt \u003d txt.replaceAll(\"^y\", \"A\");\n+    txt \u003d txt.replaceAll(\"y\", \"3\");\n+    txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n+    txt \u003d txt.replaceAll(\"gh\", \"22\");\n+    txt \u003d txt.replaceAll(\"g\", \"k\");\n+    txt \u003d txt.replaceAll(\"s+\", \"S\");\n+    txt \u003d txt.replaceAll(\"t+\", \"T\");\n+    txt \u003d txt.replaceAll(\"p+\", \"P\");\n+    txt \u003d txt.replaceAll(\"k+\", \"K\");\n+    txt \u003d txt.replaceAll(\"f+\", \"F\");\n+    txt \u003d txt.replaceAll(\"m+\", \"M\");\n+    txt \u003d txt.replaceAll(\"n+\", \"N\");\n+    txt \u003d txt.replaceAll(\"w3\", \"W3\");\n+    txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n+    txt \u003d txt.replaceAll(\"w$\", \"3\");\n+    txt \u003d txt.replaceAll(\"w\", \"2\");\n+    txt \u003d txt.replace(\"^h\", \"A\");\n+    txt \u003d txt.replaceAll(\"h\", \"2\");\n+    txt \u003d txt.replaceAll(\"r3\", \"R3\");\n+    txt \u003d txt.replaceAll(\"r$\", \"3\");\n+    txt \u003d txt.replaceAll(\"r\", \"2\");\n+    txt \u003d txt.replaceAll(\"l3\", \"L3\");\n+    txt \u003d txt.replaceAll(\"l$\", \"3\");\n+    txt \u003d txt.replaceAll(\"l\", \"2\");\n+    txt \u003d txt.replaceAll(\"2\", \"\");\n+    txt \u003d txt.replaceAll(\"3$\", \"A\");\n+    txt \u003d txt.replaceAll(\"3\", \"\");\n+    txt \u003d txt + \"111111\" + \"1111\";\n+    return txt.substring(0, 10);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public String caverphone(String txt) {\n    if (txt \u003d\u003d null || txt.length() \u003d\u003d 0) {\n        return \"1111111111\";\n    }\n    txt \u003d txt.toLowerCase();\n    txt \u003d txt.replaceAll(\"[^a-z]\", \"\");\n    txt \u003d txt.replace(\"e$\", \"\");\n    txt \u003d txt.replace(\"^cough\", \"cou2f\");\n    txt \u003d txt.replace(\"^rough\", \"rou2f\");\n    txt \u003d txt.replace(\"^tough\", \"tou2f\");\n    txt \u003d txt.replace(\"^enough\", \"enou2f\");\n    txt \u003d txt.replace(\"^trough\", \"trou2f\");\n    txt \u003d txt.replace(\"^gn\", \"2n\");\n    txt \u003d txt.replace(\"^mb\", \"m2\");\n    txt \u003d txt.replaceAll(\"cq\", \"2q\");\n    txt \u003d txt.replaceAll(\"ci\", \"si\");\n    txt \u003d txt.replaceAll(\"ce\", \"se\");\n    txt \u003d txt.replaceAll(\"cy\", \"sy\");\n    txt \u003d txt.replaceAll(\"tch\", \"2ch\");\n    txt \u003d txt.replaceAll(\"c\", \"k\");\n    txt \u003d txt.replaceAll(\"q\", \"k\");\n    txt \u003d txt.replaceAll(\"x\", \"k\");\n    txt \u003d txt.replaceAll(\"v\", \"f\");\n    txt \u003d txt.replaceAll(\"dg\", \"2g\");\n    txt \u003d txt.replaceAll(\"tio\", \"sio\");\n    txt \u003d txt.replaceAll(\"tia\", \"sia\");\n    txt \u003d txt.replaceAll(\"d\", \"t\");\n    txt \u003d txt.replaceAll(\"ph\", \"fh\");\n    txt \u003d txt.replaceAll(\"b\", \"p\");\n    txt \u003d txt.replaceAll(\"sh\", \"s2\");\n    txt \u003d txt.replaceAll(\"z\", \"s\");\n    txt \u003d txt.replace(\"^[aeiou]\", \"A\");\n    txt \u003d txt.replaceAll(\"[aeiou]\", \"3\");\n    txt \u003d txt.replaceAll(\"j\", \"y\");\n    txt \u003d txt.replaceAll(\"^y3\", \"Y3\");\n    txt \u003d txt.replaceAll(\"^y\", \"A\");\n    txt \u003d txt.replaceAll(\"y\", \"3\");\n    txt \u003d txt.replaceAll(\"3gh3\", \"3kh3\");\n    txt \u003d txt.replaceAll(\"gh\", \"22\");\n    txt \u003d txt.replaceAll(\"g\", \"k\");\n    txt \u003d txt.replaceAll(\"s+\", \"S\");\n    txt \u003d txt.replaceAll(\"t+\", \"T\");\n    txt \u003d txt.replaceAll(\"p+\", \"P\");\n    txt \u003d txt.replaceAll(\"k+\", \"K\");\n    txt \u003d txt.replaceAll(\"f+\", \"F\");\n    txt \u003d txt.replaceAll(\"m+\", \"M\");\n    txt \u003d txt.replaceAll(\"n+\", \"N\");\n    txt \u003d txt.replaceAll(\"w3\", \"W3\");\n    txt \u003d txt.replaceAll(\"wh3\", \"Wh3\");\n    txt \u003d txt.replaceAll(\"w$\", \"3\");\n    txt \u003d txt.replaceAll(\"w\", \"2\");\n    txt \u003d txt.replace(\"^h\", \"A\");\n    txt \u003d txt.replaceAll(\"h\", \"2\");\n    txt \u003d txt.replaceAll(\"r3\", \"R3\");\n    txt \u003d txt.replaceAll(\"r$\", \"3\");\n    txt \u003d txt.replaceAll(\"r\", \"2\");\n    txt \u003d txt.replaceAll(\"l3\", \"L3\");\n    txt \u003d txt.replaceAll(\"l$\", \"3\");\n    txt \u003d txt.replaceAll(\"l\", \"2\");\n    txt \u003d txt.replaceAll(\"2\", \"\");\n    txt \u003d txt.replaceAll(\"3$\", \"A\");\n    txt \u003d txt.replaceAll(\"3\", \"\");\n    txt \u003d txt + \"111111\" + \"1111\";\n    return txt.substring(0, 10);\n}",
      "path": "src/java/org/apache/commons/codec/language/Caverphone.java",
      "functionStartLine": 50,
      "functionName": "caverphone",
      "functionAnnotation": "",
      "functionDoc": "Find the caverphone value of a String.\n\n@param txt String to find the caverphone code for\n@return A caverphone code corresponding to the String supplied\n"
    }
  }
}