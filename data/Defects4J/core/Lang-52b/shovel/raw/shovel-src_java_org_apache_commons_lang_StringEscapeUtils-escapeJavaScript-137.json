{
  "origin": "codeshovel",
  "repositoryName": "Lang-52b",
  "repositoryPath": "/tmp/Lang-52b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringEscapeUtils.java",
  "functionName": "escapeJavaScript",
  "functionId": "escapeJavaScript___out-Writer__str-String",
  "sourceFilePath": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on underlying Writer\n",
  "functionStartLine": 137,
  "functionEndLine": 139,
  "numCommitsSeen": 49,
  "timeTaken": 1579,
  "changeHistory": [
    "5c89ea5c8f8a5110b575f0b8dd511b6aecd19359",
    "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc",
    "043babf502ddf5a8fa731cb6b3a56814c14952a1",
    "cac97555b1af54b2e8d8390c2ccc8621b36928cf",
    "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4"
  ],
  "changeHistoryShort": {
    "5c89ea5c8f8a5110b575f0b8dd511b6aecd19359": "Ydocchange",
    "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc": "Ydocchange",
    "043babf502ddf5a8fa731cb6b3a56814c14952a1": "Ydocchange",
    "cac97555b1af54b2e8d8390c2ccc8621b36928cf": "Ydocchange",
    "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c89ea5c8f8a5110b575f0b8dd511b6aecd19359": {
      "type": "Ydocchange",
      "commitMessage": "Fixed typos in javadoc and some inline comments.\nPr #22908.\nPatch submitted by Janek Bogucki.\nReviewed by Phil Steitz.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/7/03, 7:32 AM",
      "commitName": "5c89ea5c8f8a5110b575f0b8dd511b6aecd19359",
      "commitAuthor": "Phil Steitz",
      "commitDateOld": "8/17/03, 7:22 PM",
      "commitNameOld": "d643ab9ff3728a441e74e3dc8c8fb0fa57a567f0",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 20.51,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void escapeJavaScript(Writer out, String str) throws IOException {\n    escapeJavaStyleString(out, str, true);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 174,
      "functionName": "escapeJavaScript",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on underlying Writer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
        "newValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on underlying Writer\n"
      }
    },
    "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc": {
      "type": "Ydocchange",
      "commitMessage": "Update null behaviour for consistency and clarity\nDoument null behaviour\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137458 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/19/03, 1:22 PM",
      "commitName": "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc",
      "commitAuthor": "Stephen Colebourne",
      "commitDateOld": "7/7/03, 10:59 PM",
      "commitNameOld": "043babf502ddf5a8fa731cb6b3a56814c14952a1",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 11.6,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void escapeJavaScript(Writer out, String str) throws IOException {\n    escapeJavaStyleString(out, str, true);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 175,
      "functionName": "escapeJavaScript",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
        "newValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA \u003ccode\u003enull\u003c/code\u003e string input has no effect.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in, may be null\n@throws IllegalArgumentException if the Writer is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n"
      }
    },
    "043babf502ddf5a8fa731cb6b3a56814c14952a1": {
      "type": "Ydocchange",
      "commitMessage": "Great set of javadoc improvements from Fredrik.\nAlso an optimisation to StringUtils.leftPad/rightPad.\nSubmitted by: Fredrik Westermarck\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137402 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/7/03, 10:59 PM",
      "commitName": "043babf502ddf5a8fa731cb6b3a56814c14952a1",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/5/03, 4:37 PM",
      "commitNameOld": "48801ed820438da8eb9553e90364c178242a2906",
      "commitAuthorOld": "Alex Chaffee",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void escapeJavaScript(Writer out, String str) throws IOException {\n    escapeJavaStyleString(out, str, true);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 176,
      "functionName": "escapeJavaScript",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules to a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
        "newValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules\nto a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n"
      }
    },
    "cac97555b1af54b2e8d8390c2ccc8621b36928cf": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc only. Provide more uniform comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137318 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/16/03, 12:00 PM",
      "commitName": "cac97555b1af54b2e8d8390c2ccc8621b36928cf",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "4/16/03, 9:31 AM",
      "commitNameOld": "549d0da83b55b21efaee2edfbf55a486e329a845",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 30.1,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void escapeJavaScript(Writer out, String str) throws IOException {\n    escapeJavaStyleString(out, str, true);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 173,
      "functionName": "escapeJavaScript",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules to a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n",
        "newValue": "\u003cp\u003eEscapes the characters in a \u003ccode\u003eString\u003c/code\u003e using JavaScript String rules to a \u003ccode\u003eWriter\u003c/code\u003e.\u003c/p\u003e\n\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n"
      }
    },
    "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4": {
      "type": "Yintroduced",
      "commitMessage": "StringEscapeUtils: escape/unescape Java/JavaScript/HTML\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/30/03, 7:53 PM",
      "commitName": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
      "commitAuthor": "Alex Chaffee",
      "diff": "@@ -0,0 +1,3 @@\n+public static void escapeJavaScript(Writer out, String str) throws IOException {\n+    escapeJavaStyleString(out, str, true);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static void escapeJavaScript(Writer out, String str) throws IOException {\n    escapeJavaStyleString(out, str, true);\n}",
      "path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
      "functionStartLine": 166,
      "functionName": "escapeJavaScript",
      "functionAnnotation": "",
      "functionDoc": "\n@see #escapeJavaScript(java.lang.String)\n@param out Writer to write escaped string into\n@param str String to escape values in\n@throws NullPointerException if str is \u003ccode\u003enull\u003c/code\u003e\n@throws IOException if error occurs on undelying Writer\n"
    }
  }
}