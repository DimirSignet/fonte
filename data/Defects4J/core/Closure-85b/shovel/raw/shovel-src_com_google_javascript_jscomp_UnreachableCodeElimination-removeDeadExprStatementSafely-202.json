{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnreachableCodeElimination.java",
  "functionName": "removeDeadExprStatementSafely",
  "functionId": "removeDeadExprStatementSafely___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 202,
  "functionEndLine": 238,
  "numCommitsSeen": 18,
  "timeTaken": 576,
  "changeHistory": [
    "c1971584101865a747d5d1e25ef0c0193135957f",
    "2581851be3b2202bd48d4c76889b020f4cecebf6",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "c1971584101865a747d5d1e25ef0c0193135957f": "Ybodychange",
    "2581851be3b2202bd48d4c76889b020f4cecebf6": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c1971584101865a747d5d1e25ef0c0193135957f": {
      "type": "Ybodychange",
      "commitMessage": "\nUpdate NodeUtil.removeChild to only safe handle try/catch/finally nodes. Update UnreachableCodeElminination to reflect the changes and removed\npeephole removal of unneeded TRY/FINALLY statements as that is now handled by\nthe PeepholeRemoveDeadCode pass.\n\nR\u003dnicksantos\nDELTA\u003d154  (88 added, 33 deleted, 33 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d219\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@670 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/6/11, 5:19 PM",
      "commitName": "c1971584101865a747d5d1e25ef0c0193135957f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/3/10, 2:10 PM",
      "commitNameOld": "3c5a6f6a1b87c655c5eb3ed0ebcfce886ab6a614",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 34.13,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "actualSource": "private void removeDeadExprStatementSafely(Node n) {\n    Node parent \u003d n.getParent();\n    if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n        return;\n    }\n    switch(n.getType()) {\n        case Token.DO:\n            return;\n        case Token.BLOCK:\n            if (parent.getType() \u003d\u003d Token.TRY) {\n                if (NodeUtil.isTryCatchNodeContainer(n)) {\n                    return;\n                }\n            }\n            break;\n        case Token.CATCH:\n            Node tryNode \u003d parent.getParent();\n            NodeUtil.maybeAddFinally(tryNode);\n            break;\n    }\n    NodeUtil.redeclareVarsInsideBranch(n);\n    compiler.reportCodeChange();\n    if (logger.isLoggable(Level.FINE)) {\n        logger.fine(\"Removing \" + n.toString());\n    }\n    NodeUtil.removeChild(n.getParent(), n);\n}",
      "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
      "functionStartLine": 202,
      "functionName": "removeDeadExprStatementSafely",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,27 @@\n private void removeDeadExprStatementSafely(Node n) {\n+    Node parent \u003d n.getParent();\n     if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n         return;\n     }\n     switch(n.getType()) {\n         case Token.DO:\n-        case Token.TRY:\n-        case Token.CATCH:\n-        case Token.FINALLY:\n             return;\n+        case Token.BLOCK:\n+            if (parent.getType() \u003d\u003d Token.TRY) {\n+                if (NodeUtil.isTryCatchNodeContainer(n)) {\n+                    return;\n+                }\n+            }\n+            break;\n+        case Token.CATCH:\n+            Node tryNode \u003d parent.getParent();\n+            NodeUtil.maybeAddFinally(tryNode);\n+            break;\n     }\n     NodeUtil.redeclareVarsInsideBranch(n);\n     compiler.reportCodeChange();\n     if (logger.isLoggable(Level.FINE)) {\n         logger.fine(\"Removing \" + n.toString());\n     }\n     NodeUtil.removeChild(n.getParent(), n);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2581851be3b2202bd48d4c76889b020f4cecebf6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nRemove more unconditional jumps.\n\nR\u003djohnlenz\nDELTA\u003d94  (74 added, 4 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d85018\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@342 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/5/10, 6:06 PM",
      "commitName": "2581851be3b2202bd48d4c76889b020f4cecebf6",
      "commitAuthor": "acleung@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nRemove more unconditional jumps.\n\nR\u003djohnlenz\nDELTA\u003d94  (74 added, 4 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d85018\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@342 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/5/10, 6:06 PM",
          "commitName": "2581851be3b2202bd48d4c76889b020f4cecebf6",
          "commitAuthor": "acleung@google.com",
          "commitDateOld": "8/4/10, 5:53 PM",
          "commitNameOld": "0a39688562637465944df3c29ae0c1259cc0a4dc",
          "commitAuthorOld": "acleung@google.com",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeDeadExprStatementSafely(Node n) {\n    if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n        return;\n    }\n    switch(n.getType()) {\n        case Token.DO:\n        case Token.TRY:\n        case Token.CATCH:\n        case Token.FINALLY:\n            return;\n    }\n    NodeUtil.redeclareVarsInsideBranch(n);\n    compiler.reportCodeChange();\n    if (logger.isLoggable(Level.FINE)) {\n        logger.fine(\"Removing \" + n.toString());\n    }\n    NodeUtil.removeChild(n.getParent(), n);\n}",
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
          "functionStartLine": 219,
          "functionName": "removeDeadExprStatementSafely",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,18 @@\n-private void removeDeadExprStatementSafely(Node n, Node parent) {\n+private void removeDeadExprStatementSafely(Node n) {\n     if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n         return;\n     }\n     switch(n.getType()) {\n         case Token.DO:\n         case Token.TRY:\n         case Token.CATCH:\n         case Token.FINALLY:\n             return;\n     }\n     NodeUtil.redeclareVarsInsideBranch(n);\n     compiler.reportCodeChange();\n     if (logger.isLoggable(Level.FINE)) {\n         logger.fine(\"Removing \" + n.toString());\n     }\n-    NodeUtil.removeChild(parent, n);\n+    NodeUtil.removeChild(n.getParent(), n);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[n-Node, parent-Node]",
            "newValue": "[n-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nRemove more unconditional jumps.\n\nR\u003djohnlenz\nDELTA\u003d94  (74 added, 4 deleted, 16 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d85018\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@342 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "8/5/10, 6:06 PM",
          "commitName": "2581851be3b2202bd48d4c76889b020f4cecebf6",
          "commitAuthor": "acleung@google.com",
          "commitDateOld": "8/4/10, 5:53 PM",
          "commitNameOld": "0a39688562637465944df3c29ae0c1259cc0a4dc",
          "commitAuthorOld": "acleung@google.com",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "actualSource": "private void removeDeadExprStatementSafely(Node n) {\n    if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n        return;\n    }\n    switch(n.getType()) {\n        case Token.DO:\n        case Token.TRY:\n        case Token.CATCH:\n        case Token.FINALLY:\n            return;\n    }\n    NodeUtil.redeclareVarsInsideBranch(n);\n    compiler.reportCodeChange();\n    if (logger.isLoggable(Level.FINE)) {\n        logger.fine(\"Removing \" + n.toString());\n    }\n    NodeUtil.removeChild(n.getParent(), n);\n}",
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
          "functionStartLine": 219,
          "functionName": "removeDeadExprStatementSafely",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,18 +1,18 @@\n-private void removeDeadExprStatementSafely(Node n, Node parent) {\n+private void removeDeadExprStatementSafely(Node n) {\n     if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n         return;\n     }\n     switch(n.getType()) {\n         case Token.DO:\n         case Token.TRY:\n         case Token.CATCH:\n         case Token.FINALLY:\n             return;\n     }\n     NodeUtil.redeclareVarsInsideBranch(n);\n     compiler.reportCodeChange();\n     if (logger.isLoggable(Level.FINE)) {\n         logger.fine(\"Removing \" + n.toString());\n     }\n-    NodeUtil.removeChild(parent, n);\n+    NodeUtil.removeChild(n.getParent(), n);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+private void removeDeadExprStatementSafely(Node n, Node parent) {\n+    if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n+        return;\n+    }\n+    switch(n.getType()) {\n+        case Token.DO:\n+        case Token.TRY:\n+        case Token.CATCH:\n+        case Token.FINALLY:\n+            return;\n+    }\n+    NodeUtil.redeclareVarsInsideBranch(n);\n+    compiler.reportCodeChange();\n+    if (logger.isLoggable(Level.FINE)) {\n+        logger.fine(\"Removing \" + n.toString());\n+    }\n+    NodeUtil.removeChild(parent, n);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void removeDeadExprStatementSafely(Node n, Node parent) {\n    if (n.getType() \u003d\u003d Token.EMPTY || (n.getType() \u003d\u003d Token.BLOCK \u0026\u0026 !n.hasChildren())) {\n        return;\n    }\n    switch(n.getType()) {\n        case Token.DO:\n        case Token.TRY:\n        case Token.CATCH:\n        case Token.FINALLY:\n            return;\n    }\n    NodeUtil.redeclareVarsInsideBranch(n);\n    compiler.reportCodeChange();\n    if (logger.isLoggable(Level.FINE)) {\n        logger.fine(\"Removing \" + n.toString());\n    }\n    NodeUtil.removeChild(parent, n);\n}",
      "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
      "functionStartLine": 120,
      "functionName": "removeDeadExprStatementSafely",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}