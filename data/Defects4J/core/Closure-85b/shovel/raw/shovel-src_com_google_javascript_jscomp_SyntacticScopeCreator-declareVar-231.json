{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SyntacticScopeCreator.java",
  "functionName": "declareVar",
  "functionId": "declareVar___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
  "functionAnnotation": "",
  "functionDoc": "Declares a variable.\n\n@param n The node corresponding to the variable name.\n@param declaredType The variable\u0027s type, according to JSDoc\n",
  "functionStartLine": 231,
  "functionEndLine": 243,
  "numCommitsSeen": 25,
  "timeTaken": 925,
  "changeHistory": [
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
    "d48c365ba8251057a71a2e2b7aabff640209e31b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "d48c365ba8251057a71a2e2b7aabff640209e31b": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/9/10, 12:58 PM",
      "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/9/10, 12:58 PM",
          "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 27.64,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "actualSource": "private void declareVar(Node n) {\n    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n    CompilerInput input \u003d compiler.getInput(sourceName);\n    String name \u003d n.getString();\n    if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n        redeclarationHandler.onRedeclaration(scope, name, n, input);\n    } else {\n        scope.declare(name, n, null, input);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
          "functionStartLine": 231,
          "functionName": "declareVar",
          "functionAnnotation": "",
          "functionDoc": "Declares a variable.\n\n@param n The node corresponding to the variable name.\n@param declaredType The variable\u0027s type, according to JSDoc\n",
          "diff": "@@ -1,7 +1,10 @@\n-private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n+private void declareVar(Node n) {\n+    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n+    CompilerInput input \u003d compiler.getInput(sourceName);\n+    String name \u003d n.getString();\n     if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n-        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n+        redeclarationHandler.onRedeclaration(scope, name, n, input);\n     } else {\n-        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n+        scope.declare(name, n, null, input);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[name-String, n-Node, parent-Node, gramps-Node, declaredType-JSType, nodeWithLineNumber-Node]",
            "newValue": "[n-Node]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/9/10, 12:58 PM",
          "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 27.64,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "actualSource": "private void declareVar(Node n) {\n    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n    CompilerInput input \u003d compiler.getInput(sourceName);\n    String name \u003d n.getString();\n    if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n        redeclarationHandler.onRedeclaration(scope, name, n, input);\n    } else {\n        scope.declare(name, n, null, input);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
          "functionStartLine": 231,
          "functionName": "declareVar",
          "functionAnnotation": "",
          "functionDoc": "Declares a variable.\n\n@param n The node corresponding to the variable name.\n@param declaredType The variable\u0027s type, according to JSDoc\n",
          "diff": "@@ -1,7 +1,10 @@\n-private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n+private void declareVar(Node n) {\n+    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n+    CompilerInput input \u003d compiler.getInput(sourceName);\n+    String name \u003d n.getString();\n     if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n-        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n+        redeclarationHandler.onRedeclaration(scope, name, n, input);\n     } else {\n-        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n+        scope.declare(name, n, null, input);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nIf a variable is doubly declared in externs and sources,\nwe should keep around both VAR keywords.\nFixes issue 290\n\nR\u003djohnlenz\nDELTA\u003d93  (45 added, 19 deleted, 29 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d107\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@614 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "12/9/10, 12:58 PM",
          "commitName": "86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "11/11/10, 9:42 PM",
          "commitNameOld": "df223efd38c514d584f00d076488ab9a02011492",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 27.64,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "actualSource": "private void declareVar(Node n) {\n    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n    CompilerInput input \u003d compiler.getInput(sourceName);\n    String name \u003d n.getString();\n    if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n        redeclarationHandler.onRedeclaration(scope, name, n, input);\n    } else {\n        scope.declare(name, n, null, input);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
          "functionStartLine": 231,
          "functionName": "declareVar",
          "functionAnnotation": "",
          "functionDoc": "Declares a variable.\n\n@param n The node corresponding to the variable name.\n@param declaredType The variable\u0027s type, according to JSDoc\n",
          "diff": "@@ -1,7 +1,10 @@\n-private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n+private void declareVar(Node n) {\n+    Preconditions.checkState(n.getType() \u003d\u003d Token.NAME);\n+    CompilerInput input \u003d compiler.getInput(sourceName);\n+    String name \u003d n.getString();\n     if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n-        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n+        redeclarationHandler.onRedeclaration(scope, name, n, input);\n     } else {\n-        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n+        scope.declare(name, n, null, input);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Declares a variable.\n\n@param name The variable name\n@param n The node corresponding to the variable name (usually a NAME node)\n@param parent The parent node of {@code n}\n@param gramps The parent node of {@code parent}\n@param declaredType The variable\u0027s type, according to JSDoc\n@param nodeWithLineNumber The node to use to access the line number of\n    the variable declaration, if needed\n",
            "newValue": "Declares a variable.\n\n@param n The node corresponding to the variable name.\n@param declaredType The variable\u0027s type, according to JSDoc\n"
          }
        }
      ]
    },
    "d48c365ba8251057a71a2e2b7aabff640209e31b": {
      "type": "Ybodychange",
      "commitMessage": "\"var arguments\" never shadows the built-in arguments array. Fixes issue 115.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@117 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/26/10, 7:11 AM",
      "commitName": "d48c365ba8251057a71a2e2b7aabff640209e31b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/19/09, 1:23 PM",
      "commitNameOld": "6a6ea480bae01f40f9795218ac911bb7de18d34a",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 98.74,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n    if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n    } else {\n        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 230,
      "functionName": "declareVar",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name The variable name\n@param n The node corresponding to the variable name (usually a NAME node)\n@param parent The parent node of {@code n}\n@param gramps The parent node of {@code parent}\n@param declaredType The variable\u0027s type, according to JSDoc\n@param nodeWithLineNumber The node to use to access the line number of\n    the variable declaration, if needed\n",
      "diff": "@@ -1,7 +1,7 @@\n private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n-    if (scope.isDeclared(name, false)) {\n+    if (scope.isDeclared(name, false) || (scope.isLocal() \u0026\u0026 name.equals(ARGUMENTS))) {\n         redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n     } else {\n         scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n+    if (scope.isDeclared(name, false)) {\n+        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n+    } else {\n+        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void declareVar(String name, Node n, Node parent, Node gramps, JSType declaredType, Node nodeWithLineNumber) {\n    if (scope.isDeclared(name, false)) {\n        redeclarationHandler.onRedeclaration(scope, name, n, parent, gramps, nodeWithLineNumber);\n    } else {\n        scope.declare(name, n, declaredType, compiler.getInput(sourceName));\n    }\n}",
      "path": "src/com/google/javascript/jscomp/SyntacticScopeCreator.java",
      "functionStartLine": 228,
      "functionName": "declareVar",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name The variable name\n@param n The node corresponding to the variable name (usually a NAME node)\n@param parent The parent node of {@code n}\n@param gramps The parent node of {@code parent}\n@param declaredType The variable\u0027s type, according to JSDoc\n@param nodeWithLineNumber The node to use to access the line number of\n    the variable declaration, if needed\n"
    }
  }
}