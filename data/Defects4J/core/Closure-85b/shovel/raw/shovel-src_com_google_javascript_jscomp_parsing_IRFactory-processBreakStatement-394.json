{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "processBreakStatement",
  "functionId": "$processBreakStatement___statementNode-BreakStatement",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 394,
  "functionEndLine": 403,
  "numCommitsSeen": 28,
  "timeTaken": 2552,
  "changeHistory": [
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
    "222eafd303155b3eac5cd244584b2cb3c4c11975",
    "f01925cbf7a39a885e51865208368e861d25a0c1",
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": "Ybodychange",
    "222eafd303155b3eac5cd244584b2cb3c4c11975": "Ybodychange",
    "f01925cbf7a39a885e51865208368e861d25a0c1": "Ybodychange",
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/02 17:44:46 by nicksantos\n\n        fix RAI when comparing two types that are always equal.\n        Fixes issue 172\n\n        R\u003dacleung\n        DELTA\u003d20  (19 added, 0 deleted, 1 changed)\n\nChange on 2010/07/03 08:52:08 by johnlenz\n\n        Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.\n\n        R\u003dacleung\n        DELTA\u003d30  (0 added, 2 deleted, 28 changed)\n\nChange on 2010/07/07 11:56:02 by johnlenz\n\n        Reduce the memory cost of generating source maps by reducing the number\n        of property structure objects that are created.  We do this by taking\n        advantage of the fact the property list objects are immutable and can be\n        shared between Nodes.  The source file prop is then shared between\n        every Node in the AST for a given source file, reducing the the number\n        of property nodes used to store this information from O(ast-nodes) to\n        O(source-files).\n\n        R\u003dbowdidge\n        DELTA\u003d122  (68 added, 1 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/7/10, 3:14 PM",
      "commitName": "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/29/10, 2:10 PM",
      "commitNameOld": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processBreakStatement(BreakStatement statementNode) {\n    Node node \u003d newNode(Token.BREAK);\n    if (statementNode.getBreakLabel() !\u003d null) {\n        Node labelName \u003d transform(statementNode.getBreakLabel());\n        labelName.setType(Token.LABEL_NAME);\n        node.addChildToBack(labelName);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 415,
      "functionName": "processBreakStatement",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n @Override\n Node processBreakStatement(BreakStatement statementNode) {\n-    Node node \u003d new Node(Token.BREAK);\n+    Node node \u003d newNode(Token.BREAK);\n     if (statementNode.getBreakLabel() !\u003d null) {\n         Node labelName \u003d transform(statementNode.getBreakLabel());\n         labelName.setType(Token.LABEL_NAME);\n         node.addChildToBack(labelName);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "222eafd303155b3eac5cd244584b2cb3c4c11975": {
      "type": "Ybodychange",
      "commitMessage": "tighten up some types. (Nick)\nR\u003dalan\nDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves the correctness of the compiler as many passes don\u0027t distinguish between label names and variable names appropriately. (John)\nR\u003drobert\n\nRemove now unneeded checks for label names when inspecting NAME nodes. (John)\nR\u003drobert\n\nTweak code generator to break after blocks for better pretty printing. (John)\nR\u003drobert\nDELTA\u003d196  (160 added, 0 deleted, 36 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dktmses\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@170 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 12:30 PM",
      "commitName": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/1/10, 7:32 PM",
      "commitNameOld": "f01925cbf7a39a885e51865208368e861d25a0c1",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 3.71,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processBreakStatement(BreakStatement statementNode) {\n    Node node \u003d new Node(Token.BREAK);\n    if (statementNode.getBreakLabel() !\u003d null) {\n        Node labelName \u003d transform(statementNode.getBreakLabel());\n        labelName.setType(Token.LABEL_NAME);\n        node.addChildToBack(labelName);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 412,
      "functionName": "processBreakStatement",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,10 @@\n @Override\n Node processBreakStatement(BreakStatement statementNode) {\n     Node node \u003d new Node(Token.BREAK);\n     if (statementNode.getBreakLabel() !\u003d null) {\n-        node.addChildToBack(transform(statementNode.getBreakLabel()));\n+        Node labelName \u003d transform(statementNode.getBreakLabel());\n+        labelName.setType(Token.LABEL_NAME);\n+        node.addChildToBack(labelName);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f01925cbf7a39a885e51865208368e861d25a0c1": {
      "type": "Ybodychange",
      "commitMessage": "Tests for deps generation (Nick)\nR\u003dandrew\n\nFix for decomposing assignment-ops. (john)\nR\u003dalan\nDELTA\u003d159  (127 added, 21 deleted, 11 changed)\n\nRemove unneeded imports. (John)\nR\u003drobert\nDELTA\u003d2  (0 added, 2 deleted, 0 changed)\n\nAutomated rollback of:\nRemove now unneeded checks for label names when inspecting NAME nodes. (Robert)\nR\u003dAlan\nDELTA\u003d6  (4 added, 0 deleted, 2 changed)\n\nAutomated rollback of:\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves the correctness of the compiler as many passes don\u0027t distinguish between label names and variable names appropriately. (Robert)\nR\u003dAlan\nDELTA\u003d57  (12 added, 29 deleted, 16 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dgydkaf\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@167 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/1/10, 7:32 PM",
      "commitName": "f01925cbf7a39a885e51865208368e861d25a0c1",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/30/10, 9:01 PM",
      "commitNameOld": "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processBreakStatement(BreakStatement statementNode) {\n    Node node \u003d new Node(Token.BREAK);\n    if (statementNode.getBreakLabel() !\u003d null) {\n        node.addChildToBack(transform(statementNode.getBreakLabel()));\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 412,
      "functionName": "processBreakStatement",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,8 @@\n @Override\n Node processBreakStatement(BreakStatement statementNode) {\n     Node node \u003d new Node(Token.BREAK);\n     if (statementNode.getBreakLabel() !\u003d null) {\n-        Node labelName \u003d transform(statementNode.getBreakLabel());\n-        labelName.setType(Token.LABEL_NAME);\n-        node.addChildToBack(labelName);\n+        node.addChildToBack(transform(statementNode.getBreakLabel()));\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7": {
      "type": "Ybodychange",
      "commitMessage": "Refactor how coding conventions are set (Nick)\nR\u003dalan\n\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves\nthe correctness of the compiler as many passes don\u0027t distinguish\nbetween label names and variable names appropriately. (John)\nR\u003drobert\nDELTA\u003d57  (29 added, 12 deleted, 16 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@163 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/30/10, 9:01 PM",
      "commitName": "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/26/10, 11:52 AM",
      "commitNameOld": "458118289064379bc22acfc7fd991686a4b062f1",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 4.38,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processBreakStatement(BreakStatement statementNode) {\n    Node node \u003d new Node(Token.BREAK);\n    if (statementNode.getBreakLabel() !\u003d null) {\n        Node labelName \u003d transform(statementNode.getBreakLabel());\n        labelName.setType(Token.LABEL_NAME);\n        node.addChildToBack(labelName);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 412,
      "functionName": "processBreakStatement",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,10 @@\n @Override\n Node processBreakStatement(BreakStatement statementNode) {\n     Node node \u003d new Node(Token.BREAK);\n     if (statementNode.getBreakLabel() !\u003d null) {\n-        node.addChildToBack(transform(statementNode.getBreakLabel()));\n+        Node labelName \u003d transform(statementNode.getBreakLabel());\n+        labelName.setType(Token.LABEL_NAME);\n+        node.addChildToBack(labelName);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,8 @@\n+@Override\n+Node processBreakStatement(BreakStatement statementNode) {\n+    Node node \u003d new Node(Token.BREAK);\n+    if (statementNode.getBreakLabel() !\u003d null) {\n+        node.addChildToBack(transform(statementNode.getBreakLabel()));\n+    }\n+    return node;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nNode processBreakStatement(BreakStatement statementNode) {\n    Node node \u003d new Node(Token.BREAK);\n    if (statementNode.getBreakLabel() !\u003d null) {\n        node.addChildToBack(transform(statementNode.getBreakLabel()));\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 375,
      "functionName": "processBreakStatement",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}