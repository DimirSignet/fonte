{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "getConditionExpression",
  "functionId": "getConditionExpression___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Gets the condition of an ON_TRUE / ON_FALSE CFG edge.\n\n@param n a node with an outgoing conditional CFG edge\n@return the condition node or null if the condition is not obviously a node\n",
  "functionStartLine": 1302,
  "functionEndLine": 1321,
  "numCommitsSeen": 62,
  "timeTaken": 4404,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,20 @@\n+static Node getConditionExpression(Node n) {\n+    switch(n.getType()) {\n+        case Token.IF:\n+        case Token.WHILE:\n+            return n.getFirstChild();\n+        case Token.DO:\n+            return n.getLastChild();\n+        case Token.FOR:\n+            switch(n.getChildCount()) {\n+                case 3:\n+                    return null;\n+                case 4:\n+                    return n.getFirstChild().getNext();\n+            }\n+            throw new IllegalArgumentException(\"malformed \u0027for\u0027 statement \" + n);\n+        case Token.CASE:\n+            return null;\n+    }\n+    throw new IllegalArgumentException(n + \" does not have a condition.\");\n+}\n\\ No newline at end of file\n",
      "actualSource": "static Node getConditionExpression(Node n) {\n    switch(n.getType()) {\n        case Token.IF:\n        case Token.WHILE:\n            return n.getFirstChild();\n        case Token.DO:\n            return n.getLastChild();\n        case Token.FOR:\n            switch(n.getChildCount()) {\n                case 3:\n                    return null;\n                case 4:\n                    return n.getFirstChild().getNext();\n            }\n            throw new IllegalArgumentException(\"malformed \u0027for\u0027 statement \" + n);\n        case Token.CASE:\n            return null;\n    }\n    throw new IllegalArgumentException(n + \" does not have a condition.\");\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 979,
      "functionName": "getConditionExpression",
      "functionAnnotation": "",
      "functionDoc": "Gets the condition of an ON_TRUE / ON_FALSE CFG edge.\n\n@param n a node with an outgoing conditional CFG edge\n@return the condition node or null if the condition is not obviously a node\n"
    }
  }
}