{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "removeChild",
  "functionId": "removeChild___parent-Node__node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Safely remove children while maintaining a valid node structure.\n",
  "functionStartLine": 1381,
  "functionEndLine": 1434,
  "numCommitsSeen": 62,
  "timeTaken": 4384,
  "changeHistory": [
    "c1971584101865a747d5d1e25ef0c0193135957f",
    "936537f0ed66d00d0365fecd4e85a44802bca759",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "78995bf9e88599055a8c4165d89c09dc92a44b30",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "c1971584101865a747d5d1e25ef0c0193135957f": "Ybodychange",
    "936537f0ed66d00d0365fecd4e85a44802bca759": "Ybodychange",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Ybodychange",
    "78995bf9e88599055a8c4165d89c09dc92a44b30": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c1971584101865a747d5d1e25ef0c0193135957f": {
      "type": "Ybodychange",
      "commitMessage": "\nUpdate NodeUtil.removeChild to only safe handle try/catch/finally nodes. Update UnreachableCodeElminination to reflect the changes and removed\npeephole removal of unneeded TRY/FINALLY statements as that is now handled by\nthe PeepholeRemoveDeadCode pass.\n\nR\u003dnicksantos\nDELTA\u003d154  (88 added, 33 deleted, 33 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d219\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@670 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/6/11, 5:19 PM",
      "commitName": "c1971584101865a747d5d1e25ef0c0193135957f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "1/6/11, 2:02 PM",
      "commitNameOld": "936537f0ed66d00d0365fecd4e85a44802bca759",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "static void removeChild(Node parent, Node node) {\n    if (isTryFinallyNode(parent, node)) {\n        if (NodeUtil.hasCatchHandler(getCatchBlock(parent))) {\n            parent.removeChild(node);\n        } else {\n            node.detachChildren();\n        }\n    } else if (node.getType() \u003d\u003d Token.CATCH) {\n        Node tryNode \u003d node.getParent().getParent();\n        Preconditions.checkState(NodeUtil.hasFinally(tryNode));\n        node.detachFromParent();\n    } else if (isTryCatchNodeContainer(node)) {\n        Node tryNode \u003d node.getParent();\n        Preconditions.checkState(NodeUtil.hasFinally(tryNode));\n        node.detachChildren();\n    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n        node.detachChildren();\n    } else if (isStatementBlock(parent) || isSwitchCase(node)) {\n        parent.removeChild(node);\n    } else if (parent.getType() \u003d\u003d Token.VAR) {\n        if (parent.hasMoreThanOneChild()) {\n            parent.removeChild(node);\n        } else {\n            parent.removeChild(node);\n            removeChild(parent.getParent(), parent);\n        }\n    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n        parent.removeChild(node);\n        removeChild(parent.getParent(), parent);\n    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n        parent.replaceChild(node, new Node(Token.EMPTY));\n    } else {\n        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1381,
      "functionName": "removeChild",
      "functionAnnotation": "",
      "functionDoc": "Safely remove children while maintaining a valid node structure.\n",
      "diff": "@@ -1,23 +1,35 @@\n static void removeChild(Node parent, Node node) {\n     if (isTryFinallyNode(parent, node)) {\n-        parent.removeChild(node);\n+        if (NodeUtil.hasCatchHandler(getCatchBlock(parent))) {\n+            parent.removeChild(node);\n+        } else {\n+            node.detachChildren();\n+        }\n+    } else if (node.getType() \u003d\u003d Token.CATCH) {\n+        Node tryNode \u003d node.getParent().getParent();\n+        Preconditions.checkState(NodeUtil.hasFinally(tryNode));\n+        node.detachFromParent();\n+    } else if (isTryCatchNodeContainer(node)) {\n+        Node tryNode \u003d node.getParent();\n+        Preconditions.checkState(NodeUtil.hasFinally(tryNode));\n+        node.detachChildren();\n     } else if (node.getType() \u003d\u003d Token.BLOCK) {\n         node.detachChildren();\n     } else if (isStatementBlock(parent) || isSwitchCase(node)) {\n         parent.removeChild(node);\n     } else if (parent.getType() \u003d\u003d Token.VAR) {\n         if (parent.hasMoreThanOneChild()) {\n             parent.removeChild(node);\n         } else {\n             parent.removeChild(node);\n             removeChild(parent.getParent(), parent);\n         }\n     } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n         parent.removeChild(node);\n         removeChild(parent.getParent(), parent);\n     } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n         parent.replaceChild(node, new Node(Token.EMPTY));\n     } else {\n         throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "936537f0ed66d00d0365fecd4e85a44802bca759": {
      "type": "Ybodychange",
      "commitMessage": "\nDon\u0027t allow the removal of synthetic blocks in NodeUtil.removeChild\n\n\nR\u003dnicksantos\nDELTA\u003d34  (25 added, 5 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d213\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@668 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/6/11, 2:02 PM",
      "commitName": "936537f0ed66d00d0365fecd4e85a44802bca759",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/21/10, 11:22 AM",
      "commitNameOld": "2e158bdc1a74af6453d3087a7377ace75e2bcd45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 16.11,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "static void removeChild(Node parent, Node node) {\n    if (isTryFinallyNode(parent, node)) {\n        parent.removeChild(node);\n    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n        node.detachChildren();\n    } else if (isStatementBlock(parent) || isSwitchCase(node)) {\n        parent.removeChild(node);\n    } else if (parent.getType() \u003d\u003d Token.VAR) {\n        if (parent.hasMoreThanOneChild()) {\n            parent.removeChild(node);\n        } else {\n            parent.removeChild(node);\n            removeChild(parent.getParent(), parent);\n        }\n    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n        parent.removeChild(node);\n        removeChild(parent.getParent(), parent);\n    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n        parent.replaceChild(node, new Node(Token.EMPTY));\n    } else {\n        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1374,
      "functionName": "removeChild",
      "functionAnnotation": "",
      "functionDoc": "Safely remove children while maintaining a valid node structure.\n",
      "diff": "@@ -1,21 +1,23 @@\n static void removeChild(Node parent, Node node) {\n-    if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n+    if (isTryFinallyNode(parent, node)) {\n+        parent.removeChild(node);\n+    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n+        node.detachChildren();\n+    } else if (isStatementBlock(parent) || isSwitchCase(node)) {\n         parent.removeChild(node);\n     } else if (parent.getType() \u003d\u003d Token.VAR) {\n         if (parent.hasMoreThanOneChild()) {\n             parent.removeChild(node);\n         } else {\n             parent.removeChild(node);\n             removeChild(parent.getParent(), parent);\n         }\n-    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n-        node.detachChildren();\n     } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n         parent.removeChild(node);\n         removeChild(parent.getParent(), parent);\n     } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n         parent.replaceChild(node, new Node(Token.EMPTY));\n     } else {\n         throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Ybodychange",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/17/09, 4:21 PM",
      "commitNameOld": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 7.61,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "static void removeChild(Node parent, Node node) {\n    if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n        parent.removeChild(node);\n    } else if (parent.getType() \u003d\u003d Token.VAR) {\n        if (parent.hasMoreThanOneChild()) {\n            parent.removeChild(node);\n        } else {\n            parent.removeChild(node);\n            removeChild(parent.getParent(), parent);\n        }\n    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n        node.detachChildren();\n    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n        parent.removeChild(node);\n        removeChild(parent.getParent(), parent);\n    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n        parent.replaceChild(node, new Node(Token.EMPTY));\n    } else {\n        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1040,
      "functionName": "removeChild",
      "functionAnnotation": "",
      "functionDoc": "Safely remove children while maintaining a valid node structure.\n",
      "diff": "@@ -1,22 +1,21 @@\n static void removeChild(Node parent, Node node) {\n     if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n         parent.removeChild(node);\n     } else if (parent.getType() \u003d\u003d Token.VAR) {\n         if (parent.hasMoreThanOneChild()) {\n             parent.removeChild(node);\n         } else {\n             parent.removeChild(node);\n             removeChild(parent.getParent(), parent);\n         }\n     } else if (node.getType() \u003d\u003d Token.BLOCK) {\n         node.detachChildren();\n     } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n         parent.removeChild(node);\n         removeChild(parent.getParent(), parent);\n     } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n-        Preconditions.checkState(parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4);\n         parent.replaceChild(node, new Node(Token.EMPTY));\n     } else {\n         throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "78995bf9e88599055a8c4165d89c09dc92a44b30": {
      "type": "Ybodychange",
      "commitMessage": "Fix synthesis of vars in DEFAULT mode.\nBetter variable inlining\nBetter function inlining\nAssorted bug fixes\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@6 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/09, 11:16 AM",
      "commitName": "78995bf9e88599055a8c4165d89c09dc92a44b30",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/6/09, 5:24 PM",
      "commitNameOld": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "static void removeChild(Node parent, Node node) {\n    if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n        parent.removeChild(node);\n    } else if (parent.getType() \u003d\u003d Token.VAR) {\n        if (parent.hasMoreThanOneChild()) {\n            parent.removeChild(node);\n        } else {\n            parent.removeChild(node);\n            removeChild(parent.getParent(), parent);\n        }\n    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n        node.detachChildren();\n    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n        parent.removeChild(node);\n        removeChild(parent.getParent(), parent);\n    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4);\n        parent.replaceChild(node, new Node(Token.EMPTY));\n    } else {\n        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1005,
      "functionName": "removeChild",
      "functionAnnotation": "",
      "functionDoc": "Safely remove children while maintaining a valid node structure.\n",
      "diff": "@@ -1,20 +1,22 @@\n static void removeChild(Node parent, Node node) {\n     if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n         parent.removeChild(node);\n     } else if (parent.getType() \u003d\u003d Token.VAR) {\n         if (parent.hasMoreThanOneChild()) {\n             parent.removeChild(node);\n         } else {\n+            parent.removeChild(node);\n             removeChild(parent.getParent(), parent);\n         }\n     } else if (node.getType() \u003d\u003d Token.BLOCK) {\n         node.detachChildren();\n     } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n+        parent.removeChild(node);\n         removeChild(parent.getParent(), parent);\n     } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n         Preconditions.checkState(parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4);\n         parent.replaceChild(node, new Node(Token.EMPTY));\n     } else {\n         throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,20 @@\n+static void removeChild(Node parent, Node node) {\n+    if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n+        parent.removeChild(node);\n+    } else if (parent.getType() \u003d\u003d Token.VAR) {\n+        if (parent.hasMoreThanOneChild()) {\n+            parent.removeChild(node);\n+        } else {\n+            removeChild(parent.getParent(), parent);\n+        }\n+    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n+        node.detachChildren();\n+    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n+        removeChild(parent.getParent(), parent);\n+    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n+        Preconditions.checkState(parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4);\n+        parent.replaceChild(node, new Node(Token.EMPTY));\n+    } else {\n+        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "static void removeChild(Node parent, Node node) {\n    if (isStatementBlock(parent) || isSwitchCase(node) || isTryFinallyNode(parent, node)) {\n        parent.removeChild(node);\n    } else if (parent.getType() \u003d\u003d Token.VAR) {\n        if (parent.hasMoreThanOneChild()) {\n            parent.removeChild(node);\n        } else {\n            removeChild(parent.getParent(), parent);\n        }\n    } else if (node.getType() \u003d\u003d Token.BLOCK) {\n        node.detachChildren();\n    } else if (parent.getType() \u003d\u003d Token.LABEL \u0026\u0026 node \u003d\u003d parent.getLastChild()) {\n        removeChild(parent.getParent(), parent);\n    } else if (parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4) {\n        Preconditions.checkState(parent.getType() \u003d\u003d Token.FOR \u0026\u0026 parent.getChildCount() \u003d\u003d 4);\n        parent.replaceChild(node, new Node(Token.EMPTY));\n    } else {\n        throw new IllegalStateException(\"Invalid attempt to remove node: \" + node.toString() + \" of \" + parent.toString());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1055,
      "functionName": "removeChild",
      "functionAnnotation": "",
      "functionDoc": "Safely remove children while maintaining a valid node structure.\n"
    }
  }
}