{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaseJSTypeTestCase.java",
  "functionName": "addNativeProperties",
  "functionId": "addNativeProperties___registry-JSTypeRegistry",
  "sourceFilePath": "src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java",
  "functionAnnotation": "",
  "functionDoc": "Adds a basic set of properties to the native types.\n",
  "functionStartLine": 225,
  "functionEndLine": 378,
  "numCommitsSeen": 6,
  "timeTaken": 505,
  "changeHistory": [
    "6bbac115c9a7928a7053b2da3a78df9569df8570",
    "845f5ff65858fd0d1829f3d2f16f758725e8028f",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6bbac115c9a7928a7053b2da3a78df9569df8570": "Ybodychange",
    "845f5ff65858fd0d1829f3d2f16f758725e8028f": "Yfilerename",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6bbac115c9a7928a7053b2da3a78df9569df8570": {
      "type": "Ybodychange",
      "commitMessage": "\nAdding getPropertyNode functionality to ObjectType. This needs\nassociating nodes to properties in defineProperty.\n\nR\u003dnicksantos\nDELTA\u003d307  (127 added, 0 deleted, 180 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@674 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/7/11, 9:19 AM",
      "commitName": "6bbac115c9a7928a7053b2da3a78df9569df8570",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "4/15/10, 4:45 PM",
      "commitNameOld": "e3bcc1c6e7ce7e9bfc3098cd5bf57774049f5baa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 266.73,
      "commitsBetweenForRepo": 463,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void addNativeProperties(JSTypeRegistry registry) {\n    JSType booleanType \u003d registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);\n    JSType numberType \u003d registry.getNativeType(JSTypeNative.NUMBER_TYPE);\n    JSType stringType \u003d registry.getNativeType(JSTypeNative.STRING_TYPE);\n    JSType unknownType \u003d registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    ObjectType objectType \u003d registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    ObjectType arrayType \u003d registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);\n    ObjectType dateType \u003d registry.getNativeObjectType(JSTypeNative.DATE_TYPE);\n    ObjectType regexpType \u003d registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);\n    ObjectType booleanObjectType \u003d registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);\n    ObjectType numberObjectType \u003d registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);\n    ObjectType stringObjectType \u003d registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);\n    ObjectType objectPrototype \u003d registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, objectPrototype, \"constructor\", objectType);\n    addMethod(registry, objectPrototype, \"toString\", stringType);\n    addMethod(registry, objectPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, objectPrototype, \"valueOf\", unknownType);\n    addMethod(registry, objectPrototype, \"hasOwnProperty\", booleanType);\n    addMethod(registry, objectPrototype, \"isPrototypeOf\", booleanType);\n    addMethod(registry, objectPrototype, \"propertyIsEnumerable\", booleanType);\n    ObjectType arrayPrototype \u003d registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, arrayPrototype, \"constructor\", arrayType);\n    addMethod(registry, arrayPrototype, \"toString\", stringType);\n    addMethod(registry, arrayPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, arrayPrototype, \"concat\", arrayType);\n    addMethod(registry, arrayPrototype, \"join\", stringType);\n    addMethod(registry, arrayPrototype, \"pop\", unknownType);\n    addMethod(registry, arrayPrototype, \"push\", numberType);\n    addMethod(registry, arrayPrototype, \"reverse\", arrayType);\n    addMethod(registry, arrayPrototype, \"shift\", unknownType);\n    addMethod(registry, arrayPrototype, \"slice\", arrayType);\n    addMethod(registry, arrayPrototype, \"sort\", arrayType);\n    addMethod(registry, arrayPrototype, \"splice\", arrayType);\n    addMethod(registry, arrayPrototype, \"unshift\", numberType);\n    arrayType.defineDeclaredProperty(\"length\", numberType, true, null);\n    ObjectType booleanPrototype \u003d registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, booleanPrototype, \"constructor\", booleanObjectType);\n    addMethod(registry, booleanPrototype, \"toString\", stringType);\n    addMethod(registry, booleanPrototype, \"valueOf\", booleanType);\n    ObjectType datePrototype \u003d registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, datePrototype, \"constructor\", dateType);\n    addMethod(registry, datePrototype, \"toString\", stringType);\n    addMethod(registry, datePrototype, \"toDateString\", stringType);\n    addMethod(registry, datePrototype, \"toTimeString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleDateString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleTimeString\", stringType);\n    addMethod(registry, datePrototype, \"valueOf\", numberType);\n    addMethod(registry, datePrototype, \"getTime\", numberType);\n    addMethod(registry, datePrototype, \"getFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getMonth\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"getDate\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"getDay\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDay\", numberType);\n    addMethod(registry, datePrototype, \"getHours\", numberType);\n    addMethod(registry, datePrototype, \"getUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"getMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getTimezoneOffset\", numberType);\n    addMethod(registry, datePrototype, \"setTime\", numberType);\n    addMethod(registry, datePrototype, \"setMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setHours\", numberType);\n    addMethod(registry, datePrototype, \"setUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"setDate\", numberType);\n    addMethod(registry, datePrototype, \"setUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"setMonth\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"setFullYear\", numberType);\n    addMethod(registry, datePrototype, \"setUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"toUTCString\", stringType);\n    addMethod(registry, datePrototype, \"toGMTString\", stringType);\n    ObjectType numberPrototype \u003d registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, numberPrototype, \"constructor\", numberObjectType);\n    addMethod(registry, numberPrototype, \"toString\", stringType);\n    addMethod(registry, numberPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, numberPrototype, \"valueOf\", numberType);\n    addMethod(registry, numberPrototype, \"toFixed\", stringType);\n    addMethod(registry, numberPrototype, \"toExponential\", stringType);\n    addMethod(registry, numberPrototype, \"toPrecision\", stringType);\n    ObjectType regexpPrototype \u003d registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, regexpPrototype, \"constructor\", regexpType);\n    addMethod(registry, regexpPrototype, \"exec\", registry.createNullableType(arrayType));\n    addMethod(registry, regexpPrototype, \"test\", booleanType);\n    addMethod(registry, regexpPrototype, \"toString\", stringType);\n    regexpType.defineDeclaredProperty(\"source\", stringType, true, null);\n    regexpType.defineDeclaredProperty(\"global\", booleanType, true, null);\n    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true, null);\n    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true, null);\n    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true, null);\n    ObjectType stringPrototype \u003d registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, stringPrototype, \"constructor\", stringObjectType);\n    addMethod(registry, stringPrototype, \"toString\", stringType);\n    addMethod(registry, stringPrototype, \"valueOf\", stringType);\n    addMethod(registry, stringPrototype, \"charAt\", stringType);\n    addMethod(registry, stringPrototype, \"charCodeAt\", numberType);\n    addMethod(registry, stringPrototype, \"concat\", stringType);\n    addMethod(registry, stringPrototype, \"indexOf\", numberType);\n    addMethod(registry, stringPrototype, \"lastIndexOf\", numberType);\n    addMethod(registry, stringPrototype, \"localeCompare\", numberType);\n    addMethod(registry, stringPrototype, \"match\", registry.createNullableType(arrayType));\n    addMethod(registry, stringPrototype, \"replace\", stringType);\n    addMethod(registry, stringPrototype, \"search\", numberType);\n    addMethod(registry, stringPrototype, \"slice\", stringType);\n    addMethod(registry, stringPrototype, \"split\", arrayType);\n    addMethod(registry, stringPrototype, \"substring\", stringType);\n    addMethod(registry, stringPrototype, \"toLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toUpperCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleUpperCase\", stringType);\n    stringObjectType.defineDeclaredProperty(\"length\", numberType, true, null);\n}",
      "path": "src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java",
      "functionStartLine": 225,
      "functionName": "addNativeProperties",
      "functionAnnotation": "",
      "functionDoc": "Adds a basic set of properties to the native types.\n",
      "diff": "@@ -1,123 +1,123 @@\n public static void addNativeProperties(JSTypeRegistry registry) {\n     JSType booleanType \u003d registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);\n     JSType numberType \u003d registry.getNativeType(JSTypeNative.NUMBER_TYPE);\n     JSType stringType \u003d registry.getNativeType(JSTypeNative.STRING_TYPE);\n     JSType unknownType \u003d registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     ObjectType objectType \u003d registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     ObjectType arrayType \u003d registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);\n     ObjectType dateType \u003d registry.getNativeObjectType(JSTypeNative.DATE_TYPE);\n     ObjectType regexpType \u003d registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);\n     ObjectType booleanObjectType \u003d registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);\n     ObjectType numberObjectType \u003d registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);\n     ObjectType stringObjectType \u003d registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);\n     ObjectType objectPrototype \u003d registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, objectPrototype, \"constructor\", objectType);\n     addMethod(registry, objectPrototype, \"toString\", stringType);\n     addMethod(registry, objectPrototype, \"toLocaleString\", stringType);\n     addMethod(registry, objectPrototype, \"valueOf\", unknownType);\n     addMethod(registry, objectPrototype, \"hasOwnProperty\", booleanType);\n     addMethod(registry, objectPrototype, \"isPrototypeOf\", booleanType);\n     addMethod(registry, objectPrototype, \"propertyIsEnumerable\", booleanType);\n     ObjectType arrayPrototype \u003d registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, arrayPrototype, \"constructor\", arrayType);\n     addMethod(registry, arrayPrototype, \"toString\", stringType);\n     addMethod(registry, arrayPrototype, \"toLocaleString\", stringType);\n     addMethod(registry, arrayPrototype, \"concat\", arrayType);\n     addMethod(registry, arrayPrototype, \"join\", stringType);\n     addMethod(registry, arrayPrototype, \"pop\", unknownType);\n     addMethod(registry, arrayPrototype, \"push\", numberType);\n     addMethod(registry, arrayPrototype, \"reverse\", arrayType);\n     addMethod(registry, arrayPrototype, \"shift\", unknownType);\n     addMethod(registry, arrayPrototype, \"slice\", arrayType);\n     addMethod(registry, arrayPrototype, \"sort\", arrayType);\n     addMethod(registry, arrayPrototype, \"splice\", arrayType);\n     addMethod(registry, arrayPrototype, \"unshift\", numberType);\n-    arrayType.defineDeclaredProperty(\"length\", numberType, true);\n+    arrayType.defineDeclaredProperty(\"length\", numberType, true, null);\n     ObjectType booleanPrototype \u003d registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, booleanPrototype, \"constructor\", booleanObjectType);\n     addMethod(registry, booleanPrototype, \"toString\", stringType);\n     addMethod(registry, booleanPrototype, \"valueOf\", booleanType);\n     ObjectType datePrototype \u003d registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, datePrototype, \"constructor\", dateType);\n     addMethod(registry, datePrototype, \"toString\", stringType);\n     addMethod(registry, datePrototype, \"toDateString\", stringType);\n     addMethod(registry, datePrototype, \"toTimeString\", stringType);\n     addMethod(registry, datePrototype, \"toLocaleString\", stringType);\n     addMethod(registry, datePrototype, \"toLocaleDateString\", stringType);\n     addMethod(registry, datePrototype, \"toLocaleTimeString\", stringType);\n     addMethod(registry, datePrototype, \"valueOf\", numberType);\n     addMethod(registry, datePrototype, \"getTime\", numberType);\n     addMethod(registry, datePrototype, \"getFullYear\", numberType);\n     addMethod(registry, datePrototype, \"getUTCFullYear\", numberType);\n     addMethod(registry, datePrototype, \"getMonth\", numberType);\n     addMethod(registry, datePrototype, \"getUTCMonth\", numberType);\n     addMethod(registry, datePrototype, \"getDate\", numberType);\n     addMethod(registry, datePrototype, \"getUTCDate\", numberType);\n     addMethod(registry, datePrototype, \"getDay\", numberType);\n     addMethod(registry, datePrototype, \"getUTCDay\", numberType);\n     addMethod(registry, datePrototype, \"getHours\", numberType);\n     addMethod(registry, datePrototype, \"getUTCHours\", numberType);\n     addMethod(registry, datePrototype, \"getMinutes\", numberType);\n     addMethod(registry, datePrototype, \"getUTCMinutes\", numberType);\n     addMethod(registry, datePrototype, \"getSeconds\", numberType);\n     addMethod(registry, datePrototype, \"getUTCSeconds\", numberType);\n     addMethod(registry, datePrototype, \"getMilliseconds\", numberType);\n     addMethod(registry, datePrototype, \"getUTCMilliseconds\", numberType);\n     addMethod(registry, datePrototype, \"getTimezoneOffset\", numberType);\n     addMethod(registry, datePrototype, \"setTime\", numberType);\n     addMethod(registry, datePrototype, \"setMilliseconds\", numberType);\n     addMethod(registry, datePrototype, \"setUTCMilliseconds\", numberType);\n     addMethod(registry, datePrototype, \"setSeconds\", numberType);\n     addMethod(registry, datePrototype, \"setUTCSeconds\", numberType);\n     addMethod(registry, datePrototype, \"setMinutes\", numberType);\n     addMethod(registry, datePrototype, \"setUTCMinutes\", numberType);\n     addMethod(registry, datePrototype, \"setHours\", numberType);\n     addMethod(registry, datePrototype, \"setUTCHours\", numberType);\n     addMethod(registry, datePrototype, \"setDate\", numberType);\n     addMethod(registry, datePrototype, \"setUTCDate\", numberType);\n     addMethod(registry, datePrototype, \"setMonth\", numberType);\n     addMethod(registry, datePrototype, \"setUTCMonth\", numberType);\n     addMethod(registry, datePrototype, \"setFullYear\", numberType);\n     addMethod(registry, datePrototype, \"setUTCFullYear\", numberType);\n     addMethod(registry, datePrototype, \"toUTCString\", stringType);\n     addMethod(registry, datePrototype, \"toGMTString\", stringType);\n     ObjectType numberPrototype \u003d registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, numberPrototype, \"constructor\", numberObjectType);\n     addMethod(registry, numberPrototype, \"toString\", stringType);\n     addMethod(registry, numberPrototype, \"toLocaleString\", stringType);\n     addMethod(registry, numberPrototype, \"valueOf\", numberType);\n     addMethod(registry, numberPrototype, \"toFixed\", stringType);\n     addMethod(registry, numberPrototype, \"toExponential\", stringType);\n     addMethod(registry, numberPrototype, \"toPrecision\", stringType);\n     ObjectType regexpPrototype \u003d registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, regexpPrototype, \"constructor\", regexpType);\n     addMethod(registry, regexpPrototype, \"exec\", registry.createNullableType(arrayType));\n     addMethod(registry, regexpPrototype, \"test\", booleanType);\n     addMethod(registry, regexpPrototype, \"toString\", stringType);\n-    regexpType.defineDeclaredProperty(\"source\", stringType, true);\n-    regexpType.defineDeclaredProperty(\"global\", booleanType, true);\n-    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true);\n-    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true);\n-    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true);\n+    regexpType.defineDeclaredProperty(\"source\", stringType, true, null);\n+    regexpType.defineDeclaredProperty(\"global\", booleanType, true, null);\n+    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true, null);\n+    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true, null);\n+    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true, null);\n     ObjectType stringPrototype \u003d registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();\n     addMethod(registry, stringPrototype, \"constructor\", stringObjectType);\n     addMethod(registry, stringPrototype, \"toString\", stringType);\n     addMethod(registry, stringPrototype, \"valueOf\", stringType);\n     addMethod(registry, stringPrototype, \"charAt\", stringType);\n     addMethod(registry, stringPrototype, \"charCodeAt\", numberType);\n     addMethod(registry, stringPrototype, \"concat\", stringType);\n     addMethod(registry, stringPrototype, \"indexOf\", numberType);\n     addMethod(registry, stringPrototype, \"lastIndexOf\", numberType);\n     addMethod(registry, stringPrototype, \"localeCompare\", numberType);\n     addMethod(registry, stringPrototype, \"match\", registry.createNullableType(arrayType));\n     addMethod(registry, stringPrototype, \"replace\", stringType);\n     addMethod(registry, stringPrototype, \"search\", numberType);\n     addMethod(registry, stringPrototype, \"slice\", stringType);\n     addMethod(registry, stringPrototype, \"split\", arrayType);\n     addMethod(registry, stringPrototype, \"substring\", stringType);\n     addMethod(registry, stringPrototype, \"toLowerCase\", stringType);\n     addMethod(registry, stringPrototype, \"toLocaleLowerCase\", stringType);\n     addMethod(registry, stringPrototype, \"toUpperCase\", stringType);\n     addMethod(registry, stringPrototype, \"toLocaleUpperCase\", stringType);\n-    stringObjectType.defineDeclaredProperty(\"length\", numberType, true);\n+    stringObjectType.defineDeclaredProperty(\"length\", numberType, true, null);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "845f5ff65858fd0d1829f3d2f16f758725e8028f": {
      "type": "Yfilerename",
      "commitMessage": "Add buttloads of tests.\n\nRewrite JSDoc inference to be more redundant, which should help it\nto be more robust.\n\nAssorted other fixes.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@20 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/7/09, 1:53 PM",
      "commitName": "845f5ff65858fd0d1829f3d2f16f758725e8028f",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/4/09, 8:00 AM",
      "commitNameOld": "e578606c74bd8a24d0cabcb64f9ea1e950003af1",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.24,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static void addNativeProperties(JSTypeRegistry registry) {\n    JSType booleanType \u003d registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);\n    JSType numberType \u003d registry.getNativeType(JSTypeNative.NUMBER_TYPE);\n    JSType stringType \u003d registry.getNativeType(JSTypeNative.STRING_TYPE);\n    JSType unknownType \u003d registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    ObjectType objectType \u003d registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    ObjectType arrayType \u003d registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);\n    ObjectType dateType \u003d registry.getNativeObjectType(JSTypeNative.DATE_TYPE);\n    ObjectType regexpType \u003d registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);\n    ObjectType booleanObjectType \u003d registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);\n    ObjectType numberObjectType \u003d registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);\n    ObjectType stringObjectType \u003d registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);\n    ObjectType objectPrototype \u003d registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, objectPrototype, \"constructor\", objectType);\n    addMethod(registry, objectPrototype, \"toString\", stringType);\n    addMethod(registry, objectPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, objectPrototype, \"valueOf\", unknownType);\n    addMethod(registry, objectPrototype, \"hasOwnProperty\", booleanType);\n    addMethod(registry, objectPrototype, \"isPrototypeOf\", booleanType);\n    addMethod(registry, objectPrototype, \"propertyIsEnumerable\", booleanType);\n    ObjectType arrayPrototype \u003d registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, arrayPrototype, \"constructor\", arrayType);\n    addMethod(registry, arrayPrototype, \"toString\", stringType);\n    addMethod(registry, arrayPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, arrayPrototype, \"concat\", arrayType);\n    addMethod(registry, arrayPrototype, \"join\", stringType);\n    addMethod(registry, arrayPrototype, \"pop\", unknownType);\n    addMethod(registry, arrayPrototype, \"push\", numberType);\n    addMethod(registry, arrayPrototype, \"reverse\", arrayType);\n    addMethod(registry, arrayPrototype, \"shift\", unknownType);\n    addMethod(registry, arrayPrototype, \"slice\", arrayType);\n    addMethod(registry, arrayPrototype, \"sort\", arrayType);\n    addMethod(registry, arrayPrototype, \"splice\", arrayType);\n    addMethod(registry, arrayPrototype, \"unshift\", numberType);\n    arrayType.defineDeclaredProperty(\"length\", numberType, true);\n    ObjectType booleanPrototype \u003d registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, booleanPrototype, \"constructor\", booleanObjectType);\n    addMethod(registry, booleanPrototype, \"toString\", stringType);\n    addMethod(registry, booleanPrototype, \"valueOf\", booleanType);\n    ObjectType datePrototype \u003d registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, datePrototype, \"constructor\", dateType);\n    addMethod(registry, datePrototype, \"toString\", stringType);\n    addMethod(registry, datePrototype, \"toDateString\", stringType);\n    addMethod(registry, datePrototype, \"toTimeString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleDateString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleTimeString\", stringType);\n    addMethod(registry, datePrototype, \"valueOf\", numberType);\n    addMethod(registry, datePrototype, \"getTime\", numberType);\n    addMethod(registry, datePrototype, \"getFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getMonth\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"getDate\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"getDay\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDay\", numberType);\n    addMethod(registry, datePrototype, \"getHours\", numberType);\n    addMethod(registry, datePrototype, \"getUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"getMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getTimezoneOffset\", numberType);\n    addMethod(registry, datePrototype, \"setTime\", numberType);\n    addMethod(registry, datePrototype, \"setMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setHours\", numberType);\n    addMethod(registry, datePrototype, \"setUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"setDate\", numberType);\n    addMethod(registry, datePrototype, \"setUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"setMonth\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"setFullYear\", numberType);\n    addMethod(registry, datePrototype, \"setUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"toUTCString\", stringType);\n    addMethod(registry, datePrototype, \"toGMTString\", stringType);\n    ObjectType numberPrototype \u003d registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, numberPrototype, \"constructor\", numberObjectType);\n    addMethod(registry, numberPrototype, \"toString\", stringType);\n    addMethod(registry, numberPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, numberPrototype, \"valueOf\", numberType);\n    addMethod(registry, numberPrototype, \"toFixed\", stringType);\n    addMethod(registry, numberPrototype, \"toExponential\", stringType);\n    addMethod(registry, numberPrototype, \"toPrecision\", stringType);\n    ObjectType regexpPrototype \u003d registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, regexpPrototype, \"constructor\", regexpType);\n    addMethod(registry, regexpPrototype, \"exec\", registry.createNullableType(arrayType));\n    addMethod(registry, regexpPrototype, \"test\", booleanType);\n    addMethod(registry, regexpPrototype, \"toString\", stringType);\n    regexpType.defineDeclaredProperty(\"source\", stringType, true);\n    regexpType.defineDeclaredProperty(\"global\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true);\n    ObjectType stringPrototype \u003d registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, stringPrototype, \"constructor\", stringObjectType);\n    addMethod(registry, stringPrototype, \"toString\", stringType);\n    addMethod(registry, stringPrototype, \"valueOf\", stringType);\n    addMethod(registry, stringPrototype, \"charAt\", stringType);\n    addMethod(registry, stringPrototype, \"charCodeAt\", numberType);\n    addMethod(registry, stringPrototype, \"concat\", stringType);\n    addMethod(registry, stringPrototype, \"indexOf\", numberType);\n    addMethod(registry, stringPrototype, \"lastIndexOf\", numberType);\n    addMethod(registry, stringPrototype, \"localeCompare\", numberType);\n    addMethod(registry, stringPrototype, \"match\", registry.createNullableType(arrayType));\n    addMethod(registry, stringPrototype, \"replace\", stringType);\n    addMethod(registry, stringPrototype, \"search\", numberType);\n    addMethod(registry, stringPrototype, \"slice\", stringType);\n    addMethod(registry, stringPrototype, \"split\", arrayType);\n    addMethod(registry, stringPrototype, \"substring\", stringType);\n    addMethod(registry, stringPrototype, \"toLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toUpperCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleUpperCase\", stringType);\n    stringObjectType.defineDeclaredProperty(\"length\", numberType, true);\n}",
      "path": "src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java",
      "functionStartLine": 225,
      "functionName": "addNativeProperties",
      "functionAnnotation": "",
      "functionDoc": "Adds a basic set of properties to the native types.\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "test/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java",
        "newPath": "src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java"
      }
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,123 @@\n+public static void addNativeProperties(JSTypeRegistry registry) {\n+    JSType booleanType \u003d registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);\n+    JSType numberType \u003d registry.getNativeType(JSTypeNative.NUMBER_TYPE);\n+    JSType stringType \u003d registry.getNativeType(JSTypeNative.STRING_TYPE);\n+    JSType unknownType \u003d registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    ObjectType objectType \u003d registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n+    ObjectType arrayType \u003d registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);\n+    ObjectType dateType \u003d registry.getNativeObjectType(JSTypeNative.DATE_TYPE);\n+    ObjectType regexpType \u003d registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);\n+    ObjectType booleanObjectType \u003d registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);\n+    ObjectType numberObjectType \u003d registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);\n+    ObjectType stringObjectType \u003d registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);\n+    ObjectType objectPrototype \u003d registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, objectPrototype, \"constructor\", objectType);\n+    addMethod(registry, objectPrototype, \"toString\", stringType);\n+    addMethod(registry, objectPrototype, \"toLocaleString\", stringType);\n+    addMethod(registry, objectPrototype, \"valueOf\", unknownType);\n+    addMethod(registry, objectPrototype, \"hasOwnProperty\", booleanType);\n+    addMethod(registry, objectPrototype, \"isPrototypeOf\", booleanType);\n+    addMethod(registry, objectPrototype, \"propertyIsEnumerable\", booleanType);\n+    ObjectType arrayPrototype \u003d registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, arrayPrototype, \"constructor\", arrayType);\n+    addMethod(registry, arrayPrototype, \"toString\", stringType);\n+    addMethod(registry, arrayPrototype, \"toLocaleString\", stringType);\n+    addMethod(registry, arrayPrototype, \"concat\", arrayType);\n+    addMethod(registry, arrayPrototype, \"join\", stringType);\n+    addMethod(registry, arrayPrototype, \"pop\", unknownType);\n+    addMethod(registry, arrayPrototype, \"push\", numberType);\n+    addMethod(registry, arrayPrototype, \"reverse\", arrayType);\n+    addMethod(registry, arrayPrototype, \"shift\", unknownType);\n+    addMethod(registry, arrayPrototype, \"slice\", arrayType);\n+    addMethod(registry, arrayPrototype, \"sort\", arrayType);\n+    addMethod(registry, arrayPrototype, \"splice\", arrayType);\n+    addMethod(registry, arrayPrototype, \"unshift\", numberType);\n+    arrayType.defineDeclaredProperty(\"length\", numberType, true);\n+    ObjectType booleanPrototype \u003d registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, booleanPrototype, \"constructor\", booleanObjectType);\n+    addMethod(registry, booleanPrototype, \"toString\", stringType);\n+    addMethod(registry, booleanPrototype, \"valueOf\", booleanType);\n+    ObjectType datePrototype \u003d registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, datePrototype, \"constructor\", dateType);\n+    addMethod(registry, datePrototype, \"toString\", stringType);\n+    addMethod(registry, datePrototype, \"toDateString\", stringType);\n+    addMethod(registry, datePrototype, \"toTimeString\", stringType);\n+    addMethod(registry, datePrototype, \"toLocaleString\", stringType);\n+    addMethod(registry, datePrototype, \"toLocaleDateString\", stringType);\n+    addMethod(registry, datePrototype, \"toLocaleTimeString\", stringType);\n+    addMethod(registry, datePrototype, \"valueOf\", numberType);\n+    addMethod(registry, datePrototype, \"getTime\", numberType);\n+    addMethod(registry, datePrototype, \"getFullYear\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCFullYear\", numberType);\n+    addMethod(registry, datePrototype, \"getMonth\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCMonth\", numberType);\n+    addMethod(registry, datePrototype, \"getDate\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCDate\", numberType);\n+    addMethod(registry, datePrototype, \"getDay\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCDay\", numberType);\n+    addMethod(registry, datePrototype, \"getHours\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCHours\", numberType);\n+    addMethod(registry, datePrototype, \"getMinutes\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCMinutes\", numberType);\n+    addMethod(registry, datePrototype, \"getSeconds\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCSeconds\", numberType);\n+    addMethod(registry, datePrototype, \"getMilliseconds\", numberType);\n+    addMethod(registry, datePrototype, \"getUTCMilliseconds\", numberType);\n+    addMethod(registry, datePrototype, \"getTimezoneOffset\", numberType);\n+    addMethod(registry, datePrototype, \"setTime\", numberType);\n+    addMethod(registry, datePrototype, \"setMilliseconds\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCMilliseconds\", numberType);\n+    addMethod(registry, datePrototype, \"setSeconds\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCSeconds\", numberType);\n+    addMethod(registry, datePrototype, \"setMinutes\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCMinutes\", numberType);\n+    addMethod(registry, datePrototype, \"setHours\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCHours\", numberType);\n+    addMethod(registry, datePrototype, \"setDate\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCDate\", numberType);\n+    addMethod(registry, datePrototype, \"setMonth\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCMonth\", numberType);\n+    addMethod(registry, datePrototype, \"setFullYear\", numberType);\n+    addMethod(registry, datePrototype, \"setUTCFullYear\", numberType);\n+    addMethod(registry, datePrototype, \"toUTCString\", stringType);\n+    addMethod(registry, datePrototype, \"toGMTString\", stringType);\n+    ObjectType numberPrototype \u003d registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, numberPrototype, \"constructor\", numberObjectType);\n+    addMethod(registry, numberPrototype, \"toString\", stringType);\n+    addMethod(registry, numberPrototype, \"toLocaleString\", stringType);\n+    addMethod(registry, numberPrototype, \"valueOf\", numberType);\n+    addMethod(registry, numberPrototype, \"toFixed\", stringType);\n+    addMethod(registry, numberPrototype, \"toExponential\", stringType);\n+    addMethod(registry, numberPrototype, \"toPrecision\", stringType);\n+    ObjectType regexpPrototype \u003d registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, regexpPrototype, \"constructor\", regexpType);\n+    addMethod(registry, regexpPrototype, \"exec\", registry.createNullableType(arrayType));\n+    addMethod(registry, regexpPrototype, \"test\", booleanType);\n+    addMethod(registry, regexpPrototype, \"toString\", stringType);\n+    regexpType.defineDeclaredProperty(\"source\", stringType, true);\n+    regexpType.defineDeclaredProperty(\"global\", booleanType, true);\n+    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true);\n+    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true);\n+    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true);\n+    ObjectType stringPrototype \u003d registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();\n+    addMethod(registry, stringPrototype, \"constructor\", stringObjectType);\n+    addMethod(registry, stringPrototype, \"toString\", stringType);\n+    addMethod(registry, stringPrototype, \"valueOf\", stringType);\n+    addMethod(registry, stringPrototype, \"charAt\", stringType);\n+    addMethod(registry, stringPrototype, \"charCodeAt\", numberType);\n+    addMethod(registry, stringPrototype, \"concat\", stringType);\n+    addMethod(registry, stringPrototype, \"indexOf\", numberType);\n+    addMethod(registry, stringPrototype, \"lastIndexOf\", numberType);\n+    addMethod(registry, stringPrototype, \"localeCompare\", numberType);\n+    addMethod(registry, stringPrototype, \"match\", registry.createNullableType(arrayType));\n+    addMethod(registry, stringPrototype, \"replace\", stringType);\n+    addMethod(registry, stringPrototype, \"search\", numberType);\n+    addMethod(registry, stringPrototype, \"slice\", stringType);\n+    addMethod(registry, stringPrototype, \"split\", arrayType);\n+    addMethod(registry, stringPrototype, \"substring\", stringType);\n+    addMethod(registry, stringPrototype, \"toLowerCase\", stringType);\n+    addMethod(registry, stringPrototype, \"toLocaleLowerCase\", stringType);\n+    addMethod(registry, stringPrototype, \"toUpperCase\", stringType);\n+    addMethod(registry, stringPrototype, \"toLocaleUpperCase\", stringType);\n+    stringObjectType.defineDeclaredProperty(\"length\", numberType, true);\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static void addNativeProperties(JSTypeRegistry registry) {\n    JSType booleanType \u003d registry.getNativeType(JSTypeNative.BOOLEAN_TYPE);\n    JSType numberType \u003d registry.getNativeType(JSTypeNative.NUMBER_TYPE);\n    JSType stringType \u003d registry.getNativeType(JSTypeNative.STRING_TYPE);\n    JSType unknownType \u003d registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    ObjectType objectType \u003d registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n    ObjectType arrayType \u003d registry.getNativeObjectType(JSTypeNative.ARRAY_TYPE);\n    ObjectType dateType \u003d registry.getNativeObjectType(JSTypeNative.DATE_TYPE);\n    ObjectType regexpType \u003d registry.getNativeObjectType(JSTypeNative.REGEXP_TYPE);\n    ObjectType booleanObjectType \u003d registry.getNativeObjectType(JSTypeNative.BOOLEAN_OBJECT_TYPE);\n    ObjectType numberObjectType \u003d registry.getNativeObjectType(JSTypeNative.NUMBER_OBJECT_TYPE);\n    ObjectType stringObjectType \u003d registry.getNativeObjectType(JSTypeNative.STRING_OBJECT_TYPE);\n    ObjectType objectPrototype \u003d registry.getNativeFunctionType(JSTypeNative.OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, objectPrototype, \"constructor\", objectType);\n    addMethod(registry, objectPrototype, \"toString\", stringType);\n    addMethod(registry, objectPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, objectPrototype, \"valueOf\", unknownType);\n    addMethod(registry, objectPrototype, \"hasOwnProperty\", booleanType);\n    addMethod(registry, objectPrototype, \"isPrototypeOf\", booleanType);\n    addMethod(registry, objectPrototype, \"propertyIsEnumerable\", booleanType);\n    ObjectType arrayPrototype \u003d registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, arrayPrototype, \"constructor\", arrayType);\n    addMethod(registry, arrayPrototype, \"toString\", stringType);\n    addMethod(registry, arrayPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, arrayPrototype, \"concat\", arrayType);\n    addMethod(registry, arrayPrototype, \"join\", stringType);\n    addMethod(registry, arrayPrototype, \"pop\", unknownType);\n    addMethod(registry, arrayPrototype, \"push\", numberType);\n    addMethod(registry, arrayPrototype, \"reverse\", arrayType);\n    addMethod(registry, arrayPrototype, \"shift\", unknownType);\n    addMethod(registry, arrayPrototype, \"slice\", arrayType);\n    addMethod(registry, arrayPrototype, \"sort\", arrayType);\n    addMethod(registry, arrayPrototype, \"splice\", arrayType);\n    addMethod(registry, arrayPrototype, \"unshift\", numberType);\n    arrayType.defineDeclaredProperty(\"length\", numberType, true);\n    ObjectType booleanPrototype \u003d registry.getNativeFunctionType(JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, booleanPrototype, \"constructor\", booleanObjectType);\n    addMethod(registry, booleanPrototype, \"toString\", stringType);\n    addMethod(registry, booleanPrototype, \"valueOf\", booleanType);\n    ObjectType datePrototype \u003d registry.getNativeFunctionType(JSTypeNative.DATE_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, datePrototype, \"constructor\", dateType);\n    addMethod(registry, datePrototype, \"toString\", stringType);\n    addMethod(registry, datePrototype, \"toDateString\", stringType);\n    addMethod(registry, datePrototype, \"toTimeString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleDateString\", stringType);\n    addMethod(registry, datePrototype, \"toLocaleTimeString\", stringType);\n    addMethod(registry, datePrototype, \"valueOf\", numberType);\n    addMethod(registry, datePrototype, \"getTime\", numberType);\n    addMethod(registry, datePrototype, \"getFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"getMonth\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"getDate\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"getDay\", numberType);\n    addMethod(registry, datePrototype, \"getUTCDay\", numberType);\n    addMethod(registry, datePrototype, \"getHours\", numberType);\n    addMethod(registry, datePrototype, \"getUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"getMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"getSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"getMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"getTimezoneOffset\", numberType);\n    addMethod(registry, datePrototype, \"setTime\", numberType);\n    addMethod(registry, datePrototype, \"setMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMilliseconds\", numberType);\n    addMethod(registry, datePrototype, \"setSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setUTCSeconds\", numberType);\n    addMethod(registry, datePrototype, \"setMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMinutes\", numberType);\n    addMethod(registry, datePrototype, \"setHours\", numberType);\n    addMethod(registry, datePrototype, \"setUTCHours\", numberType);\n    addMethod(registry, datePrototype, \"setDate\", numberType);\n    addMethod(registry, datePrototype, \"setUTCDate\", numberType);\n    addMethod(registry, datePrototype, \"setMonth\", numberType);\n    addMethod(registry, datePrototype, \"setUTCMonth\", numberType);\n    addMethod(registry, datePrototype, \"setFullYear\", numberType);\n    addMethod(registry, datePrototype, \"setUTCFullYear\", numberType);\n    addMethod(registry, datePrototype, \"toUTCString\", stringType);\n    addMethod(registry, datePrototype, \"toGMTString\", stringType);\n    ObjectType numberPrototype \u003d registry.getNativeFunctionType(JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, numberPrototype, \"constructor\", numberObjectType);\n    addMethod(registry, numberPrototype, \"toString\", stringType);\n    addMethod(registry, numberPrototype, \"toLocaleString\", stringType);\n    addMethod(registry, numberPrototype, \"valueOf\", numberType);\n    addMethod(registry, numberPrototype, \"toFixed\", stringType);\n    addMethod(registry, numberPrototype, \"toExponential\", stringType);\n    addMethod(registry, numberPrototype, \"toPrecision\", stringType);\n    ObjectType regexpPrototype \u003d registry.getNativeFunctionType(JSTypeNative.REGEXP_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, regexpPrototype, \"constructor\", regexpType);\n    addMethod(registry, regexpPrototype, \"exec\", registry.createNullableType(arrayType));\n    addMethod(registry, regexpPrototype, \"test\", booleanType);\n    addMethod(registry, regexpPrototype, \"toString\", stringType);\n    regexpType.defineDeclaredProperty(\"source\", stringType, true);\n    regexpType.defineDeclaredProperty(\"global\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"ignoreCase\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"multiline\", booleanType, true);\n    regexpType.defineDeclaredProperty(\"lastIndex\", numberType, true);\n    ObjectType stringPrototype \u003d registry.getNativeFunctionType(JSTypeNative.STRING_OBJECT_FUNCTION_TYPE).getPrototype();\n    addMethod(registry, stringPrototype, \"constructor\", stringObjectType);\n    addMethod(registry, stringPrototype, \"toString\", stringType);\n    addMethod(registry, stringPrototype, \"valueOf\", stringType);\n    addMethod(registry, stringPrototype, \"charAt\", stringType);\n    addMethod(registry, stringPrototype, \"charCodeAt\", numberType);\n    addMethod(registry, stringPrototype, \"concat\", stringType);\n    addMethod(registry, stringPrototype, \"indexOf\", numberType);\n    addMethod(registry, stringPrototype, \"lastIndexOf\", numberType);\n    addMethod(registry, stringPrototype, \"localeCompare\", numberType);\n    addMethod(registry, stringPrototype, \"match\", registry.createNullableType(arrayType));\n    addMethod(registry, stringPrototype, \"replace\", stringType);\n    addMethod(registry, stringPrototype, \"search\", numberType);\n    addMethod(registry, stringPrototype, \"slice\", stringType);\n    addMethod(registry, stringPrototype, \"split\", arrayType);\n    addMethod(registry, stringPrototype, \"substring\", stringType);\n    addMethod(registry, stringPrototype, \"toLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleLowerCase\", stringType);\n    addMethod(registry, stringPrototype, \"toUpperCase\", stringType);\n    addMethod(registry, stringPrototype, \"toLocaleUpperCase\", stringType);\n    stringObjectType.defineDeclaredProperty(\"length\", numberType, true);\n}",
      "path": "test/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java",
      "functionStartLine": 225,
      "functionName": "addNativeProperties",
      "functionAnnotation": "",
      "functionDoc": "Adds a basic set of properties to the native types.\n"
    }
  }
}