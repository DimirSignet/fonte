{
  "origin": "codeshovel",
  "repositoryName": "Closure-85b",
  "repositoryPath": "/tmp/Closure-85b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "transformBlock",
  "functionId": "transformBlock___node-AstNode",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 158,
  "functionEndLine": 172,
  "numCommitsSeen": 28,
  "timeTaken": 2555,
  "changeHistory": [
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
    "458118289064379bc22acfc7fd991686a4b062f1"
  ],
  "changeHistoryShort": {
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": "Ybodychange",
    "458118289064379bc22acfc7fd991686a4b062f1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/02 17:44:46 by nicksantos\n\n        fix RAI when comparing two types that are always equal.\n        Fixes issue 172\n\n        R\u003dacleung\n        DELTA\u003d20  (19 added, 0 deleted, 1 changed)\n\nChange on 2010/07/03 08:52:08 by johnlenz\n\n        Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.\n\n        R\u003dacleung\n        DELTA\u003d30  (0 added, 2 deleted, 28 changed)\n\nChange on 2010/07/07 11:56:02 by johnlenz\n\n        Reduce the memory cost of generating source maps by reducing the number\n        of property structure objects that are created.  We do this by taking\n        advantage of the fact the property list objects are immutable and can be\n        shared between Nodes.  The source file prop is then shared between\n        every Node in the AST for a given source file, reducing the the number\n        of property nodes used to store this information from O(ast-nodes) to\n        O(source-files).\n\n        R\u003dbowdidge\n        DELTA\u003d122  (68 added, 1 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/7/10, 3:14 PM",
      "commitName": "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/29/10, 2:10 PM",
      "commitNameOld": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private Node transformBlock(AstNode node) {\n    Node irNode \u003d transform(node);\n    if (irNode.getType() !\u003d Token.BLOCK) {\n        if (irNode.getType() \u003d\u003d Token.EMPTY) {\n            irNode.setType(Token.BLOCK);\n            irNode.setWasEmptyNode(true);\n        } else {\n            Node newBlock \u003d newNode(Token.BLOCK, irNode);\n            newBlock.setLineno(irNode.getLineno());\n            newBlock.setCharno(irNode.getCharno());\n            irNode \u003d newBlock;\n        }\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 187,
      "functionName": "transformBlock",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,15 @@\n private Node transformBlock(AstNode node) {\n     Node irNode \u003d transform(node);\n     if (irNode.getType() !\u003d Token.BLOCK) {\n         if (irNode.getType() \u003d\u003d Token.EMPTY) {\n             irNode.setType(Token.BLOCK);\n             irNode.setWasEmptyNode(true);\n         } else {\n-            Node newBlock \u003d new Node(Token.BLOCK, irNode, irNode.getLineno(), irNode.getCharno());\n+            Node newBlock \u003d newNode(Token.BLOCK, irNode);\n+            newBlock.setLineno(irNode.getLineno());\n+            newBlock.setCharno(irNode.getCharno());\n             irNode \u003d newBlock;\n         }\n     }\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "458118289064379bc22acfc7fd991686a4b062f1": {
      "type": "Yintroduced",
      "commitMessage": "Move NodeTypeNormalizations into the IRFactory. (John)\nR\u003drobert\nDELTA\u003d42  (22 added, 7 deleted, 13 changed)\n\nCreate the DependencyInfo interface.\nMake CompilerInput an implementation of DependencyInfo.\nOpen source it. (Nick)\nR\u003dandrew\nDELTA\u003d279  (185 added, 65 deleted, 29 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@157 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/26/10, 11:52 AM",
      "commitName": "458118289064379bc22acfc7fd991686a4b062f1",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,13 @@\n+private Node transformBlock(AstNode node) {\n+    Node irNode \u003d transform(node);\n+    if (irNode.getType() !\u003d Token.BLOCK) {\n+        if (irNode.getType() \u003d\u003d Token.EMPTY) {\n+            irNode.setType(Token.BLOCK);\n+            irNode.setWasEmptyNode(true);\n+        } else {\n+            Node newBlock \u003d new Node(Token.BLOCK, irNode, irNode.getLineno(), irNode.getCharno());\n+            irNode \u003d newBlock;\n+        }\n+    }\n+    return irNode;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node transformBlock(AstNode node) {\n    Node irNode \u003d transform(node);\n    if (irNode.getType() !\u003d Token.BLOCK) {\n        if (irNode.getType() \u003d\u003d Token.EMPTY) {\n            irNode.setType(Token.BLOCK);\n            irNode.setWasEmptyNode(true);\n        } else {\n            Node newBlock \u003d new Node(Token.BLOCK, irNode, irNode.getLineno(), irNode.getCharno());\n            irNode \u003d newBlock;\n        }\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 173,
      "functionName": "transformBlock",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}