{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MarkNoSideEffectCalls.java",
  "functionName": "visit",
  "functionId": "$visit___traversal-NodeTraversal__node-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 120,
  "functionEndLine": 159,
  "numCommitsSeen": 14,
  "timeTaken": 942,
  "changeHistory": [
    "4bbd3393dab8fdd079f0f0c1d84569685c36d0e8",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "a095236ba70304d61b8ec02ea316d3504cc0ea1d",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4bbd3393dab8fdd079f0f0c1d84569685c36d0e8": "Ybodychange",
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "a095236ba70304d61b8ec02ea316d3504cc0ea1d": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bbd3393dab8fdd079f0f0c1d84569685c36d0e8": {
      "type": "Ybodychange",
      "commitMessage": "Side-effect analysis improvements\nfixes issue 1004\nR\u003dblickly,johnlenz\n",
      "commitDate": "5/31/13, 9:18 PM",
      "commitName": "4bbd3393dab8fdd079f0f0c1d84569685c36d0e8",
      "commitAuthor": "Nick Santos",
      "commitDateOld": "1/8/13, 12:15 PM",
      "commitNameOld": "f0ff2971eca336e950929b3ee0d80155338bb1dd",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 143.34,
      "commitsBetweenForRepo": 296,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal traversal, Node node, Node parent) {\n    if (!node.isCall() \u0026\u0026 !node.isNew()) {\n        return;\n    }\n    Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n    if (definitions \u003d\u003d null) {\n        return;\n    }\n    boolean maybeFunction \u003d false;\n    for (Definition def : definitions) {\n        Node lValue \u003d def.getLValue();\n        Preconditions.checkNotNull(lValue);\n        if (definitionTypeContainsFunctionType(def)) {\n            maybeFunction \u003d true;\n            if (!noSideEffectFunctionNames.contains(lValue)) {\n                return;\n            }\n        }\n    }\n    if (maybeFunction) {\n        node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java",
      "functionStartLine": 174,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,24 @@\n @Override\n public void visit(NodeTraversal traversal, Node node, Node parent) {\n     if (!node.isCall() \u0026\u0026 !node.isNew()) {\n         return;\n     }\n     Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n     if (definitions \u003d\u003d null) {\n         return;\n     }\n+    boolean maybeFunction \u003d false;\n     for (Definition def : definitions) {\n         Node lValue \u003d def.getLValue();\n         Preconditions.checkNotNull(lValue);\n-        if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n-            return;\n+        if (definitionTypeContainsFunctionType(def)) {\n+            maybeFunction \u003d true;\n+            if (!noSideEffectFunctionNames.contains(lValue)) {\n+                return;\n+            }\n         }\n     }\n-    node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n+    if (maybeFunction) {\n+        node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 211.11,
      "commitsBetweenForRepo": 535,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal traversal, Node node, Node parent) {\n    if (!node.isCall() \u0026\u0026 !node.isNew()) {\n        return;\n    }\n    Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n    if (definitions \u003d\u003d null) {\n        return;\n    }\n    for (Definition def : definitions) {\n        Node lValue \u003d def.getLValue();\n        Preconditions.checkNotNull(lValue);\n        if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n            return;\n        }\n    }\n    node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n}",
      "path": "src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java",
      "functionStartLine": 176,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n @Override\n public void visit(NodeTraversal traversal, Node node, Node parent) {\n-    if (!NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.isNew(node)) {\n+    if (!node.isCall() \u0026\u0026 !node.isNew()) {\n         return;\n     }\n     Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n     if (definitions \u003d\u003d null) {\n         return;\n     }\n     for (Definition def : definitions) {\n         Node lValue \u003d def.getLValue();\n         Preconditions.checkNotNull(lValue);\n         if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n             return;\n         }\n     }\n     node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a095236ba70304d61b8ec02ea316d3504cc0ea1d": {
      "type": "Ybodychange",
      "commitMessage": "\nStore finer grain side-effect information on call nodes, also gather\nand a store call \"result locality\" information on call nodes.\n\nR\u003dnicksantos\nDELTA\u003d243  (210 added, 0 deleted, 33 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d249459\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@459 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/23/10, 5:03 PM",
      "commitName": "a095236ba70304d61b8ec02ea316d3504cc0ea1d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 10.24,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal traversal, Node node, Node parent) {\n    if (!NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.isNew(node)) {\n        return;\n    }\n    Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n    if (definitions \u003d\u003d null) {\n        return;\n    }\n    for (Definition def : definitions) {\n        Node lValue \u003d def.getLValue();\n        Preconditions.checkNotNull(lValue);\n        if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n            return;\n        }\n    }\n    node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n}",
      "path": "src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java",
      "functionStartLine": 176,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n @Override\n public void visit(NodeTraversal traversal, Node node, Node parent) {\n     if (!NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.isNew(node)) {\n         return;\n     }\n     Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n     if (definitions \u003d\u003d null) {\n         return;\n     }\n     for (Definition def : definitions) {\n         Node lValue \u003d def.getLValue();\n         Preconditions.checkNotNull(lValue);\n         if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n             return;\n         }\n     }\n-    node.setIsNoSideEffectsCall();\n+    node.setSideEffectFlags(Node.NO_SIDE_EFFECTS);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+@Override\n+public void visit(NodeTraversal traversal, Node node, Node parent) {\n+    if (!NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.isNew(node)) {\n+        return;\n+    }\n+    Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n+    if (definitions \u003d\u003d null) {\n+        return;\n+    }\n+    for (Definition def : definitions) {\n+        Node lValue \u003d def.getLValue();\n+        Preconditions.checkNotNull(lValue);\n+        if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n+            return;\n+        }\n+    }\n+    node.setIsNoSideEffectsCall();\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void visit(NodeTraversal traversal, Node node, Node parent) {\n    if (!NodeUtil.isCall(node) \u0026\u0026 !NodeUtil.isNew(node)) {\n        return;\n    }\n    Collection\u003cDefinition\u003e definitions \u003d defFinder.getDefinitionsReferencedAt(node.getFirstChild());\n    if (definitions \u003d\u003d null) {\n        return;\n    }\n    for (Definition def : definitions) {\n        Node lValue \u003d def.getLValue();\n        Preconditions.checkNotNull(lValue);\n        if (!noSideEffectFunctionNames.contains(lValue) \u0026\u0026 definitionTypeContainsFunctionType(def)) {\n            return;\n        }\n    }\n    node.setIsNoSideEffectsCall();\n}",
      "path": "src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java",
      "functionStartLine": 177,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}