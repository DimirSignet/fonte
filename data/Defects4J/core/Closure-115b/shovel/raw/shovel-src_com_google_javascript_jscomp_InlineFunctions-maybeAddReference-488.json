{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineFunctions.java",
  "functionName": "maybeAddReference",
  "functionId": "$maybeAddReference___t-NodeTraversal__fs-FunctionState__callNode-Node__module-JSModule",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineFunctions.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 488,
  "functionEndLine": 513,
  "numCommitsSeen": 43,
  "timeTaken": 2083,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,15 @@\n+void maybeAddReference(NodeTraversal t, FunctionState fs, Node callNode, JSModule module) {\n+    if (!fs.canInline()) {\n+        return;\n+    }\n+    boolean referenceAdded \u003d false;\n+    InliningMode mode \u003d fs.canInlineDirectly() ? InliningMode.DIRECT : InliningMode.BLOCK;\n+    referenceAdded \u003d maybeAddReferenceUsingMode(t, fs, callNode, module, mode);\n+    if (!referenceAdded \u0026\u0026 mode \u003d\u003d InliningMode.DIRECT \u0026\u0026 blockFunctionInliningEnabled) {\n+        mode \u003d InliningMode.BLOCK;\n+        referenceAdded \u003d maybeAddReferenceUsingMode(t, fs, callNode, module, mode);\n+    }\n+    if (!referenceAdded) {\n+        fs.setRemove(false);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void maybeAddReference(NodeTraversal t, FunctionState fs, Node callNode, JSModule module) {\n    if (!fs.canInline()) {\n        return;\n    }\n    boolean referenceAdded \u003d false;\n    InliningMode mode \u003d fs.canInlineDirectly() ? InliningMode.DIRECT : InliningMode.BLOCK;\n    referenceAdded \u003d maybeAddReferenceUsingMode(t, fs, callNode, module, mode);\n    if (!referenceAdded \u0026\u0026 mode \u003d\u003d InliningMode.DIRECT \u0026\u0026 blockFunctionInliningEnabled) {\n        mode \u003d InliningMode.BLOCK;\n        referenceAdded \u003d maybeAddReferenceUsingMode(t, fs, callNode, module, mode);\n    }\n    if (!referenceAdded) {\n        fs.setRemove(false);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 383,
      "functionName": "maybeAddReference",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}