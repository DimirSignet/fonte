{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionArgumentInjector.java",
  "functionName": "gatherLocalNames",
  "functionId": "gatherLocalNames___n-Node__names-Set__String__",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
  "functionAnnotation": "",
  "functionDoc": "Gather any names declared in the local scope.\n",
  "functionStartLine": 472,
  "functionEndLine": 490,
  "numCommitsSeen": 24,
  "timeTaken": 1247,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n    if (n.isFunction()) {\n        if (NodeUtil.isFunctionDeclaration(n)) {\n            names.add(n.getFirstChild().getString());\n        }\n        return;\n    } else if (n.isName()) {\n        switch(n.getParent().getType()) {\n            case Token.VAR:\n            case Token.CATCH:\n                names.add(n.getString());\n        }\n    }\n    for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        gatherLocalNames(c, names);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 472,
      "functionName": "gatherLocalNames",
      "functionAnnotation": "",
      "functionDoc": "Gather any names declared in the local scope.\n",
      "diff": "@@ -1,17 +1,17 @@\n private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n-    if (n.getType() \u003d\u003d Token.FUNCTION) {\n+    if (n.isFunction()) {\n         if (NodeUtil.isFunctionDeclaration(n)) {\n             names.add(n.getFirstChild().getString());\n         }\n         return;\n-    } else if (n.getType() \u003d\u003d Token.NAME) {\n+    } else if (n.isName()) {\n         switch(n.getParent().getType()) {\n             case Token.VAR:\n             case Token.CATCH:\n                 names.add(n.getString());\n         }\n     }\n     for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n         gatherLocalNames(c, names);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/16/10, 10:20 AM",
      "commitNameOld": "6e3eb4f7619179ba6c23db2af7549ef02f588c35",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 43.12,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n    if (n.getType() \u003d\u003d Token.FUNCTION) {\n        if (NodeUtil.isFunctionDeclaration(n)) {\n            names.add(n.getFirstChild().getString());\n        }\n        return;\n    } else if (n.getType() \u003d\u003d Token.NAME) {\n        switch(n.getParent().getType()) {\n            case Token.VAR:\n            case Token.CATCH:\n                names.add(n.getString());\n        }\n    }\n    for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        gatherLocalNames(c, names);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 434,
      "functionName": "gatherLocalNames",
      "functionAnnotation": "",
      "functionDoc": "Gather any names declared in the local scope.\n",
      "diff": "@@ -1,13 +1,17 @@\n private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n-    Preconditions.checkState(n.getType() !\u003d Token.FUNCTION);\n-    if (n.getType() \u003d\u003d Token.NAME) {\n+    if (n.getType() \u003d\u003d Token.FUNCTION) {\n+        if (NodeUtil.isFunctionDeclaration(n)) {\n+            names.add(n.getFirstChild().getString());\n+        }\n+        return;\n+    } else if (n.getType() \u003d\u003d Token.NAME) {\n         switch(n.getParent().getType()) {\n             case Token.VAR:\n             case Token.CATCH:\n                 names.add(n.getString());\n         }\n     }\n     for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n         gatherLocalNames(c, names);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n+    Preconditions.checkState(n.getType() !\u003d Token.FUNCTION);\n+    if (n.getType() \u003d\u003d Token.NAME) {\n+        switch(n.getParent().getType()) {\n+            case Token.VAR:\n+            case Token.CATCH:\n+                names.add(n.getString());\n+        }\n+    }\n+    for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n+        gatherLocalNames(c, names);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static void gatherLocalNames(Node n, Set\u003cString\u003e names) {\n    Preconditions.checkState(n.getType() !\u003d Token.FUNCTION);\n    if (n.getType() \u003d\u003d Token.NAME) {\n        switch(n.getParent().getType()) {\n            case Token.VAR:\n            case Token.CATCH:\n                names.add(n.getString());\n        }\n    }\n    for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n        gatherLocalNames(c, names);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 433,
      "functionName": "gatherLocalNames",
      "functionAnnotation": "",
      "functionDoc": "Gather any names declared in the local scope.\n"
    }
  }
}