{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodeGenerator.java",
  "functionName": "isOneExactlyFunctionOrDo",
  "functionId": "isOneExactlyFunctionOrDo___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodeGenerator.java",
  "functionAnnotation": "",
  "functionDoc": "\n@return Whether the Node is a DO or FUNCTION (with or without\nlabels).\n",
  "functionStartLine": 914,
  "functionEndLine": 934,
  "numCommitsSeen": 85,
  "timeTaken": 4872,
  "changeHistory": [
    "39f629a8cfaab37da55288010640d7e516000b1f",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "dff6e0114f19c20aeb63393d67aa0880ff5745b5"
  ],
  "changeHistoryShort": {
    "39f629a8cfaab37da55288010640d7e516000b1f": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "dff6e0114f19c20aeb63393d67aa0880ff5745b5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39f629a8cfaab37da55288010640d7e516000b1f": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace calls of the form \"Node.getType() !\u003d Token.XX\" with\n\"!Node.isXX()\" calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3706\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1598 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/14/11, 6:13 PM",
      "commitName": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 3.06,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isOneExactlyFunctionOrDo(Node n) {\n    if (n.isLabel()) {\n        Node labeledStatement \u003d n.getLastChild();\n        if (!labeledStatement.isBlock()) {\n            return isOneExactlyFunctionOrDo(labeledStatement);\n        } else {\n            if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n            } else {\n                return false;\n            }\n        }\n    } else {\n        return (n.isFunction() || n.isDo());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 820,
      "functionName": "isOneExactlyFunctionOrDo",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether the Node is a DO or FUNCTION (with or without\nlabels).\n",
      "diff": "@@ -1,16 +1,16 @@\n private boolean isOneExactlyFunctionOrDo(Node n) {\n     if (n.isLabel()) {\n         Node labeledStatement \u003d n.getLastChild();\n-        if (labeledStatement.getType() !\u003d Token.BLOCK) {\n+        if (!labeledStatement.isBlock()) {\n             return isOneExactlyFunctionOrDo(labeledStatement);\n         } else {\n             if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                 return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n             } else {\n                 return false;\n             }\n         }\n     } else {\n         return (n.isFunction() || n.isDo());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/7/11, 2:21 PM",
      "commitNameOld": "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 2.76,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isOneExactlyFunctionOrDo(Node n) {\n    if (n.isLabel()) {\n        Node labeledStatement \u003d n.getLastChild();\n        if (labeledStatement.getType() !\u003d Token.BLOCK) {\n            return isOneExactlyFunctionOrDo(labeledStatement);\n        } else {\n            if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n            } else {\n                return false;\n            }\n        }\n    } else {\n        return (n.isFunction() || n.isDo());\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 820,
      "functionName": "isOneExactlyFunctionOrDo",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether the Node is a DO or FUNCTION (with or without\nlabels).\n",
      "diff": "@@ -1,16 +1,16 @@\n private boolean isOneExactlyFunctionOrDo(Node n) {\n-    if (n.getType() \u003d\u003d Token.LABEL) {\n+    if (n.isLabel()) {\n         Node labeledStatement \u003d n.getLastChild();\n         if (labeledStatement.getType() !\u003d Token.BLOCK) {\n             return isOneExactlyFunctionOrDo(labeledStatement);\n         } else {\n             if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                 return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n             } else {\n                 return false;\n             }\n         }\n     } else {\n-        return (n.getType() \u003d\u003d Token.FUNCTION || n.getType() \u003d\u003d Token.DO);\n+        return (n.isFunction() || n.isDo());\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/28/10, 5:30 PM",
      "commitNameOld": "9925370292834ea846727f1f9db76af0d40261df",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean isOneExactlyFunctionOrDo(Node n) {\n    if (n.getType() \u003d\u003d Token.LABEL) {\n        Node labeledStatement \u003d n.getLastChild();\n        if (labeledStatement.getType() !\u003d Token.BLOCK) {\n            return isOneExactlyFunctionOrDo(labeledStatement);\n        } else {\n            if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n            } else {\n                return false;\n            }\n        }\n    } else {\n        return (n.getType() \u003d\u003d Token.FUNCTION || n.getType() \u003d\u003d Token.DO);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 709,
      "functionName": "isOneExactlyFunctionOrDo",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether the Node is a DO or FUNCTION (with or without\nlabels).\n",
      "diff": "",
      "extendedDetails": {}
    },
    "dff6e0114f19c20aeb63393d67aa0880ff5745b5": {
      "type": "Yintroduced",
      "commitMessage": "\nChange on 2010/06/25 by johnlenz\n\n\tPreserve blocks around problematic labelled statements.\n\tFixes issue 190\n\n\tR\u003dnicksantos\n\tDELTA\u003d95  (86 added, 2 deleted, 7 changed)\n\nChange on 2010/06/25 by nicksantos\n\n\tmore descriptive error messaging for CheckReturns.\n\n\n\tR\u003dacleung\n\tDELTA\u003d59  (21 added, 2 deleted, 36 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d42001\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@255 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/25/10, 4:56 PM",
      "commitName": "dff6e0114f19c20aeb63393d67aa0880ff5745b5",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,16 @@\n+private boolean isOneExactlyFunctionOrDo(Node n) {\n+    if (n.getType() \u003d\u003d Token.LABEL) {\n+        Node labeledStatement \u003d n.getLastChild();\n+        if (labeledStatement.getType() !\u003d Token.BLOCK) {\n+            return isOneExactlyFunctionOrDo(labeledStatement);\n+        } else {\n+            if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n+                return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n+            } else {\n+                return false;\n+            }\n+        }\n+    } else {\n+        return (n.getType() \u003d\u003d Token.FUNCTION || n.getType() \u003d\u003d Token.DO);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isOneExactlyFunctionOrDo(Node n) {\n    if (n.getType() \u003d\u003d Token.LABEL) {\n        Node labeledStatement \u003d n.getLastChild();\n        if (labeledStatement.getType() !\u003d Token.BLOCK) {\n            return isOneExactlyFunctionOrDo(labeledStatement);\n        } else {\n            if (getNonEmptyChildCount(n, 2) \u003d\u003d 1) {\n                return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n            } else {\n                return false;\n            }\n        }\n    } else {\n        return (n.getType() \u003d\u003d Token.FUNCTION || n.getType() \u003d\u003d Token.DO);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodeGenerator.java",
      "functionStartLine": 708,
      "functionName": "isOneExactlyFunctionOrDo",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether the Node is a DO or FUNCTION (with or without\nlabels).\n"
    }
  }
}