{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodePrinter.java",
  "functionName": "endFile",
  "functionId": "$endFile",
  "sourceFilePath": "src/com/google/javascript/jscomp/CodePrinter.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 521,
  "functionEndLine": 548,
  "numCommitsSeen": 36,
  "timeTaken": 1688,
  "changeHistory": [
    "0a1685881280c60d286e9f5ac82128dbd9f46ad9",
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
    "cd40201a2437da125ac492b21f13c8ad200b96bd"
  ],
  "changeHistoryShort": {
    "0a1685881280c60d286e9f5ac82128dbd9f46ad9": "Ybodychange",
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": "Ybodychange",
    "cd40201a2437da125ac492b21f13c8ad200b96bd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a1685881280c60d286e9f5ac82128dbd9f46ad9": {
      "type": "Ybodychange",
      "commitMessage": "\nFixes a bug whereby lines cut by the code printer\nb/w identifier chars could be incorrectly uncut, eg, instanceof\\nfoo -\u003e\ninstanceoffoo. This fix leaves a space where the cut was. Ideally we would only leave this\nspace when absolutely necessary, though the cost of it is low.\n\nR\u003dacleung\nDELTA\u003d11  (4 added, 1 deleted, 6 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4312\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1806 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/1/12, 3:24 PM",
      "commitName": "0a1685881280c60d286e9f5ac82128dbd9f46ad9",
      "commitAuthor": "mwr@google.com",
      "commitDateOld": "2/6/12, 4:13 PM",
      "commitNameOld": "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
      "commitAuthorOld": "mwr@google.com",
      "daysBetweenCommits": 23.97,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nvoid endFile() {\n    super.endFile();\n    if (!preferLineBreakAtEndOfFile) {\n        return;\n    }\n    if (lineLength \u003e lineLengthThreshold / 2) {\n        append(\";\");\n        startNewLine();\n    } else if (prevCutPosition \u003e 0) {\n        code.setCharAt(prevCutPosition, \u0027 \u0027);\n        lineStartPosition \u003d prevLineStartPosition;\n        lineLength \u003d code.length() - lineStartPosition;\n        reportLineCut(lineIndex, prevCutPosition + 1, false);\n        lineIndex--;\n        prevCutPosition \u003d 0;\n        prevLineStartPosition \u003d 0;\n        append(\";\");\n        startNewLine();\n    } else {\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 514,
      "functionName": "endFile",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,22 @@\n @Override\n void endFile() {\n     super.endFile();\n     if (!preferLineBreakAtEndOfFile) {\n         return;\n     }\n     if (lineLength \u003e lineLengthThreshold / 2) {\n         append(\";\");\n         startNewLine();\n     } else if (prevCutPosition \u003e 0) {\n-        for (int i \u003d prevCutPosition; i \u003c code.length() - 1; i++) {\n-            code.setCharAt(i, code.charAt(i + 1));\n-        }\n-        code.setLength(code.length() - 1);\n+        code.setCharAt(prevCutPosition, \u0027 \u0027);\n         lineStartPosition \u003d prevLineStartPosition;\n         lineLength \u003d code.length() - lineStartPosition;\n-        reportLineCut(lineIndex, prevCutPosition, false);\n+        reportLineCut(lineIndex, prevCutPosition + 1, false);\n         lineIndex--;\n         prevCutPosition \u003d 0;\n         prevLineStartPosition \u003d 0;\n         append(\";\");\n         startNewLine();\n     } else {\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "04ba01ff0c7a9a9c64205303a9dcca346da501a5": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd support for prefer line break at end of file. This allows us to insert code\nbetween files without affecting the source maps or deobfuscation.\n\nThis solution shifts an existing line break if it is near eof, which may result\nin a line longer than the normal line length advisory limit. The only\nalternative to that is to miss many eofs, which can impact the ability to place\ninterstitial code, or to place a break at the end of every file, which leads to\na hugely excessive number of breaks.\n\nWe could probably do better if we tracked line length across file boundaries\nwhich we currently do not.\n\nR\u003dacleung,johnlenz\nDELTA\u003d149  (128 added, 0 deleted, 21 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4172\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1762 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/6/12, 4:13 PM",
      "commitName": "04ba01ff0c7a9a9c64205303a9dcca346da501a5",
      "commitAuthor": "mwr@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 88.32,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nvoid endFile() {\n    super.endFile();\n    if (!preferLineBreakAtEndOfFile) {\n        return;\n    }\n    if (lineLength \u003e lineLengthThreshold / 2) {\n        append(\";\");\n        startNewLine();\n    } else if (prevCutPosition \u003e 0) {\n        for (int i \u003d prevCutPosition; i \u003c code.length() - 1; i++) {\n            code.setCharAt(i, code.charAt(i + 1));\n        }\n        code.setLength(code.length() - 1);\n        lineStartPosition \u003d prevLineStartPosition;\n        lineLength \u003d code.length() - lineStartPosition;\n        reportLineCut(lineIndex, prevCutPosition, false);\n        lineIndex--;\n        prevCutPosition \u003d 0;\n        prevLineStartPosition \u003d 0;\n        append(\";\");\n        startNewLine();\n    } else {\n    }\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 514,
      "functionName": "endFile",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,4 +1,25 @@\n @Override\n void endFile() {\n-    maybeEndStatement();\n+    super.endFile();\n+    if (!preferLineBreakAtEndOfFile) {\n+        return;\n+    }\n+    if (lineLength \u003e lineLengthThreshold / 2) {\n+        append(\";\");\n+        startNewLine();\n+    } else if (prevCutPosition \u003e 0) {\n+        for (int i \u003d prevCutPosition; i \u003c code.length() - 1; i++) {\n+            code.setCharAt(i, code.charAt(i + 1));\n+        }\n+        code.setLength(code.length() - 1);\n+        lineStartPosition \u003d prevLineStartPosition;\n+        lineLength \u003d code.length() - lineStartPosition;\n+        reportLineCut(lineIndex, prevCutPosition, false);\n+        lineIndex--;\n+        prevCutPosition \u003d 0;\n+        prevLineStartPosition \u003d 0;\n+        append(\";\");\n+        startNewLine();\n+    } else {\n+    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd40201a2437da125ac492b21f13c8ad200b96bd": {
      "type": "Yintroduced",
      "commitMessage": "\npretty print in the ExternExportsPass, try #2\nMake sure the source file ends with a semi-colon and newline\nwhen pretty printed.\nChanges some of the printing that\u0027s\ndone in Compiler.jar (new since try #1)\nFixes issue 309\n\nR\u003djschorr\nDELTA\u003d87  (24 added, 12 deleted, 51 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d220\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@671 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/6/11, 5:42 PM",
      "commitName": "cd40201a2437da125ac492b21f13c8ad200b96bd",
      "commitAuthor": "nicksantos@google.com",
      "diff": "@@ -0,0 +1,4 @@\n+@Override\n+void endFile() {\n+    maybeEndStatement();\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nvoid endFile() {\n    maybeEndStatement();\n}",
      "path": "src/com/google/javascript/jscomp/CodePrinter.java",
      "functionStartLine": 370,
      "functionName": "endFile",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}