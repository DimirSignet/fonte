{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeTraversal.java",
  "functionName": "traverseFunction",
  "functionId": "traverseFunction___n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeTraversal.java",
  "functionAnnotation": "",
  "functionDoc": "Traverses a function.\n",
  "functionStartLine": 544,
  "functionEndLine": 577,
  "numCommitsSeen": 29,
  "timeTaken": 1824,
  "changeHistory": [
    "4f2e95df78fb35087e9257f3f8deaa52d64586c8",
    "4ff5d0b989360d785c63978faf8eed6284e030e1",
    "7e93d521cb67ce33018315234fafe8a5aa30ee1e",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335",
    "7efb21a25bb44dcfc513d584c6b191aeacfba367",
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4f2e95df78fb35087e9257f3f8deaa52d64586c8": "Yformatchange",
    "4ff5d0b989360d785c63978faf8eed6284e030e1": "Yformatchange",
    "7e93d521cb67ce33018315234fafe8a5aa30ee1e": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": "Ybodychange",
    "7efb21a25bb44dcfc513d584c6b191aeacfba367": "Yformatchange",
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4f2e95df78fb35087e9257f3f8deaa52d64586c8": {
      "type": "Yformatchange",
      "commitMessage": "Fix bugs in scope-change reporting found by the scope-change sanity check.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45177496\n",
      "commitDate": "4/17/13, 2:42 PM",
      "commitName": "4f2e95df78fb35087e9257f3f8deaa52d64586c8",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "4/9/13, 4:40 PM",
      "commitNameOld": "d28e8865a62eb3b6525c86f90009d3fea5232122",
      "commitAuthorOld": "Ben Lickly",
      "daysBetweenCommits": 7.92,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.isFunction());\n    final Node fnName \u003d n.getFirstChild();\n    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n    if (!isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock(), body);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 544,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "4ff5d0b989360d785c63978faf8eed6284e030e1": {
      "type": "Yformatchange",
      "commitMessage": "Make Peephole and UnreachableCodeElimination only work on functions that have changed since the last run.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d44109570\n",
      "commitDate": "3/20/13, 9:48 AM",
      "commitName": "4ff5d0b989360d785c63978faf8eed6284e030e1",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "7/30/12, 3:33 PM",
      "commitNameOld": "6588923bf1f47ee23764ea41f3e73febb92e3053",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 232.76,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.isFunction());\n    final Node fnName \u003d n.getFirstChild();\n    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n    if (!isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock(), body);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 540,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "7e93d521cb67ce33018315234fafe8a5aa30ee1e": {
      "type": "Ybodychange",
      "commitMessage": "\nPrevent unsupport JavaScript variants that Rhino can parse from\ncrashing the compiler in \"ide mode\".\nFixes issue 663\n\nR\u003dnicksantos\nDELTA\u003d42  (41 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4239\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1786 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/21/12, 9:27 AM",
      "commitName": "7e93d521cb67ce33018315234fafe8a5aa30ee1e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/14/11, 6:13 PM",
      "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 98.63,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.isFunction());\n    final Node fnName \u003d n.getFirstChild();\n    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n    if (!isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock(), body);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 510,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "@@ -1,20 +1,20 @@\n private void traverseFunction(Node n, Node parent) {\n     Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n     Preconditions.checkState(n.isFunction());\n     final Node fnName \u003d n.getFirstChild();\n     boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n     if (!isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     curNode \u003d n;\n     pushScope(n);\n     if (isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     final Node args \u003d fnName.getNext();\n     final Node body \u003d args.getNext();\n     traverseBranch(args, n);\n-    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock());\n+    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock(), body);\n     traverseBranch(body, n);\n     popScope();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "9/21/11, 5:18 PM",
      "commitNameOld": "dff730a3759cad9c491f72d9905eee93962d3d35",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 49.68,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.isFunction());\n    final Node fnName \u003d n.getFirstChild();\n    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n    if (!isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock());\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 504,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "@@ -1,20 +1,20 @@\n private void traverseFunction(Node n, Node parent) {\n     Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n-    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n+    Preconditions.checkState(n.isFunction());\n     final Node fnName \u003d n.getFirstChild();\n     boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n     if (!isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     curNode \u003d n;\n     pushScope(n);\n     if (isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     final Node args \u003d fnName.getNext();\n     final Node body \u003d args.getNext();\n     traverseBranch(args, n);\n-    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n+    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.isBlock());\n     traverseBranch(body, n);\n     popScope();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ebb59a97610015bc41bda7f458dd1428a3a3e335": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/22 by nick\n\n        fix the extern definition of Window.prototype.stop\n\n        R\u003dsiggy\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/22 by john\n\n        \"Anonymous function\" is a confusing term for functions with names.\n        Properly we are usually distinguishing between functions statements\n        (function declarations) and function expressions.\n\n        R\u003dalan\n        DELTA\u003d172  (7 added, 14 deleted, 151 changed)\n\nChange on 2010/04/22 by john\n\n        Standardize the definition of setTimeout/setInterval.\n        Fix for Issue 137\n\n        R\u003dnick\n        DELTA\u003d6  (2 added, 2 deleted, 2 changed)\n\nChange on 2010/04/22 by mark\n\n        Various delegate fixes.\n\n        Give the delegate proxy a name unique from the delegate base so that\n        InstanceObjectType#equals distinguishes them. This is necessary for\n        AmbiguateProperties to work.\n\n        Fix the prototype of the delegate proxy. This makes\n        DisambiguateProperties continue to work.\n\n        Add superclass methods of the delegate base to the delegate proxy.\n\n\n        R\u003dandrew,nada\n        DELTA\u003d526  (383 added, 104 deleted, 39 changed)\n\nChange on 2010/04/23 by john\n\n        Allow variable inlining of function statements. For simplicity  limited to functions defined before first use.\n\n        R\u003dnick\n        DELTA\u003d79  (49 added, 3 deleted, 27 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dhakjvx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@197 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/23/10, 11:31 AM",
      "commitName": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/29/10, 7:04 AM",
      "commitNameOld": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 25.19,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n    final Node fnName \u003d n.getFirstChild();\n    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n    if (!isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (isFunctionExpression) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 483,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "@@ -1,20 +1,20 @@\n private void traverseFunction(Node n, Node parent) {\n     Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n     Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n     final Node fnName \u003d n.getFirstChild();\n-    boolean anonymous \u003d parent !\u003d null \u0026\u0026 NodeUtil.isFunctionAnonymous(n);\n-    if (!anonymous) {\n+    boolean isFunctionExpression \u003d (parent !\u003d null) \u0026\u0026 NodeUtil.isFunctionExpression(n);\n+    if (!isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     curNode \u003d n;\n     pushScope(n);\n-    if (anonymous) {\n+    if (isFunctionExpression) {\n         traverseBranch(fnName, n);\n     }\n     final Node args \u003d fnName.getNext();\n     final Node body \u003d args.getNext();\n     traverseBranch(args, n);\n     Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n     traverseBranch(body, n);\n     popScope();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7efb21a25bb44dcfc513d584c6b191aeacfba367": {
      "type": "Yformatchange",
      "commitMessage": "Remove timestamps from the javadoc, because they screw up the diffs.\nAlso, better error messages.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@5 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/09, 12:46 PM",
      "commitName": "7efb21a25bb44dcfc513d584c6b191aeacfba367",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/6/09, 5:24 PM",
      "commitNameOld": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n    final Node fnName \u003d n.getFirstChild();\n    boolean anonymous \u003d parent !\u003d null \u0026\u0026 NodeUtil.isFunctionAnonymous(n);\n    if (!anonymous) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (anonymous) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 483,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0": {
      "type": "Ybodychange",
      "commitMessage": "A bunch of bug fixes\nAdded the --warning_level\u003d{QUIET|DEFAULT|VERBOSE} flag,\nto match the webservice API\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@3 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/6/09, 5:24 PM",
      "commitName": "0b7eccf2fd3a9293d7b513fbb766d7bc06abd7e0",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 3.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n    final Node fnName \u003d n.getFirstChild();\n    boolean anonymous \u003d parent !\u003d null \u0026\u0026 NodeUtil.isFunctionAnonymous(n);\n    if (!anonymous) {\n        traverseBranch(fnName, n);\n    }\n    curNode \u003d n;\n    pushScope(n);\n    if (anonymous) {\n        traverseBranch(fnName, n);\n    }\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 469,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n",
      "diff": "@@ -1,14 +1,20 @@\n private void traverseFunction(Node n, Node parent) {\n     Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n     Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n     final Node fnName \u003d n.getFirstChild();\n-    traverseBranch(fnName, n);\n+    boolean anonymous \u003d parent !\u003d null \u0026\u0026 NodeUtil.isFunctionAnonymous(n);\n+    if (!anonymous) {\n+        traverseBranch(fnName, n);\n+    }\n     curNode \u003d n;\n     pushScope(n);\n+    if (anonymous) {\n+        traverseBranch(fnName, n);\n+    }\n     final Node args \u003d fnName.getNext();\n     final Node body \u003d args.getNext();\n     traverseBranch(args, n);\n     Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n     traverseBranch(body, n);\n     popScope();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private void traverseFunction(Node n, Node parent) {\n+    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n+    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n+    final Node fnName \u003d n.getFirstChild();\n+    traverseBranch(fnName, n);\n+    curNode \u003d n;\n+    pushScope(n);\n+    final Node args \u003d fnName.getNext();\n+    final Node body \u003d args.getNext();\n+    traverseBranch(args, n);\n+    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n+    traverseBranch(body, n);\n+    popScope();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void traverseFunction(Node n, Node parent) {\n    Preconditions.checkState(n.getChildCount() \u003d\u003d 3);\n    Preconditions.checkState(n.getType() \u003d\u003d Token.FUNCTION);\n    final Node fnName \u003d n.getFirstChild();\n    traverseBranch(fnName, n);\n    curNode \u003d n;\n    pushScope(n);\n    final Node args \u003d fnName.getNext();\n    final Node body \u003d args.getNext();\n    traverseBranch(args, n);\n    Preconditions.checkState(body.getNext() \u003d\u003d null \u0026\u0026 body.getType() \u003d\u003d Token.BLOCK);\n    traverseBranch(body, n);\n    popScope();\n}",
      "path": "src/com/google/javascript/jscomp/NodeTraversal.java",
      "functionStartLine": 469,
      "functionName": "traverseFunction",
      "functionAnnotation": "",
      "functionDoc": "Traverses a function.\n"
    }
  }
}