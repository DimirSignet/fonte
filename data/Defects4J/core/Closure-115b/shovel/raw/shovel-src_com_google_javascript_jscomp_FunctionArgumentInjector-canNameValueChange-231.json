{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionArgumentInjector.java",
  "functionName": "canNameValueChange",
  "functionId": "canNameValueChange___n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
  "functionAnnotation": "",
  "functionDoc": "This is similar to NodeUtil.isLValue except that object properties and\narray member modification aren\u0027t important (\"o\" in \"o.a \u003d 2\" is still \"o\"\nafter assignment, where in as \"o \u003d x\", \"o\" is now \"x\").\n\nThis also looks for the redefinition of a name.\n  function (x){var x;}\n\n@param n The NAME node in question.\n@param parent The parent of the node.\n",
  "functionStartLine": 231,
  "functionEndLine": 236,
  "numCommitsSeen": 24,
  "timeTaken": 1139,
  "changeHistory": [
    "80775334b4cb6aa21a709147cbb26e0eb0eb27e2",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "80775334b4cb6aa21a709147cbb26e0eb0eb27e2": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "80775334b4cb6aa21a709147cbb26e0eb0eb27e2": {
      "type": "Ybodychange",
      "commitMessage": "Fix inlining of functions whose named parameter are assigned in for-in loops.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45305245\n",
      "commitDate": "4/17/13, 2:43 PM",
      "commitName": "80775334b4cb6aa21a709147cbb26e0eb0eb27e2",
      "commitAuthor": "Ben Lickly",
      "commitDateOld": "1/8/13, 12:15 PM",
      "commitNameOld": "f0ff2971eca336e950929b3ee0d80155338bb1dd",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 99.06,
      "commitsBetweenForRepo": 211,
      "commitsBetweenForFile": 1,
      "actualSource": "private static boolean canNameValueChange(Node n, Node parent) {\n    int type \u003d parent.getType();\n    return (type \u003d\u003d Token.VAR || type \u003d\u003d Token.INC || type \u003d\u003d Token.DEC || (NodeUtil.isAssignmentOp(parent) \u0026\u0026 parent.getFirstChild() \u003d\u003d n) || (NodeUtil.isForIn(parent)));\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 231,
      "functionName": "canNameValueChange",
      "functionAnnotation": "",
      "functionDoc": "This is similar to NodeUtil.isLValue except that object properties and\narray member modification aren\u0027t important (\"o\" in \"o.a \u003d 2\" is still \"o\"\nafter assignment, where in as \"o \u003d x\", \"o\" is now \"x\").\n\nThis also looks for the redefinition of a name.\n  function (x){var x;}\n\n@param n The NAME node in question.\n@param parent The parent of the node.\n",
      "diff": "@@ -1,4 +1,4 @@\n private static boolean canNameValueChange(Node n, Node parent) {\n     int type \u003d parent.getType();\n-    return (type \u003d\u003d Token.VAR || type \u003d\u003d Token.INC || type \u003d\u003d Token.DEC || (NodeUtil.isAssignmentOp(parent) \u0026\u0026 parent.getFirstChild() \u003d\u003d n));\n+    return (type \u003d\u003d Token.VAR || type \u003d\u003d Token.INC || type \u003d\u003d Token.DEC || (NodeUtil.isAssignmentOp(parent) \u0026\u0026 parent.getFirstChild() \u003d\u003d n) || (NodeUtil.isForIn(parent)));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,4 @@\n+private static boolean canNameValueChange(Node n, Node parent) {\n+    int type \u003d parent.getType();\n+    return (type \u003d\u003d Token.VAR || type \u003d\u003d Token.INC || type \u003d\u003d Token.DEC || (NodeUtil.isAssignmentOp(parent) \u0026\u0026 parent.getFirstChild() \u003d\u003d n));\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static boolean canNameValueChange(Node n, Node parent) {\n    int type \u003d parent.getType();\n    return (type \u003d\u003d Token.VAR || type \u003d\u003d Token.INC || type \u003d\u003d Token.DEC || (NodeUtil.isAssignmentOp(parent) \u0026\u0026 parent.getFirstChild() \u003d\u003d n));\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 191,
      "functionName": "canNameValueChange",
      "functionAnnotation": "",
      "functionDoc": "This is similar to NodeUtil.isLValue except that object properties and\narray member modification aren\u0027t important (\"o\" in \"o.a \u003d 2\" is still \"o\"\nafter assignment, where in as \"o \u003d x\", \"o\" is now \"x\").\n\nThis also looks for the redefinition of a name.\n  function (x){var x;}\n\n@param n The NAME node in question.\n@param parent The parent of the node.\n"
    }
  }
}