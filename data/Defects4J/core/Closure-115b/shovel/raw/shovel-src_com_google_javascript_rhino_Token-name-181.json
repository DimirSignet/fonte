{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Token.java",
  "functionName": "name",
  "functionId": "name___token-int",
  "sourceFilePath": "src/com/google/javascript/rhino/Token.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 181,
  "functionEndLine": 288,
  "numCommitsSeen": 23,
  "timeTaken": 1679,
  "changeHistory": [
    "384daa779c874c449d86ec219de29cf45fd965db",
    "1e9ad9ed2406cbc053dc3dc958c506515e9004e3",
    "24fd842a5380a350bcde0bed60287053bc9b37f0",
    "5428589fcac11bb899a44ef827e12a253e29d323",
    "f412f0c0efd54842b30207c845d65cb826217fd6",
    "5524adbda991632656059566b69cc2771ba42b7d",
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
    "03d0d81dbe0cb16bd147e5b61d1f32276090d5d2",
    "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa",
    "222eafd303155b3eac5cd244584b2cb3c4c11975",
    "f01925cbf7a39a885e51865208368e861d25a0c1",
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "384daa779c874c449d86ec219de29cf45fd965db": "Ybodychange",
    "1e9ad9ed2406cbc053dc3dc958c506515e9004e3": "Ybodychange",
    "24fd842a5380a350bcde0bed60287053bc9b37f0": "Ybodychange",
    "5428589fcac11bb899a44ef827e12a253e29d323": "Ybodychange",
    "f412f0c0efd54842b30207c845d65cb826217fd6": "Ybodychange",
    "5524adbda991632656059566b69cc2771ba42b7d": "Ybodychange",
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb": "Ybodychange",
    "03d0d81dbe0cb16bd147e5b61d1f32276090d5d2": "Ybodychange",
    "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d": "Ybodychange",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa": "Ybodychange",
    "222eafd303155b3eac5cd244584b2cb3c4c11975": "Ybodychange",
    "f01925cbf7a39a885e51865208368e861d25a0c1": "Ybodychange",
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "384daa779c874c449d86ec219de29cf45fd965db": {
      "type": "Ybodychange",
      "commitMessage": "\nAllow @private {type}\nThe JSDoc people seem OK with this approach.\nThe implementation is a bit of a fudge job, but I think this\nwill do the \"right\" thing without breaking any of the existing APIs.\n\nR\u003djohnlenz,dimvar\nDELTA\u003d155  (106 added, 32 deleted, 17 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5962\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2387 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/11/12, 3:19 PM",
      "commitName": "384daa779c874c449d86ec219de29cf45fd965db",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/20/12, 10:24 AM",
      "commitNameOld": "1e9ad9ed2406cbc053dc3dc958c506515e9004e3",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 21.21,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case STRING_KEY:\n            return \"STRING_KEY\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case CAST:\n            return \"CAST\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n        case LB:\n            return \"LB\";\n        case LC:\n            return \"LC\";\n        case COLON:\n            return \"COLON\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 181,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,203 +1,207 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case STRING_KEY:\n             return \"STRING_KEY\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case PARAM_LIST:\n             return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n-        case COLON:\n-            return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT_CASE:\n             return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GETTER_DEF:\n             return \"GETTER_DEF\";\n         case SETTER_DEF:\n             return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case CAST:\n             return \"CAST\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n+        case LB:\n+            return \"LB\";\n+        case LC:\n+            return \"LC\";\n+        case COLON:\n+            return \"COLON\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1e9ad9ed2406cbc053dc3dc958c506515e9004e3": {
      "type": "Ybodychange",
      "commitMessage": "\nIntroduce, but don\u0027t use yet, the AST CAST node type.\n\nR\u003dnicksantos\nDELTA\u003d6  (6 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5852\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2338 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/20/12, 10:24 AM",
      "commitName": "1e9ad9ed2406cbc053dc3dc958c506515e9004e3",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/19/12, 3:19 PM",
      "commitNameOld": "24fd842a5380a350bcde0bed60287053bc9b37f0",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case STRING_KEY:\n            return \"STRING_KEY\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case CAST:\n            return \"CAST\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 181,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,201 +1,203 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case STRING_KEY:\n             return \"STRING_KEY\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case PARAM_LIST:\n             return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT_CASE:\n             return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GETTER_DEF:\n             return \"GETTER_DEF\";\n         case SETTER_DEF:\n             return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n+        case CAST:\n+            return \"CAST\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "24fd842a5380a350bcde0bed60287053bc9b37f0": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback \n\n*** Reason for rollback ***\n\nbreaks various projects without whitelists\n\n*** Original change description ***\n\nIntroduced a CAST ast node\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5848\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2334 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/19/12, 3:19 PM",
      "commitName": "24fd842a5380a350bcde0bed60287053bc9b37f0",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/19/12, 1:47 PM",
      "commitNameOld": "5428589fcac11bb899a44ef827e12a253e29d323",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case STRING_KEY:\n            return \"STRING_KEY\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 180,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,203 +1,201 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case STRING_KEY:\n             return \"STRING_KEY\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case PARAM_LIST:\n             return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT_CASE:\n             return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GETTER_DEF:\n             return \"GETTER_DEF\";\n         case SETTER_DEF:\n             return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n-        case CAST:\n-            return \"CAST\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5428589fcac11bb899a44ef827e12a253e29d323": {
      "type": "Ybodychange",
      "commitMessage": "\nIntroduced a CAST ast node\n\nR\u003dnicksantos,dimvar\nDELTA\u003d2832  (2746 added, 13 deleted, 73 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5846\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2332 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/19/12, 1:47 PM",
      "commitName": "5428589fcac11bb899a44ef827e12a253e29d323",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/25/12, 1:34 PM",
      "commitNameOld": "f412f0c0efd54842b30207c845d65cb826217fd6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 208.05,
      "commitsBetweenForRepo": 381,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case STRING_KEY:\n            return \"STRING_KEY\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case CAST:\n            return \"CAST\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 181,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,201 +1,203 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case STRING_KEY:\n             return \"STRING_KEY\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case PARAM_LIST:\n             return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT_CASE:\n             return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GETTER_DEF:\n             return \"GETTER_DEF\";\n         case SETTER_DEF:\n             return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n+        case CAST:\n+            return \"CAST\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f412f0c0efd54842b30207c845d65cb826217fd6": {
      "type": "Ybodychange",
      "commitMessage": "\nCreate a separate token for object literal keys.\ni was surprised how easy this was\n\nR\u003dacleung,johnlenz\nDELTA\u003d139  (52 added, 26 deleted, 61 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4618\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1922 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/25/12, 1:34 PM",
      "commitName": "f412f0c0efd54842b30207c845d65cb826217fd6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 165.83,
      "commitsBetweenForRepo": 280,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case STRING_KEY:\n            return \"STRING_KEY\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 180,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,199 +1,201 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n+        case STRING_KEY:\n+            return \"STRING_KEY\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case PARAM_LIST:\n             return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT_CASE:\n             return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GETTER_DEF:\n             return \"GETTER_DEF\";\n         case SETTER_DEF:\n             return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5524adbda991632656059566b69cc2771ba42b7d": {
      "type": "Ybodychange",
      "commitMessage": "\nRename a couple of AST nodes:\nDEFAULT becomes DEFAULT_CASE\nLP becomes PARAM_LIST\nGET becomes GETTER_DEF\nSET becomes SETTER_DEF\n\nR\u003dnicksantos\nDELTA\u003d215  (40 added, 5 deleted, 170 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3695\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1590 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/11/11, 4:42 PM",
      "commitName": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 2:58 PM",
      "commitNameOld": "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case PARAM_LIST:\n            return \"PARAM_LIST\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT_CASE:\n            return \"DEFAULT_CASE\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GETTER_DEF:\n            return \"GETTER_DEF\";\n        case SETTER_DEF:\n            return \"SETTER_DEF\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 179,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,199 +1,199 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n-        case LP:\n-            return \"LP\";\n+        case PARAM_LIST:\n+            return \"PARAM_LIST\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n-        case DEFAULT:\n-            return \"DEFAULT\";\n+        case DEFAULT_CASE:\n+            return \"DEFAULT_CASE\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n-        case GET:\n-            return \"GET\";\n-        case SET:\n-            return \"SET\";\n+        case GETTER_DEF:\n+            return \"GETTER_DEF\";\n+        case SETTER_DEF:\n+            return \"SETTER_DEF\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb": {
      "type": "Ybodychange",
      "commitMessage": "\nRemove more unused Token ids.\n\nR\u003dnicksantos\nDELTA\u003d192  (7 added, 98 deleted, 87 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3675\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1580 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 2:58 PM",
      "commitName": "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/8/11, 9:51 AM",
      "commitNameOld": "03d0d81dbe0cb16bd147e5b61d1f32276090d5d2",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case LP:\n            return \"LP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 171,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,205 +1,199 @@\n public static String name(int token) {\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case LP:\n             return \"LP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n-        case DOT:\n-            return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n-        case ELSE:\n-            return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n-        case FINALLY:\n-            return \"FINALLY\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "03d0d81dbe0cb16bd147e5b61d1f32276090d5d2": {
      "type": "Ybodychange",
      "commitMessage": "\nMore rhino_ast dead code stripping.\n\nR\u003dnicksantos\nDELTA\u003d1695  (48 added, 1552 deleted, 95 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3652\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1567 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/8/11, 9:51 AM",
      "commitName": "03d0d81dbe0cb16bd147e5b61d1f32276090d5d2",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/7/11, 2:21 PM",
      "commitNameOld": "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case LP:\n            return \"LP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 180,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,208 +1,205 @@\n public static String name(int token) {\n-    if (!printNames) {\n-        return String.valueOf(token);\n-    }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case RETURN:\n             return \"RETURN\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n         case THROW:\n             return \"THROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case TRY:\n             return \"TRY\";\n         case LP:\n             return \"LP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d": {
      "type": "Ybodychange",
      "commitMessage": "\nRemove unused Token ids.\n\nR\u003dnicksantos\nDELTA\u003d1258  (4 added, 1244 deleted, 10 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3647\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1562 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/7/11, 2:21 PM",
      "commitName": "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 2:24 PM",
      "commitNameOld": "5200a1c2404a424425ab2b04a7a64e08e0ee4925",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 102.04,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case RETURN:\n            return \"RETURN\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case THROW:\n            return \"THROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case TRY:\n            return \"TRY\";\n        case LP:\n            return \"LP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 193,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,332 +1,208 @@\n public static String name(int token) {\n     if (!printNames) {\n         return String.valueOf(token);\n     }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n-        case EOF:\n-            return \"EOF\";\n-        case EOL:\n-            return \"EOL\";\n-        case ENTERWITH:\n-            return \"ENTERWITH\";\n-        case LEAVEWITH:\n-            return \"LEAVEWITH\";\n         case RETURN:\n             return \"RETURN\";\n-        case GOTO:\n-            return \"GOTO\";\n-        case IFEQ:\n-            return \"IFEQ\";\n-        case IFNE:\n-            return \"IFNE\";\n-        case SETNAME:\n-            return \"SETNAME\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n-        case SETPROP:\n-            return \"SETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n-        case SETELEM:\n-            return \"SETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"REGEXP\";\n-        case BINDNAME:\n-            return \"BINDNAME\";\n         case THROW:\n             return \"THROW\";\n-        case RETHROW:\n-            return \"RETHROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n-        case LOCAL_LOAD:\n-            return \"LOCAL_LOAD\";\n-        case GETVAR:\n-            return \"GETVAR\";\n-        case SETVAR:\n-            return \"SETVAR\";\n-        case CATCH_SCOPE:\n-            return \"CATCH_SCOPE\";\n-        case ENUM_INIT_KEYS:\n-            return \"ENUM_INIT_KEYS\";\n-        case ENUM_INIT_VALUES:\n-            return \"ENUM_INIT_VALUES\";\n-        case ENUM_NEXT:\n-            return \"ENUM_NEXT\";\n-        case ENUM_ID:\n-            return \"ENUM_ID\";\n-        case THISFN:\n-            return \"THISFN\";\n-        case RETURN_RESULT:\n-            return \"RETURN_RESULT\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n-        case GET_REF:\n-            return \"GET_REF\";\n-        case SET_REF:\n-            return \"SET_REF\";\n-        case DEL_REF:\n-            return \"DEL_REF\";\n-        case REF_CALL:\n-            return \"REF_CALL\";\n-        case REF_SPECIAL:\n-            return \"REF_SPECIAL\";\n-        case DEFAULTNAMESPACE:\n-            return \"DEFAULTNAMESPACE\";\n-        case ESCXMLTEXT:\n-            return \"ESCXMLTEXT\";\n-        case ESCXMLATTR:\n-            return \"ESCXMLATTR\";\n-        case REF_MEMBER:\n-            return \"REF_MEMBER\";\n-        case REF_NS_MEMBER:\n-            return \"REF_NS_MEMBER\";\n-        case REF_NAME:\n-            return \"REF_NAME\";\n-        case REF_NS_NAME:\n-            return \"REF_NS_NAME\";\n         case TRY:\n             return \"TRY\";\n-        case SEMI:\n-            return \"SEMI\";\n-        case LB:\n-            return \"LB\";\n-        case RB:\n-            return \"RB\";\n-        case LC:\n-            return \"LC\";\n-        case RC:\n-            return \"RC\";\n         case LP:\n             return \"LP\";\n-        case RP:\n-            return \"RP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n-        case EXPORT:\n-            return \"EXPORT\";\n-        case IMPORT:\n-            return \"IMPORT\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n-        case RESERVED:\n-            return \"RESERVED\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n-        case TARGET:\n-            return \"TARGET\";\n-        case LOOP:\n-            return \"LOOP\";\n-        case EXPR_VOID:\n-            return \"EXPR_VOID\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n-        case JSR:\n-            return \"JSR\";\n         case SCRIPT:\n             return \"SCRIPT\";\n-        case TYPEOFNAME:\n-            return \"TYPEOFNAME\";\n-        case USE_STACK:\n-            return \"USE_STACK\";\n-        case SETPROP_OP:\n-            return \"SETPROP_OP\";\n-        case SETELEM_OP:\n-            return \"SETELEM_OP\";\n-        case LOCAL_BLOCK:\n-            return \"LOCAL_BLOCK\";\n-        case SET_REF_OP:\n-            return \"SET_REF_OP\";\n-        case DOTDOT:\n-            return \"DOTDOT\";\n-        case COLONCOLON:\n-            return \"COLONCOLON\";\n-        case XML:\n-            return \"XML\";\n-        case DOTQUERY:\n-            return \"DOTQUERY\";\n-        case XMLATTR:\n-            return \"XMLATTR\";\n-        case XMLEND:\n-            return \"XMLEND\";\n-        case TO_OBJECT:\n-            return \"TO_OBJECT\";\n-        case TO_DOUBLE:\n-            return \"TO_DOUBLE\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n-        case SETCONST:\n-            return \"SETCONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/6/10, 5:31 PM",
      "commitNameOld": "45fd54a488cfbf27978fc4811a722f1fedb8ddaa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 85.59,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 270,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "45fd54a488cfbf27978fc4811a722f1fedb8ddaa": {
      "type": "Ybodychange",
      "commitMessage": "Disallow the shadowing of \"arguments\" in ways we can\u0027t currently track. (John)\nR\u003drobert\nDELTA\u003d39  (37 added, 1 deleted, 1 changed)\n\nFix the string displayed for the REGEXP token. (John)\nR\u003dalan\nDELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003drraspa\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@172 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/6/10, 5:31 PM",
      "commitName": "45fd54a488cfbf27978fc4811a722f1fedb8ddaa",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"REGEXP\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 270,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,332 +1,332 @@\n public static String name(int token) {\n     if (!printNames) {\n         return String.valueOf(token);\n     }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case EOF:\n             return \"EOF\";\n         case EOL:\n             return \"EOL\";\n         case ENTERWITH:\n             return \"ENTERWITH\";\n         case LEAVEWITH:\n             return \"LEAVEWITH\";\n         case RETURN:\n             return \"RETURN\";\n         case GOTO:\n             return \"GOTO\";\n         case IFEQ:\n             return \"IFEQ\";\n         case IFNE:\n             return \"IFNE\";\n         case SETNAME:\n             return \"SETNAME\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case SETPROP:\n             return \"SETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case SETELEM:\n             return \"SETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n         case LABEL_NAME:\n             return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n-            return \"OBJECT\";\n+            return \"REGEXP\";\n         case BINDNAME:\n             return \"BINDNAME\";\n         case THROW:\n             return \"THROW\";\n         case RETHROW:\n             return \"RETHROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case LOCAL_LOAD:\n             return \"LOCAL_LOAD\";\n         case GETVAR:\n             return \"GETVAR\";\n         case SETVAR:\n             return \"SETVAR\";\n         case CATCH_SCOPE:\n             return \"CATCH_SCOPE\";\n         case ENUM_INIT_KEYS:\n             return \"ENUM_INIT_KEYS\";\n         case ENUM_INIT_VALUES:\n             return \"ENUM_INIT_VALUES\";\n         case ENUM_NEXT:\n             return \"ENUM_NEXT\";\n         case ENUM_ID:\n             return \"ENUM_ID\";\n         case THISFN:\n             return \"THISFN\";\n         case RETURN_RESULT:\n             return \"RETURN_RESULT\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case GET_REF:\n             return \"GET_REF\";\n         case SET_REF:\n             return \"SET_REF\";\n         case DEL_REF:\n             return \"DEL_REF\";\n         case REF_CALL:\n             return \"REF_CALL\";\n         case REF_SPECIAL:\n             return \"REF_SPECIAL\";\n         case DEFAULTNAMESPACE:\n             return \"DEFAULTNAMESPACE\";\n         case ESCXMLTEXT:\n             return \"ESCXMLTEXT\";\n         case ESCXMLATTR:\n             return \"ESCXMLATTR\";\n         case REF_MEMBER:\n             return \"REF_MEMBER\";\n         case REF_NS_MEMBER:\n             return \"REF_NS_MEMBER\";\n         case REF_NAME:\n             return \"REF_NAME\";\n         case REF_NS_NAME:\n             return \"REF_NS_NAME\";\n         case TRY:\n             return \"TRY\";\n         case SEMI:\n             return \"SEMI\";\n         case LB:\n             return \"LB\";\n         case RB:\n             return \"RB\";\n         case LC:\n             return \"LC\";\n         case RC:\n             return \"RC\";\n         case LP:\n             return \"LP\";\n         case RP:\n             return \"RP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case EXPORT:\n             return \"EXPORT\";\n         case IMPORT:\n             return \"IMPORT\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n         case RESERVED:\n             return \"RESERVED\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case TARGET:\n             return \"TARGET\";\n         case LOOP:\n             return \"LOOP\";\n         case EXPR_VOID:\n             return \"EXPR_VOID\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case JSR:\n             return \"JSR\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case TYPEOFNAME:\n             return \"TYPEOFNAME\";\n         case USE_STACK:\n             return \"USE_STACK\";\n         case SETPROP_OP:\n             return \"SETPROP_OP\";\n         case SETELEM_OP:\n             return \"SETELEM_OP\";\n         case LOCAL_BLOCK:\n             return \"LOCAL_BLOCK\";\n         case SET_REF_OP:\n             return \"SET_REF_OP\";\n         case DOTDOT:\n             return \"DOTDOT\";\n         case COLONCOLON:\n             return \"COLONCOLON\";\n         case XML:\n             return \"XML\";\n         case DOTQUERY:\n             return \"DOTQUERY\";\n         case XMLATTR:\n             return \"XMLATTR\";\n         case XMLEND:\n             return \"XMLEND\";\n         case TO_OBJECT:\n             return \"TO_OBJECT\";\n         case TO_DOUBLE:\n             return \"TO_DOUBLE\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case SETCONST:\n             return \"SETCONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "222eafd303155b3eac5cd244584b2cb3c4c11975": {
      "type": "Ybodychange",
      "commitMessage": "tighten up some types. (Nick)\nR\u003dalan\nDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves the correctness of the compiler as many passes don\u0027t distinguish between label names and variable names appropriately. (John)\nR\u003drobert\n\nRemove now unneeded checks for label names when inspecting NAME nodes. (John)\nR\u003drobert\n\nTweak code generator to break after blocks for better pretty printing. (John)\nR\u003drobert\nDELTA\u003d196  (160 added, 0 deleted, 36 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dktmses\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@170 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/5/10, 12:30 PM",
      "commitName": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/1/10, 7:32 PM",
      "commitNameOld": "f01925cbf7a39a885e51865208368e861d25a0c1",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 3.71,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"OBJECT\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 270,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,330 +1,332 @@\n public static String name(int token) {\n     if (!printNames) {\n         return String.valueOf(token);\n     }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case EOF:\n             return \"EOF\";\n         case EOL:\n             return \"EOL\";\n         case ENTERWITH:\n             return \"ENTERWITH\";\n         case LEAVEWITH:\n             return \"LEAVEWITH\";\n         case RETURN:\n             return \"RETURN\";\n         case GOTO:\n             return \"GOTO\";\n         case IFEQ:\n             return \"IFEQ\";\n         case IFNE:\n             return \"IFNE\";\n         case SETNAME:\n             return \"SETNAME\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case SETPROP:\n             return \"SETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case SETELEM:\n             return \"SETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n+        case LABEL_NAME:\n+            return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"OBJECT\";\n         case BINDNAME:\n             return \"BINDNAME\";\n         case THROW:\n             return \"THROW\";\n         case RETHROW:\n             return \"RETHROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case LOCAL_LOAD:\n             return \"LOCAL_LOAD\";\n         case GETVAR:\n             return \"GETVAR\";\n         case SETVAR:\n             return \"SETVAR\";\n         case CATCH_SCOPE:\n             return \"CATCH_SCOPE\";\n         case ENUM_INIT_KEYS:\n             return \"ENUM_INIT_KEYS\";\n         case ENUM_INIT_VALUES:\n             return \"ENUM_INIT_VALUES\";\n         case ENUM_NEXT:\n             return \"ENUM_NEXT\";\n         case ENUM_ID:\n             return \"ENUM_ID\";\n         case THISFN:\n             return \"THISFN\";\n         case RETURN_RESULT:\n             return \"RETURN_RESULT\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case GET_REF:\n             return \"GET_REF\";\n         case SET_REF:\n             return \"SET_REF\";\n         case DEL_REF:\n             return \"DEL_REF\";\n         case REF_CALL:\n             return \"REF_CALL\";\n         case REF_SPECIAL:\n             return \"REF_SPECIAL\";\n         case DEFAULTNAMESPACE:\n             return \"DEFAULTNAMESPACE\";\n         case ESCXMLTEXT:\n             return \"ESCXMLTEXT\";\n         case ESCXMLATTR:\n             return \"ESCXMLATTR\";\n         case REF_MEMBER:\n             return \"REF_MEMBER\";\n         case REF_NS_MEMBER:\n             return \"REF_NS_MEMBER\";\n         case REF_NAME:\n             return \"REF_NAME\";\n         case REF_NS_NAME:\n             return \"REF_NS_NAME\";\n         case TRY:\n             return \"TRY\";\n         case SEMI:\n             return \"SEMI\";\n         case LB:\n             return \"LB\";\n         case RB:\n             return \"RB\";\n         case LC:\n             return \"LC\";\n         case RC:\n             return \"RC\";\n         case LP:\n             return \"LP\";\n         case RP:\n             return \"RP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case EXPORT:\n             return \"EXPORT\";\n         case IMPORT:\n             return \"IMPORT\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n         case RESERVED:\n             return \"RESERVED\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case TARGET:\n             return \"TARGET\";\n         case LOOP:\n             return \"LOOP\";\n         case EXPR_VOID:\n             return \"EXPR_VOID\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case JSR:\n             return \"JSR\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case TYPEOFNAME:\n             return \"TYPEOFNAME\";\n         case USE_STACK:\n             return \"USE_STACK\";\n         case SETPROP_OP:\n             return \"SETPROP_OP\";\n         case SETELEM_OP:\n             return \"SETELEM_OP\";\n         case LOCAL_BLOCK:\n             return \"LOCAL_BLOCK\";\n         case SET_REF_OP:\n             return \"SET_REF_OP\";\n         case DOTDOT:\n             return \"DOTDOT\";\n         case COLONCOLON:\n             return \"COLONCOLON\";\n         case XML:\n             return \"XML\";\n         case DOTQUERY:\n             return \"DOTQUERY\";\n         case XMLATTR:\n             return \"XMLATTR\";\n         case XMLEND:\n             return \"XMLEND\";\n         case TO_OBJECT:\n             return \"TO_OBJECT\";\n         case TO_DOUBLE:\n             return \"TO_DOUBLE\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case SETCONST:\n             return \"SETCONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f01925cbf7a39a885e51865208368e861d25a0c1": {
      "type": "Ybodychange",
      "commitMessage": "Tests for deps generation (Nick)\nR\u003dandrew\n\nFix for decomposing assignment-ops. (john)\nR\u003dalan\nDELTA\u003d159  (127 added, 21 deleted, 11 changed)\n\nRemove unneeded imports. (John)\nR\u003drobert\nDELTA\u003d2  (0 added, 2 deleted, 0 changed)\n\nAutomated rollback of:\nRemove now unneeded checks for label names when inspecting NAME nodes. (Robert)\nR\u003dAlan\nDELTA\u003d6  (4 added, 0 deleted, 2 changed)\n\nAutomated rollback of:\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves the correctness of the compiler as many passes don\u0027t distinguish between label names and variable names appropriately. (Robert)\nR\u003dAlan\nDELTA\u003d57  (12 added, 29 deleted, 16 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dgydkaf\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@167 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/1/10, 7:32 PM",
      "commitName": "f01925cbf7a39a885e51865208368e861d25a0c1",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/30/10, 9:01 PM",
      "commitNameOld": "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"OBJECT\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 266,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,332 +1,330 @@\n public static String name(int token) {\n     if (!printNames) {\n         return String.valueOf(token);\n     }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case EOF:\n             return \"EOF\";\n         case EOL:\n             return \"EOL\";\n         case ENTERWITH:\n             return \"ENTERWITH\";\n         case LEAVEWITH:\n             return \"LEAVEWITH\";\n         case RETURN:\n             return \"RETURN\";\n         case GOTO:\n             return \"GOTO\";\n         case IFEQ:\n             return \"IFEQ\";\n         case IFNE:\n             return \"IFNE\";\n         case SETNAME:\n             return \"SETNAME\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case SETPROP:\n             return \"SETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case SETELEM:\n             return \"SETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n-        case LABEL_NAME:\n-            return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"OBJECT\";\n         case BINDNAME:\n             return \"BINDNAME\";\n         case THROW:\n             return \"THROW\";\n         case RETHROW:\n             return \"RETHROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case LOCAL_LOAD:\n             return \"LOCAL_LOAD\";\n         case GETVAR:\n             return \"GETVAR\";\n         case SETVAR:\n             return \"SETVAR\";\n         case CATCH_SCOPE:\n             return \"CATCH_SCOPE\";\n         case ENUM_INIT_KEYS:\n             return \"ENUM_INIT_KEYS\";\n         case ENUM_INIT_VALUES:\n             return \"ENUM_INIT_VALUES\";\n         case ENUM_NEXT:\n             return \"ENUM_NEXT\";\n         case ENUM_ID:\n             return \"ENUM_ID\";\n         case THISFN:\n             return \"THISFN\";\n         case RETURN_RESULT:\n             return \"RETURN_RESULT\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case GET_REF:\n             return \"GET_REF\";\n         case SET_REF:\n             return \"SET_REF\";\n         case DEL_REF:\n             return \"DEL_REF\";\n         case REF_CALL:\n             return \"REF_CALL\";\n         case REF_SPECIAL:\n             return \"REF_SPECIAL\";\n         case DEFAULTNAMESPACE:\n             return \"DEFAULTNAMESPACE\";\n         case ESCXMLTEXT:\n             return \"ESCXMLTEXT\";\n         case ESCXMLATTR:\n             return \"ESCXMLATTR\";\n         case REF_MEMBER:\n             return \"REF_MEMBER\";\n         case REF_NS_MEMBER:\n             return \"REF_NS_MEMBER\";\n         case REF_NAME:\n             return \"REF_NAME\";\n         case REF_NS_NAME:\n             return \"REF_NS_NAME\";\n         case TRY:\n             return \"TRY\";\n         case SEMI:\n             return \"SEMI\";\n         case LB:\n             return \"LB\";\n         case RB:\n             return \"RB\";\n         case LC:\n             return \"LC\";\n         case RC:\n             return \"RC\";\n         case LP:\n             return \"LP\";\n         case RP:\n             return \"RP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case EXPORT:\n             return \"EXPORT\";\n         case IMPORT:\n             return \"IMPORT\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n         case RESERVED:\n             return \"RESERVED\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case TARGET:\n             return \"TARGET\";\n         case LOOP:\n             return \"LOOP\";\n         case EXPR_VOID:\n             return \"EXPR_VOID\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case JSR:\n             return \"JSR\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case TYPEOFNAME:\n             return \"TYPEOFNAME\";\n         case USE_STACK:\n             return \"USE_STACK\";\n         case SETPROP_OP:\n             return \"SETPROP_OP\";\n         case SETELEM_OP:\n             return \"SETELEM_OP\";\n         case LOCAL_BLOCK:\n             return \"LOCAL_BLOCK\";\n         case SET_REF_OP:\n             return \"SET_REF_OP\";\n         case DOTDOT:\n             return \"DOTDOT\";\n         case COLONCOLON:\n             return \"COLONCOLON\";\n         case XML:\n             return \"XML\";\n         case DOTQUERY:\n             return \"DOTQUERY\";\n         case XMLATTR:\n             return \"XMLATTR\";\n         case XMLEND:\n             return \"XMLEND\";\n         case TO_OBJECT:\n             return \"TO_OBJECT\";\n         case TO_DOUBLE:\n             return \"TO_DOUBLE\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case SETCONST:\n             return \"SETCONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7": {
      "type": "Ybodychange",
      "commitMessage": "Refactor how coding conventions are set (Nick)\nR\u003dalan\n\nDon\u0027t use NAME for label names, introduce LABEL_NAME. This improves\nthe correctness of the compiler as many passes don\u0027t distinguish\nbetween label names and variable names appropriately. (John)\nR\u003drobert\nDELTA\u003d57  (29 added, 12 deleted, 16 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@163 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/30/10, 9:01 PM",
      "commitName": "8c5eb247cb5361a6ffa2d86aa4c2de17c234bda7",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/3/09, 3:51 PM",
      "commitNameOld": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 147.17,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case LABEL_NAME:\n            return \"LABEL_NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"OBJECT\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 270,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,330 +1,332 @@\n public static String name(int token) {\n     if (!printNames) {\n         return String.valueOf(token);\n     }\n     switch(token) {\n         case ERROR:\n             return \"ERROR\";\n         case EOF:\n             return \"EOF\";\n         case EOL:\n             return \"EOL\";\n         case ENTERWITH:\n             return \"ENTERWITH\";\n         case LEAVEWITH:\n             return \"LEAVEWITH\";\n         case RETURN:\n             return \"RETURN\";\n         case GOTO:\n             return \"GOTO\";\n         case IFEQ:\n             return \"IFEQ\";\n         case IFNE:\n             return \"IFNE\";\n         case SETNAME:\n             return \"SETNAME\";\n         case BITOR:\n             return \"BITOR\";\n         case BITXOR:\n             return \"BITXOR\";\n         case BITAND:\n             return \"BITAND\";\n         case EQ:\n             return \"EQ\";\n         case NE:\n             return \"NE\";\n         case LT:\n             return \"LT\";\n         case LE:\n             return \"LE\";\n         case GT:\n             return \"GT\";\n         case GE:\n             return \"GE\";\n         case LSH:\n             return \"LSH\";\n         case RSH:\n             return \"RSH\";\n         case URSH:\n             return \"URSH\";\n         case ADD:\n             return \"ADD\";\n         case SUB:\n             return \"SUB\";\n         case MUL:\n             return \"MUL\";\n         case DIV:\n             return \"DIV\";\n         case MOD:\n             return \"MOD\";\n         case NOT:\n             return \"NOT\";\n         case BITNOT:\n             return \"BITNOT\";\n         case POS:\n             return \"POS\";\n         case NEG:\n             return \"NEG\";\n         case NEW:\n             return \"NEW\";\n         case DELPROP:\n             return \"DELPROP\";\n         case TYPEOF:\n             return \"TYPEOF\";\n         case GETPROP:\n             return \"GETPROP\";\n         case SETPROP:\n             return \"SETPROP\";\n         case GETELEM:\n             return \"GETELEM\";\n         case SETELEM:\n             return \"SETELEM\";\n         case CALL:\n             return \"CALL\";\n         case NAME:\n             return \"NAME\";\n+        case LABEL_NAME:\n+            return \"LABEL_NAME\";\n         case NUMBER:\n             return \"NUMBER\";\n         case STRING:\n             return \"STRING\";\n         case NULL:\n             return \"NULL\";\n         case THIS:\n             return \"THIS\";\n         case FALSE:\n             return \"FALSE\";\n         case TRUE:\n             return \"TRUE\";\n         case SHEQ:\n             return \"SHEQ\";\n         case SHNE:\n             return \"SHNE\";\n         case REGEXP:\n             return \"OBJECT\";\n         case BINDNAME:\n             return \"BINDNAME\";\n         case THROW:\n             return \"THROW\";\n         case RETHROW:\n             return \"RETHROW\";\n         case IN:\n             return \"IN\";\n         case INSTANCEOF:\n             return \"INSTANCEOF\";\n         case LOCAL_LOAD:\n             return \"LOCAL_LOAD\";\n         case GETVAR:\n             return \"GETVAR\";\n         case SETVAR:\n             return \"SETVAR\";\n         case CATCH_SCOPE:\n             return \"CATCH_SCOPE\";\n         case ENUM_INIT_KEYS:\n             return \"ENUM_INIT_KEYS\";\n         case ENUM_INIT_VALUES:\n             return \"ENUM_INIT_VALUES\";\n         case ENUM_NEXT:\n             return \"ENUM_NEXT\";\n         case ENUM_ID:\n             return \"ENUM_ID\";\n         case THISFN:\n             return \"THISFN\";\n         case RETURN_RESULT:\n             return \"RETURN_RESULT\";\n         case ARRAYLIT:\n             return \"ARRAYLIT\";\n         case OBJECTLIT:\n             return \"OBJECTLIT\";\n         case GET_REF:\n             return \"GET_REF\";\n         case SET_REF:\n             return \"SET_REF\";\n         case DEL_REF:\n             return \"DEL_REF\";\n         case REF_CALL:\n             return \"REF_CALL\";\n         case REF_SPECIAL:\n             return \"REF_SPECIAL\";\n         case DEFAULTNAMESPACE:\n             return \"DEFAULTNAMESPACE\";\n         case ESCXMLTEXT:\n             return \"ESCXMLTEXT\";\n         case ESCXMLATTR:\n             return \"ESCXMLATTR\";\n         case REF_MEMBER:\n             return \"REF_MEMBER\";\n         case REF_NS_MEMBER:\n             return \"REF_NS_MEMBER\";\n         case REF_NAME:\n             return \"REF_NAME\";\n         case REF_NS_NAME:\n             return \"REF_NS_NAME\";\n         case TRY:\n             return \"TRY\";\n         case SEMI:\n             return \"SEMI\";\n         case LB:\n             return \"LB\";\n         case RB:\n             return \"RB\";\n         case LC:\n             return \"LC\";\n         case RC:\n             return \"RC\";\n         case LP:\n             return \"LP\";\n         case RP:\n             return \"RP\";\n         case COMMA:\n             return \"COMMA\";\n         case ASSIGN:\n             return \"ASSIGN\";\n         case ASSIGN_BITOR:\n             return \"ASSIGN_BITOR\";\n         case ASSIGN_BITXOR:\n             return \"ASSIGN_BITXOR\";\n         case ASSIGN_BITAND:\n             return \"ASSIGN_BITAND\";\n         case ASSIGN_LSH:\n             return \"ASSIGN_LSH\";\n         case ASSIGN_RSH:\n             return \"ASSIGN_RSH\";\n         case ASSIGN_URSH:\n             return \"ASSIGN_URSH\";\n         case ASSIGN_ADD:\n             return \"ASSIGN_ADD\";\n         case ASSIGN_SUB:\n             return \"ASSIGN_SUB\";\n         case ASSIGN_MUL:\n             return \"ASSIGN_MUL\";\n         case ASSIGN_DIV:\n             return \"ASSIGN_DIV\";\n         case ASSIGN_MOD:\n             return \"ASSIGN_MOD\";\n         case HOOK:\n             return \"HOOK\";\n         case COLON:\n             return \"COLON\";\n         case OR:\n             return \"OR\";\n         case AND:\n             return \"AND\";\n         case INC:\n             return \"INC\";\n         case DEC:\n             return \"DEC\";\n         case DOT:\n             return \"DOT\";\n         case FUNCTION:\n             return \"FUNCTION\";\n         case EXPORT:\n             return \"EXPORT\";\n         case IMPORT:\n             return \"IMPORT\";\n         case IF:\n             return \"IF\";\n         case ELSE:\n             return \"ELSE\";\n         case SWITCH:\n             return \"SWITCH\";\n         case CASE:\n             return \"CASE\";\n         case DEFAULT:\n             return \"DEFAULT\";\n         case WHILE:\n             return \"WHILE\";\n         case DO:\n             return \"DO\";\n         case FOR:\n             return \"FOR\";\n         case BREAK:\n             return \"BREAK\";\n         case CONTINUE:\n             return \"CONTINUE\";\n         case VAR:\n             return \"VAR\";\n         case WITH:\n             return \"WITH\";\n         case CATCH:\n             return \"CATCH\";\n         case FINALLY:\n             return \"FINALLY\";\n         case RESERVED:\n             return \"RESERVED\";\n         case EMPTY:\n             return \"EMPTY\";\n         case BLOCK:\n             return \"BLOCK\";\n         case LABEL:\n             return \"LABEL\";\n         case TARGET:\n             return \"TARGET\";\n         case LOOP:\n             return \"LOOP\";\n         case EXPR_VOID:\n             return \"EXPR_VOID\";\n         case EXPR_RESULT:\n             return \"EXPR_RESULT\";\n         case JSR:\n             return \"JSR\";\n         case SCRIPT:\n             return \"SCRIPT\";\n         case TYPEOFNAME:\n             return \"TYPEOFNAME\";\n         case USE_STACK:\n             return \"USE_STACK\";\n         case SETPROP_OP:\n             return \"SETPROP_OP\";\n         case SETELEM_OP:\n             return \"SETELEM_OP\";\n         case LOCAL_BLOCK:\n             return \"LOCAL_BLOCK\";\n         case SET_REF_OP:\n             return \"SET_REF_OP\";\n         case DOTDOT:\n             return \"DOTDOT\";\n         case COLONCOLON:\n             return \"COLONCOLON\";\n         case XML:\n             return \"XML\";\n         case DOTQUERY:\n             return \"DOTQUERY\";\n         case XMLATTR:\n             return \"XMLATTR\";\n         case XMLEND:\n             return \"XMLEND\";\n         case TO_OBJECT:\n             return \"TO_OBJECT\";\n         case TO_DOUBLE:\n             return \"TO_DOUBLE\";\n         case GET:\n             return \"GET\";\n         case SET:\n             return \"SET\";\n         case CONST:\n             return \"CONST\";\n         case SETCONST:\n             return \"SETCONST\";\n         case DEBUGGER:\n             return \"DEBUGGER\";\n         case ANNOTATION:\n             return \"ANNOTATION\";\n         case PIPE:\n             return \"PIPE\";\n         case STAR:\n             return \"STAR\";\n         case EOC:\n             return \"EOC\";\n         case QMARK:\n             return \"QMARK\";\n         case ELLIPSIS:\n             return \"ELLIPSIS\";\n         case BANG:\n             return \"BANG\";\n         case VOID:\n             return \"VOID\";\n         case EQUALS:\n             return \"EQUALS\";\n     }\n     throw new IllegalStateException(String.valueOf(token));\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,330 @@\n+public static String name(int token) {\n+    if (!printNames) {\n+        return String.valueOf(token);\n+    }\n+    switch(token) {\n+        case ERROR:\n+            return \"ERROR\";\n+        case EOF:\n+            return \"EOF\";\n+        case EOL:\n+            return \"EOL\";\n+        case ENTERWITH:\n+            return \"ENTERWITH\";\n+        case LEAVEWITH:\n+            return \"LEAVEWITH\";\n+        case RETURN:\n+            return \"RETURN\";\n+        case GOTO:\n+            return \"GOTO\";\n+        case IFEQ:\n+            return \"IFEQ\";\n+        case IFNE:\n+            return \"IFNE\";\n+        case SETNAME:\n+            return \"SETNAME\";\n+        case BITOR:\n+            return \"BITOR\";\n+        case BITXOR:\n+            return \"BITXOR\";\n+        case BITAND:\n+            return \"BITAND\";\n+        case EQ:\n+            return \"EQ\";\n+        case NE:\n+            return \"NE\";\n+        case LT:\n+            return \"LT\";\n+        case LE:\n+            return \"LE\";\n+        case GT:\n+            return \"GT\";\n+        case GE:\n+            return \"GE\";\n+        case LSH:\n+            return \"LSH\";\n+        case RSH:\n+            return \"RSH\";\n+        case URSH:\n+            return \"URSH\";\n+        case ADD:\n+            return \"ADD\";\n+        case SUB:\n+            return \"SUB\";\n+        case MUL:\n+            return \"MUL\";\n+        case DIV:\n+            return \"DIV\";\n+        case MOD:\n+            return \"MOD\";\n+        case NOT:\n+            return \"NOT\";\n+        case BITNOT:\n+            return \"BITNOT\";\n+        case POS:\n+            return \"POS\";\n+        case NEG:\n+            return \"NEG\";\n+        case NEW:\n+            return \"NEW\";\n+        case DELPROP:\n+            return \"DELPROP\";\n+        case TYPEOF:\n+            return \"TYPEOF\";\n+        case GETPROP:\n+            return \"GETPROP\";\n+        case SETPROP:\n+            return \"SETPROP\";\n+        case GETELEM:\n+            return \"GETELEM\";\n+        case SETELEM:\n+            return \"SETELEM\";\n+        case CALL:\n+            return \"CALL\";\n+        case NAME:\n+            return \"NAME\";\n+        case NUMBER:\n+            return \"NUMBER\";\n+        case STRING:\n+            return \"STRING\";\n+        case NULL:\n+            return \"NULL\";\n+        case THIS:\n+            return \"THIS\";\n+        case FALSE:\n+            return \"FALSE\";\n+        case TRUE:\n+            return \"TRUE\";\n+        case SHEQ:\n+            return \"SHEQ\";\n+        case SHNE:\n+            return \"SHNE\";\n+        case REGEXP:\n+            return \"OBJECT\";\n+        case BINDNAME:\n+            return \"BINDNAME\";\n+        case THROW:\n+            return \"THROW\";\n+        case RETHROW:\n+            return \"RETHROW\";\n+        case IN:\n+            return \"IN\";\n+        case INSTANCEOF:\n+            return \"INSTANCEOF\";\n+        case LOCAL_LOAD:\n+            return \"LOCAL_LOAD\";\n+        case GETVAR:\n+            return \"GETVAR\";\n+        case SETVAR:\n+            return \"SETVAR\";\n+        case CATCH_SCOPE:\n+            return \"CATCH_SCOPE\";\n+        case ENUM_INIT_KEYS:\n+            return \"ENUM_INIT_KEYS\";\n+        case ENUM_INIT_VALUES:\n+            return \"ENUM_INIT_VALUES\";\n+        case ENUM_NEXT:\n+            return \"ENUM_NEXT\";\n+        case ENUM_ID:\n+            return \"ENUM_ID\";\n+        case THISFN:\n+            return \"THISFN\";\n+        case RETURN_RESULT:\n+            return \"RETURN_RESULT\";\n+        case ARRAYLIT:\n+            return \"ARRAYLIT\";\n+        case OBJECTLIT:\n+            return \"OBJECTLIT\";\n+        case GET_REF:\n+            return \"GET_REF\";\n+        case SET_REF:\n+            return \"SET_REF\";\n+        case DEL_REF:\n+            return \"DEL_REF\";\n+        case REF_CALL:\n+            return \"REF_CALL\";\n+        case REF_SPECIAL:\n+            return \"REF_SPECIAL\";\n+        case DEFAULTNAMESPACE:\n+            return \"DEFAULTNAMESPACE\";\n+        case ESCXMLTEXT:\n+            return \"ESCXMLTEXT\";\n+        case ESCXMLATTR:\n+            return \"ESCXMLATTR\";\n+        case REF_MEMBER:\n+            return \"REF_MEMBER\";\n+        case REF_NS_MEMBER:\n+            return \"REF_NS_MEMBER\";\n+        case REF_NAME:\n+            return \"REF_NAME\";\n+        case REF_NS_NAME:\n+            return \"REF_NS_NAME\";\n+        case TRY:\n+            return \"TRY\";\n+        case SEMI:\n+            return \"SEMI\";\n+        case LB:\n+            return \"LB\";\n+        case RB:\n+            return \"RB\";\n+        case LC:\n+            return \"LC\";\n+        case RC:\n+            return \"RC\";\n+        case LP:\n+            return \"LP\";\n+        case RP:\n+            return \"RP\";\n+        case COMMA:\n+            return \"COMMA\";\n+        case ASSIGN:\n+            return \"ASSIGN\";\n+        case ASSIGN_BITOR:\n+            return \"ASSIGN_BITOR\";\n+        case ASSIGN_BITXOR:\n+            return \"ASSIGN_BITXOR\";\n+        case ASSIGN_BITAND:\n+            return \"ASSIGN_BITAND\";\n+        case ASSIGN_LSH:\n+            return \"ASSIGN_LSH\";\n+        case ASSIGN_RSH:\n+            return \"ASSIGN_RSH\";\n+        case ASSIGN_URSH:\n+            return \"ASSIGN_URSH\";\n+        case ASSIGN_ADD:\n+            return \"ASSIGN_ADD\";\n+        case ASSIGN_SUB:\n+            return \"ASSIGN_SUB\";\n+        case ASSIGN_MUL:\n+            return \"ASSIGN_MUL\";\n+        case ASSIGN_DIV:\n+            return \"ASSIGN_DIV\";\n+        case ASSIGN_MOD:\n+            return \"ASSIGN_MOD\";\n+        case HOOK:\n+            return \"HOOK\";\n+        case COLON:\n+            return \"COLON\";\n+        case OR:\n+            return \"OR\";\n+        case AND:\n+            return \"AND\";\n+        case INC:\n+            return \"INC\";\n+        case DEC:\n+            return \"DEC\";\n+        case DOT:\n+            return \"DOT\";\n+        case FUNCTION:\n+            return \"FUNCTION\";\n+        case EXPORT:\n+            return \"EXPORT\";\n+        case IMPORT:\n+            return \"IMPORT\";\n+        case IF:\n+            return \"IF\";\n+        case ELSE:\n+            return \"ELSE\";\n+        case SWITCH:\n+            return \"SWITCH\";\n+        case CASE:\n+            return \"CASE\";\n+        case DEFAULT:\n+            return \"DEFAULT\";\n+        case WHILE:\n+            return \"WHILE\";\n+        case DO:\n+            return \"DO\";\n+        case FOR:\n+            return \"FOR\";\n+        case BREAK:\n+            return \"BREAK\";\n+        case CONTINUE:\n+            return \"CONTINUE\";\n+        case VAR:\n+            return \"VAR\";\n+        case WITH:\n+            return \"WITH\";\n+        case CATCH:\n+            return \"CATCH\";\n+        case FINALLY:\n+            return \"FINALLY\";\n+        case RESERVED:\n+            return \"RESERVED\";\n+        case EMPTY:\n+            return \"EMPTY\";\n+        case BLOCK:\n+            return \"BLOCK\";\n+        case LABEL:\n+            return \"LABEL\";\n+        case TARGET:\n+            return \"TARGET\";\n+        case LOOP:\n+            return \"LOOP\";\n+        case EXPR_VOID:\n+            return \"EXPR_VOID\";\n+        case EXPR_RESULT:\n+            return \"EXPR_RESULT\";\n+        case JSR:\n+            return \"JSR\";\n+        case SCRIPT:\n+            return \"SCRIPT\";\n+        case TYPEOFNAME:\n+            return \"TYPEOFNAME\";\n+        case USE_STACK:\n+            return \"USE_STACK\";\n+        case SETPROP_OP:\n+            return \"SETPROP_OP\";\n+        case SETELEM_OP:\n+            return \"SETELEM_OP\";\n+        case LOCAL_BLOCK:\n+            return \"LOCAL_BLOCK\";\n+        case SET_REF_OP:\n+            return \"SET_REF_OP\";\n+        case DOTDOT:\n+            return \"DOTDOT\";\n+        case COLONCOLON:\n+            return \"COLONCOLON\";\n+        case XML:\n+            return \"XML\";\n+        case DOTQUERY:\n+            return \"DOTQUERY\";\n+        case XMLATTR:\n+            return \"XMLATTR\";\n+        case XMLEND:\n+            return \"XMLEND\";\n+        case TO_OBJECT:\n+            return \"TO_OBJECT\";\n+        case TO_DOUBLE:\n+            return \"TO_DOUBLE\";\n+        case GET:\n+            return \"GET\";\n+        case SET:\n+            return \"SET\";\n+        case CONST:\n+            return \"CONST\";\n+        case SETCONST:\n+            return \"SETCONST\";\n+        case DEBUGGER:\n+            return \"DEBUGGER\";\n+        case ANNOTATION:\n+            return \"ANNOTATION\";\n+        case PIPE:\n+            return \"PIPE\";\n+        case STAR:\n+            return \"STAR\";\n+        case EOC:\n+            return \"EOC\";\n+        case QMARK:\n+            return \"QMARK\";\n+        case ELLIPSIS:\n+            return \"ELLIPSIS\";\n+        case BANG:\n+            return \"BANG\";\n+        case VOID:\n+            return \"VOID\";\n+        case EQUALS:\n+            return \"EQUALS\";\n+    }\n+    throw new IllegalStateException(String.valueOf(token));\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static String name(int token) {\n    if (!printNames) {\n        return String.valueOf(token);\n    }\n    switch(token) {\n        case ERROR:\n            return \"ERROR\";\n        case EOF:\n            return \"EOF\";\n        case EOL:\n            return \"EOL\";\n        case ENTERWITH:\n            return \"ENTERWITH\";\n        case LEAVEWITH:\n            return \"LEAVEWITH\";\n        case RETURN:\n            return \"RETURN\";\n        case GOTO:\n            return \"GOTO\";\n        case IFEQ:\n            return \"IFEQ\";\n        case IFNE:\n            return \"IFNE\";\n        case SETNAME:\n            return \"SETNAME\";\n        case BITOR:\n            return \"BITOR\";\n        case BITXOR:\n            return \"BITXOR\";\n        case BITAND:\n            return \"BITAND\";\n        case EQ:\n            return \"EQ\";\n        case NE:\n            return \"NE\";\n        case LT:\n            return \"LT\";\n        case LE:\n            return \"LE\";\n        case GT:\n            return \"GT\";\n        case GE:\n            return \"GE\";\n        case LSH:\n            return \"LSH\";\n        case RSH:\n            return \"RSH\";\n        case URSH:\n            return \"URSH\";\n        case ADD:\n            return \"ADD\";\n        case SUB:\n            return \"SUB\";\n        case MUL:\n            return \"MUL\";\n        case DIV:\n            return \"DIV\";\n        case MOD:\n            return \"MOD\";\n        case NOT:\n            return \"NOT\";\n        case BITNOT:\n            return \"BITNOT\";\n        case POS:\n            return \"POS\";\n        case NEG:\n            return \"NEG\";\n        case NEW:\n            return \"NEW\";\n        case DELPROP:\n            return \"DELPROP\";\n        case TYPEOF:\n            return \"TYPEOF\";\n        case GETPROP:\n            return \"GETPROP\";\n        case SETPROP:\n            return \"SETPROP\";\n        case GETELEM:\n            return \"GETELEM\";\n        case SETELEM:\n            return \"SETELEM\";\n        case CALL:\n            return \"CALL\";\n        case NAME:\n            return \"NAME\";\n        case NUMBER:\n            return \"NUMBER\";\n        case STRING:\n            return \"STRING\";\n        case NULL:\n            return \"NULL\";\n        case THIS:\n            return \"THIS\";\n        case FALSE:\n            return \"FALSE\";\n        case TRUE:\n            return \"TRUE\";\n        case SHEQ:\n            return \"SHEQ\";\n        case SHNE:\n            return \"SHNE\";\n        case REGEXP:\n            return \"OBJECT\";\n        case BINDNAME:\n            return \"BINDNAME\";\n        case THROW:\n            return \"THROW\";\n        case RETHROW:\n            return \"RETHROW\";\n        case IN:\n            return \"IN\";\n        case INSTANCEOF:\n            return \"INSTANCEOF\";\n        case LOCAL_LOAD:\n            return \"LOCAL_LOAD\";\n        case GETVAR:\n            return \"GETVAR\";\n        case SETVAR:\n            return \"SETVAR\";\n        case CATCH_SCOPE:\n            return \"CATCH_SCOPE\";\n        case ENUM_INIT_KEYS:\n            return \"ENUM_INIT_KEYS\";\n        case ENUM_INIT_VALUES:\n            return \"ENUM_INIT_VALUES\";\n        case ENUM_NEXT:\n            return \"ENUM_NEXT\";\n        case ENUM_ID:\n            return \"ENUM_ID\";\n        case THISFN:\n            return \"THISFN\";\n        case RETURN_RESULT:\n            return \"RETURN_RESULT\";\n        case ARRAYLIT:\n            return \"ARRAYLIT\";\n        case OBJECTLIT:\n            return \"OBJECTLIT\";\n        case GET_REF:\n            return \"GET_REF\";\n        case SET_REF:\n            return \"SET_REF\";\n        case DEL_REF:\n            return \"DEL_REF\";\n        case REF_CALL:\n            return \"REF_CALL\";\n        case REF_SPECIAL:\n            return \"REF_SPECIAL\";\n        case DEFAULTNAMESPACE:\n            return \"DEFAULTNAMESPACE\";\n        case ESCXMLTEXT:\n            return \"ESCXMLTEXT\";\n        case ESCXMLATTR:\n            return \"ESCXMLATTR\";\n        case REF_MEMBER:\n            return \"REF_MEMBER\";\n        case REF_NS_MEMBER:\n            return \"REF_NS_MEMBER\";\n        case REF_NAME:\n            return \"REF_NAME\";\n        case REF_NS_NAME:\n            return \"REF_NS_NAME\";\n        case TRY:\n            return \"TRY\";\n        case SEMI:\n            return \"SEMI\";\n        case LB:\n            return \"LB\";\n        case RB:\n            return \"RB\";\n        case LC:\n            return \"LC\";\n        case RC:\n            return \"RC\";\n        case LP:\n            return \"LP\";\n        case RP:\n            return \"RP\";\n        case COMMA:\n            return \"COMMA\";\n        case ASSIGN:\n            return \"ASSIGN\";\n        case ASSIGN_BITOR:\n            return \"ASSIGN_BITOR\";\n        case ASSIGN_BITXOR:\n            return \"ASSIGN_BITXOR\";\n        case ASSIGN_BITAND:\n            return \"ASSIGN_BITAND\";\n        case ASSIGN_LSH:\n            return \"ASSIGN_LSH\";\n        case ASSIGN_RSH:\n            return \"ASSIGN_RSH\";\n        case ASSIGN_URSH:\n            return \"ASSIGN_URSH\";\n        case ASSIGN_ADD:\n            return \"ASSIGN_ADD\";\n        case ASSIGN_SUB:\n            return \"ASSIGN_SUB\";\n        case ASSIGN_MUL:\n            return \"ASSIGN_MUL\";\n        case ASSIGN_DIV:\n            return \"ASSIGN_DIV\";\n        case ASSIGN_MOD:\n            return \"ASSIGN_MOD\";\n        case HOOK:\n            return \"HOOK\";\n        case COLON:\n            return \"COLON\";\n        case OR:\n            return \"OR\";\n        case AND:\n            return \"AND\";\n        case INC:\n            return \"INC\";\n        case DEC:\n            return \"DEC\";\n        case DOT:\n            return \"DOT\";\n        case FUNCTION:\n            return \"FUNCTION\";\n        case EXPORT:\n            return \"EXPORT\";\n        case IMPORT:\n            return \"IMPORT\";\n        case IF:\n            return \"IF\";\n        case ELSE:\n            return \"ELSE\";\n        case SWITCH:\n            return \"SWITCH\";\n        case CASE:\n            return \"CASE\";\n        case DEFAULT:\n            return \"DEFAULT\";\n        case WHILE:\n            return \"WHILE\";\n        case DO:\n            return \"DO\";\n        case FOR:\n            return \"FOR\";\n        case BREAK:\n            return \"BREAK\";\n        case CONTINUE:\n            return \"CONTINUE\";\n        case VAR:\n            return \"VAR\";\n        case WITH:\n            return \"WITH\";\n        case CATCH:\n            return \"CATCH\";\n        case FINALLY:\n            return \"FINALLY\";\n        case RESERVED:\n            return \"RESERVED\";\n        case EMPTY:\n            return \"EMPTY\";\n        case BLOCK:\n            return \"BLOCK\";\n        case LABEL:\n            return \"LABEL\";\n        case TARGET:\n            return \"TARGET\";\n        case LOOP:\n            return \"LOOP\";\n        case EXPR_VOID:\n            return \"EXPR_VOID\";\n        case EXPR_RESULT:\n            return \"EXPR_RESULT\";\n        case JSR:\n            return \"JSR\";\n        case SCRIPT:\n            return \"SCRIPT\";\n        case TYPEOFNAME:\n            return \"TYPEOFNAME\";\n        case USE_STACK:\n            return \"USE_STACK\";\n        case SETPROP_OP:\n            return \"SETPROP_OP\";\n        case SETELEM_OP:\n            return \"SETELEM_OP\";\n        case LOCAL_BLOCK:\n            return \"LOCAL_BLOCK\";\n        case SET_REF_OP:\n            return \"SET_REF_OP\";\n        case DOTDOT:\n            return \"DOTDOT\";\n        case COLONCOLON:\n            return \"COLONCOLON\";\n        case XML:\n            return \"XML\";\n        case DOTQUERY:\n            return \"DOTQUERY\";\n        case XMLATTR:\n            return \"XMLATTR\";\n        case XMLEND:\n            return \"XMLEND\";\n        case TO_OBJECT:\n            return \"TO_OBJECT\";\n        case TO_DOUBLE:\n            return \"TO_DOUBLE\";\n        case GET:\n            return \"GET\";\n        case SET:\n            return \"SET\";\n        case CONST:\n            return \"CONST\";\n        case SETCONST:\n            return \"SETCONST\";\n        case DEBUGGER:\n            return \"DEBUGGER\";\n        case ANNOTATION:\n            return \"ANNOTATION\";\n        case PIPE:\n            return \"PIPE\";\n        case STAR:\n            return \"STAR\";\n        case EOC:\n            return \"EOC\";\n        case QMARK:\n            return \"QMARK\";\n        case ELLIPSIS:\n            return \"ELLIPSIS\";\n        case BANG:\n            return \"BANG\";\n        case VOID:\n            return \"VOID\";\n        case EQUALS:\n            return \"EQUALS\";\n    }\n    throw new IllegalStateException(String.valueOf(token));\n}",
      "path": "src/com/google/javascript/rhino/Token.java",
      "functionStartLine": 266,
      "functionName": "name",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}