{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionToBlockMutator.java",
  "functionName": "rewriteFunctionDeclarations",
  "functionId": "rewriteFunctionDeclarations___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionToBlockMutator.java",
  "functionAnnotation": "",
  "functionDoc": "\n@param n The node to inspect\n",
  "functionStartLine": 121,
  "functionEndLine": 143,
  "numCommitsSeen": 26,
  "timeTaken": 1450,
  "changeHistory": [
    "9dfbc803407e714f9744555a1c9e7c4230f1816d",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "869c65d5c43d96526d90c7ea9a186df9edd67eb0"
  ],
  "changeHistoryShort": {
    "9dfbc803407e714f9744555a1c9e7c4230f1816d": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "869c65d5c43d96526d90c7ea9a186df9edd67eb0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9dfbc803407e714f9744555a1c9e7c4230f1816d": {
      "type": "Ybodychange",
      "commitMessage": "\nUse the new IR interface where possible.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3799\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1641 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/22/11, 2:28 PM",
      "commitName": "9dfbc803407e714f9744555a1c9e7c4230f1816d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/14/11, 6:13 PM",
      "commitNameOld": "39f629a8cfaab37da55288010640d7e516000b1f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 7.84,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "private void rewriteFunctionDeclarations(Node n) {\n    if (n.isFunction()) {\n        if (NodeUtil.isFunctionDeclaration(n)) {\n            Node fnNameNode \u003d n.getFirstChild();\n            Node name \u003d IR.name(fnNameNode.getString()).srcref(fnNameNode);\n            Node var \u003d IR.var(name).srcref(n);\n            fnNameNode.setString(\"\");\n            n.getParent().replaceChild(n, var);\n            name.addChildToFront(n);\n        }\n        return;\n    }\n    for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n        next \u003d c.getNext();\n        rewriteFunctionDeclarations(c);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionToBlockMutator.java",
      "functionStartLine": 121,
      "functionName": "rewriteFunctionDeclarations",
      "functionAnnotation": "",
      "functionDoc": "\n@param n The node to inspect\n",
      "diff": "@@ -1,18 +1,17 @@\n private void rewriteFunctionDeclarations(Node n) {\n     if (n.isFunction()) {\n         if (NodeUtil.isFunctionDeclaration(n)) {\n             Node fnNameNode \u003d n.getFirstChild();\n-            Node var \u003d new Node(Token.VAR).copyInformationFrom(n);\n-            Node name \u003d Node.newString(Token.NAME, fnNameNode.getString()).copyInformationFrom(fnNameNode);\n+            Node name \u003d IR.name(fnNameNode.getString()).srcref(fnNameNode);\n+            Node var \u003d IR.var(name).srcref(n);\n             fnNameNode.setString(\"\");\n             n.getParent().replaceChild(n, var);\n-            var.addChildToFront(name);\n             name.addChildToFront(n);\n         }\n         return;\n     }\n     for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n         next \u003d c.getNext();\n         rewriteFunctionDeclarations(c);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "private void rewriteFunctionDeclarations(Node n) {\n    if (n.isFunction()) {\n        if (NodeUtil.isFunctionDeclaration(n)) {\n            Node fnNameNode \u003d n.getFirstChild();\n            Node var \u003d new Node(Token.VAR).copyInformationFrom(n);\n            Node name \u003d Node.newString(Token.NAME, fnNameNode.getString()).copyInformationFrom(fnNameNode);\n            fnNameNode.setString(\"\");\n            n.getParent().replaceChild(n, var);\n            var.addChildToFront(name);\n            name.addChildToFront(n);\n        }\n        return;\n    }\n    for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n        next \u003d c.getNext();\n        rewriteFunctionDeclarations(c);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionToBlockMutator.java",
      "functionStartLine": 120,
      "functionName": "rewriteFunctionDeclarations",
      "functionAnnotation": "",
      "functionDoc": "\n@param n The node to inspect\n",
      "diff": "@@ -1,18 +1,18 @@\n private void rewriteFunctionDeclarations(Node n) {\n-    if (n.getType() \u003d\u003d Token.FUNCTION) {\n+    if (n.isFunction()) {\n         if (NodeUtil.isFunctionDeclaration(n)) {\n             Node fnNameNode \u003d n.getFirstChild();\n             Node var \u003d new Node(Token.VAR).copyInformationFrom(n);\n             Node name \u003d Node.newString(Token.NAME, fnNameNode.getString()).copyInformationFrom(fnNameNode);\n             fnNameNode.setString(\"\");\n             n.getParent().replaceChild(n, var);\n             var.addChildToFront(name);\n             name.addChildToFront(n);\n         }\n         return;\n     }\n     for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n         next \u003d c.getNext();\n         rewriteFunctionDeclarations(c);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "869c65d5c43d96526d90c7ea9a186df9edd67eb0": {
      "type": "Yintroduced",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBe less aggressive about inlining functions contains inner function\n(go back to limiting this to global scope).\nFrom the the original change:\n\nTweaks to function inlining:\n- an unnamed function expression containing a inner unnamed function\nexpression should not be disallow because the names are the same.\n- a caller that contains the function definition to be inlined\nshould not consider the candidate to be a capturing function.\n- allow inlining a function containing an inner function that\nreferences arguments.\n- disallow inlining a function into a function containing\neval if intoducing names.\n- when inlining a function containing a function declaration, rewrite\nit a var declarations and function expressions to avoid introducing\nfunction declaraions into contexts disallowed by ES5 strict.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 23059472.\n\n*** Reason for rollback ***\n\nBreaks things\n\nR\u003dacleung\nDELTA\u003d149  (127 added, 0 deleted, 22 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3079\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1368 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/19/11, 11:37 AM",
      "commitName": "869c65d5c43d96526d90c7ea9a186df9edd67eb0",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,18 @@\n+private void rewriteFunctionDeclarations(Node n) {\n+    if (n.getType() \u003d\u003d Token.FUNCTION) {\n+        if (NodeUtil.isFunctionDeclaration(n)) {\n+            Node fnNameNode \u003d n.getFirstChild();\n+            Node var \u003d new Node(Token.VAR).copyInformationFrom(n);\n+            Node name \u003d Node.newString(Token.NAME, fnNameNode.getString()).copyInformationFrom(fnNameNode);\n+            fnNameNode.setString(\"\");\n+            n.getParent().replaceChild(n, var);\n+            var.addChildToFront(name);\n+            name.addChildToFront(n);\n+        }\n+        return;\n+    }\n+    for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n+        next \u003d c.getNext();\n+        rewriteFunctionDeclarations(c);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void rewriteFunctionDeclarations(Node n) {\n    if (n.getType() \u003d\u003d Token.FUNCTION) {\n        if (NodeUtil.isFunctionDeclaration(n)) {\n            Node fnNameNode \u003d n.getFirstChild();\n            Node var \u003d new Node(Token.VAR).copyInformationFrom(n);\n            Node name \u003d Node.newString(Token.NAME, fnNameNode.getString()).copyInformationFrom(fnNameNode);\n            fnNameNode.setString(\"\");\n            n.getParent().replaceChild(n, var);\n            var.addChildToFront(name);\n            name.addChildToFront(n);\n        }\n        return;\n    }\n    for (Node c \u003d n.getFirstChild(), next; c !\u003d null; c \u003d next) {\n        next \u003d c.getNext();\n        rewriteFunctionDeclarations(c);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionToBlockMutator.java",
      "functionStartLine": 120,
      "functionName": "rewriteFunctionDeclarations",
      "functionAnnotation": "",
      "functionDoc": "\n@param n The node to inspect\n"
    }
  }
}