{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "getNameReferenceCount",
  "functionId": "getNameReferenceCount___node-Node__name-String",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "Finds the number of times a simple name is referenced within the node tree.\n",
  "functionStartLine": 2728,
  "functionEndLine": 2731,
  "numCommitsSeen": 156,
  "timeTaken": 14162,
  "changeHistory": [
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4801b28ceea8db0f63da7440d6769cb9b7cce8a": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/28 by johnlenz\n\n        Inline functions with inner functions into global scope if they don\u0027t\n        declare any names.\n\n        R\u003dacleung\n        DELTA\u003d329  (244 added, 27 deleted, 58 changed)\n\nChange on 2010/05/28 by dcc\n\n        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.\n\n        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.\n\n        R\u003dacleung\n        DELTA\u003d1966  (1271 added, 675 deleted, 20 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d13010\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/29/10, 1:07 PM",
      "commitName": "b4801b28ceea8db0f63da7440d6769cb9b7cce8a",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/23/10, 11:31 AM",
      "commitNameOld": "ebb59a97610015bc41bda7f458dd1428a3a3e335",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 36.07,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "static int getNameReferenceCount(Node node, String name) {\n    return getCount(node, new MatchNameNode(name), Predicates.\u003cNode\u003ealwaysTrue());\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1835,
      "functionName": "getNameReferenceCount",
      "functionAnnotation": "",
      "functionDoc": "Finds the number of times a simple name is referenced within the node tree.\n",
      "diff": "@@ -1,3 +1,3 @@\n static int getNameReferenceCount(Node node, String name) {\n-    return getCount(node, new MatchNameNode(name));\n+    return getCount(node, new MatchNameNode(name), Predicates.\u003cNode\u003ealwaysTrue());\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+static int getNameReferenceCount(Node node, String name) {\n+    return getCount(node, new MatchNameNode(name));\n+}\n\\ No newline at end of file\n",
      "actualSource": "static int getNameReferenceCount(Node node, String name) {\n    return getCount(node, new MatchNameNode(name));\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1769,
      "functionName": "getNameReferenceCount",
      "functionAnnotation": "",
      "functionDoc": "Finds the number of times a simple name is referenced within the node tree.\n"
    }
  }
}