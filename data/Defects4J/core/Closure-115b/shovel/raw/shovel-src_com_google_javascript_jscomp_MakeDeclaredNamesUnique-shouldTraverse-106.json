{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MakeDeclaredNamesUnique.java",
  "functionName": "shouldTraverse",
  "functionId": "shouldTraverse___t-NodeTraversal__n-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 106,
  "functionEndLine": 156,
  "numCommitsSeen": 22,
  "timeTaken": 1223,
  "changeHistory": [
    "5524adbda991632656059566b69cc2771ba42b7d",
    "1a7ba5cb0111dd3ed9afd9691cab39b3c341e408",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5524adbda991632656059566b69cc2771ba42b7d": "Ybodychange",
    "1a7ba5cb0111dd3ed9afd9691cab39b3c341e408": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5524adbda991632656059566b69cc2771ba42b7d": {
      "type": "Ybodychange",
      "commitMessage": "\nRename a couple of AST nodes:\nDEFAULT becomes DEFAULT_CASE\nLP becomes PARAM_LIST\nGET becomes GETTER_DEF\nSET becomes SETTER_DEF\n\nR\u003dnicksantos\nDELTA\u003d215  (40 added, 5 deleted, 170 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3695\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1590 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/11/11, 4:42 PM",
      "commitName": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 1.34,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    switch(n.getType()) {\n        case Token.FUNCTION:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                    renamer.addDeclaredName(name);\n                }\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.PARAM_LIST:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n                    String name \u003d c.getString();\n                    renamer.addDeclaredName(name);\n                }\n                Node functionBody \u003d n.getNext();\n                findDeclaredNames(functionBody, null, renamer);\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.CATCH:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                renamer.addDeclaredName(name);\n                nameStack.push(renamer);\n            }\n            break;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
      "functionStartLine": 106,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n @Override\n public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n     switch(n.getType()) {\n         case Token.FUNCTION:\n             {\n                 Renamer renamer \u003d nameStack.peek().forChildScope();\n                 String name \u003d n.getFirstChild().getString();\n                 if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                     renamer.addDeclaredName(name);\n                 }\n                 nameStack.push(renamer);\n             }\n             break;\n-        case Token.LP:\n+        case Token.PARAM_LIST:\n             {\n                 Renamer renamer \u003d nameStack.peek().forChildScope();\n                 for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n                     String name \u003d c.getString();\n                     renamer.addDeclaredName(name);\n                 }\n                 Node functionBody \u003d n.getNext();\n                 findDeclaredNames(functionBody, null, renamer);\n                 nameStack.push(renamer);\n             }\n             break;\n         case Token.CATCH:\n             {\n                 Renamer renamer \u003d nameStack.peek().forChildScope();\n                 String name \u003d n.getFirstChild().getString();\n                 renamer.addDeclaredName(name);\n                 nameStack.push(renamer);\n             }\n             break;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1a7ba5cb0111dd3ed9afd9691cab39b3c341e408": {
      "type": "Ybodychange",
      "commitMessage": "\nModify normalization to distinguish function expression names from\nparameters and local variables.\nFixes issue 539.\n\nR\u003dnicksantos\nDELTA\u003d246  (61 added, 11 deleted, 174 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3615\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1552 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/11, 2:10 PM",
      "commitName": "1a7ba5cb0111dd3ed9afd9691cab39b3c341e408",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 97.91,
      "commitsBetweenForRepo": 220,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    switch(n.getType()) {\n        case Token.FUNCTION:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                    renamer.addDeclaredName(name);\n                }\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.LP:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n                    String name \u003d c.getString();\n                    renamer.addDeclaredName(name);\n                }\n                Node functionBody \u003d n.getNext();\n                findDeclaredNames(functionBody, null, renamer);\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.CATCH:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                renamer.addDeclaredName(name);\n                nameStack.push(renamer);\n            }\n            break;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
      "functionStartLine": 106,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,36 @@\n @Override\n public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n     switch(n.getType()) {\n         case Token.FUNCTION:\n             {\n                 Renamer renamer \u003d nameStack.peek().forChildScope();\n                 String name \u003d n.getFirstChild().getString();\n                 if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                     renamer.addDeclaredName(name);\n                 }\n                 nameStack.push(renamer);\n             }\n             break;\n+        case Token.LP:\n+            {\n+                Renamer renamer \u003d nameStack.peek().forChildScope();\n+                for (Node c \u003d n.getFirstChild(); c !\u003d null; c \u003d c.getNext()) {\n+                    String name \u003d c.getString();\n+                    renamer.addDeclaredName(name);\n+                }\n+                Node functionBody \u003d n.getNext();\n+                findDeclaredNames(functionBody, null, renamer);\n+                nameStack.push(renamer);\n+            }\n+            break;\n         case Token.CATCH:\n             {\n                 Renamer renamer \u003d nameStack.peek().forChildScope();\n                 String name \u003d n.getFirstChild().getString();\n                 renamer.addDeclaredName(name);\n                 nameStack.push(renamer);\n             }\n             break;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,24 @@\n+@Override\n+public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n+    switch(n.getType()) {\n+        case Token.FUNCTION:\n+            {\n+                Renamer renamer \u003d nameStack.peek().forChildScope();\n+                String name \u003d n.getFirstChild().getString();\n+                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n+                    renamer.addDeclaredName(name);\n+                }\n+                nameStack.push(renamer);\n+            }\n+            break;\n+        case Token.CATCH:\n+            {\n+                Renamer renamer \u003d nameStack.peek().forChildScope();\n+                String name \u003d n.getFirstChild().getString();\n+                renamer.addDeclaredName(name);\n+                nameStack.push(renamer);\n+            }\n+            break;\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n    switch(n.getType()) {\n        case Token.FUNCTION:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                if (name !\u003d null \u0026\u0026 !name.isEmpty() \u0026\u0026 parent !\u003d null \u0026\u0026 !NodeUtil.isFunctionDeclaration(n)) {\n                    renamer.addDeclaredName(name);\n                }\n                nameStack.push(renamer);\n            }\n            break;\n        case Token.CATCH:\n            {\n                Renamer renamer \u003d nameStack.peek().forChildScope();\n                String name \u003d n.getFirstChild().getString();\n                renamer.addDeclaredName(name);\n                nameStack.push(renamer);\n            }\n            break;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java",
      "functionStartLine": 100,
      "functionName": "shouldTraverse",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}