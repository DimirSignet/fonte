{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isObjectCallMethod",
  "functionId": "isObjectCallMethod___callNode-Node__methodName-String",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "\n@return Whether node is a call to methodName.\n   a.f(...)\n   a[\u0027f\u0027](...)\n",
  "functionStartLine": 2015,
  "functionEndLine": 2027,
  "numCommitsSeen": 156,
  "timeTaken": 14139,
  "changeHistory": [
    "4d98fc9034031ee146c7e5534a150e2700d89f8e",
    "7eaa0d8eca2549742649af34671eaf3da83b5c08",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4d98fc9034031ee146c7e5534a150e2700d89f8e": "Ybodychange",
    "7eaa0d8eca2549742649af34671eaf3da83b5c08": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d98fc9034031ee146c7e5534a150e2700d89f8e": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd basic Node type helpers to Node\n\nR\u003dnicksantos\nDELTA\u003d241  (135 added, 9 deleted, 97 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3672\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1577 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 12:32 PM",
      "commitName": "4d98fc9034031ee146c7e5534a150e2700d89f8e",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 10:08 AM",
      "commitNameOld": "ca41f5d443aad22b11b2b6d514fdf20101f33276",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isObjectCallMethod(Node callNode, String methodName) {\n    if (callNode.isCall()) {\n        Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n        if (isGet(functionIndentifyingExpression)) {\n            Node last \u003d functionIndentifyingExpression.getLastChild();\n            if (last !\u003d null \u0026\u0026 last.isString()) {\n                String propName \u003d last.getString();\n                return (propName.equals(methodName));\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 2016,
      "functionName": "isObjectCallMethod",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether node is a call to methodName.\n   a.f(...)\n   a[\u0027f\u0027](...)\n",
      "diff": "@@ -1,13 +1,13 @@\n static boolean isObjectCallMethod(Node callNode, String methodName) {\n-    if (callNode.getType() \u003d\u003d Token.CALL) {\n+    if (callNode.isCall()) {\n         Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n         if (isGet(functionIndentifyingExpression)) {\n             Node last \u003d functionIndentifyingExpression.getLastChild();\n-            if (last !\u003d null \u0026\u0026 last.getType() \u003d\u003d Token.STRING) {\n+            if (last !\u003d null \u0026\u0026 last.isString()) {\n                 String propName \u003d last.getString();\n                 return (propName.equals(methodName));\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7eaa0d8eca2549742649af34671eaf3da83b5c08": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/04/06 by john\n\n        Update RemoveConstantExpressions to handle removing expressions whose\n        roots are calls to functions without side-effects.\n\n        R\u003dantonio\n        DELTA\u003d19  (18 added, 0 deleted, 1 changed)\n\nChange on 2010/04/06 by john\n\n        Cleanup NodeUtil self references.\n\n        R\u003drobert\n        DELTA\u003d12  (0 added, 0 deleted, 12 changed)\n\nChange on 2010/04/07 by john\n\n        Make things easier for shell escaping, accept both single and double\n        quotes for strings in --define flags.\n        Fixes issue 139.\n\n        R\u003drobert\n        DELTA\u003d18  (14 added, 0 deleted, 4 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dwdwbvk\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@173 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/7/10, 11:34 AM",
      "commitName": "7eaa0d8eca2549742649af34671eaf3da83b5c08",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/5/10, 12:30 PM",
      "commitNameOld": "222eafd303155b3eac5cd244584b2cb3c4c11975",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isObjectCallMethod(Node callNode, String methodName) {\n    if (callNode.getType() \u003d\u003d Token.CALL) {\n        Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n        if (isGet(functionIndentifyingExpression)) {\n            Node last \u003d functionIndentifyingExpression.getLastChild();\n            if (last !\u003d null \u0026\u0026 last.getType() \u003d\u003d Token.STRING) {\n                String propName \u003d last.getString();\n                return (propName.equals(methodName));\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1239,
      "functionName": "isObjectCallMethod",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether node is a call to methodName.\n   a.f(...)\n   a[\u0027f\u0027](...)\n",
      "diff": "@@ -1,13 +1,13 @@\n static boolean isObjectCallMethod(Node callNode, String methodName) {\n     if (callNode.getType() \u003d\u003d Token.CALL) {\n         Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n-        if (NodeUtil.isGet(functionIndentifyingExpression)) {\n+        if (isGet(functionIndentifyingExpression)) {\n             Node last \u003d functionIndentifyingExpression.getLastChild();\n             if (last !\u003d null \u0026\u0026 last.getType() \u003d\u003d Token.STRING) {\n                 String propName \u003d last.getString();\n                 return (propName.equals(methodName));\n             }\n         }\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,13 @@\n+static boolean isObjectCallMethod(Node callNode, String methodName) {\n+    if (callNode.getType() \u003d\u003d Token.CALL) {\n+        Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n+        if (NodeUtil.isGet(functionIndentifyingExpression)) {\n+            Node last \u003d functionIndentifyingExpression.getLastChild();\n+            if (last !\u003d null \u0026\u0026 last.getType() \u003d\u003d Token.STRING) {\n+                String propName \u003d last.getString();\n+                return (propName.equals(methodName));\n+            }\n+        }\n+    }\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isObjectCallMethod(Node callNode, String methodName) {\n    if (callNode.getType() \u003d\u003d Token.CALL) {\n        Node functionIndentifyingExpression \u003d callNode.getFirstChild();\n        if (NodeUtil.isGet(functionIndentifyingExpression)) {\n            Node last \u003d functionIndentifyingExpression.getLastChild();\n            if (last !\u003d null \u0026\u0026 last.getType() \u003d\u003d Token.STRING) {\n                String propName \u003d last.getString();\n                return (propName.equals(methodName));\n            }\n        }\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1215,
      "functionName": "isObjectCallMethod",
      "functionAnnotation": "",
      "functionDoc": "\n@return Whether node is a call to methodName.\n   a.f(...)\n   a[\u0027f\u0027](...)\n"
    }
  }
}