{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionArgumentInjector.java",
  "functionName": "findParametersReferencedAfterSideEffect",
  "functionId": "findParametersReferencedAfterSideEffect___parameters-Set__String____root-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
  "functionAnnotation": "",
  "functionDoc": "Boot strap a traversal to look for parameters referenced\nafter a non-local side-effect.\nNOTE: This assumes no-inner functions.\n\n@param parameters The set of parameter names.\n@param root The function code block.\n@return The subset of parameters referenced after the first\n    seen non-local side-effect.\n",
  "functionStartLine": 325,
  "functionEndLine": 339,
  "numCommitsSeen": 24,
  "timeTaken": 975,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+private static Set\u003cString\u003e findParametersReferencedAfterSideEffect(Set\u003cString\u003e parameters, Node root) {\n+    Set\u003cString\u003e locals \u003d Sets.newHashSet(parameters);\n+    gatherLocalNames(root, locals);\n+    ReferencedAfterSideEffect collector \u003d new ReferencedAfterSideEffect(parameters, locals);\n+    NodeUtil.visitPostOrder(root, collector, collector);\n+    return collector.getResults();\n+}\n\\ No newline at end of file\n",
      "actualSource": "private static Set\u003cString\u003e findParametersReferencedAfterSideEffect(Set\u003cString\u003e parameters, Node root) {\n    Set\u003cString\u003e locals \u003d Sets.newHashSet(parameters);\n    gatherLocalNames(root, locals);\n    ReferencedAfterSideEffect collector \u003d new ReferencedAfterSideEffect(parameters, locals);\n    NodeUtil.visitPostOrder(root, collector, collector);\n    return collector.getResults();\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 289,
      "functionName": "findParametersReferencedAfterSideEffect",
      "functionAnnotation": "",
      "functionDoc": "Boot strap a traversal to look for parameters referenced\nafter a non-local side-effect.\nNOTE: This assumes no-inner functions.\n\n@param parameters The set of parameter names.\n@param root The function code block.\n@return The subset of parameters referenced after the first\n    seen non-local side-effect.\n"
    }
  }
}