{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineFunctions.java",
  "functionName": "mimimizeCost",
  "functionId": "mimimizeCost___fs-FunctionState",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineFunctions.java",
  "functionAnnotation": "",
  "functionDoc": "Determines if the function is worth inlining and potentially\ntrims references that increase the cost.\n\n@return Whether inlining the references lowers the overall cost.\n",
  "functionStartLine": 687,
  "functionEndLine": 701,
  "numCommitsSeen": 43,
  "timeTaken": 2039,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private boolean mimimizeCost(FunctionState fs) {\n+    if (!inliningLowersCost(fs)) {\n+        if (fs.hasBlockInliningReferences()) {\n+            fs.setRemove(false);\n+            fs.removeBlockInliningReferences();\n+            if (!fs.hasReferences() || !inliningLowersCost(fs)) {\n+                return false;\n+            }\n+        } else {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean mimimizeCost(FunctionState fs) {\n    if (!inliningLowersCost(fs)) {\n        if (fs.hasBlockInliningReferences()) {\n            fs.setRemove(false);\n            fs.removeBlockInliningReferences();\n            if (!fs.hasReferences() || !inliningLowersCost(fs)) {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 570,
      "functionName": "mimimizeCost",
      "functionAnnotation": "",
      "functionDoc": "Determines if the function is worth inlining and potentially\ntrims references that increase the cost.\n\n@return Whether inlining the references lowers the overall cost.\n"
    }
  }
}