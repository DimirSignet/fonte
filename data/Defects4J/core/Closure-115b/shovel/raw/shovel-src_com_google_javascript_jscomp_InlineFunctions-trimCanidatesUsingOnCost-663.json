{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineFunctions.java",
  "functionName": "trimCanidatesUsingOnCost",
  "functionId": "trimCanidatesUsingOnCost",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineFunctions.java",
  "functionAnnotation": "",
  "functionDoc": "Remove entries from the list of candidates that can\u0027t be inlined.\n",
  "functionStartLine": 663,
  "functionEndLine": 680,
  "numCommitsSeen": 43,
  "timeTaken": 2081,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+void trimCanidatesUsingOnCost() {\n+    Iterator\u003cEntry\u003cString, FunctionState\u003e\u003e i;\n+    for (i \u003d fns.entrySet().iterator(); i.hasNext(); ) {\n+        FunctionState fs \u003d i.next().getValue();\n+        if (fs.hasReferences()) {\n+            boolean lowersCost \u003d mimimizeCost(fs);\n+            if (!lowersCost) {\n+                i.remove();\n+            }\n+        } else if (!fs.canRemove()) {\n+            i.remove();\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "void trimCanidatesUsingOnCost() {\n    Iterator\u003cEntry\u003cString, FunctionState\u003e\u003e i;\n    for (i \u003d fns.entrySet().iterator(); i.hasNext(); ) {\n        FunctionState fs \u003d i.next().getValue();\n        if (fs.hasReferences()) {\n            boolean lowersCost \u003d mimimizeCost(fs);\n            if (!lowersCost) {\n                i.remove();\n            }\n        } else if (!fs.canRemove()) {\n            i.remove();\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 546,
      "functionName": "trimCanidatesUsingOnCost",
      "functionAnnotation": "",
      "functionDoc": "Remove entries from the list of candidates that can\u0027t be inlined.\n"
    }
  }
}