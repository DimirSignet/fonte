{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InlineFunctions.java",
  "functionName": "resolveInlineConflicts",
  "functionId": "resolveInlineConflicts",
  "sourceFilePath": "src/com/google/javascript/jscomp/InlineFunctions.java",
  "functionAnnotation": "",
  "functionDoc": "Size base inlining calculations are thrown off when a function that is\nbeing inlined also contains calls to functions that are slated for\ninlining.\n\nSpecifically, a clone of the FUNCTION node tree is used when the function\nis inlined. Calls in this new tree are not included in the list of function\nreferences so they won\u0027t be inlined (which is what we want). Here we mark\nthose functions as non-removable (as they will have new references in the\ncloned node trees).\n\nThis prevents a function that would only be inlined because it is\nreferenced once from being inlined into multiple call sites because\nthe calling function has been inlined in multiple locations or the\nfunction being removed while there are still references.\n",
  "functionStartLine": 733,
  "functionEndLine": 737,
  "numCommitsSeen": 43,
  "timeTaken": 2052,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,5 @@\n+private void resolveInlineConflicts() {\n+    for (FunctionState fs : fns.values()) {\n+        resolveInlineConflictsForFunction(fs);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void resolveInlineConflicts() {\n    for (FunctionState fs : fns.values()) {\n        resolveInlineConflictsForFunction(fs);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/InlineFunctions.java",
      "functionStartLine": 616,
      "functionName": "resolveInlineConflicts",
      "functionAnnotation": "",
      "functionDoc": "Size base inlining calculations are thrown off when a function that is\nbeing inlined also contains calls to functions that are slated for\ninlining.\n\nSpecifically, a clone of the FUNCTION node tree is used when the function\nis inlined. Calls in this new tree are not included in the list of function\nreferences so they won\u0027t be inlined (which is what we want). Here we mark\nthose functions as non-removable (as they will have new references in the\ncloned node trees).\n\nThis prevents a function that would only be inlined because it is\nreferenced once from being inlined into multiple call sites because\nthe calling function has been inlined in multiple locations or the\nfunction being removed while there are still references.\n"
    }
  }
}