{
  "origin": "codeshovel",
  "repositoryName": "Closure-115b",
  "repositoryPath": "/tmp/Closure-115b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FunctionArgumentInjector.java",
  "functionName": "visit",
  "functionId": "$visit___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 396,
  "functionEndLine": 428,
  "numCommitsSeen": 24,
  "timeTaken": 1410,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "76abdf11394c0e7515ae63335676ea3657badb45",
    "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb",
    "dd5a73fdb8740d4753a2c08efaa9eb56932943a0",
    "51e81d0fd794bee6d8765513f853a312f176dcd7",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "76abdf11394c0e7515ae63335676ea3657badb45": "Yannotationchange",
    "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb": "Ybodychange",
    "dd5a73fdb8740d4753a2c08efaa9eb56932943a0": "Ybodychange",
    "51e81d0fd794bee6d8765513f853a312f176dcd7": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.isName()) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        } else if (n.isThis()) {\n            parametersReferenced.add(THIS_MARKER);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 396,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n @Override\n public void visit(Node n) {\n     if (NodeUtil.isLoopStructure(n)) {\n         loopsEntered--;\n         if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n             parametersReferenced.clear();\n         }\n     }\n     if (!sideEffectSeen) {\n         if (hasNonLocalSideEffect(n)) {\n             sideEffectSeen \u003d true;\n         }\n     }\n     if (inLoop() || sideEffectSeen) {\n-        if (n.getType() \u003d\u003d Token.NAME) {\n+        if (n.isName()) {\n             String name \u003d n.getString();\n             if (parameters.contains(name)) {\n                 parametersReferenced.add(name);\n             }\n-        } else if (n.getType() \u003d\u003d Token.THIS) {\n+        } else if (n.isThis()) {\n             parametersReferenced.add(THIS_MARKER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "76abdf11394c0e7515ae63335676ea3657badb45": {
      "type": "Yannotationchange",
      "commitMessage": "\nMake our build warnings free.\n\nR\u003dacleung\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2830\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1301 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/28/11, 4:19 PM",
      "commitName": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/16/11, 5:29 PM",
      "commitNameOld": "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 41.95,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.getType() \u003d\u003d Token.NAME) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        } else if (n.getType() \u003d\u003d Token.THIS) {\n            parametersReferenced.add(THIS_MARKER);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 385,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,24 @@\n+@Override\n public void visit(Node n) {\n     if (NodeUtil.isLoopStructure(n)) {\n         loopsEntered--;\n         if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n             parametersReferenced.clear();\n         }\n     }\n     if (!sideEffectSeen) {\n         if (hasNonLocalSideEffect(n)) {\n             sideEffectSeen \u003d true;\n         }\n     }\n     if (inLoop() || sideEffectSeen) {\n         if (n.getType() \u003d\u003d Token.NAME) {\n             String name \u003d n.getString();\n             if (parameters.contains(name)) {\n                 parametersReferenced.add(name);\n             }\n         } else if (n.getType() \u003d\u003d Token.THIS) {\n             parametersReferenced.add(THIS_MARKER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nFixed invalid \"this\" replacement within inner functions.\n\n*** Original change description ***\n\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks things\n\n*** Original change description ***\n\nWhen it is possible to make the ES5 Strict mode assumptions about a\nfunction\u0027s \"this\" it is easier to inline a function referencing \"this\".\nAdd \"CompilerOption.assumeStrictThis\" and take advantage of it during\nfunction inlining.\n\nR\u003dmoedinger\nDELTA\u003d263  (223 added, 4 deleted, 36 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2320\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1188 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/16/11, 5:29 PM",
      "commitName": "cc4ec1a70e6fa02bda751582c3902b3c19f85bbb",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/7/11, 10:32 AM",
      "commitNameOld": "dd5a73fdb8740d4753a2c08efaa9eb56932943a0",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 9.29,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.getType() \u003d\u003d Token.NAME) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        } else if (n.getType() \u003d\u003d Token.THIS) {\n            parametersReferenced.add(THIS_MARKER);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 384,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,23 @@\n public void visit(Node n) {\n     if (NodeUtil.isLoopStructure(n)) {\n         loopsEntered--;\n         if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n             parametersReferenced.clear();\n         }\n     }\n     if (!sideEffectSeen) {\n         if (hasNonLocalSideEffect(n)) {\n             sideEffectSeen \u003d true;\n         }\n     }\n     if (inLoop() || sideEffectSeen) {\n         if (n.getType() \u003d\u003d Token.NAME) {\n             String name \u003d n.getString();\n             if (parameters.contains(name)) {\n                 parametersReferenced.add(name);\n             }\n+        } else if (n.getType() \u003d\u003d Token.THIS) {\n+            parametersReferenced.add(THIS_MARKER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dd5a73fdb8740d4753a2c08efaa9eb56932943a0": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nBreaks gmail\n\n*** Original change description ***\n\nWhen it is possible to make the ES5 Strict mode assumptions about a\nfunction\u0027s \"this\" it is easier to inline a function referencing \"this\".\nAdd \"CompilerOption.assumeStrictThis\" and take advantage of it during\nfunction inlining.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2200\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1165 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/7/11, 10:32 AM",
      "commitName": "dd5a73fdb8740d4753a2c08efaa9eb56932943a0",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "6/7/11, 9:49 AM",
      "commitNameOld": "51e81d0fd794bee6d8765513f853a312f176dcd7",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.getType() \u003d\u003d Token.NAME) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 355,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,21 @@\n public void visit(Node n) {\n     if (NodeUtil.isLoopStructure(n)) {\n         loopsEntered--;\n         if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n             parametersReferenced.clear();\n         }\n     }\n     if (!sideEffectSeen) {\n         if (hasNonLocalSideEffect(n)) {\n             sideEffectSeen \u003d true;\n         }\n     }\n     if (inLoop() || sideEffectSeen) {\n         if (n.getType() \u003d\u003d Token.NAME) {\n             String name \u003d n.getString();\n             if (parameters.contains(name)) {\n                 parametersReferenced.add(name);\n             }\n-        } else if (n.getType() \u003d\u003d Token.THIS) {\n-            parametersReferenced.add(THIS_MARKER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "51e81d0fd794bee6d8765513f853a312f176dcd7": {
      "type": "Ybodychange",
      "commitMessage": "\nWhen it is possible to make the ES5 Strict mode assumptions about a\nfunction\u0027s \"this\" it is easier to inline a function referencing \"this\".\nAdd \"CompilerOption.assumeStrictThis\" and take advantage of it during\nfunction inlining.\n\nR\u003dacleung\nDELTA\u003d243  (204 added, 4 deleted, 35 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2199\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1164 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/7/11, 9:49 AM",
      "commitName": "51e81d0fd794bee6d8765513f853a312f176dcd7",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/16/11, 8:14 AM",
      "commitNameOld": "b783533aac33c06fc34ed4c3f284aa8411ea0c54",
      "commitAuthorOld": "tylerg@google.com",
      "daysBetweenCommits": 22.07,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "actualSource": "public void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.getType() \u003d\u003d Token.NAME) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        } else if (n.getType() \u003d\u003d Token.THIS) {\n            parametersReferenced.add(THIS_MARKER);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 375,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,23 @@\n public void visit(Node n) {\n     if (NodeUtil.isLoopStructure(n)) {\n         loopsEntered--;\n         if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n             parametersReferenced.clear();\n         }\n     }\n     if (!sideEffectSeen) {\n         if (hasNonLocalSideEffect(n)) {\n             sideEffectSeen \u003d true;\n         }\n     }\n     if (inLoop() || sideEffectSeen) {\n         if (n.getType() \u003d\u003d Token.NAME) {\n             String name \u003d n.getString();\n             if (parameters.contains(name)) {\n                 parametersReferenced.add(name);\n             }\n+        } else if (n.getType() \u003d\u003d Token.THIS) {\n+            parametersReferenced.add(THIS_MARKER);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+public void visit(Node n) {\n+    if (NodeUtil.isLoopStructure(n)) {\n+        loopsEntered--;\n+        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n+            parametersReferenced.clear();\n+        }\n+    }\n+    if (!sideEffectSeen) {\n+        if (hasNonLocalSideEffect(n)) {\n+            sideEffectSeen \u003d true;\n+        }\n+    }\n+    if (inLoop() || sideEffectSeen) {\n+        if (n.getType() \u003d\u003d Token.NAME) {\n+            String name \u003d n.getString();\n+            if (parameters.contains(name)) {\n+                parametersReferenced.add(name);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void visit(Node n) {\n    if (NodeUtil.isLoopStructure(n)) {\n        loopsEntered--;\n        if (!inLoop() \u0026\u0026 !sideEffectSeen) {\n            parametersReferenced.clear();\n        }\n    }\n    if (!sideEffectSeen) {\n        if (hasNonLocalSideEffect(n)) {\n            sideEffectSeen \u003d true;\n        }\n    }\n    if (inLoop() || sideEffectSeen) {\n        if (n.getType() \u003d\u003d Token.NAME) {\n            String name \u003d n.getString();\n            if (parameters.contains(name)) {\n                parametersReferenced.add(name);\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/FunctionArgumentInjector.java",
      "functionStartLine": 359,
      "functionName": "visit",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}