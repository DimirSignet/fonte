{
  "origin": "codeshovel",
  "repositoryName": "Math-64b",
  "repositoryPath": "/tmp/Math-64b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LevenbergMarquardtOptimizer.java",
  "functionName": "qTy",
  "functionId": "qTy___y-double[]",
  "sourceFilePath": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
  "functionAnnotation": "",
  "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
  "functionStartLine": 863,
  "functionEndLine": 875,
  "numCommitsSeen": 34,
  "timeTaken": 3104,
  "changeHistory": [
    "d6a438e931412713e99624cf9ed74470f1040184",
    "8541f303370cec9a25f2b32b3d660b3f188913f0",
    "fbe565694aa2721d4a8538eb053171cc8ecfde47",
    "6d21abba54a9b3a0cca222abfacd26cabd88561c",
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5"
  ],
  "changeHistoryShort": {
    "d6a438e931412713e99624cf9ed74470f1040184": "Yfilerename",
    "8541f303370cec9a25f2b32b3d660b3f188913f0": "Ymultichange(Ymovefromfile,Ybodychange)",
    "fbe565694aa2721d4a8538eb053171cc8ecfde47": "Yfilerename",
    "6d21abba54a9b3a0cca222abfacd26cabd88561c": "Yfilerename",
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6a438e931412713e99624cf9ed74470f1040184": {
      "type": "Yfilerename",
      "commitMessage": "moved main java directory for compliance with maven standard directory layout\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@799870 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/1/09, 7:30 AM",
      "commitName": "d6a438e931412713e99624cf9ed74470f1040184",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "8/1/09, 7:23 AM",
      "commitNameOld": "2ad5ef61630be627f46ae1c266cf796f044bd4a8",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        double gamma \u003d 0;\n        for (int i \u003d k; i \u003c rows; ++i) {\n            gamma +\u003d jacobian[i][pk] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k; i \u003c rows; ++i) {\n            y[i] -\u003d gamma * jacobian[i][pk];\n        }\n    }\n}",
      "path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
      "functionStartLine": 824,
      "functionName": "qTy",
      "functionAnnotation": "",
      "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "newPath": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java"
      }
    },
    "8541f303370cec9a25f2b32b3d660b3f188913f0": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "adapted old Levenberg-Marquardt estimator to new top level optimizers API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@754727 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/15/09, 12:11 PM",
      "commitName": "8541f303370cec9a25f2b32b3d660b3f188913f0",
      "commitAuthor": "Luc Maisonobe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "adapted old Levenberg-Marquardt estimator to new top level optimizers API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@754727 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/15/09, 12:11 PM",
          "commitName": "8541f303370cec9a25f2b32b3d660b3f188913f0",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "3/14/09, 10:38 AM",
          "commitNameOld": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        double gamma \u003d 0;\n        for (int i \u003d k; i \u003c rows; ++i) {\n            gamma +\u003d jacobian[i][pk] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k; i \u003c rows; ++i) {\n            y[i] -\u003d gamma * jacobian[i][pk];\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
          "functionStartLine": 824,
          "functionName": "qTy",
          "functionAnnotation": "",
          "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
          "diff": "@@ -1,14 +1,13 @@\n private void qTy(double[] y) {\n     for (int k \u003d 0; k \u003c cols; ++k) {\n         int pk \u003d permutation[k];\n-        int kDiag \u003d k * cols + pk;\n         double gamma \u003d 0;\n-        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n-            gamma +\u003d jacobian[index] * y[i];\n+        for (int i \u003d k; i \u003c rows; ++i) {\n+            gamma +\u003d jacobian[i][pk] * y[i];\n         }\n         gamma *\u003d beta[pk];\n-        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n-            y[i] -\u003d gamma * jacobian[index];\n+        for (int i \u003d k; i \u003c rows; ++i) {\n+            y[i] -\u003d gamma * jacobian[i][pk];\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtEstimator.java",
            "newPath": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
            "oldMethodName": "qTy",
            "newMethodName": "qTy"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "adapted old Levenberg-Marquardt estimator to new top level optimizers API\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@754727 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "3/15/09, 12:11 PM",
          "commitName": "8541f303370cec9a25f2b32b3d660b3f188913f0",
          "commitAuthor": "Luc Maisonobe",
          "commitDateOld": "3/14/09, 10:38 AM",
          "commitNameOld": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
          "commitAuthorOld": "Luc Maisonobe",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        double gamma \u003d 0;\n        for (int i \u003d k; i \u003c rows; ++i) {\n            gamma +\u003d jacobian[i][pk] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k; i \u003c rows; ++i) {\n            y[i] -\u003d gamma * jacobian[i][pk];\n        }\n    }\n}",
          "path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
          "functionStartLine": 824,
          "functionName": "qTy",
          "functionAnnotation": "",
          "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
          "diff": "@@ -1,14 +1,13 @@\n private void qTy(double[] y) {\n     for (int k \u003d 0; k \u003c cols; ++k) {\n         int pk \u003d permutation[k];\n-        int kDiag \u003d k * cols + pk;\n         double gamma \u003d 0;\n-        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n-            gamma +\u003d jacobian[index] * y[i];\n+        for (int i \u003d k; i \u003c rows; ++i) {\n+            gamma +\u003d jacobian[i][pk] * y[i];\n         }\n         gamma *\u003d beta[pk];\n-        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n-            y[i] -\u003d gamma * jacobian[index];\n+        for (int i \u003d k; i \u003c rows; ++i) {\n+            y[i] -\u003d gamma * jacobian[i][pk];\n         }\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "fbe565694aa2721d4a8538eb053171cc8ecfde47": {
      "type": "Yfilerename",
      "commitMessage": "started refactoring of optimization framework:\n - created subpackages optimization.direct, optimization.general,\n   optimization.linear (currently empty) and optimization.univariate\n - removed packages analysis.minimization and estimation\n - renamed all Cost-related interfaces/classes into Objective\n   (this allows both minimization and maximization)\n - added a few new general interfaces\n\nThis work is not complete yet. The direct and general packages classes\nare very close to the former design, they have almost not been changed\nstructurally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@748274 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/26/09, 11:17 AM",
      "commitName": "fbe565694aa2721d4a8538eb053171cc8ecfde47",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/24/09, 7:32 PM",
      "commitNameOld": "911f0fe11146590554ec11d1277d6e2ba55bd7e9",
      "commitAuthorOld": "William Barker",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        int kDiag \u003d k * cols + pk;\n        double gamma \u003d 0;\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            gamma +\u003d jacobian[index] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            y[i] -\u003d gamma * jacobian[index];\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtEstimator.java",
      "functionStartLine": 818,
      "functionName": "qTy",
      "functionAnnotation": "",
      "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java",
        "newPath": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtEstimator.java"
      }
    },
    "6d21abba54a9b3a0cca222abfacd26cabd88561c": {
      "type": "Yfilerename",
      "commitMessage": "added the estimation package from Mantissa\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@512061 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/26/07, 2:59 PM",
      "commitName": "6d21abba54a9b3a0cca222abfacd26cabd88561c",
      "commitAuthor": "Luc Maisonobe",
      "commitDateOld": "2/26/07, 2:44 PM",
      "commitNameOld": "8ce6b30d7126356da4e18fb73f0bd836b921ce1c",
      "commitAuthorOld": "Luc Maisonobe",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        int kDiag \u003d k * cols + pk;\n        double gamma \u003d 0;\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            gamma +\u003d jacobian[index] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            y[i] -\u003d gamma * jacobian[index];\n        }\n    }\n}",
      "path": "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java",
      "functionStartLine": 879,
      "functionName": "qTy",
      "functionAnnotation": "",
      "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "newPath": "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java"
      }
    },
    "89ac173c2b467e6289df0e62f2a43ed1730fbad5": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@476930 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/19/06, 1:36 PM",
      "commitName": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
      "commitAuthor": "Phil Steitz",
      "diff": "@@ -0,0 +1,14 @@\n+private void qTy(double[] y) {\n+    for (int k \u003d 0; k \u003c cols; ++k) {\n+        int pk \u003d permutation[k];\n+        int kDiag \u003d k * cols + pk;\n+        double gamma \u003d 0;\n+        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n+            gamma +\u003d jacobian[index] * y[i];\n+        }\n+        gamma *\u003d beta[pk];\n+        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n+            y[i] -\u003d gamma * jacobian[index];\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void qTy(double[] y) {\n    for (int k \u003d 0; k \u003c cols; ++k) {\n        int pk \u003d permutation[k];\n        int kDiag \u003d k * cols + pk;\n        double gamma \u003d 0;\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            gamma +\u003d jacobian[index] * y[i];\n        }\n        gamma *\u003d beta[pk];\n        for (int i \u003d k, index \u003d kDiag; i \u003c rows; ++i, index +\u003d cols) {\n            y[i] -\u003d gamma * jacobian[index];\n        }\n    }\n}",
      "path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
      "functionStartLine": 880,
      "functionName": "qTy",
      "functionAnnotation": "",
      "functionDoc": "Compute the product Qt.y for some Q.R. decomposition.\n\n@param y vector to multiply (will be overwritten with the result)\n"
    }
  }
}