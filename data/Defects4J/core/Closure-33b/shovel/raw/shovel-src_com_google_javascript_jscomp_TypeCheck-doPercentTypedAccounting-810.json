{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeCheck.java",
  "functionName": "doPercentTypedAccounting",
  "functionId": "doPercentTypedAccounting___t-NodeTraversal__n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeCheck.java",
  "functionAnnotation": "",
  "functionDoc": "Counts the given node in the typed statistics.\n\n@param n a node that should be typed\n",
  "functionStartLine": 810,
  "functionEndLine": 823,
  "numCommitsSeen": 71,
  "timeTaken": 5340,
  "changeHistory": [
    "5bde370c377946671edd3408878413d236399944",
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5bde370c377946671edd3408878413d236399944": "Ybodychange",
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bde370c377946671edd3408878413d236399944": {
      "type": "Ybodychange",
      "commitMessage": "Change on 2010/04/20 by adam\n\n        Change detection of goog.events.getUniqueId to instead look for a\n        qualified name whose last component is .getUniqueId.\n\n        R\u003dmark\n        DELTA\u003d9  (3 added, 0 deleted, 6 changed)\n\nChange on 2010/04/20 by nick\n\n        Make getDefaultExterns public and static.\n\n        R\u003drobert\n        DELTA\u003d1  (0 added, 0 deleted, 1 changed)\n\nChange on 2010/04/20 by nick\n\n        Make NamedType package-private.\n\n        R\u003djohn\n        DELTA\u003d80  (20 added, 38 deleted, 22 changed)\n\nChange on 2010/04/21 by nick\n\n        Add a bunch of missing externs annotations.\n\n        R\u003dalan\n        DELTA\u003d58  (24 added, 9 deleted, 25 changed)\n\nChange on 2010/04/21 by john\n\n        Prevent duplicate \"@implements\" annotations in TypedCodeGenerator output.\n        Correct parameter names in function type declarations to match normalized parameter names.\n\n        R\u003drobert\n        DELTA\u003d15  (9 added, 2 deleted, 4 changed)\n\nChange on 2010/04/21 by alan\n\n        Disable extra prototype prop in SIMPLE mode.\n\n        R\u003dnick\n        DELTA\u003d1  (0 added, 1 deleted, 0 changed)\n\nChange on 2010/04/21 by alan\n\n        Move LatticeElement to its own file.\n\n        R\u003dnick\n        DELTA\u003d44  (29 added, 10 deleted, 5 changed)\n\nChange on 2010/04/21 by nick\n\n        Fiddle around with the order of externs.\n        As it turns out, order matters. When we resolve an @override function,\n        we need to be able to find the function that it overrides.\n\n        R\u003dalan\n        DELTA\u003d80  (47 added, 31 deleted, 2 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dbncqsx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@194 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/21/10, 4:48 PM",
      "commitName": "5bde370c377946671edd3408878413d236399944",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/14/10, 9:15 AM",
      "commitNameOld": "c764a46abf211d4677fadc33f7d466e5b14fa088",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 7.31,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n    JSType type \u003d n.getJSType();\n    if (type \u003d\u003d null) {\n        nullCount++;\n    } else if (type.isUnknownType()) {\n        if (reportUnknownTypes.isOn()) {\n            compiler.report(t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n        }\n        unknownCount++;\n    } else {\n        typedCount++;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 784,
      "functionName": "doPercentTypedAccounting",
      "functionAnnotation": "",
      "functionDoc": "Counts the given node in the typed statistics.\n\n@param n a node that should be typed\n",
      "diff": "@@ -1,18 +1,13 @@\n private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n     JSType type \u003d n.getJSType();\n     if (type \u003d\u003d null) {\n         nullCount++;\n     } else if (type.isUnknownType()) {\n         if (reportUnknownTypes.isOn()) {\n-            String unresolvedReference \u003d getUnresolvedReference(type);\n-            if (unresolvedReference !\u003d null) {\n-                compiler.report(t.makeError(n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n-            } else {\n-                compiler.report(t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n-            }\n+            compiler.report(t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n         }\n         unknownCount++;\n     } else {\n         typedCount++;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4": {
      "type": "Ybodychange",
      "commitMessage": "Remove circular dependency between error-reporting and the rest\nof the compiler. (Nick)\nR\u003dalan\nDELTA\u003d152  (27 added, 28 deleted, 97 changed)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@159 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/29/10, 7:04 AM",
      "commitName": "3cc8b3a5889f8b88ef7a2bd0b8ccea8cb0d916c4",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "3/11/10, 9:31 PM",
      "commitNameOld": "7bfdbd9164601af44d17edd51be829fde2cc51aa",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 17.36,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n    JSType type \u003d n.getJSType();\n    if (type \u003d\u003d null) {\n        nullCount++;\n    } else if (type.isUnknownType()) {\n        if (reportUnknownTypes.isOn()) {\n            String unresolvedReference \u003d getUnresolvedReference(type);\n            if (unresolvedReference !\u003d null) {\n                compiler.report(t.makeError(n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n            } else {\n                compiler.report(t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n            }\n        }\n        unknownCount++;\n    } else {\n        typedCount++;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 785,
      "functionName": "doPercentTypedAccounting",
      "functionAnnotation": "",
      "functionDoc": "Counts the given node in the typed statistics.\n\n@param n a node that should be typed\n",
      "diff": "@@ -1,18 +1,18 @@\n private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n     JSType type \u003d n.getJSType();\n     if (type \u003d\u003d null) {\n         nullCount++;\n     } else if (type.isUnknownType()) {\n         if (reportUnknownTypes.isOn()) {\n             String unresolvedReference \u003d getUnresolvedReference(type);\n             if (unresolvedReference !\u003d null) {\n-                compiler.report(JSError.make(t, n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n+                compiler.report(t.makeError(n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n             } else {\n-                compiler.report(JSError.make(t, n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n+                compiler.report(t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n             }\n         }\n         unknownCount++;\n     } else {\n         typedCount++;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n+    JSType type \u003d n.getJSType();\n+    if (type \u003d\u003d null) {\n+        nullCount++;\n+    } else if (type.isUnknownType()) {\n+        if (reportUnknownTypes.isOn()) {\n+            String unresolvedReference \u003d getUnresolvedReference(type);\n+            if (unresolvedReference !\u003d null) {\n+                compiler.report(JSError.make(t, n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n+            } else {\n+                compiler.report(JSError.make(t, n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n+            }\n+        }\n+        unknownCount++;\n+    } else {\n+        typedCount++;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void doPercentTypedAccounting(NodeTraversal t, Node n) {\n    JSType type \u003d n.getJSType();\n    if (type \u003d\u003d null) {\n        nullCount++;\n    } else if (type.isUnknownType()) {\n        if (reportUnknownTypes.isOn()) {\n            String unresolvedReference \u003d getUnresolvedReference(type);\n            if (unresolvedReference !\u003d null) {\n                compiler.report(JSError.make(t, n, reportUnknownTypes, UNRESOLVED_TYPE, unresolvedReference));\n            } else {\n                compiler.report(JSError.make(t, n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));\n            }\n        }\n        unknownCount++;\n    } else {\n        typedCount++;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypeCheck.java",
      "functionStartLine": 757,
      "functionName": "doPercentTypedAccounting",
      "functionAnnotation": "",
      "functionDoc": "Counts the given node in the typed statistics.\n\n@param n a node that should be typed\n"
    }
  }
}