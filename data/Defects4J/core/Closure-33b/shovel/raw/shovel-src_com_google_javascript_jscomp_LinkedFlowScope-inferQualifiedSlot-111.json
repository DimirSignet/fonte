{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinkedFlowScope.java",
  "functionName": "inferQualifiedSlot",
  "functionId": "inferQualifiedSlot___node-Node__symbol-String__bottomType-JSType__inferredType-JSType",
  "sourceFilePath": "src/com/google/javascript/jscomp/LinkedFlowScope.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 111,
  "functionEndLine": 121,
  "numCommitsSeen": 24,
  "timeTaken": 1108,
  "changeHistory": [
    "6b394aa0aeb97877204b99a8bf782521bebd8848",
    "2427228f43a8ace0d18597ab828f5f4775f5d716",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b394aa0aeb97877204b99a8bf782521bebd8848": "Ybodychange",
    "2427228f43a8ace0d18597ab828f5f4775f5d716": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b394aa0aeb97877204b99a8bf782521bebd8848": {
      "type": "Ybodychange",
      "commitMessage": "\nfix a bug in type inference\n\nR\u003dacleung\nDELTA\u003d50  (31 added, 18 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3458\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1508 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/12/11, 7:40 PM",
      "commitName": "6b394aa0aeb97877204b99a8bf782521bebd8848",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/23/11, 3:22 PM",
      "commitNameOld": "2427228f43a8ace0d18597ab828f5f4775f5d716",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 19.18,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n    Scope functionScope \u003d getFunctionScope();\n    if (functionScope.isLocal()) {\n        if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n            functionScope.declare(symbol, node, bottomType, null);\n        }\n        inferSlotType(symbol, inferredType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/LinkedFlowScope.java",
      "functionStartLine": 111,
      "functionName": "inferQualifiedSlot",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,10 @@\n @Override\n public void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n     Scope functionScope \u003d getFunctionScope();\n     if (functionScope.isLocal()) {\n         if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n-            int firstDot \u003d symbol.indexOf(\".\");\n-            Preconditions.checkState(firstDot !\u003d -1);\n-            Var owner \u003d functionScope.getVar(symbol.substring(0, firstDot));\n-            Scope ownerScope \u003d owner \u003d\u003d null ? functionScope : owner.getScope();\n-            ownerScope.declare(symbol, node, bottomType, null);\n+            functionScope.declare(symbol, node, bottomType, null);\n         }\n         inferSlotType(symbol, inferredType);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2427228f43a8ace0d18597ab828f5f4775f5d716": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nGive declaration nodes to locally qualified names\n\nR\u003dacleung\nDELTA\u003d42  (30 added, 1 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3328\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1462 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/23/11, 3:22 PM",
      "commitName": "2427228f43a8ace0d18597ab828f5f4775f5d716",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nGive declaration nodes to locally qualified names\n\nR\u003dacleung\nDELTA\u003d42  (30 added, 1 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3328\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1462 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "9/23/11, 3:22 PM",
          "commitName": "2427228f43a8ace0d18597ab828f5f4775f5d716",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 4:19 PM",
          "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 56.96,
          "commitsBetweenForRepo": 146,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n    Scope functionScope \u003d getFunctionScope();\n    if (functionScope.isLocal()) {\n        if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n            int firstDot \u003d symbol.indexOf(\".\");\n            Preconditions.checkState(firstDot !\u003d -1);\n            Var owner \u003d functionScope.getVar(symbol.substring(0, firstDot));\n            Scope ownerScope \u003d owner \u003d\u003d null ? functionScope : owner.getScope();\n            ownerScope.declare(symbol, node, bottomType, null);\n        }\n        inferSlotType(symbol, inferredType);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/LinkedFlowScope.java",
          "functionStartLine": 111,
          "functionName": "inferQualifiedSlot",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,14 @@\n @Override\n-public void inferQualifiedSlot(String symbol, JSType bottomType, JSType inferredType) {\n+public void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n     Scope functionScope \u003d getFunctionScope();\n     if (functionScope.isLocal()) {\n         if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n-            functionScope.declare(symbol, null, bottomType, null);\n+            int firstDot \u003d symbol.indexOf(\".\");\n+            Preconditions.checkState(firstDot !\u003d -1);\n+            Var owner \u003d functionScope.getVar(symbol.substring(0, firstDot));\n+            Scope ownerScope \u003d owner \u003d\u003d null ? functionScope : owner.getScope();\n+            ownerScope.declare(symbol, node, bottomType, null);\n         }\n         inferSlotType(symbol, inferredType);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[symbol-String, bottomType-JSType, inferredType-JSType]",
            "newValue": "[node-Node, symbol-String, bottomType-JSType, inferredType-JSType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nGive declaration nodes to locally qualified names\n\nR\u003dacleung\nDELTA\u003d42  (30 added, 1 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3328\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1462 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "9/23/11, 3:22 PM",
          "commitName": "2427228f43a8ace0d18597ab828f5f4775f5d716",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/28/11, 4:19 PM",
          "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 56.96,
          "commitsBetweenForRepo": 146,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n    Scope functionScope \u003d getFunctionScope();\n    if (functionScope.isLocal()) {\n        if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n            int firstDot \u003d symbol.indexOf(\".\");\n            Preconditions.checkState(firstDot !\u003d -1);\n            Var owner \u003d functionScope.getVar(symbol.substring(0, firstDot));\n            Scope ownerScope \u003d owner \u003d\u003d null ? functionScope : owner.getScope();\n            ownerScope.declare(symbol, node, bottomType, null);\n        }\n        inferSlotType(symbol, inferredType);\n    }\n}",
          "path": "src/com/google/javascript/jscomp/LinkedFlowScope.java",
          "functionStartLine": 111,
          "functionName": "inferQualifiedSlot",
          "functionAnnotation": "@Override",
          "functionDoc": "",
          "diff": "@@ -1,10 +1,14 @@\n @Override\n-public void inferQualifiedSlot(String symbol, JSType bottomType, JSType inferredType) {\n+public void inferQualifiedSlot(Node node, String symbol, JSType bottomType, JSType inferredType) {\n     Scope functionScope \u003d getFunctionScope();\n     if (functionScope.isLocal()) {\n         if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n-            functionScope.declare(symbol, null, bottomType, null);\n+            int firstDot \u003d symbol.indexOf(\".\");\n+            Preconditions.checkState(firstDot !\u003d -1);\n+            Var owner \u003d functionScope.getVar(symbol.substring(0, firstDot));\n+            Scope ownerScope \u003d owner \u003d\u003d null ? functionScope : owner.getScope();\n+            ownerScope.declare(symbol, node, bottomType, null);\n         }\n         inferSlotType(symbol, inferredType);\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,10 @@\n+@Override\n+public void inferQualifiedSlot(String symbol, JSType bottomType, JSType inferredType) {\n+    Scope functionScope \u003d getFunctionScope();\n+    if (functionScope.isLocal()) {\n+        if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n+            functionScope.declare(symbol, null, bottomType, null);\n+        }\n+        inferSlotType(symbol, inferredType);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void inferQualifiedSlot(String symbol, JSType bottomType, JSType inferredType) {\n    Scope functionScope \u003d getFunctionScope();\n    if (functionScope.isLocal()) {\n        if (functionScope.getVar(symbol) \u003d\u003d null \u0026\u0026 !functionScope.isBottom()) {\n            functionScope.declare(symbol, null, bottomType, null);\n        }\n        inferSlotType(symbol, inferredType);\n    }\n}",
      "path": "src/com/google/javascript/jscomp/LinkedFlowScope.java",
      "functionStartLine": 111,
      "functionName": "inferQualifiedSlot",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}