{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeValidator.java",
  "functionName": "expectCanAssignTo",
  "functionId": "expectCanAssignTo___t-NodeTraversal__n-Node__rightType-JSType__leftType-JSType__msg-String",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeValidator.java",
  "functionAnnotation": "",
  "functionDoc": "Expect that the first type can be assigned to a symbol of the second\ntype.\n\n@param t The node traversal.\n@param n The node to issue warnings on.\n@param rightType The type on the RHS of the assign.\n@param leftType The type of the symbol on the LHS of the assign.\n@param msg An extra message for the mismatch warning, if necessary.\n@return True if the types matched, false otherwise.\n",
  "functionStartLine": 386,
  "functionEndLine": 399,
  "numCommitsSeen": 34,
  "timeTaken": 1605,
  "changeHistory": [
    "41ecd65c09b6d39253c4f855e615daabbc7e241a",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "41ecd65c09b6d39253c4f855e615daabbc7e241a": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41ecd65c09b6d39253c4f855e615daabbc7e241a": {
      "type": "Ybodychange",
      "commitMessage": "\nBetter warnings for fixing DisambiguateProperties ignores.\n\nR\u003djohnlenz\nDELTA\u003d164  (92 added, 23 deleted, 49 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2860\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1316 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/2/11, 5:01 PM",
      "commitName": "41ecd65c09b6d39253c4f855e615daabbc7e241a",
      "commitAuthor": "acleung@google.com",
      "commitDateOld": "7/27/11, 9:33 AM",
      "commitNameOld": "749d75ccbf82ffee5c613dbed9f9782cd740a01f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 6.31,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg) {\n    if (!rightType.canAssignTo(leftType)) {\n        if (bothIntrinsics(rightType, leftType)) {\n            registerMismatch(rightType, leftType, null);\n        } else {\n            mismatch(t, n, msg, rightType, leftType);\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/TypeValidator.java",
      "functionStartLine": 379,
      "functionName": "expectCanAssignTo",
      "functionAnnotation": "",
      "functionDoc": "Expect that the first type can be assigned to a symbol of the second\ntype.\n\n@param t The node traversal.\n@param n The node to issue warnings on.\n@param rightType The type on the RHS of the assign.\n@param leftType The type of the symbol on the LHS of the assign.\n@param msg An extra message for the mismatch warning, if necessary.\n@return True if the types matched, false otherwise.\n",
      "diff": "@@ -1,11 +1,11 @@\n boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg) {\n     if (!rightType.canAssignTo(leftType)) {\n         if (bothIntrinsics(rightType, leftType)) {\n-            registerMismatch(rightType, leftType);\n+            registerMismatch(rightType, leftType, null);\n         } else {\n             mismatch(t, n, msg, rightType, leftType);\n         }\n         return false;\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,11 @@\n+boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg) {\n+    if (!rightType.canAssignTo(leftType)) {\n+        if (bothIntrinsics(rightType, leftType)) {\n+            registerMismatch(rightType, leftType);\n+        } else {\n+            mismatch(t, n, msg, rightType, leftType);\n+        }\n+        return false;\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg) {\n    if (!rightType.canAssignTo(leftType)) {\n        if (bothIntrinsics(rightType, leftType)) {\n            registerMismatch(rightType, leftType);\n        } else {\n            mismatch(t, n, msg, rightType, leftType);\n        }\n        return false;\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/jscomp/TypeValidator.java",
      "functionStartLine": 315,
      "functionName": "expectCanAssignTo",
      "functionAnnotation": "",
      "functionDoc": "Expect that the first type can be assigned to a symbol of the second\ntype.\n\n@param t The node traversal.\n@param n The node to issue warnings on.\n@param rightType The type on the RHS of the assign.\n@param leftType The type of the symbol on the LHS of the assign.\n@param msg An extra message for the mismatch warning, if necessary.\n@return True if the types matched, false otherwise.\n"
    }
  }
}