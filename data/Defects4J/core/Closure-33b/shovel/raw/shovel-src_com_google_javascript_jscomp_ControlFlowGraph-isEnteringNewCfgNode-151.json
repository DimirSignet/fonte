{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ControlFlowGraph.java",
  "functionName": "isEnteringNewCfgNode",
  "functionId": "isEnteringNewCfgNode___n-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
  "functionAnnotation": "",
  "functionDoc": "\n@return True if n should be represented by a new CFG node in the control\nflow graph.\n",
  "functionStartLine": 151,
  "functionEndLine": 195,
  "numCommitsSeen": 14,
  "timeTaken": 1711,
  "changeHistory": [
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a"
  ],
  "changeHistoryShort": {
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb": "Ybodychange",
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": "Yformatchange",
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": "Ybodychange",
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de195d17e438e13ab7d26f8f9550ba98ff7b47cb": {
      "type": "Ybodychange",
      "commitMessage": "\nRemove more unused Token ids.\n\nR\u003dnicksantos\nDELTA\u003d192  (7 added, 98 deleted, 87 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3675\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1580 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 2:58 PM",
      "commitName": "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 103.99,
      "commitsBetweenForRepo": 248,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean isEnteringNewCfgNode(Node n) {\n    Node parent \u003d n.getParent();\n    switch(parent.getType()) {\n        case Token.BLOCK:\n        case Token.SCRIPT:\n        case Token.TRY:\n            return true;\n        case Token.FUNCTION:\n            return n !\u003d parent.getFirstChild().getNext();\n        case Token.WHILE:\n        case Token.DO:\n        case Token.IF:\n            return NodeUtil.getConditionExpression(parent) !\u003d n;\n        case Token.FOR:\n            if (NodeUtil.isForIn(parent)) {\n                return n \u003d\u003d parent.getLastChild();\n            } else {\n                return NodeUtil.getConditionExpression(parent) !\u003d n;\n            }\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.WITH:\n            return n !\u003d parent.getFirstChild();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 151,
      "functionName": "isEnteringNewCfgNode",
      "functionAnnotation": "",
      "functionDoc": "\n@return True if n should be represented by a new CFG node in the control\nflow graph.\n",
      "diff": "@@ -1,29 +1,28 @@\n public static boolean isEnteringNewCfgNode(Node n) {\n     Node parent \u003d n.getParent();\n     switch(parent.getType()) {\n         case Token.BLOCK:\n         case Token.SCRIPT:\n         case Token.TRY:\n-        case Token.FINALLY:\n             return true;\n         case Token.FUNCTION:\n             return n !\u003d parent.getFirstChild().getNext();\n         case Token.WHILE:\n         case Token.DO:\n         case Token.IF:\n             return NodeUtil.getConditionExpression(parent) !\u003d n;\n         case Token.FOR:\n             if (NodeUtil.isForIn(parent)) {\n                 return n \u003d\u003d parent.getLastChild();\n             } else {\n                 return NodeUtil.getConditionExpression(parent) !\u003d n;\n             }\n         case Token.SWITCH:\n         case Token.CASE:\n         case Token.CATCH:\n         case Token.WITH:\n             return n !\u003d parent.getFirstChild();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9de5e9b4671773bb3f2d5932e57c1b4186b9b777": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/06/30 15:06:33 by johnlenz\n\n\tAdd a diagnostic group so that projects with weird externs can opt-out of the stricter extern checks.\n\n\tR\u003dnicksantos\n\tDELTA\u003d54  (52 added, 0 deleted, 2 changed)\n\nChange on 2010/06/30 17:56:51 by johnlenz\n\n\tRevert warning levels until after a release is put out to control them.\n\n\tR\u003dnicksantos\n\tDELTA\u003d4  (2 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d47002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@260 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/1/10, 7:38 AM",
      "commitName": "9de5e9b4671773bb3f2d5932e57c1b4186b9b777",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "11/25/09, 6:53 AM",
      "commitNameOld": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 217.99,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean isEnteringNewCfgNode(Node n) {\n    Node parent \u003d n.getParent();\n    switch(parent.getType()) {\n        case Token.BLOCK:\n        case Token.SCRIPT:\n        case Token.TRY:\n        case Token.FINALLY:\n            return true;\n        case Token.FUNCTION:\n            return n !\u003d parent.getFirstChild().getNext();\n        case Token.WHILE:\n        case Token.DO:\n        case Token.IF:\n            return NodeUtil.getConditionExpression(parent) !\u003d n;\n        case Token.FOR:\n            if (NodeUtil.isForIn(parent)) {\n                return n \u003d\u003d parent.getLastChild();\n            } else {\n                return NodeUtil.getConditionExpression(parent) !\u003d n;\n            }\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.WITH:\n            return n !\u003d parent.getFirstChild();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 149,
      "functionName": "isEnteringNewCfgNode",
      "functionAnnotation": "",
      "functionDoc": "\n@return True if n should be represented by a new CFG node in the control\nflow graph.\n",
      "diff": "",
      "extendedDetails": {}
    },
    "3bee5d740c96572faea4b9fb8b632e0e07b13cbb": {
      "type": "Ybodychange",
      "commitMessage": "Add a mechanism for inlining local vars, and turn it on by default.\nWarnings for \"ambiguous\" function definitions.\nRefactoring and renaming of some method names.\nUse \"\u003d\" optionality annotation in externs.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@15 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/25/09, 6:53 AM",
      "commitName": "3bee5d740c96572faea4b9fb8b632e0e07b13cbb",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/17/09, 4:21 PM",
      "commitNameOld": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 7.61,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static boolean isEnteringNewCfgNode(Node n) {\n    Node parent \u003d n.getParent();\n    switch(parent.getType()) {\n        case Token.BLOCK:\n        case Token.SCRIPT:\n        case Token.TRY:\n        case Token.FINALLY:\n            return true;\n        case Token.FUNCTION:\n            return n !\u003d parent.getFirstChild().getNext();\n        case Token.WHILE:\n        case Token.DO:\n        case Token.IF:\n            return NodeUtil.getConditionExpression(parent) !\u003d n;\n        case Token.FOR:\n            if (NodeUtil.isForIn(parent)) {\n                return n \u003d\u003d parent.getLastChild();\n            } else {\n                return NodeUtil.getConditionExpression(parent) !\u003d n;\n            }\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.WITH:\n            return n !\u003d parent.getFirstChild();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 149,
      "functionName": "isEnteringNewCfgNode",
      "functionAnnotation": "",
      "functionDoc": "\n@return True if n should be represented by a new CFG node in the control\nflow graph.\n",
      "diff": "@@ -1,29 +1,29 @@\n public static boolean isEnteringNewCfgNode(Node n) {\n     Node parent \u003d n.getParent();\n     switch(parent.getType()) {\n         case Token.BLOCK:\n         case Token.SCRIPT:\n         case Token.TRY:\n         case Token.FINALLY:\n             return true;\n         case Token.FUNCTION:\n             return n !\u003d parent.getFirstChild().getNext();\n         case Token.WHILE:\n         case Token.DO:\n         case Token.IF:\n             return NodeUtil.getConditionExpression(parent) !\u003d n;\n         case Token.FOR:\n-            if (parent.getChildCount() \u003d\u003d 4) {\n-                return NodeUtil.getConditionExpression(parent) !\u003d n;\n-            } else {\n+            if (NodeUtil.isForIn(parent)) {\n                 return n \u003d\u003d parent.getLastChild();\n+            } else {\n+                return NodeUtil.getConditionExpression(parent) !\u003d n;\n             }\n         case Token.SWITCH:\n         case Token.CASE:\n         case Token.CATCH:\n         case Token.WITH:\n             return n !\u003d parent.getFirstChild();\n         default:\n             return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fe64e87cccd2c38524c0b36c49beb4c988d1453a": {
      "type": "Yintroduced",
      "commitMessage": "Never rename a variable named \"$super\", because the Prototype library\nuses this to do magic.\n\nBetter dead assignment elimination.\n\nEmit an error if you declare a parameter twice.\n\nDon\u0027t do anonymous function collapsing by default.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@12 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/17/09, 4:21 PM",
      "commitName": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,29 @@\n+public static boolean isEnteringNewCfgNode(Node n) {\n+    Node parent \u003d n.getParent();\n+    switch(parent.getType()) {\n+        case Token.BLOCK:\n+        case Token.SCRIPT:\n+        case Token.TRY:\n+        case Token.FINALLY:\n+            return true;\n+        case Token.FUNCTION:\n+            return n !\u003d parent.getFirstChild().getNext();\n+        case Token.WHILE:\n+        case Token.DO:\n+        case Token.IF:\n+            return NodeUtil.getConditionExpression(parent) !\u003d n;\n+        case Token.FOR:\n+            if (parent.getChildCount() \u003d\u003d 4) {\n+                return NodeUtil.getConditionExpression(parent) !\u003d n;\n+            } else {\n+                return n \u003d\u003d parent.getLastChild();\n+            }\n+        case Token.SWITCH:\n+        case Token.CASE:\n+        case Token.CATCH:\n+        case Token.WITH:\n+            return n !\u003d parent.getFirstChild();\n+        default:\n+            return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static boolean isEnteringNewCfgNode(Node n) {\n    Node parent \u003d n.getParent();\n    switch(parent.getType()) {\n        case Token.BLOCK:\n        case Token.SCRIPT:\n        case Token.TRY:\n        case Token.FINALLY:\n            return true;\n        case Token.FUNCTION:\n            return n !\u003d parent.getFirstChild().getNext();\n        case Token.WHILE:\n        case Token.DO:\n        case Token.IF:\n            return NodeUtil.getConditionExpression(parent) !\u003d n;\n        case Token.FOR:\n            if (parent.getChildCount() \u003d\u003d 4) {\n                return NodeUtil.getConditionExpression(parent) !\u003d n;\n            } else {\n                return n \u003d\u003d parent.getLastChild();\n            }\n        case Token.SWITCH:\n        case Token.CASE:\n        case Token.CATCH:\n        case Token.WITH:\n            return n !\u003d parent.getFirstChild();\n        default:\n            return false;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/ControlFlowGraph.java",
      "functionStartLine": 149,
      "functionName": "isEnteringNewCfgNode",
      "functionAnnotation": "",
      "functionDoc": "\n@return True if n should be represented by a new CFG node in the control\nflow graph.\n"
    }
  }
}