{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnionType.java",
  "functionName": "isEquivalentTo",
  "functionId": "isEquivalentTo___object-JSType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/UnionType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
  "functionStartLine": 314,
  "functionEndLine": 332,
  "numCommitsSeen": 33,
  "timeTaken": 1258,
  "changeHistory": [
    "2e48f3ae25431bfa204db0bba2eeb47191659cdb",
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
    "e829dafb9b3365bda6b6bb80f5fa97783752d143",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "2e48f3ae25431bfa204db0bba2eeb47191659cdb": "Ybodychange",
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9": "Ybodychange",
    "e829dafb9b3365bda6b6bb80f5fa97783752d143": "Ybodychange",
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e48f3ae25431bfa204db0bba2eeb47191659cdb": {
      "type": "Ybodychange",
      "commitMessage": "\nadded proper null-check to isEquivalentTo for union and function types\n\nR\u003dnicksantos\nDELTA\u003d15  (14 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3141\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1391 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/25/11, 3:00 PM",
      "commitName": "2e48f3ae25431bfa204db0bba2eeb47191659cdb",
      "commitAuthor": "bashir@google.com",
      "commitDateOld": "8/17/11, 11:43 AM",
      "commitNameOld": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 8.14,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object \u003d\u003d null) {\n        return false;\n    }\n    if (object.isUnionType()) {\n        UnionType that \u003d object.toMaybeUnionType();\n        if (alternates.size() !\u003d that.alternates.size()) {\n            return false;\n        }\n        for (JSType alternate : that.alternates) {\n            if (!hasAlternate(alternate)) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
      "functionStartLine": 305,
      "functionName": "isEquivalentTo",
      "functionAnnotation": "@Override",
      "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
      "diff": "@@ -1,17 +1,20 @@\n @Override\n public boolean isEquivalentTo(JSType object) {\n+    if (object \u003d\u003d null) {\n+        return false;\n+    }\n     if (object.isUnionType()) {\n         UnionType that \u003d object.toMaybeUnionType();\n         if (alternates.size() !\u003d that.alternates.size()) {\n             return false;\n         }\n         for (JSType alternate : that.alternates) {\n             if (!hasAlternate(alternate)) {\n                 return false;\n             }\n         }\n         return true;\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd a toUnionType method.\nI think this should be a lot more correct and easier for clients\nto use, because it will resolve typedefs of UnionTypes better.\nI will probably do this for all other instanceof checks if we\nagree that this is the way we want to go.\n\nR\u003djohnlenz\nDELTA\u003d79  (14 added, 7 deleted, 58 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3047\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1362 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/17/11, 11:43 AM",
      "commitName": "5ac633a4e4471847da5aa22bb1fcf28727eb7fe9",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "6/24/11, 5:34 PM",
      "commitNameOld": "c9b771aacfff102dbe74244f8b48eebcfe5278e2",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 53.76,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object.isUnionType()) {\n        UnionType that \u003d object.toMaybeUnionType();\n        if (alternates.size() !\u003d that.alternates.size()) {\n            return false;\n        }\n        for (JSType alternate : that.alternates) {\n            if (!hasAlternate(alternate)) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
      "functionStartLine": 305,
      "functionName": "isEquivalentTo",
      "functionAnnotation": "@Override",
      "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n public boolean isEquivalentTo(JSType object) {\n-    if (object instanceof UnionType) {\n-        UnionType that \u003d (UnionType) object;\n+    if (object.isUnionType()) {\n+        UnionType that \u003d object.toMaybeUnionType();\n         if (alternates.size() !\u003d that.alternates.size()) {\n             return false;\n         }\n         for (JSType alternate : that.alternates) {\n             if (!hasAlternate(alternate)) {\n                 return false;\n             }\n         }\n         return true;\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "e829dafb9b3365bda6b6bb80f5fa97783752d143": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/06/17 by nicksantos\n\n        don\u0027t use Sets to build union types.\n\n        R\u003djohnlenz\n        DELTA\u003d76  (52 added, 6 deleted, 18 changed)\n\nChange on 2010/06/17 by nicksantos\n\n        fix a couple bugs in goog.scope processing\n\n        R\u003drobbyw\n        DELTA\u003d54  (42 added, 11 deleted, 1 changed)\n\n\nChange on 2010/06/17 by acleung\n\n        Disables function argument check with @notypecheck is on for the whole file.\n\n        R\u003djohnlenz\n        DELTA\u003d8  (5 added, 1 deleted, 2 changed)\n\nChange on 2010/06/17 by dcc\n\n        Fix NPE in ExportExternsPass with --check_types\u003dfalse.\n\n        R\u003dacleung\n        DELTA\u003d72  (66 added, 4 deleted, 2 changed)\n\nChange on 2010/06/17 by johnlenz\n\n        Change stub method parameters to allow sanity checks to pass with\n        CrossModuleMethodMotion.\n\n        R\u003dnicksantos\n        DELTA\u003d7  (3 added, 0 deleted, 4 changed)\n\nChange on 2010/06/18 by johnlenz\n\n        Modify AliasKeywords so passes the sanity checks: don\u0027t create coding\n        convention constants without annotation them so that the tests pass\n        when the sanity checks are on.\n\n        R\u003dnicksantos\n        DELTA\u003d18  (5 added, 0 deleted, 13 changed)\n\nChange on 2010/06/18 by johnlenz\n\n        Fix source maps when run with sanity checks.\n\n        R\u003dnicksantos\n        DELTA\u003d10  (7 added, 0 deleted, 3 changed)\n\nChange on 2010/06/18 by johnlenz\n\n        Changes to PrepareAst to make it valid to run during SanityChecks.\n\n        R\u003dnicksantos\n        DELTA\u003d18  (5 added, 0 deleted, 13 changed)\n\nChange on 2010/06/18 by nicksantos\n\n        fix constant annotations in CollapseProperties.\n\n        R\u003djohnlenz\n        DELTA\u003d61  (49 added, 1 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d30002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@246 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/18/10, 5:18 PM",
      "commitName": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/26/10, 8:26 AM",
      "commitNameOld": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 23.37,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object instanceof UnionType) {\n        UnionType that \u003d (UnionType) object;\n        if (alternates.size() !\u003d that.alternates.size()) {\n            return false;\n        }\n        for (JSType alternate : that.alternates) {\n            if (!hasAlternate(alternate)) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
      "functionStartLine": 311,
      "functionName": "isEquivalentTo",
      "functionAnnotation": "@Override",
      "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
      "diff": "@@ -1,9 +1,17 @@\n @Override\n public boolean isEquivalentTo(JSType object) {\n     if (object instanceof UnionType) {\n         UnionType that \u003d (UnionType) object;\n-        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n+        if (alternates.size() !\u003d that.alternates.size()) {\n+            return false;\n+        }\n+        for (JSType alternate : that.alternates) {\n+            if (!hasAlternate(alternate)) {\n+                return false;\n+            }\n+        }\n+        return true;\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/26/10, 8:26 AM",
      "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/27/10, 12:02 PM",
          "commitNameOld": "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.85,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object instanceof UnionType) {\n        UnionType that \u003d (UnionType) object;\n        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n    } else {\n        return false;\n    }\n}",
          "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
          "functionStartLine": 311,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
          "diff": "@@ -1,9 +1,9 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (object instanceof UnionType) {\n         UnionType that \u003d (UnionType) object;\n-        return alternates.equals(that.alternates);\n+        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "equals",
            "newValue": "isEquivalentTo"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/27/10, 12:02 PM",
          "commitNameOld": "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.85,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object instanceof UnionType) {\n        UnionType that \u003d (UnionType) object;\n        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n    } else {\n        return false;\n    }\n}",
          "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
          "functionStartLine": 311,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
          "diff": "@@ -1,9 +1,9 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (object instanceof UnionType) {\n         UnionType that \u003d (UnionType) object;\n-        return alternates.equals(that.alternates);\n+        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[object-Object]",
            "newValue": "[object-JSType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "5/26/10, 8:26 AM",
          "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "4/27/10, 12:02 PM",
          "commitNameOld": "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311",
          "commitAuthorOld": "Nicholas.J.Santos",
          "daysBetweenCommits": 28.85,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\npublic boolean isEquivalentTo(JSType object) {\n    if (object instanceof UnionType) {\n        UnionType that \u003d (UnionType) object;\n        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n    } else {\n        return false;\n    }\n}",
          "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
          "functionStartLine": 311,
          "functionName": "isEquivalentTo",
          "functionAnnotation": "@Override",
          "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n",
          "diff": "@@ -1,9 +1,9 @@\n @Override\n-public boolean equals(Object object) {\n+public boolean isEquivalentTo(JSType object) {\n     if (object instanceof UnionType) {\n         UnionType that \u003d (UnionType) object;\n-        return alternates.equals(that.alternates);\n+        return this.isSubtype(that) \u0026\u0026 that.isSubtype(this);\n     } else {\n         return false;\n     }\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,9 @@\n+@Override\n+public boolean equals(Object object) {\n+    if (object instanceof UnionType) {\n+        UnionType that \u003d (UnionType) object;\n+        return alternates.equals(that.alternates);\n+    } else {\n+        return false;\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic boolean equals(Object object) {\n    if (object instanceof UnionType) {\n        UnionType that \u003d (UnionType) object;\n        return alternates.equals(that.alternates);\n    } else {\n        return false;\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/UnionType.java",
      "functionStartLine": 302,
      "functionName": "equals",
      "functionAnnotation": "@Override",
      "functionDoc": "Two union types are equal if they have the same number of alternates\nand all alternates are equal.\n"
    }
  }
}