{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RecordType.java",
  "functionName": "resolveInternal",
  "functionId": "resolveInternal___t-ErrorReporter__scope-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/RecordType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 271,
  "functionEndLine": 280,
  "numCommitsSeen": 19,
  "timeTaken": 2477,
  "changeHistory": [
    "bca9abb0e3062d373fe52c0e8340337588c05708"
  ],
  "changeHistoryShort": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Yintroduced",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,11 @@\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n+    for (Map.Entry\u003cString, JSType\u003e entry : properties.entrySet()) {\n+        JSType type \u003d entry.getValue();\n+        JSType resolvedType \u003d type.resolve(t, scope);\n+        if (type !\u003d resolvedType) {\n+            properties.put(entry.getKey(), resolvedType);\n+        }\n+    }\n+    return super.resolveInternal(t, scope);\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    for (Map.Entry\u003cString, JSType\u003e entry : properties.entrySet()) {\n        JSType type \u003d entry.getValue();\n        JSType resolvedType \u003d type.resolve(t, scope);\n        if (type !\u003d resolvedType) {\n            properties.put(entry.getKey(), resolvedType);\n        }\n    }\n    return super.resolveInternal(t, scope);\n}",
      "path": "src/com/google/javascript/rhino/jstype/RecordType.java",
      "functionStartLine": 285,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}