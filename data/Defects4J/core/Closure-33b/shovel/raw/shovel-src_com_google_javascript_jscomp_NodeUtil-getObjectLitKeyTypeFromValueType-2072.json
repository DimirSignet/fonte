{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "getObjectLitKeyTypeFromValueType",
  "functionId": "getObjectLitKeyTypeFromValueType___key-Node__valueType-JSType",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n",
  "functionStartLine": 2072,
  "functionEndLine": 2098,
  "numCommitsSeen": 120,
  "timeTaken": 7221,
  "changeHistory": [
    "5524adbda991632656059566b69cc2771ba42b7d",
    "bd9c7b620384fe5a98772729001ed56304459bc6",
    "01d1238a2a577d8988a72c29304a3283ca05a29a",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f",
    "70f817ae4f80ac11dd2dfe97babf5896c690fb48"
  ],
  "changeHistoryShort": {
    "5524adbda991632656059566b69cc2771ba42b7d": "Ybodychange",
    "bd9c7b620384fe5a98772729001ed56304459bc6": "Ybodychange",
    "01d1238a2a577d8988a72c29304a3283ca05a29a": "Ybodychange",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": "Ybodychange",
    "70f817ae4f80ac11dd2dfe97babf5896c690fb48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5524adbda991632656059566b69cc2771ba42b7d": {
      "type": "Ybodychange",
      "commitMessage": "\nRename a couple of AST nodes:\nDEFAULT becomes DEFAULT_CASE\nLP becomes PARAM_LIST\nGET becomes GETTER_DEF\nSET becomes SETTER_DEF\n\nR\u003dnicksantos\nDELTA\u003d215  (40 added, 5 deleted, 170 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3695\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1590 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/11/11, 4:42 PM",
      "commitName": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 1:51 PM",
      "commitNameOld": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 2.12,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n    if (valueType !\u003d null) {\n        switch(key.getType()) {\n            case Token.GETTER_DEF:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    valueType \u003d fntype.getReturnType();\n                } else {\n                    return null;\n                }\n                break;\n            case Token.SETTER_DEF:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    Node param \u003d fntype.getParametersNode().getFirstChild();\n                    valueType \u003d param.getJSType();\n                } else {\n                    return null;\n                }\n                break;\n        }\n    }\n    return valueType;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 2075,
      "functionName": "getObjectLitKeyTypeFromValueType",
      "functionAnnotation": "",
      "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n",
      "diff": "@@ -1,24 +1,24 @@\n static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n     if (valueType !\u003d null) {\n         switch(key.getType()) {\n-            case Token.GET:\n+            case Token.GETTER_DEF:\n                 if (valueType.isFunctionType()) {\n                     FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     valueType \u003d fntype.getReturnType();\n                 } else {\n                     return null;\n                 }\n                 break;\n-            case Token.SET:\n+            case Token.SETTER_DEF:\n                 if (valueType.isFunctionType()) {\n                     FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     Node param \u003d fntype.getParametersNode().getFirstChild();\n                     valueType \u003d param.getJSType();\n                 } else {\n                     return null;\n                 }\n                 break;\n         }\n     }\n     return valueType;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bd9c7b620384fe5a98772729001ed56304459bc6": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\ntry #2. the bugs in jstestc were fixed. this cl is exactly\nthe same as the original\n\nR\u003djohnlenz\nDELTA\u003d317  (79 added, 47 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3078\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1367 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 3:46 PM",
      "commitName": "bd9c7b620384fe5a98772729001ed56304459bc6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 10:40 AM",
      "commitNameOld": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n    if (valueType !\u003d null) {\n        switch(key.getType()) {\n            case Token.GET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    valueType \u003d fntype.getReturnType();\n                } else {\n                    return null;\n                }\n                break;\n            case Token.SET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    Node param \u003d fntype.getParametersNode().getFirstChild();\n                    valueType \u003d param.getJSType();\n                } else {\n                    return null;\n                }\n                break;\n        }\n    }\n    return valueType;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 2160,
      "functionName": "getObjectLitKeyTypeFromValueType",
      "functionAnnotation": "",
      "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n",
      "diff": "@@ -1,24 +1,24 @@\n static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n     if (valueType !\u003d null) {\n         switch(key.getType()) {\n             case Token.GET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     valueType \u003d fntype.getReturnType();\n                 } else {\n                     return null;\n                 }\n                 break;\n             case Token.SET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     Node param \u003d fntype.getParametersNode().getFirstChild();\n                     valueType \u003d param.getJSType();\n                 } else {\n                     return null;\n                 }\n                 break;\n         }\n     }\n     return valueType;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "01d1238a2a577d8988a72c29304a3283ca05a29a": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nbroke some tests\n\n*** Original change description ***\n\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nDELTA\u003d318  (48 added, 79 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3075\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1364 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 10:40 AM",
      "commitName": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 9:38 AM",
      "commitNameOld": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n    if (valueType !\u003d null) {\n        switch(key.getType()) {\n            case Token.GET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d ((FunctionType) valueType);\n                    valueType \u003d fntype.getReturnType();\n                } else {\n                    return null;\n                }\n                break;\n            case Token.SET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d ((FunctionType) valueType);\n                    Node param \u003d fntype.getParametersNode().getFirstChild();\n                    valueType \u003d param.getJSType();\n                } else {\n                    return null;\n                }\n                break;\n        }\n    }\n    return valueType;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 2160,
      "functionName": "getObjectLitKeyTypeFromValueType",
      "functionAnnotation": "",
      "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n",
      "diff": "@@ -1,24 +1,24 @@\n static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n     if (valueType !\u003d null) {\n         switch(key.getType()) {\n             case Token.GET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n+                    FunctionType fntype \u003d ((FunctionType) valueType);\n                     valueType \u003d fntype.getReturnType();\n                 } else {\n                     return null;\n                 }\n                 break;\n             case Token.SET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n+                    FunctionType fntype \u003d ((FunctionType) valueType);\n                     Node param \u003d fntype.getParametersNode().getFirstChild();\n                     valueType \u003d param.getJSType();\n                 } else {\n                     return null;\n                 }\n                 break;\n         }\n     }\n     return valueType;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nR\u003djohnlenz\nDELTA\u003d318  (79 added, 48 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3074\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1363 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 9:38 AM",
      "commitName": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/8/11, 2:51 PM",
      "commitNameOld": "43cece8ccf72521faa04fc79fddfc5f7d661a787",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 9.78,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "actualSource": "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n    if (valueType !\u003d null) {\n        switch(key.getType()) {\n            case Token.GET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    valueType \u003d fntype.getReturnType();\n                } else {\n                    return null;\n                }\n                break;\n            case Token.SET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                    Node param \u003d fntype.getParametersNode().getFirstChild();\n                    valueType \u003d param.getJSType();\n                } else {\n                    return null;\n                }\n                break;\n        }\n    }\n    return valueType;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 2160,
      "functionName": "getObjectLitKeyTypeFromValueType",
      "functionAnnotation": "",
      "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n",
      "diff": "@@ -1,24 +1,24 @@\n static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n     if (valueType !\u003d null) {\n         switch(key.getType()) {\n             case Token.GET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     valueType \u003d fntype.getReturnType();\n                 } else {\n                     return null;\n                 }\n                 break;\n             case Token.SET:\n                 if (valueType.isFunctionType()) {\n-                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    FunctionType fntype \u003d valueType.toMaybeFunctionType();\n                     Node param \u003d fntype.getParametersNode().getFirstChild();\n                     valueType \u003d param.getJSType();\n                 } else {\n                     return null;\n                 }\n                 break;\n         }\n     }\n     return valueType;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "70f817ae4f80ac11dd2dfe97babf5896c690fb48": {
      "type": "Yintroduced",
      "commitMessage": "\nAdd basic getters and setters support to TypeInference.\n\nR\u003dnicksantos\nDELTA\u003d573  (533 added, 15 deleted, 25 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d366\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@735 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/27/11, 10:33 AM",
      "commitName": "70f817ae4f80ac11dd2dfe97babf5896c690fb48",
      "commitAuthor": "johnlenz@google.com",
      "diff": "@@ -0,0 +1,24 @@\n+static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n+    if (valueType !\u003d null) {\n+        switch(key.getType()) {\n+            case Token.GET:\n+                if (valueType.isFunctionType()) {\n+                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    valueType \u003d fntype.getReturnType();\n+                } else {\n+                    return null;\n+                }\n+                break;\n+            case Token.SET:\n+                if (valueType.isFunctionType()) {\n+                    FunctionType fntype \u003d ((FunctionType) valueType);\n+                    Node param \u003d fntype.getParametersNode().getFirstChild();\n+                    valueType \u003d param.getJSType();\n+                } else {\n+                    return null;\n+                }\n+                break;\n+        }\n+    }\n+    return valueType;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType) {\n    if (valueType !\u003d null) {\n        switch(key.getType()) {\n            case Token.GET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d ((FunctionType) valueType);\n                    valueType \u003d fntype.getReturnType();\n                } else {\n                    return null;\n                }\n                break;\n            case Token.SET:\n                if (valueType.isFunctionType()) {\n                    FunctionType fntype \u003d ((FunctionType) valueType);\n                    Node param \u003d fntype.getParametersNode().getFirstChild();\n                    valueType \u003d param.getJSType();\n                } else {\n                    return null;\n                }\n                break;\n        }\n    }\n    return valueType;\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1888,
      "functionName": "getObjectLitKeyTypeFromValueType",
      "functionAnnotation": "",
      "functionDoc": "\n@param key A OBJECTLIT key node.\n@return The type expected when using the key.\n"
    }
  }
}