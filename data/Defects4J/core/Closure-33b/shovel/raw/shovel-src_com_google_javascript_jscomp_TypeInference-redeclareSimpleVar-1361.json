{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeInference.java",
  "functionName": "redeclareSimpleVar",
  "functionId": "redeclareSimpleVar___scope-FlowScope__nameNode-Node__varType-JSType",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypeInference.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 1361,
  "functionEndLine": 1372,
  "numCommitsSeen": 118,
  "timeTaken": 4758,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "dff730a3759cad9c491f72d9905eee93962d3d35",
    "de684ba3efacbeb36f741eb8ed1598cf34df7783",
    "f78e933dbc678936ed5fcf453ab3c80b87d1e59d",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "dff730a3759cad9c491f72d9905eee93962d3d35": "Ybodychange",
    "de684ba3efacbeb36f741eb8ed1598cf34df7783": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "f78e933dbc678936ed5fcf453ab3c80b87d1e59d": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/7/11, 2:21 PM",
      "commitNameOld": "6641663fa9970c4d7bcdd96a6f31b83b18c3ee3d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 2.76,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.isName());\n    String varName \u003d nameNode.getString();\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (isUnflowable(syntacticScope.getVar(varName))) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 1276,
      "functionName": "redeclareSimpleVar",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n-    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n+    Preconditions.checkState(nameNode.isName());\n     String varName \u003d nameNode.getString();\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n     if (isUnflowable(syntacticScope.getVar(varName))) {\n         return;\n     }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "dff730a3759cad9c491f72d9905eee93962d3d35": {
      "type": "Ybodychange",
      "commitMessage": "\nBreak out basic function analysis into a separate pass, rather\nthan trying to do it as we go.\nThere should be no functional change, but this should make it\na lot easier to move things around in the future.\n\nR\u003dacleung\nDELTA\u003d332  (224 added, 89 deleted, 19 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3318\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1460 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/21/11, 5:18 PM",
      "commitName": "dff730a3759cad9c491f72d9905eee93962d3d35",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/8/11, 3:30 PM",
      "commitNameOld": "b52343f59b46c0730b090e358f3a5dbcb0dc976c",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 13.07,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n    String varName \u003d nameNode.getString();\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (isUnflowable(syntacticScope.getVar(varName))) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 1273,
      "functionName": "redeclareSimpleVar",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n     Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n     String varName \u003d nameNode.getString();\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n-    if (unflowableVarNames.contains(varName)) {\n+    if (isUnflowable(syntacticScope.getVar(varName))) {\n         return;\n     }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "de684ba3efacbeb36f741eb8ed1598cf34df7783": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "\ndereference all qualified names, not just simple ones\nFixes issue 483\n\nR\u003dacleung\nDELTA\u003d41  (30 added, 3 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2680\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1273 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/19/11, 4:09 PM",
      "commitName": "de684ba3efacbeb36f741eb8ed1598cf34df7783",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "\ndereference all qualified names, not just simple ones\nFixes issue 483\n\nR\u003dacleung\nDELTA\u003d41  (30 added, 3 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2680\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1273 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/19/11, 4:09 PM",
          "commitName": "de684ba3efacbeb36f741eb8ed1598cf34df7783",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/1/11, 2:00 PM",
          "commitNameOld": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 18.09,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n    String varName \u003d nameNode.getString();\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (unflowableVarNames.contains(varName)) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
          "path": "src/com/google/javascript/jscomp/TypeInference.java",
          "functionStartLine": 1330,
          "functionName": "redeclareSimpleVar",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,11 @@\n-private void redeclare(FlowScope scope, String varName, JSType varType) {\n+private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n+    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n+    String varName \u003d nameNode.getString();\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n     if (unflowableVarNames.contains(varName)) {\n         return;\n     }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "redeclare",
            "newValue": "redeclareSimpleVar"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "\ndereference all qualified names, not just simple ones\nFixes issue 483\n\nR\u003dacleung\nDELTA\u003d41  (30 added, 3 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2680\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1273 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/19/11, 4:09 PM",
          "commitName": "de684ba3efacbeb36f741eb8ed1598cf34df7783",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/1/11, 2:00 PM",
          "commitNameOld": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 18.09,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n    String varName \u003d nameNode.getString();\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (unflowableVarNames.contains(varName)) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
          "path": "src/com/google/javascript/jscomp/TypeInference.java",
          "functionStartLine": 1330,
          "functionName": "redeclareSimpleVar",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,11 @@\n-private void redeclare(FlowScope scope, String varName, JSType varType) {\n+private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n+    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n+    String varName \u003d nameNode.getString();\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n     if (unflowableVarNames.contains(varName)) {\n         return;\n     }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[scope-FlowScope, varName-String, varType-JSType]",
            "newValue": "[scope-FlowScope, nameNode-Node, varType-JSType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\ndereference all qualified names, not just simple ones\nFixes issue 483\n\nR\u003dacleung\nDELTA\u003d41  (30 added, 3 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2680\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1273 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "7/19/11, 4:09 PM",
          "commitName": "de684ba3efacbeb36f741eb8ed1598cf34df7783",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "7/1/11, 2:00 PM",
          "commitNameOld": "03ce555bcedcf98d99de1b4f8a6238ba75ee6850",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 18.09,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n    String varName \u003d nameNode.getString();\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (unflowableVarNames.contains(varName)) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
          "path": "src/com/google/javascript/jscomp/TypeInference.java",
          "functionStartLine": 1330,
          "functionName": "redeclareSimpleVar",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,9 +1,11 @@\n-private void redeclare(FlowScope scope, String varName, JSType varType) {\n+private void redeclareSimpleVar(FlowScope scope, Node nameNode, JSType varType) {\n+    Preconditions.checkState(nameNode.getType() \u003d\u003d Token.NAME);\n+    String varName \u003d nameNode.getString();\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n     if (unflowableVarNames.contains(varName)) {\n         return;\n     }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f78e933dbc678936ed5fcf453ab3c80b87d1e59d": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t do local type inference on local vars that are assigned in inner\nscopes, because it\u0027s pretty close to impossible to do it right.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@84 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/1/10, 4:09 PM",
      "commitName": "f78e933dbc678936ed5fcf453ab3c80b87d1e59d",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/28/10, 1:52 PM",
      "commitNameOld": "52ecbc65e981b9f169466f8898155bc5f8bfad7a",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 4.1,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void redeclare(FlowScope scope, String varName, JSType varType) {\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    if (unflowableVarNames.contains(varName)) {\n        return;\n    }\n    scope.inferSlotType(varName, varType);\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 1170,
      "functionName": "redeclare",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,6 +1,9 @@\n private void redeclare(FlowScope scope, String varName, JSType varType) {\n     if (varType \u003d\u003d null) {\n         varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n     }\n+    if (unflowableVarNames.contains(varName)) {\n+        return;\n+    }\n     scope.inferSlotType(varName, varType);\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,6 @@\n+private void redeclare(FlowScope scope, String varName, JSType varType) {\n+    if (varType \u003d\u003d null) {\n+        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n+    }\n+    scope.inferSlotType(varName, varType);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void redeclare(FlowScope scope, String varName, JSType varType) {\n    if (varType \u003d\u003d null) {\n        varType \u003d getNativeType(JSTypeNative.UNKNOWN_TYPE);\n    }\n    scope.inferSlotType(varName, varType);\n}",
      "path": "src/com/google/javascript/jscomp/TypeInference.java",
      "functionStartLine": 1141,
      "functionName": "redeclare",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}