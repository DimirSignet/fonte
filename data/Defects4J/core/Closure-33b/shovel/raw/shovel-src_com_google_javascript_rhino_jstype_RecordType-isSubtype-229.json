{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RecordType.java",
  "functionName": "isSubtype",
  "functionId": "isSubtype___typeA-ObjectType__typeB-RecordType",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/RecordType.java",
  "functionAnnotation": "",
  "functionDoc": "Determines if typeA is a subtype of typeB\n",
  "functionStartLine": 229,
  "functionEndLine": 268,
  "numCommitsSeen": 19,
  "timeTaken": 557,
  "changeHistory": [
    "cf5fd88f13f0b11625ac407f85cb58b36862e173",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf5fd88f13f0b11625ac407f85cb58b36862e173": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/25 by nicksantos\n\n        start moving away from using Object#equals for type equality.\n\n        R\u003djohnlenz\n        DELTA\u003d445  (98 added, 3 deleted, 344 changed)\n\nChange on 2010/05/25 by acleung\n\n        Fix bug with resolving a member function of a resolved constructor.\n\n        R\u003djohnlenz\n        DELTA\u003d48  (48 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d12002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@231 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/26/10, 8:26 AM",
      "commitName": "cf5fd88f13f0b11625ac407f85cb58b36862e173",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "1/26/10, 1:59 PM",
      "commitNameOld": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 119.73,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n    for (String property : typeB.properties.keySet()) {\n        if (!typeA.hasProperty(property)) {\n            return false;\n        }\n        JSType propA \u003d typeA.getPropertyType(property);\n        JSType propB \u003d typeB.getPropertyType(property);\n        if (!propA.isUnknownType() \u0026\u0026 !propB.isUnknownType()) {\n            if (typeA.isPropertyTypeDeclared(property)) {\n                if (!propA.isEquivalentTo(propB)) {\n                    return false;\n                }\n            } else {\n                if (!propA.isSubtype(propB)) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/RecordType.java",
      "functionStartLine": 231,
      "functionName": "isSubtype",
      "functionAnnotation": "",
      "functionDoc": "Determines if typeA is a subtype of typeB\n",
      "diff": "@@ -1,21 +1,21 @@\n static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n     for (String property : typeB.properties.keySet()) {\n         if (!typeA.hasProperty(property)) {\n             return false;\n         }\n         JSType propA \u003d typeA.getPropertyType(property);\n         JSType propB \u003d typeB.getPropertyType(property);\n         if (!propA.isUnknownType() \u0026\u0026 !propB.isUnknownType()) {\n             if (typeA.isPropertyTypeDeclared(property)) {\n-                if (!propA.equals(propB)) {\n+                if (!propA.isEquivalentTo(propB)) {\n                     return false;\n                 }\n             } else {\n                 if (!propA.isSubtype(propB)) {\n                     return false;\n                 }\n             }\n         }\n     }\n     return true;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,21 @@\n+static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n+    for (String property : typeB.properties.keySet()) {\n+        if (!typeA.hasProperty(property)) {\n+            return false;\n+        }\n+        JSType propA \u003d typeA.getPropertyType(property);\n+        JSType propB \u003d typeB.getPropertyType(property);\n+        if (!propA.isUnknownType() \u0026\u0026 !propB.isUnknownType()) {\n+            if (typeA.isPropertyTypeDeclared(property)) {\n+                if (!propA.equals(propB)) {\n+                    return false;\n+                }\n+            } else {\n+                if (!propA.isSubtype(propB)) {\n+                    return false;\n+                }\n+            }\n+        }\n+    }\n+    return true;\n+}\n\\ No newline at end of file\n",
      "actualSource": "static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n    for (String property : typeB.properties.keySet()) {\n        if (!typeA.hasProperty(property)) {\n            return false;\n        }\n        JSType propA \u003d typeA.getPropertyType(property);\n        JSType propB \u003d typeB.getPropertyType(property);\n        if (!propA.isUnknownType() \u0026\u0026 !propB.isUnknownType()) {\n            if (typeA.isPropertyTypeDeclared(property)) {\n                if (!propA.equals(propB)) {\n                    return false;\n                }\n            } else {\n                if (!propA.isSubtype(propB)) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}",
      "path": "src/com/google/javascript/rhino/jstype/RecordType.java",
      "functionStartLine": 218,
      "functionName": "isSubtype",
      "functionAnnotation": "",
      "functionDoc": "Determines if typeA is a subtype of typeB\n"
    }
  }
}