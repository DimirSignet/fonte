{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataFlowAnalysis.java",
  "functionName": "initialize",
  "functionId": "$initialize",
  "sourceFilePath": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 391,
  "functionEndLine": 405,
  "numCommitsSeen": 17,
  "timeTaken": 730,
  "changeHistory": [
    "97bbbffb65eda01aa9b38a5cec43a598afb39070",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97bbbffb65eda01aa9b38a5cec43a598afb39070": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/05/12 by nick\n\n        simplify how we build source map paths.\n\n        R\u003djoey\n        DELTA\u003d111  (76 added, 4 deleted, 31 changed)\n\nChange on 2010/05/12 by nick\n\n        Use generics magic to clean up the graph code a bit.\n        These changes don\u0027t give the performance improvements that I hoped,\n        but i think they\u0027re good changes anyway.\n\n        R\u003dalan\n        DELTA\u003d253  (69 added, 121 deleted, 63 changed)\n\nChange on 2010/05/12 by nick\n\n        API clean-up: don\u0027t store null return types or parameter-list types.\n\n        R\u003drobert\n        DELTA\u003d195  (89 added, 54 deleted, 52 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003ddzaoho\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@209 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/13/10, 10:46 AM",
      "commitName": "97bbbffb65eda01aa9b38a5cec43a598afb39070",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "5/7/10, 2:59 PM",
      "commitNameOld": "475548341c38755063c8475379745ba31caffe41",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nprotected void initialize() {\n    orderedWorkSet.clear();\n    for (DiGraphNode\u003cN, Branch\u003e node : getCfg().getDirectedGraphNodes()) {\n        int outEdgeCount \u003d getCfg().getOutEdges(node.getValue()).size();\n        List\u003cL\u003e outLattices \u003d Lists.newArrayList();\n        for (int i \u003d 0; i \u003c outEdgeCount; i++) {\n            outLattices.add(createInitialEstimateLattice());\n        }\n        node.setAnnotation(new BranchedFlowState\u003cL\u003e(createInitialEstimateLattice(), outLattices));\n        if (node !\u003d getCfg().getImplicitReturn()) {\n            orderedWorkSet.add(node);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
      "functionStartLine": 394,
      "functionName": "initialize",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,15 @@\n @Override\n protected void initialize() {\n     orderedWorkSet.clear();\n     for (DiGraphNode\u003cN, Branch\u003e node : getCfg().getDirectedGraphNodes()) {\n-        List\u003cDiGraphEdge\u003cN, Branch\u003e\u003e edgeList \u003d getCfg().getOutEdges(node.getValue());\n-        int outEdgeCount \u003d edgeList.size();\n+        int outEdgeCount \u003d getCfg().getOutEdges(node.getValue()).size();\n         List\u003cL\u003e outLattices \u003d Lists.newArrayList();\n         for (int i \u003d 0; i \u003c outEdgeCount; i++) {\n             outLattices.add(createInitialEstimateLattice());\n         }\n         node.setAnnotation(new BranchedFlowState\u003cL\u003e(createInitialEstimateLattice(), outLattices));\n         if (node !\u003d getCfg().getImplicitReturn()) {\n             orderedWorkSet.add(node);\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,16 @@\n+@Override\n+protected void initialize() {\n+    orderedWorkSet.clear();\n+    for (DiGraphNode\u003cN, Branch\u003e node : getCfg().getDirectedGraphNodes()) {\n+        List\u003cDiGraphEdge\u003cN, Branch\u003e\u003e edgeList \u003d getCfg().getOutEdges(node.getValue());\n+        int outEdgeCount \u003d edgeList.size();\n+        List\u003cL\u003e outLattices \u003d Lists.newArrayList();\n+        for (int i \u003d 0; i \u003c outEdgeCount; i++) {\n+            outLattices.add(createInitialEstimateLattice());\n+        }\n+        node.setAnnotation(new BranchedFlowState\u003cL\u003e(createInitialEstimateLattice(), outLattices));\n+        if (node !\u003d getCfg().getImplicitReturn()) {\n+            orderedWorkSet.add(node);\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nprotected void initialize() {\n    orderedWorkSet.clear();\n    for (DiGraphNode\u003cN, Branch\u003e node : getCfg().getDirectedGraphNodes()) {\n        List\u003cDiGraphEdge\u003cN, Branch\u003e\u003e edgeList \u003d getCfg().getOutEdges(node.getValue());\n        int outEdgeCount \u003d edgeList.size();\n        List\u003cL\u003e outLattices \u003d Lists.newArrayList();\n        for (int i \u003d 0; i \u003c outEdgeCount; i++) {\n            outLattices.add(createInitialEstimateLattice());\n        }\n        node.setAnnotation(new BranchedFlowState\u003cL\u003e(createInitialEstimateLattice(), outLattices));\n        if (node !\u003d getCfg().getImplicitReturn()) {\n            orderedWorkSet.add(node);\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/DataFlowAnalysis.java",
      "functionStartLine": 453,
      "functionName": "initialize",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}