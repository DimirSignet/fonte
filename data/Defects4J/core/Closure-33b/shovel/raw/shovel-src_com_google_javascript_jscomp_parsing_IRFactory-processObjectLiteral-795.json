{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "processObjectLiteral",
  "functionId": "$processObjectLiteral___literalNode-ObjectLiteral",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 795,
  "functionEndLine": 831,
  "numCommitsSeen": 65,
  "timeTaken": 5360,
  "changeHistory": [
    "5524adbda991632656059566b69cc2771ba42b7d",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "82d3c01785f8b25113ca3fd7cc8b37da5d8a44a4",
    "7e0ecb47ba5e1f50dc2aefbdf4f20379089f49cd",
    "be0104009f06fafdb7428398d2c8299d13a1df12",
    "28982c32f367108886311969e01d69156230fd35",
    "1c92a5447451e3d6e663d4bf508237a6eaeccf90",
    "34fd5f8275ae69fc772c2283a3c5fd13b93a7c42",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
    "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "5524adbda991632656059566b69cc2771ba42b7d": "Ybodychange",
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "82d3c01785f8b25113ca3fd7cc8b37da5d8a44a4": "Ybodychange",
    "7e0ecb47ba5e1f50dc2aefbdf4f20379089f49cd": "Ybodychange",
    "be0104009f06fafdb7428398d2c8299d13a1df12": "Ybodychange",
    "28982c32f367108886311969e01d69156230fd35": "Ybodychange",
    "1c92a5447451e3d6e663d4bf508237a6eaeccf90": "Ybodychange",
    "34fd5f8275ae69fc772c2283a3c5fd13b93a7c42": "Ybodychange",
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": "Ybodychange",
    "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5524adbda991632656059566b69cc2771ba42b7d": {
      "type": "Ybodychange",
      "commitMessage": "\nRename a couple of AST nodes:\nDEFAULT becomes DEFAULT_CASE\nLP becomes PARAM_LIST\nGET becomes GETTER_DEF\nSET becomes SETTER_DEF\n\nR\u003dnicksantos\nDELTA\u003d215  (40 added, 5 deleted, 170 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3695\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1590 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/11/11, 4:42 PM",
      "commitName": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/10/11, 8:36 AM",
      "commitNameOld": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 1.34,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        Node value \u003d transform(el.getRight());\n        if (el.isGetter()) {\n            key.setType(Token.GETTER_DEF);\n            Preconditions.checkState(value.isFunction());\n            if (getFnParamNode(value).hasChildren()) {\n                reportGetterParam(el.getLeft());\n            }\n        } else if (el.isSetter()) {\n            key.setType(Token.SETTER_DEF);\n            Preconditions.checkState(value.isFunction());\n            if (!getFnParamNode(value).hasOneChild()) {\n                reportSetterParam(el.getLeft());\n            }\n        }\n        key.addChildToFront(value);\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 754,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n         if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n             if (el.isGetter()) {\n                 reportGetter(el);\n                 continue;\n             } else if (el.isSetter()) {\n                 reportSetter(el);\n                 continue;\n             }\n         }\n         Node key \u003d transformAsString(el.getLeft());\n         Node value \u003d transform(el.getRight());\n         if (el.isGetter()) {\n-            key.setType(Token.GET);\n+            key.setType(Token.GETTER_DEF);\n             Preconditions.checkState(value.isFunction());\n             if (getFnParamNode(value).hasChildren()) {\n                 reportGetterParam(el.getLeft());\n             }\n         } else if (el.isSetter()) {\n-            key.setType(Token.SET);\n+            key.setType(Token.SETTER_DEF);\n             Preconditions.checkState(value.isFunction());\n             if (!getFnParamNode(value).hasOneChild()) {\n                 reportSetterParam(el.getLeft());\n             }\n         }\n         key.addChildToFront(value);\n         node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 2:58 PM",
      "commitNameOld": "de195d17e438e13ab7d26f8f9550ba98ff7b47cb",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.73,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        Node value \u003d transform(el.getRight());\n        if (el.isGetter()) {\n            key.setType(Token.GET);\n            Preconditions.checkState(value.isFunction());\n            if (getFnParamNode(value).hasChildren()) {\n                reportGetterParam(el.getLeft());\n            }\n        } else if (el.isSetter()) {\n            key.setType(Token.SET);\n            Preconditions.checkState(value.isFunction());\n            if (!getFnParamNode(value).hasOneChild()) {\n                reportSetterParam(el.getLeft());\n            }\n        }\n        key.addChildToFront(value);\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 754,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n         if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n             if (el.isGetter()) {\n                 reportGetter(el);\n                 continue;\n             } else if (el.isSetter()) {\n                 reportSetter(el);\n                 continue;\n             }\n         }\n         Node key \u003d transformAsString(el.getLeft());\n         Node value \u003d transform(el.getRight());\n         if (el.isGetter()) {\n             key.setType(Token.GET);\n-            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n+            Preconditions.checkState(value.isFunction());\n             if (getFnParamNode(value).hasChildren()) {\n                 reportGetterParam(el.getLeft());\n             }\n         } else if (el.isSetter()) {\n             key.setType(Token.SET);\n-            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n+            Preconditions.checkState(value.isFunction());\n             if (!getFnParamNode(value).hasOneChild()) {\n                 reportSetterParam(el.getLeft());\n             }\n         }\n         key.addChildToFront(value);\n         node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "82d3c01785f8b25113ca3fd7cc8b37da5d8a44a4": {
      "type": "Ybodychange",
      "commitMessage": "\nTweak the parser to handle the restrict ES5 keyword set.\n\nR\u003dacleung\nDELTA\u003d145  (107 added, 7 deleted, 31 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d765\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@852 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/4/11, 4:48 PM",
      "commitName": "82d3c01785f8b25113ca3fd7cc8b37da5d8a44a4",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "2/17/11, 1:20 PM",
      "commitNameOld": "084b868bc2fbf9d6d0319e5a362ade1d7f43f899",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 15.14,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        Node value \u003d transform(el.getRight());\n        if (el.isGetter()) {\n            key.setType(Token.GET);\n            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n            if (getFnParamNode(value).hasChildren()) {\n                reportGetterParam(el.getLeft());\n            }\n        } else if (el.isSetter()) {\n            key.setType(Token.SET);\n            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n            if (!getFnParamNode(value).hasOneChild()) {\n                reportSetterParam(el.getLeft());\n            }\n        }\n        key.addChildToFront(value);\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 691,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,36 +1,36 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n-        if (!config.acceptES5) {\n+        if (config.languageMode \u003d\u003d LanguageMode.ECMASCRIPT3) {\n             if (el.isGetter()) {\n                 reportGetter(el);\n                 continue;\n             } else if (el.isSetter()) {\n                 reportSetter(el);\n                 continue;\n             }\n         }\n         Node key \u003d transformAsString(el.getLeft());\n         Node value \u003d transform(el.getRight());\n         if (el.isGetter()) {\n             key.setType(Token.GET);\n             Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n             if (getFnParamNode(value).hasChildren()) {\n                 reportGetterParam(el.getLeft());\n             }\n         } else if (el.isSetter()) {\n             key.setType(Token.SET);\n             Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n             if (!getFnParamNode(value).hasOneChild()) {\n                 reportSetterParam(el.getLeft());\n             }\n         }\n         key.addChildToFront(value);\n         node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7e0ecb47ba5e1f50dc2aefbdf4f20379089f49cd": {
      "type": "Ybodychange",
      "commitMessage": "\nOnly accept ES5 style getter/setters (the must have 0 and 1 parameters\nrespectively).\n\nR\u003dnicksantos\nDELTA\u003d38  (37 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d300\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@701 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/18/11, 12:48 PM",
      "commitName": "7e0ecb47ba5e1f50dc2aefbdf4f20379089f49cd",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "1/11/11, 11:28 AM",
      "commitNameOld": "4839e1ea57f9a1a26debd2cc8f22beef7282b490",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 7.06,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (!config.acceptES5) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        Node value \u003d transform(el.getRight());\n        if (el.isGetter()) {\n            key.setType(Token.GET);\n            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n            if (getFnParamNode(value).hasChildren()) {\n                reportGetterParam(el.getLeft());\n            }\n        } else if (el.isSetter()) {\n            key.setType(Token.SET);\n            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n            if (!getFnParamNode(value).hasOneChild()) {\n                reportSetterParam(el.getLeft());\n            }\n        }\n        key.addChildToFront(value);\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 641,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,36 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n         if (!config.acceptES5) {\n             if (el.isGetter()) {\n                 reportGetter(el);\n                 continue;\n             } else if (el.isSetter()) {\n                 reportSetter(el);\n                 continue;\n             }\n         }\n         Node key \u003d transformAsString(el.getLeft());\n+        Node value \u003d transform(el.getRight());\n         if (el.isGetter()) {\n             key.setType(Token.GET);\n+            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n+            if (getFnParamNode(value).hasChildren()) {\n+                reportGetterParam(el.getLeft());\n+            }\n         } else if (el.isSetter()) {\n             key.setType(Token.SET);\n+            Preconditions.checkState(value.getType() \u003d\u003d Token.FUNCTION);\n+            if (!getFnParamNode(value).hasOneChild()) {\n+                reportSetterParam(el.getLeft());\n+            }\n         }\n-        key.addChildToFront(transform(el.getRight()));\n+        key.addChildToFront(value);\n         node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "be0104009f06fafdb7428398d2c8299d13a1df12": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nFixed a stack size issue.\n\n*** Original change description ***\n\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nTo investigate why this breaks builds.\n\n*** Original change description ***\n\nAdd whitespace only mode support for ES5 getters and setters.\n\nR\u003dacleung\nDELTA\u003d318  (263 added, 31 deleted, 24 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d87\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@605 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/7/10, 12:48 PM",
      "commitName": "be0104009f06fafdb7428398d2c8299d13a1df12",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/6/10, 1:39 PM",
      "commitNameOld": "28982c32f367108886311969e01d69156230fd35",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (!config.acceptES5) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        if (el.isGetter()) {\n            key.setType(Token.GET);\n        } else if (el.isSetter()) {\n            key.setType(Token.SET);\n        }\n        key.addChildToFront(transform(el.getRight()));\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 631,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,27 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n-        if (el.isGetter()) {\n-            reportGetter(el);\n-        } else if (el.isSetter()) {\n-            reportSetter(el);\n-        } else {\n-            Node key \u003d transformAsString(el.getLeft());\n-            key.addChildToFront(transform(el.getRight()));\n-            node.addChildToBack(key);\n+        if (!config.acceptES5) {\n+            if (el.isGetter()) {\n+                reportGetter(el);\n+                continue;\n+            } else if (el.isSetter()) {\n+                reportSetter(el);\n+                continue;\n+            }\n         }\n+        Node key \u003d transformAsString(el.getLeft());\n+        if (el.isGetter()) {\n+            key.setType(Token.GET);\n+        } else if (el.isSetter()) {\n+            key.setType(Token.SET);\n+        }\n+        key.addChildToFront(transform(el.getRight()));\n+        node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "28982c32f367108886311969e01d69156230fd35": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nTo investigate why this breaks builds.\n\n*** Original change description ***\n\nAdd whitespace only mode support for ES5 getters and setters.\n\nR\u003dacleung\nDELTA\u003d302  (19 added, 251 deleted, 32 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d70\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@599 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/6/10, 1:39 PM",
      "commitName": "28982c32f367108886311969e01d69156230fd35",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "12/6/10, 12:03 PM",
      "commitNameOld": "1c92a5447451e3d6e663d4bf508237a6eaeccf90",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (el.isGetter()) {\n            reportGetter(el);\n        } else if (el.isSetter()) {\n            reportSetter(el);\n        } else {\n            Node key \u003d transformAsString(el.getLeft());\n            key.addChildToFront(transform(el.getRight()));\n            node.addChildToBack(key);\n        }\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 631,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,19 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n-        if (!config.acceptES5) {\n-            if (el.isGetter()) {\n-                reportGetter(el);\n-                continue;\n-            } else if (el.isSetter()) {\n-                reportSetter(el);\n-                continue;\n-            }\n-        }\n-        Node key \u003d transformAsString(el.getLeft());\n         if (el.isGetter()) {\n-            key.setType(Token.GET);\n+            reportGetter(el);\n         } else if (el.isSetter()) {\n-            key.setType(Token.SET);\n+            reportSetter(el);\n+        } else {\n+            Node key \u003d transformAsString(el.getLeft());\n+            key.addChildToFront(transform(el.getRight()));\n+            node.addChildToBack(key);\n         }\n-        key.addChildToFront(transform(el.getRight()));\n-        node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1c92a5447451e3d6e663d4bf508237a6eaeccf90": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd whitespace only mode support for ES5 getters and setters.\n\nR\u003dacleung\nDELTA\u003d318  (263 added, 31 deleted, 24 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d67\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@596 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/6/10, 12:03 PM",
      "commitName": "1c92a5447451e3d6e663d4bf508237a6eaeccf90",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/30/10, 10:47 AM",
      "commitNameOld": "78eb67212252fb94f85e77fba7bc69dd33b44d3c",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.05,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (!config.acceptES5) {\n            if (el.isGetter()) {\n                reportGetter(el);\n                continue;\n            } else if (el.isSetter()) {\n                reportSetter(el);\n                continue;\n            }\n        }\n        Node key \u003d transformAsString(el.getLeft());\n        if (el.isGetter()) {\n            key.setType(Token.GET);\n        } else if (el.isSetter()) {\n            key.setType(Token.SET);\n        }\n        key.addChildToFront(transform(el.getRight()));\n        node.addChildToBack(key);\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 631,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,27 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n-        if (el.isGetter()) {\n-            reportGetter(el);\n-        } else if (el.isSetter()) {\n-            reportSetter(el);\n-        } else {\n-            Node key \u003d transformAsString(el.getLeft());\n-            key.addChildToFront(transform(el.getRight()));\n-            node.addChildToBack(key);\n+        if (!config.acceptES5) {\n+            if (el.isGetter()) {\n+                reportGetter(el);\n+                continue;\n+            } else if (el.isSetter()) {\n+                reportSetter(el);\n+                continue;\n+            }\n         }\n+        Node key \u003d transformAsString(el.getLeft());\n+        if (el.isGetter()) {\n+            key.setType(Token.GET);\n+        } else if (el.isSetter()) {\n+            key.setType(Token.SET);\n+        }\n+        key.addChildToFront(transform(el.getRight()));\n+        node.addChildToBack(key);\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "34fd5f8275ae69fc772c2283a3c5fd13b93a7c42": {
      "type": "Ybodychange",
      "commitMessage": "\nChange the OBJECTLIT AST structure from:\n\nOBJECTLIT\n  KEY1\n  VALUE1\n\nto\n\nOBJECTLIT\n  KEY1\n    VALUE1\n\nFixes issue 241\n\nR\u003dacleung,johnlenz,stevey\nDELTA\u003d268  (101 added, 51 deleted, 116 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d356416\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@494 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/18/10, 2:55 PM",
      "commitName": "34fd5f8275ae69fc772c2283a3c5fd13b93a7c42",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/27/10, 1:21 PM",
      "commitNameOld": "f95797059bdc7b6c4cfc4960081f0773ec85bbf8",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 21.07,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (el.isGetter()) {\n            reportGetter(el);\n        } else if (el.isSetter()) {\n            reportSetter(el);\n        } else {\n            Node key \u003d transformAsString(el.getLeft());\n            key.addChildToFront(transform(el.getRight()));\n            node.addChildToBack(key);\n        }\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 631,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,19 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n         if (el.isGetter()) {\n             reportGetter(el);\n         } else if (el.isSetter()) {\n             reportSetter(el);\n         } else {\n-            node.addChildToBack(transformAsString(el.getLeft()));\n-            node.addChildToBack(transform(el.getRight()));\n+            Node key \u003d transformAsString(el.getLeft());\n+            key.addChildToFront(transform(el.getRight()));\n+            node.addChildToBack(key);\n         }\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "35d56dd1fadec0ed50797d222de4e05f78bbf1c9": {
      "type": "Ybodychange",
      "commitMessage": "\nChange on 2010/07/02 17:44:46 by nicksantos\n\n        fix RAI when comparing two types that are always equal.\n        Fixes issue 172\n\n        R\u003dacleung\n        DELTA\u003d20  (19 added, 0 deleted, 1 changed)\n\nChange on 2010/07/03 08:52:08 by johnlenz\n\n        Prefer the use of the unsyncronized StringBuilder over StringBuffer. This is just a code style change, this are no uses that should have any performance impact.\n\n        R\u003dacleung\n        DELTA\u003d30  (0 added, 2 deleted, 28 changed)\n\nChange on 2010/07/07 11:56:02 by johnlenz\n\n        Reduce the memory cost of generating source maps by reducing the number\n        of property structure objects that are created.  We do this by taking\n        advantage of the fact the property list objects are immutable and can be\n        shared between Nodes.  The source file prop is then shared between\n        every Node in the AST for a given source file, reducing the the number\n        of property nodes used to store this information from O(ast-nodes) to\n        O(source-files).\n\n        R\u003dbowdidge\n        DELTA\u003d122  (68 added, 1 deleted, 53 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@265 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "7/7/10, 3:14 PM",
      "commitName": "35d56dd1fadec0ed50797d222de4e05f78bbf1c9",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "6/29/10, 2:10 PM",
      "commitNameOld": "541402929a600a95bf099513908b4efd8b0e1c5b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d newNode(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (el.isGetter()) {\n            reportGetter(el);\n        } else if (el.isSetter()) {\n            reportSetter(el);\n        } else {\n            node.addChildToBack(transformAsString(el.getLeft()));\n            node.addChildToBack(transform(el.getRight()));\n        }\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 660,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n-    Node node \u003d new Node(Token.OBJECTLIT);\n+    Node node \u003d newNode(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n         if (el.isGetter()) {\n             reportGetter(el);\n         } else if (el.isSetter()) {\n             reportSetter(el);\n         } else {\n             node.addChildToBack(transformAsString(el.getLeft()));\n             node.addChildToBack(transform(el.getRight()));\n         }\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311": {
      "type": "Ybodychange",
      "commitMessage": "Change on 2010/04/26 by nick\n\n        forbid getters and setters. fixes closure-compiler issue 154.\n\n        R\u003drobert\n        DELTA\u003d57  (55 added, 0 deleted, 2 changed)\n\nChange on 2010/04/26 by nick\n\n        create a helper method for getting the transitive closure of a\n        number of roots.\n\n        R\u003dalan\n        DELTA\u003d172  (168 added, 2 deleted, 2 changed)\n\nChange on 2010/04/26 by nick\n\n        create a new mechanism for type name resolution.\n\n        R\u003djohn\n        DELTA\u003d222  (210 added, 5 deleted, 7 changed)\n\nChange on 2010/04/27 by john\n\n        Remove unused variables in uncalled global functions when not removing\n        unused global names. Fixes issue 155.\n\n        R\u003dnick\n        DELTA\u003d42  (34 added, 3 deleted, 5 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003daepekd\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@199 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/27/10, 12:02 PM",
      "commitName": "eb5eae4438f49ffddd3c8be1413eeb9e7ecfb311",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/14/10, 4:53 PM",
      "commitNameOld": "43859717972907dd1ecebd8dca6e05036386e28b",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 12.8,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d new Node(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        if (el.isGetter()) {\n            reportGetter(el);\n        } else if (el.isSetter()) {\n            reportSetter(el);\n        } else {\n            node.addChildToBack(transformAsString(el.getLeft()));\n            node.addChildToBack(transform(el.getRight()));\n        }\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 642,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,18 @@\n @Override\n Node processObjectLiteral(ObjectLiteral literalNode) {\n     if (literalNode.isDestructuring()) {\n         reportDestructuringAssign(literalNode);\n     }\n     Node node \u003d new Node(Token.OBJECTLIT);\n     for (ObjectProperty el : literalNode.getElements()) {\n-        node.addChildToBack(transformAsString(el.getLeft()));\n-        node.addChildToBack(transform(el.getRight()));\n+        if (el.isGetter()) {\n+            reportGetter(el);\n+        } else if (el.isSetter()) {\n+            reportSetter(el);\n+        } else {\n+            node.addChildToBack(transformAsString(el.getLeft()));\n+            node.addChildToBack(transform(el.getRight()));\n+        }\n     }\n     return node;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,12 @@\n+@Override\n+Node processObjectLiteral(ObjectLiteral literalNode) {\n+    if (literalNode.isDestructuring()) {\n+        reportDestructuringAssign(literalNode);\n+    }\n+    Node node \u003d new Node(Token.OBJECTLIT);\n+    for (ObjectProperty el : literalNode.getElements()) {\n+        node.addChildToBack(transformAsString(el.getLeft()));\n+        node.addChildToBack(transform(el.getRight()));\n+    }\n+    return node;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nNode processObjectLiteral(ObjectLiteral literalNode) {\n    if (literalNode.isDestructuring()) {\n        reportDestructuringAssign(literalNode);\n    }\n    Node node \u003d new Node(Token.OBJECTLIT);\n    for (ObjectProperty el : literalNode.getElements()) {\n        node.addChildToBack(transformAsString(el.getLeft()));\n        node.addChildToBack(transform(el.getRight()));\n    }\n    return node;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 607,
      "functionName": "processObjectLiteral",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}