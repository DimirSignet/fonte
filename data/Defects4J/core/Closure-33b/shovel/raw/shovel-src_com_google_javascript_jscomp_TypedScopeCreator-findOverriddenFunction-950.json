{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypedScopeCreator.java",
  "functionName": "findOverriddenFunction",
  "functionId": "$findOverriddenFunction___ownerType-ObjectType__propName-String",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
  "functionAnnotation": "",
  "functionDoc": "Find the function that\u0027s being overridden on this type, if any.\n",
  "functionStartLine": 950,
  "functionEndLine": 970,
  "numCommitsSeen": 90,
  "timeTaken": 8228,
  "changeHistory": [
    "bd9c7b620384fe5a98772729001ed56304459bc6",
    "01d1238a2a577d8988a72c29304a3283ca05a29a",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f",
    "6d374c3ee4c9c2651ffb44048924e127fd2bf37c"
  ],
  "changeHistoryShort": {
    "bd9c7b620384fe5a98772729001ed56304459bc6": "Ybodychange",
    "01d1238a2a577d8988a72c29304a3283ca05a29a": "Ybodychange",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": "Ybodychange",
    "6d374c3ee4c9c2651ffb44048924e127fd2bf37c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd9c7b620384fe5a98772729001ed56304459bc6": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\ntry #2. the bugs in jstestc were fixed. this cl is exactly\nthe same as the original\n\nR\u003djohnlenz\nDELTA\u003d317  (79 added, 47 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3078\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1367 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 3:46 PM",
      "commitName": "bd9c7b620384fe5a98772729001ed56304459bc6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 10:40 AM",
      "commitNameOld": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n    JSType propType \u003d ownerType.getPropertyType(propName);\n    if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n        return propType.toMaybeFunctionType();\n    } else {\n        for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n            propType \u003d iface.getPropertyType(propName);\n            if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n                return propType.toMaybeFunctionType();\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 900,
      "functionName": "findOverriddenFunction",
      "functionAnnotation": "",
      "functionDoc": "Find the function that\u0027s being overridden on this type, if any.\n",
      "diff": "@@ -1,14 +1,14 @@\n private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n     JSType propType \u003d ownerType.getPropertyType(propName);\n-    if (propType instanceof FunctionType) {\n-        return (FunctionType) propType;\n+    if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n+        return propType.toMaybeFunctionType();\n     } else {\n         for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n             propType \u003d iface.getPropertyType(propName);\n-            if (propType instanceof FunctionType) {\n-                return (FunctionType) propType;\n+            if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n+                return propType.toMaybeFunctionType();\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "01d1238a2a577d8988a72c29304a3283ca05a29a": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nbroke some tests\n\n*** Original change description ***\n\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nDELTA\u003d318  (48 added, 79 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3075\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1364 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 10:40 AM",
      "commitName": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 9:38 AM",
      "commitNameOld": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n    JSType propType \u003d ownerType.getPropertyType(propName);\n    if (propType instanceof FunctionType) {\n        return (FunctionType) propType;\n    } else {\n        for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n            propType \u003d iface.getPropertyType(propName);\n            if (propType instanceof FunctionType) {\n                return (FunctionType) propType;\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 899,
      "functionName": "findOverriddenFunction",
      "functionAnnotation": "",
      "functionDoc": "Find the function that\u0027s being overridden on this type, if any.\n",
      "diff": "@@ -1,14 +1,14 @@\n private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n     JSType propType \u003d ownerType.getPropertyType(propName);\n-    if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n-        return propType.toMaybeFunctionType();\n+    if (propType instanceof FunctionType) {\n+        return (FunctionType) propType;\n     } else {\n         for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n             propType \u003d iface.getPropertyType(propName);\n-            if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n-                return propType.toMaybeFunctionType();\n+            if (propType instanceof FunctionType) {\n+                return (FunctionType) propType;\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nR\u003djohnlenz\nDELTA\u003d318  (79 added, 48 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3074\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1363 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 9:38 AM",
      "commitName": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/12/11, 9:46 AM",
      "commitNameOld": "7ab44a5f66e5889e71bb56bb91eb29066cf82530",
      "commitAuthorOld": "pdoyle@google.com",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n    JSType propType \u003d ownerType.getPropertyType(propName);\n    if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n        return propType.toMaybeFunctionType();\n    } else {\n        for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n            propType \u003d iface.getPropertyType(propName);\n            if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n                return propType.toMaybeFunctionType();\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 900,
      "functionName": "findOverriddenFunction",
      "functionAnnotation": "",
      "functionDoc": "Find the function that\u0027s being overridden on this type, if any.\n",
      "diff": "@@ -1,14 +1,14 @@\n private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n     JSType propType \u003d ownerType.getPropertyType(propName);\n-    if (propType instanceof FunctionType) {\n-        return (FunctionType) propType;\n+    if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n+        return propType.toMaybeFunctionType();\n     } else {\n         for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n             propType \u003d iface.getPropertyType(propName);\n-            if (propType instanceof FunctionType) {\n-                return (FunctionType) propType;\n+            if (propType !\u003d null \u0026\u0026 propType.isFunctionType()) {\n+                return propType.toMaybeFunctionType();\n             }\n         }\n     }\n     return null;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6d374c3ee4c9c2651ffb44048924e127fd2bf37c": {
      "type": "Yintroduced",
      "commitMessage": "Fixes a bug in AmbugateProperties in the presence of interfaces.\n\nFixes a bug in how type information on methods of interfaces gets\ninherited by implementers (issue 86)\n\nUse Joiners instead of the join() static method.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@59 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/8/10, 1:41 PM",
      "commitName": "6d374c3ee4c9c2651ffb44048924e127fd2bf37c",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n+    JSType propType \u003d ownerType.getPropertyType(propName);\n+    if (propType instanceof FunctionType) {\n+        return (FunctionType) propType;\n+    } else {\n+        for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n+            propType \u003d iface.getPropertyType(propName);\n+            if (propType instanceof FunctionType) {\n+                return (FunctionType) propType;\n+            }\n+        }\n+    }\n+    return null;\n+}\n\\ No newline at end of file\n",
      "actualSource": "private FunctionType findOverriddenFunction(ObjectType ownerType, String propName) {\n    JSType propType \u003d ownerType.getPropertyType(propName);\n    if (propType instanceof FunctionType) {\n        return (FunctionType) propType;\n    } else {\n        for (ObjectType iface : ownerType.getCtorImplementedInterfaces()) {\n            propType \u003d iface.getPropertyType(propName);\n            if (propType instanceof FunctionType) {\n                return (FunctionType) propType;\n            }\n        }\n    }\n    return null;\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 553,
      "functionName": "findOverriddenFunction",
      "functionAnnotation": "",
      "functionDoc": "Find the function that\u0027s being overridden on this type, if any.\n"
    }
  }
}