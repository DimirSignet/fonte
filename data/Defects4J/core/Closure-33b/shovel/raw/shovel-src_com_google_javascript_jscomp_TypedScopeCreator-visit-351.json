{
  "origin": "codeshovel",
  "repositoryName": "Closure-33b",
  "repositoryPath": "/tmp/Closure-33b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypedScopeCreator.java",
  "functionName": "visit",
  "functionId": "$visit___t-NodeTraversal__node-Node__parent-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 351,
  "functionEndLine": 374,
  "numCommitsSeen": 90,
  "timeTaken": 9317,
  "changeHistory": [
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
    "fcdaa44e1558a73968bb47f571022220367957e3",
    "3698fee71e3671171c587f932795a8ab8e852cd8",
    "c2c15014b06a90e90c6f6c9be7fffd4a26883c86",
    "c764a46abf211d4677fadc33f7d466e5b14fa088"
  ],
  "changeHistoryShort": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": "Ybodychange",
    "fcdaa44e1558a73968bb47f571022220367957e3": "Ybodychange",
    "3698fee71e3671171c587f932795a8ab8e852cd8": "Ybodychange",
    "c2c15014b06a90e90c6f6c9be7fffd4a26883c86": "Ybodychange",
    "c764a46abf211d4677fadc33f7d466e5b14fa088": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec324a9bb23eb78c76f537f4c4170ba88d542f1c": {
      "type": "Ybodychange",
      "commitMessage": "\nReplace the bulk of the Node.getType() \u003d\u003d Token.XXX calls with\nNode.isXXX calls.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3677\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1582 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/10/11, 8:36 AM",
      "commitName": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 2:45 PM",
      "commitNameOld": "103bd46736cbbbabe6ad27ab11da10d6dbb1a8e5",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node node, Node parent) {\n    Node nameNode \u003d null;\n    switch(node.getType()) {\n        case Token.VAR:\n            for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n                identifyNameNode(child, child.getFirstChild(), NodeUtil.getBestJSDocInfo(child));\n            }\n            break;\n        case Token.EXPR_RESULT:\n            Node firstChild \u003d node.getFirstChild();\n            if (firstChild.isAssign()) {\n                identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n            } else {\n                identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n            }\n            break;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 350,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n @Override\n public void visit(NodeTraversal t, Node node, Node parent) {\n     Node nameNode \u003d null;\n     switch(node.getType()) {\n         case Token.VAR:\n             for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n                 identifyNameNode(child, child.getFirstChild(), NodeUtil.getBestJSDocInfo(child));\n             }\n             break;\n         case Token.EXPR_RESULT:\n             Node firstChild \u003d node.getFirstChild();\n-            if (firstChild.getType() \u003d\u003d Token.ASSIGN) {\n+            if (firstChild.isAssign()) {\n                 identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n             } else {\n                 identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n             }\n             break;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fcdaa44e1558a73968bb47f571022220367957e3": {
      "type": "Ybodychange",
      "commitMessage": "\nOne JSDocInfo source to rule them all\n\nR\u003dacleung\nDELTA\u003d47  (20 added, 23 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3633\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1555 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/4/11, 4:32 PM",
      "commitName": "fcdaa44e1558a73968bb47f571022220367957e3",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/12/11, 8:07 PM",
      "commitNameOld": "9614c7c0ffe2418359fe91be2a0e61400142237d",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 22.85,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node node, Node parent) {\n    Node nameNode \u003d null;\n    switch(node.getType()) {\n        case Token.VAR:\n            for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n                identifyNameNode(child, child.getFirstChild(), NodeUtil.getBestJSDocInfo(child));\n            }\n            break;\n        case Token.EXPR_RESULT:\n            Node firstChild \u003d node.getFirstChild();\n            if (firstChild.getType() \u003d\u003d Token.ASSIGN) {\n                identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n            } else {\n                identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n            }\n            break;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 350,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n @Override\n public void visit(NodeTraversal t, Node node, Node parent) {\n     Node nameNode \u003d null;\n     switch(node.getType()) {\n         case Token.VAR:\n             for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n-                identifyNameNode(child, child.getFirstChild(), NodeUtil.getInfoForNameNode(child));\n+                identifyNameNode(child, child.getFirstChild(), NodeUtil.getBestJSDocInfo(child));\n             }\n             break;\n         case Token.EXPR_RESULT:\n             Node firstChild \u003d node.getFirstChild();\n             if (firstChild.getType() \u003d\u003d Token.ASSIGN) {\n                 identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n             } else {\n                 identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n             }\n             break;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "3698fee71e3671171c587f932795a8ab8e852cd8": {
      "type": "Ybodychange",
      "commitMessage": "\nwhen deciding whether named types are nullable, let enums and\ntypedefs share the same hacky logic.\n\nR\u003djohnlenz\nDELTA\u003d83  (57 added, 0 deleted, 26 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d804008\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@520 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/28/10, 8:31 AM",
      "commitName": "3698fee71e3671171c587f932795a8ab8e852cd8",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/27/10, 9:43 AM",
      "commitNameOld": "3faef1d4959a55ebd86a09cd5395afb54ab5ec25",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node node, Node parent) {\n    Node nameNode \u003d null;\n    switch(node.getType()) {\n        case Token.VAR:\n            for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n                identifyNameNode(child, child.getFirstChild(), NodeUtil.getInfoForNameNode(child));\n            }\n            break;\n        case Token.EXPR_RESULT:\n            Node firstChild \u003d node.getFirstChild();\n            if (firstChild.getType() \u003d\u003d Token.ASSIGN) {\n                identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n            } else {\n                identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n            }\n            break;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 280,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,19 @@\n @Override\n public void visit(NodeTraversal t, Node node, Node parent) {\n     Node nameNode \u003d null;\n     switch(node.getType()) {\n         case Token.VAR:\n             for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n-                identifyEnumInNameNode(child, NodeUtil.getInfoForNameNode(child));\n+                identifyNameNode(child, child.getFirstChild(), NodeUtil.getInfoForNameNode(child));\n             }\n             break;\n         case Token.EXPR_RESULT:\n-            Node maybeAssign \u003d node.getFirstChild();\n-            if (maybeAssign.getType() \u003d\u003d Token.ASSIGN) {\n-                identifyEnumInNameNode(maybeAssign.getFirstChild(), maybeAssign.getJSDocInfo());\n+            Node firstChild \u003d node.getFirstChild();\n+            if (firstChild.getType() \u003d\u003d Token.ASSIGN) {\n+                identifyNameNode(firstChild.getFirstChild(), firstChild.getLastChild(), firstChild.getJSDocInfo());\n+            } else {\n+                identifyNameNode(firstChild, null, firstChild.getJSDocInfo());\n             }\n             break;\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c2c15014b06a90e90c6f6c9be7fffd4a26883c86": {
      "type": "Ybodychange",
      "commitMessage": "\nperf improvements to scope creator\n\nR\u003djohnlenz\nDELTA\u003d29  (7 added, 4 deleted, 18 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d217903\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@426 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/14/10, 12:23 PM",
      "commitName": "c2c15014b06a90e90c6f6c9be7fffd4a26883c86",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/13/10, 5:41 PM",
      "commitNameOld": "bf8fc4533884f914182f861576808e71c18410cc",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node node, Node parent) {\n    Node nameNode \u003d null;\n    switch(node.getType()) {\n        case Token.VAR:\n            for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n                identifyEnumInNameNode(child, NodeUtil.getInfoForNameNode(child));\n            }\n            break;\n        case Token.EXPR_RESULT:\n            Node maybeAssign \u003d node.getFirstChild();\n            if (maybeAssign.getType() \u003d\u003d Token.ASSIGN) {\n                identifyEnumInNameNode(maybeAssign.getFirstChild(), maybeAssign.getJSDocInfo());\n            }\n            break;\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 265,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,17 @@\n @Override\n public void visit(NodeTraversal t, Node node, Node parent) {\n     Node nameNode \u003d null;\n     switch(node.getType()) {\n-        case Token.NAME:\n-            nameNode \u003d node;\n-            break;\n         case Token.VAR:\n-            if (node.hasOneChild()) {\n-                nameNode \u003d node.getFirstChild();\n+            for (Node child \u003d node.getFirstChild(); child !\u003d null; child \u003d child.getNext()) {\n+                identifyEnumInNameNode(child, NodeUtil.getInfoForNameNode(child));\n             }\n             break;\n-        case Token.ASSIGN:\n-            nameNode \u003d node.getFirstChild();\n+        case Token.EXPR_RESULT:\n+            Node maybeAssign \u003d node.getFirstChild();\n+            if (maybeAssign.getType() \u003d\u003d Token.ASSIGN) {\n+                identifyEnumInNameNode(maybeAssign.getFirstChild(), maybeAssign.getJSDocInfo());\n+            }\n             break;\n     }\n-    if (nameNode !\u003d null) {\n-        JSDocInfo info \u003d node.getJSDocInfo();\n-        if (info !\u003d null \u0026\u0026 info.hasEnumParameterType()) {\n-            registry.identifyEnumName(nameNode.getQualifiedName());\n-        }\n-    }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c764a46abf211d4677fadc33f7d466e5b14fa088": {
      "type": "Yintroduced",
      "commitMessage": "\nChange on 2010/04/13 by john\n\n        Here is a crazy thought, let\u0027s not require the JSTypeRegistry during\n        parsing.\n\n        There are basically two changes here:\n        1) The IRFactory was looking for enums to seed the JSTypeRegistry, so\n        we do that when we setup for type interence.\n        2) The JSDocParser was checking the types of @defines objects, now do\n        that during ProcessDefines.\n\n        R\u003drobert,mark\n        DELTA\u003d207  (82 added, 89 deleted, 36 changed)\n\nChange on 2010/04/14 by nick\n\n        Add a debugging function for JSType hashcodes.\n        i found this useful, and thought others might too.\n\n        R\u003djohn\n        DELTA\u003d69  (69 added, 0 deleted, 0 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dfqsoxx\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@183 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 9:15 AM",
      "commitName": "c764a46abf211d4677fadc33f7d466e5b14fa088",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,23 @@\n+@Override\n+public void visit(NodeTraversal t, Node node, Node parent) {\n+    Node nameNode \u003d null;\n+    switch(node.getType()) {\n+        case Token.NAME:\n+            nameNode \u003d node;\n+            break;\n+        case Token.VAR:\n+            if (node.hasOneChild()) {\n+                nameNode \u003d node.getFirstChild();\n+            }\n+            break;\n+        case Token.ASSIGN:\n+            nameNode \u003d node.getFirstChild();\n+            break;\n+    }\n+    if (nameNode !\u003d null) {\n+        JSDocInfo info \u003d node.getJSDocInfo();\n+        if (info !\u003d null \u0026\u0026 info.hasEnumParameterType()) {\n+            registry.identifyEnumName(nameNode.getQualifiedName());\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\npublic void visit(NodeTraversal t, Node node, Node parent) {\n    Node nameNode \u003d null;\n    switch(node.getType()) {\n        case Token.NAME:\n            nameNode \u003d node;\n            break;\n        case Token.VAR:\n            if (node.hasOneChild()) {\n                nameNode \u003d node.getFirstChild();\n            }\n            break;\n        case Token.ASSIGN:\n            nameNode \u003d node.getFirstChild();\n            break;\n    }\n    if (nameNode !\u003d null) {\n        JSDocInfo info \u003d node.getJSDocInfo();\n        if (info !\u003d null \u0026\u0026 info.hasEnumParameterType()) {\n            registry.identifyEnumName(nameNode.getQualifiedName());\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 223,
      "functionName": "visit",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}