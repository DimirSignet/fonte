{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeUtil.java",
  "functionName": "isCallOrNew",
  "functionId": "isCallOrNew___node-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/NodeUtil.java",
  "functionAnnotation": "",
  "functionDoc": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n",
  "functionStartLine": 1882,
  "functionEndLine": 1884,
  "numCommitsSeen": 153,
  "timeTaken": 10992,
  "changeHistory": [
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
    "73f98ee988dad825ba8320bf4d8df0413fde531c",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": "Ybodychange",
    "73f98ee988dad825ba8320bf4d8df0413fde531c": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f": {
      "type": "Ybodychange",
      "commitMessage": "\nInline NodeUtil.isXXX functions and call the Node.isXXX functions\ndirectly.\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3673\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1578 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/9/11, 1:51 PM",
      "commitName": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "11/9/11, 12:32 PM",
      "commitNameOld": "4d98fc9034031ee146c7e5534a150e2700d89f8e",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "static boolean isCallOrNew(Node node) {\n    return node.isCall() || node.isNew();\n}",
      "path": "src/com/google/javascript/jscomp/NodeUtil.java",
      "functionStartLine": 1843,
      "functionName": "isCallOrNew",
      "functionAnnotation": "",
      "functionDoc": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n",
      "diff": "@@ -1,3 +1,3 @@\n static boolean isCallOrNew(Node node) {\n-    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n+    return node.isCall() || node.isNew();\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "73f98ee988dad825ba8320bf4d8df0413fde531c": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ydocchange)",
      "commitMessage": "\nLay the groundwork for the my next call optimization.\n\nR\u003dacleung\nDELTA\u003d428  (267 added, 117 deleted, 44 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@570 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/29/10, 10:09 AM",
      "commitName": "73f98ee988dad825ba8320bf4d8df0413fde531c",
      "commitAuthor": "johnlenz@google.com",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "\nLay the groundwork for the my next call optimization.\n\nR\u003dacleung\nDELTA\u003d428  (267 added, 117 deleted, 44 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@570 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/29/10, 10:09 AM",
          "commitName": "73f98ee988dad825ba8320bf4d8df0413fde531c",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/23/10, 3:03 PM",
          "commitNameOld": "03bfd27446569ed220b7248b8e1d9be0c2cb8187",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean isCallOrNew(Node node) {\n    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 1388,
          "functionName": "isCallOrNew",
          "functionAnnotation": "",
          "functionDoc": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n",
          "diff": "@@ -1,3 +1,3 @@\n-private boolean isCallOrNew(Node node) {\n+static boolean isCallOrNew(Node node) {\n     return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/com/google/javascript/jscomp/OptimizeParameters.java",
            "newPath": "src/com/google/javascript/jscomp/NodeUtil.java",
            "oldMethodName": "isCallOrNew",
            "newMethodName": "isCallOrNew"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "\nLay the groundwork for the my next call optimization.\n\nR\u003dacleung\nDELTA\u003d428  (267 added, 117 deleted, 44 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@570 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/29/10, 10:09 AM",
          "commitName": "73f98ee988dad825ba8320bf4d8df0413fde531c",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/23/10, 3:03 PM",
          "commitNameOld": "03bfd27446569ed220b7248b8e1d9be0c2cb8187",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean isCallOrNew(Node node) {\n    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 1388,
          "functionName": "isCallOrNew",
          "functionAnnotation": "",
          "functionDoc": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n",
          "diff": "@@ -1,3 +1,3 @@\n-private boolean isCallOrNew(Node node) {\n+static boolean isCallOrNew(Node node) {\n     return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "\nLay the groundwork for the my next call optimization.\n\nR\u003dacleung\nDELTA\u003d428  (267 added, 117 deleted, 44 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d6\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@570 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "11/29/10, 10:09 AM",
          "commitName": "73f98ee988dad825ba8320bf4d8df0413fde531c",
          "commitAuthor": "johnlenz@google.com",
          "commitDateOld": "11/23/10, 3:03 PM",
          "commitNameOld": "03bfd27446569ed220b7248b8e1d9be0c2cb8187",
          "commitAuthorOld": "johnlenz@google.com",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "static boolean isCallOrNew(Node node) {\n    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n}",
          "path": "src/com/google/javascript/jscomp/NodeUtil.java",
          "functionStartLine": 1388,
          "functionName": "isCallOrNew",
          "functionAnnotation": "",
          "functionDoc": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n",
          "diff": "@@ -1,3 +1,3 @@\n-private boolean isCallOrNew(Node node) {\n+static boolean isCallOrNew(Node node) {\n     return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Return true if the node can be considered a call. For the purpose of this\nclass, the new operator is considered a call since it can be optimized\nin the same way.\n\n@param node A node\n@return True if the node is a call.\n",
            "newValue": "\n@param node A node\n@return Whether the call is a NEW or CALL node.\n"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+private boolean isCallOrNew(Node node) {\n+    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private boolean isCallOrNew(Node node) {\n    return NodeUtil.isCall(node) || NodeUtil.isNew(node);\n}",
      "path": "src/com/google/javascript/jscomp/OptimizeParameters.java",
      "functionStartLine": 224,
      "functionName": "isCallOrNew",
      "functionAnnotation": "",
      "functionDoc": "Return true if the node can be considered a call. For the purpose of this\nclass, the new operator is considered a call since it can be optimized\nin the same way.\n\n@param node A node\n@return True if the node is a call.\n"
    }
  }
}