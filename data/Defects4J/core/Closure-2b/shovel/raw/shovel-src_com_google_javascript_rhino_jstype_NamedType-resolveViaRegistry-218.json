{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamedType.java",
  "functionName": "resolveViaRegistry",
  "functionId": "resolveViaRegistry___t-ErrorReporter__enclosing-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/NamedType.java",
  "functionAnnotation": "",
  "functionDoc": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n",
  "functionStartLine": 218,
  "functionEndLine": 226,
  "numCommitsSeen": 39,
  "timeTaken": 868,
  "changeHistory": [
    "d6227f739b8380f74663b2f536ed4a9649fd0841",
    "bca9abb0e3062d373fe52c0e8340337588c05708",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "d6227f739b8380f74663b2f536ed4a9649fd0841": "Ybodychange",
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6227f739b8380f74663b2f536ed4a9649fd0841": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd half-assed support for late-resolved typedefs of union types.\nThe fundamental issue is that NamedType is a proxy wrapper around\nObjectTypes, but has always been used for non-object types (like\ntypedef\u0027d unions.\nI eventually want to move towards the using UnresolvedTypes for type\nresolution. Under that system, the proxy wrapper gets thrown away.\nUnresolveTypes would also solve this issue. But that system breaks\na whole bunch of assumptions about hash codes and referential\ntransparency, so we\u0027re not ready for it yet.\n\nR\u003djohnlenz\nDELTA\u003d116  (75 added, 0 deleted, 41 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d304858\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@482 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/8/10, 1:19 PM",
      "commitName": "d6227f739b8380f74663b2f536ed4a9649fd0841",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 25.09,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "actualSource": "private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    JSType type \u003d registry.getType(reference);\n    if (type !\u003d null) {\n        setReferencedAndResolvedType(type, t, enclosing);\n        return true;\n    }\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 209,
      "functionName": "resolveViaRegistry",
      "functionAnnotation": "",
      "functionDoc": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n",
      "diff": "@@ -1,8 +1,8 @@\n private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n+    JSType type \u003d registry.getType(reference);\n     if (type !\u003d null) {\n-        setReferencedType(type, t, enclosing);\n+        setReferencedAndResolvedType(type, t, enclosing);\n         return true;\n     }\n     return false;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange,Ydocchange)",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n    if (type !\u003d null) {\n        setReferencedType(type, t, enclosing);\n        return true;\n    }\n    return false;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 208,
          "functionName": "resolveViaRegistry",
          "functionAnnotation": "",
          "functionDoc": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n",
          "diff": "@@ -1,6 +1,8 @@\n-private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n     if (type !\u003d null) {\n         setReferencedType(type, t, enclosing);\n+        return true;\n     }\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n    if (type !\u003d null) {\n        setReferencedType(type, t, enclosing);\n        return true;\n    }\n    return false;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 208,
          "functionName": "resolveViaRegistry",
          "functionAnnotation": "",
          "functionDoc": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n",
          "diff": "@@ -1,6 +1,8 @@\n-private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n     if (type !\u003d null) {\n         setReferencedType(type, t, enclosing);\n+        return true;\n     }\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n    if (type !\u003d null) {\n        setReferencedType(type, t, enclosing);\n        return true;\n    }\n    return false;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 208,
          "functionName": "resolveViaRegistry",
          "functionAnnotation": "",
          "functionDoc": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n",
          "diff": "@@ -1,6 +1,8 @@\n-private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+private boolean resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n     if (type !\u003d null) {\n         setReferencedType(type, t, enclosing);\n+        return true;\n     }\n+    return false;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Resolves a named type by looking it up in the registry.\n",
            "newValue": "Resolves a named type by looking it up in the registry.\n\n@return True if we resolved successfully.\n"
          }
        }
      ]
    },
    "a2d8936fae3eb0e3873c7f7c0233344c81436404": {
      "type": "Ybodychange",
      "commitMessage": "Add warnings for functions that are ambiguously defined on different\nbrowsers.\n\nAdd better support for Caja.\n\nRollback the change to CoalesceVariableNames, because it had problems.\n\nInternal type system refactoring.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@33 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/15/09, 1:52 PM",
      "commitName": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "12/7/09, 1:53 PM",
      "commitNameOld": "845f5ff65858fd0d1829f3d2f16f758725e8028f",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 8.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n    if (type !\u003d null) {\n        setReferencedType(type, t, enclosing);\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 213,
      "functionName": "resolveViaRegistry",
      "functionAnnotation": "",
      "functionDoc": "Resolves a named type by looking it up in the registry.\n",
      "diff": "@@ -1,6 +1,6 @@\n private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    JSType type \u003d registry.getType(reference);\n-    if (type !\u003d null \u0026\u0026 type instanceof ObjectType) {\n-        setReferencedType((ObjectType) type, t, enclosing);\n+    ObjectType type \u003d ObjectType.cast(registry.getType(reference));\n+    if (type !\u003d null) {\n+        setReferencedType(type, t, enclosing);\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,6 @@\n+private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    JSType type \u003d registry.getType(reference);\n+    if (type !\u003d null \u0026\u0026 type instanceof ObjectType) {\n+        setReferencedType((ObjectType) type, t, enclosing);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void resolveViaRegistry(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    JSType type \u003d registry.getType(reference);\n    if (type !\u003d null \u0026\u0026 type instanceof ObjectType) {\n        setReferencedType((ObjectType) type, t, enclosing);\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 211,
      "functionName": "resolveViaRegistry",
      "functionAnnotation": "",
      "functionDoc": "Resolves a named type by looking it up in the registry.\n"
    }
  }
}