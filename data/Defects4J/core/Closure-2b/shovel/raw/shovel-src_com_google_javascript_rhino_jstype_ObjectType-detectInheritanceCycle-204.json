{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectType.java",
  "functionName": "detectInheritanceCycle",
  "functionId": "detectInheritanceCycle",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/ObjectType.java",
  "functionAnnotation": "",
  "functionDoc": "Detects cycles in either the implicit prototype chain, or the implemented/extended\ninterfaces.\u003cp\u003e\n\n@return True iff a cycle was detected.\n",
  "functionStartLine": 204,
  "functionEndLine": 212,
  "numCommitsSeen": 50,
  "timeTaken": 1384,
  "changeHistory": [
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4"
  ],
  "changeHistoryShort": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": {
      "type": "Yintroduced",
      "commitMessage": "\nFix issue 873\nConverting from an interface type to a constructor which @implements itself causes stack overflow.\n\nR\u003djohnlenz,nicksantos,dimvar\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5982\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2399 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/14/12, 12:20 PM",
      "commitName": "efefb736fccc2039b5fb079710b3f2ac82b8c6e4",
      "commitAuthor": "peterhal@google.com",
      "diff": "@@ -0,0 +1,3 @@\n+final boolean detectInheritanceCycle() {\n+    return detectImplicitPrototypeCycle() || Iterables.contains(this.getCtorImplementedInterfaces(), this) || Iterables.contains(this.getCtorExtendedInterfaces(), this);\n+}\n\\ No newline at end of file\n",
      "actualSource": "final boolean detectInheritanceCycle() {\n    return detectImplicitPrototypeCycle() || Iterables.contains(this.getCtorImplementedInterfaces(), this) || Iterables.contains(this.getCtorExtendedInterfaces(), this);\n}",
      "path": "src/com/google/javascript/rhino/jstype/ObjectType.java",
      "functionStartLine": 205,
      "functionName": "detectInheritanceCycle",
      "functionAnnotation": "",
      "functionDoc": "Detects cycles in either the implicit prototype chain, or the implemented/extended\ninterfaces.\u003cp\u003e\n\n@return True iff a cycle was detected.\n"
    }
  }
}