{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsDocInfoParser.java",
  "functionName": "parseAndRecordTypeNameNode",
  "functionId": "parseAndRecordTypeNameNode___token-JsDocToken__lineno-int__startCharno-int__matchingLC-boolean",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
  "functionAnnotation": "",
  "functionDoc": "Looks for a type expression at the current token and if found,\nreturns it. Note that this method consumes input.\n\n@param token The current token.\n@param lineno The line of the type expression.\n@param startCharno The starting character position of the type expression.\n@param matchingLC Whether the type expression starts with a \"{\".\n@return The type expression found or null if none.\n",
  "functionStartLine": 1137,
  "functionEndLine": 1140,
  "numCommitsSeen": 67,
  "timeTaken": 7583,
  "changeHistory": [
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,3 @@\n+private Node parseAndRecordTypeNameNode(JsDocToken token, int lineno, int startCharno, boolean matchingLC) {\n+    return parseAndRecordTypeNode(token, lineno, startCharno, matchingLC, true);\n+}\n\\ No newline at end of file\n",
      "actualSource": "private Node parseAndRecordTypeNameNode(JsDocToken token, int lineno, int startCharno, boolean matchingLC) {\n    return parseAndRecordTypeNode(token, lineno, startCharno, matchingLC, true);\n}",
      "path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
      "functionStartLine": 934,
      "functionName": "parseAndRecordTypeNameNode",
      "functionAnnotation": "",
      "functionDoc": "Looks for a type expression at the current token and if found,\nreturns it. Note that this method consumes input.\n\n@param token The current token.\n@param lineno The line of the type expression.\n@param startCharno The starting character position of the type expression.\n@param matchingLC Whether the type expression starts with a \"{\".\n@return The type expression found or null if none.\n"
    }
  }
}