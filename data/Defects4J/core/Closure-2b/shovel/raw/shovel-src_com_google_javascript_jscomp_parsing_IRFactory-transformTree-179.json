{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IRFactory.java",
  "functionName": "transformTree",
  "functionId": "transformTree___node-AstRoot__sourceFile-StaticSourceFile__sourceString-String__config-Config__errorReporter-ErrorReporter",
  "sourceFilePath": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
  "functionAnnotation": "",
  "functionDoc": "",
  "functionStartLine": 179,
  "functionEndLine": 202,
  "numCommitsSeen": 116,
  "timeTaken": 6148,
  "changeHistory": [
    "6a113bd8455d0a22d242843e3b16c7f48739c280",
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6",
    "9320feca198878ca9464aae089399a8891c314d7",
    "f4a33b6f70a39d7e039d0c91901f67f10cf31b97",
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8",
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "6a113bd8455d0a22d242843e3b16c7f48739c280": "Ybodychange",
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6": "Ybodychange",
    "9320feca198878ca9464aae089399a8891c314d7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f4a33b6f70a39d7e039d0c91901f67f10cf31b97": "Ybodychange",
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8": "Ybodychange",
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a113bd8455d0a22d242843e3b16c7f48739c280": {
      "type": "Ybodychange",
      "commitMessage": "\nUse better APIs for Rhino, to make upgrading easier.\n\nR\u003djohnlenz\nDELTA\u003d19  (1 added, 9 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3764\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1620 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/17/11, 9:12 AM",
      "commitName": "6a113bd8455d0a22d242843e3b16c7f48739c280",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "11/11/11, 4:42 PM",
      "commitNameOld": "5524adbda991632656059566b69cc2771ba42b7d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 5.69,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !irFactory.parsedComments.contains(comment)) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment, irNode);\n            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK_COMMENT) {\n                irFactory.handleBlockComment(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 164,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n     IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n-            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n+            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !irFactory.parsedComments.contains(comment)) {\n                 irFactory.handlePossibleFileOverviewJsDoc(comment, irNode);\n-            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n+            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK_COMMENT) {\n                 irFactory.handleBlockComment(comment);\n             }\n         }\n     }\n     irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6": {
      "type": "Ybodychange",
      "commitMessage": "\nPart 3, source name/input id split:\nChange the construction of JSDocInfo to allow the determination of\nthe source type (extern or not) without requiring the source to be looked\nup by name.\n\nR\u003dnicksantos\nDELTA\u003d99  (51 added, 21 deleted, 27 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2898\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1327 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/4/11, 9:23 AM",
      "commitName": "0af94b21ceb7f8f0891b85e5713ff93c230e1bb6",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "7/28/11, 4:19 PM",
      "commitNameOld": "76abdf11394c0e7515ae63335676ea3657badb45",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 6.71,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment, irNode);\n            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                irFactory.handleBlockComment(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 163,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n     IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n             if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n-                irFactory.handlePossibleFileOverviewJsDoc(comment);\n+                irFactory.handlePossibleFileOverviewJsDoc(comment, irNode);\n             } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                 irFactory.handleBlockComment(comment);\n             }\n         }\n     }\n     irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9320feca198878ca9464aae089399a8891c314d7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "\nMake StaticSourceFile a property of Node\n\nR\u003djohnlenz\nDELTA\u003d183  (102 added, 25 deleted, 56 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2496\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1236 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "6/30/11, 1:25 PM",
      "commitName": "9320feca198878ca9464aae089399a8891c314d7",
      "commitAuthor": "nicksantos@google.com",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "\nMake StaticSourceFile a property of Node\n\nR\u003djohnlenz\nDELTA\u003d183  (102 added, 25 deleted, 56 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2496\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1236 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/30/11, 1:25 PM",
          "commitName": "9320feca198878ca9464aae089399a8891c314d7",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/9/11, 12:01 PM",
          "commitNameOld": "0235adc719d0858653861b8ced39a1d057cf93a0",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 21.06,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment);\n            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                irFactory.handleBlockComment(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 163,
          "functionName": "transformTree",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n-public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n-    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n+public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n+    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n             if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                 irFactory.handlePossibleFileOverviewJsDoc(comment);\n             } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                 irFactory.handleBlockComment(comment);\n             }\n         }\n     }\n     irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[node-AstRoot, sourceString-String, config-Config, errorReporter-ErrorReporter]",
            "newValue": "[node-AstRoot, sourceFile-StaticSourceFile, sourceString-String, config-Config, errorReporter-ErrorReporter]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "\nMake StaticSourceFile a property of Node\n\nR\u003djohnlenz\nDELTA\u003d183  (102 added, 25 deleted, 56 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d2496\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1236 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "6/30/11, 1:25 PM",
          "commitName": "9320feca198878ca9464aae089399a8891c314d7",
          "commitAuthor": "nicksantos@google.com",
          "commitDateOld": "6/9/11, 12:01 PM",
          "commitNameOld": "0235adc719d0858653861b8ced39a1d057cf93a0",
          "commitAuthorOld": "nicksantos@google.com",
          "daysBetweenCommits": 21.06,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment);\n            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                irFactory.handleBlockComment(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
          "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
          "functionStartLine": 163,
          "functionName": "transformTree",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,15 @@\n-public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n-    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n+public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter) {\n+    IRFactory irFactory \u003d new IRFactory(sourceString, sourceFile, config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n             if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                 irFactory.handlePossibleFileOverviewJsDoc(comment);\n             } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                 irFactory.handleBlockComment(comment);\n             }\n         }\n     }\n     irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "f4a33b6f70a39d7e039d0c91901f67f10cf31b97": {
      "type": "Ybodychange",
      "commitMessage": "\nEmit a warning if a block comment looks like it should be a jsdoc\ncomment\nfixes issue 332\n\nR\u003dacleung\nDELTA\u003d38  (33 added, 2 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1450\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1004 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/13/11, 3:18 PM",
      "commitName": "f4a33b6f70a39d7e039d0c91901f67f10cf31b97",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "4/12/11, 12:15 PM",
      "commitNameOld": "f322be0e576d5e2114cb59c0a6537197997b9c59",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 1.13,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment);\n            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n                irFactory.handleBlockComment(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 157,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,13 +1,15 @@\n public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n     IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n-            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 !comment.isParsed()) {\n+            if (comment.getCommentType() \u003d\u003d CommentType.JSDOC \u0026\u0026 !comment.isParsed()) {\n                 irFactory.handlePossibleFileOverviewJsDoc(comment);\n+            } else if (comment.getCommentType() \u003d\u003d CommentType.BLOCK) {\n+                irFactory.handleBlockComment(comment);\n             }\n         }\n     }\n     irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f95797059bdc7b6c4cfc4960081f0773ec85bbf8": {
      "type": "Ybodychange",
      "commitMessage": "\nClean up some record keeping of comments.  This doesn\u0027t appear to have\nhelped the parsing speed at all.\n\nR\u003dnicksantos\nDELTA\u003d134  (45 added, 66 deleted, 23 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d266012\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@465 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "9/27/10, 1:21 PM",
      "commitName": "f95797059bdc7b6c4cfc4960081f0773ec85bbf8",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 14.09,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 !comment.isParsed()) {\n                irFactory.handlePossibleFileOverviewJsDoc(comment);\n            }\n        }\n    }\n    irFactory.setFileOverviewJsDoc(irNode);\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 123,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,13 @@\n public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n     IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n-    Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d irNode.getJsDocBuilderForNode();\n-    JSDocInfo fileOverviewInfo \u003d null;\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n-            if (comment.getCommentType() \u003d\u003d JSDOC) {\n-                JsDocInfoParser jsDocParser \u003d irFactory.createJsDocInfoParser(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n-                if (jsDocParser.getFileOverviewJSDocInfo() !\u003d fileOverviewInfo) {\n-                    fileOverviewInfo \u003d jsDocParser.getFileOverviewJSDocInfo();\n-                } else {\n-                    JSDocInfo info \u003d jsDocParser.retrieveAndResetParsedJSDocInfo();\n-                    if (info !\u003d null) {\n-                        irFactory.attachJsDoc(comment, info);\n-                    }\n-                }\n+            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 !comment.isParsed()) {\n+                irFactory.handlePossibleFileOverviewJsDoc(comment);\n             }\n         }\n-        if (fileOverviewInfo !\u003d null) {\n-            if ((irNode.getJSDocInfo() !\u003d null) \u0026\u0026 (irNode.getJSDocInfo().getLicense() !\u003d null)) {\n-                fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());\n-            }\n-            irNode.setJSDocInfo(fileOverviewInfo);\n-        }\n     }\n+    irFactory.setFileOverviewJsDoc(irNode);\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87": {
      "type": "Ybodychange",
      "commitMessage": "Speed up parsing a bit by refactoring how we pull jsdoc comments into\nthe AST.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@101 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/10/10, 3:02 PM",
      "commitName": "7287c0ac1d7fb09e5b52a0bf68caf79bfcb09d87",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "12/8/09, 3:50 PM",
      "commitNameOld": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 63.97,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d irNode.getJsDocBuilderForNode();\n    JSDocInfo fileOverviewInfo \u003d null;\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d JSDOC) {\n                JsDocInfoParser jsDocParser \u003d irFactory.createJsDocInfoParser(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n                if (jsDocParser.getFileOverviewJSDocInfo() !\u003d fileOverviewInfo) {\n                    fileOverviewInfo \u003d jsDocParser.getFileOverviewJSDocInfo();\n                } else {\n                    JSDocInfo info \u003d jsDocParser.retrieveAndResetParsedJSDocInfo();\n                    if (info !\u003d null) {\n                        irFactory.attachJsDoc(comment, info);\n                    }\n                }\n            }\n        }\n        if (fileOverviewInfo !\u003d null) {\n            if ((irNode.getJSDocInfo() !\u003d null) \u0026\u0026 (irNode.getJSDocInfo().getLicense() !\u003d null)) {\n                fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());\n            }\n            irNode.setJSDocInfo(fileOverviewInfo);\n        }\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 129,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,28 @@\n public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n     IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n     Node irNode \u003d irFactory.transform(node);\n     Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d irNode.getJsDocBuilderForNode();\n     JSDocInfo fileOverviewInfo \u003d null;\n     if (node.getComments() !\u003d null) {\n         for (Comment comment : node.getComments()) {\n-            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 (comment.getValue().contains(\"@fileoverview\") || comment.getValue().contains(\"@preserve\") || comment.getValue().contains(\"@license\"))) {\n-                JSDocInfo info \u003d irFactory.parseJSDocInfo(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n-                if (info !\u003d null \u0026\u0026 fileOverviewInfo \u003d\u003d null) {\n-                    fileOverviewInfo \u003d info;\n+            if (comment.getCommentType() \u003d\u003d JSDOC) {\n+                JsDocInfoParser jsDocParser \u003d irFactory.createJsDocInfoParser(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n+                if (jsDocParser.getFileOverviewJSDocInfo() !\u003d fileOverviewInfo) {\n+                    fileOverviewInfo \u003d jsDocParser.getFileOverviewJSDocInfo();\n+                } else {\n+                    JSDocInfo info \u003d jsDocParser.retrieveAndResetParsedJSDocInfo();\n+                    if (info !\u003d null) {\n+                        irFactory.attachJsDoc(comment, info);\n+                    }\n                 }\n             }\n         }\n         if (fileOverviewInfo !\u003d null) {\n             if ((irNode.getJSDocInfo() !\u003d null) \u0026\u0026 (irNode.getJSDocInfo().getLicense() !\u003d null)) {\n                 fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());\n             }\n             irNode.setJSDocInfo(fileOverviewInfo);\n         }\n-        Comment[] comments \u003d new Comment[node.getComments().size()];\n-        comments \u003d node.getComments().toArray(comments);\n-        irFactory.parseAllJsDocInfo(irNode, comments, 0);\n     }\n     return irNode;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,26 @@\n+public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n+    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n+    Node irNode \u003d irFactory.transform(node);\n+    Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d irNode.getJsDocBuilderForNode();\n+    JSDocInfo fileOverviewInfo \u003d null;\n+    if (node.getComments() !\u003d null) {\n+        for (Comment comment : node.getComments()) {\n+            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 (comment.getValue().contains(\"@fileoverview\") || comment.getValue().contains(\"@preserve\") || comment.getValue().contains(\"@license\"))) {\n+                JSDocInfo info \u003d irFactory.parseJSDocInfo(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n+                if (info !\u003d null \u0026\u0026 fileOverviewInfo \u003d\u003d null) {\n+                    fileOverviewInfo \u003d info;\n+                }\n+            }\n+        }\n+        if (fileOverviewInfo !\u003d null) {\n+            if ((irNode.getJSDocInfo() !\u003d null) \u0026\u0026 (irNode.getJSDocInfo().getLicense() !\u003d null)) {\n+                fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());\n+            }\n+            irNode.setJSDocInfo(fileOverviewInfo);\n+        }\n+        Comment[] comments \u003d new Comment[node.getComments().size()];\n+        comments \u003d node.getComments().toArray(comments);\n+        irFactory.parseAllJsDocInfo(irNode, comments, 0);\n+    }\n+    return irNode;\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {\n    IRFactory irFactory \u003d new IRFactory(sourceString, node.getSourceName(), config, errorReporter);\n    Node irNode \u003d irFactory.transform(node);\n    Node.FileLevelJsDocBuilder fileLevelJsDocBuilder \u003d irNode.getJsDocBuilderForNode();\n    JSDocInfo fileOverviewInfo \u003d null;\n    if (node.getComments() !\u003d null) {\n        for (Comment comment : node.getComments()) {\n            if (comment.getCommentType() \u003d\u003d JSDOC \u0026\u0026 (comment.getValue().contains(\"@fileoverview\") || comment.getValue().contains(\"@preserve\") || comment.getValue().contains(\"@license\"))) {\n                JSDocInfo info \u003d irFactory.parseJSDocInfo(comment.getValue(), comment.getLineno(), comment.getAbsolutePosition(), fileLevelJsDocBuilder, fileOverviewInfo);\n                if (info !\u003d null \u0026\u0026 fileOverviewInfo \u003d\u003d null) {\n                    fileOverviewInfo \u003d info;\n                }\n            }\n        }\n        if (fileOverviewInfo !\u003d null) {\n            if ((irNode.getJSDocInfo() !\u003d null) \u0026\u0026 (irNode.getJSDocInfo().getLicense() !\u003d null)) {\n                fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());\n            }\n            irNode.setJSDocInfo(fileOverviewInfo);\n        }\n        Comment[] comments \u003d new Comment[node.getComments().size()];\n        comments \u003d node.getComments().toArray(comments);\n        irFactory.parseAllJsDocInfo(irNode, comments, 0);\n    }\n    return irNode;\n}",
      "path": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
      "functionStartLine": 106,
      "functionName": "transformTree",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}