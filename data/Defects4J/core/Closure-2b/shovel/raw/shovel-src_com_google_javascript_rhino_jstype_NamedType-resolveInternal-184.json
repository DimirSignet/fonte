{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamedType.java",
  "functionName": "resolveInternal",
  "functionId": "resolveInternal___t-ErrorReporter__enclosing-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/NamedType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
  "functionStartLine": 184,
  "functionEndLine": 212,
  "numCommitsSeen": 43,
  "timeTaken": 1366,
  "changeHistory": [
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4",
    "164dbb3842f3028ccdf89cdbe678d161518e9f05",
    "d6227f739b8380f74663b2f536ed4a9649fd0841",
    "4bc588102a66b46608a29e41d0343e1e27e1c3e5",
    "bca9abb0e3062d373fe52c0e8340337588c05708",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": "Ybodychange",
    "164dbb3842f3028ccdf89cdbe678d161518e9f05": "Ybodychange",
    "d6227f739b8380f74663b2f536ed4a9649fd0841": "Ybodychange",
    "4bc588102a66b46608a29e41d0343e1e27e1c3e5": "Ybodychange",
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange,Yannotationchange)",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": {
      "type": "Ybodychange",
      "commitMessage": "\nFix issue 873\nConverting from an interface type to a constructor which @implements itself causes stack overflow.\n\nR\u003djohnlenz,nicksantos,dimvar\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5982\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2399 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/14/12, 12:20 PM",
      "commitName": "efefb736fccc2039b5fb079710b3f2ac82b8c6e4",
      "commitAuthor": "peterhal@google.com",
      "commitDateOld": "10/9/12, 8:41 AM",
      "commitNameOld": "b2c046d1cda6af9818e0a3390eccd699792701c9",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 66.19,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectInheritanceCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        finishPropertyContinuations();\n        return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectInheritanceCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n        finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ? getReferencedType() : this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 184,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
      "diff": "@@ -1,21 +1,21 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     boolean resolved \u003d resolveViaRegistry(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n+    if (detectInheritanceCycle()) {\n         handleTypeCycle(t);\n     }\n     if (resolved) {\n         super.resolveInternal(t, enclosing);\n         finishPropertyContinuations();\n         return registry.isLastGeneration() ? getReferencedType() : this;\n     }\n     resolveViaProperties(t, enclosing);\n-    if (detectImplicitPrototypeCycle()) {\n+    if (detectInheritanceCycle()) {\n         handleTypeCycle(t);\n     }\n     super.resolveInternal(t, enclosing);\n     if (isResolved()) {\n         finishPropertyContinuations();\n     }\n     return registry.isLastGeneration() ? getReferencedType() : this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "164dbb3842f3028ccdf89cdbe678d161518e9f05": {
      "type": "Ybodychange",
      "commitMessage": "\nHandle properties that are declared before\nthe type resolves\n\nR\u003djohnlenz\nDELTA\u003d368  (254 added, 97 deleted, 17 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d778\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@855 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "3/7/11, 10:45 AM",
      "commitName": "164dbb3842f3028ccdf89cdbe678d161518e9f05",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "1/26/11, 8:30 AM",
      "commitNameOld": "043a352c2e85815a90a1926d112902d924bab6c1",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 40.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        finishPropertyContinuations();\n        return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n        finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ? getReferencedType() : this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 225,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
      "diff": "@@ -1,17 +1,21 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     if (resolved) {\n         super.resolveInternal(t, enclosing);\n+        finishPropertyContinuations();\n         return registry.isLastGeneration() ? getReferencedType() : this;\n     }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     super.resolveInternal(t, enclosing);\n+    if (isResolved()) {\n+        finishPropertyContinuations();\n+    }\n     return registry.isLastGeneration() ? getReferencedType() : this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d6227f739b8380f74663b2f536ed4a9649fd0841": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd half-assed support for late-resolved typedefs of union types.\nThe fundamental issue is that NamedType is a proxy wrapper around\nObjectTypes, but has always been used for non-object types (like\ntypedef\u0027d unions.\nI eventually want to move towards the using UnresolvedTypes for type\nresolution. Under that system, the proxy wrapper gets thrown away.\nUnresolveTypes would also solve this issue. But that system breaks\na whole bunch of assumptions about hash codes and referential\ntransparency, so we\u0027re not ready for it yet.\n\nR\u003djohnlenz\nDELTA\u003d116  (75 added, 0 deleted, 41 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d304858\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@482 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/8/10, 1:19 PM",
      "commitName": "d6227f739b8380f74663b2f536ed4a9649fd0841",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 25.09,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return registry.isLastGeneration() ? getReferencedType() : this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 179,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     if (resolved) {\n         super.resolveInternal(t, enclosing);\n-        return registry.isLastGeneration() ? referencedType : this;\n+        return registry.isLastGeneration() ? getReferencedType() : this;\n     }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     super.resolveInternal(t, enclosing);\n-    return registry.isLastGeneration() ? referencedType : this;\n+    return registry.isLastGeneration() ? getReferencedType() : this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4bc588102a66b46608a29e41d0343e1e27e1c3e5": {
      "type": "Ybodychange",
      "commitMessage": "\ndon\u0027t unbox proxy types until the last generation\n\nR\u003djohnlenz\nDELTA\u003d68  (54 added, 3 deleted, 11 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d92003\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@350 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/10/10, 2:49 PM",
      "commitName": "4bc588102a66b46608a29e41d0343e1e27e1c3e5",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/10/10, 10:17 AM",
      "commitNameOld": "027442d1a12004c6e27ca76d5eea68774c52ce7c",
      "commitAuthorOld": "elnatan@google.com",
      "daysBetweenCommits": 0.19,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return registry.isLastGeneration() ? referencedType : this;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return registry.isLastGeneration() ? referencedType : this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 181,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
      "diff": "@@ -1,17 +1,17 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n     boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     if (resolved) {\n         super.resolveInternal(t, enclosing);\n-        return referencedType;\n+        return registry.isLastGeneration() ? referencedType : this;\n     }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n     super.resolveInternal(t, enclosing);\n-    return referencedType;\n+    return registry.isLastGeneration() ? referencedType : this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange,Yannotationchange)",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return referencedType;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return referencedType;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 180,
          "functionName": "resolveInternal",
          "functionAnnotation": "@Override",
          "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
          "diff": "@@ -1,14 +1,17 @@\n-public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    if (isResolved())\n-        return;\n-    resolveViaRegistry(t, enclosing);\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n-    if (isResolved())\n-        return;\n+    if (resolved) {\n+        super.resolveInternal(t, enclosing);\n+        return referencedType;\n+    }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n+    super.resolveInternal(t, enclosing);\n+    return referencedType;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "resolve",
            "newValue": "resolveInternal"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return referencedType;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return referencedType;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 180,
          "functionName": "resolveInternal",
          "functionAnnotation": "@Override",
          "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
          "diff": "@@ -1,14 +1,17 @@\n-public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    if (isResolved())\n-        return;\n-    resolveViaRegistry(t, enclosing);\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n-    if (isResolved())\n-        return;\n+    if (resolved) {\n+        super.resolveInternal(t, enclosing);\n+        return referencedType;\n+    }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n+    super.resolveInternal(t, enclosing);\n+    return referencedType;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "JSType"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return referencedType;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return referencedType;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 180,
          "functionName": "resolveInternal",
          "functionAnnotation": "@Override",
          "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
          "diff": "@@ -1,14 +1,17 @@\n-public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    if (isResolved())\n-        return;\n-    resolveViaRegistry(t, enclosing);\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n-    if (isResolved())\n-        return;\n+    if (resolved) {\n+        super.resolveInternal(t, enclosing);\n+        return referencedType;\n+    }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n+    super.resolveInternal(t, enclosing);\n+    return referencedType;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return referencedType;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return referencedType;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 180,
          "functionName": "resolveInternal",
          "functionAnnotation": "@Override",
          "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
          "diff": "@@ -1,14 +1,17 @@\n-public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    if (isResolved())\n-        return;\n-    resolveViaRegistry(t, enclosing);\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n-    if (isResolved())\n-        return;\n+    if (resolved) {\n+        super.resolveInternal(t, enclosing);\n+        return referencedType;\n+    }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n+    super.resolveInternal(t, enclosing);\n+    return referencedType;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
          "commitDate": "1/26/10, 1:59 PM",
          "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
          "commitAuthor": "Nicholas.J.Santos",
          "commitDateOld": "12/15/09, 1:52 PM",
          "commitNameOld": "a2d8936fae3eb0e3873c7f7c0233344c81436404",
          "commitAuthorOld": "nicholas.j.santos@gmail.com",
          "daysBetweenCommits": 42.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        return referencedType;\n    }\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    super.resolveInternal(t, enclosing);\n    return referencedType;\n}",
          "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
          "functionStartLine": 180,
          "functionName": "resolveInternal",
          "functionAnnotation": "@Override",
          "functionDoc": "Resolve the referenced type within the enclosing scope.\n",
          "diff": "@@ -1,14 +1,17 @@\n-public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n-    if (isResolved())\n-        return;\n-    resolveViaRegistry(t, enclosing);\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    boolean resolved \u003d resolveViaRegistry(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n-    if (isResolved())\n-        return;\n+    if (resolved) {\n+        super.resolveInternal(t, enclosing);\n+        return referencedType;\n+    }\n     resolveViaProperties(t, enclosing);\n     if (detectImplicitPrototypeCycle()) {\n         handleTypeCycle(t);\n     }\n+    super.resolveInternal(t, enclosing);\n+    return referencedType;\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Override"
          }
        }
      ]
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,14 @@\n+public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n+    if (isResolved())\n+        return;\n+    resolveViaRegistry(t, enclosing);\n+    if (detectImplicitPrototypeCycle()) {\n+        handleTypeCycle(t);\n+    }\n+    if (isResolved())\n+        return;\n+    resolveViaProperties(t, enclosing);\n+    if (detectImplicitPrototypeCycle()) {\n+        handleTypeCycle(t);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void resolve(ErrorReporter t, StaticScope\u003cJSType\u003e enclosing) {\n    if (isResolved())\n        return;\n    resolveViaRegistry(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n    if (isResolved())\n        return;\n    resolveViaProperties(t, enclosing);\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n    }\n}",
      "path": "src/com/google/javascript/rhino/jstype/NamedType.java",
      "functionStartLine": 188,
      "functionName": "resolve",
      "functionAnnotation": "",
      "functionDoc": "Resolve the referenced type within the enclosing scope.\n"
    }
  }
}