{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypedScopeCreator.java",
  "functionName": "declareArguments",
  "functionId": "$declareArguments___functionNode-Node",
  "sourceFilePath": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
  "functionAnnotation": "",
  "functionDoc": "Declares all of a function\u0027s arguments.\n",
  "functionStartLine": 1945,
  "functionEndLine": 1990,
  "numCommitsSeen": 117,
  "timeTaken": 9607,
  "changeHistory": [
    "842545ae3518d18a765b846a6c436ebbffbf4b72",
    "a7f99cbb3ba646de8e19f0248099dad9cf0432a6",
    "c9262165386f6c4fa5713f618bb4083c91710420",
    "bd9c7b620384fe5a98772729001ed56304459bc6",
    "01d1238a2a577d8988a72c29304a3283ca05a29a",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f",
    "ec4a34c2bd87ba54fa8770affdeeea4f3c42089b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "842545ae3518d18a765b846a6c436ebbffbf4b72": "Ybodychange",
    "a7f99cbb3ba646de8e19f0248099dad9cf0432a6": "Ybodychange",
    "c9262165386f6c4fa5713f618bb4083c91710420": "Ybodychange",
    "bd9c7b620384fe5a98772729001ed56304459bc6": "Ybodychange",
    "01d1238a2a577d8988a72c29304a3283ca05a29a": "Ybodychange",
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": "Ybodychange",
    "ec4a34c2bd87ba54fa8770affdeeea4f3c42089b": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "842545ae3518d18a765b846a6c436ebbffbf4b72": {
      "type": "Ybodychange",
      "commitMessage": "\nMore IIFE handling.\n\nR\u003ddimvar\nDELTA\u003d84  (81 added, 1 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5622\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2252 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/9/12, 7:58 AM",
      "commitName": "842545ae3518d18a765b846a6c436ebbffbf4b72",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "10/4/12, 11:18 AM",
      "commitNameOld": "a7f99cbb3ba646de8e19f0248099dad9cf0432a6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.86,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node iifeArgumentNode \u003d null;\n    if (NodeUtil.isCallOrNewTarget(functionNode)) {\n        iifeArgumentNode \u003d functionNode.getNext();\n    }\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                JSType paramType \u003d jsDocParameter \u003d\u003d null ? unknownType : jsDocParameter.getJSType();\n                boolean inferred \u003d paramType \u003d\u003d null || paramType \u003d\u003d unknownType;\n                if (iifeArgumentNode !\u003d null \u0026\u0026 inferred) {\n                    String argumentName \u003d iifeArgumentNode.getQualifiedName();\n                    Var argumentVar \u003d argumentName \u003d\u003d null || scope.getParent() \u003d\u003d null ? null : scope.getParent().getVar(argumentName);\n                    if (argumentVar !\u003d null \u0026\u0026 !argumentVar.isTypeInferred()) {\n                        paramType \u003d argumentVar.getType();\n                    }\n                }\n                if (paramType \u003d\u003d null) {\n                    paramType \u003d unknownType;\n                }\n                defineSlot(astParameter, functionNode, paramType, inferred);\n                if (jsDocParameter !\u003d null) {\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                }\n                if (iifeArgumentNode !\u003d null) {\n                    iifeArgumentNode \u003d iifeArgumentNode.getNext();\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1944,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,21 +1,36 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n+    Node iifeArgumentNode \u003d null;\n+    if (NodeUtil.isCallOrNewTarget(functionNode)) {\n+        iifeArgumentNode \u003d functionNode.getNext();\n+    }\n     Node body \u003d astParameters.getNext();\n     FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 JSType paramType \u003d jsDocParameter \u003d\u003d null ? unknownType : jsDocParameter.getJSType();\n+                boolean inferred \u003d paramType \u003d\u003d null || paramType \u003d\u003d unknownType;\n+                if (iifeArgumentNode !\u003d null \u0026\u0026 inferred) {\n+                    String argumentName \u003d iifeArgumentNode.getQualifiedName();\n+                    Var argumentVar \u003d argumentName \u003d\u003d null || scope.getParent() \u003d\u003d null ? null : scope.getParent().getVar(argumentName);\n+                    if (argumentVar !\u003d null \u0026\u0026 !argumentVar.isTypeInferred()) {\n+                        paramType \u003d argumentVar.getType();\n+                    }\n+                }\n                 if (paramType \u003d\u003d null) {\n                     paramType \u003d unknownType;\n                 }\n-                defineSlot(astParameter, functionNode, paramType, unknownType \u003d\u003d paramType);\n+                defineSlot(astParameter, functionNode, paramType, inferred);\n                 if (jsDocParameter !\u003d null) {\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 }\n+                if (iifeArgumentNode !\u003d null) {\n+                    iifeArgumentNode \u003d iifeArgumentNode.getNext();\n+                }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "a7f99cbb3ba646de8e19f0248099dad9cf0432a6": {
      "type": "Ybodychange",
      "commitMessage": "\nAlternate proposal for handling IIFEs\nFixes issue 61\n\nR\u003ddimvar\nDELTA\u003d243  (149 added, 31 deleted, 63 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5594\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2240 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/4/12, 11:18 AM",
      "commitName": "a7f99cbb3ba646de8e19f0248099dad9cf0432a6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/24/12, 11:13 AM",
      "commitNameOld": "10c0c9ff36fb717223facd60efec8cf4ad97824f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 10.0,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                JSType paramType \u003d jsDocParameter \u003d\u003d null ? unknownType : jsDocParameter.getJSType();\n                if (paramType \u003d\u003d null) {\n                    paramType \u003d unknownType;\n                }\n                defineSlot(astParameter, functionNode, paramType, unknownType \u003d\u003d paramType);\n                if (jsDocParameter !\u003d null) {\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1944,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,20 +1,21 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n-    boolean isFnTypeInferred \u003d functionNode.getBooleanProp(Node.INFERRED_FUNCTION);\n     FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n+                JSType paramType \u003d jsDocParameter \u003d\u003d null ? unknownType : jsDocParameter.getJSType();\n+                if (paramType \u003d\u003d null) {\n+                    paramType \u003d unknownType;\n+                }\n+                defineSlot(astParameter, functionNode, paramType, unknownType \u003d\u003d paramType);\n                 if (jsDocParameter !\u003d null) {\n-                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), isFnTypeInferred);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n-                } else {\n-                    defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c9262165386f6c4fa5713f618bb4083c91710420": {
      "type": "Ybodychange",
      "commitMessage": "\nWhen a parameter is inferred, it\u0027s OK to set it to something else.\n\nR\u003djohnlenz\nDELTA\u003d27  (24 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5334\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2133 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/9/12, 11:13 AM",
      "commitName": "c9262165386f6c4fa5713f618bb4083c91710420",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/8/12, 7:01 PM",
      "commitNameOld": "b5a15f856546dca1c5d923db54d5a5bc301c8e98",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    boolean isFnTypeInferred \u003d functionNode.getBooleanProp(Node.INFERRED_FUNCTION);\n    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), isFnTypeInferred);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1921,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,19 +1,20 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n+    boolean isFnTypeInferred \u003d functionNode.getBooleanProp(Node.INFERRED_FUNCTION);\n     FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 if (jsDocParameter !\u003d null) {\n-                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n+                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), isFnTypeInferred);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 } else {\n                     defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bd9c7b620384fe5a98772729001ed56304459bc6": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\ntry #2. the bugs in jstestc were fixed. this cl is exactly\nthe same as the original\n\nR\u003djohnlenz\nDELTA\u003d317  (79 added, 47 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3078\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1367 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 3:46 PM",
      "commitName": "bd9c7b620384fe5a98772729001ed56304459bc6",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 10:40 AM",
      "commitNameOld": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1742,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n-    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n+    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 if (jsDocParameter !\u003d null) {\n                     defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 } else {\n                     defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "01d1238a2a577d8988a72c29304a3283ca05a29a": {
      "type": "Ybodychange",
      "commitMessage": "\nAutomated g4 rollback.\n\n*** Reason for rollback ***\n\nbroke some tests\n\n*** Original change description ***\n\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nDELTA\u003d318  (48 added, 79 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3075\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1364 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 10:40 AM",
      "commitName": "01d1238a2a577d8988a72c29304a3283ca05a29a",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/18/11, 9:38 AM",
      "commitNameOld": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1740,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n-    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n+    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 if (jsDocParameter !\u003d null) {\n                     defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 } else {\n                     defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fc0798047ad3aac58a54ea65f9f1c8857745419f": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd toMaybeFunctionType/toMaybeEnumElementType.\nwow, nullability is annoying!\n\nR\u003djohnlenz\nDELTA\u003d318  (79 added, 48 deleted, 191 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3074\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1363 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/18/11, 9:38 AM",
      "commitName": "fc0798047ad3aac58a54ea65f9f1c8857745419f",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/12/11, 9:46 AM",
      "commitNameOld": "7ab44a5f66e5889e71bb56bb91eb29066cf82530",
      "commitAuthorOld": "pdoyle@google.com",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1742,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n-    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n+    FunctionType functionType \u003d JSType.toMaybeFunctionType(functionNode.getJSType());\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 if (jsDocParameter !\u003d null) {\n                     defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 } else {\n                     defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ec4a34c2bd87ba54fa8770affdeeea4f3c42089b": {
      "type": "Ybodychange",
      "commitMessage": "\nParameter types should be declared, rather than inferred.\nThis means that if the programmer re-assignes the argument\nto a different type, they will get a type warning.\nFixes issue 433.\n\n\nR\u003dzhuyi\nDELTA\u003d91  (62 added, 14 deleted, 15 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d1963\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1120 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/20/11, 12:48 PM",
      "commitName": "ec4a34c2bd87ba54fa8770affdeeea4f3c42089b",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/11/11, 2:21 PM",
      "commitNameOld": "b8ffdb77ec07727232791998f560156de14054a7",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 8.94,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1734,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n",
      "diff": "@@ -1,19 +1,19 @@\n private void declareArguments(Node functionNode) {\n     Node astParameters \u003d functionNode.getFirstChild().getNext();\n     Node body \u003d astParameters.getNext();\n     FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n     if (functionType !\u003d null) {\n         Node jsDocParameters \u003d functionType.getParametersNode();\n         if (jsDocParameters !\u003d null) {\n             Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n             for (Node astParameter : astParameters.children()) {\n                 if (jsDocParameter !\u003d null) {\n-                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n+                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);\n                     jsDocParameter \u003d jsDocParameter.getNext();\n                 } else {\n                     defineSlot(astParameter, functionNode, null, true);\n                 }\n             }\n         }\n     }\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,19 @@\n+private void declareArguments(Node functionNode) {\n+    Node astParameters \u003d functionNode.getFirstChild().getNext();\n+    Node body \u003d astParameters.getNext();\n+    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n+    if (functionType !\u003d null) {\n+        Node jsDocParameters \u003d functionType.getParametersNode();\n+        if (jsDocParameters !\u003d null) {\n+            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n+            for (Node astParameter : astParameters.children()) {\n+                if (jsDocParameter !\u003d null) {\n+                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n+                    jsDocParameter \u003d jsDocParameter.getNext();\n+                } else {\n+                    defineSlot(astParameter, functionNode, null, true);\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void declareArguments(Node functionNode) {\n    Node astParameters \u003d functionNode.getFirstChild().getNext();\n    Node body \u003d astParameters.getNext();\n    FunctionType functionType \u003d (FunctionType) functionNode.getJSType();\n    if (functionType !\u003d null) {\n        Node jsDocParameters \u003d functionType.getParametersNode();\n        if (jsDocParameters !\u003d null) {\n            Node jsDocParameter \u003d jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter !\u003d null) {\n                    defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);\n                    jsDocParameter \u003d jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n}",
      "path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
      "functionStartLine": 1246,
      "functionName": "declareArguments",
      "functionAnnotation": "",
      "functionDoc": "Declares all of a function\u0027s arguments.\n"
    }
  }
}