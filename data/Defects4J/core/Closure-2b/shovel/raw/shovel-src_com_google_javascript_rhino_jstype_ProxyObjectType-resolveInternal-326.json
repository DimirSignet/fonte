{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProxyObjectType.java",
  "functionName": "resolveInternal",
  "functionId": "resolveInternal___t-ErrorReporter__scope-StaticScope__JSType__",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/ProxyObjectType.java",
  "functionAnnotation": "@Override",
  "functionDoc": "",
  "functionStartLine": 326,
  "functionEndLine": 329,
  "numCommitsSeen": 54,
  "timeTaken": 2666,
  "changeHistory": [
    "d6227f739b8380f74663b2f536ed4a9649fd0841",
    "bca9abb0e3062d373fe52c0e8340337588c05708"
  ],
  "changeHistoryShort": {
    "d6227f739b8380f74663b2f536ed4a9649fd0841": "Ybodychange",
    "bca9abb0e3062d373fe52c0e8340337588c05708": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6227f739b8380f74663b2f536ed4a9649fd0841": {
      "type": "Ybodychange",
      "commitMessage": "\nAdd half-assed support for late-resolved typedefs of union types.\nThe fundamental issue is that NamedType is a proxy wrapper around\nObjectTypes, but has always been used for non-object types (like\ntypedef\u0027d unions.\nI eventually want to move towards the using UnresolvedTypes for type\nresolution. Under that system, the proxy wrapper gets thrown away.\nUnresolveTypes would also solve this issue. But that system breaks\na whole bunch of assumptions about hash codes and referential\ntransparency, so we\u0027re not ready for it yet.\n\nR\u003djohnlenz\nDELTA\u003d116  (75 added, 0 deleted, 41 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d304858\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@482 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "10/8/10, 1:19 PM",
      "commitName": "d6227f739b8380f74663b2f536ed4a9649fd0841",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/13/10, 11:12 AM",
      "commitNameOld": "4c6e1039b80859f17de5f3cbcfeba61ed8ea0485",
      "commitAuthorOld": "elbaum@google.com",
      "daysBetweenCommits": 25.09,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    setReferencedType(referencedType.resolve(t, scope));\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ProxyObjectType.java",
      "functionStartLine": 329,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": "",
      "diff": "@@ -1,5 +1,5 @@\n @Override\n JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n-    referencedType \u003d (ObjectType) referencedType.resolve(t, scope);\n+    setReferencedType(referencedType.resolve(t, scope));\n     return this;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bca9abb0e3062d373fe52c0e8340337588c05708": {
      "type": "Yintroduced",
      "commitMessage": "Make sure that InlineVariables can inline variables that are never defined.\n\nCreate a function-inlining blacklist.\n\nSome minor type inference fixes.\n\nStart re-architecting type resolution to happen differently.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@77 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "1/26/10, 1:59 PM",
      "commitName": "bca9abb0e3062d373fe52c0e8340337588c05708",
      "commitAuthor": "Nicholas.J.Santos",
      "diff": "@@ -0,0 +1,5 @@\n+@Override\n+JSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n+    referencedType \u003d (ObjectType) referencedType.resolve(t, scope);\n+    return this;\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope\u003cJSType\u003e scope) {\n    referencedType \u003d (ObjectType) referencedType.resolve(t, scope);\n    return this;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ProxyObjectType.java",
      "functionStartLine": 291,
      "functionName": "resolveInternal",
      "functionAnnotation": "@Override",
      "functionDoc": ""
    }
  }
}