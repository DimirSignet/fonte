{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Scope.java",
  "functionName": "declare",
  "functionId": "declare___name-String__nameNode-Node__type-JSType__input-CompilerInput__inferred-boolean",
  "sourceFilePath": "src/com/google/javascript/jscomp/Scope.java",
  "functionAnnotation": "",
  "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n",
  "functionStartLine": 493,
  "functionEndLine": 503,
  "numCommitsSeen": 37,
  "timeTaken": 1351,
  "changeHistory": [
    "4b65a994a4f41c9c5ad644236e41d6564256f536",
    "fcdaa44e1558a73968bb47f571022220367957e3",
    "95ac6a7f06053f4a85286e30394836d62d141518",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "4b65a994a4f41c9c5ad644236e41d6564256f536": "Ybodychange",
    "fcdaa44e1558a73968bb47f571022220367957e3": "Ybodychange",
    "95ac6a7f06053f4a85286e30394836d62d141518": "Ybodychange",
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": "Ybodychange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4b65a994a4f41c9c5ad644236e41d6564256f536": {
      "type": "Ybodychange",
      "commitMessage": "\nclean up some duplicate code and grab back some memory\n\nR\u003ddimvar\nDELTA\u003d42  (1 added, 33 deleted, 8 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5375\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2147 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "8/14/12, 6:23 PM",
      "commitName": "4b65a994a4f41c9c5ad644236e41d6564256f536",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "8/10/12, 12:49 PM",
      "commitNameOld": "b675d1da9d5f8b36849db4943f580969105901a4",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.23,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input);\n    vars.put(name, var);\n    return var;\n}",
      "path": "src/com/google/javascript/jscomp/Scope.java",
      "functionStartLine": 499,
      "functionName": "declare",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n",
      "diff": "@@ -1,8 +1,7 @@\n Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n     Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n     Preconditions.checkState(vars.get(name) \u003d\u003d null);\n-    JSDocInfo info \u003d nameNode \u003d\u003d null ? null : NodeUtil.getBestJSDocInfo(nameNode);\n-    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input, info !\u003d null \u0026\u0026 info.isDefine(), info);\n+    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input);\n     vars.put(name, var);\n     return var;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fcdaa44e1558a73968bb47f571022220367957e3": {
      "type": "Ybodychange",
      "commitMessage": "\nOne JSDocInfo source to rule them all\n\nR\u003dacleung\nDELTA\u003d47  (20 added, 23 deleted, 4 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d3633\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1555 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/4/11, 4:32 PM",
      "commitName": "fcdaa44e1558a73968bb47f571022220367957e3",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "9/21/11, 5:18 PM",
      "commitNameOld": "dff730a3759cad9c491f72d9905eee93962d3d35",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 43.97,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "actualSource": "Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n    JSDocInfo info \u003d nameNode \u003d\u003d null ? null : NodeUtil.getBestJSDocInfo(nameNode);\n    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input, info !\u003d null \u0026\u0026 info.isDefine(), info);\n    vars.put(name, var);\n    return var;\n}",
      "path": "src/com/google/javascript/jscomp/Scope.java",
      "functionStartLine": 497,
      "functionName": "declare",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n",
      "diff": "@@ -1,8 +1,8 @@\n Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n     Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n     Preconditions.checkState(vars.get(name) \u003d\u003d null);\n-    JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n+    JSDocInfo info \u003d nameNode \u003d\u003d null ? null : NodeUtil.getBestJSDocInfo(nameNode);\n     Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input, info !\u003d null \u0026\u0026 info.isDefine(), info);\n     vars.put(name, var);\n     return var;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "95ac6a7f06053f4a85286e30394836d62d141518": {
      "type": "Ybodychange",
      "commitMessage": "\nHandle bleeding functions in local scopes.\n\nR\u003dacleung\nDELTA\u003d134  (90 added, 29 deleted, 15 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d519\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@780 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "2/14/11, 1:50 PM",
      "commitName": "95ac6a7f06053f4a85286e30394836d62d141518",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "2/8/11, 4:17 PM",
      "commitNameOld": "1860001c0e04ba7f3085bcbcf0ea6fb2ddc3f83c",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 5.9,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n    JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input, info !\u003d null \u0026\u0026 info.isDefine(), info);\n    vars.put(name, var);\n    return var;\n}",
      "path": "src/com/google/javascript/jscomp/Scope.java",
      "functionStartLine": 395,
      "functionName": "declare",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n",
      "diff": "@@ -1,16 +1,8 @@\n Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n     Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n     Preconditions.checkState(vars.get(name) \u003d\u003d null);\n-    Var var \u003d new Var(inferred);\n-    var.name \u003d name;\n-    var.nameNode \u003d nameNode;\n-    var.type \u003d type;\n-    var.scope \u003d this;\n-    var.index \u003d vars.size();\n-    var.input \u003d input;\n     JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n-    var.isDefine \u003d info !\u003d null \u0026\u0026 info.isDefine();\n-    var.info \u003d info;\n+    Var var \u003d new Var(inferred, name, nameNode, type, this, vars.size(), input, info !\u003d null \u0026\u0026 info.isDefine(), info);\n     vars.put(name, var);\n     return var;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "14ddcfdc0b8d1cece3c79221b1870b84f055d419": {
      "type": "Ybodychange",
      "commitMessage": "Change the internal representation of constant variables.\n\nRun inline-variables before smart-name-removal.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@37 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/17/09, 4:20 PM",
      "commitName": "14ddcfdc0b8d1cece3c79221b1870b84f055d419",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "commitDateOld": "11/10/09, 11:16 AM",
      "commitNameOld": "78995bf9e88599055a8c4165d89c09dc92a44b30",
      "commitAuthorOld": "nicholas.j.santos@gmail.com",
      "daysBetweenCommits": 37.21,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n    Var var \u003d new Var(inferred);\n    var.name \u003d name;\n    var.nameNode \u003d nameNode;\n    var.type \u003d type;\n    var.scope \u003d this;\n    var.index \u003d vars.size();\n    var.input \u003d input;\n    JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n    var.isDefine \u003d info !\u003d null \u0026\u0026 info.isDefine();\n    var.info \u003d info;\n    vars.put(name, var);\n    return var;\n}",
      "path": "src/com/google/javascript/jscomp/Scope.java",
      "functionStartLine": 364,
      "functionName": "declare",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n",
      "diff": "@@ -1,17 +1,16 @@\n Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n     Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n     Preconditions.checkState(vars.get(name) \u003d\u003d null);\n     Var var \u003d new Var(inferred);\n     var.name \u003d name;\n     var.nameNode \u003d nameNode;\n     var.type \u003d type;\n-    var.referenced \u003d false;\n     var.scope \u003d this;\n     var.index \u003d vars.size();\n     var.input \u003d input;\n     JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n     var.isDefine \u003d info !\u003d null \u0026\u0026 info.isDefine();\n     var.info \u003d info;\n     vars.put(name, var);\n     return var;\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,17 @@\n+Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n+    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n+    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n+    Var var \u003d new Var(inferred);\n+    var.name \u003d name;\n+    var.nameNode \u003d nameNode;\n+    var.type \u003d type;\n+    var.referenced \u003d false;\n+    var.scope \u003d this;\n+    var.index \u003d vars.size();\n+    var.input \u003d input;\n+    JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n+    var.isDefine \u003d info !\u003d null \u0026\u0026 info.isDefine();\n+    var.info \u003d info;\n+    vars.put(name, var);\n+    return var;\n+}\n\\ No newline at end of file\n",
      "actualSource": "Var declare(String name, Node nameNode, JSType type, CompilerInput input, boolean inferred) {\n    Preconditions.checkState(name !\u003d null \u0026\u0026 name.length() \u003e 0);\n    Preconditions.checkState(vars.get(name) \u003d\u003d null);\n    Var var \u003d new Var(inferred);\n    var.name \u003d name;\n    var.nameNode \u003d nameNode;\n    var.type \u003d type;\n    var.referenced \u003d false;\n    var.scope \u003d this;\n    var.index \u003d vars.size();\n    var.input \u003d input;\n    JSDocInfo info \u003d NodeUtil.getInfoForNameNode(nameNode);\n    var.isDefine \u003d info !\u003d null \u0026\u0026 info.isDefine();\n    var.info \u003d info;\n    vars.put(name, var);\n    return var;\n}",
      "path": "src/com/google/javascript/jscomp/Scope.java",
      "functionStartLine": 359,
      "functionName": "declare",
      "functionAnnotation": "",
      "functionDoc": "Declares a variable.\n\n@param name name of the variable\n@param nameNode the NAME node declaring the variable\n@param type the variable\u0027s type\n@param input the input in which this variable is defined.\n@param inferred Whether this variable\u0027s type is inferred (as opposed\n    to declared).\n"
    }
  }
}