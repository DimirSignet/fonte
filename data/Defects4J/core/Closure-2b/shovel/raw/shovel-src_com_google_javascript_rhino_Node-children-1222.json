{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Node.java",
  "functionName": "children",
  "functionId": "children",
  "sourceFilePath": "src/com/google/javascript/rhino/Node.java",
  "functionAnnotation": "",
  "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
  "functionStartLine": 1222,
  "functionEndLine": 1228,
  "numCommitsSeen": 86,
  "timeTaken": 7097,
  "changeHistory": [
    "59aac0b247db74ec7047132f368953935edd81b8",
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
    "6c7c28651eac368f7ff4180abff580114fd0113d",
    "43859717972907dd1ecebd8dca6e05036386e28b",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "59aac0b247db74ec7047132f368953935edd81b8": "Ydocchange",
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4": "Ydocchange",
    "6c7c28651eac368f7ff4180abff580114fd0113d": "Ydocchange",
    "43859717972907dd1ecebd8dca6e05036386e28b": "Yformatchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59aac0b247db74ec7047132f368953935edd81b8": {
      "type": "Ydocchange",
      "commitMessage": "\n\nMore typos and stuff, fixing bad merge\nFixes issue 734\n\nR\u003dnicksantos\nDELTA\u003d125  (0 added, 0 deleted, 125 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4852\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1992 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/23/12, 9:49 AM",
      "commitName": "59aac0b247db74ec7047132f368953935edd81b8",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "5/22/12, 5:42 PM",
      "commitNameOld": "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cNode\u003e children() {\n    if (first \u003d\u003d null) {\n        return Collections.emptySet();\n    } else {\n        return new SiblingNodeIterable(first);\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1241,
      "functionName": "children",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
        "newValue": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n"
      }
    },
    "465b84d337b9ac732b6890fae3c4deea46bc0fb4": {
      "type": "Ydocchange",
      "commitMessage": "\nAutomated g4 rollback\n\n*** Reason for rollback ***\n\nbreaks docs\n\n*** Original change description ***\n\nMore typos and stuff.\nFixes issue 734\n\nDELTA\u003d136  (0 added, 0 deleted, 136 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4846\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1990 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/22/12, 5:42 PM",
      "commitName": "465b84d337b9ac732b6890fae3c4deea46bc0fb4",
      "commitAuthor": "nicksantos@google.com",
      "commitDateOld": "5/22/12, 4:00 PM",
      "commitNameOld": "6c7c28651eac368f7ff4180abff580114fd0113d",
      "commitAuthorOld": "johnlenz@google.com",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cNode\u003e children() {\n    if (first \u003d\u003d null) {\n        return Collections.emptySet();\n    } else {\n        return new SiblingNodeIterable(first);\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1241,
      "functionName": "children",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
        "newValue": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n"
      }
    },
    "6c7c28651eac368f7ff4180abff580114fd0113d": {
      "type": "Ydocchange",
      "commitMessage": "\nMore typos and stuff.\nFixes issue 734\n\nR\u003dnicksantos\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d4844\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1988 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "5/22/12, 4:00 PM",
      "commitName": "6c7c28651eac368f7ff4180abff580114fd0113d",
      "commitAuthor": "johnlenz@google.com",
      "commitDateOld": "4/25/12, 1:34 PM",
      "commitNameOld": "f412f0c0efd54842b30207c845d65cb826217fd6",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 27.1,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cNode\u003e children() {\n    if (first \u003d\u003d null) {\n        return Collections.emptySet();\n    } else {\n        return new SiblingNodeIterable(first);\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1241,
      "functionName": "children",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
        "newValue": "\u003cp\u003eReturn an iterable object that iterates over this node\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n"
      }
    },
    "43859717972907dd1ecebd8dca6e05036386e28b": {
      "type": "Yformatchange",
      "commitMessage": "\nChange on 2010/04/14 by john\n\n        Stop creating specialized Node types for FUNCTION and SCRIPT as the added functionality isn\u0027t used anywhere.\n\n        Also correct some formatting issue with Node (as it won\u0027t need to be merged with anything else anymore).\n\n        R\u003dsteve,robert\n        DELTA\u003d3969  (1913 added, 1925 deleted, 131 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source information in MinimizeExitPoints.\n\n        R\u003drobert\n        DELTA\u003d10  (5 added, 2 deleted, 3 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information.\n\n        R\u003dantonio\n        DELTA\u003d17  (11 added, 0 deleted, 6 changed)\n\nChange on 2010/04/14 by john\n\n        Maintain source information through FoldConstants.\n\n        R\u003drobert\n        DELTA\u003d42  (22 added, 0 deleted, 20 changed)\n\nChange on 2010/04/14 by nick\n\n        lock down function type construction\n\n        R\u003djohn\n        DELTA\u003d111  (83 added, 9 deleted, 19 changed)\n\nChange on 2010/04/14 by john\n\n        Fix source info in CollapseProperties.\n\n        R\u003dnick\n        DELTA\u003d17  (8 added, 3 deleted, 6 changed)\n\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003dmbevwz\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@184 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "4/14/10, 4:53 PM",
      "commitName": "43859717972907dd1ecebd8dca6e05036386e28b",
      "commitAuthor": "Nicholas.J.Santos",
      "commitDateOld": "4/13/10, 2:39 PM",
      "commitNameOld": "de13c3313c05f4449c50c560324389d6905a214d",
      "commitAuthorOld": "Nicholas.J.Santos",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Iterable\u003cNode\u003e children() {\n    if (first \u003d\u003d null) {\n        return Collections.emptySet();\n    } else {\n        return new SiblingNodeIterable(first);\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1153,
      "functionName": "children",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n",
      "diff": "",
      "extendedDetails": {}
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,7 @@\n+public Iterable\u003cNode\u003e children() {\n+    if (first \u003d\u003d null) {\n+        return Collections.emptySet();\n+    } else {\n+        return new SiblingNodeIterable(first);\n+    }\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Iterable\u003cNode\u003e children() {\n    if (first \u003d\u003d null) {\n        return Collections.emptySet();\n    } else {\n        return new SiblingNodeIterable(first);\n    }\n}",
      "path": "src/com/google/javascript/rhino/Node.java",
      "functionStartLine": 1127,
      "functionName": "children",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturn an iterable object that iterates over this nodes\u0027s children.\nThe iterator does not support the optional operation\n{@link Iterator#remove()}.\u003c/p\u003e\n\n\u003cp\u003eTo iterate over a node\u0027s siblings, one can write\u003c/p\u003e\n\u003cpre\u003eNode n \u003d ...;\nfor (Node child : n.children()) { ...\u003c/pre\u003e\n"
    }
  }
}