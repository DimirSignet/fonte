{
  "origin": "codeshovel",
  "repositoryName": "Closure-2b",
  "repositoryPath": "/tmp/Closure-2b//.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObjectType.java",
  "functionName": "detectImplicitPrototypeCycle",
  "functionId": "detectImplicitPrototypeCycle",
  "sourceFilePath": "src/com/google/javascript/rhino/jstype/ObjectType.java",
  "functionAnnotation": "",
  "functionDoc": "Detects a cycle in the implicit prototype chain. This method accesses\nthe {@link #getImplicitPrototype()} method and must therefore be\ninvoked only after the object is sufficiently initialized to respond to\ncalls to this method.\u003cp\u003e\n\n@return True iff an implicit prototype cycle was detected.\n",
  "functionStartLine": 176,
  "functionEndLine": 196,
  "numCommitsSeen": 50,
  "timeTaken": 1172,
  "changeHistory": [
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
  ],
  "changeHistoryShort": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": "Ydocchange",
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efefb736fccc2039b5fb079710b3f2ac82b8c6e4": {
      "type": "Ydocchange",
      "commitMessage": "\nFix issue 873\nConverting from an interface type to a constructor which @implements itself causes stack overflow.\n\nR\u003djohnlenz,nicksantos,dimvar\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d5982\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2399 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "12/14/12, 12:20 PM",
      "commitName": "efefb736fccc2039b5fb079710b3f2ac82b8c6e4",
      "commitAuthor": "peterhal@google.com",
      "commitDateOld": "12/10/12, 9:07 AM",
      "commitNameOld": "2bbded191da279d08fe76e24f40339bb9b3df0b4",
      "commitAuthorOld": "nicksantos@google.com",
      "daysBetweenCommits": 4.13,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "final boolean detectImplicitPrototypeCycle() {\n    this.visited \u003d true;\n    ObjectType p \u003d getImplicitPrototype();\n    while (p !\u003d null) {\n        if (p.visited) {\n            return true;\n        } else {\n            p.visited \u003d true;\n        }\n        p \u003d p.getImplicitPrototype();\n    }\n    p \u003d this;\n    do {\n        p.visited \u003d false;\n        p \u003d p.getImplicitPrototype();\n    } while (p !\u003d null);\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ObjectType.java",
      "functionStartLine": 177,
      "functionName": "detectImplicitPrototypeCycle",
      "functionAnnotation": "",
      "functionDoc": "Detects a cycle in the implicit prototype chain. This method accesses\nthe {@link #getImplicitPrototype()} method and must therefore be\ninvoked only after the object is sufficiently initialized to respond to\ncalls to this method.\u003cp\u003e\n\n@return True iff an implicit prototype cycle was detected.\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Detects a cycle in the implicit prototype chain. This method accesses\nthe {@link #getImplicitPrototype()} method and must therefore be\ninvoked only after the object is sufficiently initialized to respond to\ncalls to this method.\u003cp\u003e\n\nThe method is not thread safe.\u003cp\u003e\n\n@return True iff an implicit prototype cycle was detected.\n",
        "newValue": "Detects a cycle in the implicit prototype chain. This method accesses\nthe {@link #getImplicitPrototype()} method and must therefore be\ninvoked only after the object is sufficiently initialized to respond to\ncalls to this method.\u003cp\u003e\n\n@return True iff an implicit prototype cycle was detected.\n"
      }
    },
    "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3": {
      "type": "Yintroduced",
      "commitMessage": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
      "commitDate": "11/3/09, 3:51 PM",
      "commitName": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commitAuthor": "nicholas.j.santos@gmail.com",
      "diff": "@@ -0,0 +1,18 @@\n+final boolean detectImplicitPrototypeCycle() {\n+    this.visited \u003d true;\n+    ObjectType p \u003d getImplicitPrototype();\n+    while (p !\u003d null) {\n+        if (p.visited) {\n+            return true;\n+        } else {\n+            p.visited \u003d true;\n+        }\n+        p \u003d p.getImplicitPrototype();\n+    }\n+    p \u003d this;\n+    do {\n+        p.visited \u003d false;\n+        p \u003d p.getImplicitPrototype();\n+    } while (p !\u003d null);\n+    return false;\n+}\n\\ No newline at end of file\n",
      "actualSource": "final boolean detectImplicitPrototypeCycle() {\n    this.visited \u003d true;\n    ObjectType p \u003d getImplicitPrototype();\n    while (p !\u003d null) {\n        if (p.visited) {\n            return true;\n        } else {\n            p.visited \u003d true;\n        }\n        p \u003d p.getImplicitPrototype();\n    }\n    p \u003d this;\n    do {\n        p.visited \u003d false;\n        p \u003d p.getImplicitPrototype();\n    } while (p !\u003d null);\n    return false;\n}",
      "path": "src/com/google/javascript/rhino/jstype/ObjectType.java",
      "functionStartLine": 137,
      "functionName": "detectImplicitPrototypeCycle",
      "functionAnnotation": "",
      "functionDoc": "Detects a cycle in the implicit prototype chain. This method accesses\nthe {@link #getImplicitPrototype()} method and must therefore be\ninvoked only after the object is sufficiently initialized to respond to\ncalls to this method.\u003cp\u003e\n\nThe method is not thread safe.\u003cp\u003e\n\n@return True iff an implicit prototype cycle was detected.\n"
    }
  }
}