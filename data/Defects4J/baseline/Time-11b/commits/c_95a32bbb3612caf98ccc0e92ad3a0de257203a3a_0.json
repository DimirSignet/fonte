{"sha": "95a32bbb3612caf98ccc0e92ad3a0de257203a3a", "log": "Add more withXxx methods   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Duration.java\n+++ b/JodaTime/src/java/org/joda/time/Duration.java\n         return new Duration(duration);\n     }\n \n+    /**\n+     * Adds to this duration returning a new Duration instance.\n+     * <p>\n+     * If the addition is zero, this instance is returned.\n+     * \n+     * @param durationToAdd  the duration to add to this one, null means zero\n+     * @return the new duration instance\n+     */\n+    public final Duration withDurationAdded(ReadableDuration durationToAdd) {\n+        return withDurationAdded(durationToAdd, 1);\n+    }\n+\n+    /**\n+     * Adds to this duration returning a new Duration instance.\n+     * <p>\n+     * If the addition is zero, this instance is returned.\n+     * \n+     * @param durationToAdd  the duration to add to this one, null means zero\n+     * @param scalar  the amount of times to add, such as -1 to subtract once\n+     * @return the new duration instance\n+     */\n+    public final Duration withDurationAdded(ReadableDuration durationToAdd, int scalar) {\n+        if (durationToAdd == null || scalar == 0) {\n+            return this;\n+        }\n+        long add = FieldUtils.safeMultiply(durationToAdd.getMillis(), scalar);\n+        long duration = FieldUtils.safeAdd(getMillis(), add);\n+        return new Duration(duration);\n+    }\n+\n }", "timestamp": 1092517655, "metainfo": ""}