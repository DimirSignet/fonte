{"sha": "78f986043e9fa3ae6a9139e0b81933400626c731", "log": "Simplify property implementation   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTime.java\n+++ b/JodaTime/src/java/org/joda/time/DateTime.java\n      */\n     public static class Property extends AbstractReadableInstantFieldProperty {\n         \n-        static final long serialVersionUID = -6983323811635733510L;\n+        /** Serialization version */\n+        private static final long serialVersionUID = -6983323811635733510L;\n         \n         /** The instant this property is working against */\n         private final DateTime iInstant;\n          * @throws IllegalArgumentException if the value isn't valid\n          */\n         public DateTime addToCopy(int value) {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.add(instant.getMillis(), value));\n+            return iInstant.withMillis(iField.add(iInstant.getMillis(), value));\n         }\n         \n         /**\n          * @throws IllegalArgumentException if the value isn't valid\n          */\n         public DateTime addToCopy(long value) {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.add(instant.getMillis(), value));\n+            return iInstant.withMillis(iField.add(iInstant.getMillis(), value));\n         }\n         \n         /**\n          * @throws IllegalArgumentException if the value isn't valid\n          */\n         public DateTime addWrapFieldToCopy(int value) {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.addWrapField(instant.getMillis(), value));\n+            return iInstant.withMillis(iField.addWrapField(iInstant.getMillis(), value));\n         }\n         \n         //-----------------------------------------------------------------------\n          * @throws IllegalArgumentException if the value isn't valid\n          */\n         public DateTime setCopy(int value) {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.set(instant.getMillis(), value));\n+            return iInstant.withMillis(iField.set(iInstant.getMillis(), value));\n         }\n         \n         /**\n          * @throws IllegalArgumentException if the text value isn't valid\n          */\n         public DateTime setCopy(String text, Locale locale) {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.set(instant.getMillis(), text, locale));\n+            return iInstant.withMillis(iField.set(iInstant.getMillis(), text, locale));\n         }\n         \n         /**\n          * @return a copy of the DateTime with the field value changed\n          */\n         public DateTime roundFloorCopy() {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.roundFloor(instant.getMillis()));\n+            return iInstant.withMillis(iField.roundFloor(iInstant.getMillis()));\n         }\n         \n         /**\n          * @return a copy of the DateTime with the field value changed\n          */\n         public DateTime roundCeilingCopy() {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.roundCeiling(instant.getMillis()));\n+            return iInstant.withMillis(iField.roundCeiling(iInstant.getMillis()));\n         }\n         \n         /**\n          * @return a copy of the DateTime with the field value changed\n          */\n         public DateTime roundHalfFloorCopy() {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.roundHalfFloor(instant.getMillis()));\n+            return iInstant.withMillis(iField.roundHalfFloor(iInstant.getMillis()));\n         }\n         \n         /**\n          * @return a copy of the DateTime with the field value changed\n          */\n         public DateTime roundHalfCeilingCopy() {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.roundHalfCeiling(instant.getMillis()));\n+            return iInstant.withMillis(iField.roundHalfCeiling(iInstant.getMillis()));\n         }\n         \n         /**\n          * @return a copy of the DateTime with the field value changed\n          */\n         public DateTime roundHalfEvenCopy() {\n-            DateTime instant = iInstant;\n-            return instant.withMillis(iField.roundHalfEven(instant.getMillis()));\n+            return iInstant.withMillis(iField.roundHalfEven(iInstant.getMillis()));\n         }\n     }\n ", "timestamp": 1089931307, "metainfo": ""}