{"sha": "e541f5fd2026976331403541ff93b043d4e130c8", "log": "Improve Javadoc on single field periods  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Period.java\n+++ b/JodaTime/src/java/org/joda/time/Period.java\n     //-----------------------------------------------------------------------\n     /**\n      * Create a period with a specified number of years.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as months or days using the <code>withXxx()</code> methods.\n      * For example, <code>Period.years(2).withMonths(6);</code>\n+     * <p>\n+     * If you want a year-based period that cannot have other fields added,\n+     * then you should consider using {@link Years}.\n      *\n      * @param years  the amount of years in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of months.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as years or days using the <code>withXxx()</code> methods.\n      * For example, <code>Period.months(2).withDays(6);</code>\n+     * <p>\n+     * If you want a month-based period that cannot have other fields added,\n+     * then you should consider using {@link Months}.\n      *\n      * @param months  the amount of months in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of weeks.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as months or days using the <code>withXxx()</code> methods.\n      * For example, <code>Period.weeks(2).withDays(6);</code>\n+     * <p>\n+     * If you want a week-based period that cannot have other fields added,\n+     * then you should consider using {@link Weeks}.\n      *\n      * @param weeks  the amount of weeks in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of days.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as months or weeks using the <code>withXxx()</code> methods.\n      * For example, <code>Period.days(2).withHours(6);</code>\n+     * <p>\n+     * If you want a day-based period that cannot have other fields added,\n+     * then you should consider using {@link Days}.\n      *\n      * @param days  the amount of days in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of hours.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as months or days using the <code>withXxx()</code> methods.\n      * For example, <code>Period.hours(2).withMinutes(30);</code>\n+     * <p>\n+     * If you want a hour-based period that cannot have other fields added,\n+     * then you should consider using {@link Hours}.\n      *\n      * @param hours  the amount of hours in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of minutes.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as days or hours using the <code>withXxx()</code> methods.\n      * For example, <code>Period.minutes(2).withSeconds(30);</code>\n+     * <p>\n+     * If you want a minute-based period that cannot have other fields added,\n+     * then you should consider using {@link Minutes}.\n      *\n      * @param minutes  the amount of minutes in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of seconds.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as days or hours using the <code>withXxx()</code> methods.\n      * For example, <code>Period.seconds(2).withMillis(30);</code>\n+     * <p>\n+     * If you want a second-based period that cannot have other fields added,\n+     * then you should consider using {@link Seconds}.\n      *\n      * @param seconds  the amount of seconds in this period\n      * @return the period\n \n     /**\n      * Create a period with a specified number of millis.\n+     * <p>\n      * The standard period type is used, thus you can add other fields such\n      * as days or hours using the <code>withXxx()</code> methods.\n      * For example, <code>Period.millis(20).withSeconds(30);</code>", "timestamp": 1161450851, "metainfo": ""}