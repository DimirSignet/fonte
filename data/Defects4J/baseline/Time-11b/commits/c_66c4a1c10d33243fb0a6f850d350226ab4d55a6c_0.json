{"sha": "66c4a1c10d33243fb0a6f850d350226ab4d55a6c", "log": "Change some StringBuffer uses to StringBuilder [3532330]", "commit": "\n--- a/src/main/java/org/joda/time/IllegalFieldValueException.java\n+++ b/src/main/java/org/joda/time/IllegalFieldValueException.java\n      */\n     private static String createMessage(String fieldName, Number value,\n                                         Number lowerBound, Number upperBound, String explain) {\n-        StringBuffer buf = new StringBuffer()\n+        StringBuilder buf = new StringBuilder()\n             .append(\"Value \").append(value).append(\" for \").append(fieldName).append(' ');\n \n         if (lowerBound == null) {\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n      */\n     public String toStringList() {\n         int size = size();\n-        StringBuffer buf = new StringBuffer(20 * size);\n+        StringBuilder buf = new StringBuilder(20 * size);\n         buf.append('[');\n         for (int i = 0; i < size; i++) {\n             if (i > 0) {\n--- a/src/main/java/org/joda/time/chrono/BasicChronology.java\n+++ b/src/main/java/org/joda/time/chrono/BasicChronology.java\n      * @return a debugging string\n      */\n     public String toString() {\n-        StringBuffer sb = new StringBuffer(60);\n+        StringBuilder sb = new StringBuilder(60);\n         String name = getClass().getName();\n         int index = name.lastIndexOf('.');\n         if (index >= 0) {\n--- a/src/main/java/org/joda/time/convert/ConverterSet.java\n+++ b/src/main/java/org/joda/time/convert/ConverterSet.java\n         // Class c implements a, b {}\n         // Converters exist only for a and b. Which is better? Neither.\n \n-        StringBuffer msg = new StringBuffer();\n+        StringBuilder msg = new StringBuilder();\n         msg.append(\"Unable to find best converter for type \\\"\");\n         msg.append(type.getName());\n         msg.append(\"\\\" from remaining set: \");\n--- a/src/main/java/org/joda/time/format/DateTimeFormat.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormat.java\n      * @return the parsed token\n      */\n     private static String parseToken(String pattern, int[] indexRef) {\n-        StringBuffer buf = new StringBuffer();\n+        StringBuilder buf = new StringBuilder();\n \n         int i = indexRef[0];\n         int length = pattern.length();\n--- a/src/main/java/org/joda/time/tz/ZoneInfoProvider.java\n+++ b/src/main/java/org/joda/time/tz/ZoneInfoProvider.java\n                 in = ClassLoader.getSystemResourceAsStream(path);\n             }\n             if (in == null) {\n-                StringBuffer buf = new StringBuffer(40)\n+                StringBuilder buf = new StringBuilder(40)\n                     .append(\"Resource not found: \\\"\")\n                     .append(path)\n                     .append(\"\\\" ClassLoader: \")", "timestamp": 1338978956, "metainfo": ""}