{"sha": "c4788d953b68641523da625111e352132cafe90e", "log": "Refactor getDateMidnightMillis to use getMaxMonth   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java\n+++ b/JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java\n      * @param dayOfMonth  the day\n      * @return the milliseconds\n      */\n-    abstract long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth);\n+    long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n+        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n+        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));\n+        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n+        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n+    }\n \n     /**\n      * Gets the difference between the two instants in years.\n      */\n     abstract long getTotalMillisByYearMonth(int year, int month);\n \n+    /**\n+     * Gets the millisecond value of the first day of the year.\n+     * \n+     * @return the milliseconds for the first of the year\n+     */\n     abstract long calculateFirstDayOfYearMillis(int year);\n \n+    /**\n+     * Gets the minimum supported year.\n+     * \n+     * @return the year\n+     */\n     abstract int getMinYear();\n \n+    /**\n+     * Gets the maximum supported year.\n+     * \n+     * @return the year\n+     */\n     abstract int getMaxYear();\n \n+    /**\n+     * Gets the maximum month for the specified year.\n+     * This implementation calls getMaxMonth().\n+     * \n+     * @param year  the year\n+     * @return the maximum month value\n+     */\n+    int getMaxMonth(int year) {\n+        return getMaxMonth();\n+    }\n+\n+    /**\n+     * Gets the maximum number of months.\n+     * \n+     * @return 12\n+     */\n+    int getMaxMonth() {\n+        return 12;\n+    }\n+\n+    /**\n+     * Gets an average value for the milliseconds per year.\n+     * \n+     * @return the millis per year\n+     */\n     abstract long getAverageMillisPerYear();\n \n+    /**\n+     * Gets an average value for the milliseconds per month.\n+     * \n+     * @return the millis per month\n+     */\n     abstract long getAverageMillisPerMonth();\n \n     /**\n--- a/JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java\n+++ b/JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTimeConstants;\n-import org.joda.time.DateTimeFieldType;\n import org.joda.time.DurationField;\n import org.joda.time.DurationFieldType;\n-import org.joda.time.field.FieldUtils;\n import org.joda.time.field.PreciseDurationField;\n \n /**\n     }\n \n     //-----------------------------------------------------------------------\n-    long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 13);\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n-        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n-    }\n-\n-    //-----------------------------------------------------------------------\n     long getTotalMillisByYearMonth(int year, int month) {\n         return (month * MILLIS_PER_MONTH);\n     }\n     }\n \n     //-----------------------------------------------------------------------\n+    int getMaxMonth() {\n+        return 13;\n+    }\n+\n+    //-----------------------------------------------------------------------\n     long getAverageMillisPerYear() {\n         return MILLIS_PER_YEAR;\n     }\n--- a/JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java\n+++ b/JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java\n     //-----------------------------------------------------------------------\n     int getDaysInMonthMaxForSet(long instant, int value) {\n         return (value > 28 ? getDaysInMonthMax(instant) : 28);\n-    }\n-\n-    //-----------------------------------------------------------------------\n-    long getDateMidnightMillis(int year, int monthOfYear, int dayOfMonth) {\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, 12);\n-        FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));\n-        return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1133018813, "metainfo": ""}