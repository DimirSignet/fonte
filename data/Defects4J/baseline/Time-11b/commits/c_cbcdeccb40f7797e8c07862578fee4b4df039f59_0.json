{"sha": "cbcdeccb40f7797e8c07862578fee4b4df039f59", "log": "Remove constants, add Javadoc, tidy implementation   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java\n+++ b/JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java\n     /** Serialilzation version */\n     private static final long serialVersionUID = -1934618396111902255L;\n \n-    /**\n-     * Instance with the name \"unsupported\".\n-     */\n-    public static final UnsupportedDateTimeField INSTANCE =\n-        getInstance(\"unsupported\", UnsupportedDurationField.INSTANCE);\n-\n+    /** The cache of unsupported datetime field instances */\n     private static HashMap cCache;\n \n     /**\n+     * Gets an instance of UnsupportedDateTimeField for a specific named field.\n+     * Names should be of standard format, such as 'monthOfYear' or 'hourOfDay'.\n+     * The returned instance is cached.\n+     * \n+     * @param name  the name to obtain\n+     * @return the instance\n      * @throws IllegalArgumentException if durationField is null\n      */\n-    public static synchronized UnsupportedDateTimeField getInstance\n-        (String name, DurationField durationField) {\n+    public static synchronized UnsupportedDateTimeField getInstance(\n+            String name, DurationField durationField) {\n \n         UnsupportedDateTimeField field;\n         if (cCache == null) {\n         return field;\n     }\n \n+    /** The name of the datetime field */\n     private final String iName;\n+    /** The duration of the datetime field */\n     private final DurationField iDurationField;\n \n+    /**\n+     * Constructor.\n+     * \n+     * @param name  the name to use\n+     * @param durationField  the duration to use\n+     */\n     private UnsupportedDateTimeField(String name, DurationField durationField) {\n         if (durationField == null) {\n             throw new IllegalArgumentException();\n         iDurationField = durationField;\n     }\n \n+    //-----------------------------------------------------------------------\n     // Design note: Simple accessors return a suitable value, but methods\n     // intended to perform calculations throw an UnsupportedOperationException.\n \n--- a/JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java\n+++ b/JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java\n     /** Serialization lock. */\n     private static final long serialVersionUID = -6390301302770925357L;\n \n-    /**\n-     * Instance with the name \"unsupported\".\n-     */\n-    public static final UnsupportedDurationField INSTANCE = getInstance(\"unsupported\");\n-\n+    /** The cache of unsupported duration field instances */\n     private static HashMap cCache;\n \n+    /**\n+     * Gets an instance of UnsupportedDurationField for a specific named field.\n+     * Names should be plural, such as 'years' or 'hours'.\n+     * The returned instance is cached.\n+     * \n+     * @param name  the name to obtain\n+     * @return the instance\n+     */\n     public static synchronized UnsupportedDurationField getInstance(String name) {\n         UnsupportedDurationField field;\n         if (cCache == null) {\n         return field;\n     }\n \n+    /** The name of the field */\n     private final String iName;\n \n+    /**\n+     * Constructor.\n+     * \n+     * @param name  the name to use\n+     */\n     private UnsupportedDurationField(String name) {\n         iName = name;\n     }\n \n+    //-----------------------------------------------------------------------\n     // Design note: Simple Accessors return a suitable value, but methods\n     // intended to perform calculations throw an UnsupportedOperationException.\n \n      * @return true if equal\n      */\n     public boolean equals(Object obj) {\n-        if (obj instanceof UnsupportedDurationField) {\n-            return (((UnsupportedDurationField) obj).getName().equals(getName()));\n+        if (this == obj) {\n+            return true;\n+        } else if (obj instanceof UnsupportedDurationField) {\n+            UnsupportedDurationField other = (UnsupportedDurationField) obj;\n+            if (other.getName() == null) {\n+                return (getName() == null);\n+            }\n+            return (other.getName().equals(getName()));\n         }\n         return false;\n     }", "timestamp": 1090781213, "metainfo": ""}