{"sha": "101995f41c8cd6b0aafa0c840de3da1951e0889d", "log": "Javadoc clarify on formatter builder  from mailing list email", "commit": "\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTime;\n-import org.joda.time.DateTimeFieldType;\n import org.joda.time.DateTimeUtils;\n import org.joda.time.DateTimeZone;\n import org.joda.time.LocalDate;\n  * <li>{@link #withZone(DateTimeZone)} - returns a new formatter that uses the specified time zone</li>\n  * <li>{@link #withChronology(Chronology)} - returns a new formatter that uses the specified chronology</li>\n  * <li>{@link #withOffsetParsed()} - returns a new formatter that returns the parsed time zone offset</li>\n+ * <li>{@link #withPivotYear()} - returns a new formatter with the specified pivot year</li>\n+ * <li>{@link #withDefaultYear()} - returns a new formatter with the specified default year</li>\n  * </ul>\n  * Each of these returns a new formatter (instances of this class are immutable).\n  * <p>\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n     //-----------------------------------------------------------------------\n     /**\n      * Appends another formatter.\n+     * <p>\n+     * This extracts the underlying printer and parser and appends them\n+     * The printer and parser interfaces are the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @param formatter  the formatter to add\n      * @return this DateTimeFormatterBuilder, for chaining\n     /**\n      * Appends just a printer. With no matching parser, a parser cannot be\n      * built from this DateTimeFormatterBuilder.\n+     * <p>\n+     * The printer interface is part of the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @param printer  the printer to add, not null\n      * @return this DateTimeFormatterBuilder, for chaining\n     /**\n      * Appends just a parser. With no matching printer, a printer cannot be\n      * built from this builder.\n+     * <p>\n+     * The parser interface is part of the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @param parser  the parser to add, not null\n      * @return this DateTimeFormatterBuilder, for chaining\n \n     /**\n      * Appends a printer/parser pair.\n+     * <p>\n+     * The printer and parser interfaces are the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @param printer  the printer to add, not null\n      * @param parser  the parser to add, not null\n      * last of the parser array elements to be null. If the last element is\n      * null, this represents the empty parser. The presence of an empty parser\n      * indicates that the entire array of parse formats is optional.\n+     * <p>\n+     * The printer and parser interfaces are the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @param printer  the printer to add\n      * @param parsers  the parsers to add\n     /**\n      * Appends just a parser element which is optional. With no matching\n      * printer, a printer cannot be built from this DateTimeFormatterBuilder.\n+     * <p>\n+     * The parser interface is part of the low-level part of the formatting API.\n+     * Normally, instances are extracted from another formatter.\n+     * Note however that any formatter specific information, such as the locale,\n+     * time-zone, chronology, offset parsing or pivot/default year, will not be\n+     * extracted by this method.\n      *\n      * @return this DateTimeFormatterBuilder, for chaining\n      * @throws IllegalArgumentException if parser is null or of an invalid type", "timestamp": 1354022209, "metainfo": ""}