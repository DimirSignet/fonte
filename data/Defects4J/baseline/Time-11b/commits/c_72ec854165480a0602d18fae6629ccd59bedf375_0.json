{"sha": "72ec854165480a0602d18fae6629ccd59bedf375", "log": "Add more documentation about not parsing 24:00", "commit": "\n--- a/src/main/java/org/joda/time/format/ISODateTimeFormat.java\n+++ b/src/main/java/org/joda/time/format/ISODateTimeFormat.java\n     //-----------------------------------------------------------------------\n     /**\n      * Returns a generic ISO date parser for parsing dates with a possible zone.\n+     * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n      * date              = date-element ['T' offset]\n \n     /**\n      * Returns a generic ISO date parser for parsing dates.\n+     * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n      * date-element      = std-date-element | ord-date-element | week-date-element\n \n     /**\n      * Returns a generic ISO time parser for parsing times with a possible zone.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n+     * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n      * time           = ['T'] time-element [offset]\n     /**\n      * Returns a generic ISO time parser for parsing local times.\n      * This parser is initialised with the local (UTC) time zone.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n     }\n \n     /**\n-     * Returns a generic ISO time parser. It accepts formats described by\n-     * the following syntax:\n+     * Returns a generic ISO time parser.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n+     * <p>\n+     * It accepts formats described by the following syntax:\n      * <pre>\n      * time-element   = HH [minute-element] | [fraction]\n      * minute-element = ':' mm [second-element] | [fraction]\n \n     /**\n      * Returns a generic ISO datetime parser which parses either a date or\n-     * a time or both. It accepts formats described by the following syntax:\n+     * a time or both. The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n+     * <p>\n+     * It accepts formats described by the following syntax:\n      * <pre>\n      * datetime          = time | date-opt-time\n      * time              = 'T' time-element [offset]\n     /**\n      * Returns a generic ISO datetime parser where the date is mandatory and\n      * the time is optional. This parser can parse zoned datetimes.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n+     * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n      * date-opt-time     = date-element ['T' [time-element] [offset]]\n      * Returns a generic ISO datetime parser where the date is mandatory and\n      * the time is optional. This parser only parses local datetimes.\n      * This parser is initialised with the local (UTC) time zone.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * <p>\n      * It accepts formats described by the following syntax:\n      * <pre>\n      * hour, two digit second of minute, three digit fraction of second, and\n      * time zone offset (HH:mm:ss.SSSZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for HH:mm:ss.SSSZZ\n      */\n      * Returns a formatter for a two digit hour of day, two digit minute of\n      * hour, two digit second of minute, and time zone offset (HH:mm:ssZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for HH:mm:ssZZ\n      */\n      * hour, two digit second of minute, three digit fraction of second, and\n      * time zone offset prefixed by 'T' ('T'HH:mm:ss.SSSZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for 'T'HH:mm:ss.SSSZZ\n      */\n      * hour, two digit second of minute, and time zone offset prefixed\n      * by 'T' ('T'HH:mm:ssZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for 'T'HH:mm:ssZZ\n      */\n      * Returns a formatter that combines a full date and time, separated by a 'T'\n      * (yyyy-MM-dd'T'HH:mm:ss.SSSZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyy-MM-dd'T'HH:mm:ss.SSSZZ\n      */\n      * Returns a formatter that combines a full date and time without millis,\n      * separated by a 'T' (yyyy-MM-dd'T'HH:mm:ssZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyy-MM-dd'T'HH:mm:ssZZ\n      */\n      * Returns a formatter for a full ordinal date and time, using a four\n      * digit year and three digit dayOfYear (yyyy-DDD'T'HH:mm:ss.SSSZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyy-DDD'T'HH:mm:ss.SSSZZ\n      * @since 1.1\n      * Returns a formatter for a full ordinal date and time without millis,\n      * using a four digit year and three digit dayOfYear (yyyy-DDD'T'HH:mm:ssZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyy-DDD'T'HH:mm:ssZZ\n      * @since 1.1\n      * Returns a formatter that combines a full weekyear date and time,\n      * separated by a 'T' (xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ\n      */\n      * Returns a formatter that combines a full weekyear date and time without millis,\n      * separated by a 'T' (xxxx-'W'ww-e'T'HH:mm:ssZZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HH:mm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for xxxx-'W'ww-e'T'HH:mm:ssZZ\n      */\n      * of hour, two digit second of minute, three digit millis, and time zone\n      * offset (HHmmss.SSSZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for HHmmss.SSSZ\n      */\n      * Returns a basic formatter for a two digit hour of day, two digit minute\n      * of hour, two digit second of minute, and time zone offset (HHmmssZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for HHmmssZ\n      */\n      * of hour, two digit second of minute, three digit millis, and time zone\n      * offset prefixed by 'T' ('T'HHmmss.SSSZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for 'T'HHmmss.SSSZ\n      */\n      * of hour, two digit second of minute, and time zone offset prefixed by 'T'\n      * ('T'HHmmssZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for 'T'HHmmssZ\n      */\n      * Returns a basic formatter that combines a basic date and time, separated\n      * by a 'T' (yyyyMMdd'T'HHmmss.SSSZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyyMMdd'T'HHmmss.SSSZ\n      */\n      * Returns a basic formatter that combines a basic date and time without millis,\n      * separated by a 'T' (yyyyMMdd'T'HHmmssZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyyMMdd'T'HHmmssZ\n      */\n      * Returns a formatter for a full ordinal date and time, using a four\n      * digit year and three digit dayOfYear (yyyyDDD'T'HHmmss.SSSZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyyDDD'T'HHmmss.SSSZ\n      * @since 1.1\n      * Returns a formatter for a full ordinal date and time without millis,\n      * using a four digit year and three digit dayOfYear (yyyyDDD'T'HHmmssZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for yyyyDDD'T'HHmmssZ\n      * @since 1.1\n      * Returns a basic formatter that combines a basic weekyear date and time,\n      * separated by a 'T' (xxxx'W'wwe'T'HHmmss.SSSZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for xxxx'W'wwe'T'HHmmss.SSSZ\n      */\n      * Returns a basic formatter that combines a basic weekyear date and time\n      * without millis, separated by a 'T' (xxxx'W'wwe'T'HHmmssZ).\n      * The time zone offset is 'Z' for zero, and of the form '\\u00b1HHmm' for non-zero.\n+     * The parser is strict by default, thus time string {@code 24:00} cannot be parsed.\n      * \n      * @return a formatter for xxxx'W'wwe'T'HHmmssZ\n      */", "timestamp": 1308560045, "metainfo": ""}