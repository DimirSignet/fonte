{"sha": "22e073ec195960a3b0b1bc21806223dd668acd59", "log": "Support convertng intervals to durations.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n+++ b/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n  * The default duration converters are:\n  * <ul>\n  * <li>ReadableDuration\n+ * <li>ReadableInterval\n  * <li>String\n  * <li>Long\n  * </ul>\n \n         iDurationConverters = new ConverterSet(new Converter[] {\n             ReadableDurationConverter.INSTANCE,\n+            ReadableIntervalConverter.INSTANCE,\n             StringConverter.INSTANCE,\n             LongConverter.INSTANCE,\n         });\n--- /dev/null\n+++ b/JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java\n+/*\n+ * Joda Software License, Version 1.0\n+ *\n+ *\n+ * Copyright (c) 2001-03 Stephen Colebourne.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Joda project (http://www.joda.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The name \"Joda\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact licence@joda.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Joda\",\n+ *    nor may \"Joda\" appear in their name, without prior written\n+ *    permission of the Joda project.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Joda project and was originally\n+ * created by Stephen Colebourne <scolebourne@joda.org>. For more\n+ * information on the Joda project, please see <http://www.joda.org/>.\n+ */\n+package org.joda.time.convert;\n+\n+import org.joda.time.ReadableInterval;\n+import org.joda.time.ReadWritableDuration;\n+\n+/**\n+ * Converts intervals into durations of any requested duration type.\n+ *\n+ * @author Brian S O'Neill\n+ * @since 1.0\n+ */\n+class ReadableIntervalConverter implements DurationConverter {\n+\n+    /**\n+     * Singleton instance.\n+     */\n+    static final ReadableIntervalConverter INSTANCE = new ReadableIntervalConverter();\n+    \n+    /**\n+     * Restricted constructor.\n+     */\n+    protected ReadableIntervalConverter() {\n+        super();\n+    }\n+\n+    /**\n+     * Returns true always.\n+     */\n+    public boolean isPrecise(Object object) {\n+        return true;\n+    }\n+\n+    public long getDurationMillis(Object object) {\n+        return (((ReadableInterval) object)).getDurationMillis();\n+    }\n+\n+    public void setInto(ReadWritableDuration duration, Object object) {\n+        ReadableInterval interval = (ReadableInterval) object;\n+        duration.setTotalMillis(interval.getStartMillis(), interval.getEndMillis());\n+    }\n+\n+    /**\n+     * Returns ReadableInterval.class.\n+     */\n+    public Class getSupportedType() {\n+        return ReadableInterval.class;\n+    }\n+}", "timestamp": 1071987784, "metainfo": ""}