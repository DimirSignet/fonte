{"sha": "c6391f360db0b1e047e153298bd1d175bfb8a5be", "log": "Uses generic JodaTimePermission class.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java\n \n import org.joda.time.format.DateTimeFormatter;\n import org.joda.time.format.DateTimeFormatterBuilder;\n-import org.joda.time.tz.DateTimeZonePermission;\n import org.joda.time.tz.DefaultNameProvider;\n import org.joda.time.tz.FixedDateTimeZone;\n import org.joda.time.tz.NameProvider;\n     public static void setDefault(DateTimeZone zone) throws SecurityException {\n         SecurityManager sm = System.getSecurityManager();\n         if (sm != null) {\n-            sm.checkPermission(new DateTimeZonePermission(\"setDefault\"));\n+            sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setDefault\"));\n         }\n         if (zone == null) {\n             throw new IllegalArgumentException(\"The datetime zone must not be null\");\n     public static void setProvider(Provider provider) throws SecurityException {\n         SecurityManager sm = System.getSecurityManager();\n         if (sm != null) {\n-            sm.checkPermission(new DateTimeZonePermission(\"setProvider\"));\n+            sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setProvider\"));\n         }\n         setProvider0(provider);\n     }\n     public static void setNameProvider(NameProvider nameProvider) throws SecurityException {\n         SecurityManager sm = System.getSecurityManager();\n         if (sm != null) {\n-            sm.checkPermission(new DateTimeZonePermission(\"setNameProvider\"));\n+            sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setNameProvider\"));\n         }\n         setNameProvider0(nameProvider);\n     }\n--- /dev/null\n+++ b/JodaTime/src/java/org/joda/time/JodaTimePermission.java\n+/*\n+ * Joda Software License, Version 1.0\n+ *\n+ *\n+ * Copyright (c) 2001-2004 Stephen Colebourne.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Joda project (http://www.joda.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The name \"Joda\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact licence@joda.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Joda\",\n+ *    nor may \"Joda\" appear in their name, without prior written\n+ *    permission of the Joda project.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Joda project and was originally\n+ * created by Stephen Colebourne <scolebourne@joda.org>. For more\n+ * information on the Joda project, please see <http://www.joda.org/>.\n+ */\n+package org.joda.time;\n+\n+/**\n+ * JodaTimePermission is used for securing global method calls in the Joda-Time\n+ * library. Since this class extends BasicPermission, asterisks may be used to\n+ * denote wildcard permissions. The following permissions are supported:\n+ *\n+ * <pre>\n+ * DateTimeZone\n+ *   .setDefault                 Allows a default DateTimeZone to be set\n+ *   .setProvider                Allows the DateTimeZone instance provider to be set\n+ *   .setNameProvider            Allows the DateTimeZone name provider to be set\n+ *\n+ * ConverterManager\n+ *   .alterInstantConverters     Allows an instant converter to be added or removed\n+ *   .alterDurationConverters    Allows a duration converter to be added or removed\n+ *   .alterIntervalConverters    Allows an interval converter to be added or removed\n+ *\n+ * CurrentTime.setProvider       Allows the current time provider to be set\n+ * </pre>\n+ * <p>\n+ * JodaTimePermission is thread-safe and immutable.\n+ *\n+ * @author Brian S O'Neill\n+ */\n+public class JodaTimePermission extends java.security.BasicPermission {\n+    static final long serialVersionUID = 1408944367355875472L;\n+\n+    public JodaTimePermission(String name) {\n+        super(name);\n+    }\n+}", "timestamp": 1082222225, "metainfo": ""}