{"sha": "0326d028f0a66221343872c53735c20877f0c415", "log": "Minor comment fixes   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java\n      * Calling this method sets the override zone to null.\n      * Calling the override zone method sets this flag off.\n      * \n-     * @param locale  the locale to use\n      * @return the new formatter\n      */\n     public DateTimeFormatter withOffsetParsed() {\n      * <p>\n      * When parsing, this chronology will be set on the parsed datetime.\n      * <p>\n-     * A null zone means of no-override.\n+     * A null chronology means of no-override.\n      * If both an override chronology and an override zone are set, the\n      * override zone will take precedence over the zone in the chronology.\n      * \n-     * @param zone  the zone to use as an override\n+     * @param chrono  the chronology to use as an override\n      * @return the new formatter\n      */\n     public DateTimeFormatter withChronology(Chronology chrono) {\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n      *\n      * @param pattern  pattern specification\n      * @throws IllegalArgumentException if the pattern is invalid\n-     * @see DateTimeFormat#appendPatternTo(DateTimeFormatterBuilder,String)\n+     * @see DateTimeFormat\n      */\n     public DateTimeFormatterBuilder appendPattern(String pattern) {\n         DateTimeFormat.appendPatternTo(this, pattern);", "timestamp": 1108267412, "metainfo": ""}