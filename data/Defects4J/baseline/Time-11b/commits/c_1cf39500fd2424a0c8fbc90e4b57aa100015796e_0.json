{"sha": "1cf39500fd2424a0c8fbc90e4b57aa100015796e", "log": "Increase test coverage   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n  * Joda Software License, Version 1.0\n  *\n  *\n- * Copyright (c) 2001-2004 Stephen Colebourne.  \n+ * Copyright (c) 2001-2005 Stephen Colebourne.  \n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n \n     public void testPropertyCompareToYear2() {\n         DateTime test1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);\n-        YearMonthDay test2 = new YearMonthDay(2004, 6, 9);\n-        YearMonthDay test3 = new YearMonthDay(2005, 6, 9);\n-        assertEquals(true, test1.year().compareTo(test1) == 0);\n-        assertEquals(true, test2.year().compareTo(test2) == 0);\n-        assertEquals(true, test3.year().compareTo(test3) == 0);\n-        \n-        assertEquals(true, test1.year().compareTo(test2) == 0);\n-        assertEquals(true, test2.year().compareTo(test1) == 0);\n-        assertEquals(true, test1.year().compareTo(test3) < 0);\n-        assertEquals(true, test3.year().compareTo(test1) > 0);\n+        YearMonthDay ymd1 = new YearMonthDay(2003, 6, 9);\n+        YearMonthDay ymd2 = new YearMonthDay(2004, 6, 9);\n+        YearMonthDay ymd3 = new YearMonthDay(2005, 6, 9);\n+        assertEquals(true, test1.year().compareTo(ymd1) > 0);\n+        assertEquals(true, test1.year().compareTo(ymd2) == 0);\n+        assertEquals(true, test1.year().compareTo(ymd3) < 0);\n         try {\n             test1.year().compareTo((ReadablePartial) null);\n             fail();\n         } catch (IllegalArgumentException ex) {}\n+    }\n+\n+    public void testPropertyEqualsHashCodeYear() {\n+        DateTime test1 = new DateTime(2004, 6, 9, 0, 0, 0, 0);\n+        assertEquals(true, test1.year().equals(test1.year()));\n+        assertEquals(true, test1.year().equals(new DateTime(2004, 6, 9, 0, 0, 0, 0).year()));\n+        assertEquals(false, test1.year().equals(new DateTime(2004, 6, 9, 0, 0, 0, 0).monthOfYear()));\n+        assertEquals(false, test1.year().equals(new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic()).year()));\n+        \n+        assertEquals(true, test1.year().hashCode() == test1.year().hashCode());\n+        assertEquals(true, test1.year().hashCode() == new DateTime(2004, 6, 9, 0, 0, 0, 0).year().hashCode());\n+        assertEquals(false, test1.year().hashCode() == new DateTime(2004, 6, 9, 0, 0, 0, 0).monthOfYear().hashCode());\n+        assertEquals(false, test1.year().hashCode() == new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getCoptic()).year().hashCode());\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1106784242, "metainfo": ""}