{"sha": "88649c3f306907e85ff8bf18bd6ac986a6a54005", "log": "Fixed bug in parsing dates with an incomplete set of fields. They were defaulting to whatever they were on 1970-01-01.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java\n+++ b/JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java\n     }\n     \n     public long parseMillis(final String text) {\n-        return parseMillis(text, 0);\n+        DateTimeParser p = (DateTimeParser)this;\n+        DateTimeParserBucket bucket = createBucket(0);\n+\n+        int newPos = p.parseInto(bucket, text, 0);\n+        if (newPos >= 0) {\n+            if (newPos >= text.length()) {\n+                return bucket.computeMillis(true);\n+            }\n+        } else {\n+            newPos = ~newPos;\n+        }\n+\n+        throw new IllegalArgumentException(createErrorMessage(text, newPos));\n     }\n \n     public long parseMillis(final String text, final long instantLocal) {\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java\n      * @throws IllegalArgumentException if any field is out of range\n      */\n     public long computeMillis() {\n+        return computeMillis(false);\n+    }\n+\n+    /**\n+     * Computes the parsed datetime by setting the saved fields. This method is\n+     * idempotent, but it is not thread-safe.\n+     *\n+     * @param resetFields false by default, but when true, unsaved field values are cleared\n+     * @return milliseconds since 1970-01-01T00:00:00Z\n+     * @throws IllegalArgumentException if any field is out of range\n+     */\n+    public long computeMillis(boolean resetFields) {\n         SavedField[] savedFields = iSavedFields;\n         int count = iSavedFieldsCount;\n         if (iSavedFieldsShared) {\n \n         long millis = iMillis;\n         for (int i=0; i<count; i++) {\n-            millis = savedFields[i].set(millis);\n+            millis = savedFields[i].set(millis, resetFields);\n         }\n \n         if (iZone == null) {\n             iLocale = locale;\n         }\n \n-        long set(long millis) {\n+        long set(long millis, boolean reset) {\n             if (iText == null) {\n-                return iField.set(millis, iValue);\n+                millis = iField.set(millis, iValue);\n             } else {\n-                return iField.set(millis, iText, iLocale);\n-            }\n+                millis = iField.set(millis, iText, iLocale);\n+            }\n+            if (reset) {\n+                millis = iField.roundFloor(millis);\n+            }\n+            return millis;\n         }\n \n         /**", "timestamp": 1092500999, "metainfo": ""}