{"sha": "bde6e6b5fc4e911107d9e014e037990c1f3882c5", "log": "Javadoc: normalize verb usage and general tidying.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/BinaryDecoder.java\n+++ b/src/java/org/apache/commons/codec/BinaryDecoder.java\n  */\n package org.apache.commons.codec;\n \n-\n-\n /**\n- * This interface defines common decoding methods for decoders\n- * which decode byte arrays.\n+ * Defines common decoding methods for byte arrays decoders.\n  *\n  * @author Tim O'Brien\n- * @version $Id: BinaryDecoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: BinaryDecoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface BinaryDecoder extends Decoder {\n \n     /**\n-     * Decode a byte array and return the results of the decode\n-     * as a byte array. \n+     * Decodes a byte array and returns the results as a byte array. \n      *\n      * @param pArray A byte array which has been encoded with the\n      *      appropriate encoder\n--- a/src/java/org/apache/commons/codec/BinaryEncoder.java\n+++ b/src/java/org/apache/commons/codec/BinaryEncoder.java\n package org.apache.commons.codec;\n \n /**\n- * A binary encoder contains methods common to all\n- * encoders for binary data. \n+ * Defines common encoding methods for byte arrays encoders.\n  * \n  * @author Tim O'Brien\n- * @version $Id: BinaryEncoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: BinaryEncoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface BinaryEncoder extends Encoder {\n     \n     /**\n-     * Encode a byte array and return the encoded data\n+     * Encodes a byte array and return the encoded data\n      * as a byte array.\n      * \n      * @param pArray Data to be encoded\n--- a/src/java/org/apache/commons/codec/Decoder.java\n+++ b/src/java/org/apache/commons/codec/Decoder.java\n package org.apache.commons.codec;\n \n /**\n- * Forms one of the two interfaces at the center of the\n- * codec package.  All decoders implement this interface\n- * which allows a user to pass a generic Object to any\n- * Decoder implementation in the codec package.\n+ * <p>Provides the highest level of abstraction for Decoders.\n+ * This is the sister interface of {@link Encoder}.  All\n+ * Decoders implement this common generic interface.</p>\n+ * \n+ * <p>Allows a user to pass a generic Object to any Decoder \n+ * implementation in the codec package.</p>\n+ * \n+ * <p>One of the two interfaces at the center of the codec package.</p>\n  * \n  * @author Tim O'Brien\n- * @version $Id: Decoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: Decoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface Decoder {\n \n     /**\n-     * Decode an \"encoded\" Object and return a \"decoded\"\n+     * Decodes an \"encoded\" Object and returns a \"decoded\"\n      * Object.  Note that the implementation of this\n      * interface will try to cast the Object parameter\n      * to the specific type expected by a particular Decoder\n-     * implementation.  If a ClassCastException occurs\n+     * implementation.  If a {@link java.lang.ClassCastException} occurs\n      * this decode method will throw a DecoderException.\n      * \n      * @param pObject an object to \"decode\"\n--- a/src/java/org/apache/commons/codec/DecoderException.java\n+++ b/src/java/org/apache/commons/codec/DecoderException.java\n package org.apache.commons.codec;\n \n /**\n- * The DecoderException is thrown when a Decoder has\n- * encounter a failure condition during a decode. \n+ * Thrown when a Decoder has encountered a failure condition during a decode. \n  * \n  * @author Tim O'Brien\n- * @version $Id: DecoderException.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: DecoderException.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public class DecoderException extends Exception {\n \n     /**\n-     * Create a DecoderException\n+     * Creates a DecoderException\n      * \n      * @param pMessage A message with meaning to a human\n      */\n--- a/src/java/org/apache/commons/codec/Encoder.java\n+++ b/src/java/org/apache/commons/codec/Encoder.java\n package org.apache.commons.codec;\n \n /**\n- * Encoder is the sister interface of Decoder, it provides\n- * the highest level of abstraction for Encoders.  All\n- * Encoders implement this common generic interface.\n+ * <p>Provides the highest level of abstraction for Encoders.\n+ * This is the sister interface of {@link Decoder}.  All\n+ * Encoder implement this common generic interface.</p>\n+ * \n+ * <p>Allows a user to pass a generic Object to any Encoder \n+ * implementation in the codec package.</p>\n+ * \n+ * <p>One of the two interfaces at the center of the codec package.</p>\n  *\n  * @author Tim O'Brien\n- * @version $Id: Encoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: Encoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface Encoder {\n     \n     /**\n-     * All encoders allow a library-user to pass an \n-     * Object and get an Object in return.  This function\n-     * encodes an \"Object\" - returning the encoded content \n-     * as an Object.  The Objects here may just be byte[]\n-     * or Strings depending on the implementation used.\n+     * Encodes an \"Object\" and returns the encoded content \n+     * as an Object.  The Objects here may just be <code>byte[]</code>\n+     * or <code>String</code>s depending on the implementation used.\n      *   \n      * @param pObject An object ot encode\n      * \n--- a/src/java/org/apache/commons/codec/EncoderException.java\n+++ b/src/java/org/apache/commons/codec/EncoderException.java\n package org.apache.commons.codec;\n \n /**\n- * An EncoderException is thrown when there is a\n- * failure condition during the encoding process.\n+ * Thrown when there is a failure condition during the encoding process.\n  * \n  * @author Tim O'Brien\n- * @version $Id: EncoderException.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: EncoderException.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public class EncoderException extends Exception {\n \n     /**\n-     * Create a new instance of this exception with\n+     * Creates a new instance of this exception with\n      * an informative message.\n      * \n      * @param pMessage a human intelligible message\n--- a/src/java/org/apache/commons/codec/StringDecoder.java\n+++ b/src/java/org/apache/commons/codec/StringDecoder.java\n package org.apache.commons.codec;\n \n /**\n- * A StringDecoder is a decoder which expects a String as\n- * a method parameter and one that produces a String as the\n- * output of the decoding process.\n+ * Decodes a String into a String. \n  *\n  * @author Tim O'Brien\n- * @version $Id: StringDecoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: StringDecoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface StringDecoder extends Decoder {\n     \n     /**\n-     * Decode a String and produce a String.\n+     * Decodes a String and returns a String.\n      * \n      * @param pString a String to encode\n      * \n--- a/src/java/org/apache/commons/codec/StringEncoder.java\n+++ b/src/java/org/apache/commons/codec/StringEncoder.java\n package org.apache.commons.codec;\n \n /**\n- * A StringEncoder is an encoder which expects a String as\n- * a method parameter and one that produces a String as the\n- * output of the Encoding process.\n+ * Encodes a String into a String. \n  *\n  * @author Tim O'Brien\n- * @version $Id: StringEncoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: StringEncoder.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public interface StringEncoder extends Encoder {\n     \n     /**\n-     * Encode a String and produce a String.\n+     * Encodes a String and returns a String.\n      * \n      * @param pString a String to encode\n      * \n--- a/src/java/org/apache/commons/codec/StringEncoderComparator.java\n+++ b/src/java/org/apache/commons/codec/StringEncoderComparator.java\n  * form of a name such as Soundex.\n  *\n  * @author Tim O'Brien\n- * @version $Id: StringEncoderComparator.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n+ * @author Gary Gregory\n+ * @version $Id: StringEncoderComparator.java,v 1.4 2003/08/14 07:40:17 ggregory Exp $\n  */\n public class StringEncoderComparator implements Comparator {\n \n-    // Private encoder instance\n+    /**\n+     * Internal encoder instance.\n+     */\n     private StringEncoder stringEncoder;\n \n     /**\n-     * A no-arg, do-nothing constructor\n+     * Constructs a new instance.\n      */\n     public StringEncoderComparator() {\n     }\n \n     /**\n-     * Use the provided soundex algorithm.\n+     * Constructs a new instance with the given soundex algorithm.\n      */\n     public StringEncoderComparator(StringEncoder en) {\n         this.stringEncoder = en;\n     }\n \n     /**\n-     * Compare 2 strings based not on the strings \n+     * Compares 2 strings based not on the strings \n      * themselves, but on an encoding of the two \n      * strings using the StringEncoder this Comparator\n      * was created with.", "timestamp": 1060846878, "metainfo": ""}