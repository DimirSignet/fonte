{"sha": "10a1327b88bdb842bfb58605887175c2bc7b4a75", "log": "More tests for URLCodec to increase coverage.   ", "commit": "\n--- a/src/test/org/apache/commons/codec/net/URLCodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/URLCodecTest.java\n package org.apache.commons.codec.net;\n \n import org.apache.commons.codec.DecoderException;\n+import org.apache.commons.codec.EncoderException;\n \n import junit.framework.TestCase;\n \n             // Expected. Move on\n         }\n     }\n+\n+    public void testEncodeNull() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        byte[] plain = null;\n+        byte[] encoded = urlcodec.encode(plain);\n+        assertEquals(\"Encoding a null string should return null\", \n+            null, encoded);\n+    }\n+    \n+    public void testEncodeUrlWithNullBitSet() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        String plain = \"Hello there!\";\n+        String encoded = new String( URLCodec.encodeUrl(null, plain.getBytes()));\n+        assertEquals(\"Basic URL encoding test\", \n+            \"Hello+there%21\", encoded);\n+        assertEquals(\"Basic URL decoding test\", \n+            plain, urlcodec.decode(encoded));\n+        \n+    }\n+\n+    public void testDecodeWithNullArray() throws Exception {\n+        byte[] plain = null;\n+        byte[] result = URLCodec.decodeUrl( plain );\n+        assertEquals(\"Result should be null\", null, result);\n+    }\n+\n+    public void testEncodeStringWithNull() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        String test = null;\n+        String result = urlcodec.encode( test, \"charset\" );\n+        assertEquals(\"Result should be null\", null, result);\n+    }\n+\n+    public void testDecodeStringWithNull() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        String test = null;\n+        String result = urlcodec.decode( test, \"charset\" );\n+        assertEquals(\"Result should be null\", null, result);\n+    }\n+    \n+    public void testEncodeObjects() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        String plain = \"Hello there!\";\n+        String encoded = (String) urlcodec.encode((Object) plain);\n+        assertEquals(\"Basic URL encoding test\", \n+            \"Hello+there%21\", encoded);\n+\n+        byte[] plainBA = plain.getBytes();\n+        byte[] encodedBA = (byte[]) urlcodec.encode((Object) plainBA);\n+        encoded = new String(encodedBA);\n+        assertEquals(\"Basic URL encoding test\", \n+            \"Hello+there%21\", encoded);\n+            \n+        Object result = urlcodec.encode((Object) null);\n+        assertEquals( \"Encoding a null Object should return null\", null, result);\n+        \n+        try {\n+            Object dObj = new Double(3.0);\n+            urlcodec.encode( dObj );\n+            fail( \"Trying to url encode a Double object should cause an exception.\");\n+        } catch( EncoderException ee ) {\n+        }\n+    }\n+    \n+    public void testInvalidEncoding() {\n+        URLCodec urlcodec = new URLCodec(\"NONSENSE\");\n+           String plain = \"Hello there!\";\n+            try {\n+               String encoded = urlcodec.encode(plain);\n+                fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n+            } catch( EncoderException ee ) {\n+            }\n+            try {\n+               String decoded = urlcodec.decode(plain);\n+                fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n+            } catch( DecoderException ee ) {\n+            }\n+    }\n+\n+    public void testDecodeObjects() throws Exception {\n+        URLCodec urlcodec = new URLCodec();\n+        String plain = \"Hello+there%21\";\n+        String decoded = (String) urlcodec.decode((Object) plain);\n+        assertEquals(\"Basic URL decoding test\", \n+            \"Hello there!\", decoded);\n+\n+        byte[] plainBA = plain.getBytes();\n+        byte[] decodedBA = (byte[]) urlcodec.decode((Object) plainBA);\n+        decoded = new String(decodedBA);\n+        assertEquals(\"Basic URL decoding test\", \n+            \"Hello there!\", decoded);\n+            \n+        Object result = urlcodec.decode((Object) null);\n+        assertEquals( \"Decoding a null Object should return null\", null, result);\n+        \n+        try {\n+            Object dObj = new Double(3.0);\n+            urlcodec.decode( dObj );\n+            fail( \"Trying to url encode a Double object should cause an exception.\");\n+        } catch( DecoderException ee ) {\n+        }\n+    }\n }", "timestamp": 1065925071, "metainfo": ""}