{"sha": "df9d1bbcdf99349c471d934ab9df4cc7eae58c59", "log": "Simplify case statement and avoid drop thru  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n             }\n             byte b = in[inPos++];\n             if (b == PAD) {\n-                modulus = (++modulus) % 4;\n                 x = x << 6;\n                 switch (modulus) {\n+                    case 2:\n+                        x = x << 6;\n+                        buf[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n+                        break;\n                     case 3:\n-                        x = x << 6;\n-                    case 0:\n                         buf[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n-                        if (modulus == 0) {\n-                            buf[pos++] = (byte) ((x >> 8) & MASK_8BITS);\n-                        }\n-                    default:\n-                        // WE'RE DONE!!!!\n-                        eof = true;\n-                        return;\n+                        buf[pos++] = (byte) ((x >> 8) & MASK_8BITS);\n+                        break;\n                 }\n+                // WE'RE DONE!!!!\n+                eof = true;\n+                return;\n             } else {\n                 if (b >= 0 && b < base64ToInt.length) {\n                     int result = base64ToInt[b];", "timestamp": 1215346671, "metainfo": ""}