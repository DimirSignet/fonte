{"sha": "90cb58217ebc628734ebbd4ca84e9eea9305dd77", "log": "removing tabs.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/java/org/apache/commons/codec/digest/DigestUtils.java\n         return getDigest(\"MD5\");\n     }\n \n-\t/**\n-\t * Returns an SHA digest.\n-\t *\n-\t * @return An SHA digest instance.\n+    /**\n+     * Returns an SHA digest.\n+     *\n+     * @return An SHA digest instance.\n      * @throws RuntimeException when a {@link java.security.NoSuchAlgorithmException} is caught,\n-\t */\n-\tprivate static MessageDigest getShaDigest() {\n+     */\n+    private static MessageDigest getShaDigest() {\n         return getDigest(\"SHA\");\n-\t}\n+    }\n \n-\t/**\n-\t * Calculates the MD5 digest and returns the value as a 16 element \n-\t * <code>byte[]</code>.\n-\t *\n-\t * @param data Data to digest\n-\t * @return MD5 digest\n-\t */\n-\tpublic static byte[] md5(byte[] data) {\n-\t\treturn getMd5Digest().digest(data);\n-\t}\n+    /**\n+     * Calculates the MD5 digest and returns the value as a 16 element \n+     * <code>byte[]</code>.\n+     *\n+     * @param data Data to digest\n+     * @return MD5 digest\n+     */\n+    public static byte[] md5(byte[] data) {\n+        return getMd5Digest().digest(data);\n+    }\n \n-\t/**\n-\t * Calculates the MD5 digest and returns the value as a 16 element \n-\t * <code>byte[]</code>.\n-\t *\n-\t * @param data Data to digest\n-\t * @return MD5 digest\n-\t */\n-\tpublic static byte[] md5(String data) {\n-\t\treturn md5(data.getBytes());\n-\t}\n+    /**\n+     * Calculates the MD5 digest and returns the value as a 16 element \n+     * <code>byte[]</code>.\n+     *\n+     * @param data Data to digest\n+     * @return MD5 digest\n+     */\n+    public static byte[] md5(String data) {\n+        return md5(data.getBytes());\n+    }\n \n-\t/**\n-\t * Calculates the MD5 digest and returns the value as a 32 character \n-\t * hex string.\n-\t *\n-\t * @param data Data to digest\n-\t * @return MD5 digest as a hex string\n-\t */\n-\tpublic static String md5Hex(byte[] data) {\n-\t\treturn new String(Hex.encodeHex(md5(data)));\n-\t}\n+    /**\n+     * Calculates the MD5 digest and returns the value as a 32 character \n+     * hex string.\n+     *\n+     * @param data Data to digest\n+     * @return MD5 digest as a hex string\n+     */\n+    public static String md5Hex(byte[] data) {\n+        return new String(Hex.encodeHex(md5(data)));\n+    }\n \n-\t/**\n-\t * Calculates the MD5 digest and returns the value as a 32 character \n-\t * hex string.\n-\t *\n-\t * @param data Data to digest\n-\t * @return MD5 digest as a hex string\n-\t */\n-\tpublic static String md5Hex(String data) {\n-\t\treturn new String(Hex.encodeHex(md5(data)));\n-\t}\n+    /**\n+     * Calculates the MD5 digest and returns the value as a 32 character \n+     * hex string.\n+     *\n+     * @param data Data to digest\n+     * @return MD5 digest as a hex string\n+     */\n+    public static String md5Hex(String data) {\n+        return new String(Hex.encodeHex(md5(data)));\n+    }\n \n-\t/**\n-\t * Calculates the SHA digest and returns the value as a \n-\t * <code>byte[]</code>.\n-\t *\n-\t * @param data Data to digest\n-\t * @return SHA digest\n-\t */\n-\tpublic static byte[] sha(byte[] data) {\n-\t\treturn getShaDigest().digest(data);\n-\t}\n+    /**\n+     * Calculates the SHA digest and returns the value as a \n+     * <code>byte[]</code>.\n+     *\n+     * @param data Data to digest\n+     * @return SHA digest\n+     */\n+    public static byte[] sha(byte[] data) {\n+        return getShaDigest().digest(data);\n+    }\n \n-\t/**\n-\t * Calculates the SHA digest and returns the value as a \n-\t * <code>byte[]</code>.\n-\t *\n-\t * @param data Data to digest\n-\t * @return SHA digest\n-\t */\n-\tpublic static byte[] sha(String data) {\n-\t\treturn sha(data.getBytes());\n-\t}\n+    /**\n+     * Calculates the SHA digest and returns the value as a \n+     * <code>byte[]</code>.\n+     *\n+     * @param data Data to digest\n+     * @return SHA digest\n+     */\n+    public static byte[] sha(String data) {\n+        return sha(data.getBytes());\n+    }\n \n-\t/**\n+    /**\n      * Calculates the SHA digest and returns the value as a hex string.\n      *\n      * @param data Data to digest\n      * @return SHA digest as a hex string\n      */\n-\tpublic static String shaHex(byte[] data) {\n-\t\treturn new String(Hex.encodeHex(sha(data)));\n-\t}\n+    public static String shaHex(byte[] data) {\n+        return new String(Hex.encodeHex(sha(data)));\n+    }\n \n-\t/**\n-\t * Calculates the SHA digest and returns the value as a hex string.\n-\t *\n-\t * @param data Data to digest\n-\t * @return SHA digest as a hex string\n-\t */\n-\tpublic static String shaHex(String data) {\n-\t\treturn new String(Hex.encodeHex(sha(data)));\n-\t}\n+    /**\n+     * Calculates the SHA digest and returns the value as a hex string.\n+     *\n+     * @param data Data to digest\n+     * @return SHA digest as a hex string\n+     */\n+    public static String shaHex(String data) {\n+        return new String(Hex.encodeHex(sha(data)));\n+    }\n \n }", "timestamp": 1079068107, "metainfo": ""}