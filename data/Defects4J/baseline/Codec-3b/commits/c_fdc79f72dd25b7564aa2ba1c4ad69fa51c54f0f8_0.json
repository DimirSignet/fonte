{"sha": "fdc79f72dd25b7564aa2ba1c4ad69fa51c54f0f8", "log": "Apply consistent format for catch clauses.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n                         throw new DecoderException(\"Invalid URL encoding\");\n                     }\n                     buffer.write((char)((u << 4) + l));\n-                } catch(ArrayIndexOutOfBoundsException e) {\n+                } catch (ArrayIndexOutOfBoundsException e) {\n                     throw new DecoderException(\"Invalid URL encoding\");\n                 }\n             } else {\n         }\n         try {\n             return encode(pString, getDefaultCharset());\n-        } catch(UnsupportedEncodingException e) {\n+        } catch (UnsupportedEncodingException e) {\n             throw new EncoderException(e.getMessage());\n         }\n     }\n         }\n         try {\n             return decode(pString, getDefaultCharset());\n-        } catch(UnsupportedEncodingException e) {\n+        } catch (UnsupportedEncodingException e) {\n             throw new DecoderException(e.getMessage());\n         }\n     }\n--- a/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java\n+++ b/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java\n         BinaryEncoder encoder = makeEncoder();\n         try {\n             encoder.encode(null);\n-        } catch( EncoderException ee ) {\n+        } catch (EncoderException ee) {\n             // An exception should be thrown\n         }\n     }        \n--- a/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n         \n         try {\n             encoder.encode(null);\n-        } catch( EncoderException ee ) {\n+        } catch (EncoderException ee) {\n             // An exception should be thrown\n         }\n     }        \n         try {\n             StringEncoder encoder = makeEncoder();\n             encoder.encode( new Float( 3.4 ) );\n-        } catch( Exception e ) {\n+        } catch (Exception e) {\n             exceptionThrown = true;\n         }\n \n--- a/src/test/org/apache/commons/codec/net/QCodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/QCodecTest.java\n             Object dObj = new Double(3.0);\n             qcodec.encode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( EncoderException ee ) {\n+        } catch (EncoderException ee) {\n             // Exception expected, test segment passes.\n         }\n     }\n             try {\n                qcodec.encode(\"Hello there!\");\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n-            } catch( EncoderException ee ) {\n+            } catch (EncoderException ee) {\n                 // Exception expected, test segment passes.\n             }\n             try {\n                qcodec.decode(\"=?NONSENSE?Q?Hello there!?=\");\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n-            } catch( DecoderException ee ) {\n+            } catch (DecoderException ee) {\n                 // Exception expected, test segment passes.\n             }\n     }\n             Object dObj = new Double(3.0);\n             qcodec.decode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( DecoderException ee ) {\n+        } catch (DecoderException ee) {\n             // Exception expected, test segment passes.\n         }\n     }\n--- a/src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java\n         try {\n             qpcodec.decode(\"=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             qpcodec.decode(\"=A\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             qpcodec.decode(\"=WW\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n     }\n             Object dObj = new Double(3.0);\n             qpcodec.encode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( EncoderException ee ) {\n+        } catch (EncoderException ee) {\n             // Exception expected, test segment passes.\n         }\n     }\n             try {\n                qpcodec.encode(plain);\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n-            } catch( EncoderException ee ) {\n+            } catch (EncoderException ee) {\n                 // Exception expected, test segment passes.\n             }\n             try {\n                qpcodec.decode(plain);\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n-            } catch( DecoderException ee ) {\n+            } catch (DecoderException ee) {\n                 // Exception expected, test segment passes.\n             }\n     }\n             Object dObj = new Double(3.0);\n             qpcodec.decode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( DecoderException ee ) {\n+        } catch (DecoderException ee) {\n             // Exception expected, test segment passes.\n         }\n     }\n--- a/src/test/org/apache/commons/codec/net/RFC1522CodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/RFC1522CodecTest.java\n         try {\n             testcodec.decodeText(\"whatever\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=?stuff?=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=?UTF-8?stuff?=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=?UTF-8?T?stuff\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=??T?stuff?=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=?UTF-8??stuff?=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             testcodec.decodeText(\"=?UTF-8?W?stuff?=\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n     }\n--- a/src/test/org/apache/commons/codec/net/URLCodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/URLCodecTest.java\n         try {\n             urlCodec.decode(\"%\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             urlCodec.decode(\"%A\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         try {\n             urlCodec.decode(\"%WW\");\n             fail(\"DecoderException should have been thrown\");\n-        } catch(DecoderException e) {\n+        } catch (DecoderException e) {\n             // Expected. Move on\n         }\n         this.validateState(urlCodec);\n             Object dObj = new Double(3.0);\n             urlCodec.encode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( EncoderException ee ) {\n+        } catch (EncoderException ee) {\n             // Exception expected, test segment passes.\n         }\n         this.validateState(urlCodec);\n             Object dObj = new Double(3.0);\n             urlCodec.decode( dObj );\n             fail( \"Trying to url encode a Double object should cause an exception.\");\n-        } catch( DecoderException ee ) {\n+        } catch (DecoderException ee) {\n             // Exception expected, test segment passes.\n         }\n         this.validateState(urlCodec);", "timestamp": 1248471727, "metainfo": ""}