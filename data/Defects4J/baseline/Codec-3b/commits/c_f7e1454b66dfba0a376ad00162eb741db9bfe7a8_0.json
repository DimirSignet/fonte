{"sha": "f7e1454b66dfba0a376ad00162eb741db9bfe7a8", "log": "Now that we are on Java 1.4, we can save the original exception when we re-throw another exception.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/EncoderException.java\n+++ b/src/java/org/apache/commons/codec/EncoderException.java\n package org.apache.commons.codec;\n \n /**\n- * Thrown when there is a failure condition during the encoding process.  This\n- * exception is thrown when an Encoder encounters a encoding specific exception\n- * such as invalid data, inability to calculate a checksum, characters outside of the \n- * expected range.\n+ * Thrown when there is a failure condition during the encoding process. This exception is thrown when an Encoder\n+ * encounters a encoding specific exception such as invalid data, inability to calculate a checksum, characters outside\n+ * of the expected range.\n  * \n  * @author Apache Software Foundation\n  * @version $Id$\n     /**\n      * Creates a new instance of this exception with an useful message.\n      * \n-     * @param message a useful message relating to the encoder specific error.\n+     * @param message\n+     *            a useful message relating to the encoder specific error.\n      */\n     public EncoderException(String message) {\n         super(message);\n     }\n-}  \n \n+    /**\n+     * Creates a EncoderException.\n+     * \n+     * @param cause\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            value is permitted, and indicates that the cause is nonexistent or unknown.\n+     * @since 1.4\n+     */\n+    public EncoderException(Throwable cause) {\n+        super(cause);\n+    }\n+\n+    /**\n+     * Creates a EncoderException.\n+     * \n+     * @param message\n+     *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.\n+     * @param cause\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            value is permitted, and indicates that the cause is nonexistent or unknown.\n+     * @since 1.4\n+     */\n+    public EncoderException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}\n--- a/src/java/org/apache/commons/codec/binary/Hex.java\n+++ b/src/java/org/apache/commons/codec/binary/Hex.java\n             byte[] byteArray = object instanceof String ? ((String) object).getBytes() : (byte[]) object;\n             return encodeHex(byteArray);\n         } catch (ClassCastException e) {\n-            throw new EncoderException(e.getMessage());\n+            throw new EncoderException(e.getMessage(), e);\n         }\n     }\n \n--- a/src/java/org/apache/commons/codec/net/BCodec.java\n+++ b/src/java/org/apache/commons/codec/net/BCodec.java\n         try {\n             return encodeText(value, charset);\n         } catch (UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage());\n+            throw new EncoderException(e.getMessage(), e);\n         }\n     }\n \n--- a/src/java/org/apache/commons/codec/net/QCodec.java\n+++ b/src/java/org/apache/commons/codec/net/QCodec.java\n         try {\n             return encodeText(pString, charset);\n         } catch (UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage());\n+            throw new EncoderException(e.getMessage(), e);\n         }\n     }\n \n--- a/src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java\n+++ b/src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java\n         try {\n             return encode(pString, getDefaultCharset());\n         } catch (UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage());\n+            throw new EncoderException(e.getMessage(), e);\n         }\n     }\n \n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n         try {\n             return encode(pString, getDefaultCharset());\n         } catch (UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage());\n+            throw new EncoderException(e.getMessage(), e);\n         }\n     }\n ", "timestamp": 1248477509, "metainfo": ""}