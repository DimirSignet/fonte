{"sha": "66cf3bd969dac311d4dc50fd9a19ce387095afec", "log": "Minor clean up.   ", "commit": "\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.9 $ $Date: 2003/11/03 07:23:33 $\n+ * @version $Revision: 1.10 $ $Date: 2003/11/03 17:58:57 $\n  * @author <a href=\"mailto:sanders@apache.org\">Scott Sanders</a>\n  * @author <a href=\"mailto:rwaldhoff@apache.org\">Rodney Waldhoff</a>\n  * @author Tim O'Brien\n     public void testEncodeDecodeSmall() {\n         for(int i=0;i<12;i++) {\n             byte[] data = new byte[i];\n-            _random.nextBytes(data);\n+            this.getRandom().nextBytes(data);\n             byte[] enc =  Base64.encodeBase64(data);\n             assertTrue(\"\\\"\" + (new String(enc)) + \"\\\" is Base64 data.\",Base64.isArrayByteBase64(enc) );\n             byte[] data2 = Base64.decodeBase64(enc);\n     // encode/decode a large random array\n     public void testEncodeDecodeRandom() {\n         for(int i=1;i<5;i++) {\n-            byte[] data = new byte[_random.nextInt(10000)+1];\n-            _random.nextBytes(data);\n+            byte[] data = new byte[this.getRandom().nextInt(10000)+1];\n+            this.getRandom().nextBytes(data);\n             byte[] enc =  Base64.encodeBase64(data);\n             assertTrue(Base64.isArrayByteBase64(enc));\n             byte[] data2 = Base64.decodeBase64(enc);\n \n     private Random _random = new Random();\n \n+    /**\n+     * @return Returns the _random.\n+     */\n+    public Random getRandom() {\n+        return this._random;\n+    }\n+\n }", "timestamp": 1067882337, "metainfo": ""}