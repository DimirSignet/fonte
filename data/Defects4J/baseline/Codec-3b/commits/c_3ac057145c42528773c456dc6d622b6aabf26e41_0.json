{"sha": "3ac057145c42528773c456dc6d622b6aabf26e41", "log": "Make code less twisty.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n+++ b/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n  * </ul>\n  * \n  * @author Apache Software Foundation\n- * @version $Id: DoubleMetaphone.java,v 1.22 2004/05/24 00:28:10 ggregory Exp $\n+ * @version $Id: DoubleMetaphone.java,v 1.23 2004/05/24 04:55:33 ggregory Exp $\n  */\n public class DoubleMetaphone implements StringEncoder {\n \n      * Complex condition 0 for 'M'\n      */\n     private boolean conditionM0(String value, int index) {\n-        if (charAt(value, index + 1) == 'M') {\n-            return true;\n-        } else {\n-            return contains(value, index - 1, 3, \"UMB\") &&\n-                ((index + 1) == value.length() - 1 || \n-                 contains(value, index + 2, 2, \"ER\"));\n-        }\n-    }\n+\t\tif (charAt(value, index + 1) == 'M') {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn contains(value, index - 1, 3, \"UMB\")\n+\t\t\t\t&& ((index + 1) == value.length() - 1 || contains(value,\n+\t\t\t\t\t\tindex + 2, 2, \"ER\"));\n+\t}\n     \n     //-- BEGIN HELPER FUNCTIONS --//\n \n     /**\n-     * Determines whether or not a value is of slavo-germanic orgin.  A value is\n-     * of slavo-germanic origin if it contians any of 'W', 'K', 'CZ', or 'WITZ'.\n-     */\n+\t * Determines whether or not a value is of slavo-germanic orgin. A value is\n+\t * of slavo-germanic origin if it contians any of 'W', 'K', 'CZ', or 'WITZ'.\n+\t */\n     private boolean isSlavoGermanic(String value) {\n         return value.indexOf('W') > -1 || value.indexOf('K') > -1 || \n             value.indexOf(\"CZ\") > -1 || value.indexOf(\"WITZ\") > -1;\n      * Cleans the input\n      */    \n     private String cleanInput(String input) {\n-        if (input == null) {\n-            return null;\n-        } else {\n-            input = input.trim();\n-            if (input.length() == 0) {\n-                return null;\n-            } else {\n-                return input.toUpperCase();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Gets the character at index <code>index</code> if available, otherwise it\n-     * returns <code>Character.MIN_VALUE</code> so that there is some sort of a\n-     * default\n-     */    \n+\t\tif (input == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tinput = input.trim();\n+\t\tif (input.length() == 0) {\n+\t\t\treturn null;\n+\t\t}\n+\t\treturn input.toUpperCase();\n+\t}\n+\n+    /**\n+\t * Gets the character at index <code>index</code> if available, otherwise\n+\t * it returns <code>Character.MIN_VALUE</code> so that there is some sort\n+\t * of a default\n+\t */    \n     protected char charAt(String value, int index) {\n         if (index < 0 || index >= value.length()) {\n             return Character.MIN_VALUE;\n-        } else {\n-            return value.charAt(index);\n-        }\n+        } \n+        return value.charAt(index);\n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/language/Metaphone.java\n+++ b/src/java/org/apache/commons/codec/language/Metaphone.java\n  *      <i>Computer Language</i> of Dec. 1990, p 39   \n  * \n  * @author Apache Software Foundation\n- * @version $Id: Metaphone.java,v 1.18 2004/05/24 00:22:45 ggregory Exp $\n+ * @version $Id: Metaphone.java,v 1.19 2004/05/24 04:56:29 ggregory Exp $\n  */\n public class Metaphone implements StringEncoder {\n \n                     if ( isPreviousChar(local, n, 'M') && \n                          isLastChar(wdsz, n) ) { // B is silent if word ends in MB\n \t\t\t\t\t\tbreak;\n-                    } else {\n-                        code.append(symb);\n-                    }\n+                    }\n+                    code.append(symb);\n                     break;\n                 case 'C' : // lots of C special cases\n                     /* discard if SCI, SCE or SCY */\n--- a/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n+++ b/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n  * Margaret Odell and Robert Russell\n  * \n  * @author Apache Software Foundation\n- * @version $Id: RefinedSoundex.java,v 1.19 2004/05/24 00:23:17 ggregory Exp $\n+ * @version $Id: RefinedSoundex.java,v 1.20 2004/05/24 04:57:24 ggregory Exp $\n  */\n public class RefinedSoundex implements StringEncoder {\n \n     char getMappingCode(char c) {\n         if (!Character.isLetter(c)) {\n             return 0;\n-        } else {\n-            return this.soundexMapping[Character.toUpperCase(c) - 'A'];\n         }\n+        return this.soundexMapping[Character.toUpperCase(c) - 'A'];\n     }\n \n     /**", "timestamp": 1085374644, "metainfo": ""}