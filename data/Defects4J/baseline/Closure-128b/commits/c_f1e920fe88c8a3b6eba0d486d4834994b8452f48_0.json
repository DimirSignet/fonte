{"sha": "f1e920fe88c8a3b6eba0d486d4834994b8452f48", "log": "Remove the Kit class  R=nicksantos DELTA=66  (2 added, 59 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3747   ", "commit": "\n--- a/src/com/google/javascript/rhino/Node.java\n+++ b/src/com/google/javascript/rhino/Node.java\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n         default:\n-          Kit.codeBug();\n-      }\n-      return null;\n+          throw new IllegalStateException(\"unexpect prop id \" + propType);\n+      }\n   }\n \n   private static class NumberNode extends Node {\n   public int getExistingIntProp(int propType) {\n     PropListItem item = lookupProperty(propType);\n     if (item == null) {\n-      Kit.codeBug();\n+      throw new IllegalStateException(\"missing prop: \" + propType);\n     }\n     return item.getIntValue();\n   }\n    * This should only be called for STRING nodes children of OBJECTLIT.\n    */\n   public void setQuotedString() {\n-    Kit.codeBug();\n+    throw new IllegalStateException(\"not a StringNode\");\n   }\n \n   static class NodeMismatch {\n--- a/src/com/google/javascript/rhino/ScriptRuntime.java\n+++ b/src/com/google/javascript/rhino/ScriptRuntime.java\n      * the same as 'escape.'\n      */\n     public static String escapeString(String s, char escapeQuote) {\n-        if (!(escapeQuote == '\"' || escapeQuote == '\\'')) Kit.codeBug();\n+        if (!(escapeQuote == '\"' || escapeQuote == '\\'')) {\n+          throw new IllegalStateException(\"unexpected quote char:\" + escapeQuote);\n+        }\n         StringBuffer sb = null;\n \n         for(int i = 0, L = s.length(); i != L; ++i) {", "timestamp": 1321480225, "metainfo": ""}