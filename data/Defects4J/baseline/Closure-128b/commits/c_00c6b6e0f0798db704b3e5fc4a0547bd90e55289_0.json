{"sha": "00c6b6e0f0798db704b3e5fc4a0547bd90e55289", "log": "don't inline exported aliases.  R=johnlenz DELTA=7  (6 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=824   ", "commit": "\n--- a/src/com/google/javascript/jscomp/InlineVariables.java\n+++ b/src/com/google/javascript/jscomp/InlineVariables.java\n           Node nameNode = refs.get(i).getNameNode();\n           if (aliasCandidates.containsKey(nameNode)) {\n             AliasCandidate candidate = aliasCandidates.get(nameNode);\n-            if (!staleVars.contains(candidate.alias)) {\n+            if (!staleVars.contains(candidate.alias) &&\n+                !isVarInlineForbidden(candidate.alias)) {\n               Reference aliasInit;\n               aliasInit = candidate.refInfo.getInitializingReference();\n               Node value = aliasInit.getAssignedValue();\n--- a/test/com/google/javascript/jscomp/InlineVariablesTest.java\n+++ b/test/com/google/javascript/jscomp/InlineVariablesTest.java\n \n   public void testNoInlineExportedName() {\n     testSame(\"var _x = 1; var z = _x;\");\n+  }\n+\n+  public void testNoInlineExportedName2() {\n+    testSame(\"var f = function() {}; var _x = f;\" +\n+             \"var y = function() { _x(); }; var _y = f;\");\n   }\n \n   public void testDoNotInlineIncrement() {", "timestamp": 1299807230, "metainfo": ""}