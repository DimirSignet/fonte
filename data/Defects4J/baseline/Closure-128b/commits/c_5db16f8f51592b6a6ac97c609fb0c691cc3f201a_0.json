{"sha": "5db16f8f51592b6a6ac97c609fb0c691cc3f201a", "log": "Let the template function type be nullable.  R=nicksantos DELTA=8  (1 added, 0 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=358566   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeInference.java\n+++ b/src/com/google/javascript/jscomp/TypeInference.java\n     int childCount = n.getChildCount();\n     // Find the parameter whose type is the template type.\n     for (Node iParameter : fnType.getParameters()) {\n-      JSType iParameterType = getJSType(iParameter);\n-      iParameterType = iParameterType.restrictByNotNullOrUndefined();\n+      JSType iParameterType =\n+          getJSType(iParameter).restrictByNotNullOrUndefined();\n       if (iParameterType.isTemplateType()) {\n         // Find the actual type of this argument.\n         JSType iArgumentType = null;\n         boolean foundTemplateTypeOfThisParameter = false;\n         int j = 0;\n         for (Node jParameter : fnType.getParameters()) {\n-          JSType jParameterType = getJSType(jParameter);\n+          JSType jParameterType =\n+              getJSType(jParameter).restrictByNotNullOrUndefined();\n           if (jParameterType instanceof FunctionType) {\n             FunctionType jParameterFnType = (FunctionType) jParameterType;\n             if (jParameterFnType.getTypeOfThis().equals(iParameterType)) {\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n   public void testFunctionLiteralUndefinedThisArgument() throws Exception {\n     testTypes(\"\"\n         + \"/**\\n\"\n-        + \" * @param {function(this:T, ...)} fn\\n\"\n-        + \" * @param {T} opt_obj\\n\"\n+        + \" * @param {function(this:T, ...)?} fn\\n\"\n+        + \" * @param {?T} opt_obj\\n\"\n         + \" * @template T\\n\"\n         + \" */\\n\"\n         + \"function baz(fn, opt_obj) {}\\n\"\n   public void testFunctionLiteralDefinedThisArgument() throws Exception {\n     testTypes(\"\"\n         + \"/**\\n\"\n-        + \" * @param {function(this:T, ...)} fn\\n\"\n-        + \" * @param {T} opt_obj\\n\"\n+        + \" * @param {function(this:T, ...)?} fn\\n\"\n+        + \" * @param {?T} opt_obj\\n\"\n         + \" * @template T\\n\"\n         + \" */\\n\"\n         + \"function baz(fn, opt_obj) {}\\n\"", "timestamp": 1287510453, "metainfo": ""}