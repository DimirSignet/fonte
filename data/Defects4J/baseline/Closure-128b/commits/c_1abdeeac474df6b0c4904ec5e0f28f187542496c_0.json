{"sha": "1abdeeac474df6b0c4904ec5e0f28f187542496c", "log": "Fix compiler crash on typos in namespaces.  R=nicksantos DELTA=25  (19 added, 2 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3623   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n      */\n     private void recordPrototypeSet(String className, String prototypeProperty,\n         Node node) {\n-      JsName name = getName(className, false);\n-      if (name != null) {\n-        name.prototypeNames.add(prototypeProperty);\n-        refNodes.add(new PrototypeSetNode(name, node));\n-        recordWriteOnProperties(className);\n-      }\n+      JsName name = getName(className, true);\n+      name.prototypeNames.add(prototypeProperty);\n+      refNodes.add(new PrototypeSetNode(name, node));\n+      recordWriteOnProperties(className);\n     }\n \n     /**\n--- a/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n+++ b/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n       \"if (false){}\");\n   }\n \n+  // We cannot leave x.a.prototype there because it will\n+  // fail sanity var check.\n+  public void testBrokenNamespaceWithPrototypeAssignment() {\n+    test(\"var x = {}; x.a.prototype = 1\", \"\");\n+  }\n+\n+\n   @Override\n   protected CompilerPass getProcessor(Compiler compiler) {\n     return new MarkNoSideEffectCallsAndNameAnalyzerRunner(compiler);", "timestamp": 1320359619, "metainfo": ""}