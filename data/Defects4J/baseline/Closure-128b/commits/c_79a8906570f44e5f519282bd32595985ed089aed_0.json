{"sha": "79a8906570f44e5f519282bd32595985ed089aed", "log": "Look through CAST nodes when annotating CALL nodes as free calls. Fixes issue 937 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44143144", "commit": "\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n       // Keep track of of the \"this\" context of a call.  A call without an\n       // explicit \"this\" is a free call.\n       Node first = n.getFirstChild();\n+\n+      // ignore cast nodes.\n+      while (first.isCast()) {\n+        first = first.getFirstChild();\n+      }\n+\n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);\n       }\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n         \"var x = 1; foo(); x = 2;\\n\";\n     test(options, code, ConstCheck.CONST_REASSIGNED_VALUE_ERROR);\n   }\n+\n+  public void testIssue937() {\n+    CompilerOptions options = createCompilerOptions();\n+    CompilationLevel level = CompilationLevel.SIMPLE_OPTIMIZATIONS;\n+    level.setOptionsForCompilationLevel(options);\n+    WarningLevel warnings = WarningLevel.DEFAULT;\n+    warnings.setOptionsForWarningLevel(options);\n+\n+    String code = \"\" +\n+        \"console.log(\" +\n+            \"/** @type {function():!string} */ ((new x())['abc'])() );\";\n+    String result = \"\" +\n+        \"console.log((new x()).abc());\";\n+    test(options, code, result);\n+  }\n+\n+\n \n   public void testIssue787() {\n     CompilerOptions options = createCompilerOptions();", "timestamp": 1363798105, "metainfo": ""}