{"sha": "257f83260ab41d1f3f6d046ff0891cdbacfa4b06", "log": "Automated g4 rollback.  *** Reason for rollback ***  I was wrong about the bundles using exec-paths; they indeed use root-relative ones. Sorry for the original confusion, my bad. I edited comments and indentation, but not the code.  *** Original change description ***  Using exec paths, instead of root relative paths, in the JSCompile bundle files.  R=zhuyi,nicksantos DELTA=17  (9 added, 0 deleted, 8 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3206   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n   }\n \n   /**\n-   * Prints a list of input names, delimited by newlines, to the manifest file.\n-   * The names are using root-relative paths.\n+   * Prints a list of input names (using root-relative paths), delimited by\n+   * newlines, to the manifest file.\n    */\n   private void printManifestTo(Iterable<CompilerInput> inputs, Appendable out)\n       throws IOException {\n     for (CompilerInput input : inputs) {\n       String rootRelativePath = rootRelativePathsMap.get(input.getName());\n       String displayName = rootRelativePath != null\n-                               ? rootRelativePath\n-                               : input.getName();\n+          ? rootRelativePath\n+          : input.getName();\n       out.append(displayName);\n       out.append(\"\\n\");\n     }\n \n   /**\n    * Prints all the input contents, starting with a comment that specifies\n-   * the input file name (using exec paths) before each file.\n+   * the input file name (using root-relative paths) before each file.\n    */\n   private void printBundleTo(Iterable<CompilerInput> inputs, Appendable out)\n       throws IOException {\n     for (CompilerInput input : inputs) {\n+      String rootRelativePath = rootRelativePathsMap.get(input.getName());\n+      String displayName = rootRelativePath != null\n+          ? rootRelativePath\n+          : input.getName();\n       File file = new File(input.getName());\n       out.append(\"//\");\n-      out.append(input.getName());\n+      out.append(displayName);\n       out.append(\"\\n\");\n       Files.copy(file, inputCharset, out);\n       out.append(\"\\n\");", "timestamp": 1315411072, "metainfo": ""}