{"sha": "4a77f08d4f57f1dab960c3464baa9bcb3326c6a4", "log": "Proper handling of structural constructors  R=johnlenz DELTA=161  (138 added, 20 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4936   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n         // Someone is trying to access the prototype of a structural function.\n         // We don't want to give real properties to this prototype, because\n         // then it would propagate to all structural functions.\n-        setPrototype(\n+        setPrototypeNoCheck(\n            registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE),\n            null);\n       } else {\n     if (isConstructor() && prototype == getInstanceType()) {\n       return false;\n     }\n-\n+    return setPrototypeNoCheck(prototype, propertyNode);\n+  }\n+\n+  /** Set the prototype without doing any sanity checks. */\n+  private boolean setPrototypeNoCheck(ObjectType prototype, Node propertyNode) {\n     ObjectType oldPrototype = prototypeSlot == null\n         ? null : (ObjectType) prototypeSlot.getType();\n     boolean replacedPrototype = oldPrototype != null;", "timestamp": 1338828235, "metainfo": ""}