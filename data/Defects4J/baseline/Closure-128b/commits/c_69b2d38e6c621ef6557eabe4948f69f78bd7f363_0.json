{"sha": "69b2d38e6c621ef6557eabe4948f69f78bd7f363", "log": "logging  R=acleung,johnlenz DELTA=85  (77 added, 0 deleted, 8 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=90003   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n   }\n \n   /**\n-   * Runs the Compiler and calls System.exit() with the exit status of the\n-   * compiler.\n+   * Runs the Compiler and calls exit() with the exit status of the\n+   * compiler. By default, exit() is just System.exit().\n    */\n   final public void run() {\n     int result = 0;\n     int runs = 1;\n+    Throwable error = null;\n     if (config.computePhaseOrdering) {\n       runs = NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;\n       PhaseOptimizer.randomizeLoops();\n         result = doRun();\n         runTimeStats.recordEndRun();\n       }\n-    } catch (AbstractCommandLineRunner.FlagUsageException e) {\n-      System.err.println(e.getMessage());\n+    } catch (Throwable t) {\n+      error = t;\n+    }\n+    exit(runTimeStats, error);\n+  }\n+\n+  /**\n+   * Exits the current process. Prints out any \"process\" statistics\n+   * that the user might need to know about.\n+   */\n+  void exit(RunTimeStats runTimeStats, Throwable error) {\n+    int result = 0;\n+    if (error instanceof AbstractCommandLineRunner.FlagUsageException) {\n+      System.err.println(error.getMessage());\n       result = -1;\n-    } catch (Throwable t) {\n-      t.printStackTrace();\n+    } else if (error != null) {\n+      error.printStackTrace();\n       result = -2;\n     }\n+\n     if (config.computePhaseOrdering) {\n       runTimeStats.outputBestPhaseOrdering();\n     }\n+\n     System.exit(result);\n   }\n \n     out.append(\"\\n\");\n   }\n \n-  private class RunTimeStats {\n+  class RunTimeStats {\n     private long bestRunTime = Long.MAX_VALUE;\n     private long worstRunTime = Long.MIN_VALUE;\n-    private long lastStartTime = 0;\n+    long lastStartTime = 0;\n     private List<List<String>> loopedPassesInBestRun = null;\n \n     /**", "timestamp": 1280951191, "metainfo": ""}