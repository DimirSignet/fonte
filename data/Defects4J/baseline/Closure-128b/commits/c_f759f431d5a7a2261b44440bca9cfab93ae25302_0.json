{"sha": "f759f431d5a7a2261b44440bca9cfab93ae25302", "log": "Handle bad goog.require/goog.provide calls more gracefully. Fixes issue 530.  R=acleung DELTA=22  (20 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3037   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n+++ b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n       Node callee = node.getFirstChild();\n       if (callee != null && callee.getType() == Token.GETPROP) {\n         String qualifiedName = callee.getQualifiedName();\n-        if ((functionName).equals(qualifiedName)) {\n-          className = callee.getNext().getString();\n+        if (functionName.equals(qualifiedName)) {\n+          Node target = callee.getNext();\n+          if (target != null && target.getType() == Token.STRING) {\n+            className = target.getString();\n+          }\n         }\n       }\n     }\n--- a/test/com/google/javascript/jscomp/ClosureCodingConventionTest.java\n+++ b/test/com/google/javascript/jscomp/ClosureCodingConventionTest.java\n     assertFunctionBind(\"Function.prototype.bind.call(obj, p1)\");\n   }\n \n+  public void testRequire() {\n+    assertRequire(\"goog.require('foo')\");\n+    assertNotRequire(\"goog.require(foo)\");\n+    assertNotRequire(\"goog.require()\");\n+    assertNotRequire(\"foo()\");\n+  }\n+\n   private void assertFunctionBind(String code) {\n     Node n = parseTestCode(code);\n     assertNotNull(conv.describeFunctionBind(n.getFirstChild()));\n   private void assertNotFunctionBind(String code) {\n     Node n = parseTestCode(code);\n     assertNull(conv.describeFunctionBind(n.getFirstChild()));\n+  }\n+\n+  private void assertRequire(String code) {\n+    Node n = parseTestCode(code);\n+    assertNotNull(conv.extractClassNameIfRequire(n.getFirstChild(), n));\n+  }\n+\n+  private void assertNotRequire(String code) {\n+    Node n = parseTestCode(code);\n+    assertNull(conv.extractClassNameIfRequire(n.getFirstChild(), n));\n   }\n \n   private void assertNotObjectLiteralCast(String code) {", "timestamp": 1313450443, "metainfo": ""}