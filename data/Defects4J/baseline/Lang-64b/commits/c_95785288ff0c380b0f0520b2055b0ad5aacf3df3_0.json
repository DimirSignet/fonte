{"sha": "95785288ff0c380b0f0520b2055b0ad5aacf3df3", "log": "Move IndexOf and Contains tests to StringUtilsEqualsIndexOfTest   ", "commit": "\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n- * @version $Id: StringUtilsTest.java,v 1.29 2003/07/19 18:10:30 scolebourne Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.30 2003/07/19 23:28:23 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n     \n                      1, StringUtils.getLevenshteinDistance(\"hello\", \"hallo\") );\n     }\n \n-    public void testContainsOnlyString() {\n-        String str1 = \"a\";\n-        String str2 = \"b\";\n-        String str3 = \"ab\";\n-        String chars1= \"b\";\n-        String chars2= \"a\";\n-        String chars3= \"ab\";\n-        String emptyChars = \"\";\n-        assertEquals(\"containsOnly(null, null) failed\", false, StringUtils.containsOnly(null, (String) null));\n-        assertEquals(\"containsOnly(empty-string, null) failed\", false, StringUtils.containsOnly(\"\", (String) null));\n-        assertEquals(\"containsOnly(null, empty-string) failed\", false, StringUtils.containsOnly(null, emptyChars));\n-        assertEquals(\"containsOnly(str1, empty-char-array) failed\", false, StringUtils.containsOnly(str1, emptyChars));\n-        assertEquals(\"containsOnly(empty-string, empty-char-array) failed\", true, StringUtils.containsOnly(\"\", emptyChars));\n-        assertEquals(\"containsOnly(empty-string, chars1) failed\", true, StringUtils.containsOnly(\"\", chars1));\n-        assertEquals(\"containsOnly(str1, chars1) failed\", false, StringUtils.containsOnly(str1, chars1));\n-        assertEquals(\"containsOnly(str1, chars2) success\", true, StringUtils.containsOnly(str1, chars2));\n-        assertEquals(\"containsOnly(str1, chars3) success\", true, StringUtils.containsOnly(str1, chars3));\n-        assertEquals(\"containsOnly(str2, chars1) success\", true, StringUtils.containsOnly(str2, chars1));\n-        assertEquals(\"containsOnly(str2, chars2) failed\", false, StringUtils.containsOnly(str2, chars2));\n-        assertEquals(\"containsOnly(str2, chars3) success\", true, StringUtils.containsOnly(str2, chars3));\n-        assertEquals(\"containsOnly(String3, chars1) failed\", false, StringUtils.containsOnly(str3, chars1));\n-        assertEquals(\"containsOnly(String3, chars2) failed\", false, StringUtils.containsOnly(str3, chars2));\n-        assertEquals(\"containsOnly(String3, chars3) success\", true, StringUtils.containsOnly(str3, chars3));\n-    }\n-\n-    public void testContainsOnlyCharArray() {\n-        String str1 = \"a\";\n-        String str2 = \"b\";\n-        String str3 = \"ab\";\n-        char[] chars1= {'b'};\n-        char[] chars2= {'a'};\n-        char[] chars3= {'a', 'b'};\n-        char[] emptyChars = new char[0];\n-        assertEquals(\"containsOnly(null, null) failed\", false, StringUtils.containsOnly(null, (char[]) null));\n-        assertEquals(\"containsOnly(empty-string, null) failed\", false, StringUtils.containsOnly(\"\", (char[]) null));\n-        assertEquals(\"containsOnly(null, empty-string) failed\", false, StringUtils.containsOnly(null, emptyChars));\n-        assertEquals(\"containsOnly(str1, empty-char-array) failed\", false, StringUtils.containsOnly(str1, emptyChars));\n-        assertEquals(\"containsOnly(empty-string, empty-char-array) failed\", true, StringUtils.containsOnly(\"\", emptyChars));\n-        assertEquals(\"containsOnly(empty-string, chars1) failed\", true, StringUtils.containsOnly(\"\", chars1));\n-        assertEquals(\"containsOnly(str1, chars1) failed\", false, StringUtils.containsOnly(str1, chars1));\n-        assertEquals(\"containsOnly(str1, chars2) success\", true, StringUtils.containsOnly(str1, chars2));\n-        assertEquals(\"containsOnly(str1, chars3) success\", true, StringUtils.containsOnly(str1, chars3));\n-        assertEquals(\"containsOnly(str2, chars1) success\", true, StringUtils.containsOnly(str2, chars1));\n-        assertEquals(\"containsOnly(str2, chars2) failed\", false, StringUtils.containsOnly(str2, chars2));\n-        assertEquals(\"containsOnly(str2, chars3) success\", true, StringUtils.containsOnly(str2, chars3));\n-        assertEquals(\"containsOnly(String3, chars1) failed\", false, StringUtils.containsOnly(str3, chars1));\n-        assertEquals(\"containsOnly(String3, chars2) failed\", false, StringUtils.containsOnly(str3, chars2));\n-        assertEquals(\"containsOnly(String3, chars3) success\", true, StringUtils.containsOnly(str3, chars3));\n-    }\n-\n-    public void testContainsNoneString() {\n-        String str1 = \"a\";\n-        String str2 = \"b\";\n-        String str3 = \"ab.\";\n-        String chars1= \"b\";\n-        String chars2= \".\";\n-        String chars3= \"cd\";\n-        String emptyChars = \"\";\n-        assertEquals(\"containsNone(null, null) failed\", true, StringUtils.containsNone(null, (String) null));\n-        assertEquals(\"containsNone(empty-string, null) failed\", true, StringUtils.containsNone(\"\", (String) null));\n-        assertEquals(\"containsNone(null, empty-string) failed\", true, StringUtils.containsNone(null, emptyChars));\n-        assertEquals(\"containsNone(str1, empty-char-array) failed\", true, StringUtils.containsNone(str1, emptyChars));\n-        assertEquals(\"containsNone(empty-string, empty-char-array) failed\", true, StringUtils.containsNone(\"\", emptyChars));\n-        assertEquals(\"containsNone(empty-string, chars1) failed\", true, StringUtils.containsNone(\"\", chars1));\n-        assertEquals(\"containsNone(str1, chars1)\", true, StringUtils.containsNone(str1, chars1));\n-        assertEquals(\"containsNone(str1, chars2)\", true, StringUtils.containsNone(str1, chars2));\n-        assertEquals(\"containsNone(str1, chars3)\", true, StringUtils.containsNone(str1, chars3));\n-        assertEquals(\"containsNone(str2, chars1)\", false, StringUtils.containsNone(str2, chars1));\n-        assertEquals(\"containsNone(str2, chars2)\", true, StringUtils.containsNone(str2, chars2));\n-        assertEquals(\"containsNone(str2, chars3)\", true, StringUtils.containsNone(str2, chars3));\n-        assertEquals(\"containsNone(str3, chars1)\", false, StringUtils.containsNone(str3, chars1));\n-        assertEquals(\"containsNone(str3, chars2)\", false, StringUtils.containsNone(str3, chars2));\n-        assertEquals(\"containsNone(str3, chars3)\", true, StringUtils.containsNone(str3, chars3));\n-    }\n-\n-    public void testContainsNoneCharArray() {\n-        String str1 = \"a\";\n-        String str2 = \"b\";\n-        String str3 = \"ab.\";\n-        char[] chars1= {'b'};\n-        char[] chars2= {'.'};\n-        char[] chars3= {'c', 'd'};\n-        char[] emptyChars = new char[0];\n-        assertEquals(\"containsNone(null, null) failed\", true, StringUtils.containsNone(null, (char[]) null));\n-        assertEquals(\"containsNone(empty-string, null) failed\", true, StringUtils.containsNone(\"\", (char[]) null));\n-        assertEquals(\"containsNone(null, empty-string) failed\", true, StringUtils.containsNone(null, emptyChars));\n-        assertEquals(\"containsNone(str1, empty-char-array) failed\", true, StringUtils.containsNone(str1, emptyChars));\n-        assertEquals(\"containsNone(empty-string, empty-char-array) failed\", true, StringUtils.containsNone(\"\", emptyChars));\n-        assertEquals(\"containsNone(empty-string, chars1) failed\", true, StringUtils.containsNone(\"\", chars1));\n-        assertEquals(\"containsNone(str1, chars1)\", true, StringUtils.containsNone(str1, chars1));\n-        assertEquals(\"containsNone(str1, chars2)\", true, StringUtils.containsNone(str1, chars2));\n-        assertEquals(\"containsNone(str1, chars3)\", true, StringUtils.containsNone(str1, chars3));\n-        assertEquals(\"containsNone(str2, chars1)\", false, StringUtils.containsNone(str2, chars1));\n-        assertEquals(\"containsNone(str2, chars2)\", true, StringUtils.containsNone(str2, chars2));\n-        assertEquals(\"containsNone(str2, chars3)\", true, StringUtils.containsNone(str2, chars3));\n-        assertEquals(\"containsNone(str3, chars1)\", false, StringUtils.containsNone(str3, chars1));\n-        assertEquals(\"containsNone(str3, chars2)\", false, StringUtils.containsNone(str3, chars2));\n-        assertEquals(\"containsNone(str3, chars3)\", true, StringUtils.containsNone(str3, chars3));\n-    }\n-\n-    public void testIndexOfAnyBut() {\n-        String str1 = \"a\";\n-        String str2 = \"b\";\n-        String str3 = \"ab\";\n-        String chars1= \"b\";\n-        String chars2= \"a\";\n-        String chars3= \"ab\";\n-        String emptyChars = \"\";\n-        assertEquals(\"indexOfAnyBut(null, null)\", -1, StringUtils.indexOfAnyBut(null, (String) null));\n-        assertEquals(\"indexOfAnyBut(empty-string, null)\", -1, StringUtils.indexOfAnyBut(\"\", (String) null));\n-        assertEquals(\"indexOfAnyBut(null, empty-string)\", -1, StringUtils.indexOfAnyBut(null, emptyChars));\n-        assertEquals(\"indexOfAnyBut(str1, empty-char-array)\", 0, StringUtils.indexOfAnyBut(str1, emptyChars));\n-        assertEquals(\"indexOfAnyBut(empty-string, empty-char-array)\", -1, StringUtils.indexOfAnyBut(\"\", emptyChars));\n-        assertEquals(\"indexOfAnyBut(empty-string, chars1)\", -1, StringUtils.indexOfAnyBut(\"\", chars1));\n-        assertEquals(\"indexOfAnyBut(str1, chars1)\", 0, StringUtils.indexOfAnyBut(str1, chars1));\n-        assertEquals(\"indexOfAnyBut(str1, chars2)\", -1, StringUtils.indexOfAnyBut(str1, chars2));\n-        assertEquals(\"indexOfAnyBut(str1, chars3)\", -1, StringUtils.indexOfAnyBut(str1, chars3));\n-        assertEquals(\"indexOfAnyBut(str2, chars1)\", -1, StringUtils.indexOfAnyBut(str2, chars1));\n-        assertEquals(\"indexOfAnyBut(str2, chars2)\", 0, StringUtils.indexOfAnyBut(str2, chars2));\n-        assertEquals(\"indexOfAnyBut(str2, chars3)\", -1, StringUtils.indexOfAnyBut(str2, chars3));\n-        assertEquals(\"indexOfAnyBut(String3, chars1)\", 0, StringUtils.indexOfAnyBut(str3, chars1));\n-        assertEquals(\"indexOfAnyBut(String3, chars2)\", 1, StringUtils.indexOfAnyBut(str3, chars2));\n-        assertEquals(\"indexOfAnyBut(String3, chars3)\", -1, StringUtils.indexOfAnyBut(str3, chars3));\n-    }\n-\n     public void testAbbreviate() {\n         assertEquals(null, StringUtils.abbreviate(null, 10));\n         assertEquals(\"abbreviate(String,int) failed\",", "timestamp": 1058657303, "metainfo": ""}