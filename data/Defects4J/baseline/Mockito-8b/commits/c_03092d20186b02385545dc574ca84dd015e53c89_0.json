{"sha": "03092d20186b02385545dc574ca84dd015e53c89", "log": "Refactoring: simplified the code", "commit": "\n--- a/src/org/mockito/internal/configuration/plugins/PluginLoader.java\n+++ b/src/org/mockito/internal/configuration/plugins/PluginLoader.java\n \n import java.io.IOException;\n import java.net.URL;\n-import java.util.ArrayList;\n import java.util.Enumeration;\n-import java.util.List;\n \n class PluginLoader {\n \n      * Scans the classpath for given pluginType. If not found, default class is used.\n      */\n     <T> T loadPlugin(Class<T> pluginType, String defaultPluginClassName) {\n-        for (T plugin : loadImplementations(pluginType)) {\n-            return plugin; // return the first one service loader finds (if any)\n+        T plugin = loadImpl(pluginType);\n+        if (plugin != null) {\n+            return plugin;\n         }\n \n         try {\n      * Equivalent to {@link java.util.ServiceLoader#load} but without requiring\n      * Java 6 / Android 2.3 (Gingerbread).\n      */\n-    <T> List<T> loadImplementations(Class<T> service) {\n+    <T> T loadImpl(Class<T> service) {\n         ClassLoader loader = Thread.currentThread().getContextClassLoader();\n         if (loader == null) {\n             loader = ClassLoader.getSystemClassLoader();\n             throw new MockitoException(\"Failed to load \" + service, e);\n         }\n \n-        //TODO SF refactor\n-        List<T> result = new ArrayList<T>();\n         try {\n             String foundPluginClass = new PluginFinder(pluginSwitch).findPluginClass(Iterables.toIterable(resources));\n             if (foundPluginClass != null) {\n                 Class<?> pluginClass = loader.loadClass(foundPluginClass);\n                 Object plugin = pluginClass.newInstance();\n-                result.add(service.cast(plugin));\n+                return service.cast(plugin);\n             }\n-            return result;\n+            return null;\n         } catch (Exception e) {\n             throw new MockitoConfigurationException(\n                     \"Failed to load \" + service + \" implementation declared in \" + resources, e);", "timestamp": 1418426972, "metainfo": ""}