{"sha": "05367c09674f1cc8a82848e46e69c10512f0d72e", "log": "Moving the new style of reporting clickable stack trace elements  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401269", "commit": "\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n     }\n \n     public void tooManyActualInvocations(int wantedCount, int actualCount, PrintableInvocation wanted, HasStackTrace firstUndesired) {\n-        UndesiredInvocation cause = createUndesiredInvocationCause(firstUndesired);\n-\n         throw new TooManyActualInvocations(join(\n                 wanted.toString(),\n-                \"Wanted \" + pluralize(wantedCount) + \" but was \" + actualCount\n-        ), cause);\n+                \"Wanted \" + pluralize(wantedCount) + \":\",\n+                \"-> at \" + new Location(),\n+                \"but was \" + pluralize(actualCount) + \". Undesired invocation:\",\n+                \"-> at \" + firstUndesired.getStackTrace()[0],\n+                \"\"\n+        ));\n     }\n     \n     public void neverWantedButInvoked(PrintableInvocation wanted, HasStackTrace firstUndesired) {\n                 wanted.toString(),\n                 \"Wanted \" + pluralize(wantedCount) + \":\",\n                 \"-> at \" + new Location(),\n-                \"But was \" + actualCount + \":\", \n+                \"But was \" + pluralize(actualCount) + \":\", \n                 ending\n         ));\n     }\n--- a/src/org/mockito/exceptions/verification/TooManyActualInvocations.java\n+++ b/src/org/mockito/exceptions/verification/TooManyActualInvocations.java\n     public TooManyActualInvocations(String message, Throwable cause) {\n         super(message, cause);\n     }\n+    \n+    public TooManyActualInvocations(String message) {\n+        super(message);\n+    }\n }\n--- a/test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java\n+++ b/test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java\n import org.mockitousage.puzzlers.BridgeMethodPuzzleTest;\n import org.mockitousage.puzzlers.OverloadingPuzzleTest;\n import org.mockitousage.reset.ResetTest;\n-import org.mockitousage.stacktrace.PointingStackTraceToActualInvocationChunkTest;\n+import org.mockitousage.stacktrace.ClickableStackTracesTest;\n import org.mockitousage.stacktrace.PointingStackTraceToActualInvocationTest;\n import org.mockitousage.stacktrace.StackTraceFilteringTest;\n-import org.mockitousage.stacktrace.ClickableStackTracesTest;\n import org.mockitousage.stubbing.BasicStubbingTest;\n import org.mockitousage.stubbing.ReturningDefaultValuesTest;\n import org.mockitousage.stubbing.StubbingWithThrowablesTest;\n                     ClickableStackTracesTest.class,\n                     ExampleTest.class,\n                     PointingStackTraceToActualInvocationTest.class,\n-                    PointingStackTraceToActualInvocationChunkTest.class,\n                     VerificationInOrderFromMultipleThreadsTest.class,\n                     ResetTest.class\n                 );\n--- a/test/org/mockitousage/stacktrace/ModellingDescriptiveMessagesTest.java\n+++ b/test/org/mockitousage/stacktrace/ModellingDescriptiveMessagesTest.java\n         mock.simpleMethod();\n         verify(mock, times(2)).simpleMethod();\n     }\n+    \n+    @Test\n+    public void shouldTooManyInvocations() {\n+        mock.simpleMethod();\n+        mock.simpleMethod();\n+        verify(mock, times(1)).simpleMethod();\n+    }\n }\n--- a/test/org/mockitousage/verification/DescriptiveMessagesWhenTimesXVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesWhenTimesXVerificationFailsTest.java\n \n import java.util.LinkedList;\n \n-import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mock;\n import org.mockito.Mockito;\n         }\n     }\n \n-    //TODO next thing to do\n-    @Ignore\n     @Test\n     public void shouldVerifyActualNumberOfInvocationsLargerThanWanted() throws Exception {\n         mock.clear();\n--- a/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n+++ b/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n             verify(mock, times(1)).clear();\n             fail();\n         } catch (TooManyActualInvocations e) {\n-            assertThat(e, messageContains(\"Wanted 1 time but was 2\"));\n+            assertThat(e, messageContains(\"Wanted 1 time\"));\n+            assertThat(e, messageContains(\"was 2 times\"));\n         }\n     }\n ", "timestamp": 1235305019, "metainfo": ""}