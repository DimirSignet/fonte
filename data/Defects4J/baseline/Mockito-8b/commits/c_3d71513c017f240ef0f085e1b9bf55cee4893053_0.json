{"sha": "3d71513c017f240ef0f085e1b9bf55cee4893053", "log": "added test so I don't forget to implement something ant doesn't work and I'm not gonna spend my life on fixing it  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4070", "commit": "\n--- a/src/org/mockito/internal/MockitoBehavior.java\n+++ b/src/org/mockito/internal/MockitoBehavior.java\n         markInvocationsAsVerified(expected, verifyingMode);\n     }\n     \n-    private void markInvocationsAsVerified(InvocationWithMatchers expected, VerifyingMode verifyingMode) {\n+    void markInvocationsAsVerified(InvocationWithMatchers expected, VerifyingMode verifyingMode) {\n         int verifiedSoFar = 0;        \n         for (InvocationWithMatchers registeredInvocation : registeredInvocations) {\n             Invocation invocation = registeredInvocation.getInvocation();\n--- /dev/null\n+++ b/test/org/mockito/internal/MockitoBehaviorTest.java\n+package org.mockito.internal;\n+\n+import java.lang.reflect.Method;\n+import java.util.*;\n+\n+import org.junit.*;\n+import static org.junit.Assert.*;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class MockitoBehaviorTest {\n+\n+    private Method toLowerCase;\n+    private Method toUpperCase;\n+    private MockitoBehavior behavior;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        toLowerCase = String.class.getMethod(\"toLowerCase\", new Class[] {});\n+        toUpperCase = String.class.getMethod(\"toUpperCase\", new Class[] {});\n+        behavior = new MockitoBehavior();\n+    }\n+    \n+    @Ignore\n+    @Test\n+    public void shouldMarkVerifiedOnlyOneExecutionChunk() throws Exception {\n+        InvocationWithMatchers toLowerCaseInvocation = new InvocationWithMatchers(new Invocation(\"mock\", toLowerCase , new Object[] {}), Collections.EMPTY_LIST);\n+        InvocationWithMatchers toUpperCaseInvocation = new InvocationWithMatchers(new Invocation(\"mock\", toUpperCase , new Object[] {}), Collections.EMPTY_LIST);\n+        \n+        behavior.addInvocation(toLowerCaseInvocation);\n+        behavior.addInvocation(toLowerCaseInvocation);\n+        \n+        behavior.addInvocation(toUpperCaseInvocation);\n+        behavior.addInvocation(toLowerCaseInvocation);\n+        \n+        behavior.markInvocationsAsVerified(toLowerCaseInvocation, VerifyingMode.inOrder(2, Arrays.asList(new Object())));\n+        \n+        List<InvocationWithMatchers> invocations = behavior.getRegisteredInvocations();\n+        assertEquals(true, invocations.get(0).getInvocation().isVerified());\n+        assertEquals(true, invocations.get(1).getInvocation().isVerified());\n+        assertEquals(false, invocations.get(2).getInvocation().isVerified());\n+        assertEquals(false, invocations.get(3).getInvocation().isVerified());\n+    }\n+}", "timestamp": 1196088326, "metainfo": ""}