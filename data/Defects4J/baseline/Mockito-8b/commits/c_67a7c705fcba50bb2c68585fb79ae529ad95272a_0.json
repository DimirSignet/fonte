{"sha": "67a7c705fcba50bb2c68585fb79ae529ad95272a", "log": "Created JUnit runners for version 4.x and 4.5.  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40822", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/runners/MockitoJUnit45Runner.java\n+package org.mockito.runners;\n+\n+import org.junit.runners.BlockJUnit4ClassRunner;\n+import org.junit.runners.model.FrameworkMethod;\n+import org.junit.runners.model.InitializationError;\n+import org.junit.runners.model.Statement;\n+import org.mockito.MockitoAnnotations;\n+\n+/**\n+ * Mockito integration with JUnit 4.5. Supports new default JUnit's runner\n+ * {@link BlockJUnit4ClassRunner}.\n+ * <p>\n+ * See {@link MockitoJUnit4Runner} for details.\n+ * <p>\n+ * Example of use in test class:\n+ * \n+ * <pre>\n+ * &#064;RunWith(MockitoJUnit45Runner.class)\n+ * public class ExampleTest {\n+ * \n+ *     &#064;Mock\n+ *     private List list;\n+ * \n+ *     &#064;Test\n+ *     public void shouldInitMocksUsingRunner() {\n+ *         list.add(&quot;test&quot;);\n+ *     }\n+ * }\n+ * </pre>\n+ */\n+public class MockitoJUnit45Runner extends BlockJUnit4ClassRunner {\n+\n+    public MockitoJUnit45Runner(Class<?> klass) throws InitializationError {\n+        super(klass);\n+    }\n+\n+    @Override\n+    protected Statement withBefores(FrameworkMethod method, Object target, Statement statement) {\n+        MockitoAnnotations.initMocks(target);\n+        return super.withBefores(method, target, statement);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/runners/MockitoJUnit4Runner.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.runners;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+import org.junit.internal.runners.InitializationError;\n+import org.junit.internal.runners.JUnit4ClassRunner;\n+import org.junit.internal.runners.TestMethod;\n+import org.junit.runner.RunWith;\n+import org.junit.runner.notification.RunNotifier;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+\n+/**\n+ * Mockito integration with JUnit 4.x.\n+ * <p>\n+ * If JUnit version 4.x (4.0-4.4) is in use {@link RunWith} annotation can be\n+ * used to enable custom Mockito runner. This runner automatically initializes\n+ * mocks annotated with {@link Mock}, so that explicit usage of\n+ * {@link MockitoAnnotations#initMocks(Object)} is not necessary. Mocks are\n+ * initialized before each invocation of particular test method.\n+ * <p>\n+ * Example of use in test class:\n+ * \n+ * <pre>\n+ * &#064;RunWith(MockitoJUnit4Runner.class)\n+ * public class ExampleTest {\n+ * \n+ *     &#064;Mock\n+ *     private List list;\n+ * \n+ *     &#064;Test\n+ *     public void shouldInitMocksUsingRunner() {\n+ *         list.add(&quot;test&quot;);\n+ *     }\n+ * }\n+ * </pre>\n+ */\n+public class MockitoJUnit4Runner extends JUnit4ClassRunner {\n+\n+    public MockitoJUnit4Runner(Class<?> klass) throws InitializationError {\n+        super(klass);\n+    }\n+\n+    @Override\n+    protected Object createTest() throws Exception {\n+        Object test = super.createTest();\n+        MockitoAnnotations.initMocks(test);\n+        return test;\n+    }\n+\n+}\n--- a/test/org/mockitousage/PrototypingTest.java\n+++ b/test/org/mockitousage/PrototypingTest.java\n import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.mockitousage.examples.junitrunner.MockitoRunner;\n+import org.mockito.runners.MockitoJUnit4Runner;\n import org.mockitoutil.TestBase;\n \n-@RunWith(MockitoRunner.class)\n+@RunWith(MockitoJUnit4Runner.class)\n public class PrototypingTest extends TestBase {\n     \n     @Ignore\n--- a/test/org/mockitousage/examples/junitrunner/ExampleTest.java\n+++ b/test/org/mockitousage/examples/junitrunner/ExampleTest.java\n import java.util.Map;\n \n import org.junit.Test;\n-import org.junit.runner.RunWith;\n import org.mockito.Mock;\n \n-@RunWith(MockitoRunner.class)\n @SuppressWarnings(\"unchecked\")\n-public class ExampleTest {\n+public abstract class ExampleTest {\n     \n     @Mock private List list;\n     @Mock private Map map;\n--- /dev/null\n+++ b/test/org/mockitousage/examples/junitrunner/JUnit45ExampleTest.java\n+package org.mockitousage.examples.junitrunner;\n+\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnit45Runner;\n+\n+@RunWith(MockitoJUnit45Runner.class)\n+public class JUnit45ExampleTest extends ExampleTest {\n+}\n--- /dev/null\n+++ b/test/org/mockitousage/examples/junitrunner/JUnit4ExampleTest.java\n+package org.mockitousage.examples.junitrunner;\n+\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnit4Runner;\n+\n+@RunWith(MockitoJUnit4Runner.class)\n+public class JUnit4ExampleTest extends ExampleTest {\n+}\n--- a/test/org/mockitousage/examples/use/ExampleTest.java\n+++ b/test/org/mockitousage/examples/use/ExampleTest.java\n import org.junit.runner.RunWith;\n import org.mockito.InOrder;\n import org.mockito.Mock;\n-import org.mockitousage.examples.junitrunner.MockitoRunner;\n+import org.mockito.runners.MockitoJUnit4Runner;\n import org.mockitoutil.TestBase;\n \n-@RunWith(MockitoRunner.class)\n+@RunWith(MockitoJUnit4Runner.class)\n public class ExampleTest extends TestBase {\n     \n     @Mock private ArticleCalculator mockCalculator;", "timestamp": 1219842157, "metainfo": ""}