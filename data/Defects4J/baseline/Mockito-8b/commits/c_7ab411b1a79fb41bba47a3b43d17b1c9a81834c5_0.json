{"sha": "7ab411b1a79fb41bba47a3b43d17b1c9a81834c5", "log": "name refactoring to get it more readable  --HG-- rename : src/org/mockito/internal/matchers/HasVerboseVariant.java => src/org/mockito/internal/matchers/CanPrintArgumentVerbosely.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401467", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n import org.mockito.internal.matchers.ArrayEquals;\n import org.mockito.internal.matchers.Equals;\n import org.mockito.internal.matchers.MatchersPrinter;\n-import org.mockito.internal.matchers.HasVerboseVariant;\n+import org.mockito.internal.matchers.CanPrintArgumentVerbosely;\n import org.mockito.internal.util.MockUtil;\n import org.mockito.internal.util.Primitives;\n import org.mockito.invocation.InvocationOnMock;\n--- /dev/null\n+++ b/src/org/mockito/internal/matchers/CanPrintArgumentVerbosely.java\n+package org.mockito.internal.matchers;\n+\n+import org.hamcrest.SelfDescribing;\n+\n+public interface CanPrintArgumentVerbosely {\n+    SelfDescribing getVerboseSelfDescribing();\n+}\n--- a/src/org/mockito/internal/matchers/Equals.java\n+++ b/src/org/mockito/internal/matchers/Equals.java\n import org.hamcrest.SelfDescribing;\n import org.mockito.ArgumentMatcher;\n \n-public class Equals extends ArgumentMatcher<Object> implements HasVerboseVariant {\n+public class Equals extends ArgumentMatcher<Object> implements CanPrintArgumentVerbosely {\n \n     private final Object wanted;\n \n         throw new UnsupportedOperationException(\"hashCode() is not supported\");\n     }\n \n-    public SelfDescribing getVerboseVariant() {\n+    public SelfDescribing getVerboseSelfDescribing() {\n         return new SelfDescribing() {\n             public void describeTo(Description description) {\n                 description.appendText(describe(\"(\"+ wanted.getClass().getSimpleName() +\") \" + wanted));\n--- a/src/org/mockito/internal/matchers/LocalizedMatcher.java\n+++ b/src/org/mockito/internal/matchers/LocalizedMatcher.java\n import org.mockito.internal.debugging.Location;\n \n @SuppressWarnings(\"unchecked\")\n-public class LocalizedMatcher implements Matcher, HasVerboseVariant {\n+public class LocalizedMatcher implements Matcher, CanPrintArgumentVerbosely {\n \n     private final Matcher actualMatcher;\n     private Location location;\n         return \"Localized: \" + this.actualMatcher;\n     }\n \n-    public SelfDescribing getVerboseVariant() {\n-        if (actualMatcher instanceof HasVerboseVariant) {\n-            return ((HasVerboseVariant) actualMatcher).getVerboseVariant();\n+    public SelfDescribing getVerboseSelfDescribing() {\n+        if (actualMatcher instanceof CanPrintArgumentVerbosely) {\n+            return ((CanPrintArgumentVerbosely) actualMatcher).getVerboseSelfDescribing();\n         } else {\n             return this;\n         }\n--- a/src/org/mockito/internal/matchers/MatchersPrinter.java\n+++ b/src/org/mockito/internal/matchers/MatchersPrinter.java\n     private List<SelfDescribing> applyPrintSettings(List<Matcher> matchers, PrintSettings printSettings) {\n         List<SelfDescribing> withPrintSettings = new LinkedList<SelfDescribing>();\n         for (final Matcher matcher : matchers) {\n-            if (matcher instanceof HasVerboseVariant && printSettings.printsVerbosely(matcher)) {\n-                withPrintSettings.add(((HasVerboseVariant) matcher).getVerboseVariant());\n+            if (matcher instanceof CanPrintArgumentVerbosely && printSettings.printsVerbosely(matcher)) {\n+                withPrintSettings.add(((CanPrintArgumentVerbosely) matcher).getVerboseSelfDescribing());\n             } else {\n                 withPrintSettings.add(matcher);\n             }\n--- a/test/org/mockito/internal/matchers/EqualsTest.java\n+++ b/test/org/mockito/internal/matchers/EqualsTest.java\n     \n     @Test\n     public void shouldGiveVerboselyDescribedVersionOfInt() throws Exception {\n-        String descStr = describe(new Equals(100).getVerboseVariant());\n+        String descStr = describe(new Equals(100).getVerboseSelfDescribing());\n         \n         assertEquals(\"(Integer) 100\", descStr);\n     }\n \n     @Test\n     public void shouldGiveVerboselyDescribedVersionOfLong() throws Exception {\n-        String descStr = describe(new Equals(100L).getVerboseVariant());\n+        String descStr = describe(new Equals(100L).getVerboseSelfDescribing());\n         \n         assertEquals(\"(Long) 100\", descStr);\n     }", "timestamp": 1244233538, "metainfo": ""}