{"sha": "2aa167a27e1a8a2a7940ebbf3f729e0cadcded15", "log": "Made sure extra type info is printed on erros only when actual types don't match (previously it always printed types when toString() and describeTo() was the same and matcher didn't match)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401481", "commit": "\n--- a/src/org/mockito/internal/matchers/CanDescribeVerbosely.java\n+++ b/src/org/mockito/internal/matchers/CanDescribeVerbosely.java\n \n public interface CanDescribeVerbosely {\n     SelfDescribing getSelfDescribingVerbosely();\n+\n+    boolean typeMatches(Object object);\n }\n--- a/src/org/mockito/internal/matchers/Equals.java\n+++ b/src/org/mockito/internal/matchers/Equals.java\n                 description.appendText(describe(\"(\"+ wanted.getClass().getSimpleName() +\") \" + wanted));\n             }};\n     }\n+\n+    public boolean typeMatches(Object object) {\n+        return object.getClass() == wanted.getClass();\n+    }\n }\n--- a/src/org/mockito/internal/matchers/LocalizedMatcher.java\n+++ b/src/org/mockito/internal/matchers/LocalizedMatcher.java\n             return this;\n         }\n     }\n-}\n+\n+    public boolean typeMatches(Object object) {\n+        if (actualMatcher instanceof CanDescribeVerbosely) {\n+            return ((CanDescribeVerbosely) actualMatcher).typeMatches(object);\n+        } else {\n+            return false;\n+        }\n+    }\n+}\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n \n import org.hamcrest.Matcher;\n import org.hamcrest.StringDescription;\n+import org.mockito.internal.matchers.CanDescribeVerbosely;\n \n @SuppressWarnings(\"unchecked\")\n public class ArgumentMatchingTool {\n         List<Integer> suspicious = new LinkedList<Integer>();\n         int i = 0;\n         for (Matcher m : matchers) {\n-            if (!safelyMatches(m, arguments[i]) && toStringEquals(m, arguments[i])) {\n+            if (m instanceof CanDescribeVerbosely \n+                    && !safelyMatches(m, arguments[i]) \n+                    && toStringEquals(m, arguments[i])\n+                    && !((CanDescribeVerbosely) m).typeMatches(arguments[i])) {\n                 suspicious.add(i);\n             }\n             i++;\n--- a/test/org/mockito/internal/matchers/EqualsTest.java\n+++ b/test/org/mockito/internal/matchers/EqualsTest.java\n         \n         assertEquals(\"null\", descStr);\n     }\n-\n+    \n+    @Test\n+    public void shouldMatchTypes() throws Exception {\n+        //when\n+        CanDescribeVerbosely equals = new Equals(10);\n+        \n+        //then\n+        //TODO: null checks\n+        assertTrue(equals.typeMatches(10));\n+        assertFalse(equals.typeMatches(10L));\n+    }\n+    \n     private String describe(SelfDescribing m) {\n         StringDescription desc = new StringDescription();\n         m.describeTo(desc);\n--- a/test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java\n+++ b/test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java\n import org.hamcrest.BaseMatcher;\n import org.hamcrest.Description;\n import org.hamcrest.Matcher;\n-import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.internal.matchers.Equals;\n import org.mockitoutil.TestBase;\n         assertEquals(new Integer(1), suspicious[0]);\n     }\n     \n-    @Ignore\n     @Test\n     public void shouldNotFindSuspiciousMatchersWhenTypesAreTheSame() {\n         //given\n         Equals matcherWithBadDescription = new Equals(20) {\n             public void describeTo(Description desc) {\n+                //let's pretend we have the same description as the toString() of the argument\n                 desc.appendText(\"10\");\n             }\n         };\n+        Integer argument = 10;\n         \n-        Integer[] suspicious = tool.getSuspiciouslyNotMatchingArgsIndexes((List) Arrays.asList(matcherWithBadDescription), new Object[] {10});\n+        //when\n+        Integer[] suspicious = tool.getSuspiciouslyNotMatchingArgsIndexes((List) Arrays.asList(matcherWithBadDescription), new Object[] {argument});\n         \n         //then\n         assertEquals(0, suspicious.length);\n--- a/test/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java\n+++ b/test/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java\n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n-import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockitousage.IMethods;\n         }\n     }\n     \n-    @Ignore\n     @Test\n     public void shouldNotShowTypesWhenTypesAreTheSameEvenIfToStringGivesTheSameResult() throws Exception {\n         //given", "timestamp": 1244407665, "metainfo": ""}