{"sha": "82a1c42f1e83016618996bd4ea4448d7a7a54168", "log": "Moved some implementation to a better spot.", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n public class Invocation implements PublicInvocation, PrintableInvocation, InvocationOnMock, VerificationAwareInvocation {\n \n     private static final long serialVersionUID = 8240069639250980199L;\n-    public static final int MAX_LINE_LENGTH = 45;\n     private final int sequenceNumber;\n     private final Object mock;\n     private final MockitoMethod method;\n--- a/src/org/mockito/internal/reporting/PrintSettings.java\n+++ b/src/org/mockito/internal/reporting/PrintSettings.java\n \n public class PrintSettings {\n \n+    public static final int MAX_LINE_LENGTH = 45;\n     private boolean multiline;\n     private List<Integer> withTypeInfo = new LinkedList<Integer>();\n \n         MatchersPrinter matchersPrinter = new MatchersPrinter();\n         String qualifiedName = new MockUtil().getMockName(invocation.getMock()) + \".\" + invocation.getMethod().getName();\n         String invocationString = qualifiedName + matchersPrinter.getArgumentsLine(matchers, this);\n-        if (isMultiline() || (!matchers.isEmpty() && invocationString.length() > Invocation.MAX_LINE_LENGTH)) {\n+        if (isMultiline() || (!matchers.isEmpty() && invocationString.length() > MAX_LINE_LENGTH)) {\n             return qualifiedName + matchersPrinter.getArgumentsBlock(matchers, this);\n         } else {\n             return invocationString;", "timestamp": 1333231562, "metainfo": ""}