{"sha": "7741c11ffbff4e0d80b8bbd2b8aa9c97152c20c1", "log": "Added TODO and a test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401459", "commit": "\n--- a/src/org/mockito/internal/exceptions/base/StackTraceFilter.java\n+++ b/src/org/mockito/internal/exceptions/base/StackTraceFilter.java\n      * Basically removes all bad from the middle. If any good are in the middle of bad those are also removed. \n      */\n     public StackTraceElement[] filter(StackTraceElement[] target, int startWith) {\n+        //TODO: after 1.8 profile\n         List<StackTraceElement> unfilteredStackTrace = Arrays.asList(target);\n         \n         int lastBad = -1;\n--- a/test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java\n+++ b/test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java\n                 \"org.good.Trace\"\n                 ));\n     }\n+    \n+    @Test\n+    public void shouldReturnEmptyArrayWhenInputIsEmpty() throws Exception {\n+        //when\n+        StackTraceElement[] filtered = filter.filter(new StackTraceElement[0], 0);\n+        //then\n+        assertEquals(0, filtered.length);\n+    }\n }", "timestamp": 1243892835, "metainfo": ""}