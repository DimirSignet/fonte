{"sha": "90945c09146c98854d7b77b18916cfc90ad98379", "log": "In order to propagate bdd and given-when-then added info about BDDMockito to the main documentation. In order to warn the user added info that verbose runner is a subject to change  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401572", "commit": "\n--- a/src/org/mockito/BDDMockito.java\n+++ b/src/org/mockito/BDDMockito.java\n import org.mockito.stubbing.Stubber;\n \n /**\n- * Behavior Driven Development style of stubbing that integrates nicely with //given //when //then comments.\n- * Start learning about BDD here: <link href=\"http://en.wikipedia.org/wiki/Behavior_Driven_Development\">http://en.wikipedia.org/wiki/Behavior_Driven_Development</link>\n- * <p>\n- * The entire test can look like:  \n+ * Behavior Driven Development style of writing tests uses <b>//given //when //then</b> comments as fundamental parts of your test methods.\n+ * This is exactly how we write our tests and we warmly encourage you to do so!\n+ * <p>\n+ * Start learning about BDD here: <a href=\"http://en.wikipedia.org/wiki/Behavior_Driven_Development\">http://en.wikipedia.org/wiki/Behavior_Driven_Development</a>\n+ * <p>\n+ * The problem is that current stubbing api with canonical role of <b>when</b> word does not integrate nicely with <b>//given //when //then</b> comments.\n+ * It's because stubbing belongs to <b>given</b> component of the test and not to the <b>when</b> component of the test. \n+ * Hence {@link BDDMockito} class introduces an alias so that you stub method calls with {@link BDDMockito#given(Object)} method. \n+ * Now it really nicely integrates with the <b>given</b> component of a BDD style test!    \n+ * <p>\n+ * Here is how the test might look like: \n  * <pre>\n+ * import static org.mockito.BDDMockito.*;\n+ * \n+ * Seller seller = mock(Seller.class);\n+ * Shop shop = new Shop(seller);\n+ * \n  * public void shouldBuyBread() throws Exception {\n- *   //given\n+ *   //given  \n  *   given(seller.askForBread()).willReturn(new Bread());\n  *   \n  *   //when\n- *   Goods goods = shopping.shopForBread();\n+ *   Goods goods = shop.buyBread();\n  *   \n  *   //then\n  *   assertThat(goods, containBread());\n  *   assertEquals(failure, result);\n  * </pre>\n  * <p>\n- * BDDMockito also shows how you can adjust the mocking syntax if you feel like \n+ * One of the purposes of BDDMockito is also to show how to tailor the mocking syntax to a different programming style. \n  */\n @SuppressWarnings(\"unchecked\")\n public class BDDMockito extends Mockito {\n-//TODO: document in main Mockito class    \n     \n     /**\n      * See original {@link OngoingStubbing}\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  *      <a href=\"#16\">16. (**New**) Real partial mocks</a><br/>\n  *      <a href=\"#17\">17. (**New**) Resetting mocks</a><br/>\n  *      <a href=\"#18\">18. (**New**) Troubleshooting & validating framework usage</a><br/>\n+ *      <a href=\"#19\">19. (**New**) Aliases for behavior driven development</a><br/>\n  * </b>\n  * \n  * <p>\n  * <p>\n  * Next, you should know that Mockito validates if you use it correctly <b>all the time</b>. \n  * However, there's a gotcha so please read the javadoc for {@link Mockito#validateMockitoUsage()}\n+ * \n+ * <h3 id=\"19\">19. (**New**) Aliases for behavior driven development</h3>\n+ * \n+ * Behavior Driven Development style of writing tests uses <b>//given //when //then</b> comments as fundamental parts of your test methods.\n+ * This is exactly how we write our tests and we warmly encourage you to do so!\n+ * <p>\n+ * Start learning about BDD here: <a href=\"http://en.wikipedia.org/wiki/Behavior_Driven_Development\">http://en.wikipedia.org/wiki/Behavior_Driven_Development</a>\n+ * <p>\n+ * The problem is that current stubbing api with canonical role of <b>when</b> word does not integrate nicely with <b>//given //when //then</b> comments.\n+ * It's because stubbing belongs to <b>given</b> component of the test and not to the <b>when</b> component of the test. \n+ * Hence {@link BDDMockito} class introduces an alias so that you stub method calls with {@link BDDMockito#given(Object)} method. \n+ * Now it really nicely integrates with the <b>given</b> component of a BDD style test!  \n+ * <p>\n+ * Here is how the test might look like: \n+ * <pre>\n+ * import static org.mockito.BDDMockito.*;\n+ * \n+ * Seller seller = mock(Seller.class);\n+ * Shop shop = new Shop(seller);\n+ * \n+ * public void shouldBuyBread() throws Exception {\n+ *   //given  \n+ *   given(seller.askForBread()).willReturn(new Bread());\n+ *   \n+ *   //when\n+ *   Goods goods = shop.buyBread();\n+ *   \n+ *   //then\n+ *   assertThat(goods, containBread());\n+ * }  \n+ * </pre>\n+ * \n+ * \n  */\n @SuppressWarnings(\"unchecked\")\n public class Mockito extends Matchers {\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n  * You've been warned. \n  * <p>\n  * Do you think it is useful or not? Drop us an email at mockito@googlegroups.com\n+ * <p>\n+ * Experimental implementation - will change in future!\n  */\n public class VerboseMockitoJUnitRunner extends Runner {\n ", "timestamp": 1248118605, "metainfo": ""}