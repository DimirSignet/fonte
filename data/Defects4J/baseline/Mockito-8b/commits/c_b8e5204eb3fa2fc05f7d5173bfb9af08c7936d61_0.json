{"sha": "b8e5204eb3fa2fc05f7d5173bfb9af08c7936d61", "log": "Removed the ClassNameFinder, is it used an unreliable way to get the mocked type, now the code will read this information from the creation settings", "commit": "\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n \n package org.mockito.internal.stubbing.defaultanswers;\n \n-import org.mockito.internal.creation.ClassNameFinder;\n import org.mockito.internal.util.MockUtil;\n import org.mockito.internal.util.ObjectMethodsGuru;\n import org.mockito.internal.util.Primitives;\n import org.mockito.stubbing.Answer;\n \n import java.io.Serializable;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedMap;\n+import java.util.SortedSet;\n+import java.util.TreeMap;\n+import java.util.TreeSet;\n \n /**\n  * Default answer of every Mockito mock.\n     \n     private static final long serialVersionUID = 1998191268711234347L;\n     ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();\n+    MockUtil mockUtil = new MockUtil();\n \n     /* (non-Javadoc)\n      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n     public Object answer(InvocationOnMock invocation) {\n         if (methodsGuru.isToString(invocation.getMethod())) {\n             Object mock = invocation.getMock();\n-            MockName name = new MockUtil().getMockName(mock);\n+            MockName name = mockUtil.getMockName(mock);\n             if (name.isDefault()) {\n-                return \"Mock for \" + ClassNameFinder.classNameForMock(mock) + \", hashCode: \" + mock.hashCode();\n+                return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();\n             } else {\n                 return name.toString();\n             }", "timestamp": 1355623280, "metainfo": ""}