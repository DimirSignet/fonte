{"sha": "feb23b07d32749c814e2cf2057c1908ec12b5ec7", "log": "tuned javadoc  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40389", "commit": "\n--- a/src/org/mockito/AdditionalMatchers.java\n+++ b/src/org/mockito/AdditionalMatchers.java\n     /**\n      * argument greater than or equal the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * byte argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * double argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * int argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * long argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * short argument greater than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * comparable argument less than or equal the given value details.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * byte argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * double argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * int argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * long argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * short argument less than or equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers} \n+     * See examples in javadoc for {@link AdditionalMatchers} class \n      * \n      * @param value\n      *            the given value.\n     /**\n      * comparable argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * byte argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * double argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * int argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * long argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * short argument greater than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * comparable argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * byte argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * double argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * int argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * long argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * short argument less than the given value.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n      * comparable argument equals to the given value according to their\n      * compareTo method.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n      * Object array argument that is equal to the given array, i.e. it has to\n      * have the same type, length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param <T>\n      *            the type of the array, it is passed through to prevent casts.\n      * short array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * long array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * int array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * float array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * double array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * char array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * byte array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n      * boolean array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given array.\n     /**\n      * boolean argument that matches both given matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * byte argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * char argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * double argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * float argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * int argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * long argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * short argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * Object argument that matches both given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n     /**\n      * boolean argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * Object argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n     /**\n      * short argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * long argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * int argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * float argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * double argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * char argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * byte argument that matches any of the given argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n     /**\n      * Object argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n     /**\n      * short argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * int argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * long argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * float argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * double argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * char argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * boolean argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * byte argument that does not match the given argument matcher.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n      * double argument that has an absolute difference to the given value that\n      * is less than the given delta details.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n      * float argument that has an absolute difference to the given value that is\n      * less than the given delta details.\n      * <p>\n-     * See examples in javadoc for {@link AdditionalMatchers}\n+     * See examples in javadoc for {@link AdditionalMatchers} class\n      * \n      * @param value\n      *            the given value.\n--- a/src/org/mockito/InOrder.java\n+++ b/src/org/mockito/InOrder.java\n  * inOrder.verify(secondMock).add(\"should be called second\");\n  * </pre>\n  * \n- * See examples in javadoc for {@link Mockito}\n+ * See examples in javadoc for {@link Mockito} class\n  */\n public interface InOrder {\n     /**\n      * inOrder.verify(secondMock).someMethod(\"should be called second\");\n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to be verified\n      * \n      * inOrder.verify(secondMock, atLeastOnce()).someMethod(\"should be called second\");\n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to be verified\n      * @param mode times(x) or atLeastOnce()\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n     /**\n      * any boolean argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>false</code>.\n      */\n     /**\n      * any byte argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any char argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any int argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any long argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any float argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any double argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any short argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>0</code>.\n      */\n     /**\n      * any Object argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>null</code>.\n      */\n     /**\n      * any String argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>null</code>.\n      */\n     /**\n      * Object argument that implements the given class. \n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param <T>\n      *            the accepted type.\n     /**\n      * boolean argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * byte argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * char argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * double argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * int argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * long argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * short argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * Object argument that is equal to the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n      * <p>\n      * Works similarly to EqualsBuilder.reflectionEquals(this, other) from apache commons library.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param value\n      *            the given value.\n     /**\n      * Object argument that is the same as the given value.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n     /**\n      * null argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>null</code>.\n      */\n     /**\n      * not null argument.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @return <code>null</code>.\n      */\n     /**\n      * String argument that contains the given substring.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param substring\n      *            the substring.\n     /**\n      * String argument that matches the given regular expression.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param regex\n      *            the regular expression.\n     /**\n      * String argument that ends with the given suffix.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param suffix\n      *            the suffix.\n     /**\n      * String argument that starts with the given prefix.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param prefix\n      *            the prefix.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>null</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>false</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n     /**\n      * Allows creating custom argument matchers.\n      * <p>\n-     * See examples in javadoc for {@link Matchers}\n+     * See examples in javadoc for {@link Matchers} class\n      * \n      * @param matcher decides whether argument matches\n      * @return <code>0</code>.\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n      * Creates mock object of given class or interface.\n      * <p>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param classToMock class or interface to mock\n      * @return mock object\n      * <p>\n      * Although it's possible to verify stubbed methods it's a good pattern to focus on testing that stubbed value is used correctly.\n      * <p>\n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param methodCall method call\n      * @return OngoingStubbing object to set stubbed value/exception\n      *   verify(mock, times(1)).someMethod(\"some arg\");\n      * </pre>\n      *  \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to be verified\n      * @return mock object itself\n      * \n      * <b>times(1) is the default</b> and can be omitted\n      * <p>\n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to be verified\n      * @param mode times(x) or atLeastOnce()\n      * \n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mocks to be verified\n      */\n      * Instead of verifyZeroInteractions() you can call verifyNoMoreInteractions() but \n      * the first one is more explicit and can read better.\n      * <p>\n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mocks to be verified\n      */\n      *   stubVoid(mock).toThrow(new RuntimeException()).on().someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to stub\n      * @return stubbable object that allows stubbing with throwable\n      * <p>\n      * Also, you can create InOrder object passing only mocks that relevant for in-order verification.  \n      *\n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mocks to be verified in order\n      * \n      *   verify(mock, atLeastOnce()).someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @return verification mode\n      */\n      *   verify(mock, times(2)).someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples in javadoc for {@link Mockito}\n+     * See examples in javadoc for {@link Mockito} class\n      * \n      * @param wantedNumberOfInvocations wanted number of invocations \n      * \n--- a/src/org/mockito/MockitoAnnotations.java\n+++ b/src/org/mockito/MockitoAnnotations.java\n public class MockitoAnnotations {\n \n     /**\n-     * Allows shorthand mock creation, see examples in javadoc for {@link MockitoAnnotations}.\n+     * Allows shorthand mock creation, see examples in javadoc for {@link MockitoAnnotations} class.\n      */\n     @Target( { FIELD })\n     @Retention(RetentionPolicy.RUNTIME)\n     \n     /**\n      * Initializes objects annotated with &#064;Mock for given testClass.\n-     * See examples in javadoc for {@link MockitoAnnotations}.\n+     * See examples in javadoc for {@link MockitoAnnotations} class.\n      */\n     public static void initMocks(Object testClass) {\n         if (testClass == null) {\n-            throw new MockitoException(\"testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations\");\n+            throw new MockitoException(\"testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class\");\n         }\n         \n         Class<?> clazz = testClass.getClass();\n--- a/test/org/mockitousage/AnnotationsTest.java\n+++ b/test/org/mockitousage/AnnotationsTest.java\n             MockitoAnnotations.initMocks(null);\n             fail();\n         } catch (MockitoException e) {\n-            assertEquals(\"testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations\",\n+            assertEquals(\"testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class\",\n                     e.getMessage());\n         }\n     }", "timestamp": 1203378843, "metainfo": ""}