{"sha": "cf6eb1c24deecf8a5fc23d4a0b09f46ba780d48f", "log": "- in order to have serializable mocks -- added documentation for serializable mocks  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401657", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n \n import org.mockito.internal.MockitoCore;\n import org.mockito.internal.creation.MockSettingsImpl;\n-import org.mockito.internal.stubbing.answers.AnswerReturnValuesAdapter;\n-import org.mockito.internal.stubbing.answers.CallsRealMethods;\n-import org.mockito.internal.stubbing.answers.DoesNothing;\n-import org.mockito.internal.stubbing.answers.Returns;\n-import org.mockito.internal.stubbing.answers.ThrowsException;\n-import org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;\n-import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;\n-import org.mockito.internal.stubbing.defaultanswers.ReturnsMocks;\n-import org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues;\n-import org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls;\n+import org.mockito.internal.stubbing.answers.*;\n+import org.mockito.internal.stubbing.defaultanswers.*;\n import org.mockito.internal.verification.VerificationModeFactory;\n import org.mockito.internal.verification.api.VerificationMode;\n import org.mockito.runners.MockitoJUnitRunner;\n-import org.mockito.stubbing.Answer;\n-import org.mockito.stubbing.DeprecatedOngoingStubbing;\n-import org.mockito.stubbing.OngoingStubbing;\n-import org.mockito.stubbing.Stubber;\n-import org.mockito.stubbing.VoidMethodStubbable;\n+import org.mockito.stubbing.*;\n \n /**\n  * <p align=\"left\"><img src=\"logo.jpg\"/></p>\n  *      <a href=\"#17\">17. (**New**) Resetting mocks</a><br/>\n  *      <a href=\"#18\">18. (**New**) Troubleshooting & validating framework usage</a><br/>\n  *      <a href=\"#19\">19. (**New**) Aliases for behavior driven development</a><br/>\n+ *      <a href=\"#20\">20. (**New**) Serializable mocks</a><br/>\n  * </b>\n  * \n  * <p>\n  * }  \n  * </pre>\n  * \n+ * <h3 id=\"20\">20. (**New**) Serializable mocks</h3>\n+ * \n+ * With this feature you can use a mock in a place that requires dependencies to be serializable.\n+ * <p>\n+ * WARNING: This should rarely be used.  If you are unit testing it should be rare that you need this behaviour. \n+ * <p>\n+ * The behaviour was implemented for a specific use case of a BDD spec that had an unreliable external dependency.  This\n+ * was in a web environment and the objects from the external dependency were being serialized to pass between layers. \n+ * <p>\n+ * To create a mock that can be serialized the interface or class must implement the Serializable interface OR use the\n+ * {@link #withSettings().extraInterfaces(Serializable.class)}.  When creating the mock for the interface or class use the\n+ * withSettings().serializable() {@link org.mockito.MockSettings}.  \n+ * \n+ * <pre>\n+ * YourClass mock = mock(YourClass.class, withSettings().extraInterfaces(Serializable.class).serializable());\n+ * </pre>\n+ * \n+ * In the above example the first MockSettings that is added is the Serialiable interface.  If your class or interface\n+ * implements Serializable this is not needed.  The second MockSettings, .serializable(), tells mockito to use internal\n+ * classes that can be serialized.\n+ * <p>\n+ * The above mock can be serialized assuming all the normal <a href='http://www.uni-muenster.de/ZIV.BennoSueselbeck/java/jdk1.5.0_01/docs/api/java/io/Serializable.html'>\n+ * serialization requirements</a> are met by the interface or class.\n+ * <p>\n+ * Making a real object spy serializable is a bit more effort as the spy(...) method does not have an overloaded version \n+ * which accepts MockSettings.  But no worries you simply use the same MockSettings that the spy(...) method uses plus the \n+ * serializable setting.\n+ * \n+ * <pre>\n+ * List<Object> list = new ArrayList<Object>();\n+ * List<Object> spy = mock(ArrayList.class, withSettings()\n+ *                 .spiedInstance(list)\n+ *                 .defaultAnswer(CALLS_REAL_METHODS)\n+ *                 .serializable());\n+ * </pre>\n  * \n  */\n @SuppressWarnings(\"unchecked\")", "timestamp": 1257487174, "metainfo": ""}