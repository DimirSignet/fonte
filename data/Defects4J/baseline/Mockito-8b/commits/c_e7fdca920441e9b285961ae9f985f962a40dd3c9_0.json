{"sha": "e7fdca920441e9b285961ae9f985f962a40dd3c9", "log": "Fixed a problem with PrintableInvocation and DescribedInvocation. Reverted the type hierarchy - it should be more backwards compatible this way.", "commit": "\n--- a/src/org/mockito/exceptions/PrintableInvocation.java\n+++ b/src/org/mockito/exceptions/PrintableInvocation.java\n  * @Deprecated. We needed to move this class to a better place to keep consistency of the API.\n  * Please use {@link DescribedInvocation} instead.\n  */\n-public interface PrintableInvocation extends DescribedInvocation {}\n+public interface PrintableInvocation {\n+\n+    String toString();\n+\n+    Location getLocation();\n+\n+}\n--- a/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n+++ b/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n  * Report on a method call\n  */\n public class NotifiedMethodInvocationReport implements MethodInvocationReport {\n-        private final Invocation invocation;\n-        private Object returnedValue;\n-        private Throwable throwable;\n+    private final Invocation invocation;\n+    private Object returnedValue;\n+    private Throwable throwable;\n \n \n-        /**\n-         * Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.\n-         *\n-         *\n-         * @param invocation Information on the method call\n-         * @param returnedValue The value returned by the method invocation\n-         */\n-        public NotifiedMethodInvocationReport(Invocation invocation, Object returnedValue) {\n-            this.invocation = invocation;\n-            this.returnedValue = returnedValue;\n-        }\n+    /**\n+     * Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.\n+     *\n+     *\n+     * @param invocation Information on the method call\n+     * @param returnedValue The value returned by the method invocation\n+     */\n+    public NotifiedMethodInvocationReport(Invocation invocation, Object returnedValue) {\n+        this.invocation = invocation;\n+        this.returnedValue = returnedValue;\n+    }\n \n-        /**\n-         * Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.\n-         *\n-         *\n-         * @param invocation Information on the method call\n-         * @param throwable Tha throwable raised by the method invocation\n-         */\n-        public NotifiedMethodInvocationReport(Invocation invocation, Throwable throwable) {\n-            this.invocation = invocation;\n-            this.throwable = throwable;\n-        }\n+    /**\n+     * Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.\n+     *\n+     *\n+     * @param invocation Information on the method call\n+     * @param throwable Tha throwable raised by the method invocation\n+     */\n+    public NotifiedMethodInvocationReport(Invocation invocation, Throwable throwable) {\n+        this.invocation = invocation;\n+        this.throwable = throwable;\n+    }\n \n-        public DescribedInvocation getInvocation() {\n-            return invocation;\n-        }\n+    public DescribedInvocation getInvocation() {\n+        return invocation;\n+    }\n \n-        public Object getReturnedValue() {\n-            return returnedValue;\n-        }\n+    public Object getReturnedValue() {\n+        return returnedValue;\n+    }\n \n-        public Throwable getThrowable() {\n-            return throwable;\n-        }\n+    public Throwable getThrowable() {\n+        return throwable;\n+    }\n \n-        public boolean threwException() {\n-            return throwable != null;\n-        }\n+    public boolean threwException() {\n+        return throwable != null;\n+    }\n \n-        public String getLocationOfStubbing() {\n-            return (invocation.stubInfo() == null) ? null : invocation.stubInfo().stubbedAt().toString();\n-        }\n+    public String getLocationOfStubbing() {\n+        return (invocation.stubInfo() == null) ? null : invocation.stubInfo().stubbedAt().toString();\n+    }\n \n \n-        public boolean equals(Object o) {\n-            if (this == o) return true;\n-            if (o == null || getClass() != o.getClass()) return false;\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n \n-            NotifiedMethodInvocationReport that = (NotifiedMethodInvocationReport) o;\n+        NotifiedMethodInvocationReport that = (NotifiedMethodInvocationReport) o;\n \n-            if (invocation != null ? !invocation.equals(that.invocation) : that.invocation != null) return false;\n-            if (returnedValue != null ? !returnedValue.equals(that.returnedValue) : that.returnedValue != null)\n-                return false;\n-            if (throwable != null ? !throwable.equals(that.throwable) : that.throwable != null) return false;\n+        if (invocation != null ? !invocation.equals(that.invocation) : that.invocation != null) return false;\n+        if (returnedValue != null ? !returnedValue.equals(that.returnedValue) : that.returnedValue != null)\n+            return false;\n+        if (throwable != null ? !throwable.equals(that.throwable) : that.throwable != null) return false;\n \n-            return true;\n-        }\n+        return true;\n+    }\n \n-        public int hashCode() {\n-            int result = invocation != null ? invocation.hashCode() : 0;\n-            result = 31 * result + (returnedValue != null ? returnedValue.hashCode() : 0);\n-            result = 31 * result + (throwable != null ? throwable.hashCode() : 0);\n-            return result;\n-        }\n+    public int hashCode() {\n+        int result = invocation != null ? invocation.hashCode() : 0;\n+        result = 31 * result + (returnedValue != null ? returnedValue.hashCode() : 0);\n+        result = 31 * result + (throwable != null ? throwable.hashCode() : 0);\n+        return result;\n     }\n+}\n--- a/src/org/mockito/invocation/DescribedInvocation.java\n+++ b/src/org/mockito/invocation/DescribedInvocation.java\n package org.mockito.invocation;\n+\n+import org.mockito.exceptions.PrintableInvocation;\n \n /**\n  * by Szczepan Faber, created at: 4/1/12\n  */\n-public interface DescribedInvocation {\n+public interface DescribedInvocation extends PrintableInvocation {\n \n     String toString();\n \n--- a/src/org/mockito/listeners/MethodInvocationReport.java\n+++ b/src/org/mockito/listeners/MethodInvocationReport.java\n      *\n      * @return Information on the method call, never {@code null}\n      */\n-    PrintableInvocation getInvocation();\n+    DescribedInvocation getInvocation();\n \n     /**\n      * @return The resulting value of the method invocation, may be <code>null</code>", "timestamp": 1333291154, "metainfo": ""}