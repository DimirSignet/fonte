{"sha": "3931527062ced5bf17607d6b09c77024ab80e221", "log": "In order to kill of dodgy debuggingInfo class (and remove it from MockingProgress). Finished refactoring!  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401832", "commit": "\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n         mockingProgress.reportOngoingStubbing(ongoingStubbing);\n \n         StubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);\n-        if (!invocation.isVoid() && stubbedInvocation == null) {\n-            // it is a return-value interaction but not stubbed. This *might* be\n-            // a problem\n-            mockingProgress.getDebuggingInfo().addPotentiallyUnstubbed(invocationMatcher);\n-        }\n \n         if (stubbedInvocation != null) {\n-            mockingProgress.getDebuggingInfo().reportUsedStub(invocationMatcher);\n             stubbedInvocation.captureArgumentsFrom(invocation);\n             return stubbedInvocation.answer(invocation);\n         } else {\n--- a/src/org/mockito/internal/progress/MockingProgress.java\n+++ b/src/org/mockito/internal/progress/MockingProgress.java\n package org.mockito.internal.progress;\n \n import org.mockito.MockSettings;\n-import org.mockito.internal.debugging.DebuggingInfo;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.listeners.MockingProgressListener;\n-import org.mockito.internal.listeners.MockingStartedListener;\n import org.mockito.internal.verification.api.VerificationMode;\n \n public interface MockingProgress {\n \n     ArgumentMatcherStorage getArgumentMatcherStorage();\n \n-    DebuggingInfo getDebuggingInfo();\n-\n     void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings);\n \n     void setListener(MockingProgressListener listener);\n--- a/src/org/mockito/internal/progress/MockingProgressImpl.java\n+++ b/src/org/mockito/internal/progress/MockingProgressImpl.java\n import org.mockito.MockSettings;\n import org.mockito.exceptions.Reporter;\n import org.mockito.internal.configuration.GlobalConfiguration;\n-import org.mockito.internal.debugging.DebuggingInfo;\n import org.mockito.internal.debugging.Localized;\n import org.mockito.internal.debugging.Location;\n import org.mockito.internal.invocation.Invocation;\n     private final Reporter reporter = new Reporter();\n     private final ArgumentMatcherStorage argumentMatcherStorage = new ArgumentMatcherStorageImpl();\n     \n-    private final DebuggingInfo debuggingInfo = new DebuggingInfo();\n-\n     IOngoingStubbing iOngoingStubbing;\n     private Localized<VerificationMode> verificationMode;\n     private Location stubbingInProgress = null;\n     }\n \n     public void stubbingCompleted(Invocation invocation) {\n-        debuggingInfo.addStubbedInvocation(invocation);        \n         stubbingInProgress = null;\n     }\n     \n         return argumentMatcherStorage;\n     }\n \n-    public DebuggingInfo getDebuggingInfo() {\n-        return debuggingInfo;\n-    }\n-\n     public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\n         if (listener != null && listener instanceof MockingStartedListener) {\n             ((MockingStartedListener) listener).mockingStarted(mock, classToMock, mockSettings);\n--- a/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java\n+++ b/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java\n import java.io.Serializable;\n \n import org.mockito.MockSettings;\n-import org.mockito.internal.debugging.DebuggingInfo;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.listeners.MockingProgressListener;\n import org.mockito.internal.verification.api.VerificationMode;\n         return threadSafely().getArgumentMatcherStorage();\n     }\n \n-    public DebuggingInfo getDebuggingInfo() {\n-        return threadSafely().getDebuggingInfo();\n-    }\n-\n     public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\n         threadSafely().mockingStarted(mock, classToMock, mockSettings);\n     }\n--- a/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n+++ b/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n  */\n package org.mockito.runners;\n \n-import static org.mockito.Mockito.*;\n-\n import org.junit.Before;\n-import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.runner.Description;\n import org.junit.runner.manipulation.Filter;\n import org.junit.runner.manipulation.NoTestsRemainException;\n import org.junit.runner.notification.RunNotifier;\n import org.junit.runners.model.InitializationError;\n-import org.mockito.Mock;\n-import org.mockito.internal.debugging.DebuggingInfo;\n-import org.mockito.internal.progress.ThreadSafeMockingProgress;\n import org.mockito.internal.runners.RunnerImpl;\n import org.mockito.internal.util.MockitoLoggerImpl;\n import org.mockitousage.IMethods;", "timestamp": 1266178797, "metainfo": ""}