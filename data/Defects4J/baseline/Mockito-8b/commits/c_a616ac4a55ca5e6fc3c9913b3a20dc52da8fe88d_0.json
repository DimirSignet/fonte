{"sha": "a616ac4a55ca5e6fc3c9913b3a20dc52da8fe88d", "log": "Avoided some duplication", "commit": "\n--- a/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java\n+++ b/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n-import java.io.Serializable;\n-import java.lang.reflect.Modifier;\n-\n-import org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;\n-import org.mockito.invocation.InvocationOnMock;\n-import org.mockito.stubbing.Answer;\n+import org.mockito.Answers;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Modifier;\n \n /**\n  * Optional Answer that adds partial mocking support\n public class CallsRealMethods implements Answer<Object>, Serializable {\n     private static final long serialVersionUID = 9057165148930624087L;\n \n-    public Object answer(InvocationOnMock invocation) throws Throwable {\n-    \tif (Modifier.isAbstract(invocation.getMethod().getModifiers())) {\n-    \t\treturn new GloballyConfiguredAnswer().answer(invocation);\n-    \t}\n+    public Object answer(InvocationOnMock invocation) throws Throwable {\n+    \tif (Modifier.isAbstract(invocation.getMethod().getModifiers())) {\n+    \t\treturn Answers.CALLS_REAL_METHODS.get().answer(invocation);\n+    \t}\n         return invocation.callRealMethod();\n     }\n }", "timestamp": 1416690956, "metainfo": ""}