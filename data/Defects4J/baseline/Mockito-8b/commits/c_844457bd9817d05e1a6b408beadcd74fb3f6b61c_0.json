{"sha": "844457bd9817d05e1a6b408beadcd74fb3f6b61c", "log": "Fixed issue 221 (possible NPE on autounboxing any(Class))  --HG-- rename : test/org/mockitousage/PlaygroundTest.java => test/org/mockitousage/bugs/NPEOnAnyClassMatcherAutounboxTest.java extra : rebase_source : e149fdd3b5fd296a5d23011aefdd3ba38578cd42", "commit": "\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n      * @return <code>null</code>.\n      */\n     public static <T> T any(Class<T> clazz) {\n-        return (T) anyObject();\n+        return (T) reportMatcher(Any.ANY).returnFor(clazz);\n     }\n     \n     /**\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/NPEOnAnyClassMatcherAutounboxTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.bugs;\n+\n+import org.junit.Test;\n+import org.mockitoutil.TestBase;\n+\n+import static org.mockito.Mockito.*;\n+\n+public class NPEOnAnyClassMatcherAutounboxTest extends TestBase {\n+\n+    interface Foo {\n+        void bar(long id);\n+    }\n+\n+    @Test\n+    public void shouldNotThrowNPE() {\n+        Foo f = mock(Foo.class);\n+        verify(f).bar(any(Long.class));\n+    }\n+}", "timestamp": 1286451458, "metainfo": ""}