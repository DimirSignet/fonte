{"sha": "244bf2d3ec0d516f0f215603a0aa9c8c93e2ece0", "log": "In order to avoid regression reverted the fix for issue 62 (making anyObject() more convenient with varargs).  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401521", "commit": "\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n     public boolean matches(Invocation actual) {\n         return invocation.getMock().equals(actual.getMock())\n                 && hasSameMethod(actual)\n-                && (argumentsMatch(actual.getArguments()) || argumentsMatch(actual.getRawArguments()));\n+                && (argumentsMatch(actual.getArguments()));\n     }\n \n     private boolean argumentsMatch(Object[] actualArgs) {\n--- a/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java\n+++ b/test/org/mockitousage/bugs/VarargsAndAnyObjectPicksUpExtraInvocationsTest.java\n     //TODO: not yet implemented\n     @Ignore\n     @Test\n+    public void shouldVerifyCorrectlyWithAnyObjectSubstitutingVarargs() {\n+        //when\n+        table.newRow(\"qux\", \"foo\", \"bar\", \"baz\");\n+        table.newRow(\"abc\", \"def\");\n+        \n+        //then\n+        verify(table, times(2)).newRow(anyString(), (String[]) anyObject());\n+    }\n+\n+    @Test\n     public void shouldVerifyCorrectlyWithVarargs() {\n         //when\n         table.newRow(\"qux\", \"foo\", \"bar\", \"baz\");\n         //then\n         verify(table).newRow(anyString(), eq(\"foo\"), anyString(), anyString());\n         verify(table).newRow(anyString(), anyString());\n-        verify(table, times(2)).newRow(anyString(), (String[]) anyObject());\n     }\n }\n--- a/test/org/mockitousage/bugs/VarargsNotPlayingWithAnyObjectTest.java\n+++ b/test/org/mockitousage/bugs/VarargsNotPlayingWithAnyObjectTest.java\n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n+import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mock;\n import org.mockitoutil.TestBase;\n     \n     @Mock VarargMethod mock;\n \n+    //TODO: not yet implemented, reverted fix for issue 62 as it introduced a regression\n+    @Ignore\n     @Test\n     public void shouldAllowAnyObjectForVarArgs() {\n         mock.run(\"a\", \"b\");\n         verify(mock, never()).run(anyString(), eq(\"f\"));\n     }\n     \n+    @Ignore\n     @Test\n     public void shouldAllowAnyObjectForVarArgsStubbing() {\n         when(mock.run((String[]) anyObject())).thenReturn(\"foo\");", "timestamp": 1245241161, "metainfo": ""}