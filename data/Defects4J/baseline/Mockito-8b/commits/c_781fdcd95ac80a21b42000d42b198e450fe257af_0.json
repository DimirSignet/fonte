{"sha": "781fdcd95ac80a21b42000d42b198e450fe257af", "log": "added unit test for a feature, small refactorings  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40489", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n     }\n \n     public boolean isToString() {\n-        return method.getReturnType() == String.class && method.getParameterTypes().length == 0 && method.getName().equals(\"toString\");\n+        return method.getReturnType() == String.class \n+            && method.getParameterTypes().length == 0 \n+            && method.getName().equals(\"toString\");\n     }\n }\n--- a/src/org/mockito/internal/verification/VerifyingRecorder.java\n+++ b/src/org/mockito/internal/verification/VerifyingRecorder.java\n     }\n \n     public void recordInvocation(Invocation invocation) {\n-        //TODO\n         if (!invocation.isToString()) {\n             this.registeredInvocations.add(invocation);\n         }\n--- a/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n+++ b/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n         assertThat(verifierStub.invocations, collectionHasExactlyInOrder(simpleMethod, differentMethod.getInvocation()));\n     }\n     \n+    @Test\n+    public void shouldNotRecordToStringMethod() throws Exception {\n+        Invocation invocation = new InvocationBuilder().method(\"toString\").toInvocation();\n+        recorder.recordInvocation(invocation);\n+        assertTrue(recorder.getRegisteredInvocations().isEmpty());\n+    }\n+    \n     class VerifierStub implements Verifier {\n         private List<Invocation> invocations;\n         private InvocationMatcher wanted;\n--- a/test/org/mockitousage/IMethods.java\n+++ b/test/org/mockitousage/IMethods.java\n     void varargs(String ... string);\n \n     List<String> listReturningMethod(Object ... objects);\n+    \n+    String toString();\n }", "timestamp": 1206232065, "metainfo": ""}