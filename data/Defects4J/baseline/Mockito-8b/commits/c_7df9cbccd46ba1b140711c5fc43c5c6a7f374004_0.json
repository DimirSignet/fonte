{"sha": "7df9cbccd46ba1b140711c5fc43c5c6a7f374004", "log": "In order to have better functional coverage added missing test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401565", "commit": "\n--- a/test/org/mockitousage/matchers/CapturingArgumentsTest.java\n+++ b/test/org/mockitousage/matchers/CapturingArgumentsTest.java\n \n import java.util.List;\n \n+import org.fest.assertions.Assertions;\n import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.ArgumentCaptor;\n     }\n     \n     @Test\n+    public void shouldCaptureWhenStubbingOnlyWhenEntireInvocationMatches() {\n+        //given\n+        ArgumentCaptor<String> argument = new ArgumentCaptor<String>();\n+        when(mock.simpleMethod(argument.capture(), eq(2))).thenReturn(\"blah\");\n+        \n+        //when\n+        mock.simpleMethod(\"foo\", 200);\n+        mock.simpleMethod(\"bar\", 2);\n+        \n+        //then\n+        Assertions.assertThat(argument.getAllValues()).containsOnly(\"bar\");\n+    }\n+    \n+    @Test\n     public void shouldSaySomethingSmartWhenMisused() {\n         ArgumentCaptor<Person> argument = new ArgumentCaptor<Person>();\n         try {", "timestamp": 1248035454, "metainfo": ""}