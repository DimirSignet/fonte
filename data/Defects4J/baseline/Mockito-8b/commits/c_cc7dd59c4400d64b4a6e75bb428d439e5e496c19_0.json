{"sha": "cc7dd59c4400d64b4a6e75bb428d439e5e496c19", "log": "issue 212 : report to the user why this is happening", "commit": "\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n                 \"1. you stub either of: final/private/equals()/hashCode() methods.\",\n                 \"   Those methods *cannot* be stubbed/verified.\",\n                 \"2. inside when() you don't call method on mock but on some other object.\",\n+                \"3. the parent of the mocked class is not public.\",\n+                \"   It is a limitation of the mock engine.\",\n                 \"\"\n         ));\n     }\n--- a/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n+++ b/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n \n package org.mockitousage.bugs;\n \n+import static org.fest.assertions.Assertions.assertThat;\n import static org.mockito.Mockito.*;\n \n import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mockito;\n+import org.mockito.exceptions.misusing.MissingMethodInvocationException;\n \n //see bug 212\n-@Ignore //needs fixing\n+// @Ignore(\"needs fixing\")\n public class ParentClassNotPublicVeryWeirdBugTest {\n     \n     class SuperClass {\n     }\n     \n     @Test\n-    public void isValidMocked() {\n+    @Ignore(\"needs fixing\")\n+    public void is_valid_mocked() {\n         ClassForMocking clazzMock = mock(ClassForMocking.class);\n         Mockito.when(clazzMock.isValid()).thenReturn(true);\n     }\n+\n+    @Test\n+    public void report_why_this_exception_happen() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        try {\n+            Mockito.when(clazzMock.isValid()).thenReturn(true);\n+        } catch (MissingMethodInvocationException e) {\n+            assertThat(e.getMessage())\n+                    .contains(\"the parent of the mocked class is not public.\")\n+                    .contains(\"It is a limitation of the mock engine\");\n+        }\n+    }\n }", "timestamp": 1317977568, "metainfo": ""}