{"sha": "be441d5f7db085e2b52c62e7182eed394c3b5916", "log": "finished implementing state validator for stubVoid  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40111", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n     }\n     \n     public static <T> VoidMethodExpectation<T> stubVoid(T mock) {\n+        MockitoState.instance().stubbingStarted();\n         return MockUtil.getControl(mock);\n     }\n \n--- a/src/org/mockito/exceptions/Exceptions.java\n+++ b/src/org/mockito/exceptions/Exceptions.java\n                 \"stub() requires an argument which has to be a proper method call on a mock object\"\n         ));\n     }\n+\n+    public static void unfinishedVerificationException() {\n+        throw new UnfinishedVerificationException(join(\n+                \"Previous verify(mock) doesn't have a method call.\",\n+                \"Should be something like that: verify(mock).doSomething()\"\n+        ));\n+    }\n }\n--- a/src/org/mockito/exceptions/UnfinishedVerificationException.java\n+++ b/src/org/mockito/exceptions/UnfinishedVerificationException.java\n     \n     private static final long serialVersionUID = 1L;\n \n-    public UnfinishedVerificationException() {\n-        super(  \"\\n\" +\n-        \t\t\"Previous verify(mock) doesn't have a method call.\" +\n-        \t\t\"\\n\" +\n-        \t\t\"Should be something like that: verify(mock).doSomething()\");\n+    public UnfinishedVerificationException(String message) {\n+        super(message);\n     }\n }\n--- a/src/org/mockito/internal/MockControl.java\n+++ b/src/org/mockito/internal/MockControl.java\n     }\n     \n     /**\n-     * if user passed bare arguments, not matchers then create EqualsMatchers for every argument\n+     * if user passed bare arguments then create EqualsMatcher for every argument\n      */\n     private List<IArgumentMatcher> createEqualsMatchers(Invocation invocation,\n             List<IArgumentMatcher> matchers) {\n     }\n \n     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        if (throwableToBeSetOnVoidMethod != null) {\n+            Invocation invocation = new Invocation(proxy, method, args, mockitoState.nextSequenceNumber());\n+            ExpectedInvocation invocationWithMatchers = expectedInvocation(invocation);\n+            //TODO this is a bit dodgy, we should set result directly on behavior\n+            behavior.addInvocation(invocationWithMatchers);\n+            andThrows(throwableToBeSetOnVoidMethod);\n+            throwableToBeSetOnVoidMethod = null;\n+            return null;\n+        }\n+        \n         VerifyingMode verifyingMode = mockitoState.pullVerifyingMode();\n         mockitoState.validateState();\n         \n--- a/src/org/mockito/internal/MockitoBehavior.java\n+++ b/src/org/mockito/internal/MockitoBehavior.java\n     public void addResult(Result result) {\n         assert invocationForStubbing != null;\n         registeredInvocations.removeLast();\n-        this.results.put(invocationForStubbing, result);\n+        results.put(invocationForStubbing, result);\n     }\n-\n+    \n     public void verify(ExpectedInvocation wanted, VerifyingMode mode) {\n         checkOrderOfInvocations(wanted, mode);\n         checkForMissingInvocation(wanted, mode);\n--- a/src/org/mockito/internal/MockitoState.java\n+++ b/src/org/mockito/internal/MockitoState.java\n     private final ThreadLocal<VerifyingMode> verifyingModeLocal = new ThreadLocal<VerifyingMode>();\n     private final ThreadLocal<Integer> invocationSequenceNumber = new ThreadLocal<Integer>();\n     private final ThreadLocal<Object> stubbingModeLocal = new ThreadLocal<Object>();\n-//    private final ThreadLocal<Object> stubbingVoidModeLocal = new ThreadLocal<Object>();\n-\n \n     MockitoState() {}\n     \n     public synchronized void verifyingStarted(VerifyingMode verify) {\n         validateState();\n         verifyingModeLocal.set(verify);\n-    }\n-\n-    public synchronized void checkForUnfinishedVerification() {\n-        if (verifyingModeLocal.get() != null) {\n-            throw new UnfinishedVerificationException();\n-        }\n     }\n \n     public synchronized VerifyingMode pullVerifyingMode() {\n     }\n \n     public synchronized void validateState() {\n-        checkForUnfinishedVerification();\n+        if (verifyingModeLocal.get() != null) {\n+            Exceptions.unfinishedVerificationException();\n+        }\n+        \n         if (stubbingModeLocal.get() != null) {\n             Exceptions.unfinishedStubbing();\n         }\n                 \", invocationSequenceNumber: \" + invocationSequenceNumber.get() +\n                 \", stubbingModeLocal: \" + stubbingModeLocal.get();\n     }\n-//\n-//    public void stubbingVoidStarted() {\n-//        validateState();\n-//        stubbingVoidModeLocal.set(new Object());\n-//    }\n }", "timestamp": 1196472356, "metainfo": ""}