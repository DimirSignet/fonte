{"sha": "c6d0c734cf659989e6a06fecedfe2aaf7e6f1a36", "log": "In order to refactor the code markInvocation method was added for single invocation.  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401605", "commit": "\n--- a/src/org/mockito/internal/invocation/InvocationMarker.java\n+++ b/src/org/mockito/internal/invocation/InvocationMarker.java\n \n     public void markVerified(List<Invocation> invocations, CapturesArgumensFromInvocation wanted) {\n         for (Invocation invocation : invocations) {\n-            invocation.markVerified();\n-            wanted.captureArgumentsFrom(invocation);\n+            markVerified(invocation, wanted);\n         }\n     }\n+\n+\tpublic void markVerified(Invocation invocation, CapturesArgumensFromInvocation wanted) {\n+\t\tinvocation.markVerified();\n+\t\twanted.captureArgumentsFrom(invocation);\n+\t}\n \n     public void markVerifiedInOrder(List<Invocation> chunk, CapturesArgumensFromInvocation wanted) {\n         markVerified(chunk, wanted);\n--- a/src/org/mockito/internal/verification/Only.java\n+++ b/src/org/mockito/internal/verification/Only.java\n package org.mockito.internal.verification;\n \n-import java.util.LinkedList;\n import java.util.List;\n \n import org.mockito.exceptions.Reporter;\n \t\tList<Invocation> invocations = data.getAllInvocations();\n \t\tList<Invocation> chunk = finder.findInvocations(invocations,wantedMatcher);\n \t\tif (invocations.size() != 1 && chunk.size() > 0) {\n-\t\t\tmarkFirstOccurence(chunk, wantedMatcher);\n+\t\t\tmarker.markVerified(chunk.get(0), wantedMatcher);\n \t\t\tInvocation unverified = finder.findFirstUnverified(invocations);\n \t\t\treporter.noMoreInteractionsWanted(unverified);\n \t\t} else if (invocations.size() != 1 || chunk.size() == 0) {\n \t\t}\n \t}\n \n-\tprivate void markFirstOccurence(List<Invocation> chunk, InvocationMatcher wantedMatcher) {\n-\t\tInvocation invocation = chunk.get(0);\n-\t\tList<Invocation> invocationsToMark = new LinkedList<Invocation>();\n-\t\tinvocationsToMark.add(invocation);\n-\t\tmarker.markVerified(invocationsToMark, wantedMatcher);\n-\t}\n-\n }", "timestamp": 1251367531, "metainfo": ""}