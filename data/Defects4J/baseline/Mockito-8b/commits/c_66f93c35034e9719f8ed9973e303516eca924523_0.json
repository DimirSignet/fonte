{"sha": "66f93c35034e9719f8ed9973e303516eca924523", "log": "Made those two classes compilable with JDK 5", "commit": "\n--- a/src/org/mockito/internal/util/reflection/FieldInitializer.java\n+++ b/src/org/mockito/internal/util/reflection/FieldInitializer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.mockito.exceptions.base.MockitoException;\n         private Object testClass;\n         private Field field;\n         private ConstructorArgumentResolver argResolver;\n-        private Comparator<Constructor<?>> byParameterNumber = new Comparator<Constructor<?>>() {\n-            public int compare(Constructor<?> constructorA, Constructor<?> constructorB) {\n+        private Comparator<Constructor> byParameterNumber = new Comparator<Constructor>() {\n+            public int compare(Constructor constructorA, Constructor constructorB) {\n                 return constructorB.getParameterTypes().length - constructorA.getParameterTypes().length;\n             }\n         };\n         }\n \n         private Constructor<?> biggestConstructor(Class<?> clazz) {\n-            final List<Constructor<?>> constructors = Arrays.asList(clazz.getDeclaredConstructors());\n+            final List<Constructor> constructors = Arrays.asList(clazz.getDeclaredConstructors());\n             Collections.sort(constructors, byParameterNumber);\n \n             Constructor<?> constructor = constructors.get(0);\n--- a/src/org/mockito/stubbing/answers/ReturnsFirstArgument.java\n+++ b/src/org/mockito/stubbing/answers/ReturnsFirstArgument.java\n  */\n public class ReturnsFirstArgument implements Answer<Object> {\n \n-\t@Override\n \tpublic Object answer(InvocationOnMock invocation) throws Throwable {\n \t\tObject[] arguments = invocation.getArguments();\n \t\tif (arguments.length == 0) {", "timestamp": 1328027275, "metainfo": ""}