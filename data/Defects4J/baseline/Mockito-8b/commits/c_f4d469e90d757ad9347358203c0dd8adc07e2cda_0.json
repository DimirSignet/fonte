{"sha": "f4d469e90d757ad9347358203c0dd8adc07e2cda", "log": "Fixed issue 128 In order to communicate decent message when MockitoRunner does not find any test methods (added missing files)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401620", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/internal/runners/util/TestMethodsFinder.java\n+package org.mockito.internal.runners.util;\n+\n+import org.junit.Test;\n+\n+import java.lang.reflect.Method;\n+\n+public class TestMethodsFinder {\n+    public boolean hasTestMethods(Class<?> klass) {\n+        Method[] methods = klass.getMethods();\n+        for(Method m:methods) {\n+            if (m.isAnnotationPresent(Test.class)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+}\n--- /dev/null\n+++ b/test/org/mockito/internal/runners/util/TestMethodsFinderTest.java\n+package org.mockito.internal.runners.util;\n+\n+import org.junit.Test;\n+import org.mockitoutil.TestBase;\n+\n+public class TestMethodsFinderTest extends TestBase {\n+\n+    static class HasTests {\n+        @Test public void someTest() {}\n+    }\n+\n+    static class DoesNotHaveTests {\n+        public void someTest() {}\n+    }\n+\n+    @Test\n+    public void shouldKnowWhenClassHasTests() {\n+        assertTrue(new TestMethodsFinder().hasTestMethods(HasTests.class));\n+        assertFalse(new TestMethodsFinder().hasTestMethods(DoesNotHaveTests.class));\n+    }\n+}", "timestamp": 1255876845, "metainfo": ""}