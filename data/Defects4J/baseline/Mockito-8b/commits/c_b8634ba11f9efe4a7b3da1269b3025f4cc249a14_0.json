{"sha": "b8634ba11f9efe4a7b3da1269b3025f4cc249a14", "log": "Fixed issue 331. The result from MockHandler should not be null for primitives.  This feature is not strictly needed if cglib is used because cglib internally turns nulls into primitives if necessary. However, cglib is pluggable now via MockMaker so it made sense to make some action.", "commit": "\n--- a/src/org/mockito/internal/handler/InvocationNotifierHandler.java\n+++ b/src/org/mockito/internal/handler/InvocationNotifierHandler.java\n  *\n  * Also imposterize MockHandlerImpl, delegate all call of InternalMockHandler to the real mockHandler\n  */\n-public class InvocationNotifierHandler<T> implements MockHandler, InternalMockHandler<T> {\n+class InvocationNotifierHandler<T> implements MockHandler, InternalMockHandler<T> {\n \n     private List<InvocationListener> invocationListeners;\n-    private MockHandlerImpl<T> mockHandler;\n+    private InternalMockHandler<T> mockHandler;\n \n-    public InvocationNotifierHandler(MockHandlerImpl<T> mockHandler, MockCreationSettings settings) {\n+    public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\n         this.mockHandler = mockHandler;\n         this.invocationListeners = settings.getInvocationListeners();\n     }\n--- a/src/org/mockito/internal/handler/MockHandlerFactory.java\n+++ b/src/org/mockito/internal/handler/MockHandlerFactory.java\n package org.mockito.internal.handler;\n \n-import org.mockito.invocation.MockHandler;\n+import org.mockito.internal.InternalMockHandler;\n import org.mockito.mock.MockCreationSettings;\n \n /**\n  */\n public class MockHandlerFactory {\n \n-    public MockHandler create(MockCreationSettings settings) {\n-        return new InvocationNotifierHandler(\n-                new MockHandlerImpl(settings), settings);\n+    public InternalMockHandler create(MockCreationSettings settings) {\n+        InternalMockHandler handler = new MockHandlerImpl(settings);\n+        InternalMockHandler nullResultGuardian = new NullResultGuardian(handler);\n+        InternalMockHandler notifier = new InvocationNotifierHandler(nullResultGuardian, settings);\n+\n+        return notifier;\n     }\n }\n--- a/src/org/mockito/internal/handler/MockHandlerImpl.java\n+++ b/src/org/mockito/internal/handler/MockHandlerImpl.java\n  * @param <T>\n  *            type of mock object to handle\n  */\n-public class MockHandlerImpl<T> implements InternalMockHandler<T> {\n+class MockHandlerImpl<T> implements InternalMockHandler<T> {\n \n     private static final long serialVersionUID = -2917871070982574165L;\n \n             stubbedInvocation.captureArgumentsFrom(invocation);\n             return stubbedInvocation.answer(invocation);\n         } else {\n-            Object ret = mockSettings.getDefaultAnswer().answer(invocation);\n+             Object ret = mockSettings.getDefaultAnswer().answer(invocation);\n \n             // redo setting invocation for potential stubbing in case of partial\n             // mocks / spies.\n--- /dev/null\n+++ b/src/org/mockito/internal/handler/NullResultGuardian.java\n+package org.mockito.internal.handler;\n+\n+import org.mockito.internal.InternalMockHandler;\n+import org.mockito.internal.progress.HandyReturnValues;\n+import org.mockito.internal.stubbing.InvocationContainer;\n+import org.mockito.invocation.Invocation;\n+import org.mockito.mock.MockCreationSettings;\n+import org.mockito.stubbing.VoidMethodStubbable;\n+\n+import java.util.List;\n+\n+/**\n+ * Protects the results from delegate MockHandler. Makes sure the results are valid.\n+ *\n+ * by Szczepan Faber, created at: 5/22/12\n+ */\n+class NullResultGuardian implements InternalMockHandler {\n+    private final InternalMockHandler delegate;\n+\n+    public NullResultGuardian(InternalMockHandler delegate) {\n+        this.delegate = delegate;\n+    }\n+\n+    public Object handle(Invocation invocation) throws Throwable {\n+        Object result = delegate.handle(invocation);\n+        Class<?> returnType = invocation.getMethod().getReturnType();\n+        if(result == null && returnType.isPrimitive()) {\n+            //primitive values cannot be null\n+            return new HandyReturnValues().returnFor(returnType);\n+        } else {\n+            return result;\n+        }\n+    }\n+\n+    //boring delegation:\n+\n+    public MockCreationSettings getMockSettings() {\n+        return delegate.getMockSettings();\n+    }\n+\n+    public VoidMethodStubbable voidMethodStubbable(Object mock) {\n+        return delegate.voidMethodStubbable(mock);\n+    }\n+\n+    public void setAnswersForStubbing(List answers) {\n+        delegate.setAnswersForStubbing(answers);\n+    }\n+\n+    public InvocationContainer getInvocationContainer() {\n+        return delegate.getInvocationContainer();\n+    }\n+}\n--- /dev/null\n+++ b/test/org/mockito/internal/handler/MockHandlerFactoryTest.java\n+package org.mockito.internal.handler;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.mockito.internal.InternalMockHandler;\n+import org.mockito.internal.creation.MockSettingsImpl;\n+import org.mockito.internal.stubbing.answers.Returns;\n+import org.mockito.invocation.Invocation;\n+import org.mockito.mock.MockCreationSettings;\n+import org.mockitousage.IMethods;\n+import org.mockitoutil.TestBase;\n+\n+/**\n+ * by Szczepan Faber, created at: 5/22/12\n+ */\n+public class MockHandlerFactoryTest extends TestBase {\n+\n+    IMethods mock = Mockito.mock(IMethods.class);\n+\n+    @Test\n+    //see issue 331\n+    public void handle_result_must_not_be_null_for_primitives() throws Throwable {\n+        //given:\n+        MockCreationSettings settings = (MockCreationSettings) new MockSettingsImpl().defaultAnswer(new Returns(null));\n+        InternalMockHandler handler = new MockHandlerFactory().create(settings);\n+\n+        mock.intReturningMethod();\n+        Invocation invocation = super.getLastInvocation();\n+\n+        //when:\n+        Object result = handler.handle(invocation);\n+\n+        //then null value is not a valid result for a primitive\n+        assertNotNull(result);\n+        assertEquals(0, result);\n+    }\n+\n+    @Test\n+    //see issue 331\n+    public void valid_handle_result_is_permitted() throws Throwable {\n+        //given:\n+        MockCreationSettings settings = (MockCreationSettings) new MockSettingsImpl().defaultAnswer(new Returns(123));\n+        InternalMockHandler handler = new MockHandlerFactory().create(settings);\n+\n+        mock.intReturningMethod();\n+        Invocation invocation = super.getLastInvocation();\n+\n+        //when:\n+        Object result = handler.handle(invocation);\n+\n+        //then\n+        assertEquals(123, result);\n+    }\n+}", "timestamp": 1337803781, "metainfo": ""}