{"sha": "904c8149605ce56c319570bb66f5ac160e96baa8", "log": "issue 193 : documenting extrainterfaces on Mock annotation", "commit": "\n--- a/src/org/mockito/Mock.java\n+++ b/src/org/mockito/Mock.java\n  */\n package org.mockito;\n \n-import static java.lang.annotation.ElementType.*;\n+import org.mockito.runners.MockitoJUnitRunner;\n \n import java.lang.annotation.Documented;\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\n \n-import org.mockito.runners.MockitoJUnitRunner;\n+import static java.lang.annotation.ElementType.FIELD;\n \n /**\n  * <ul>\n  *       &#064;Mock private ArticleCalculator calculator;\n  *       &#064;Mock(name = \"dbMock\") private ArticleDatabase database;\n  *       &#064;Mock(answer = RETURNS_MOCKS) private UserProvider userProvider;\n+ *       &#064;Mock(extraInterfaces = {Queue.class, Observer.class}) private  articleMonitor;\n  *\n  *       private ArticleManager manager;\n  *\n  *       &#064;Before public void setup() {\n- *           manager = new ArticleManager(userProvider, database, calculator);\n+ *           manager = new ArticleManager(userProvider, database, calculator, articleMonitor);\n  *       }\n  *   }\n  *", "timestamp": 1302291755, "metainfo": ""}