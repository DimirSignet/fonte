{"sha": "3ddd74735232d36650b21420a19e3dfc79a28cc9", "log": "removed dead code  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401107", "commit": "\n--- a/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n+++ b/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n \n     public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\n             throws Throwable {\n-        //TODO check if this is any useful\n-        if (method.isBridge()) {\n-            return methodProxy.invokeSuper(proxy, args);\n-        }\n-        \n         if (equalsMethod.equals(method)) {\n             return Boolean.valueOf(proxy == args[0]);\n         } else if (hashCodeMethod.equals(method)) {\n--- a/test/org/mockitousage/puzzlers/BridgeMethodPuzzleTest.java\n+++ b/test/org/mockitousage/puzzlers/BridgeMethodPuzzleTest.java\n     public void shouldVerifyCorrectlyWhenBridgeMethodCalled() throws Exception {\n         //Super has following erasure: say(Object) which differs from Dummy.say(String)\n         //mock has to detect it and do the super.say()\n-        //see MockFactory.java\n         Sub s = mock(Sub.class);\n         setMockWithDownCast(s);\n         say(\"Hello\");", "timestamp": 1230494824, "metainfo": ""}