{"sha": "725053238a55e3f8ec58ff19421ebf91de081bd8", "log": "refactored one test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401412", "commit": "\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n     \n     /**\n      * any object of specified class. \n-     * Sometimes looks better than anyObject() \n+     * <p>\n+     * Sometimes looks better than anyObject() - especially when explicit casting is required\n      * <p>\n      * Alias to {@link Matchers#anyObject()}\n      * <p>\n      * @return <code>null</code>.\n      */\n     public static <T> T any(Class<T> clazz) {\n+        return (T) anyObject();\n+    }\n+    \n+    /**\n+     * any object or null \n+     * <p>\n+     * Shorter alias to {@link Matchers#anyObject()}\n+     * <p>\n+     * See examples in javadoc for {@link Matchers} class\n+     * \n+     * @return <code>null</code>.\n+     */\n+    public static <T> T any() {\n         return (T) anyObject();\n     }\n \n--- a/test/org/mockito/internal/util/copy/LenientCopyToolTest.java\n+++ b/test/org/mockito/internal/util/copy/LenientCopyToolTest.java\n package org.mockito.internal.util.copy;\n \n+import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n import java.lang.reflect.Field;\n-import java.util.Arrays;\n import java.util.LinkedList;\n-import java.util.Queue;\n \n import org.junit.Test;\n import org.mockitoutil.TestBase;\n     @Test\n     public void shouldContinueEvenIfThereAreProblemsCopyingSingleFieldValue() throws Exception {\n         //given\n-        final Queue<Boolean> sequence = new LinkedList<Boolean>(Arrays.asList(true, true, false, true));\n-        tool.fieldCopier = new FieldCopier() {\n-            public <T> void copyValue(T from, T to, Field field) throws IllegalAccessException {\n-                if(!sequence.isEmpty() && !sequence.poll()) {\n-                    throw new IllegalAccessException();\n-                }\n-            }\n-        };\n+        tool.fieldCopier = mock(FieldCopier.class);\n+        \n+        doNothing().\n+        doThrow(new IllegalAccessException()).\n+        doNothing().\n+        when(tool.fieldCopier).\n+        copyValue(anyObject(), anyObject(), any(Field.class));\n         \n         //when\n         tool.copyToMock(from, to);\n         \n         //then\n-        assertTrue(sequence.isEmpty());\n+        verify(tool.fieldCopier, atLeast(3)).copyValue(any(), any(), any(Field.class));\n     }\n }", "timestamp": 1241475507, "metainfo": ""}