{"sha": "c9fb957be1be4126efecbbc1cac12dafe80a3e21", "log": "Started working on issue 62  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401309", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n     public Location getLocation() {\n         return location;\n     }\n+\n+    public boolean isVarArgs() {\n+        return method.isVarArgs();\n+    }\n }\n--- a/src/org/mockito/internal/matchers/LocalizedMatcher.java\n+++ b/src/org/mockito/internal/matchers/LocalizedMatcher.java\n     public Location getLocation() {\n         return location;\n     }\n+    \n+    @Override\n+    public String toString() {\n+        return \"Localized: \" + this.actualMatcher;\n+    }\n }\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/VarargsNotPlayingWithAnyObjectTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.bugs;\n+\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.*;\n+\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.mockitoutil.TestBase;\n+\n+public class VarargsNotPlayingWithAnyObjectTest extends TestBase {\n+\n+    interface VarargMethod {\n+        Object run(String... args);\n+    }\n+\n+    @Ignore\n+    @Test\n+    public void testVarargStubbing() {\n+        VarargMethod mock = Mockito.mock(VarargMethod.class);\n+        mock.run(\"a\", \"b\");\n+        \n+        verify(mock).run((String[]) anyObject());\n+        verify(mock).run(new String[] {anyObject()});\n+        verify(mock, never()).run();\n+    }\n+}", "timestamp": 1239190579, "metainfo": ""}