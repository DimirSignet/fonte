{"sha": "af098cc912eb51ba8c457c68c8dcf97fa4dbb9f2", "log": "changed doReturn() to doNothing() and fixed javadocs accordingly  --HG-- rename : src/org/mockito/internal/stubbing/ReturnsVoid.java => src/org/mockito/internal/stubbing/DoesNothing.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40707", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n import org.mockito.internal.progress.VerificationMode;\n import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockito.internal.stubbing.Returns;\n-import org.mockito.internal.stubbing.ReturnsVoid;\n+import org.mockito.internal.stubbing.DoesNothing;\n import org.mockito.internal.stubbing.Stubber;\n import org.mockito.internal.stubbing.StubberImpl;\n import org.mockito.internal.stubbing.ThrowsException;\n         return doAnswer(new Returns(toBeReturned));\n     }\n     \n-    public static Stubber doReturn() {\n-        return doAnswer(new ReturnsVoid());\n+    public static Stubber doNothing() {\n+        return doAnswer(new DoesNothing());\n     }\n     \n     public static Stubber doThrow(Throwable toBeThrown) {\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n                 \"Cannot stub a non-void method with a void return!\",\n                 \"Void return is only used for stubbing consecutive calls on void methods.\",\n                 \"Example:\",\n-                \"    doReturn().\",\n+                \"    doNothing().\",\n                 \"    doThrow(new RuntimeException()).\",\n                 \"    when(mock).someVoidMethod();\",\n                 \"Above means:\",\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockito.internal.stubbing.MockitoStubber;\n import org.mockito.internal.stubbing.Returns;\n-import org.mockito.internal.stubbing.ReturnsVoid;\n+import org.mockito.internal.stubbing.DoesNothing;\n import org.mockito.internal.stubbing.ThrowsException;\n import org.mockito.internal.stubbing.VoidMethodStubbable;\n import org.mockito.internal.util.MockUtil;\n         }\n \n         public VoidMethodStubbable<T> toReturn() {\n-            mockitoStubber.addAnswerForVoidMethod(new ReturnsVoid());\n+            mockitoStubber.addAnswerForVoidMethod(new DoesNothing());\n             return this;\n         }\n \n--- a/src/org/mockito/internal/stubbing/AnswersValidator.java\n+++ b/src/org/mockito/internal/stubbing/AnswersValidator.java\n             validateReturnValue((Returns) answer, invocation);\n         }\n         \n-        if (answer instanceof ReturnsVoid) {\n-            validateVoidReturn((ReturnsVoid) answer, invocation);\n+        if (answer instanceof DoesNothing) {\n+            validateVoidReturn((DoesNothing) answer, invocation);\n         }\n     }\n \n-    private void validateVoidReturn(ReturnsVoid answer, Invocation invocation) {\n+    private void validateVoidReturn(DoesNothing answer, Invocation invocation) {\n         if (!invocation.isVoid()) {\n             reporter.cannotStubNonVoidMethodWithAVoidReturn();\n         }\n--- /dev/null\n+++ b/src/org/mockito/internal/stubbing/DoesNothing.java\n+package org.mockito.internal.stubbing;\n+\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+public class DoesNothing implements Answer<Object> {\n+    \n+    public Object answer(InvocationOnMock invocation) throws Throwable {\n+        return null;\n+    }\n+}\n--- a/src/org/mockito/internal/stubbing/Stubber.java\n+++ b/src/org/mockito/internal/stubbing/Stubber.java\n public interface Stubber extends StubbedMethodSelector {\n \n     Stubber doReturn(Object toBeReturned);\n-    Stubber doReturn();\n+    Stubber doNothing();\n     Stubber doThrow(Throwable toBeThrown);\n     Stubber doAnswer(Answer answer);\n }\n--- a/src/org/mockito/internal/stubbing/StubberImpl.java\n+++ b/src/org/mockito/internal/stubbing/StubberImpl.java\n         return this;\n     }\n \n-    public Stubber doReturn() {\n-        answers.add(new ReturnsVoid());\n+    public Stubber doNothing() {\n+        answers.add(new DoesNothing());\n         return this;\n     }\n \n--- a/test/org/mockito/internal/stubbing/AnswersValidatorTest.java\n+++ b/test/org/mockito/internal/stubbing/AnswersValidatorTest.java\n     \n     @Test(expected = MockitoException.class)\n     public void shouldFailWhenVoidReturnSetOnNonVoidMethod() throws Throwable {\n-        validator.validate(new ReturnsVoid(), new InvocationBuilder().simpleMethod().toInvocation());\n+        validator.validate(new DoesNothing(), new InvocationBuilder().simpleMethod().toInvocation());\n     }\n     \n     @Test\n     public void shouldAllowVoidReturnForVoidMethod() throws Throwable {\n-        validator.validate(new ReturnsVoid(), new InvocationBuilder().method(\"voidMethod\").toInvocation());\n+        validator.validate(new DoesNothing(), new InvocationBuilder().method(\"voidMethod\").toInvocation());\n     }\n }\n--- a/test/org/mockitousage/stubbing/StubbingUsingDoReturnTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingUsingDoReturnTest.java\n     \n     @Test\n     public void shouldAllowChainedStubbingOnVoidMethods() {\n-        doReturn().\n-        doReturn().\n+        doNothing().\n+        doNothing().\n         doThrow(new RuntimeException())\n         .when(mock).voidMethod();\n         \n     }\n     \n     @Test\n-    public void shouldNotAllowDoReturnOnNonVoids() {\n-        try {\n-            doReturn().when(mock).simpleMethod();\n+    public void shouldNotAllowDoNothingOnNonVoids() {\n+        try {\n+            doNothing().when(mock).simpleMethod();\n             fail();\n         } catch (MockitoException e) {\n             assertThat(e.getMessage(), contains(\"Cannot stub a non-void method\"));", "timestamp": 1216564959, "metainfo": ""}