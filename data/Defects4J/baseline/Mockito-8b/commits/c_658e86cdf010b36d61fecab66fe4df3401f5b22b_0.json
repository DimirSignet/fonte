{"sha": "658e86cdf010b36d61fecab66fe4df3401f5b22b", "log": "added a test that captures an argument (it's not very useful but there was an issue added about that...)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40593", "commit": "\n--- a/test/org/mockitousage/matchers/CapturingMatchersTest.java\n+++ b/test/org/mockitousage/matchers/CapturingMatchersTest.java\n  */\n package org.mockitousage.matchers;\n \n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.*;\n+\n import org.junit.Test;\n+import org.mockito.ArgumentMatcher;\n import org.mockito.TestBase;\n import org.mockito.MockitoAnnotations.Mock;\n import org.mockitousage.IMethods;\n @SuppressWarnings(\"unchecked\")  \n public class CapturingMatchersTest extends TestBase {\n     \n+    private final class ArgumentCaptor<T> extends ArgumentMatcher<T> {\n+        private T argument;\n+\n+        @Override\n+        public boolean matches(Object argument) {\n+            this.argument = (T) argument;\n+            return true;\n+        }\n+        \n+        public T getArgument() {\n+            return argument;\n+        }\n+    }\n+\n     @Mock private IMethods mock;\n \n     @Test\n     public void shouldAllowCapturingArguments() throws Exception {\n+        Object object = new Object();\n+        mock.simpleMethod(object);\n         \n+        ArgumentCaptor captor = new ArgumentCaptor();\n+        verify(mock).simpleMethod(capturedArg(captor));\n+        \n+        assertSame(object, captor.getArgument());\n+    }\n+\n+    private Object capturedArg(ArgumentCaptor captor) {\n+        return argThat(captor);\n     }\n }", "timestamp": 1208804948, "metainfo": ""}