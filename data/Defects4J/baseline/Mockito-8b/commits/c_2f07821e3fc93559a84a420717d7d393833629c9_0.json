{"sha": "2f07821e3fc93559a84a420717d7d393833629c9", "log": "issue 322 synchronization fix test informations thx to edocomar", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/ConcurrentModificationExceptionOnMultiThreadedVerificationTest.java\n+package org.mockitousage.bugs;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import static org.mockito.Mockito.reset;\n+import static org.mockito.Mockito.timeout;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+\n+// issue 322\n+// the only evidence of this failing test was shown on a RHEL with IBM J9 JVM 64bits\n+//\n+// details\n+// java.fullversion=JRE 1.6.0 IBM J9 2.6 Linux amd64-64 20111113_94967  (JIT enabled, AOT enabled)\n+// Linux2.6.32-220.4.2.el6.x86_64 #1SMP Mon Feb 6 16:39:28EST 2012x86_64 x86_64 x86_64 GNU/Linux\n+public class ConcurrentModificationExceptionOnMultiThreadedVerificationTest {\n+\n+\tint nThreads = 1;\n+\tstatic final int TEST_MILLIS = 1000;\n+\tstatic final int INTERVAL_MILLIS = 10;\n+\tstatic final int TIMES = TEST_MILLIS / INTERVAL_MILLIS;\n+\n+\tITarget target = Mockito.mock(ITarget.class);\n+\tExecutorService fixedThreadPool;\n+\t\n+\t@Before\n+\tpublic void setUp() {\n+\t\ttarget = Mockito.mock(ITarget.class);\n+\t\tfixedThreadPool = Executors.newFixedThreadPool(nThreads);\n+\t}\n+\n+\t@Test\n+\tpublic void testInvocationConcurrently() throws Exception {\n+\t\treset(target);\n+\t\tstartInvocations();\n+\t\tverify(target, timeout(TEST_MILLIS).times(TIMES*nThreads)).targetMethod(\"arg\");\n+\t\tverifyNoMoreInteractions(target);\n+\t}\n+\n+\tprivate void startInvocations() throws InterruptedException,\n+\t\t\tExecutionException {\n+\t\t\n+\t\tfor(int i=0; i<nThreads; i++) {\n+\t\t\tfixedThreadPool.submit(new TargetInvoker(i));\n+\t\t}\n+\n+\t}\n+\n+\t\n+\tpublic class TargetInvoker implements Callable<Object> {\n+\n+\t\tprivate final int seq;\n+\n+\t\tTargetInvoker(int seq) {\n+\t\t\tthis.seq = seq;\n+\t\t}\n+\t\t\n+\t\tpublic Object call() throws Exception {\n+\t\t\tSystem.err.println(\"started \" + seq);\n+\t\t\tfor (int i = 0; i < TIMES; i++) {\n+\t\t\t\tThread.yield();\n+\t\t\t\ttarget.targetMethod(\"arg\");\n+\t\t\t\tThread.sleep((long) INTERVAL_MILLIS);\n+\t\t\t}\n+\t\t\tSystem.err.println(\"finished\" + seq);\n+\t\t\treturn seq;\n+\t\t}\n+\t\t\n+\t}\n+\t\n+\tpublic static interface ITarget {\n+\n+\t\tpublic String targetMethod(String arg);\n+\t}\n+\t\n+}", "timestamp": 1331330032, "metainfo": ""}