{"sha": "c05689f95f608572b324af56148968f056836b7f", "log": "on the way to thin down the MockitoVerificationMode  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40968", "commit": "\n--- a/src/org/mockito/internal/verification/AtLeast.java\n+++ b/src/org/mockito/internal/verification/AtLeast.java\n         InvocationMatcher wanted = data.getWanted();\n         \n         MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker();\n-        NumberOfInvocationsInOrderChecker numberOfCalls = new NumberOfInvocationsInOrderChecker();\n+        AtLeastXNumberOfInvocationsInOrderChecker numberOfCalls = new AtLeastXNumberOfInvocationsInOrderChecker();\n         \n         if (wantedInvocationCount == 1) {\n             missingInvocation.verify(allInvocations, wanted, this);\n         }\n         \n-//        numberOfCalls.verify(allInvocations, wanted, this);\n+        numberOfCalls.verify(allInvocations, wanted, wantedInvocationCount);\n     }\n     \n     @Override\n--- a/src/org/mockito/internal/verification/AtLeastXNumberOfInvocationsInOrderChecker.java\n+++ b/src/org/mockito/internal/verification/AtLeastXNumberOfInvocationsInOrderChecker.java\n         this.reporter = reporter;\n     }\n     \n-    public void verify(List<Invocation> invocations, InvocationMatcher wanted, MockitoVerificationMode mode) {\n-        VerificationModeDecoder decoder = new VerificationModeDecoder(mode);\n-        List<Invocation> chunk = finder.findMatchingChunk(invocations, wanted, mode);\n-        \n-        boolean noMatchFound = chunk.size() == 0;\n-        if (decoder.neverWanted() && noMatchFound) {\n-            return;\n-        }\n+    public void verify(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\n+        List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks(invocations, wanted);\n         \n         int actualCount = chunk.size();\n         \n-        if (decoder.tooLittleActualInvocations(actualCount)) {\n+        if (wantedCount > actualCount) {\n             HasStackTrace lastInvocation = finder.getLastStackTrace(chunk);\n-            reporter.tooLittleActualInvocationsInOrder(mode.wantedCount(), actualCount, wanted, lastInvocation);\n-        } else if (decoder.tooLittleActualInvocationsInAtLeastMode(actualCount)) {\n-            HasStackTrace lastInvocation = finder.getLastStackTrace(chunk);\n-            reporter.tooLittleActualInvocationsInOrderInAtLeastMode(mode.wantedCount(), actualCount, wanted, lastInvocation);\n-        } else if (decoder.tooManyActualInvocations(actualCount)) {\n-            HasStackTrace firstUndesired = chunk.get(mode.wantedCount()).getStackTrace();\n-            reporter.tooManyActualInvocationsInOrder(mode.wantedCount(), actualCount, wanted, firstUndesired);\n+            reporter.tooLittleActualInvocationsInOrderInAtLeastMode(wantedCount, actualCount, wanted, lastInvocation);\n         }\n         \n         for (Invocation i : chunk) {", "timestamp": 1223980532, "metainfo": ""}