{"sha": "7862537386334b6495988ce5ebf1adf749009b3e", "log": "made a method static so that I can extract Invocation interface  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40507", "commit": "\n--- a/src/org/mockito/configuration/DefaultReturnValues.java\n+++ b/src/org/mockito/configuration/DefaultReturnValues.java\n public class DefaultReturnValues implements ReturnValues {\n     \n     public Object valueFor(Invocation invocation) {\n-        if (invocation.isToString()) {\n+        if (Invocation.isToString(invocation)) {\n             Object mock = invocation.getMock();\n             String mockDescription = \"Mock for \" + MockNamer.nameForMock(mock) + \", hashCode: \" + mock.hashCode();\n             return mockDescription;\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n         return matchers;\n     }\n \n-    public boolean isToString() {\n-        return method.getReturnType() == String.class \n-            && method.getParameterTypes().length == 0 \n-            && method.getName().equals(\"toString\");\n+    public static boolean isToString(Invocation invocation) {\n+        return invocation.getMethod().getReturnType() == String.class \n+            && invocation.getMethod().getParameterTypes().length == 0 \n+            && invocation.getMethod().getName().equals(\"toString\");\n     }\n }\n--- a/src/org/mockito/internal/verification/RegisteredInvocations.java\n+++ b/src/org/mockito/internal/verification/RegisteredInvocations.java\n     \n     private static class RemoveToString implements Filter<Invocation> {\n         public boolean isOut(Invocation invocation) {\n-            return invocation.isToString();\n+            return Invocation.isToString(invocation);\n         }\n     }\n }\n--- a/test/org/mockito/internal/invocation/InvocationTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationTest.java\n     @Test\n     public void shouldKnowIfIsToString() throws Exception {\n         Invocation toString = new InvocationBuilder().method(\"toString\").toInvocation();\n-        assertTrue(toString.isToString());\n+        assertTrue(Invocation.isToString(toString));\n         \n         Invocation notToString = new InvocationBuilder().method(\"toString\").arg(\"foo\").toInvocation();\n-        assertFalse(notToString.isToString());\n+        assertFalse(Invocation.isToString(notToString));\n     }\n }", "timestamp": 1206388653, "metainfo": ""}