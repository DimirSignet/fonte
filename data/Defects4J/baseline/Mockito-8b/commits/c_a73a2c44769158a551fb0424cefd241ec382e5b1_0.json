{"sha": "a73a2c44769158a551fb0424cefd241ec382e5b1", "log": "Merged previous work", "commit": "\n--- a/src/org/mockito/BDDMockito.java\n+++ b/src/org/mockito/BDDMockito.java\n         BDDStubber willThrow(Class<? extends Throwable> toBeThrown);\n \n         /**\n+         * See original {@link Stubber#doCallRealMethod()}\n+         */\n+        BDDStubber willCallRealMethod();\n+\n+        /**\n          * See original {@link Stubber#when(Object)}\n          */\n         <T> T given(T mock);\n          */\n         public BDDStubber willThrow(Class<? extends Throwable> toBeThrown) {\n             return new BDDStubberImpl(mockitoStubber.doThrow(toBeThrown));\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see BDDMockito.BDDStubber#willCallRealMethod()\n+         */\n+        public BDDStubber willCallRealMethod() {\n+            return new BDDStubberImpl(mockitoStubber.doCallRealMethod());\n         }\n     }\n     \n--- a/src/org/mockito/InjectMocks.java\n+++ b/src/org/mockito/InjectMocks.java\n  * a parameterized constructor only or a no-arg constructor only, or both.\n  * All these constructors can be package protected, protected or private, however\n  * <u>Mockito cannot instantiate inner classes, local classes, abstract classes and of course interfaces.</u>\n+ * <u>Beware of private nest static classes too.</u>\n  *\n  * <p>The same stands for setters or fields, they can be declared with private\n  * visibility, Mockito will see them through reflection.\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n                 \"1. you stub either of: final/private/equals()/hashCode() methods.\",\n                 \"   Those methods *cannot* be stubbed/verified.\",\n                 \"2. inside when() you don't call method on mock but on some other object.\",\n+                \"3. the parent of the mocked class is not public.\",\n+                \"   It is a limitation of the mock engine.\",\n                 \"\"\n         ));\n     }\n--- a/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n import org.mockito.configuration.AnnotationEngine;\n import org.mockito.exceptions.Reporter;\n import org.mockito.exceptions.base.MockitoException;\n+import org.mockito.internal.util.MockUtil;\n+import org.mockito.internal.util.reflection.FieldReader;\n \n import java.lang.annotation.Annotation;\n import java.lang.reflect.Field;\n  */\n @SuppressWarnings({\"deprecation\", \"unchecked\"})\n public class InjectingAnnotationEngine implements AnnotationEngine {\n-    \n+    MockUtil mockUtil = new MockUtil();\n     AnnotationEngine delegate = new DefaultAnnotationEngine();\n     AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();\n \n \n     /**\n      * Initializes mock/spies dependencies for objects annotated with\n-     * &#064;InjectMocks for given testClass.\n+     * &#064;InjectMocks for given testClassInstance.\n      * <p>\n      * See examples in javadoc for {@link MockitoAnnotations} class.\n      * \n-     * @param testClass\n+     * @param testClassInstance\n      *            Test class, usually <code>this</code>\n      */\n-    public void injectMocks(final Object testClass) {\n-        Class<?> clazz = testClass.getClass();\n+    public void injectMocks(final Object testClassInstance) {\n+        Class<?> clazz = testClassInstance.getClass();\n         Set<Field> mockDependentFields = new HashSet<Field>();\n         Set<Object> mocks = new HashSet<Object>();\n         \n         while (clazz != Object.class) {\n-            mockDependentFields.addAll(scanForInjection(testClass, clazz));\n-            mocks.addAll(scanMocks(testClass, clazz));\n+            mockDependentFields.addAll(scanForInjection(testClassInstance, clazz));\n+            mocks.addAll(scanMocks(testClassInstance, clazz));\n             clazz = clazz.getSuperclass();\n         }\n         \n-        new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClass);\n+        new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance);\n     }\n \n     /**\n      * Scan fields annotated by &#064;InjectMocks\n      *\n-     * @param testClass\n-     * @param clazz\n-     * @return\n+     * @param testClassInstance Instance of the test\n+     * @param clazz Current class in the hierarchy of the test\n+     * @return Fields that depends on Mock\n      */\n-    private Set<Field> scanForInjection(final Object testClass, final Class<?> clazz) {\n+    private Set<Field> scanForInjection(final Object testClassInstance, final Class<?> clazz) {\n         Set<Field> mockDependentFields = new HashSet<Field>();\n         Field[] fields = clazz.getDeclaredFields();\n         for (Field field : fields) {\n         return mockDependentFields;\n     }\n \n-    private Set<Object> scanMocks(final Object testClass, final Class<?> clazz) {\n+    private Set<Object> scanMocks(final Object testClassInstance, final Class<?> clazz) {\n         Set<Object> mocks = new HashSet<Object>();\n         for (Field field : clazz.getDeclaredFields()) {\n             // mock or spies only\n-            if (null != field.getAnnotation(Spy.class) || null != field.getAnnotation(org.mockito.Mock.class)\n-                    || null != field.getAnnotation(org.mockito.MockitoAnnotations.Mock.class)) {\n-                Object fieldInstance = null;\n-                boolean wasAccessible = field.isAccessible();\n-                field.setAccessible(true);\n-                try {\n-                    fieldInstance = field.get(testClass);\n-                } catch (IllegalAccessException e) {\n-                    throw new MockitoException(\"Problems reading this field dependency \" + field.getName() + \" for injection\", e);\n-                } finally {\n-                    field.setAccessible(wasAccessible);\n-                }\n+            FieldReader fieldReader = new FieldReader(testClassInstance, field);\n+            if (containsMockOrSpy(field, fieldReader)) {\n+                Object fieldInstance = fieldReader.read();\n+//                boolean wasAccessible = field.isAccessible();\n+//                field.setAccessible(true);\n+//                try {\n+//                    fieldInstance = field.get(testClassInstance);\n+//                } catch (IllegalAccessException e) {\n+//                    throw new MockitoException(\"Problems reading this field dependency \" + field.getName() + \" for injection\", e);\n+//                } finally {\n+//                    field.setAccessible(wasAccessible);\n+//                }\n                 if (fieldInstance != null) {\n                     mocks.add(fieldInstance);\n                 }\n         }\n         return mocks;\n     }\n+\n+    private boolean containsMockOrSpy(Field field, FieldReader fieldReader) {\n+        return null != field.getAnnotation(Spy.class)\n+                || null != field.getAnnotation(Mock.class)\n+                || null != field.getAnnotation(MockitoAnnotations.Mock.class)\n+                || mockUtil.isMock(fieldReader.read())\n+                || mockUtil.isSpy(fieldReader.read());\n+    }\n }\n--- a/src/org/mockito/internal/configuration/injection/ConstructorInjection.java\n+++ b/src/org/mockito/internal/configuration/injection/ConstructorInjection.java\n             SimpleArgumentResolver simpleArgumentResolver = new SimpleArgumentResolver(mockCandidates);\n             FieldInitializationReport report = new FieldInitializer(fieldOwner, field, simpleArgumentResolver).initialize();\n \n-            return report.fieldWasInitialized();\n+            return report.fieldWasInitializedUsingContructorArgs();\n         } catch (MockitoException e) {\n             if(e.getCause() instanceof InvocationTargetException) {\n                 Throwable realCause = e.getCause().getCause();\n                 new Reporter().fieldInitialisationThrewException(field, realCause);\n             }\n+            // other causes should be fine\n             return false;\n         }\n \n--- a/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n+++ b/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n  */\n package org.mockito.internal.creation.jmock;\n \n-import java.lang.reflect.*;\n-import java.util.List;\n-\n-import org.mockito.cglib.core.*;\n+import org.mockito.cglib.core.CodeGenerationException;\n+import org.mockito.cglib.core.NamingPolicy;\n+import org.mockito.cglib.core.Predicate;\n import org.mockito.cglib.proxy.*;\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.configuration.GlobalConfiguration;\n import org.mockito.internal.creation.cglib.MockitoNamingPolicy;\n import org.objenesis.ObjenesisStd;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.util.List;\n+\n+import static org.mockito.internal.util.StringJoiner.join;\n \n /**\n  * Thanks to jMock guys for this handy class that wraps all the cglib magic. \n             setConstructorsAccessible(mockedType, true);\n             Class<?> proxyClass = createProxyClass(mockedType, ancillaryTypes);\n             return mockedType.cast(createProxy(proxyClass, interceptor));\n+        } catch (ClassCastException cce) {\n+            throw new MockitoException(join(\n+                \"ClassCastException occurred when creating the proxy.\",\n+                \"You might experience classloading issues, disabling the Objenesis cache *might* help (see MockitoConfiguration)\"\n+            ), cce);\n         } finally {\n             setConstructorsAccessible(mockedType, false);\n         }\n--- a/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n+++ b/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n     public Object invokedMock() {\n         return invocationForStubbing.getInvocation().getMock();\n     }\n+    \n+    public InvocationMatcher getInvocationForStubbing() {\n+    \treturn invocationForStubbing;\n+    }\n }\n--- a/src/org/mockito/internal/stubbing/StubberImpl.java\n+++ b/src/org/mockito/internal/stubbing/StubberImpl.java\n package org.mockito.internal.stubbing;\n \n import org.mockito.exceptions.Reporter;\n-import org.mockito.internal.stubbing.answers.DoesNothing;\n-import org.mockito.internal.stubbing.answers.Returns;\n-import org.mockito.internal.stubbing.answers.ThrowsException;\n-import org.mockito.internal.stubbing.answers.ThrowsExceptionClass;\n+import org.mockito.internal.stubbing.answers.*;\n import org.mockito.internal.util.MockUtil;\n import org.mockito.stubbing.Answer;\n import org.mockito.stubbing.Stubber;\n         answers.add(answer);\n         return this;\n     }\n+\n+    public Stubber doCallRealMethod() {\n+        answers.add(new CallsRealMethods());\n+        return this;\n+    }\n }\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n  */\n package org.mockito.internal.stubbing.defaultanswers;\n \n+import java.io.Serializable;\n+\n import org.mockito.Mockito;\n import org.mockito.internal.MockHandlerInterface;\n import org.mockito.internal.stubbing.InvocationContainerImpl;\n+import org.mockito.internal.stubbing.StubbedInvocationMatcher;\n import org.mockito.internal.util.MockCreationValidator;\n import org.mockito.internal.util.MockUtil;\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n-\n-import java.io.Serializable;\n \n public class ReturnsDeepStubs implements Answer<Object>, Serializable {\n     \n         return getMock(invocation);\n     }\n \n-    private Object getMock(InvocationOnMock invocation) {\n+    private Object getMock(InvocationOnMock invocation) throws Throwable {\n+    \tMockHandlerInterface<Object> handler = new MockUtil().getMockHandler(invocation.getMock());\n+    \tInvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();\n+\n+        // matches invocation for verification\n+        for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {\n+    \t\tif(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {\n+    \t\t\treturn stubbedInvocationMatcher.answer(invocation);\n+    \t\t}\n+\t\t}\n+\n+        // deep stub\n+        return recordDeepStubMock(invocation, container);\n+    }\n+\n+    private Object recordDeepStubMock(InvocationOnMock invocation, InvocationContainerImpl container) {\n         Class<?> clz = invocation.getMethod().getReturnType();\n         final Object mock = Mockito.mock(clz, this);\n \n-        MockHandlerInterface<Object> handler = new MockUtil().getMockHandler(invocation.getMock());\n-        InvocationContainerImpl container = (InvocationContainerImpl)handler.getInvocationContainer();\n         container.addAnswer(new Answer<Object>() {\n             public Object answer(InvocationOnMock invocation) throws Throwable {\n                 return mock;\n--- a/src/org/mockito/internal/util/ArrayUtils.java\n+++ b/src/org/mockito/internal/util/ArrayUtils.java\n \n @SuppressWarnings(\"unchecked\")\n public class ArrayUtils {\n-    public Class<?>[] concat(Class<?>[] interfaces, Class<?> clazz) {\n-        int length = interfaces.length;\n-        Class[] out = new Class[length +1];\n-        System.arraycopy(interfaces, 0, out, 0, length);\n-        out[length] = clazz;\n+    public Class<?>[] concat(Class<?>[] interfaces, Class<?>... clazz) {\n+        int interfacesCount = interfaces.length;\n+        int appendedCount = clazz.length;\n+        Class[] out = new Class[interfacesCount + appendedCount];\n+        System.arraycopy(interfaces, 0, out, 0, interfacesCount);\n+        System.arraycopy(clazz, 0, out, interfacesCount, appendedCount);\n         return out;\n     }\n }\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n         settings.initiateMockName(classToMock);\n \n         MethodInterceptorFilter filter = newMethodInterceptorFilter(settings);\n+        Class<?>[] ancillaryTypes = prepareAncillaryTypes(settings);\n+\n+\n+        T mock = ClassImposterizer.INSTANCE.imposterise(filter, classToMock, ancillaryTypes);\n+\n+        Object spiedInstance = settings.getSpiedInstance();\n+        if (spiedInstance != null) {\n+            new LenientCopyTool().copyToMock(spiedInstance, mock);\n+        }\n+        \n+        return mock;\n+    }\n+\n+    private Class<?>[] prepareAncillaryTypes(MockSettingsImpl settings) {\n         Class<?>[] interfaces = settings.getExtraInterfaces();\n \n         Class<?>[] ancillaryTypes;\n         } else {\n             ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;\n         }\n-\n-        Object spiedInstance = settings.getSpiedInstance();\n-        \n-        T mock = ClassImposterizer.INSTANCE.imposterise(filter, classToMock, ancillaryTypes);\n-        \n-        if (spiedInstance != null) {\n-            new LenientCopyTool().copyToMock(spiedInstance, mock);\n+        if (settings.getSpiedInstance() != null) {\n+            ancillaryTypes = new ArrayUtils().concat(ancillaryTypes, MockitoSpy.class);\n         }\n-        \n-        return mock;\n+        return ancillaryTypes;\n     }\n \n     public <T> void resetMock(T mock) {\n         }\n     }\n \n+    public boolean isMock(Object mock) {\n+        return mock != null && isMockitoMock(mock);\n+    }\n+\n+    public boolean isSpy(Object mock) {\n+        return mock instanceof MockitoSpy && isMock(mock);\n+    }\n+\n     private <T> boolean isMockitoMock(T mock) {\n         return getInterceptor(mock) != null;\n-    }\n-\n-    public boolean isMock(Object mock) {\n-        return mock != null && isMockitoMock(mock);\n     }\n \n     private <T> MethodInterceptorFilter getInterceptor(T mock) {\n--- /dev/null\n+++ b/src/org/mockito/internal/util/MockitoSpy.java\n+package org.mockito.internal.util;\n+\n+/**\n+ * Mark internally a MockitoSpy.\n+ *\n+ * To be used un conjunction with {@link MockUtil#isMock(Object)}\n+ */\n+public interface MockitoSpy {\n+}\n--- a/src/org/mockito/internal/util/reflection/FieldInitializationReport.java\n+++ b/src/org/mockito/internal/util/reflection/FieldInitializationReport.java\n \n package org.mockito.internal.util.reflection;\n \n+/**\n+ * Report on field initialization\n+ */\n public class FieldInitializationReport {\n     private Object fieldInstance;\n     private boolean wasInitialized;\n+    private boolean wasInitializedUsingConstructorArgs;\n \n-    public FieldInitializationReport(Object fieldInstance, boolean wasInitialized) {\n+    public FieldInitializationReport(Object fieldInstance, boolean wasInitialized, boolean wasInitializedUsingConstructorArgs) {\n         this.fieldInstance = fieldInstance;\n         this.wasInitialized = wasInitialized;\n+        this.wasInitializedUsingConstructorArgs = wasInitializedUsingConstructorArgs;\n     }\n \n+    /**\n+     * Returns the actual field instance.\n+     *\n+     * @return the actual instance\n+     */\n     public Object fieldInstance() {\n         return fieldInstance;\n     }\n \n+    /**\n+     * Indicate wether the field was created during the process or not.\n+     *\n+     * @return <code>true</code> if created, <code>false</code> if the field did already hold an instance.\n+     */\n     public boolean fieldWasInitialized() {\n         return wasInitialized;\n     }\n \n+    /**\n+     * Indicate wether the field was created using constructor args.\n+     *\n+     * @return <code>true</code> if field was created using constructor parameters.\n+     */\n+    public boolean fieldWasInitializedUsingContructorArgs() {\n+        return wasInitializedUsingConstructorArgs;\n+    }\n+\n+    /**\n+     * Returns the class of the actual instance in the field.\n+     *\n+     * @return Class of the instance\n+     */\n     public Class<?> fieldClass() {\n         return fieldInstance != null ? fieldInstance.getClass() : null;\n     }\n--- a/src/org/mockito/internal/util/reflection/FieldInitializer.java\n+++ b/src/org/mockito/internal/util/reflection/FieldInitializer.java\n      *\n      * @param fieldOwner Instance of the test.\n      * @param field Field to be initialize.\n+     * @param argResolver Constructor parameters resolver\n      */\n     public FieldInitializer(Object fieldOwner, Field field, ConstructorArgumentResolver argResolver) {\n         this(fieldOwner, field, new ParameterizedConstructorInstantiator(fieldOwner, field, argResolver));\n     }\n \n     /**\n-     * Initialize field if no initialized and return the actual instance.\n+     * Initialize field if not initialized and return the actual instance.\n      *\n      * @return Actual field instance.\n      */\n     private FieldInitializationReport acquireFieldInstance() throws IllegalAccessException {\n         Object fieldInstance = field.get(fieldOwner);\n         if(fieldInstance != null) {\n-            return new FieldInitializationReport(fieldInstance, false);\n-        }\n-\n-        instantiator.instantiate();\n-        return new FieldInitializationReport(field.get(fieldOwner), true);\n+            return new FieldInitializationReport(fieldInstance, false, false);\n+        }\n+\n+        return instantiator.instantiate();\n     }\n \n     /**\n     }\n \n     private interface ConstructorInstantiator {\n-        Object instantiate();\n+        FieldInitializationReport instantiate();\n     }\n \n     /**\n             this.field = field;\n         }\n \n-        public Object instantiate() {\n+        public FieldInitializationReport instantiate() {\n             final AccessibilityChanger changer = new AccessibilityChanger();\n             Constructor<?> constructor = null;\n             try {\n                 Object newFieldInstance = constructor.newInstance(noArg);\n                 new FieldSetter(testClass, field).set(newFieldInstance);\n \n-                return field.get(testClass);\n+                return new FieldInitializationReport(field.get(testClass), true, false);\n             } catch (NoSuchMethodException e) {\n                 throw new MockitoException(\"the type '\" + field.getType().getSimpleName() + \"' has no default constructor\", e);\n             } catch (InvocationTargetException e) {\n             this.argResolver = argumentResolver;\n         }\n \n-        public Object instantiate() {\n+        public FieldInitializationReport instantiate() {\n             final AccessibilityChanger changer = new AccessibilityChanger();\n             Constructor<?> constructor = null;\n             try {\n                 Object newFieldInstance = constructor.newInstance(args);\n                 new FieldSetter(testClass, field).set(newFieldInstance);\n \n-                return field.get(testClass);\n+                return new FieldInitializationReport(field.get(testClass), false, true);\n             } catch (IllegalArgumentException e) {\n                 throw new MockitoException(\"internal error : argResolver provided incorrect types for constructor \" + constructor + \" of type \" + field.getType().getSimpleName(), e);\n             } catch (InvocationTargetException e) {\n--- a/src/org/mockito/stubbing/Stubber.java\n+++ b/src/org/mockito/stubbing/Stubber.java\n      * \n      *  See examples in javadoc for {@link Mockito}\n      * \n-     * @param mock\n+     * @param mock The mock\n      * @return select method for stubbing\n      */\n     <T> T when(T mock);\n      * @return stubber - to select a method for stubbing\n      */\n     Stubber doReturn(Object toBeReturned);\n+\n+    /**\n+     * Use it for stubbing consecutive calls in {@link Mockito#doCallRealMethod()} style.\n+     * <p>\n+     * See javadoc for {@link Mockito#doCallRealMethod()}\n+     *\n+     * @return stubber - to select a method for stubbing\n+     */\n+    Stubber doCallRealMethod();\n }\n--- a/test/org/mockito/internal/util/ArrayUtilsTest.java\n+++ b/test/org/mockito/internal/util/ArrayUtilsTest.java\n import java.io.Serializable;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n \n public class ArrayUtilsTest extends TestBase {\n \n     }\n \n     @Test\n-    public void shouldConcatenateItemToFullArray() throws Exception {\n+    public void shouldConcatenateItemsToFullArray() throws Exception {\n         //when\n-        Class<?>[] items = utils.concat(new Class[] {Serializable.class, Map.class}, List.class);\n+        Class<?>[] items = utils.concat(new Class[] {Serializable.class, Map.class}, List.class, Set.class);\n \n         //then\n-        Assertions.assertThat(items).containsOnly(Serializable.class, Map.class, List.class);\n+        Assertions.assertThat(items).containsOnly(Serializable.class, Map.class, List.class, Set.class);\n     }\n }\n--- a/test/org/mockito/internal/util/MockUtilTest.java\n+++ b/test/org/mockito/internal/util/MockUtilTest.java\n         assertFalse(mockUtil.isMock(\"i mock a mock\"));\n         assertTrue(mockUtil.isMock(Mockito.mock(List.class)));\n     }\n+\n+    @Test\n+    public void shouldValidateSpy() {\n+        assertFalse(mockUtil.isSpy(\"i mock a mock\"));\n+        assertFalse(mockUtil.isSpy(Mockito.mock(List.class)));\n+        assertTrue(mockUtil.isSpy(Mockito.spy(new ArrayList())));\n+    }\n }\n--- a/test/org/mockito/internal/util/reflection/FieldInitializerTest.java\n+++ b/test/org/mockito/internal/util/reflection/FieldInitializerTest.java\n \n         assertSame(backupInstance, report.fieldInstance());\n         assertFalse(report.fieldWasInitialized());\n+        assertFalse(report.fieldWasInitializedUsingContructorArgs());\n     }\n \n     @Test\n \n         assertNotNull(report.fieldInstance());\n         assertTrue(report.fieldWasInitialized());\n+        assertFalse(report.fieldWasInitializedUsingContructorArgs());\n     }\n \n     @Test\n \n         assertNotNull(report.fieldInstance());\n         assertTrue(report.fieldWasInitialized());\n+        assertFalse(report.fieldWasInitializedUsingContructorArgs());\n     }\n \n     @Test\n \n         assertNotNull(report.fieldInstance());\n         assertTrue(report.fieldWasInitialized());\n+        assertFalse(report.fieldWasInitializedUsingContructorArgs());\n     }\n \n     @Test(expected = MockitoException.class)\n--- /dev/null\n+++ b/test/org/mockitousage/annotation/InjectionOfInlinedMockDeclarationTest.java\n+package org.mockitousage.annotation;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class InjectionOfInlinedMockDeclarationTest {\n+\n+    @InjectMocks private Receiver receiver;\n+    @InjectMocks private Receiver spiedReceiver = spy(new Receiver());\n+\n+    private Antena antena = mock(Antena.class);\n+    private Tuner tuner = spy(new Tuner());\n+\n+    @Test\n+    public void mock_declared_fields_shall_be_injected_too() throws Exception {\n+        assertNotNull(receiver.antena);\n+        assertNotNull(receiver.tuner);\n+    }\n+\n+    @Test\n+    public void inject_mocks_even_in_declared_spy() throws Exception {\n+        assertNotNull(spiedReceiver.antena);\n+        assertNotNull(spiedReceiver.tuner);\n+    }\n+\n+    // note that static class is not private !!\n+    static class Receiver {\n+        Antena antena;\n+        Tuner tuner;\n+\n+        public boolean tune() { return true; }\n+    }\n+\n+    private static class Antena { }\n+    private static class Tuner { }\n+\n+}\n--- a/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n+++ b/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n  */\n package org.mockitousage.bugs;\n \n+import static org.fest.assertions.Assertions.assertThat;\n import static org.mockito.Mockito.*;\n \n import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mockito;\n+import org.mockito.exceptions.misusing.MissingMethodInvocationException;\n \n //see bug 212\n-@Ignore //needs fixing\n+// @Ignore(\"needs fixing\")\n public class ParentClassNotPublicVeryWeirdBugTest {\n     \n     class SuperClass {\n     }\n     \n     @Test\n-    public void isValidMocked() {\n+    @Ignore(\"needs fixing\")\n+    public void is_valid_mocked() {\n         ClassForMocking clazzMock = mock(ClassForMocking.class);\n         Mockito.when(clazzMock.isValid()).thenReturn(true);\n     }\n+\n+    @Test\n+    public void report_why_this_exception_happen() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        try {\n+            Mockito.when(clazzMock.isValid()).thenReturn(true);\n+        } catch (MissingMethodInvocationException e) {\n+            assertThat(e.getMessage())\n+                    .contains(\"the parent of the mocked class is not public.\")\n+                    .contains(\"It is a limitation of the mock engine\");\n+        }\n+    }\n }\n--- a/test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java\n+++ b/test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java\n \n import org.fest.assertions.Condition;\n import org.junit.Test;\n+import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.configuration.ConfigurationAccess;\n \n import java.net.MalformedURLException;\n \n         try {\n             doInNewChildRealm(testMethodClassLoaderRealm, \"org.mockitousage.configuration.ClassCacheVersusClassReloadingTest$DoTheMocking\");\n-            fail(\"should have raised a ClasCastException when Objenis Cache is enabled\");\n-        } catch (ClassCastException e) {\n-            assertThat(e).satisfies(thatCceIsThrownFrom(\"org.mockito.internal.creation.jmock.ClassImposterizer.imposterise\"));\n+            fail(\"should have raised a ClassCastException when Objenis Cache is enabled\");\n+        } catch (MockitoException e) {\n+            assertThat(e.getMessage())\n+                    .containsIgnoringCase(\"classloading\")\n+                    .containsIgnoringCase(\"objenesis\")\n+                    .containsIgnoringCase(\"MockitoConfiguration\");\n+            assertThat(e.getCause())\n+                    .satisfies(thatCceIsThrownFrom(\"java.lang.Class.cast\"))\n+                    .satisfies(thatCceIsThrownFrom(\"org.mockito.internal.creation.jmock.ClassImposterizer.imposterise\"));\n         }\n     }\n \n         return new Condition<Throwable>() {\n             @Override\n             public boolean matches(Throwable throwable) {\n-                return throwable.getStackTrace()[1].toString().contains(stacktraceElementDescription);\n+                StackTraceElement[] stackTrace = throwable.getStackTrace();\n+                for (StackTraceElement stackTraceElement : stackTrace) {\n+                    if (stackTraceElement.toString().contains(stacktraceElementDescription)) {\n+                        return true;\n+                    }\n+                }\n+\n+                return false;\n             }\n         };\n     }\n \n     public static class DoTheMocking implements Callable {\n         public Object call() throws Exception {\n-            Class clazz = this.getClass().getClassLoader().loadClass(\"org.mockitousage.MethodsImpl\");\n+            Class clazz = this.getClass().getClassLoader().loadClass(\"org.mockitousage.configuration.ClassToBeMocked\");\n             return mock(clazz);\n         }\n     }\n         return new SimplePerRealmReloadingClassLoader.ReloadClassPredicate() {\n             public boolean needReload(String qualifiedName) {\n                 return \"org.mockitousage.configuration.ClassCacheVersusClassReloadingTest$DoTheMocking\".equals(qualifiedName)\n-                    || \"org.mockitousage.MethodsImpl\".equals(qualifiedName);\n+                    || \"org.mockitousage.configuration.ClassToBeMocked\".equals(qualifiedName);\n             }\n         };\n     }\n     private static SimplePerRealmReloadingClassLoader.ReloadClassPredicate reloadMockito() {\n         return new SimplePerRealmReloadingClassLoader.ReloadClassPredicate() {\n             public boolean needReload(String qualifiedName) {\n-                return qualifiedName.contains(\"org.mockito\")\n-                        && !qualifiedName.contains(\"org.mockito.cglib\");\n+                return (!qualifiedName.contains(\"org.mockito.cglib\") && qualifiedName.contains(\"org.mockito\"));\n             }\n         };\n     }\n         public SimplePerRealmReloadingClassLoader(ClassLoader parentClassLoader, ReloadClassPredicate reloadClassPredicate) {\n             super(new URL[]{\n                     obtainClassPath(),\n-                    obtainClassPath(\"org.mockito.Mockito\")\n+                    obtainClassPath(\"org.mockito.Mockito\"),\n             }, parentClassLoader);\n             this.reloadClassPredicate = reloadClassPredicate;\n         }\n         public Class<?> loadClass(String qualifiedName) throws ClassNotFoundException {\n             if(reloadClassPredicate.needReload(qualifiedName)) {\n                 // return customLoadClass(qualifiedName);\n-                return findClass(qualifiedName);\n+                Class<?> foundClass = findClass(qualifiedName);\n+                return foundClass;\n             }\n             return super.loadClass(qualifiedName);\n         }\n--- /dev/null\n+++ b/test/org/mockitousage/configuration/ClassToBeMocked.java\n+package org.mockitousage.configuration;\n+\n+/**\n+ * Some class to mock\n+ */\n+public class ClassToBeMocked { }\n--- a/test/org/mockitousage/customization/BDDMockitoTest.java\n+++ b/test/org/mockitousage/customization/BDDMockitoTest.java\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n import org.mockitousage.IMethods;\n+import org.mockitousage.MethodsImpl;\n import org.mockitoutil.TestBase;\n \n import java.util.Set;\n        \n        assertEquals(\"foo\", mock.simpleMethod(\"whatever\"));\n        assertEquals(\"bar\", mock.simpleMethod(\"whatever\"));\n+    }\n+\n+    @Test\n+    public void shouldStubConsecutivelyWithCallRealMethod() throws Exception {\n+        MethodsImpl mock = mock(MethodsImpl.class);\n+        willReturn(\"foo\").willCallRealMethod()\n+                .given(mock).simpleMethod();\n+\n+       assertEquals(\"foo\", mock.simpleMethod());\n+       assertEquals(null, mock.simpleMethod());\n     }\n     \n     @Test\n--- a/test/org/mockitousage/stubbing/DeepStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/DeepStubbingTest.java\n  */\n package org.mockitousage.stubbing;\n \n-import static org.mockito.BDDMockito.*;\n+import static org.mockito.BDDMockito.given;\n+import static org.mockito.Matchers.anyInt;\n+import static org.mockito.Matchers.anyString;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.*;\n \n import java.io.ByteArrayOutputStream;\n import java.io.OutputStream;\n import java.net.Socket;\n+import java.util.Locale;\n \n import javax.net.SocketFactory;\n \n             return address;\n         }\n         \n+        public Address getAddress(String addressName) {\n+        \treturn address;\n+        }\n+        \n         public FinalClass getFinalClass() {\n             return null;\n         }\n         Street street;\n \n         public Street getStreet() {\n+            return street;\n+        }\n+\n+        public Street getStreet(Locale locale) {\n             return street;\n         }\n     }\n         \n         //then\n         verify(person.getAddress().getStreet()).getName();\n-    }   \n+    }\n+    \n+    @Test\n+\tpublic void shouldVerificationWorkWithArgumentMatchersInNestedCalls() throws Exception {\n+\t\t//given\n+    \tperson.getAddress(\"111 Mock Lane\").getStreet();\n+    \tperson.getAddress(\"111 Mock Lane\").getStreet(Locale.ITALIAN).getName();\n+\n+\t\t//then\n+    \tverify(person.getAddress(anyString())).getStreet();\n+    \tverify(person.getAddress(anyString()).getStreet(Locale.CHINESE), never()).getName();\n+    \tverify(person.getAddress(anyString()).getStreet(eq(Locale.ITALIAN))).getName();\n+\t}\n     \n     @Test\n     public void shouldFailGracefullyWhenClassIsFinal() throws Exception {\n--- a/test/org/mockitousage/stubbing/StubbingUsingDoReturnTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingUsingDoReturnTest.java\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n import org.mockitousage.IMethods;\n+import org.mockitousage.MethodsImpl;\n import org.mockitoutil.TestBase;\n \n import java.io.IOException;\n         \n         assertEquals(\"bar\", mock.simpleMethod());\n         assertEquals(\"bar\", mock.simpleMethod());\n+    }\n+\n+    @Test\n+    public void shouldAllowDoCallRealMethodInChainedStubbing() throws Exception {\n+        MethodsImpl methods = mock(MethodsImpl.class);\n+        doReturn(\"A\").doCallRealMethod()\n+                .when(methods).simpleMethod();\n+\n+        assertEquals(\"A\", methods.simpleMethod());\n+        assertEquals(null, methods.simpleMethod());\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n--- a/src/org/mockito/Answers.java\n+++ b/src/org/mockito/Answers.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.mockito.internal.stubbing.answers.CallsRealMethods;\n--- a/src/org/mockito/ArgumentCaptor.java\n+++ b/src/org/mockito/ArgumentCaptor.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import java.util.List;\n--- a/src/org/mockito/BDDMockito.java\n+++ b/src/org/mockito/BDDMockito.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.mockito.stubbing.Answer;\n--- a/src/org/mockito/Captor.java\n+++ b/src/org/mockito/Captor.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import java.lang.annotation.*;\n--- a/src/org/mockito/InjectMocks.java\n+++ b/src/org/mockito/InjectMocks.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import java.lang.annotation.Documented;\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.hamcrest.Matcher;\n--- a/src/org/mockito/Mock.java\n+++ b/src/org/mockito/Mock.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.mockito.runners.MockitoJUnitRunner;\n--- a/src/org/mockito/MockSettings.java\n+++ b/src/org/mockito/MockSettings.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.mockito.listeners.InvocationListener;\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.mockito.internal.MockitoCore;\n--- a/src/org/mockito/MockitoDebugger.java\n+++ b/src/org/mockito/MockitoDebugger.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n public interface MockitoDebugger {\n--- a/src/org/mockito/Spy.java\n+++ b/src/org/mockito/Spy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import java.lang.annotation.*;\n--- a/src/org/mockito/configuration/AnnotationEngine.java\n+++ b/src/org/mockito/configuration/AnnotationEngine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.configuration;\n \n import org.mockito.MockitoAnnotations;\n--- a/src/org/mockito/configuration/DefaultMockitoConfiguration.java\n+++ b/src/org/mockito/configuration/DefaultMockitoConfiguration.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.configuration;\n \n import org.mockito.ReturnValues;\n--- a/src/org/mockito/configuration/IMockitoConfiguration.java\n+++ b/src/org/mockito/configuration/IMockitoConfiguration.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.configuration;\n \n import org.mockito.ReturnValues;\n--- a/src/org/mockito/exceptions/Discrepancy.java\n+++ b/src/org/mockito/exceptions/Discrepancy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions;\n \n public class Discrepancy {\n--- a/src/org/mockito/exceptions/Pluralizer.java\n+++ b/src/org/mockito/exceptions/Pluralizer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions;\n \n public class Pluralizer {\n--- a/src/org/mockito/exceptions/misusing/MockitoConfigurationException.java\n+++ b/src/org/mockito/exceptions/misusing/MockitoConfigurationException.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions.misusing;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/exceptions/misusing/WrongTypeOfReturnValue.java\n+++ b/src/org/mockito/exceptions/misusing/WrongTypeOfReturnValue.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions.misusing;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/exceptions/verification/SmartNullPointerException.java\n+++ b/src/org/mockito/exceptions/verification/SmartNullPointerException.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions.verification;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n+++ b/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions.verification.junit;\n \n import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n--- a/src/org/mockito/internal/InvocationNotifierHandler.java\n+++ b/src/org/mockito/internal/InvocationNotifierHandler.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import org.mockito.internal.creation.MockSettingsImpl;\n--- a/src/org/mockito/internal/MockHandlerInterface.java\n+++ b/src/org/mockito/internal/MockHandlerInterface.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import java.util.List;\n--- a/src/org/mockito/internal/MockitoCore.java\n+++ b/src/org/mockito/internal/MockitoCore.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import org.mockito.InOrder;\n--- a/src/org/mockito/internal/MockitoInvocationHandler.java\n+++ b/src/org/mockito/internal/MockitoInvocationHandler.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/configuration/ClassPathLoader.java\n+++ b/src/org/mockito/internal/configuration/ClassPathLoader.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.configuration.IMockitoConfiguration;\n--- a/src/org/mockito/internal/configuration/DefaultAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultAnnotationEngine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.*;\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.internal.configuration.injection.MockInjection;\n--- a/src/org/mockito/internal/configuration/GlobalConfiguration.java\n+++ b/src/org/mockito/internal/configuration/GlobalConfiguration.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.ReturnValues;\n--- a/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.*;\n--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.*;\n--- a/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java\n+++ b/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration.injection.filter;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java\n+++ b/src/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration.injection.filter;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java\n+++ b/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration.injection.filter;\n \n import org.mockito.internal.util.MockUtil;\n--- a/src/org/mockito/internal/configuration/injection/filter/OngoingInjecter.java\n+++ b/src/org/mockito/internal/configuration/injection/filter/OngoingInjecter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration.injection.filter;\n \n /**\n--- a/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java\n+++ b/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration.injection.filter;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/creation/AbstractMockitoMethodProxy.java\n+++ b/src/org/mockito/internal/creation/AbstractMockitoMethodProxy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n public abstract class AbstractMockitoMethodProxy implements MockitoMethodProxy {\n--- a/src/org/mockito/internal/creation/DelegatingMethod.java\n+++ b/src/org/mockito/internal/creation/DelegatingMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import java.lang.reflect.Method;\n--- a/src/org/mockito/internal/creation/DelegatingMockitoMethodProxy.java\n+++ b/src/org/mockito/internal/creation/DelegatingMockitoMethodProxy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import org.mockito.cglib.proxy.MethodProxy;\n--- a/src/org/mockito/internal/creation/MockSettingsImpl.java\n+++ b/src/org/mockito/internal/creation/MockSettingsImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import org.mockito.MockSettings;\n--- a/src/org/mockito/internal/creation/MockitoMethodProxy.java\n+++ b/src/org/mockito/internal/creation/MockitoMethodProxy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import org.mockito.cglib.proxy.MethodProxy;\n--- a/src/org/mockito/internal/creation/SerializableMockitoMethodProxy.java\n+++ b/src/org/mockito/internal/creation/SerializableMockitoMethodProxy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/creation/cglib/CGLIBHacker.java\n+++ b/src/org/mockito/internal/creation/cglib/CGLIBHacker.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.cglib;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/creation/cglib/MockitoNamingPolicy.java\n+++ b/src/org/mockito/internal/creation/cglib/MockitoNamingPolicy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.cglib;\n \n import org.mockito.cglib.core.DefaultNamingPolicy;\n--- a/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n+++ b/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.jmock;\n \n import org.mockito.cglib.core.CodeGenerationException;\n--- a/src/org/mockito/internal/creation/jmock/SearchingClassLoader.java\n+++ b/src/org/mockito/internal/creation/jmock/SearchingClassLoader.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.jmock;\n \n import static java.lang.Thread.*;\n--- a/src/org/mockito/internal/creation/jmock/SerializableNoOp.java\n+++ b/src/org/mockito/internal/creation/jmock/SerializableNoOp.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.jmock;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/debugging/FindingsListener.java\n+++ b/src/org/mockito/internal/debugging/FindingsListener.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/debugging/Localized.java\n+++ b/src/org/mockito/internal/debugging/Localized.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n \n--- a/src/org/mockito/internal/debugging/Location.java\n+++ b/src/org/mockito/internal/debugging/Location.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/debugging/LoggingListener.java\n+++ b/src/org/mockito/internal/debugging/LoggingListener.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n+++ b/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.MockitoDebugger;\n--- a/src/org/mockito/internal/debugging/WarningsCollector.java\n+++ b/src/org/mockito/internal/debugging/WarningsCollector.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/debugging/WarningsFinder.java\n+++ b/src/org/mockito/internal/debugging/WarningsFinder.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n+++ b/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import java.util.List;\n--- a/src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java\n+++ b/src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.exceptions;\n \n public class ExceptionIncludingMockitoWarnings extends RuntimeException {\n--- a/src/org/mockito/internal/exceptions/util/ScenarioPrinter.java\n+++ b/src/org/mockito/internal/exceptions/util/ScenarioPrinter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.exceptions.util;\n \n import java.util.List;\n--- a/src/org/mockito/internal/invocation/ArgumentsComparator.java\n+++ b/src/org/mockito/internal/invocation/ArgumentsComparator.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import org.hamcrest.Matcher;\n--- a/src/org/mockito/internal/invocation/CapturesArgumensFromInvocation.java\n+++ b/src/org/mockito/internal/invocation/CapturesArgumensFromInvocation.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n \n--- a/src/org/mockito/internal/invocation/InvocationMarker.java\n+++ b/src/org/mockito/internal/invocation/InvocationMarker.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import java.util.List;\n--- a/src/org/mockito/internal/invocation/MockitoMethod.java\n+++ b/src/org/mockito/internal/invocation/MockitoMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import java.lang.reflect.Method;\n--- a/src/org/mockito/internal/invocation/SerializableMethod.java\n+++ b/src/org/mockito/internal/invocation/SerializableMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/invocation/StubInfo.java\n+++ b/src/org/mockito/internal/invocation/StubInfo.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import org.mockito.exceptions.PrintableInvocation;\n--- a/src/org/mockito/internal/invocation/realmethod/CGLIBProxyRealMethod.java\n+++ b/src/org/mockito/internal/invocation/realmethod/CGLIBProxyRealMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation.realmethod;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java\n+++ b/src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation.realmethod;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/invocation/realmethod/HasCGLIBMethodProxy.java\n+++ b/src/org/mockito/internal/invocation/realmethod/HasCGLIBMethodProxy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation.realmethod;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/invocation/realmethod/RealMethod.java\n+++ b/src/org/mockito/internal/invocation/realmethod/RealMethod.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation.realmethod;\n \n \n--- a/src/org/mockito/internal/listeners/CollectCreatedMocks.java\n+++ b/src/org/mockito/internal/listeners/CollectCreatedMocks.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.listeners;\n \n import org.mockito.MockSettings;\n--- a/src/org/mockito/internal/listeners/MockingProgressListener.java\n+++ b/src/org/mockito/internal/listeners/MockingProgressListener.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.listeners;\n \n public interface MockingProgressListener {\n--- a/src/org/mockito/internal/listeners/MockingStartedListener.java\n+++ b/src/org/mockito/internal/listeners/MockingStartedListener.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.listeners;\n \n import org.mockito.MockSettings;\n--- a/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n+++ b/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.listeners;\n \n import org.mockito.exceptions.PrintableInvocation;\n--- a/src/org/mockito/internal/matchers/AnyVararg.java\n+++ b/src/org/mockito/internal/matchers/AnyVararg.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/matchers/CapturesArguments.java\n+++ b/src/org/mockito/internal/matchers/CapturesArguments.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n \n--- a/src/org/mockito/internal/matchers/CapturingMatcher.java\n+++ b/src/org/mockito/internal/matchers/CapturingMatcher.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/matchers/ContainsExtraTypeInformation.java\n+++ b/src/org/mockito/internal/matchers/ContainsExtraTypeInformation.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/matchers/Equality.java\n+++ b/src/org/mockito/internal/matchers/Equality.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.lang.reflect.Array;\n--- a/src/org/mockito/internal/matchers/LocalizedMatcher.java\n+++ b/src/org/mockito/internal/matchers/LocalizedMatcher.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/matchers/MatcherDecorator.java\n+++ b/src/org/mockito/internal/matchers/MatcherDecorator.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/matchers/MatchersPrinter.java\n+++ b/src/org/mockito/internal/matchers/MatchersPrinter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.util.LinkedList;\n--- a/src/org/mockito/internal/matchers/VarargMatcher.java\n+++ b/src/org/mockito/internal/matchers/VarargMatcher.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/progress/ArgumentMatcherStorage.java\n+++ b/src/org/mockito/internal/progress/ArgumentMatcherStorage.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n import java.util.List;\n--- a/src/org/mockito/internal/progress/HandyReturnValues.java\n+++ b/src/org/mockito/internal/progress/HandyReturnValues.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n import static org.mockito.internal.util.Primitives.*;\n--- a/src/org/mockito/internal/progress/IOngoingStubbing.java\n+++ b/src/org/mockito/internal/progress/IOngoingStubbing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n \n--- a/src/org/mockito/internal/progress/SequenceNumber.java\n+++ b/src/org/mockito/internal/progress/SequenceNumber.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n public class SequenceNumber {\n--- a/src/org/mockito/internal/reporting/PrintSettings.java\n+++ b/src/org/mockito/internal/reporting/PrintSettings.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.reporting;\n \n import java.util.Arrays;\n--- a/src/org/mockito/internal/reporting/PrintingFriendlyInvocation.java\n+++ b/src/org/mockito/internal/reporting/PrintingFriendlyInvocation.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.reporting;\n \n public interface PrintingFriendlyInvocation {\n--- a/src/org/mockito/internal/reporting/SmartPrinter.java\n+++ b/src/org/mockito/internal/reporting/SmartPrinter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.reporting;\n \n \n--- a/src/org/mockito/internal/runners/JUnit45AndHigherRunnerImpl.java\n+++ b/src/org/mockito/internal/runners/JUnit45AndHigherRunnerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners;\n \n import org.junit.runner.Description;\n--- a/src/org/mockito/internal/runners/RunnerFactory.java\n+++ b/src/org/mockito/internal/runners/RunnerFactory.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/internal/runners/RunnerImpl.java\n+++ b/src/org/mockito/internal/runners/RunnerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners;\n \n import org.junit.runner.Description;\n--- a/src/org/mockito/internal/runners/util/FrameworkUsageValidator.java\n+++ b/src/org/mockito/internal/runners/util/FrameworkUsageValidator.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners.util;\n \n import org.junit.runner.Description;\n--- a/src/org/mockito/internal/runners/util/RunnerProvider.java\n+++ b/src/org/mockito/internal/runners/util/RunnerProvider.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners.util;\n \n import java.lang.reflect.Constructor;\n--- a/src/org/mockito/internal/runners/util/TestMethodsFinder.java\n+++ b/src/org/mockito/internal/runners/util/TestMethodsFinder.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners.util;\n \n import org.junit.Test;\n--- a/src/org/mockito/internal/stubbing/BaseStubbing.java\n+++ b/src/org/mockito/internal/stubbing/BaseStubbing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.internal.stubbing.answers.CallsRealMethods;\n--- a/src/org/mockito/internal/stubbing/ConsecutiveStubbing.java\n+++ b/src/org/mockito/internal/stubbing/ConsecutiveStubbing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.stubbing.Answer;\n--- a/src/org/mockito/internal/stubbing/InvocationContainer.java\n+++ b/src/org/mockito/internal/stubbing/InvocationContainer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n+++ b/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/stubbing/OngoingStubbingImpl.java\n+++ b/src/org/mockito/internal/stubbing/OngoingStubbingImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/stubbing/StubbedInvocationMatcher.java\n+++ b/src/org/mockito/internal/stubbing/StubbedInvocationMatcher.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/StubberImpl.java\n+++ b/src/org/mockito/internal/stubbing/StubberImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/stubbing/VoidMethodStubbableImpl.java\n+++ b/src/org/mockito/internal/stubbing/VoidMethodStubbableImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.internal.stubbing.answers.DoesNothing;\n--- a/src/org/mockito/internal/stubbing/answers/AnswerReturnValuesAdapter.java\n+++ b/src/org/mockito/internal/stubbing/answers/AnswerReturnValuesAdapter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/answers/AnswersValidator.java\n+++ b/src/org/mockito/internal/stubbing/answers/AnswersValidator.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java\n+++ b/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/answers/ClonesArguments.java\n+++ b/src/org/mockito/internal/stubbing/answers/ClonesArguments.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;\n--- a/src/org/mockito/internal/stubbing/answers/DoesNothing.java\n+++ b/src/org/mockito/internal/stubbing/answers/DoesNothing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/answers/Returns.java\n+++ b/src/org/mockito/internal/stubbing/answers/Returns.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/answers/ThrowsException.java\n+++ b/src/org/mockito/internal/stubbing/answers/ThrowsException.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/Answers.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/Answers.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import org.mockito.Mockito;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/util/ArrayUtils.java\n+++ b/src/org/mockito/internal/util/ArrayUtils.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n @SuppressWarnings(\"unchecked\")\n--- a/src/org/mockito/internal/util/ConsoleMockitoLogger.java\n+++ b/src/org/mockito/internal/util/ConsoleMockitoLogger.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n public class ConsoleMockitoLogger implements MockitoLogger {\n--- a/src/org/mockito/internal/util/IdentitySet.java\n+++ b/src/org/mockito/internal/util/IdentitySet.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import java.util.LinkedList;\n--- a/src/org/mockito/internal/util/MockCreationValidator.java\n+++ b/src/org/mockito/internal/util/MockCreationValidator.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.mockito.exceptions.Reporter;\n--- a/src/org/mockito/internal/util/MockName.java\n+++ b/src/org/mockito/internal/util/MockName.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.mockito.cglib.proxy.Callback;\n--- a/src/org/mockito/internal/util/MockitoLogger.java\n+++ b/src/org/mockito/internal/util/MockitoLogger.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n public interface MockitoLogger {\n--- a/src/org/mockito/internal/util/ObjectMethodsGuru.java\n+++ b/src/org/mockito/internal/util/ObjectMethodsGuru.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/util/Primitives.java\n+++ b/src/org/mockito/internal/util/Primitives.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import java.util.HashMap;\n--- a/src/org/mockito/internal/util/RemoveFirstLine.java\n+++ b/src/org/mockito/internal/util/RemoveFirstLine.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n public class RemoveFirstLine {\n--- a/src/org/mockito/internal/util/SimpleMockitoLogger.java\n+++ b/src/org/mockito/internal/util/SimpleMockitoLogger.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n public class SimpleMockitoLogger extends ConsoleMockitoLogger {\n--- a/src/org/mockito/internal/util/junit/JUnitFailureHacker.java\n+++ b/src/org/mockito/internal/util/junit/JUnitFailureHacker.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.junit;\n \n import org.junit.runner.notification.Failure;\n--- a/src/org/mockito/internal/util/reflection/AccessibilityChanger.java\n+++ b/src/org/mockito/internal/util/reflection/AccessibilityChanger.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.AccessibleObject;\n--- a/src/org/mockito/internal/util/reflection/BeanPropertySetter.java\n+++ b/src/org/mockito/internal/util/reflection/BeanPropertySetter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.beans.BeanInfo;\n--- a/src/org/mockito/internal/util/reflection/FieldCopier.java\n+++ b/src/org/mockito/internal/util/reflection/FieldCopier.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/util/reflection/FieldInitializer.java\n+++ b/src/org/mockito/internal/util/reflection/FieldInitializer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/internal/util/reflection/FieldReader.java\n+++ b/src/org/mockito/internal/util/reflection/FieldReader.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.mockito.exceptions.base.MockitoException;\n--- a/src/org/mockito/internal/util/reflection/FieldSetter.java\n+++ b/src/org/mockito/internal/util/reflection/FieldSetter.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/util/reflection/GenericMaster.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMaster.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/util/reflection/LenientCopyTool.java\n+++ b/src/org/mockito/internal/util/reflection/LenientCopyTool.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/util/reflection/Whitebox.java\n+++ b/src/org/mockito/internal/util/reflection/Whitebox.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import java.lang.reflect.Field;\n--- a/src/org/mockito/internal/verification/InOrderContextImpl.java\n+++ b/src/org/mockito/internal/verification/InOrderContextImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/verification/InOrderWrapper.java\n+++ b/src/org/mockito/internal/verification/InOrderWrapper.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.internal.InOrderImpl;\n--- a/src/org/mockito/internal/verification/MockAwareVerificationMode.java\n+++ b/src/org/mockito/internal/verification/MockAwareVerificationMode.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.internal.verification.api.VerificationData;\n--- a/src/org/mockito/internal/verification/Only.java\n+++ b/src/org/mockito/internal/verification/Only.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import java.util.List;\n--- a/src/org/mockito/internal/verification/VerificationDataImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationDataImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import java.util.List;\n--- a/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.exceptions.base.MockitoAssertionError;\n--- a/src/org/mockito/internal/verification/api/InOrderContext.java\n+++ b/src/org/mockito/internal/verification/api/InOrderContext.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.api;\n \n import org.mockito.internal.invocation.Invocation;\n--- a/src/org/mockito/internal/verification/api/VerificationData.java\n+++ b/src/org/mockito/internal/verification/api/VerificationData.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.api;\n \n import java.util.List;\n--- a/src/org/mockito/internal/verification/api/VerificationDataInOrder.java\n+++ b/src/org/mockito/internal/verification/api/VerificationDataInOrder.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.api;\n \n import java.util.List;\n--- a/src/org/mockito/internal/verification/api/VerificationDataInOrderImpl.java\n+++ b/src/org/mockito/internal/verification/api/VerificationDataInOrderImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.api;\n \n import java.util.List;\n--- a/src/org/mockito/internal/verification/api/VerificationInOrderMode.java\n+++ b/src/org/mockito/internal/verification/api/VerificationInOrderMode.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.api;\n \n public interface VerificationInOrderMode {\n--- a/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n+++ b/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.argumentmatching;\n \n import java.util.LinkedList;\n--- a/src/org/mockito/internal/verification/checkers/AtLeastDiscrepancy.java\n+++ b/src/org/mockito/internal/verification/checkers/AtLeastDiscrepancy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.checkers;\n \n import org.mockito.exceptions.Discrepancy;\n--- a/src/org/mockito/listeners/MethodInvocationReport.java\n+++ b/src/org/mockito/listeners/MethodInvocationReport.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.listeners;\n \n import org.mockito.exceptions.PrintableInvocation;\n--- a/src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.runners;\n \n import java.lang.reflect.InvocationTargetException;\n--- a/src/org/mockito/runners/MockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/MockitoJUnitRunner.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.runners;\n \n import org.junit.runner.Description;\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.runners;\n \n import java.lang.reflect.InvocationTargetException;\n--- a/src/org/mockito/stubbing/Answer.java\n+++ b/src/org/mockito/stubbing/Answer.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing;\n \n import org.mockito.invocation.InvocationOnMock;\n--- a/src/org/mockito/stubbing/DeprecatedOngoingStubbing.java\n+++ b/src/org/mockito/stubbing/DeprecatedOngoingStubbing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing;\n \n import org.mockito.Mockito;\n--- a/src/org/mockito/stubbing/OngoingStubbing.java\n+++ b/src/org/mockito/stubbing/OngoingStubbing.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing;\n \n import org.mockito.Mockito;\n--- a/src/org/mockito/stubbing/Stubber.java\n+++ b/src/org/mockito/stubbing/Stubber.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing;\n \n import org.mockito.Mockito;\n--- a/src/org/mockito/stubbing/VoidMethodStubbable.java\n+++ b/src/org/mockito/stubbing/VoidMethodStubbable.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing;\n \n import org.mockito.Mockito;\n--- a/src/org/mockito/stubbing/answers/ReturnsElementsOf.java\n+++ b/src/org/mockito/stubbing/answers/ReturnsElementsOf.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.stubbing.answers;\n \n import java.util.Collection;\n--- a/src/org/mockito/verification/Timeout.java\n+++ b/src/org/mockito/verification/Timeout.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.verification;\n \n import org.mockito.exceptions.Reporter;\n--- a/test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java\n+++ b/test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.concurrentmockito;\n import java.util.LinkedList;\n import java.util.List;\n--- a/test/org/mockito/ArgumentCaptorTest.java\n+++ b/test/org/mockito/ArgumentCaptorTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito;\n \n import org.junit.After;\n--- a/test/org/mockito/configuration/MockitoConfiguration.java\n+++ b/test/org/mockito/configuration/MockitoConfiguration.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.configuration;\n \n import java.lang.annotation.Annotation;\n--- a/test/org/mockito/exceptions/PluralizerTest.java\n+++ b/test/org/mockito/exceptions/PluralizerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/InOrderImplTest.java\n+++ b/test/org/mockito/internal/InOrderImplTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import static java.util.Arrays.*;\n--- a/test/org/mockito/internal/InvocationNotifierHandlerTest.java\n+++ b/test/org/mockito/internal/InvocationNotifierHandlerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal;\n \n import org.junit.Before;\n--- a/test/org/mockito/internal/configuration/ConfigurationAccess.java\n+++ b/test/org/mockito/internal/configuration/ConfigurationAccess.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import org.mockito.configuration.MockitoConfiguration;\n--- a/test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java\n+++ b/test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.configuration;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n+++ b/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import static org.hamcrest.core.IsInstanceOf.*;\n--- a/test/org/mockito/internal/creation/MockSettingsImplTest.java\n+++ b/test/org/mockito/internal/creation/MockSettingsImplTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockito/internal/creation/SerializableMockitoMethodProxyTest.java\n+++ b/test/org/mockito/internal/creation/SerializableMockitoMethodProxyTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/creation/cglib/CGLIBHackerTest.java\n+++ b/test/org/mockito/internal/creation/cglib/CGLIBHackerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.cglib;\n \n import static org.mockito.Mockito.spy;\n--- a/test/org/mockito/internal/creation/cglib/MethodProxyBuilder.java\n+++ b/test/org/mockito/internal/creation/cglib/MethodProxyBuilder.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.cglib;\n \n import static org.mockito.Mockito.mock;\n--- a/test/org/mockito/internal/creation/jmock/ClassImposterizerTest.java\n+++ b/test/org/mockito/internal/creation/jmock/ClassImposterizerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.creation.jmock;\n \n import static org.hamcrest.CoreMatchers.*;\n--- a/test/org/mockito/internal/debugging/LoggingListenerTest.java\n+++ b/test/org/mockito/internal/debugging/LoggingListenerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockito/internal/debugging/VerboseMockInvocationLoggerTest.java\n+++ b/test/org/mockito/internal/debugging/VerboseMockInvocationLoggerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.junit.After;\n--- a/test/org/mockito/internal/debugging/WarningsFinderTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsFinderTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import static java.util.Arrays.*;\n--- a/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java\n+++ b/test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.exceptions.base;\n \n import static org.mockitoutil.ExtraMatchers.*;\n--- a/test/org/mockito/internal/exceptions/util/ScenarioPrinterTest.java\n+++ b/test/org/mockito/internal/exceptions/util/ScenarioPrinterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.exceptions.util;\n \n import static java.util.Arrays.*;\n--- a/test/org/mockito/internal/invocation/ArgumentsComparatorTest.java\n+++ b/test/org/mockito/internal/invocation/ArgumentsComparatorTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import org.mockitoutil.TestBase;\n--- a/test/org/mockito/internal/invocation/ExposedInvocation.java\n+++ b/test/org/mockito/internal/invocation/ExposedInvocation.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import org.mockito.internal.creation.MockitoMethodProxy;\n--- a/test/org/mockito/internal/invocation/InvocationMarkerTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationMarkerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import java.util.Arrays;\n--- a/test/org/mockito/internal/invocation/SerializableMethodTest.java\n+++ b/test/org/mockito/internal/invocation/SerializableMethodTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.invocation;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockito/internal/matchers/CapturingMatcherTest.java\n+++ b/test/org/mockito/internal/matchers/CapturingMatcherTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockito/internal/matchers/EqualityTest.java\n+++ b/test/org/mockito/internal/matchers/EqualityTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import org.mockitoutil.TestBase;\n--- a/test/org/mockito/internal/matchers/LocalizedMatcherTest.java\n+++ b/test/org/mockito/internal/matchers/LocalizedMatcherTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import org.hamcrest.Matcher;\n--- a/test/org/mockito/internal/matchers/MatchersPrinterTest.java\n+++ b/test/org/mockito/internal/matchers/MatchersPrinterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.matchers;\n \n import java.util.Arrays;\n--- a/test/org/mockito/internal/progress/AtLeastTest.java\n+++ b/test/org/mockito/internal/progress/AtLeastTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/progress/HandyReturnValuesTest.java\n+++ b/test/org/mockito/internal/progress/HandyReturnValuesTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java\n+++ b/test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.progress;\n \n import org.junit.After;\n--- a/test/org/mockito/internal/runners/RunnerFactoryTest.java\n+++ b/test/org/mockito/internal/runners/RunnerFactoryTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners;\n \n import static org.hamcrest.CoreMatchers.*;\n--- a/test/org/mockito/internal/runners/util/RunnerProviderTest.java\n+++ b/test/org/mockito/internal/runners/util/RunnerProviderTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners.util;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/runners/util/TestMethodsFinderTest.java\n+++ b/test/org/mockito/internal/runners/util/TestMethodsFinderTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.runners.util;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/stubbing/InvocationContainerImplTest.java\n+++ b/test/org/mockito/internal/stubbing/InvocationContainerImplTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/stubbing/answers/AnswersValidatorTest.java\n+++ b/test/org/mockito/internal/stubbing/answers/AnswersValidatorTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.answers;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockito/internal/stubbing/defaultanswers/HasPrimitiveMethods.java\n+++ b/test/org/mockito/internal/stubbing/defaultanswers/HasPrimitiveMethods.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n interface HasPrimitiveMethods {\n--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java\n+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMocksTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValuesTest.java\n+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValuesTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java\n+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing.defaultanswers;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/ArrayUtilsTest.java\n+++ b/test/org/mockito/internal/util/ArrayUtilsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockito/internal/util/IdentitySetTest.java\n+++ b/test/org/mockito/internal/util/IdentitySetTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockito/internal/util/MockCreationValidatorTest.java\n+++ b/test/org/mockito/internal/util/MockCreationValidatorTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import java.util.ArrayList;\n--- a/test/org/mockito/internal/util/MockNameTest.java\n+++ b/test/org/mockito/internal/util/MockNameTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/ObjectBox.java\n+++ b/test/org/mockito/internal/util/ObjectBox.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n \n--- a/test/org/mockito/internal/util/ObjectMethodsGuruTest.java\n+++ b/test/org/mockito/internal/util/ObjectMethodsGuruTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/SimpleMockitoLoggerTest.java\n+++ b/test/org/mockito/internal/util/SimpleMockitoLoggerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java\n+++ b/test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.junit;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java\n+++ b/test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockito/internal/util/reflection/DummyClassForTests.java\n+++ b/test/org/mockito/internal/util/reflection/DummyClassForTests.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n public class DummyClassForTests extends DummyParentClassForTests {\n--- a/test/org/mockito/internal/util/reflection/DummyParentClassForTests.java\n+++ b/test/org/mockito/internal/util/reflection/DummyParentClassForTests.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n public class DummyParentClassForTests {\n--- a/test/org/mockito/internal/util/reflection/FieldInitializerTest.java\n+++ b/test/org/mockito/internal/util/reflection/FieldInitializerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/reflection/FieldReaderTest.java\n+++ b/test/org/mockito/internal/util/reflection/FieldReaderTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/util/reflection/GenericMasterTest.java\n+++ b/test/org/mockito/internal/util/reflection/GenericMasterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n+++ b/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockito/internal/util/reflection/WhiteboxTest.java\n+++ b/test/org/mockito/internal/util/reflection/WhiteboxTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/verification/DummyVerificationMode.java\n+++ b/test/org/mockito/internal/verification/DummyVerificationMode.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.internal.verification.api.VerificationData;\n--- a/test/org/mockito/internal/verification/NoMoreInteractionsTest.java\n+++ b/test/org/mockito/internal/verification/NoMoreInteractionsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n--- a/test/org/mockito/internal/verification/OnlyTest.java\n+++ b/test/org/mockito/internal/verification/OnlyTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockito/internal/verification/SmartPrinterTest.java\n+++ b/test/org/mockito/internal/verification/SmartPrinterTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.junit.Before;\n--- a/test/org/mockito/internal/verification/VerificationDataImplTest.java\n+++ b/test/org/mockito/internal/verification/VerificationDataImplTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.junit.Test;\n--- a/test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java\n+++ b/test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.argumentmatching;\n \n import java.util.Arrays;\n--- a/test/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsCheckerTest.java\n+++ b/test/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsCheckerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.checkers;\n \n import static java.util.Arrays.asList;\n--- a/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n+++ b/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.runners;\n \n import org.junit.Before;\n--- a/test/org/mockito/runners/RunnersValidateFrameworkUsageTest.java\n+++ b/test/org/mockito/runners/RunnersValidateFrameworkUsageTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.runners;\n \n import static org.mockitoutil.ExtraMatchers.*;\n--- a/test/org/mockito/verification/TimeoutTest.java\n+++ b/test/org/mockito/verification/TimeoutTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.verification;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/IMethods.java\n+++ b/test/org/mockitousage/IMethods.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage;\n \n import java.io.IOException;\n--- a/test/org/mockitousage/MethodsImpl.java\n+++ b/test/org/mockitousage/MethodsImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage;\n \n import javax.swing.text.ChangedCharSetException;\n--- a/test/org/mockitousage/annotation/MockInjectionUsingSetterOrPropertyTest.java\n+++ b/test/org/mockitousage/annotation/MockInjectionUsingSetterOrPropertyTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.annotation;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java\n+++ b/test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.annotation;\n \n import java.util.LinkedList;\n--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java\n+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.annotation;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockitousage/annotation/SpyInjectionTest.java\n+++ b/test/org/mockitousage/annotation/SpyInjectionTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.annotation;\n \n import java.util.LinkedList;\n--- a/test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java\n+++ b/test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.annotation;\n \n import java.util.List;\n--- a/test/org/mockitousage/basicapi/MockAccessTest.java\n+++ b/test/org/mockitousage/basicapi/MockAccessTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.basicapi;\n \n \n--- a/test/org/mockitousage/basicapi/ResetTest.java\n+++ b/test/org/mockitousage/basicapi/ResetTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.basicapi;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/bugs/AtLeastMarksAllInvocationsVerified.java\n+++ b/test/org/mockitousage/bugs/AtLeastMarksAllInvocationsVerified.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/bugs/IOOBExceptionShouldNotBeThrownWhenNotCodingFluentlyTest.java\n+++ b/test/org/mockitousage/bugs/IOOBExceptionShouldNotBeThrownWhenNotCodingFluentlyTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java\n+++ b/test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n+++ b/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/bugs/ListenersLostOnResetMockTest.java\n+++ b/test/org/mockitousage/bugs/ListenersLostOnResetMockTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n \n--- a/test/org/mockitousage/bugs/MultipleInOrdersTest.java\n+++ b/test/org/mockitousage/bugs/MultipleInOrdersTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockitousage/bugs/MultithreadedStubbingHalfManualTest.java\n+++ b/test/org/mockitousage/bugs/MultithreadedStubbingHalfManualTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import static java.util.Collections.*;\n--- a/test/org/mockitousage/bugs/NPEWithCertainMatchersTest.java\n+++ b/test/org/mockitousage/bugs/NPEWithCertainMatchersTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.After;\n--- a/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n+++ b/test/org/mockitousage/bugs/ParentClassNotPublicVeryWeirdBugTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import static org.fest.assertions.Assertions.assertThat;\n--- a/test/org/mockitousage/bugs/ParentTestMockInjectionTest.java\n+++ b/test/org/mockitousage/bugs/ParentTestMockInjectionTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import org.junit.Before;\n--- a/test/org/mockitousage/bugs/ShouldNotDeadlockAnswerExecutionTest.java\n+++ b/test/org/mockitousage/bugs/ShouldNotDeadlockAnswerExecutionTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.bugs;\n \n import java.util.concurrent.ExecutorService;\n--- a/test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java\n+++ b/test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.configuration;\n \n \n--- a/test/org/mockitousage/configuration/CustomizedAnnotationForSmartMockTest.java\n+++ b/test/org/mockitousage/configuration/CustomizedAnnotationForSmartMockTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.configuration;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/configuration/SmartMock.java\n+++ b/test/org/mockitousage/configuration/SmartMock.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.configuration;\n \n import static java.lang.annotation.ElementType.*;\n--- a/test/org/mockitousage/customization/BDDMockitoTest.java\n+++ b/test/org/mockitousage/customization/BDDMockitoTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.customization;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/debugging/Foo.java\n+++ b/test/org/mockitousage/debugging/Foo.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n interface Foo {\n--- a/test/org/mockitousage/debugging/InvocationListenerCallbackTest.java\n+++ b/test/org/mockitousage/debugging/InvocationListenerCallbackTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/debugging/NewMockito.java\n+++ b/test/org/mockitousage/debugging/NewMockito.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import org.mockito.Mockito;\n--- a/test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java\n+++ b/test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import static org.mockito.BDDMockito.*;\n--- a/test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java\n+++ b/test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import static org.mockito.BDDMockito.*;\n--- a/test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java\n+++ b/test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import org.junit.After;\n--- a/test/org/mockitousage/debugging/VerboseLoggingOfInvocationsOnMockTest.java\n+++ b/test/org/mockitousage/debugging/VerboseLoggingOfInvocationsOnMockTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.debugging;\n \n import org.fest.assertions.Assertions;\n--- a/test/org/mockitousage/internal/debugging/LocationTest.java\n+++ b/test/org/mockitousage/internal/debugging/LocationTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.internal.debugging;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java\n+++ b/test/org/mockitousage/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.internal.invocation.realmethod;\n \n import static org.mockitoutil.ExtraMatchers.*;\n--- a/test/org/mockitousage/junitrunner/Filters.java\n+++ b/test/org/mockitousage/junitrunner/Filters.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.junitrunner;\n \n import org.junit.runner.Description;\n--- a/test/org/mockitousage/junitrunner/JUnit44RunnerTest.java\n+++ b/test/org/mockitousage/junitrunner/JUnit44RunnerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.junitrunner;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockitousage/junitrunner/JUnit45RunnerTest.java\n+++ b/test/org/mockitousage/junitrunner/JUnit45RunnerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.junitrunner;\n \n import static org.junit.Assert.*;\n--- a/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n+++ b/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.junitrunner;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/junitrunner/VerboseMockitoRunnerTest.java\n+++ b/test/org/mockitousage/junitrunner/VerboseMockitoRunnerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.junitrunner;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java\n+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.matchers;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/matchers/CustomMatcherDoesYieldCCETest.java\n+++ b/test/org/mockitousage/matchers/CustomMatcherDoesYieldCCETest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.matchers;\n \n import static org.mockito.Matchers.argThat;\n--- a/test/org/mockitousage/matchers/NewMatchersTest.java\n+++ b/test/org/mockitousage/matchers/NewMatchersTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.matchers;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/misuse/CleaningUpPotentialStubbingTest.java\n+++ b/test/org/mockitousage/misuse/CleaningUpPotentialStubbingTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.misuse;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/misuse/DetectingFinalMethodsTest.java\n+++ b/test/org/mockitousage/misuse/DetectingFinalMethodsTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.misuse;\n import static org.mockito.Mockito.*;\n \n--- a/test/org/mockitousage/misuse/DetectingMisusedMatchersTest.java\n+++ b/test/org/mockitousage/misuse/DetectingMisusedMatchersTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.misuse;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/misuse/SpyStubbingMisuseTest.java\n+++ b/test/org/mockitousage/misuse/SpyStubbingMisuseTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.misuse;\n \n import org.junit.Test;\n--- a/test/org/mockitousage/packageprotected/PackageProtected.java\n+++ b/test/org/mockitousage/packageprotected/PackageProtected.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.packageprotected;\n \n class PackageProtected {\n--- a/test/org/mockitousage/puzzlers/OverloadingPuzzleTest.java\n+++ b/test/org/mockitousage/puzzlers/OverloadingPuzzleTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.puzzlers;\n \n import static org.mockito.Mockito.*;\n--- a/test/org/mockitousage/spies/StubbingSpiesDoesNotYieldNPETest.java\n+++ b/test/org/mockitousage/spies/StubbingSpiesDoesNotYieldNPETest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.spies;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/stubbing/CallingRealMethodTest.java\n+++ b/test/org/mockitousage/stubbing/CallingRealMethodTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.stubbing;\n \n import static org.mockito.Matchers.*;\n--- a/test/org/mockitousage/stubbing/DeepStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/DeepStubbingTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.stubbing;\n \n import static org.mockito.BDDMockito.given;\n--- a/test/org/mockitousage/stubbing/StubbingWithCustomAnswerTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingWithCustomAnswerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitousage.stubbing;\n \n import org.junit.Test;\n--- a/test/org/mockitoutil/Assertor.java\n+++ b/test/org/mockitoutil/Assertor.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n-\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockitoutil;\n \n public interface Assertor<T> {", "timestamp": 1319719752, "metainfo": ""}