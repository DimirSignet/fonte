{"sha": "08ebdcc3d96b2667575178cb4bf464fcdb20957e", "log": "Enabled back the test", "commit": "\n--- a/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java\n \n public class PublicationsComparatorTask extends DefaultTask implements PublicationsComparator {\n \n-    private ZipComparator zipComparator = new ZipComparator();\n+    private ZipComparator zipComparator = new ZipComparator(new ZipCompare());\n     private PomComparator pomComparator = new PomComparator();\n     private Boolean publicationsEqual;\n \n--- a/buildSrc/src/main/groovy/org/mockito/release/comparison/ZipComparator.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/ZipComparator.java\n     private Closure<File> file1;\n     private Closure<File> file2;\n \n+    private final ZipCompare zipCompare;\n+\n+    ZipComparator(ZipCompare zipCompare) {\n+        this.zipCompare = zipCompare;\n+    }\n+\n     ZipComparator setPair(Closure<File> file1, Closure<File> file2) {\n         notNull(file1, \"zip/jar file to compare\", file2, \"zip/jar file to compare\");\n         this.file1 = file1;\n         final File file2 = this.file2.call();\n         notNull(file1, \"zip/jar file to compare\", file2, \"zip/jar file to compare\");\n \n-        final boolean equals = new ZipCompare().compareZips(file1.getAbsolutePath(), file2.getAbsolutePath());\n+        final boolean equals = zipCompare.compareZips(file1.getAbsolutePath(), file2.getAbsolutePath());\n \n         return new Result() {\n             public boolean areEqual() { return equals; }", "timestamp": 1416079018, "metainfo": ""}