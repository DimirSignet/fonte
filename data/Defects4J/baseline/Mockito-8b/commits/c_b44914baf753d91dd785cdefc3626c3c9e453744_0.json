{"sha": "b44914baf753d91dd785cdefc3626c3c9e453744", "log": "fixed javadoc for new feature (stubbing consecutive calls)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40623", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  *   <br/> 7. Making sure interaction(s) never happened on mock\n  *   <br/> 8. Finding redundant invocations\n  *   <br/> 9. Shorthand for mocks creation - &#064;Mock annotation\n- *   <br/> 10. (New!) Stubbing consecutive calls (iterator-style stubbing)\n+ *   <br/> 10. (**New**) Stubbing consecutive calls (iterator-style stubbing)\n  * </b>\n  * \n  * <p>\n  * <p>\n  * Read more here: {@link MockitoAnnotations}\n  * \n- * <h3> 10. (New!) Stubbing consecutive calls (iterator-style stubbing)</h3>\n+ * <h3> 10. (**New**) Stubbing consecutive calls (iterator-style stubbing)</h3>\n  * \n  * Sometimes we need to stub with different return value/exception for the same method call. \n  * Typical use case could be mocking iterators. However, this feature was not included in original version of Mockito to promote simple mocking.\n  * Instead of iterators we strongly recommend using Iterable or simply collections. Those offer natural ways of stubbing (e.g. using real collections).\n  * In rare scenarios stubbing consecutive calls could useful, though.\n- *   \n- * Example: \n- * <pre>\n- *   //Last stubbing (e.g: toReturn(\"foo\")) determines the behavior for further consecutive calls.\n+ * <p>\n+ *\n+ * Example:\n+ * <pre>\n  *   stub(mock.someMethod(\"some arg\"))\n  *    .toThrow(new RuntimeException())\n- *    .toReturn(\"foo\") \n- * </pre>\n- * \n+ *    .toReturn(\"foo\");\n+ *    \n+ *   //First call: throws runtime exception:\n+ *   mock.someMethod(\"some arg\");\n+ *   \n+ *   //Second call: prints \"foo\"\n+ *   System.out.println(mock.someMethod(\"some arg\"));\n+ *   \n+ *   //Any consecutive call: prints \"foo\" as well because it is the last stubbed behaviour. \n+ *   System.out.println(mock.someMethod(\"some arg\"));\n+ * </pre>\n  */\n public class Mockito extends Matchers {\n \n      * stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();\n      * \n      * //you can stub with different behavior for consecutive method calls.\n-     * //Last stubbing determines the behavior for further consecutive calls.   \n+     * //Last stubbing (e.g. toReturn()) determines the behavior for further consecutive calls.   \n      * stub(mock)\n      *   .toThrow(new RuntimeException())\n      *   .toReturn()", "timestamp": 1213188502, "metainfo": ""}