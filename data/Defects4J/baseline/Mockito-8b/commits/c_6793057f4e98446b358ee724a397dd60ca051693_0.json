{"sha": "6793057f4e98446b358ee724a397dd60ca051693", "log": "some rename job removed unused imports  --HG-- rename : src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java => src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40828", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.verification.junit;\n+\n+import java.util.Arrays;\n+\n+import junit.framework.ComparisonFailure;\n+import org.mockito.exceptions.base.CommonStackTraceRemover;\n+import org.mockito.exceptions.base.HasStackTrace;\n+import org.mockito.exceptions.base.StackTraceFilter;\n+\n+\n+public class ArgumentsAreDifferent extends ComparisonFailure implements HasStackTrace {\n+    \n+    private static final long serialVersionUID = 1L;\n+    private final String message;\n+    private StackTraceElement[] unfilteredStackTrace;\n+\n+    public ArgumentsAreDifferent(String message, Throwable cause, String wanted, String actual) {\n+        super(message, wanted, actual);\n+        this.message = message;\n+        \n+        unfilteredStackTrace = getStackTrace();\n+        StackTraceFilter filter = new StackTraceFilter();\n+        filter.filterStackTrace(this);\n+        \n+        this.initCause(cause);\n+        CommonStackTraceRemover remover = new CommonStackTraceRemover();\n+        remover.remove(this, Arrays.asList(cause.getStackTrace()));\n+    }\n+    \n+    @Override\n+    public String getMessage() {\n+        return message;\n+    }\n+    \n+    public StackTraceElement[] getUnfilteredStackTrace() {\n+        return unfilteredStackTrace;\n+    }\n+}\n--- a/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n+++ b/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n     public static AssertionError createArgumentsAreDifferentException(String message, Throwable cause, String wanted, String actual)  {\n         //TODO commented out for now...\n //        try {\n-//            Class<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle\");\n+//            Class<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferent\");\n //            AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, cause, wanted, actual);\n //            return throwable;\n //        } catch (Throwable t) {\n--- a/test/org/mockitousage/stubbing/BasicStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/BasicStubbingTest.java\n import org.junit.Test;\n import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n-import org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n import org.mockito.exceptions.verification.NeverWantedButInvoked;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockito.exceptions.verification.WantedButNotInvoked;\n-import org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n ", "timestamp": 1219852203, "metainfo": ""}