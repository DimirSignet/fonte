{"sha": "1bcfb48c9fec9dc8b0eb6983b271bcfa63ddee9f", "log": "Minor tidyup & improvement of timeout() tests", "commit": "\n--- a/test/org/mockito/verification/TimeoutTest.java\n+++ b/test/org/mockito/verification/TimeoutTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.verification;\n \n import static org.mockito.Mockito.*;\n     \n     @Test\n     public void shouldPassEvenIfFirstVerificationFails() {\n-        Timeout t = new Timeout(1, 2, mode);\n+        Timeout t = new Timeout(1, 5, mode);\n         \n         doThrow(error).\n         doThrow(error).\n--- a/test/org/mockitousage/bugs/ConcurrentModificationExceptionOnMultiThreadedVerificationTest.java\n+++ b/test/org/mockitousage/bugs/ConcurrentModificationExceptionOnMultiThreadedVerificationTest.java\n \t\n \tstatic final int TIMES = 100;\n \tstatic final int INTERVAL_MILLIS = 10;\n-\tstatic final int TEST_TIMEOUT_MILLIS = TIMES * INTERVAL_MILLIS + 500;\n \n \tITarget target = Mockito.mock(ITarget.class);\n \tExecutorService fixedThreadPool;\n \t}\n \n \t@Test\n-\tpublic void testInvocationConcurrently() throws Exception {\n+\tpublic void shouldSuccessfullyVerifyConcurrentInvocationsWithTimeout() throws Exception {\n+        int potentialOverhead = 1000; // Leave 1000ms extra before timing out as leeway for test overheads\n+        int expectedMaxTestLength = TIMES * INTERVAL_MILLIS + potentialOverhead;\n+\n \t\treset(target);\n \t\tstartInvocations();\n \t\t\n-\t\tverify(target, timeout(TEST_TIMEOUT_MILLIS * 2).times(TIMES * nThreads)).targetMethod(\"arg\");\n+\t\tverify(target, timeout(expectedMaxTestLength).times(TIMES * nThreads)).targetMethod(\"arg\");\n \t\tverifyNoMoreInteractions(target);\n \t}\n \n--- /dev/null\n+++ b/test/org/mockitousage/bugs/TimeoutWithAtMostOrNeverShouldBeDisabledTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+\n+package org.mockitousage.bugs;\n+\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.exceptions.misusing.FriendlyReminderException;\n+import org.mockitousage.IMethods;\n+import org.mockitoutil.TestBase;\n+\n+import static org.mockito.Mockito.*;\n+\n+//see issue 235\n+@SuppressWarnings(\"deprecation\")\n+public class TimeoutWithAtMostOrNeverShouldBeDisabledTest extends TestBase {\n+\n+    @Mock IMethods mock;\n+\n+    @Test\n+    public void shouldDisableTimeoutForAtMost() {\n+        try {\n+            verify(mock, timeout(30000).atMost(1)).simpleMethod();\n+            fail();\n+        } catch (FriendlyReminderException e) {}\n+    }\n+\n+    @Test\n+    public void shouldDisableTimeoutForNever() {\n+        try {\n+            verify(mock, timeout(30000).never()).simpleMethod();\n+            fail();\n+        } catch (FriendlyReminderException e) {}\n+    }\n+}", "timestamp": 1381073267, "metainfo": ""}