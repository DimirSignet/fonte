{"sha": "b8ef61b55e8c6307d7ba2b3668b7c529e92f2191", "log": "Changed the name of the internal class so that junit doesn't freak out  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401358", "commit": "\n--- a/test/org/mockitousage/stubbing/CallingRealMethodTest.java\n+++ b/test/org/mockitousage/stubbing/CallingRealMethodTest.java\n  */\n public class CallingRealMethodTest extends TestBase {\n     \n-    @Mock UnderTest mock;\n+    @Mock TestedObject mock;\n \n-    static class UnderTest {\n+    static class TestedObject {\n         String value;\n \n         void setValue(String value) {\n \n     @Test\n     public void shouldCallRealMethodByDefault() {\n-        UnderTest mock = mock(UnderTest.class, CALLS_REAL_METHODS);\n+        TestedObject mock = mock(TestedObject.class, CALLS_REAL_METHODS);\n \n         Assert.assertEquals(\"HARD_CODED_RETURN_VALUE\", mock.getValue());\n     }\n \n     @Test\n     public void shouldNotCallRealMethodWhenStubbedLater() {\n-        UnderTest mock = mock(UnderTest.class);\n+        TestedObject mock = mock(TestedObject.class);\n \n         when(mock.getValue()).thenCallRealMethod();\n         when(mock.getValue()).thenReturn(\"FAKE_VALUE\");", "timestamp": 1240350022, "metainfo": ""}