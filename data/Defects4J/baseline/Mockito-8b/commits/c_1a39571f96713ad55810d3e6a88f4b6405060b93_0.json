{"sha": "1a39571f96713ad55810d3e6a88f4b6405060b93", "log": "fixed some documentation  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40262", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * </pre>\n  * \n  * <p>\n- * Once stubbed, mocked method will always return stubbed value regardless of how many times it is called. \n- * <p>\n  * By default, for all methods that return value mock object will return null,\n  * appropriate primitive value (0, false, etc.) or empty collection.\n+ * <p>\n+ * Once stubbed, mocked method will always return stubbed value regardless of how many times it is called.\n+ * <p>\n+ * If you stub exactly the same method call many times last stubbing is more important.\n  * \n  * <h3>Argument matchers</h3>\n  * \n      *   \n      *   stub(mock.someMethod(\"some arg\")).toThrow(new RuntimeException());\n      * </pre>\n-     * <p>\n+     *\n      * For stubbing void methods with throwables see: {@link Mockito#stubVoid}\n+     * <p>\n+     * Once stubbed, mocked method will always return stubbed value regardless of how many times it is called.\n+     * <p>\n+     * If you stub exactly the same method call many times last stubbing is more important. \n      * <p>\n      * See examples in javadoc for {@link Mockito}\n      * ", "timestamp": 1199584802, "metainfo": ""}