{"sha": "8928424307c1635c17f2744ab61b1c1c2f718ea5", "log": "added more info to javadocs cleaned up playground test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401095", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * \n  * <h4>Important gotcha on spying real objects!</h4>\n  * \n- * Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:\n+ * 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:\n  * \n  * <pre>\n  *   List list = new LinkedList();\n  *   //You have to use doReturn() for stubbing\n  *   doReturn(\"foo\").when(spy).get(0);\n  * </pre>\n+ * \n+ * 2. Watch out for final methods. \n+ * Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.\n+ * What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.\n+ * Typically you may get a NullPointerException because mock instances don't have fields initiated. \n  */\n @SuppressWarnings(\"unchecked\")\n public class Mockito extends Matchers {\n      * \n      * <h4>Important gotcha on spying real objects!</h4>\n      * \n-     * Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:\n+     * 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:\n      * \n      * <pre>\n      *   List list = new LinkedList();\n      *   //You have to use doReturn() for stubbing\n      *   doReturn(\"foo\").when(spy).get(0);\n      * </pre>\n+     * \n+     * 2. Watch out for final methods. \n+     * Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.\n+     * What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.\n+     * Typically you may get a NullPointerException because mock instances don't have fields initiated.\n      * \n      * <p>\n      * See examples in javadoc for {@link Mockito} class\n--- a/test/org/mockitousage/PlaygroundTest.java\n+++ b/test/org/mockitousage/PlaygroundTest.java\n  */\n package org.mockitousage;\n \n-import static org.mockito.Mockito.*;\n-\n import org.junit.Test;\n+import org.mockito.Mock;\n import org.mockitoutil.TestBase;\n \n @SuppressWarnings(\"unchecked\")\n public class PlaygroundTest extends TestBase {\n \n-    private static class BaseClass {\n-        private final String s;\n-\n-        public BaseClass(String s) {\n-            s.getClass(); //NPE check\n-            this.s = s;\n-        }\n-\n-        public boolean isLarger(int i) {\n-            return s.length() < i;\n-        }\n-    }\n-\n-    /**\n-     * This test succeeds.\n-     */\n+    @Mock IMethods mock;\n+    \n     @Test\n-    public void testSpyOfBaseClass() {\n-        BaseClass ci = spy(new BaseClass(\"test\"));\n-        assertEquals(false, ci.isLarger(2));\n-    }\n-\n-    private static class Subclass extends BaseClass {\n-        public Subclass(String s) {\n-            super(s);\n-        }\n-\n-        public boolean isLarger(int i) {\n-            return super.isLarger(i);\n-        }\n-    }\n-\n-    /**\n-     * This test fails with a NullPointerException.\n-     */\n-    @Test\n-    public void testSpyOfSubclass() {\n-        BaseClass ci = spy(new Subclass(\"test\"));\n-        assertEquals(false, ci.isLarger(2));\n+    public void testSomething() {\n     }\n }", "timestamp": 1227998379, "metainfo": ""}