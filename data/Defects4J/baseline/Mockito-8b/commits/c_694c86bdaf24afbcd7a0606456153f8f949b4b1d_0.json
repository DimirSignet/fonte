{"sha": "694c86bdaf24afbcd7a0606456153f8f949b4b1d", "log": "started using JUnit specific exception when JUnit is in use  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40860", "commit": "\n--- a/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n+++ b/src/org/mockito/exceptions/verification/junit/JUnitTool.java\n     }\n \n     public static AssertionError createArgumentsAreDifferentException(String message, Throwable cause, String wanted, String actual)  {\n-        //TODO commented out for now...\n-//        try {\n-//            Class<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferent\");\n-//            AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, cause, wanted, actual);\n-//            return throwable;\n-//        } catch (Throwable t) {\n-            //throw the default exception in case of problems\n+        try {\n+            Class<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferent\");\n+            AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, cause, wanted, actual);\n+            return throwable;\n+        } catch (Throwable t) {\n+//            throw the default exception in case of problems\n             return new ArgumentsAreDifferent(message, cause);\n-//        }\n+        }\n     }\n }\n--- a/test/org/mockitousage/UsingVarargsTest.java\n+++ b/test/org/mockitousage/UsingVarargsTest.java\n import org.junit.Before;\n import org.junit.Test;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockitousage/matchers/HamcrestMatchersTest.java\n+++ b/test/org/mockitousage/matchers/HamcrestMatchersTest.java\n import org.hamcrest.Description;\n import org.junit.Test;\n import org.mockito.Mock;\n-import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockitousage/matchers/ReflectionMatchersTest.java\n+++ b/test/org/mockitousage/matchers/ReflectionMatchersTest.java\n \n import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockitoutil.TestBase;\n \n @SuppressWarnings(\"all\")\n--- a/test/org/mockitousage/stacktrace/PointingStackTraceToActualInvocationChunkTest.java\n+++ b/test/org/mockitousage/stacktrace/PointingStackTraceToActualInvocationChunkTest.java\n         try {\n             verify(mock).simpleMethod(999);\n             fail();\n-        } catch (ArgumentsAreDifferent e) {\n+        } catch (AssertionError e) {\n             assertThat(e.getCause(), hasFirstMethodInStackTrace(\"firstChunk\"));\n         }\n     }\n         try {\n             verify(mock, atLeastOnce()).simpleMethod(999);\n             fail();\n-        } catch (ArgumentsAreDifferent e) {\n+        } catch (AssertionError e) {\n             assertThat(e.getCause(), hasFirstMethodInStackTrace(\"thirdChunk\"));\n         }\n     }   \n--- a/test/org/mockitousage/stacktrace/PointingStackTraceToActualInvocationTest.java\n+++ b/test/org/mockitousage/stacktrace/PointingStackTraceToActualInvocationTest.java\n         try {\n             verify(mock).simpleMethod(999);\n             fail();\n-        } catch (ArgumentsAreDifferent e) {\n+        } catch (AssertionError e) {\n             assertThat(e.getCause(), hasFirstMethodInStackTrace(\"first\"));\n         }\n     }\n         try {\n             verify(mock, atLeastOnce()).simpleMethod(999);\n             fail();\n-        } catch (ArgumentsAreDifferent e) {\n+        } catch (AssertionError e) {\n             assertThat(e.getCause(), hasFirstMethodInStackTrace(\"third\"));\n         }\n     }   \n--- a/test/org/mockitousage/stacktrace/StackTrackeChangingTest.java\n+++ b/test/org/mockitousage/stacktrace/StackTrackeChangingTest.java\n         try {\n             verifySimpleMethodOnAMock();\n             fail();\n-        } catch (ArgumentsAreDifferent e) {\n+        } catch (AssertionError e) {\n             assertThat(e, hasMethodInStackTraceAt(0, \"verifySimpleMethodOnAMock\"));\n             assertThat(e, hasMethodInStackTraceAt(1, \"shouldShowActualInvocationAsExceptionCause\"));\n             assertThat(e.getCause(), hasMethodInStackTraceAt(0, \"simpleMethodOnAMock\"));\n--- a/test/org/mockitousage/verification/BasicVerificationTest.java\n+++ b/test/org/mockitousage/verification/BasicVerificationTest.java\n         try {\n             verify(mock).add(\"bar\");\n             fail();\n-        } catch (ArgumentsAreDifferent expected) {}\n+        } catch (AssertionError expected) {}\n     }\n \n     @Test\n--- a/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n import org.mockito.Mock;\n import org.mockito.exceptions.cause.ActualArgumentsAreDifferent;\n import org.mockito.exceptions.cause.UndesiredInvocation;\n-import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockito.exceptions.verification.NeverWantedButInvoked;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockito.exceptions.verification.WantedButNotInvoked;\n--- a/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n+++ b/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n import org.junit.Test;\n import org.mockito.Matchers;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n import org.mockito.exceptions.verification.WantedButNotInvoked;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;", "timestamp": 1220048438, "metainfo": ""}