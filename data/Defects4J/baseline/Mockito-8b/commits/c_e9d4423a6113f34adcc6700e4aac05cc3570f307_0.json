{"sha": "e9d4423a6113f34adcc6700e4aac05cc3570f307", "log": "(PR 49) Fixed PMD problem by extracting exception handling to a separate method.", "commit": "\n--- a/test/org/mockitousage/verification/VerificationWithTimeoutTest.java\n+++ b/test/org/mockitousage/verification/VerificationWithTimeoutTest.java\n public class VerificationWithTimeoutTest extends TestBase {\n \n     List<Exception> exceptions = new LinkedList<Exception>();\n-    \n+\n     @After\n     public void after() {\n         //making sure there are no threading related exceptions\n         assertTrue(exceptions.isEmpty());\n         exceptions.clear();\n     }\n-    \n+\n     @Mock\n     private List<String> mock;\n \n     public void shouldVerifyWithTimeout() throws Exception {\n         //given\n         Thread t = waitAndExerciseMock(20);\n-        \n+\n         //when\n         t.start();\n-        \n+\n         //then\n         verify(mock, timeout(100)).clear();\n-        \n+\n         verify(mock, timeout(100).atLeastOnce()).clear();\n         verify(mock, timeout(100).times(1)).clear();\n-        \n-        \n+\n+\n         verify(mock).clear();\n         verify(mock, times(1)).clear();\n     }\n     public void shouldFailVerificationWithTimeout() throws Exception {\n         //given\n         Thread t = waitAndExerciseMock(80);\n-        \n+\n         //when\n         t.start();\n-        \n+\n         //then\n         verify(mock, never()).clear();\n         try {\n             verify(mock, timeout(20).atLeastOnce()).clear();\n             fail();\n-        } catch (MockitoAssertionError e) {}\n-    }\n-    \n+        } catch (MockitoAssertionError e) {\n+        }\n+    }\n+\n     @Test\n     public void shouldAllowMixingOtherModesWithTimeout() throws Exception {\n         //given\n         Thread t1 = waitAndExerciseMock(30);\n         Thread t2 = waitAndExerciseMock(30);\n-        \n+\n         //when\n         t1.start();\n         t2.start();\n-        \n+\n         //then\n         verify(mock, timeout(50).atLeast(1)).clear();\n         verify(mock, timeout(50).times(2)).clear();\n         verifyNoMoreInteractions(mock);\n     }\n-    \n+\n     @Test\n     public void shouldAllowMixingOtherModesWithTimeoutAndFail() throws Exception {\n         //given\n         Thread t1 = waitAndExerciseMock(30);\n         Thread t2 = waitAndExerciseMock(30);\n-        \n+\n         //when\n         t1.start();\n         t2.start();\n-        \n+\n         //then\n         verify(mock, timeout(50).atLeast(1)).clear();\n         try {\n             fail();\n         } catch (TooLittleActualInvocations e) {}\n     }\n-    \n+\n     @Test\n     public void shouldAllowMixingOnlyWithTimeout() throws Exception {\n         //given\n         Thread t1 = waitAndExerciseMock(20);\n-        \n-        //when\n-        t1.start();\n-        \n+\n+        //when\n+        t1.start();\n+\n         //then\n         verify(mock, never()).clear();\n         verify(mock, timeout(40).only()).clear();\n     }\n-    \n+\n     @Test\n     public void shouldAllowMixingOnlyWithTimeoutAndFail() throws Exception {\n         //given\n         Thread t1 = waitAndExerciseMock(20);\n-        \n+\n         //when\n         t1.start();\n         mock.add(\"foo\");\n-        \n+\n         //then\n         verify(mock, never()).clear();\n         try {\n             public void run() {\n                 mock.add(\"0\");\n                 mock.add(\"1\");\n-                try {\n-                    Thread.sleep(100);\n-                } catch (InterruptedException ignored) {\n-                    // We do not need to handle this.\n-                }\n+                VerificationWithTimeoutTest.this.sleep(100);\n                 mock.add(\"2\");\n             }\n         };\n         verify(mock, timeout(200)).add(\"2\");\n     }\n \n+    private void sleep(long milliseconds) {\n+        try {\n+            Thread.sleep(milliseconds);\n+        } catch (InterruptedException ignored) {\n+            // we do not need to handle this.\n+        }\n+    }\n+\n     //TODO not yet implemented\n     @Ignore\n     @Test\n     public void shouldAllowTimeoutVerificationInOrder() throws Exception {\n         //given\n         Thread t1 = waitAndExerciseMock(20);\n-        \n+\n         //when\n         t1.start();\n         mock.add(\"foo\");\n-        \n+\n         //then\n         InOrder inOrder = inOrder(mock);\n         inOrder.verify(mock).add(anyString());\n     }\n \n     private Thread waitAndExerciseMock(final int sleep) {\n-        Thread t = new Thread() { \n+        Thread t = new Thread() {\n             @Override\n             public void run() {\n                 try {", "timestamp": 1398003758, "metainfo": ""}