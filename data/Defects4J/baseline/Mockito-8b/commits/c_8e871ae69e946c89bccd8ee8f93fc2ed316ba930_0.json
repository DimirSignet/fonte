{"sha": "8e871ae69e946c89bccd8ee8f93fc2ed316ba930", "log": "experimental verifyInOrder  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4042", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n package org.mockito;\n+\n+import java.util.*;\n \n import org.mockito.exceptions.*;\n import org.mockito.internal.*;\n //        MockitoState.instance().reportControlForStubbing(mockControl)\n         return MockUtil.getControl(mock);\n     }\n+\n+    //TODO experimental in order syntax (I know is ugly)\n+    public static <T> T verifyInOrder(T mock, int exactNumberOfInvocations) {\n+        //TODO validate mocks\n+        return mock;\n+    }\n+\n+    public static <T> T verifyInOrder(T mock) {\n+        //TODO validate mocks\n+        return mock;\n+    }\n }\n--- /dev/null\n+++ b/src/org/mockito/StrictVerifier.java\n+package org.mockito;\n+\n+import java.util.LinkedList;\n+\n+public class StrictVerifier<T> {\n+\n+    public T verify(T mock, int exactNumberOfTimes) {\n+        // TODO Auto-generated method stub\n+        return null;\n+    }\n+\n+}\n--- /dev/null\n+++ b/test/org/mockito/usage/verification/VerificationInOrderTest.java\n+/*\n+ * Copyright (c) 2001-2007 OFFIS, Tammo Freese.\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.usage.verification;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.CrazyMatchers.*;\n+import static org.mockito.Matchers.isA;\n+import static org.mockito.Mockito.verify;\n+\n+import java.util.*;\n+\n+import org.junit.*;\n+import org.mockito.*;\n+\n+import static org.mockito.Mockito.*;\n+import org.mockito.exceptions.VerificationAssertionError;\n+import org.mockito.usage.IMethods;\n+\n+@SuppressWarnings(\"unchecked\")  \n+public class VerificationInOrderTest {\n+    \n+    private LinkedList list;\n+    private HashMap map;\n+    private HashSet set;\n+\n+    @Before\n+    public void setUp() {\n+        list = mock(LinkedList.class);\n+        map = mock(HashMap.class);\n+        set = mock(HashSet.class);\n+\n+        list.add(\"one\");\n+        map.put(\"two\", \"two\");\n+        list.add(\"three and four\");\n+        list.add(\"three and four\");\n+        map.put(\"five\", \"five\");\n+        set.add(\"six\");\n+    }\n+\n+    @Ignore\n+    @Test\n+    public void shouldVerifyInOrder() {\n+        Mockito.verifyInOrder(list).add(\"one\");\n+        Mockito.verifyInOrder(map).put(\"one\", \"two\");\n+        Mockito.verifyInOrder(list).add(\"three and four\");\n+        Mockito.verifyInOrder(map).put(\"five\", \"five\");\n+        Mockito.verifyInOrder(set).add(\"six\");\n+    } \n+\n+    @Ignore\n+    @Test\n+    public void shouldVerifyInOrderWithExactNumberOfInvocations() {\n+        Mockito.verifyInOrder(list, 1).add(\"one\");\n+        Mockito.verifyInOrder(map).put(\"one\", \"two\");\n+        Mockito.verifyInOrder(list, 2).add(\"three and four\");\n+        Mockito.verifyInOrder(map, 1).put(\"five\", \"five\");\n+        Mockito.verifyInOrder(set, 1).add(\"six\");\n+    }  \n+}", "timestamp": 1195602951, "metainfo": ""}