{"sha": "cd10933653937915b1570c7c80ed8ad61b2ad8c9", "log": "Fixed javadoc and  added generics.", "commit": "\n--- a/src/org/mockito/stubbing/answers/ReturnsElementsOf.java\n+++ b/src/org/mockito/stubbing/answers/ReturnsElementsOf.java\n  *   when(mock.foo()).thenReturn(1, 2, 3);\n  *   //is equivalent to:\n  *   when(mock.foo()).thenReturn(new ReturnsElementsOf(Arrays.asList(1, 2, 3)));\n- * <pre class=\"code\"><code class=\"java\">\n+ * </code></pre>\n  */\n-@SuppressWarnings(\"unchecked\")\n-public class ReturnsElementsOf implements Answer {\n+public class ReturnsElementsOf implements Answer<Object> {\n \n-    final LinkedList elements;\n+    private final LinkedList<Object> elements;\n \n-    public ReturnsElementsOf(Collection elements) {\n+    public ReturnsElementsOf(Collection<?> elements) {\n         if (elements == null) {\n             throw new MockitoException(\"ReturnsElementsOf does not accept null as constructor argument.\\n\" +\n             \t\t\"Please pass a collection instance\");\n         }\n-        this.elements = new LinkedList(elements);\n+        this.elements = new LinkedList<Object>(elements);\n     }\n \n     public Object answer(InvocationOnMock invocation) throws Throwable {", "timestamp": 1323722100, "metainfo": ""}