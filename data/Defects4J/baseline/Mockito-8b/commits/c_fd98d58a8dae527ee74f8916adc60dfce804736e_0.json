{"sha": "fd98d58a8dae527ee74f8916adc60dfce804736e", "log": "small refactorings  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4076", "commit": "\n--- a/src/org/mockito/internal/MockitoBehavior.java\n+++ b/src/org/mockito/internal/MockitoBehavior.java\n \n     private T mock;\n     \n+    //TODO change this class to RegisteredInvocations that we can as about different stuff so Behavior can verify based on answers\n     private List<Invocation> registeredInvocations = new LinkedList<Invocation>();\n     private Map<ExpectedInvocation, Result> results = new HashMap<ExpectedInvocation, Result>();\n \n      * or just first invocation\n      */\n     private Invocation findSimilarInvocation(ExpectedInvocation expectedInvocation) {\n-        for (Invocation registeredInvocation : registeredInvocations) {\n+        for (Invocation registered : registeredInvocations) {\n             String expectedMethodName = expectedInvocation.getMethod().getName();\n-            String registeredInvocationName = registeredInvocation.getMethod().getName();\n-            if (expectedMethodName.equals(registeredInvocationName) && !registeredInvocation.isVerified()) {\n-                return registeredInvocation;\n+            String registeredInvocationName = registered.getMethod().getName();\n+            if (expectedMethodName.equals(registeredInvocationName) && !registered.isVerified()) {\n+                return registered;\n             }\n         }\n \n     }\n \n     private int numberOfActualInvocations(ExpectedInvocation expectedInvocation) {\n-        int verifiedInvocations = 0;\n+        int actual = 0;\n         for (Invocation registeredInvocation : registeredInvocations) {\n             if (expectedInvocation.matches(registeredInvocation)) {\n-                verifiedInvocations++;\n-            }\n-        }\n-\n-        return verifiedInvocations;\n+                actual++;\n+            }\n+        }\n+\n+        return actual;\n     }\n \n     public void verifyNoMoreInteractions() {", "timestamp": 1196119598, "metainfo": ""}