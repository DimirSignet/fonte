{"sha": "102b334c97d8dc924883aa97ed80b0dab67d9487", "log": "package structure refactoring  --HG-- rename : src/org/mockito/exceptions/Strings.java => src/org/mockito/exceptions/StringJoiner.java rename : src/org/mockito/exceptions/InvalidUseOfMatchersException.java => src/org/mockito/exceptions/misusing/InvalidUseOfMatchersException.java rename : src/org/mockito/exceptions/MissingMethodInvocationException.java => src/org/mockito/exceptions/misusing/MissingMethodInvocationException.java rename : src/org/mockito/exceptions/NotAMockException.java => src/org/mockito/exceptions/misusing/NotAMockException.java rename : src/org/mockito/exceptions/UnfinishedStubbingException.java => src/org/mockito/exceptions/misusing/UnfinishedStubbingException.java rename : src/org/mockito/exceptions/UnfinishedVerificationException.java => src/org/mockito/exceptions/misusing/UnfinishedVerificationException.java rename : src/org/mockito/exceptions/NumberOfInvocationsError.java => src/org/mockito/exceptions/verification/NumberOfInvocationsError.java rename : src/org/mockito/exceptions/StrictVerificationError.java => src/org/mockito/exceptions/verification/StrictVerificationError.java rename : src/org/mockito/exceptions/TooLittleActualInvocationsError.java => src/org/mockito/exceptions/verification/TooLittleActualInvocationsError.java rename : src/org/mockito/exceptions/TooManyActualInvocationsError.java => src/org/mockito/exceptions/verification/TooManyActualInvocationsError.java rename : src/org/mockito/exceptions/VerificationError.java => src/org/mockito/exceptions/verification/VerificationError.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40151", "commit": "\n--- a/src/org/mockito/exceptions/Exceptions.java\n+++ b/src/org/mockito/exceptions/Exceptions.java\n  */\n package org.mockito.exceptions;\n \n-import static org.mockito.exceptions.Strings.join;\n+import static org.mockito.exceptions.StringJoiner.join;\n \n import org.mockito.exceptions.cause.*;\n+import org.mockito.exceptions.misusing.*;\n import org.mockito.exceptions.parents.*;\n+import org.mockito.exceptions.verification.*;\n \n /**\n  * All messages in one place makes it easier to tune and amend the text. \n--- /dev/null\n+++ b/src/org/mockito/exceptions/StringJoiner.java\n+package org.mockito.exceptions;\n+\n+class StringJoiner {\n+\n+    static String join(String ... linesToBreak) {\n+        StringBuilder out = new StringBuilder(\"\\n\");\n+        for (String line : linesToBreak) {\n+            out.append(line).append(\"\\n\");\n+        }\n+        int lastBreak = out.lastIndexOf(\"\\n\");\n+        return out.replace(lastBreak, lastBreak+1, \"\").toString();\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/misusing/InvalidUseOfMatchersException.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.misusing;\n+\n+import org.mockito.exceptions.parents.MockitoException;\n+\n+public class InvalidUseOfMatchersException extends MockitoException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public InvalidUseOfMatchersException(String message) {\n+        super(  \"\\n\" +\n+                message +\n+                \"\\n\" +\n+                \"Read more: http://code.google.com/p/mockito/matchers\");\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/misusing/MissingMethodInvocationException.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.misusing;\n+\n+import org.mockito.exceptions.parents.MockitoException;\n+\n+public class MissingMethodInvocationException extends MockitoException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public MissingMethodInvocationException(String message) {\n+        super(message);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/misusing/NotAMockException.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.misusing;\n+\n+import org.mockito.exceptions.parents.MockitoException;\n+\n+public class NotAMockException extends MockitoException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public NotAMockException(Object object) {\n+        super(\"Not a mock: \" + object.getClass().getName());\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/misusing/UnfinishedStubbingException.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.misusing;\n+\n+import org.mockito.exceptions.parents.MockitoException;\n+\n+public class UnfinishedStubbingException extends MockitoException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public UnfinishedStubbingException(String message) {\n+        super(message);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/misusing/UnfinishedVerificationException.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.misusing;\n+\n+import org.mockito.exceptions.parents.MockitoException;\n+\n+public class UnfinishedVerificationException extends MockitoException {\n+    \n+    private static final long serialVersionUID = 1L;\n+\n+    public UnfinishedVerificationException(String message) {\n+        super(message);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/NumberOfInvocationsError.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.verification;\n+\n+import org.mockito.exceptions.parents.MockitoAssertionError;\n+\n+public class NumberOfInvocationsError extends MockitoAssertionError {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public NumberOfInvocationsError(String message) {\n+        super(message);\n+    }\n+\n+    public NumberOfInvocationsError(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/StrictVerificationError.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.verification;\n+\n+import org.mockito.exceptions.parents.MockitoAssertionError;\n+\n+public class StrictVerificationError extends MockitoAssertionError {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public StrictVerificationError(String string) {\n+        super(string);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/TooLittleActualInvocationsError.java\n+package org.mockito.exceptions.verification;\n+\n+import org.mockito.exceptions.parents.MockitoAssertionError;\n+\n+public class TooLittleActualInvocationsError extends MockitoAssertionError {\n+\n+    private static final long serialVersionUID = 1L;\n+    \n+    public TooLittleActualInvocationsError(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/TooManyActualInvocationsError.java\n+package org.mockito.exceptions.verification;\n+\n+import org.mockito.exceptions.parents.MockitoAssertionError;\n+\n+public class TooManyActualInvocationsError extends MockitoAssertionError {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public TooManyActualInvocationsError(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/VerificationError.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors \n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.verification;\n+\n+import org.mockito.exceptions.parents.MockitoAssertionError;\n+\n+\n+public class VerificationError extends MockitoAssertionError {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public VerificationError(String message) {\n+        super(message);\n+    }\n+\n+    public VerificationError(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}\n--- a/src/org/mockito/internal/LastArguments.java\n+++ b/src/org/mockito/internal/LastArguments.java\n \n import java.util.*;\n \n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.InvalidUseOfMatchersException;\n import org.mockito.internal.matchers.*;\n \n public class LastArguments {\n--- a/src/org/mockito/internal/MockControl.java\n+++ b/src/org/mockito/internal/MockControl.java\n import java.util.*;\n \n import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.InvalidUseOfMatchersException;\n import org.mockito.internal.matchers.*;\n \n public class MockControl<T> implements MockAwareInvocationHandler<T>, MockitoExpectation<T>, VoidMethodExpectation<T>, MethodSelector<T> {\n--- a/src/org/mockito/internal/MockUtil.java\n+++ b/src/org/mockito/internal/MockUtil.java\n \n import net.sf.cglib.proxy.*;\n \n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.NotAMockException;\n import org.mockito.exceptions.parents.MockitoException;\n import org.mockito.internal.MockFactory.MockMethodInterceptor;\n \n--- a/src/org/mockito/internal/MockitoBehavior.java\n+++ b/src/org/mockito/internal/MockitoBehavior.java\n         Exceptions.strictlyWantedInvocationDiffersFromActual(wanted, actual);\n     }\n \n+    //TODO Cyclomatic Complexity = 10 :|\n     private void checkOrderOfInvocations(ExpectedInvocation wanted, VerifyingMode mode) {\n         if (!mode.orderOfInvocationsMatters()) {\n             return;\n--- a/test/org/mockito/MockUtilTest.java\n+++ b/test/org/mockito/MockUtilTest.java\n import net.sf.cglib.proxy.*;\n \n import org.junit.Test;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.NotAMockException;\n import org.mockito.exceptions.parents.MockitoException;\n import org.mockito.util.RequiresValidState;\n \n--- a/test/org/mockito/MockitoTest.java\n+++ b/test/org/mockito/MockitoTest.java\n import java.util.List;\n \n import org.junit.*;\n-import org.mockito.exceptions.NotAMockException;\n+import org.mockito.exceptions.misusing.NotAMockException;\n import org.mockito.internal.*;\n import org.mockito.util.RequiresValidState;\n \n--- a/test/org/mockito/exceptions/ExceptionsTest.java\n+++ b/test/org/mockito/exceptions/ExceptionsTest.java\n package org.mockito.exceptions;\n \n import org.junit.Test;\n+import org.mockito.exceptions.verification.TooLittleActualInvocationsError;\n import org.mockito.util.RequiresValidState;\n \n \n--- a/test/org/mockito/exceptions/parents/MockitoAssertionErrorTest.java\n+++ b/test/org/mockito/exceptions/parents/MockitoAssertionErrorTest.java\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n-import org.mockito.exceptions.parents.MockitoAssertionError;\n import org.mockito.util.RequiresValidState;\n \n public class MockitoAssertionErrorTest extends RequiresValidState {\n--- a/test/org/mockito/exceptions/parents/MockitoExceptionTest.java\n+++ b/test/org/mockito/exceptions/parents/MockitoExceptionTest.java\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n-import org.mockito.exceptions.parents.MockitoException;\n import org.mockito.util.RequiresValidState;\n \n public class MockitoExceptionTest extends RequiresValidState {\n--- a/test/org/mockito/exceptions/parents/StackTraceRemoverTest.java\n+++ b/test/org/mockito/exceptions/parents/StackTraceRemoverTest.java\n import java.util.*;\n \n import org.junit.Test;\n-import org.mockito.exceptions.parents.CommonStackTraceRemover;\n import org.mockito.util.RequiresValidState;\n \n public class StackTraceRemoverTest extends RequiresValidState {\n--- a/test/org/mockito/internal/MockControlTest.java\n+++ b/test/org/mockito/internal/MockControlTest.java\n import static org.junit.Assert.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.InvalidUseOfMatchersException;\n+import org.mockito.exceptions.misusing.InvalidUseOfMatchersException;\n import org.mockito.internal.matchers.Equals;\n import org.mockito.util.RequiresValidState;\n \n--- a/test/org/mockito/util/RequiresValidState.java\n+++ b/test/org/mockito/util/RequiresValidState.java\n package org.mockito.util;\n \n import org.junit.Before;\n-import org.mockito.internal.*;\n+import org.mockito.internal.MockitoState;\n \n /**\n  * the easiest way to make sure that tests clean up invalid state is to require\n--- a/test/org/mockitousage/InvalidStateDetectionTest.java\n+++ b/test/org/mockitousage/InvalidStateDetectionTest.java\n import static org.mockito.Mockito.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.*;\n import org.mockito.internal.StateResetter;\n import org.mockito.util.RequiresValidState;\n \n--- a/test/org/mockitousage/InvalidUsageTest.java\n+++ b/test/org/mockitousage/InvalidUsageTest.java\n \n import org.junit.*;\n import org.mockito.Strictly;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.misusing.MissingMethodInvocationException;\n import org.mockito.exceptions.parents.MockitoException;\n import org.mockito.internal.StateResetter;\n import org.mockito.util.RequiresValidState;\n--- a/test/org/mockitousage/MultiThreadedTest.java\n+++ b/test/org/mockitousage/MultiThreadedTest.java\n import org.junit.runner.Result;\n import org.junit.runner.notification.Failure;\n import org.mockito.*;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.parents.*;\n import org.mockito.internal.*;\n import org.mockito.internal.matchers.EqualsTest;\n--- a/test/org/mockitousage/StackTrackeChangingTest.java\n+++ b/test/org/mockitousage/StackTrackeChangingTest.java\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n public class StackTrackeChangingTest extends RequiresValidState {\n--- a/test/org/mockitousage/StackTrackeFilteringTest.java\n+++ b/test/org/mockitousage/StackTrackeFilteringTest.java\n \n import org.junit.*;\n import org.mockito.*;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.parents.MockitoException;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.internal.StateResetter;\n import org.mockito.util.RequiresValidState;\n \n--- a/test/org/mockitousage/UsingVarargsTest.java\n+++ b/test/org/mockitousage/UsingVarargsTest.java\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n public class UsingVarargsTest extends RequiresValidState {\n--- a/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n \n import org.junit.Test;\n import org.mockito.Strictly;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n public class IncorectBindingPuzzleFixedTest extends RequiresValidState {\n--- a/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n+++ b/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n \n import org.junit.*;\n import org.mockito.*;\n-import org.mockito.exceptions.InvalidUseOfMatchersException;\n+import org.mockito.exceptions.misusing.InvalidUseOfMatchersException;\n import org.mockito.internal.StateResetter;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n--- a/test/org/mockitousage/matchers/MatchersTest.java\n+++ b/test/org/mockitousage/matchers/MatchersTest.java\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/matchers/VerificationAndStubbingUsingMatchersTest.java\n+++ b/test/org/mockitousage/matchers/VerificationAndStubbingUsingMatchersTest.java\n import static org.mockito.Mockito.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/stubbing/BasicStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/BasicStubbingTest.java\n import static org.mockito.Mockito.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n import java.util.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.parents.MockitoException;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings({\"serial\", \"unchecked\"})\n--- a/test/org/mockitousage/verification/AtLeastOnceVerificationTest.java\n+++ b/test/org/mockitousage/verification/AtLeastOnceVerificationTest.java\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockitousage/verification/BasicVerificationTest.java\n+++ b/test/org/mockitousage/verification/BasicVerificationTest.java\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.verification.*;\n import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockitousage/verification/DescriptiveMessagesOnStrictOrderErrorsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesOnStrictOrderErrorsTest.java\n \n import org.junit.*;\n import org.mockito.*;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.verification.*;\n import org.mockito.internal.StateResetter;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n--- a/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n package org.mockitousage.verification;\n \n import static org.junit.Assert.*;\n-import static org.mockito.util.ExtraMatchers.*;\n-import static org.mockito.CrazyMatchers.*;\n+import static org.mockito.CrazyMatchers.aryEq;\n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n+import static org.mockito.util.ExtraMatchers.*;\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.cause.*;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n+++ b/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n  */\n package org.mockitousage.verification;\n \n-import static org.mockito.util.ExtraMatchers.*;\n import static org.junit.Assert.*;\n+import static org.mockito.util.ExtraMatchers.messageContains;\n \n import java.util.LinkedList;\n \n import org.junit.*;\n import org.mockito.Mockito;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.cause.*;\n+import org.mockito.exceptions.verification.*;\n import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockitousage/verification/NoMoreInteractionsVerificationTest.java\n+++ b/test/org/mockitousage/verification/NoMoreInteractionsVerificationTest.java\n import java.util.*;\n \n import org.junit.*;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockitousage/verification/VerificationInOrderMixedWithOrdiraryVerificationTest.java\n+++ b/test/org/mockitousage/verification/VerificationInOrderMixedWithOrdiraryVerificationTest.java\n \n import org.junit.*;\n import org.mockito.Strictly;\n-import org.mockito.exceptions.*;\n import org.mockito.exceptions.parents.MockitoException;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/verification/VerificationInOrderTest.java\n+++ b/test/org/mockitousage/verification/VerificationInOrderTest.java\n \n import org.junit.*;\n import org.mockito.Strictly;\n-import org.mockito.exceptions.*;\n+import org.mockito.exceptions.verification.*;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n--- a/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n+++ b/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n \n import org.junit.*;\n import org.mockito.*;\n-import org.mockito.exceptions.VerificationError;\n+import org.mockito.exceptions.verification.VerificationError;\n import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n ", "timestamp": 1197224923, "metainfo": ""}