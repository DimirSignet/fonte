{"sha": "57ebef695c4b323da0fba48f2375fda306ce26ef", "log": "rename job with junit runners  --HG-- rename : src/org/mockito/runners/MockitoJUnit4Runner.java => src/org/mockito/runners/MockitoJUnit44Runner.java rename : src/org/mockito/runners/MockitoJUnit45Runner.java => src/org/mockito/runners/MockitoJUnitRunner.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40854", "commit": "\n--- a/src/org/mockito/Mock.java\n+++ b/src/org/mockito/Mock.java\n import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\n \n-import org.mockito.runners.MockitoJUnit4Runner;\n+import org.mockito.runners.MockitoJUnit44Runner;\n \n /**\n  * <ul>\n  * <p>\n  * In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class. \n  * For JUnit3 <code>initMocks()</code> can go to <code>setup()</code> method of a base class.\n- * You can also put it in your JUnit4 runner (&#064;RunWith) or use built-in runners: {@link MockitoJUnit4Runner}, {@link MockitoJUnit45Runner}\n+ * You can also put it in your JUnit4 runner (&#064;RunWith) or use built-in runners: {@link MockitoJUnit44Runner}, {@link MockitoJUnitRunner}\n  */\n @Target( { FIELD })\n @Retention(RetentionPolicy.RUNTIME)\n--- a/src/org/mockito/MockitoAnnotations.java\n+++ b/src/org/mockito/MockitoAnnotations.java\n import java.lang.reflect.Field;\n \n import org.mockito.exceptions.base.MockitoException;\n-import org.mockito.runners.MockitoJUnit4Runner;\n+import org.mockito.runners.MockitoJUnit44Runner;\n \n /**\n  * <ul>\n  * <p>\n  * In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class. \n  * For JUnit3 <code>initMocks()</code> can go to <code>setup()</code> method of a base class.\n- * You can also put it in your JUnit runner (&#064;RunWith) or use built-in runners: {@link MockitoJUnit4Runner}, {@link MockitoJUnit45Runner}\n+ * You can also put it in your JUnit runner (&#064;RunWith) or use built-in runners: {@link MockitoJUnit44Runner}, {@link MockitoJUnitRunner}\n  */\n public class MockitoAnnotations {\n \n--- /dev/null\n+++ b/src/org/mockito/runners/MockitoJUnit44Runner.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.runners;\n+\n+import org.junit.internal.runners.InitializationError;\n+import org.junit.internal.runners.JUnit4ClassRunner;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+\n+/**\n+ * JUnit 4.0-4.4 runner initializes mocks annotated with {@link Mock},\n+ * so that explicit usage of {@link MockitoAnnotations#initMocks(Object)} is not necessary. \n+ * Mocks are initialized before each test method. \n+ * Runner is completely optional - there are other ways you can get &#064;Mock working, for example by writing a base class.\n+ * Read more in javadoc for {@link MockitoAnnotations#initMocks(Object)}\n+ * <p>\n+ * Example:\n+ * <pre>\n+ * &#064;RunWith(MockitoJUnit44Runner.class)\n+ * public class ExampleTest {\n+ * \n+ *     &#064;Mock\n+ *     private List list;\n+ * \n+ *     &#064;Test\n+ *     public void shouldDoSomething() {\n+ *         list.add(100);\n+ *     }\n+ * }\n+ * <p>\n+ * \n+ * </pre>\n+ */\n+@SuppressWarnings(\"deprecation\")\n+public class MockitoJUnit44Runner extends JUnit4ClassRunner {\n+\n+    public MockitoJUnit44Runner(Class<?> klass) throws InitializationError {\n+        super(klass);\n+    }\n+\n+    @Override\n+    protected Object createTest() throws Exception {\n+        Object test = super.createTest();\n+        MockitoAnnotations.initMocks(test);\n+        return test;\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/runners/MockitoJUnitRunner.java\n+package org.mockito.runners;\n+\n+import org.junit.runners.BlockJUnit4ClassRunner;\n+import org.junit.runners.model.FrameworkMethod;\n+import org.junit.runners.model.InitializationError;\n+import org.junit.runners.model.Statement;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+\n+/**\n+ * Uses new default JUnit's runner {@link BlockJUnit4ClassRunner}.\n+ * <p>\n+ * JUnit 4.5 runner initializes mocks annotated with {@link Mock},\n+ * so that explicit usage of {@link MockitoAnnotations#initMocks(Object)} is not necessary. \n+ * Mocks are initialized before each test method. \n+ * Runner is completely optional - there are other ways you can get &#064;Mock working, for example by writing a base class.\n+ * Read more in javadoc for {@link MockitoAnnotations#initMocks(Object)}\n+ * <p>\n+ * Example:\n+ * <pre>\n+ * &#064;RunWith(MockitoJUnit44Runner.class)\n+ * public class ExampleTest {\n+ * \n+ *     &#064;Mock\n+ *     private List list;\n+ * \n+ *     &#064;Test\n+ *     public void shouldDoSomething() {\n+ *         list.add(100);\n+ *     }\n+ * }\n+ * <p>\n+ * \n+ * </pre>\n+ */\n+public class MockitoJUnitRunner extends BlockJUnit4ClassRunner {\n+\n+    public MockitoJUnitRunner(Class<?> klass) throws InitializationError {\n+        super(klass);\n+    }\n+\n+    @Override\n+    protected Statement withBefores(FrameworkMethod method, Object target, Statement statement) {\n+        MockitoAnnotations.initMocks(target);\n+        return super.withBefores(method, target, statement);\n+    }\n+}\n--- a/test/org/mockitousage/examples/use/ExampleTest.java\n+++ b/test/org/mockitousage/examples/use/ExampleTest.java\n import org.junit.runner.RunWith;\n import org.mockito.InOrder;\n import org.mockito.Mock;\n-import org.mockito.runners.MockitoJUnit4Runner;\n+import org.mockito.runners.MockitoJUnit44Runner;\n import org.mockitoutil.TestBase;\n \n-@RunWith(MockitoJUnit4Runner.class)\n+@RunWith(MockitoJUnit44Runner.class)\n public class ExampleTest extends TestBase {\n     \n     @Mock private ArticleCalculator mockCalculator;\n--- a/test/org/mockitousage/junitrunner/JUnit45RunnerTest.java\n+++ b/test/org/mockitousage/junitrunner/JUnit45RunnerTest.java\n package org.mockitousage.junitrunner;\n \n import org.junit.runner.RunWith;\n-import org.mockito.runners.MockitoJUnit45Runner;\n+import org.mockito.runners.MockitoJUnitRunner;\n \n-@RunWith(MockitoJUnit45Runner.class)\n+@RunWith(MockitoJUnitRunner.class)\n public class JUnit45RunnerTest extends JUnitRunnerTestCase {\n }\n--- a/test/org/mockitousage/junitrunner/JUnit4RunnerTest.java\n+++ b/test/org/mockitousage/junitrunner/JUnit4RunnerTest.java\n package org.mockitousage.junitrunner;\n \n import org.junit.runner.RunWith;\n-import org.mockito.runners.MockitoJUnit4Runner;\n+import org.mockito.runners.MockitoJUnit44Runner;\n \n-@RunWith(MockitoJUnit4Runner.class)\n+@RunWith(MockitoJUnit44Runner.class)\n public class JUnit4RunnerTest extends JUnitRunnerTestCase {\n }", "timestamp": 1220044891, "metainfo": ""}