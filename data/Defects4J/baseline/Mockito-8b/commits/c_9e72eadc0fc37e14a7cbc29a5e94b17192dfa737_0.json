{"sha": "9e72eadc0fc37e14a7cbc29a5e94b17192dfa737", "log": "Fixed one bug and reenabled missing tests  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401872", "commit": "\n--- a/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java\n \n import org.mockito.Captor;\n import org.mockito.InjectMock;\n+import org.mockito.Mock;\n import org.mockito.MockitoAnnotations;\n import org.mockito.Spy;\n-import org.mockito.MockitoAnnotations.Mock;\n import org.mockito.configuration.AnnotationEngine;\n import org.mockito.exceptions.Reporter;\n import org.mockito.exceptions.base.MockitoException;\n         Field[] fields = context.getDeclaredFields();\n         for (Field field : fields) {\n             if (field.isAnnotationPresent(InjectMock.class)) {\n-//                assertNoAnnotations(field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);\n+                assertNoAnnotations(field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);\n                 injectMocks(testClass);\n             }\n         }\n--- a/test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java\n+++ b/test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java\n import org.mockito.exceptions.base.MockitoException;\n import org.mockitoutil.TestBase;\n \n-@SuppressWarnings(\"unchecked\")\n+@SuppressWarnings({\"unchecked\", \"unused\"})\n public class WrongSetOfAnnotationsTest extends TestBase {\n-\t\n-\t//TODO unsupported combinations of annotations (spy - captor, spy - mock)\n     \n     @Test(expected=MockitoException.class)\n     public void shouldNotAllowMockAndSpy() throws Exception {\n         });\n     }\n     \n-//    @Test(expected=MockitoException.class)\n-    //TODO\n+    @Test(expected=MockitoException.class)\n     public void shouldNotAllowMockAndInjectMock() throws Exception {\n         MockitoAnnotations.initMocks(new Object() {\n             @InjectMock @Mock List mock;\n         });\n     }\n     \n-    //@Test(expected=MockitoException.class)\n-    //TODO\n+    @Test(expected=MockitoException.class)\n     public void shouldNotAllowCaptorAndInjectMock() throws Exception {\n         MockitoAnnotations.initMocks(new Object() {\n             @InjectMock @Captor ArgumentCaptor captor;", "timestamp": 1267127416, "metainfo": ""}