{"sha": "b0a8aef355dbf76af49c3403a11ea77b1c0a4058", "log": "Documented the varargs behavior of argument captor.", "commit": "\n--- a/src/org/mockito/ArgumentCaptor.java\n+++ b/src/org/mockito/ArgumentCaptor.java\n  *   ArgumentCaptor&lt;Person&gt; argument = ArgumentCaptor.forClass(Person.class);\n  *   verify(mock).doSomething(argument.capture());\n  *   assertEquals(\"John\", argument.getValue().getName());\n+ * </code></pre>\n+ *\n+ * Example of capturing varargs:\n+ * <pre class=\"code\"><code class=\"java\">\n+ *   //capturing varargs:\n+ *   ArgumentCaptor&lt;Person&gt; varArgs = ArgumentCaptor.forClass(Person.class);\n+ *   verify(mock).varArgMethod(varArgs.capture());\n+ *   List expected = asList(new Person(\"John\"), new Person(\"Jane\"));\n+ *   assertEquals(expected, varArgs.getAllValues());\n  * </code></pre>\n  *\n  * <p>\n     }\n \n     /**\n-     * Returns the captured value of the argument.\n+     * Returns the captured value of the argument. When capturing varargs use {@link #getAllValues()}.\n      * <p>\n-     * If the method was called multiple times then it returns the latest captured value.\n+     * If verified method was called multiple times then this method it returns the latest captured value.\n      * <p>\n      * See examples in javadoc for {@link ArgumentCaptor} class.\n      * \n     }\n \n     /**\n-     * Returns all captured values. Use it in case the verified method was called multiple times.\n+     * Returns all captured values. Use it when capturing varargs or when the verified method was called multiple times.\n+     * When varargs method was called multiple times, this method returns merged list of all values from all invocations.\n      * <p>\n      * Example: \n      * <pre class=\"code\"><code class=\"java\">\n+     *   mock.doSomething(new Person(\"John\");\n+     *   mock.doSomething(new Person(\"Jane\");\n+     *\n      *   ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class);\n      *   verify(mock, times(2)).doSomething(peopleCaptor.capture());\n      *   \n      *   List&lt;Person&gt; capturedPeople = peopleCaptor.getAllValues();\n      *   assertEquals(\"John\", capturedPeople.get(0).getName());\n      *   assertEquals(\"Jane\", capturedPeople.get(1).getName());\n+     * </pre>\n+     *\n+     * Example of capturing varargs:\n+     * <pre class=\"code\"><code class=\"java\">\n+     *   mock.countPeople(new Person(\"John\"), new Person(\"Jane\"); //vararg method\n+     *\n+     *   ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class);\n+     *\n+     *   verify(mock).countPeople(peopleCaptor.capture());\n+     *\n+     *   List expected = asList(new Person(\"John\"), new Person(\"Jane\"));\n+     *   assertEquals(expected, peopleCaptor.getAllValues());\n      * </code></pre>\n      * See more examples in javadoc for {@link ArgumentCaptor} class.\n      * ", "timestamp": 1365370647, "metainfo": ""}