{"sha": "efb7b1b43d1ac6f2c2dd17f69903ad1446ebb529", "log": "Moving things around packages to get it more decoupled  --HG-- rename : src/org/mockito/internal/invocation/PrintSettings.java => src/org/mockito/internal/reporting/PrintSettings.java rename : src/org/mockito/internal/invocation/PrintingFriendlyInocation.java => src/org/mockito/internal/reporting/PrintingFriendlyInocation.java rename : src/org/mockito/internal/verification/SmartPrinter.java => src/org/mockito/internal/reporting/SmartPrinter.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401470", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n import org.mockito.internal.matchers.Equals;\n import org.mockito.internal.matchers.MatchersPrinter;\n import org.mockito.internal.matchers.CanPrintArgumentVerbosely;\n+import org.mockito.internal.reporting.PrintSettings;\n+import org.mockito.internal.reporting.PrintingFriendlyInocation;\n import org.mockito.internal.util.MockUtil;\n import org.mockito.internal.util.Primitives;\n import org.mockito.invocation.InvocationOnMock;\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n import org.hamcrest.Matcher;\n import org.mockito.exceptions.PrintableInvocation;\n import org.mockito.internal.debugging.Location;\n+import org.mockito.internal.reporting.PrintSettings;\n+import org.mockito.internal.reporting.PrintingFriendlyInocation;\n \n @SuppressWarnings(\"unchecked\")\n public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyInocation {\n--- a/src/org/mockito/internal/matchers/MatchersPrinter.java\n+++ b/src/org/mockito/internal/matchers/MatchersPrinter.java\n import org.hamcrest.Matcher;\n import org.hamcrest.SelfDescribing;\n import org.hamcrest.StringDescription;\n-import org.mockito.internal.invocation.PrintSettings;\n+import org.mockito.internal.reporting.PrintSettings;\n \n @SuppressWarnings(\"unchecked\")\n public class MatchersPrinter {\n--- /dev/null\n+++ b/src/org/mockito/internal/reporting/PrintSettings.java\n+package org.mockito.internal.reporting;\n+\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import org.hamcrest.Matcher;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class PrintSettings {\n+\n+    private boolean multiline;\n+    private List<Matcher> verboseMatchers = new LinkedList<Matcher>();\n+\n+    public void setMultiline(boolean multiline) {\n+        this.multiline = multiline;\n+    }\n+\n+    public void setVerboseArguments(boolean verboseArguments) {\n+    }\n+\n+    public boolean isMultiline() {\n+        return multiline;\n+    }\n+\n+    public static PrintSettings verboseMatchers(Matcher ... verboselyPrinted) {\n+        PrintSettings settings = new PrintSettings();\n+        settings.verboseMatchers.addAll((List) Arrays.asList(verboselyPrinted));\n+        return settings;\n+    }\n+\n+    public boolean printsVerbosely(Matcher matcher) {\n+        for (Matcher m : verboseMatchers) {\n+            if (m == matcher) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/internal/reporting/PrintingFriendlyInocation.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.reporting;\n+\n+public interface PrintingFriendlyInocation {\n+\n+    String toString(PrintSettings printSettings);\n+\n+}\n--- /dev/null\n+++ b/src/org/mockito/internal/reporting/SmartPrinter.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.reporting;\n+\n+\n+/**\n+ * Makes sure both wanted and actual are printed consistently (single line or multiline)\n+ * <p>\n+ * Makes arguments printed with types if necessary\n+ */\n+public class SmartPrinter {\n+\n+    private final String wanted;\n+    private final String actual;\n+\n+    public SmartPrinter(PrintingFriendlyInocation wanted, PrintingFriendlyInocation actual) {\n+        PrintSettings printSettings = new PrintSettings();\n+        printSettings.setMultiline(wanted.toString().contains(\"\\n\") || actual.toString().contains(\"\\n\"));\n+        \n+        this.wanted = wanted.toString(printSettings);\n+        this.actual = actual.toString(printSettings);\n+    }\n+\n+    public String getWanted() {\n+        return wanted;\n+    }\n+\n+    public String getActual() {\n+        return actual;\n+    }\n+}\n--- a/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.verification.SmartPrinter;\n+import org.mockito.internal.reporting.SmartPrinter;\n \n public class MissingInvocationChecker {\n     \n--- a/test/org/mockito/internal/invocation/InvocationMatcherTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationMatcherTest.java\n import org.mockito.Mock;\n import org.mockito.internal.matchers.Equals;\n import org.mockito.internal.matchers.NotNull;\n+import org.mockito.internal.reporting.PrintingFriendlyInocation;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockito/internal/invocation/PrintSettingsTest.java\n+++ b/test/org/mockito/internal/invocation/PrintSettingsTest.java\n \n import org.junit.Test;\n import org.mockito.internal.matchers.Equals;\n+import org.mockito.internal.reporting.PrintSettings;\n \n public class PrintSettingsTest {\n     \n--- a/test/org/mockito/internal/matchers/MatchersPrinterTest.java\n+++ b/test/org/mockito/internal/matchers/MatchersPrinterTest.java\n import java.util.List;\n \n import org.junit.Test;\n-import org.mockito.internal.invocation.PrintSettings;\n+import org.mockito.internal.reporting.PrintSettings;\n import org.mockitoutil.TestBase;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockito/internal/verification/SmartPrinterTest.java\n+++ b/test/org/mockito/internal/verification/SmartPrinterTest.java\n import org.junit.Test;\n import org.mockito.Mock;\n import org.mockito.internal.invocation.Invocation;\n-import org.mockito.internal.invocation.PrintingFriendlyInocation;\n+import org.mockito.internal.reporting.PrintingFriendlyInocation;\n+import org.mockito.internal.reporting.SmartPrinter;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n ", "timestamp": 1244234506, "metainfo": ""}