{"sha": "8ce84afb0df39309cd667af2267b3cf9c55f5751", "log": "In order to have functional tests around atLeast(x)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401593", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/verification/AtLeastXVerificationTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.verification;\n+\n+import org.junit.Test;\n+import static org.mockito.Matchers.anyString;\n+import org.mockito.Mock;\n+import static org.mockito.Mockito.*;\n+import org.mockito.exceptions.base.MockitoAssertionError;\n+import org.mockitoutil.TestBase;\n+\n+import java.util.List;\n+\n+public class AtLeastXVerificationTest extends TestBase {\n+\n+    @Mock private List mock;\n+\n+    @Test\n+    public void shouldVerifyAtLeastXTimes() throws Exception {\n+        //when\n+        mock.clear();\n+        mock.clear();\n+        mock.clear();\n+\n+        //then\n+        verify(mock, atLeast(2)).clear();\n+    }\n+\n+    @Test\n+    public void shouldFailVerifiationAtLeastXTimes() throws Exception {\n+        mock.add(\"one\");\n+        verify(mock, atLeast(1)).add(anyString());\n+\n+        try {\n+            verify(mock, atLeast(1)).add(anyString());\n+            fail();\n+        } catch (MockitoAssertionError e) {}\n+    }\n+    \n+    @Test\n+    public void shouldAllowAtLeastZeroForTheSakeOfVerifyNoMoreInteractionsSometimes() throws Exception {\n+        //when\n+        mock.add(\"one\");\n+        mock.clear();\n+\n+        //then\n+        verify(mock, atLeast(0)).add(\"one\");\n+        verify(mock, atLeast(0)).clear();\n+\n+        verifyNoMoreInteractions(mock);        \n+    }\n+}", "timestamp": 1250977151, "metainfo": ""}