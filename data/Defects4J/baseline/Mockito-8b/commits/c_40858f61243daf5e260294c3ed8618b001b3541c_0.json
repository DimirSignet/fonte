{"sha": "40858f61243daf5e260294c3ed8618b001b3541c", "log": "Added pom comparison for detecting if the release is needed.", "commit": "\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PomComparator.java\n+package org.mockito.release.comparison;\n+\n+import groovy.lang.Closure;\n+\n+import static org.mockito.release.util.ArgumentValidation.notNull;\n+\n+class PomComparator {\n+\n+    private Closure<String> left;\n+    private Closure<String> right;\n+\n+    public PomComparator setPair(Closure<String> left, Closure<String> right) {\n+        notNull(left, \"pom content to compare\", right, \"pom content to compare\");\n+        this.left = left;\n+        this.right = right;\n+        return this;\n+    }\n+\n+    public boolean areEqual() {\n+        String left = this.left.call();\n+        String right = this.right.call();\n+\n+        notNull(left, \"pom content to compare\", right, \"pom content to compare\");\n+\n+        return replaceVersion(left).equals(replaceVersion(right));\n+    }\n+\n+    private String replaceVersion(String pom) {\n+        return pom.replaceFirst(\"<version>(.*)</version>\", \"<version>foobar</version>\");\n+    }\n+}\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparator.java\n+package org.mockito.release.comparison;\n+\n+public interface PublicationsComparator {\n+}\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java\n+package org.mockito.release.comparison;\n+\n+import groovy.lang.Closure;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import java.io.File;\n+\n+public class PublicationsComparatorTask extends DefaultTask implements PublicationsComparator {\n+\n+    private SourceJarComparator sourceJarComparator = new SourceJarComparator();\n+    private PomComparator pomComparator = new PomComparator();\n+    private Boolean publicationsEqual;\n+\n+    void compareSourcesJar(Closure<File> left, Closure<File> right) {\n+        sourceJarComparator.addPair(left, right);\n+    }\n+\n+    public boolean isPublicationsEqual() {\n+        assert publicationsEqual != null : \"task not executed yet\";\n+        return publicationsEqual;\n+    }\n+\n+    void comparePom(Closure<String> left, Closure<String> right) {\n+        pomComparator.setPair(left, right);\n+    }\n+\n+    @TaskAction public void comparePublications() {\n+        getLogger().lifecycle(\"{} - about to compare publications\", getPath());\n+        boolean poms = pomComparator.areEqual();\n+        if (!poms) {\n+            getLogger().lifecycle(\"{} - pom files are not equal\", getPath());\n+        }\n+        boolean jars = sourceJarComparator.areEqual();\n+        if (!jars) {\n+            getLogger().lifecycle(\"{} - source jars are not equal\", getPath());\n+        }\n+        this.publicationsEqual = jars && poms;\n+    }\n+}\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java\n+package org.mockito.release.comparison;\n+\n+import groovy.lang.Closure;\n+\n+import java.io.File;\n+\n+class SourceJarComparator {\n+    public void addPair(Closure<File> left, Closure<File> right) {\n+\n+    }\n+\n+    public boolean areEqual() {\n+        return false;\n+    }\n+}", "timestamp": 1415227400, "metainfo": ""}