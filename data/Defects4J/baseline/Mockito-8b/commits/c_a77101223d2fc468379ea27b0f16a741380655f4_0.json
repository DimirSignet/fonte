{"sha": "a77101223d2fc468379ea27b0f16a741380655f4", "log": "added some missing tests around corner cases  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401485", "commit": "\n--- a/src/org/mockito/internal/matchers/Equals.java\n+++ b/src/org/mockito/internal/matchers/Equals.java\n     }\n \n     public boolean typeMatches(Object object) {\n-        return object.getClass() == wanted.getClass();\n+        return wanted != null && object != null && object.getClass() == wanted.getClass();\n     }\n }\n--- a/test/org/mockito/internal/matchers/EqualsTest.java\n+++ b/test/org/mockito/internal/matchers/EqualsTest.java\n         ContainsExtraTypeInformation equals = new Equals(10);\n         \n         //then\n-        //TODO: null checks\n         assertTrue(equals.typeMatches(10));\n         assertFalse(equals.typeMatches(10L));\n     }\n+    \n+    @Test\n+    public void shouldMatchTypesSafelyWhenActualIsNull() throws Exception {\n+        //when\n+        ContainsExtraTypeInformation equals = new Equals(null);\n+        \n+        //then\n+        assertFalse(equals.typeMatches(10));\n+    }\n+\n+    @Test\n+    public void shouldMatchTypesSafelyWhenGivenIsNull() throws Exception {\n+        //when\n+        ContainsExtraTypeInformation equals = new Equals(10);\n+        \n+        //then\n+        assertFalse(equals.typeMatches(null));\n+    }\n }", "timestamp": 1244409524, "metainfo": ""}