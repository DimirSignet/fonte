{"sha": "c7a12c51a89f1e75cd12cc5e8239c273439611af", "log": "Rename job, simplified the RegisteredInvocations instance that works with stubOnly().  --HG-- rename : src/org/mockito/internal/verification/RegisteredInvocationsStubOnly.java => src/org/mockito/internal/verification/SingleRegisteredInvocation.java", "commit": "\n--- a/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n+++ b/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n import org.mockito.internal.stubbing.answers.AnswersValidator;\n import org.mockito.internal.verification.DefaultRegisteredInvocations;\n import org.mockito.internal.verification.RegisteredInvocations;\n-import org.mockito.internal.verification.RegisteredInvocationsStubOnly;\n+import org.mockito.internal.verification.SingleRegisteredInvocation;\n import org.mockito.invocation.Invocation;\n import org.mockito.mock.MockCreationSettings;\n import org.mockito.stubbing.Answer;\n \n     private RegisteredInvocations createRegisteredInvocations(MockCreationSettings mockSettings) {\n         return mockSettings.isStubOnly()\n-          ? new RegisteredInvocationsStubOnly()\n+          ? new SingleRegisteredInvocation()\n           : new DefaultRegisteredInvocations();\n     }\n }\n--- /dev/null\n+++ b/src/org/mockito/internal/verification/SingleRegisteredInvocation.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+\n+package org.mockito.internal.verification;\n+\n+import org.mockito.invocation.Invocation;\n+\n+import java.io.Serializable;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class SingleRegisteredInvocation implements RegisteredInvocations, Serializable {\n+\n+    private Invocation invocation;\n+\n+    public void add(Invocation invocation) {\n+        this.invocation = invocation;\n+    }\n+\n+    public void removeLast() {\n+        invocation = null;\n+    }\n+\n+    public List<Invocation> getAll() {\n+        return Collections.emptyList();\n+    }\n+\n+    public boolean isEmpty() {\n+        return invocation == null;\n+    }\n+}", "timestamp": 1347831543, "metainfo": ""}