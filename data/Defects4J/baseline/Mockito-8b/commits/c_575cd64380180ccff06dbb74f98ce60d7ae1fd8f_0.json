{"sha": "575cd64380180ccff06dbb74f98ce60d7ae1fd8f", "log": "Refactoring while working on issue 184", "commit": "\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.util.MockName;\n import org.mockito.internal.util.MockUtil;\n+import org.mockito.internal.util.ObjectMethodsGuru;\n import org.mockito.internal.util.Primitives;\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)\n      */\n     public Object answer(InvocationOnMock invocation) {\n-        if (Invocation.isToString(invocation)) {\n+        if (new ObjectMethodsGuru().isToString(invocation.getMethod())) {\n             Object mock = invocation.getMock();\n             MockName name = new MockUtil().getMockName(mock);\n             if (name.isSurrogate()) {\n--- a/src/org/mockito/internal/verification/RegisteredInvocations.java\n+++ b/src/org/mockito/internal/verification/RegisteredInvocations.java\n \n     private static class RemoveToString implements Filter<Invocation> {\n         public boolean isOut(Invocation invocation) {\n-            return Invocation.isToString(invocation);\n+            return invocation.isToString();\n         }\n     }\n }", "timestamp": 1288564800, "metainfo": ""}