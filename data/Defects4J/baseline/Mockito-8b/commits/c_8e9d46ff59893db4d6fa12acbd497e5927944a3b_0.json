{"sha": "8e9d46ff59893db4d6fa12acbd497e5927944a3b", "log": "Tidied up the API interface of BDDMockito  Ensured concrete classes don't leak", "commit": "\n--- a/src/org/mockito/BDDMockito.java\n+++ b/src/org/mockito/BDDMockito.java\n     /**\n      * @deprecated not part of the public API, use {@link BDDMyOngoingStubbing} instead.\n      */\n+    @Deprecated\n     public static class BDDOngoingStubbingImpl<T> implements BDDMyOngoingStubbing<T> {\n \n         private final OngoingStubbing<T> mockitoOngoingStubbing;\n      * @since 1.10.0\n      */\n     public static <T> Then<T> then(T mock) {\n-        return new Then<T>(mock);\n+        return new ThenImpl<T>(mock);\n     }\n \n     /**\n      *\n      * @param <T> type of the mock\n      *\n-     * @author Lovro Pandzic\n      * @since 1.10.5\n      */\n-    public final static class Then<T> {\n-\n-        private final T mock;\n-\n-        /**\n-         * @deprecated not part of the public API, use {@link BDDMockito#then(Object)} instead.\n-         */\n-        @Deprecated\n-        public Then(T mock) {\n-\n-            this.mock = mock;\n-        }\n+    public static interface Then<T> {\n \n         /**\n          * @see #verify(Object)\n          * @since 1.10.5\n          */\n+        T should();\n+\n+        /**\n+         * @see #verify(Object, VerificationMode)\n+         * @since 1.10.5\n+         */\n+        T should(VerificationMode mode);\n+    }\n+\n+    static class ThenImpl<T> implements Then<T> {\n+\n+        private final T mock;\n+\n+        ThenImpl(T mock) {\n+            this.mock = mock;\n+        }\n+\n+        /**\n+         * @see #verify(Object)\n+         * @since 1.10.5\n+         */\n         public T should() {\n             return verify(mock);\n         }\n     /**\n      * @deprecated not part of the public API, use {@link BDDStubber} instead.\n      */\n+    @Deprecated\n     public static class BDDStubberImpl implements BDDStubber {\n \n         private final Stubber mockitoStubber;", "timestamp": 1418426970, "metainfo": ""}