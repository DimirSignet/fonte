{"sha": "b57370b051f707fa9d274b6f96bc123a93d0f705", "log": "Lowered priorities on some TODOs  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401403", "commit": "\n--- a/test/org/mockito/MockitoTest.java\n+++ b/test/org/mockito/MockitoTest.java\n         Mockito.inOrder(\"notMock\");\n     }\n     \n-    //TODO: after 1.7 stack filter does not work very well when it comes to threads?\n+    //TODO: after 1.8 stack filter does not work very well when it comes to threads?\n }\n--- a/test/org/mockito/internal/debugging/WarningsPrinterTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsPrinterTest.java\n         assertNotContains(\"was not stubbed\", logger.getLoggedInfo());\n     }\n \n-    // TODO: after 1.7 consider writing a warning when someone tries to mock a\n+    // TODO: after 1.8 consider writing a warning when someone tries to mock a\n     // class that has any final methods\n }\n--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n         \n         Foo smartNull = (Foo) returnValues.valueFor(invocationOf(Foo.class, \"get\"));\n         \n-        //TODO: after 1.7 add functionality of printing params\n+        //TODO: after 1.8 add functionality of printing params\n         assertEquals(\"SmartNull returned by unstubbed get() method on mock\", smartNull + \"\");\n     }\n }\n--- a/test/org/mockitousage/misuse/RestrictedObjectMethodsTest.java\n+++ b/test/org/mockitousage/misuse/RestrictedObjectMethodsTest.java\n     @Ignore\n     @Test\n     public void shouldNotAllowVerifyingRestrictedMethods() {\n-        //TODO: after 1.7 exception message should mention those methods are not verifiable\n+        //TODO: after 1.8 exception message should mention those methods are not verifiable\n         verify(mock).toString();\n         verify(mock).hashCode();\n         verify(mock).equals(null);", "timestamp": 1241295952, "metainfo": ""}