{"sha": "21649c3e56387e29275d90ed9b73b58c64bb0e6d", "log": "Made clear that when pulling matchers it is actually LocalizedMatchers", "commit": "\n--- a/src/org/mockito/internal/invocation/MatchersBinder.java\n+++ b/src/org/mockito/internal/invocation/MatchersBinder.java\n import org.mockito.internal.progress.ArgumentMatcherStorage;\n \n import java.io.Serializable;\n-import java.util.ArrayList;\n import java.util.List;\n \n @SuppressWarnings(\"unchecked\")\n     private static final long serialVersionUID = -311433939339443463L;\n \n     public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation) {\n-        List<Matcher> lastMatchers = argumentMatcherStorage.pullMatchers();\n+        List<LocalizedMatcher> lastMatchers = argumentMatcherStorage.pullLocalizedMatchers();\n         validateMatchers(invocation, lastMatchers);\n \n-        InvocationMatcher invocationWithMatchers = new InvocationMatcher(invocation, lastMatchers);\n+        InvocationMatcher invocationWithMatchers = new InvocationMatcher(invocation, (List<Matcher>)(List) lastMatchers);\n         return invocationWithMatchers;\n     }\n \n-    private void validateMatchers(Invocation invocation, List<? extends Matcher> matchers) {\n-        if (!matchers.isEmpty()) {\n-            int recordedMatchersSize = matchers.size();\n+    private void validateMatchers(Invocation invocation, List<LocalizedMatcher> lastMatchers) {\n+        if (!lastMatchers.isEmpty()) {\n+            int recordedMatchersSize = lastMatchers.size();\n             int expectedMatchersSize = invocation.getArgumentsCount();\n             if (expectedMatchersSize != recordedMatchersSize) {\n-                List<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>((List<LocalizedMatcher>) matchers);\n                 new Reporter().invalidUseOfMatchers(expectedMatchersSize, lastMatchers);\n             }\n         }\n--- a/src/org/mockito/internal/progress/ArgumentMatcherStorage.java\n+++ b/src/org/mockito/internal/progress/ArgumentMatcherStorage.java\n package org.mockito.internal.progress;\n \n import org.hamcrest.Matcher;\n+import org.mockito.internal.matchers.LocalizedMatcher;\n \n import java.util.List;\n \n \n     HandyReturnValues reportMatcher(Matcher matcher);\n \n-    List<Matcher> pullMatchers();\n+    List<LocalizedMatcher> pullLocalizedMatchers();\n \n     HandyReturnValues reportAnd();\n \n--- a/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java\n+++ b/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java\n     }\n \n     /* (non-Javadoc)\n-     * @see org.mockito.internal.progress.ArgumentMatcherStorage#pullMatchers()\n+     * @see org.mockito.internal.progress.ArgumentMatcherStorage#pullLocalizedMatchers()\n      */\n-    public List<Matcher> pullMatchers() {\n+    public List<LocalizedMatcher> pullLocalizedMatchers() {\n         if (matcherStack.isEmpty()) {\n             return Collections.emptyList();\n         }\n     }\n \n     /* (non-Javadoc)\n-     * @see org.mockito.internal.progress.ArgumentMatcherStorage#reportAnd()\n-     */\n+    * @see org.mockito.internal.progress.ArgumentMatcherStorage#reportAnd()\n+    */\n     public HandyReturnValues reportAnd() {\n         assertStateFor(\"And(?)\", TWO_SUB_MATCHERS);\n         And and = new And(popLastArgumentMatchers(TWO_SUB_MATCHERS));", "timestamp": 1331323615, "metainfo": ""}