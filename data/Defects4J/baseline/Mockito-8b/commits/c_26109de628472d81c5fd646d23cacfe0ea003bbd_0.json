{"sha": "26109de628472d81c5fd646d23cacfe0ea003bbd", "log": "Moved one class to internal package as it is not ready yet (see TODO)  --HG-- rename : src/org/mockito/stubbing/ClonesArguments.java => src/org/mockito/internal/stubbing/answers/ClonesArguments.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401867", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/internal/stubbing/answers/ClonesArguments.java\n+package org.mockito.internal.stubbing.answers;\n+\n+import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;\n+import org.mockito.internal.util.reflection.LenientCopyTool;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+import org.objenesis.ObjenesisHelper;\n+\n+//TODO this needs documentation and further analysis - what if someone changes the answer?\n+//we might think about implementing it straight on MockSettings\n+public class ClonesArguments implements Answer<Object> {\n+    public Object answer(InvocationOnMock invocation) throws Throwable {\n+        Object[] arguments = invocation.getArguments();\n+        for (int i = 0; i < arguments.length; i++) {\n+            Object from = arguments[i];\n+            Object newInstance = ObjenesisHelper.newInstance(from.getClass());\n+            new LenientCopyTool().copyToRealObject(from, newInstance);\n+            arguments[i] = newInstance;\n+        }\n+        return new ReturnsEmptyValues().answer(invocation);\n+    }\n+}\n--- a/test/org/mockitousage/stubbing/CloningParameterTest.java\n+++ b/test/org/mockitousage/stubbing/CloningParameterTest.java\n import java.util.List;\n \n import org.junit.Test;\n-import org.mockito.stubbing.ClonesArguments;\n+import org.mockito.internal.stubbing.answers.ClonesArguments;\n import org.mockitoutil.TestBase;\n \n public class CloningParameterTest extends TestBase {", "timestamp": 1267054371, "metainfo": ""}