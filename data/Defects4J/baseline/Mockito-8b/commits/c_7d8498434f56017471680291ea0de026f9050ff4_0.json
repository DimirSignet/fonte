{"sha": "7d8498434f56017471680291ea0de026f9050ff4", "log": "removed warnings and some dead code  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401672", "commit": "\n--- a/src/org/mockito/internal/invocation/ArgumentsComparator.java\n+++ b/src/org/mockito/internal/invocation/ArgumentsComparator.java\n \n import java.util.List;\n \n+@SuppressWarnings(\"unchecked\")\n public class ArgumentsComparator {\n     public boolean argumentsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\n         Object[] actualArgs = actual.getArguments();\n         return true;\n     }\n \n-    //ok, this method is a little bit messy but the vararg business unfortunately is messy...  \n+    //ok, this method is a little bit messy but the vararg business unfortunately is messy...      \n     private boolean varArgsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\n         if (!actual.getMethod().isVarArgs()) {\n             //if the method is not vararg forget about it\n--- a/src/org/mockito/internal/matchers/MatcherDecorator.java\n+++ b/src/org/mockito/internal/matchers/MatcherDecorator.java\n \n import org.hamcrest.Matcher;\n \n+@SuppressWarnings(\"unchecked\")\n public interface MatcherDecorator extends Serializable {\n     Matcher getActualMatcher();\n }\n--- a/test/org/mockitousage/verification/AtLeastXVerificationTest.java\n+++ b/test/org/mockitousage/verification/AtLeastXVerificationTest.java\n \n import java.util.List;\n \n+@SuppressWarnings(\"unchecked\")\n public class AtLeastXVerificationTest extends TestBase {\n \n     @Mock private List mock;", "timestamp": 1257715034, "metainfo": ""}