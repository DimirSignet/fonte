{"sha": "b05fec093dcbe9148486ebe65a418848fa6df21f", "log": "More refactorings  --HG-- rename : src/org/mockito/internal/util/MockitoLoggerImpl.java => src/org/mockito/internal/util/ConsoleMockitoLogger.java rename : test/org/mockito/util/MockitoLoggerStub.java => src/org/mockito/internal/util/SimpleMockitoLogger.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401842", "commit": "\n--- a/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n+++ b/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.util.MockitoLogger;\n+import org.mockito.internal.util.SimpleMockitoLogger;\n \n public class WarningsPrinterImpl {\n \n     }\n \n     public String print() {\n-        //TODO: test and figure out if it is the best place for it\n-        final StringBuilder sb = new StringBuilder();\n-        this.print(new MockitoLogger() {\n-            public void log(Object what) {\n-                sb.append(what);\n-            }\n-        });\n-        return sb.toString();\n+        SimpleMockitoLogger logger = new SimpleMockitoLogger();\n+        this.print(logger);\n+        return logger.getLoggedInfo();\n     }\n }\n--- /dev/null\n+++ b/src/org/mockito/internal/util/ConsoleMockitoLogger.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.util;\n+\n+public class ConsoleMockitoLogger implements MockitoLogger {\n+\n+    /* (non-Javadoc)\n+     * @see org.mockito.internal.util.Logger#print(java.lang.Object)\n+     */\n+    public void log(Object what) {\n+        System.out.print(what.toString());\n+    }\n+}\n--- /dev/null\n+++ b/src/org/mockito/internal/util/SimpleMockitoLogger.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.util;\n+\n+public class SimpleMockitoLogger extends ConsoleMockitoLogger {\n+\n+    StringBuilder loggedInfo = new StringBuilder();\n+\n+    public void log(Object what) {\n+//            can be uncommented when debugging this test\n+//            super.log(what);\n+        loggedInfo.append(what);\n+    }\n+\n+    public String getLoggedInfo() {\n+        return loggedInfo.toString();\n+    }\n+}\n--- a/src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java\n import org.junit.runner.notification.RunListener;\n import org.junit.runner.notification.RunNotifier;\n import org.junit.runners.BlockJUnit4ClassRunner;\n-import org.mockito.MockSettings;\n import org.mockito.internal.debugging.WarningsPrinterImpl;\n import org.mockito.internal.invocation.AllInvocationsFinder;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.UnusedStubsFinder;\n import org.mockito.internal.listeners.CollectCreatedMocks;\n-import org.mockito.internal.listeners.MockingStartedListener;\n import org.mockito.internal.progress.MockingProgress;\n import org.mockito.internal.progress.ThreadSafeMockingProgress;\n import org.mockito.internal.runners.RunnerFactory;\n import org.mockito.internal.runners.RunnerImpl;\n import org.mockito.internal.util.MockitoLogger;\n-import org.mockito.internal.util.MockitoLoggerImpl;\n+import org.mockito.internal.util.ConsoleMockitoLogger;\n \n import java.lang.reflect.InvocationTargetException;\n import java.util.LinkedList;\n import java.util.List;\n-\n-import static java.util.Collections.emptyList;\n \n /**\n  * Uses <b>JUnit 4.5</b> runner {@link BlockJUnit4ClassRunner}.\n     private RunnerImpl runner;\n     \n     public ConsoleSpammingMockitoJUnitRunner(Class<?> klass) throws InvocationTargetException {\n-        this(new MockitoLoggerImpl(), new RunnerFactory().create(klass));\n+        this(new ConsoleMockitoLogger(), new RunnerFactory().create(klass));\n     }\n     \n     ConsoleSpammingMockitoJUnitRunner(MockitoLogger logger, RunnerImpl runnerImpl) {\n--- a/test/org/mockito/internal/debugging/WarningsFinderTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsFinderTest.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.util.MockitoLoggerStub;\n+import org.mockito.internal.util.SimpleMockitoLogger;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n \n     @Mock private IMethods mock;\n     @Mock private FindingsListener listener;\n-    private MockitoLoggerStub logger = new MockitoLoggerStub();\n+    private SimpleMockitoLogger logger = new SimpleMockitoLogger();\n \n     @Test\n     public void shouldPrintUnusedStub() {\n--- a/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n  */\n package org.mockito.internal.debugging;\n \n-import static java.util.Arrays.*;\n import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.*;\n \n-import java.util.Arrays;\n-\n-import org.junit.Before;\n import org.junit.Test;\n import org.mockito.ArgumentCaptor;\n import org.mockito.Mock;\n-import org.mockito.Mockito;\n-import org.mockito.internal.invocation.Invocation;\n-import org.mockito.internal.invocation.InvocationBuilder;\n-import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.util.MockitoLogger;\n-import org.mockito.invocation.InvocationOnMock;\n-import org.mockito.stubbing.Answer;\n-import org.mockito.util.MockitoLoggerStub;\n-import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n public class WarningsPrinterImplTest extends TestBase {\n     }\n \n     @Test\n-    public void shouldPrintUnusedStub() {\n+    public void shouldPassCorrectWarningFlag() {\n         // given\n         WarningsPrinterImpl printer = new WarningsPrinterImpl(true, finder);\n \n--- /dev/null\n+++ b/test/org/mockito/internal/util/SimpleMockitoLoggerTest.java\n+package org.mockito.internal.util;\n+\n+import org.junit.Test;\n+import org.mockitoutil.TestBase;\n+\n+public class SimpleMockitoLoggerTest extends TestBase {\n+\n+    @Test\n+    public void shouldLog() throws Exception {\n+        //given\n+        SimpleMockitoLogger logger = new SimpleMockitoLogger();\n+        //when\n+        logger.log(\"foo\");\n+        //then\n+        assertEquals(\"foo\", logger.getLoggedInfo());\n+    }\n+}\n--- a/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n+++ b/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n import org.junit.runner.notification.RunNotifier;\n import org.junit.runners.model.InitializationError;\n import org.mockito.internal.runners.RunnerImpl;\n-import org.mockito.internal.util.MockitoLoggerImpl;\n+import org.mockito.internal.util.ConsoleMockitoLogger;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n         assertEquals(expectedDescription, description);\n     }\n \n-    public class MockitoLoggerStub extends MockitoLoggerImpl {\n+    public class MockitoLoggerStub extends ConsoleMockitoLogger {\n         \n         StringBuilder loggedInfo = new StringBuilder();\n         ", "timestamp": 1266178994, "metainfo": ""}