{"sha": "51d8f5f04b063ecd778e553768bd02b37a1c0f4e", "log": "got rid of warnings added some TODOs  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401133", "commit": "\n--- a/src/org/mockito/configuration/IMockitoConfiguration.java\n+++ b/src/org/mockito/configuration/IMockitoConfiguration.java\n package org.mockito.configuration;\n \n+//TODO should be abstract class, DefaultMockitoConfiguration\n+//TODO javadocs\n+//TODO test\n public interface IMockitoConfiguration {\n \n     ReturnValues getReturnValues();\n--- a/src/org/mockito/configuration/experimental/ConfigurationSupport.java\n+++ b/src/org/mockito/configuration/experimental/ConfigurationSupport.java\n \n import org.mockito.Mockito;\n import org.mockito.configuration.IMockitoConfiguration;\n+import org.mockito.configuration.ReturnValues;\n import org.mockito.internal.configuration.Configuration;\n+import org.mockito.internal.configuration.DefaultReturnValues;\n import org.mockito.internal.configuration.MockitoConfiguration;\n-import org.mockito.internal.configuration.MockitoProperties;\n import org.mockito.invocation.InvocationOnMock;\n \n /**\n  * <p>\n  * Configuring Mockito is a new concept that we evaluate. Please let us know if you find it useful/harmful. \n  */\n+@SuppressWarnings(\"deprecation\")\n public class ConfigurationSupport {\n+    \n+    private static final ReturnValues DEFAULT_RETURN_VALUES = new DefaultReturnValues();\n     \n     /**\n      * this is what Mockito returns by default for given invocation \n      * @return default return value\n      */\n     public static Object defaultValueFor(InvocationOnMock invocation) {\n-        return MockitoProperties.DEFAULT_RETURN_VALUES.valueFor(invocation);\n+        return DEFAULT_RETURN_VALUES.valueFor(invocation);\n     }\n \n     /**\n--- a/src/org/mockito/internal/configuration/Configuration.java\n+++ b/src/org/mockito/internal/configuration/Configuration.java\n      * @see org.mockito.internal.configuration.MockitoConfiguration#resetReturnValues()\n      */\n     public void resetReturnValues() {\n-        returnValues = MockitoProperties.DEFAULT_RETURN_VALUES;\n+        returnValues = new DefaultReturnValues();\n     }\n }\n--- a/test/org/mockitousage/examples/configure/withbaseclass/MakesMocksNotToReturnNulls.java\n+++ b/test/org/mockitousage/examples/configure/withbaseclass/MakesMocksNotToReturnNulls.java\n import org.junit.Before;\n import org.mockito.configuration.experimental.ConfigurationSupport;\n import org.mockitousage.examples.configure.FriendlyReturnValues;\n-\n+\n+//deprecated but will dump it eventually\n+@SuppressWarnings(\"deprecation\")\n public class MakesMocksNotToReturnNulls {\n-    \n+    \n     @Before\n     public void configureMockito() {\n         //setting custom return values\n--- a/test/org/mockitousage/examples/configure/withrunner/MakesMocksNotToReturnNulls.java\n+++ b/test/org/mockitousage/examples/configure/withrunner/MakesMocksNotToReturnNulls.java\n import org.junit.runners.model.InitializationError;\n import org.mockito.configuration.experimental.ConfigurationSupport;\n import org.mockitousage.examples.configure.FriendlyReturnValues;\n-\n+\n+//deprecated but will dump it eventually\n+@SuppressWarnings(\"deprecation\")\n public class MakesMocksNotToReturnNulls extends BlockJUnit4ClassRunner {\n     \n     public MakesMocksNotToReturnNulls(Class<?> clazz) throws InitializationError {\n--- a/test/org/mockitousage/examples/configure/withstaticutility/AllowsFakingReturnValues.java\n+++ b/test/org/mockitousage/examples/configure/withstaticutility/AllowsFakingReturnValues.java\n import org.mockito.configuration.experimental.ConfigurationSupport;\n import org.mockito.internal.configuration.MockitoConfiguration;\n import org.mockito.invocation.InvocationOnMock;\n-\n+\n+//deprecated but will dump it eventually\n+@SuppressWarnings(\"deprecation\")\n public class AllowsFakingReturnValues {\n     \n     public static void fakeReturnValues(Object ... mocks) {\n         FakeReturnValues fakeReturnValues = getFakeReturnValues();\n         fakeReturnValues.addMocks(mocks);\n     }\n-    \n+    \n     private static FakeReturnValues getFakeReturnValues() {\n         MockitoConfiguration config = ConfigurationSupport.getConfiguration();\n         ReturnValues current = config.getReturnValues();\n--- a/test/org/mockitousage/stubbing/GloballyConfiguredReturnValuesTest.java\n+++ b/test/org/mockitousage/stubbing/GloballyConfiguredReturnValuesTest.java\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n-\n+@SuppressWarnings(\"deprecation\")\n public class GloballyConfiguredReturnValuesTest extends TestBase {\n     \n     public class HardCodedReturnValues implements ReturnValues {", "timestamp": 1231282370, "metainfo": ""}