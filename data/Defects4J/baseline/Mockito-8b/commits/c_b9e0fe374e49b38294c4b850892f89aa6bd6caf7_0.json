{"sha": "b9e0fe374e49b38294c4b850892f89aa6bd6caf7", "log": "In order to avoid tests from breaking added them back to mockitousage and commented why in the package.html file  --HG-- rename : test/org/mockito/internal/debugging/LocationTest.java => test/org/mockitousage/internal/debugging/LocationTest.java rename : test/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java => test/org/mockitousage/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401513", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/internal/debugging/LocationTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.internal.debugging;\n+\n+import org.junit.Test;\n+import org.mockito.internal.debugging.Location;\n+import org.mockitoutil.TestBase;\n+\n+public class LocationTest extends TestBase {\n+\n+    @Test\n+    public void shouldLocationNotContainGetStackTraceMethod() {\n+        assertContains(\"shouldLocationNotContainGetStackTraceMethod\", new Location().toString());\n+    }\n+}\n--- /dev/null\n+++ b/test/org/mockitousage/internal/invocation/realmethod/FilteredCGLIBProxyRealMethodTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.internal.invocation.realmethod;\n+\n+import static org.mockitoutil.ExtraMatchers.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod;\n+import org.mockito.internal.invocation.realmethod.RealMethod;\n+import org.mockitoutil.TestBase;\n+\n+public class FilteredCGLIBProxyRealMethodTest extends TestBase {\n+\n+    @Before\n+    public void keepStackTracesClean() {\n+        makeStackTracesClean();\n+    }\n+    \n+    class Foo {\n+        public String throwSomething() {\n+            throw new RuntimeException();\n+        }\n+    }\n+    \n+    @Test\n+    public void shouldRemoveMockitoInternalsFromStackTraceWhenRealMethodThrows() throws Throwable {\n+        //given\n+        FilteredCGLIBProxyRealMethod realMethod = new FilteredCGLIBProxyRealMethod(new RealMethod() {\n+            public Object invoke(Object target, Object[] arguments) throws Throwable {\n+                return new Foo().throwSomething();\n+            }});\n+        \n+        //when\n+        try {\n+            realMethod.invoke(null, null);\n+            fail();\n+        //then\n+        } catch (Exception e) {\n+            assertThat(e, hasMethodInStackTraceAt(0, \"throwSomething\"));\n+            assertThat(e, hasMethodInStackTraceAt(1, \"invoke\"));\n+            assertThat(e, hasMethodInStackTraceAt(2, \"shouldRemoveMockitoInternalsFromStackTraceWhenRealMethodThrows\"));\n+        }\n+    }\n+}", "timestamp": 1245185132, "metainfo": ""}