{"sha": "3fbc68266d4908bcd77fc1179840173a9aadebc9", "log": "added javadoc for doReturn() method  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40706", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n      *   List list = new LinkedList();\n      *   List spy = Mockito.spy(list);\n      *   \n-     *   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException because the list is yet empty\n+     *   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)\n      *   stub(spy.get(0)).toReturn(\"foo\");\n      *   \n      *   //You have to use doReturn() for stubbing\n         return handler.voidMethodStubbable(mock);\n     }\n     \n+    /**\n+     * Sometimes you cannot stub using {@link Mockito#stub(Object)}. \n+     * <p>\n+     * When should you use doReturn() for stubbing?\n+     * <p>\n+     * 1. Overriding a previous exception-stubbing:\n+     * \n+     * <pre>\n+     *   stub(mock.foo()).toThrow(new RuntimeException());\n+     *   \n+     *   //Impossible: real method is called so mock.foo() throws RuntimeException\n+     *   stub(mock.foo()).toReturn(\"bar\");\n+     *   \n+     *   //You have to use doReturn() for stubbing\n+     *   doReturn(\"bar\").when(mock).foo();\n+     * </pre>\n+     * \n+     * 2. When spying real objects but calling real methods on a spy brings side effects  \n+     * \n+     * <pre>\n+     *   List list = new LinkedList();\n+     *   List spy = Mockito.spy(list);\n+     *   \n+     *   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)\n+     *   stub(spy.get(0)).toReturn(\"foo\");\n+     *   \n+     *   //You have to use doReturn() for stubbing\n+     *   doReturn(\"foo\").when(spy).get(0);\n+     * </pre>\n+     * \n+     * @param toBeReturned\n+     * @return\n+     */\n     public static Stubber doReturn(Object toBeReturned) {\n         return doAnswer(new Returns(toBeReturned));\n     }", "timestamp": 1216564696, "metainfo": ""}