{"sha": "b987701b29c1a729d24ec82ee4eeaafd234842e7", "log": "kept single test that exercises deprecated API  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40847", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/stubbing/DeprecatedStubbingTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.stubbing;\n+\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n+import org.mockito.exceptions.verification.NoInteractionsWanted;\n+import org.mockitousage.IMethods;\n+import org.mockitoutil.TestBase;\n+\n+@SuppressWarnings({\"unchecked\", \"deprecation\"})\n+public class DeprecatedStubbingTest extends TestBase {\n+\n+    @Mock private IMethods mock;\n+\n+    @Before\n+    public void setup() {\n+        mock = mock(IMethods.class);\n+    }\n+    \n+    @Test\n+    public void shouldEvaluateLatestStubbingFirst() throws Exception {\n+        stub(mock.objectReturningMethod(isA(Integer.class))).toReturn(100);\n+        stub(mock.objectReturningMethod(200)).toReturn(200);\n+        \n+        assertEquals(200, mock.objectReturningMethod(200));\n+        assertEquals(100, mock.objectReturningMethod(666));\n+        assertEquals(\"default behavior should return null\", null, mock.objectReturningMethod(\"blah\"));\n+    }\n+    \n+    @Test\n+    public void shouldStubbingBeTreatedAsInteraction() throws Exception {\n+        stub(mock.booleanReturningMethod()).toReturn(true);\n+        \n+        mock.booleanReturningMethod();\n+        \n+        try {\n+            verifyNoMoreInteractions(mock);\n+            fail();\n+        } catch (NoInteractionsWanted e) {}\n+    }\n+    \n+    @Test\n+    public void shouldAllowStubbingToString() throws Exception {\n+        IMethods mockTwo = mock(IMethods.class);\n+        stub(mockTwo.toString()).toReturn(\"test\");\n+        \n+        assertThat(mock.toString(), contains(\"Mock for IMethods\"));\n+        assertEquals(\"test\", mockTwo.toString());\n+    }\n+    \n+    @Test\n+    public void shouldStubbingNotBeTreatedAsInteraction() {\n+        stub(mock.simpleMethod(\"one\")).toThrow(new RuntimeException());\n+        stubVoid(mock).toThrow(new RuntimeException()).on().simpleMethod(\"two\");\n+        \n+        verifyZeroInteractions(mock);\n+    }\n+    \n+    @Test\n+    public void shouldStubbingWithThrowableFailVerification() {\n+        stub(mock.simpleMethod(\"one\")).toThrow(new RuntimeException());\n+        stubVoid(mock).toThrow(new RuntimeException()).on().simpleMethod(\"two\");\n+        \n+        try {\n+            verify(mock).simpleMethod(\"one\");\n+            fail();\n+        } catch (ArgumentsAreDifferent e) {}\n+        \n+        try {\n+            verify(mock).simpleMethod(\"two\");\n+            fail();\n+        } catch (ArgumentsAreDifferent e) {}\n+    }\n+}", "timestamp": 1220039581, "metainfo": ""}