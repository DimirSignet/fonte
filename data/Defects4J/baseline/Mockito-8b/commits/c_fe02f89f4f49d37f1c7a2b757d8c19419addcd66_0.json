{"sha": "fe02f89f4f49d37f1c7a2b757d8c19419addcd66", "log": "Identified some public api around the invocation. More fun :) Needs some polishing still but we're almost there to have an interface for the Invocation type.  --HG-- rename : src/org/mockito/internal/invocation/StubInfo.java => src/org/mockito/internal/invocation/StubInfoImpl.java", "commit": "\n--- a/src/org/mockito/internal/debugging/LocationImpl.java\n+++ b/src/org/mockito/internal/debugging/LocationImpl.java\n import java.io.Serializable;\n \n import org.mockito.internal.exceptions.base.StackTraceFilter;\n+import org.mockito.invocation.Location;\n \n-public class LocationImpl implements Serializable {\n+public class LocationImpl implements Location, Serializable {\n \n     private static final long serialVersionUID = -9054861157390980624L;\n     private final Throwable stackTraceHolder;\n--- a/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n+++ b/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.mockito.MockitoDebugger;\n             out += line(i.toString());\n             out += line(\" invoked: \" + i.getLocation());\n             if (i.stubInfo() != null) {\n-                out += line(\" stubbed: \" + i.stubInfo().stubbedAt());\n+                out += line(\" stubbed: \" + i.stubInfo().stubbedAt().toString());\n             }\n         }\n \n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n import org.mockito.internal.reporting.PrintSettings;\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.invocation.PublicInvocation;\n+import org.mockito.invocation.StubInfo;\n \n import java.lang.reflect.Method;\n import java.util.Arrays;\n--- /dev/null\n+++ b/src/org/mockito/internal/invocation/StubInfoImpl.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.invocation;\n+\n+import org.mockito.exceptions.PrintableInvocation;\n+import org.mockito.invocation.Location;\n+import org.mockito.invocation.StubInfo;\n+\n+import java.io.Serializable;\n+\n+public class StubInfoImpl implements StubInfo, Serializable {\n+    private static final long serialVersionUID = 2125827349332068867L;\n+    private PrintableInvocation stubbedAt;\n+\n+    public StubInfoImpl(PrintableInvocation stubbedAt) {\n+        this.stubbedAt = stubbedAt;\n+    }\n+\n+    public Location stubbedAt() {\n+        return stubbedAt.getLocation();\n+    }\n+}\n--- a/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n+++ b/src/org/mockito/internal/listeners/NotifiedMethodInvocationReport.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.listeners;\n \n import org.mockito.exceptions.PrintableInvocation;\n         }\n \n         public String getLocationOfStubbing() {\n-            return (invocation.stubInfo() == null) ? null : invocation.stubInfo().stubbedAt();\n+            return (invocation.stubInfo() == null) ? null : invocation.stubInfo().stubbedAt().toString();\n         }\n \n \n--- a/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n+++ b/src/org/mockito/internal/stubbing/InvocationContainerImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.stubbing;\n \n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.invocation.StubInfo;\n+import org.mockito.internal.invocation.StubInfoImpl;\n import org.mockito.internal.progress.MockingProgress;\n import org.mockito.internal.stubbing.answers.AnswersValidator;\n import org.mockito.internal.verification.RegisteredInvocations;\n             for (StubbedInvocationMatcher s : stubbed) {\n                 if (s.matches(invocation)) {\n                     s.markStubUsed(invocation);\n-                    invocation.markStubbed(new StubInfo(s));\n+                    invocation.markStubbed(new StubInfoImpl(s));\n                     return s;\n                 }\n             }\n--- /dev/null\n+++ b/src/org/mockito/invocation/Location.java\n+package org.mockito.invocation;\n+\n+/**\n+ * by Szczepan Faber, created at: 4/1/12\n+ */\n+public interface Location {\n+\n+    String toString();\n+\n+}\n--- a/src/org/mockito/invocation/PublicInvocation.java\n+++ b/src/org/mockito/invocation/PublicInvocation.java\n package org.mockito.invocation;\n \n-import org.mockito.internal.debugging.LocationImpl;\n-import org.mockito.internal.invocation.StubInfo;\n+import org.mockito.internal.invocation.StubInfoImpl;\n \n /**\n  * by Szczepan Faber, created at: 3/31/12\n \n     int getSequenceNumber();\n \n-    LocationImpl getLocation();\n+    Location getLocation();\n \n     Object[] getRawArguments();\n \n--- /dev/null\n+++ b/src/org/mockito/invocation/StubInfo.java\n+package org.mockito.invocation;\n+\n+/**\n+ * by Szczepan Faber, created at: 4/1/12\n+ */\n+public interface StubInfo {\n+    Location stubbedAt();\n+}\n--- a/test/org/mockito/internal/debugging/VerboseMockInvocationLoggerTest.java\n+++ b/test/org/mockito/internal/debugging/VerboseMockInvocationLoggerTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.debugging;\n \n import org.junit.After;\n import org.mockito.exceptions.PrintableInvocation;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n-import org.mockito.internal.invocation.StubInfo;\n+import org.mockito.internal.invocation.StubInfoImpl;\n import org.mockito.internal.listeners.NotifiedMethodInvocationReport;\n \n import java.io.ByteArrayOutputStream;\n \n     @Test\n     public void should_print_stubbed_info_if_availbable() throws Exception {\n-        invocation.markStubbed(new StubInfo(stubbedInvocation));\n+        invocation.markStubbed(new StubInfoImpl(stubbedInvocation));\n \n         listener.reportInvocation(new NotifiedMethodInvocationReport(invocation, \"whatever\"));\n ", "timestamp": 1333231510, "metainfo": ""}