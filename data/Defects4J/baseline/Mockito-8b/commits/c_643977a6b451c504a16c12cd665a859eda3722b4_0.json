{"sha": "643977a6b451c504a16c12cd665a859eda3722b4", "log": "Updated javadocs after changing one of the features.", "commit": "\n--- a/src/org/mockito/AdditionalAnswers.java\n+++ b/src/org/mockito/AdditionalAnswers.java\n     }\n \n     /**\n-     * An answer that directly forwards the calls to the delegate.\n+     * An answer that directly forwards the calls to the delegate. The delegate may or may not be of the same type as the mock.\n+     * If the type is different, a matching method needs to be found on delegate type otherwise an exception is thrown.\n      * <p>\n      * Useful for spies or partial mocks of objects that are difficult to mock\n      * or spy using the usual spy API. Possible use cases:\n      *   doReturn(\"foo\").when(listWithDelegate).get(0);\n      * </code></pre>\n      *\n-     * @param delegate The delegate to forward calls to.\n+     * @param delegate The delegate to forward calls to. It does not have to be of the same type as the mock (although it usually is).\n+     *                 The only requirement is that the instance should have compatible method signatures including the return values.\n+     *                 Only the methods that were actually executed on the mock need to be present on the delegate type.\n      * @return the answer\n      *\n      * @since 1.9.5", "timestamp": 1416073169, "metainfo": ""}