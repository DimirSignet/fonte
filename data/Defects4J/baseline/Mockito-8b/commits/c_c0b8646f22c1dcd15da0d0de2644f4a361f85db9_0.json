{"sha": "c0b8646f22c1dcd15da0d0de2644f4a361f85db9", "log": "For the sake of coherence, the other method here will be using the current thread classloader when executing the Callable", "commit": "\n--- a/test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java\n+++ b/test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java\n \n \n     public Object doInRealm(String callableCalledInClassLoaderRealm) throws Exception {\n-        Object instance = this.loadClass(callableCalledInClassLoaderRealm).getConstructor().newInstance();\n-        if (instance instanceof Callable) {\n-            Callable<?> callableInRealm = (Callable<?>) instance;\n-            return callableInRealm.call();\n+        ClassLoader current = Thread.currentThread().getContextClassLoader();\n+        try {\n+            Thread.currentThread().setContextClassLoader(this);\n+            Object instance = this.loadClass(callableCalledInClassLoaderRealm).getConstructor().newInstance();\n+            if (instance instanceof Callable) {\n+                Callable<?> callableInRealm = (Callable<?>) instance;\n+                return callableInRealm.call();\n+            }\n+        } finally {\n+            Thread.currentThread().setContextClassLoader(current);\n         }\n         throw new IllegalArgumentException(\"qualified name '\" + callableCalledInClassLoaderRealm + \"' should represent a class implementing Callable\");\n     }", "timestamp": 1355616707, "metainfo": ""}