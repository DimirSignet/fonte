{"sha": "984668df110b2b7a0faa6fb10ba095adde6bc9d3", "log": "In order to make VerboseMockitoRunner more elegant in giving feedback reduced the number of spam in mockito warnings  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401575", "commit": "\n--- a/src/org/mockito/internal/debugging/DebuggingInfo.java\n+++ b/src/org/mockito/internal/debugging/DebuggingInfo.java\n         return !unusedStubs.isEmpty() || !unstubbedInvocations.isEmpty();\n     }\n \n-    public String getWarnings() {\n+    public String getWarnings(boolean warnAboutUnstubbed) {\n         final StringBuilder sb = new StringBuilder();\n         if (hasData()) {\n-            new WarningsPrinterImpl(unusedStubs, unstubbedInvocations).print(new MockitoLogger() {\n+            new WarningsPrinterImpl(unusedStubs, unstubbedInvocations, warnAboutUnstubbed).print(new MockitoLogger() {\n                 public void log(Object what) {\n                     sb.append(what);\n                 }});\n--- a/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n+++ b/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n \n     private final List<Invocation> unusedStubs;\n     private final List<InvocationMatcher> unstubbedInvocations;\n+    private final boolean warnAboutUnstubbed;\n \n     public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> unstubbedInvocations) {\n+        this(unusedStubs, unstubbedInvocations, true);\n+    }\n+\n+    public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> unstubbedInvocations, boolean warnAboutUnstubbed) {\n+        this.warnAboutUnstubbed = warnAboutUnstubbed;\n         this.unusedStubs = new LinkedList<Invocation>(unusedStubs);\n         this.unstubbedInvocations = new LinkedList<InvocationMatcher>(unstubbedInvocations);\n     }\n-\n+    \n     public void print(MockitoLogger logger) {\n         Iterator<Invocation> unusedIterator = unusedStubs.iterator();\n         while(unusedIterator.hasNext()) {\n             logger.log(thisStubWasNotUsed(i));\n         }\n \n-        for (InvocationMatcher i1 : unstubbedInvocations) {\n-            logger.log(thisMethodWasNotStubbed(i1));\n+        if (warnAboutUnstubbed) {\n+            for (InvocationMatcher i1 : unstubbedInvocations) {\n+                logger.log(thisMethodWasNotStubbed(i1));\n+            }\n         }\n     }\n \n     private String thisStubWasNotUsed(Invocation i) {\n-        return join(\n-            \"[Mockito hint] This stub was not used:\",\n-            i,\n-            i.getLocation(),\n-            \"\");\n+        return \"This stubbing was never used \" + i.getLocation() + \"\\n\";\n     }\n \n     private String thisMethodWasNotStubbed(InvocationMatcher i) {\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n                 Throwable throwable = (Throwable) Whitebox.getInternalState(failure, \"fThrownException\");\n                 \n                 String newMessage = throwable.getMessage();\n-                newMessage += \"\\n\" + debuggingInfo.getWarnings() + \"\\n*** The actual failure is because of: ***\\n\";\n+                newMessage += \"\\n\" + debuggingInfo.getWarnings(false) + \"\\n*** The actual failure is because of: ***\\n\";\n                 \n                 Whitebox.setInternalState(throwable, \"detailMessage\", newMessage);\n             }\n--- a/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n+++ b/test/org/mockito/internal/debugging/WarningsPrinterImplTest.java\n         p.print(logger);\n \n         // then\n-        assertContains(\"stub was not used\", logger.getLoggedInfo());\n-        assertContains(\"simpleMethod()\", logger.getLoggedInfo());\n+        assertContains(\"never used\", logger.getLoggedInfo());\n     }\n \n     @Test\n--- a/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n+++ b/test/org/mockito/runners/ConsoleSpammingMockitoJUnitRunnerTest.java\n                 notifier.fireTestFailure(null);\n                 //assert\n                 String loggedInfo = loggerStub.getLoggedInfo();\n-                assertContains(\"stub was not used\", loggedInfo);\n-                assertContains(\"mock.simpleMethod(123);\", loggedInfo);\n                 assertContains(\".unusedStubbingThatQualifiesForWarning(\", loggedInfo);\n             }\n         });\n--- a/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n+++ b/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n     @Test\n     public void shouldLogUnusedStubbingWarningWhenTestFails() throws Exception {\n         when(mock.simpleMethod(1)).thenReturn(\"foo\");\n+        when(mock.otherMethod()).thenReturn(\"foo\");\n+        when(mock.booleanObjectReturningMethod()).thenReturn(false);\n         \n         String ret = mock.simpleMethod(2);\n         ", "timestamp": 1248376610, "metainfo": ""}