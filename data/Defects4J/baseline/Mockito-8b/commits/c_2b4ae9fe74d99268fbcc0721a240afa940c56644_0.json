{"sha": "2b4ae9fe74d99268fbcc0721a240afa940c56644", "log": "another step to refactor verifiers, moved some classes around  --HG-- rename : src/org/mockito/internal/progress/VerificationMode.java => src/org/mockito/internal/verification/VerificationMode.java rename : src/org/mockito/internal/progress/VerificationModeImpl.java => src/org/mockito/internal/verification/VerificationModeImpl.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40930", "commit": "\n--- a/src/org/mockito/InOrder.java\n+++ b/src/org/mockito/InOrder.java\n  */\n package org.mockito;\n \n-import org.mockito.internal.progress.VerificationMode;\n+import org.mockito.internal.verification.VerificationMode;\n \n /**\n  * Allows verification in order. E.g:\n--- a/src/org/mockito/InOrderVerifier.java\n+++ b/src/org/mockito/InOrderVerifier.java\n import java.util.List;\n \n import org.mockito.exceptions.Reporter;\n-import org.mockito.internal.progress.VerificationMode;\n-import org.mockito.internal.progress.VerificationModeImpl;\n+import org.mockito.internal.verification.VerificationMode;\n import org.mockito.internal.verification.VerificationModeDecoder;\n+import org.mockito.internal.verification.VerificationModeImpl;\n \n /**\n  * Allows verifying in order. This class should not be exposed, hence default access.\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n import org.mockito.internal.progress.NewOngoingStubbing;\n import org.mockito.internal.progress.OngoingStubbing;\n import org.mockito.internal.progress.ThreadSafeMockingProgress;\n-import org.mockito.internal.progress.VerificationMode;\n-import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockito.internal.stubbing.DoesNothing;\n import org.mockito.internal.stubbing.Returns;\n import org.mockito.internal.stubbing.Stubber;\n import org.mockito.internal.stubbing.ThrowsException;\n import org.mockito.internal.stubbing.VoidMethodStubbable;\n import org.mockito.internal.util.MockUtil;\n+import org.mockito.internal.verification.VerificationMode;\n+import org.mockito.internal.verification.VerificationModeImpl;\n import org.mockito.runners.MockitoJUnit44Runner;\n import org.mockito.runners.MockitoJUnitRunner;\n import org.mockito.stubbing.Answer;\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n import org.mockito.internal.progress.DeprecatedOngoingStubbing;\n import org.mockito.internal.progress.MockingProgress;\n import org.mockito.internal.progress.NewOngoingStubbing;\n-import org.mockito.internal.progress.VerificationMode;\n-import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockito.internal.stubbing.DoesNothing;\n import org.mockito.internal.stubbing.MockitoStubber;\n import org.mockito.internal.stubbing.Returns;\n import org.mockito.internal.verification.NoMoreInvocationsVerifier;\n import org.mockito.internal.verification.NumberOfInvocationsInOrderVerifier;\n import org.mockito.internal.verification.NumberOfInvocationsVerifier;\n+import org.mockito.internal.verification.VerificationMode;\n+import org.mockito.internal.verification.VerificationModeImpl;\n import org.mockito.internal.verification.Verifier;\n import org.mockito.internal.verification.VerifyingRecorder;\n import org.mockito.stubbing.Answer;\n--- a/src/org/mockito/internal/invocation/InvocationsFinder.java\n+++ b/src/org/mockito/internal/invocation/InvocationsFinder.java\n import java.util.List;\n \n import org.mockito.exceptions.base.HasStackTrace;\n-import org.mockito.internal.progress.VerificationMode;\n import org.mockito.internal.util.ListUtil;\n import org.mockito.internal.util.ListUtil.Filter;\n+import org.mockito.internal.verification.VerificationMode;\n import org.mockito.internal.verification.VerificationModeDecoder;\n \n public class InvocationsFinder {\n--- a/src/org/mockito/internal/progress/MockingProgress.java\n+++ b/src/org/mockito/internal/progress/MockingProgress.java\n  * This program is made available under the terms of the MIT License.\n  */\n package org.mockito.internal.progress;\n+\n+import org.mockito.internal.verification.VerificationMode;\n \n @SuppressWarnings(\"unchecked\")\n public interface MockingProgress {\n--- a/src/org/mockito/internal/progress/MockingProgressImpl.java\n+++ b/src/org/mockito/internal/progress/MockingProgressImpl.java\n package org.mockito.internal.progress;\n \n import org.mockito.exceptions.Reporter;\n+import org.mockito.internal.verification.VerificationMode;\n \n @SuppressWarnings(\"unchecked\")\n public class MockingProgressImpl implements MockingProgress {\n--- a/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java\n+++ b/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java\n  * This program is made available under the terms of the MIT License.\n  */\n package org.mockito.internal.progress;\n+\n+import org.mockito.internal.verification.VerificationMode;\n \n @SuppressWarnings(\"unchecked\")\n public class ThreadSafeMockingProgress implements MockingProgress {\n--- a/src/org/mockito/internal/verification/MissingInvocationInOrderVerifier.java\n+++ b/src/org/mockito/internal/verification/MissingInvocationInOrderVerifier.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class MissingInvocationInOrderVerifier implements Verifier {\n     \n--- a/src/org/mockito/internal/verification/MissingInvocationVerifier.java\n+++ b/src/org/mockito/internal/verification/MissingInvocationVerifier.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class MissingInvocationVerifier implements Verifier {\n     \n--- a/src/org/mockito/internal/verification/NoMoreInvocationsVerifier.java\n+++ b/src/org/mockito/internal/verification/NoMoreInvocationsVerifier.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class NoMoreInvocationsVerifier implements Verifier {\n \n--- a/src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java\n+++ b/src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class NumberOfInvocationsInOrderVerifier implements Verifier {\n     \n--- a/src/org/mockito/internal/verification/NumberOfInvocationsVerifier.java\n+++ b/src/org/mockito/internal/verification/NumberOfInvocationsVerifier.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class NumberOfInvocationsVerifier implements Verifier {\n     \n--- /dev/null\n+++ b/src/org/mockito/internal/verification/VerificationMode.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.verification;\n+\n+import java.util.List;\n+\n+import org.mockito.Mockito;\n+import org.mockito.internal.invocation.Invocation;\n+import org.mockito.internal.invocation.InvocationMatcher;\n+import org.mockito.internal.verification.VerificationModeImpl.Verification;\n+\n+/**\n+ * Allows verifying that certain behavior happened at least once / exact number\n+ * of times / never. E.g:\n+ * \n+ * <pre>\n+ * verify(mock, times(5)).someMethod(&quot;was called five times&quot;);\n+ * \n+ * verify(mock, never()).someMethod(&quot;was never called&quot;);\n+ * \n+ * verify(mock, atLeastOnce()).someMethod(&quot;was called at least once&quot;);\n+ * \n+ * verify(mock, atLeast(2)).someMethod(&quot;was called at least twice&quot;);\n+ * \n+ * </pre>\n+ * \n+ * <b>times(1) is the default</b> and can be omitted\n+ * <p>\n+ * See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}\n+ */\n+public interface VerificationMode {\n+\n+    Integer wantedCount();\n+\n+    List<? extends Object> getMocksToBeVerifiedInOrder();\n+\n+    Verification getVerification();\n+    \n+    void verify(List<Invocation> invocations, InvocationMatcher wanted);\n+}\n--- a/src/org/mockito/internal/verification/VerificationModeDecoder.java\n+++ b/src/org/mockito/internal/verification/VerificationModeDecoder.java\n package org.mockito.internal.verification;\n \n-import org.mockito.internal.progress.VerificationMode;\n-import org.mockito.internal.progress.VerificationModeImpl.Verification;\n+import org.mockito.internal.verification.VerificationModeImpl.Verification;\n \n public class VerificationModeDecoder {\n \n--- /dev/null\n+++ b/src/org/mockito/internal/verification/VerificationModeImpl.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.verification;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.mockito.exceptions.base.MockitoException;\n+import org.mockito.internal.invocation.AllInvocationsFinder;\n+import org.mockito.internal.invocation.Invocation;\n+import org.mockito.internal.invocation.InvocationMatcher;\n+\n+/**\n+ * Holds additional information regarding verification.\n+ * <p> \n+ * Implements marking interface which hides details from Mockito users. \n+ */\n+public class VerificationModeImpl implements VerificationMode {\n+    \n+    public enum Verification { EXPLICIT, NO_MORE_WANTED, AT_LEAST };\n+    \n+    final int wantedInvocationCount;\n+    final List<? extends Object> mocksToBeVerifiedInOrder;\n+    final Verification verification;\n+    \n+    private VerificationModeImpl(int wantedNumberOfInvocations, List<? extends Object> mocksToBeVerifiedInOrder, Verification verification) {\n+        if (verification != Verification.AT_LEAST && wantedNumberOfInvocations < 0) {\n+            throw new MockitoException(\"Negative value is not allowed here\");\n+        }\n+        if (verification == Verification.AT_LEAST && wantedNumberOfInvocations < 1) {\n+            throw new MockitoException(\"Negative value or zero are not allowed here\");\n+        }\n+        assert mocksToBeVerifiedInOrder != null;\n+        this.wantedInvocationCount = wantedNumberOfInvocations;\n+        this.mocksToBeVerifiedInOrder = mocksToBeVerifiedInOrder;\n+        this.verification = verification;\n+    }\n+    \n+    public static VerificationMode atLeastOnce() {\n+        return atLeast(1);\n+    }\n+\n+    public static VerificationMode atLeast(int minNumberOfInvocations) {\n+        return new VerificationModeImpl(minNumberOfInvocations, Collections.emptyList(), Verification.AT_LEAST);\n+    }\n+\n+    public static VerificationMode times(int wantedNumberOfInvocations) {\n+        return new VerificationModeImpl(wantedNumberOfInvocations, Collections.emptyList(), Verification.EXPLICIT);\n+    }\n+\n+    public static VerificationMode inOrder(int wantedNumberOfInvocations, List<? extends Object> mocksToBeVerifiedInOrder) {\n+        assert !mocksToBeVerifiedInOrder.isEmpty();\n+        return new VerificationModeImpl(wantedNumberOfInvocations, mocksToBeVerifiedInOrder, Verification.EXPLICIT);\n+    }\n+\n+    public static VerificationMode inOrderAtLeast(int minNumberOfInvocations, List<? extends Object> mocksToBeVerifiedInOrder) {\n+        assert !mocksToBeVerifiedInOrder.isEmpty();\n+        return new VerificationModeImpl(minNumberOfInvocations, mocksToBeVerifiedInOrder, Verification.AT_LEAST);\n+    }\n+    \n+    public static VerificationMode noMoreInteractions() {\n+        return new VerificationModeImpl(0, Collections.emptyList(), Verification.NO_MORE_WANTED);\n+    }\n+\n+    public Integer wantedCount() {\n+        return wantedInvocationCount;\n+    }\n+\n+    public List<? extends Object> getMocksToBeVerifiedInOrder() {\n+        return mocksToBeVerifiedInOrder;\n+    }\n+    \n+    public Verification getVerification() {\n+        return verification;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Wanted invocations count: \" + wantedInvocationCount + \", Mocks to verify in order: \" + mocksToBeVerifiedInOrder;\n+    }\n+\n+    @Override\n+    public void verify(List<Invocation> invocations, InvocationMatcher wanted) {\n+        if (new VerificationModeDecoder(this).inOrderMode()) {\n+            invocations = new AllInvocationsFinder().getAllInvocations(this.getMocksToBeVerifiedInOrder());\n+        }\n+\n+        List<Verifier> verifiers = Arrays.asList(\n+                new MissingInvocationInOrderVerifier(),\n+                new NumberOfInvocationsInOrderVerifier(),\n+                new MissingInvocationVerifier(),\n+                new NumberOfInvocationsVerifier(),\n+                new NoMoreInvocationsVerifier());\n+        \n+        for (Verifier verifier : verifiers) {\n+            if (verifier.appliesTo(this)) {\n+                verifier.verify(invocations, wanted, this);\n+            }\n+        }\n+    }\n+}\n--- a/src/org/mockito/internal/verification/Verifier.java\n+++ b/src/org/mockito/internal/verification/Verifier.java\n \n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.progress.VerificationMode;\n \n public interface Verifier {\n     void verify(List<Invocation> invocations, InvocationMatcher wanted, VerificationMode mode);\n--- a/src/org/mockito/internal/verification/VerifyingRecorder.java\n+++ b/src/org/mockito/internal/verification/VerifyingRecorder.java\n import org.mockito.internal.invocation.AllInvocationsFinder;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.progress.VerificationMode;\n \n public class VerifyingRecorder {\n \n--- a/test/org/mockito/internal/MockHandlerTest.java\n+++ b/test/org/mockito/internal/MockHandlerTest.java\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.MatchersBinder;\n import org.mockito.internal.progress.MockingProgressImpl;\n-import org.mockito.internal.progress.VerificationModeImpl;\n+import org.mockito.internal.verification.VerificationModeImpl;\n import org.mockitoutil.TestBase;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockito/internal/invocation/InvocationsFinderTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationsFinderTest.java\n  */\n package org.mockito.internal.invocation;\n \n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n import static org.mockitoutil.ExtraMatchers.*;\n \n import java.util.Arrays;\n import org.junit.Test;\n import org.mockito.Mock;\n import org.mockito.exceptions.base.HasStackTrace;\n-import org.mockito.internal.progress.VerificationMode;\n import org.mockito.internal.progress.VerificationModeBuilder;\n+import org.mockito.internal.verification.VerificationMode;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockito/internal/progress/MockingProgressImplTest.java\n+++ b/test/org/mockito/internal/progress/MockingProgressImplTest.java\n import org.junit.Before;\n import org.junit.Test;\n import org.mockito.exceptions.base.MockitoException;\n+import org.mockito.internal.verification.VerificationMode;\n+import org.mockito.internal.verification.VerificationModeImpl;\n import org.mockitoutil.TestBase;\n \n public class MockingProgressImplTest extends TestBase {\n--- a/test/org/mockito/internal/progress/VerificationModeBuilder.java\n+++ b/test/org/mockito/internal/progress/VerificationModeBuilder.java\n package org.mockito.internal.progress;\n \n import java.util.Arrays;\n+\n+import org.mockito.internal.verification.VerificationMode;\n+import org.mockito.internal.verification.VerificationModeImpl;\n \n public class VerificationModeBuilder {\n \n--- a/test/org/mockito/internal/progress/VerificationModeImplTest.java\n+++ b/test/org/mockito/internal/progress/VerificationModeImplTest.java\n  */\n package org.mockito.internal.progress;\n \n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import org.junit.Test;\n import org.mockito.exceptions.base.MockitoException;\n--- a/test/org/mockito/internal/verification/InvocationsFinderStub.java\n+++ b/test/org/mockito/internal/verification/InvocationsFinderStub.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n-import org.mockito.internal.progress.VerificationMode;\n \n class InvocationsFinderStub extends InvocationsFinder {\n     \n--- a/test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java\n+++ b/test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import java.util.LinkedList;\n \n--- a/test/org/mockito/internal/verification/MissingInvocationVerifierTest.java\n+++ b/test/org/mockito/internal/verification/MissingInvocationVerifierTest.java\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import java.util.List;\n \n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.progress.VerificationMode;\n-import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockitoutil.TestBase;\n \n public class MissingInvocationVerifierTest extends TestBase {\n--- a/test/org/mockito/internal/verification/NoMoreInvocationsVerifierTest.java\n+++ b/test/org/mockito/internal/verification/NoMoreInvocationsVerifierTest.java\n import org.mockito.exceptions.base.HasStackTrace;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n-import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockitoutil.TestBase;\n \n public class NoMoreInvocationsVerifierTest extends TestBase {\n--- a/test/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifierTest.java\n+++ b/test/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifierTest.java\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import java.util.LinkedList;\n \n--- a/test/org/mockito/internal/verification/NumberOfInvocationsVerifierTest.java\n+++ b/test/org/mockito/internal/verification/NumberOfInvocationsVerifierTest.java\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import java.util.LinkedList;\n \n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.progress.VerificationMode;\n import org.mockito.internal.progress.VerificationModeBuilder;\n import org.mockitoutil.TestBase;\n \n--- a/test/org/mockito/internal/verification/VerificationModeDecoderTest.java\n+++ b/test/org/mockito/internal/verification/VerificationModeDecoderTest.java\n package org.mockito.internal.verification;\n \n import static java.util.Arrays.*;\n-import static org.mockito.internal.progress.VerificationModeImpl.*;\n+import static org.mockito.internal.verification.VerificationModeImpl.*;\n \n import org.junit.Test;\n-import org.mockito.internal.progress.VerificationMode;\n import org.mockitoutil.TestBase;\n \n \n--- a/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n+++ b/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n-import org.mockito.internal.progress.VerificationMode;\n import org.mockito.internal.progress.VerificationModeBuilder;\n-import org.mockito.internal.progress.VerificationModeImpl;\n import org.mockitoutil.TestBase;\n \n @Ignore", "timestamp": 1223559846, "metainfo": ""}