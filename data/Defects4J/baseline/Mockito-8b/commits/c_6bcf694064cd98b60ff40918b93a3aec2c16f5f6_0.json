{"sha": "6bcf694064cd98b60ff40918b93a3aec2c16f5f6", "log": "Added argument capturing code into the api  --HG-- rename : test/org/mockito/Argument.java => src/org/mockito/Argument.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401369", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/Argument.java\n+/**\n+ * \n+ */\n+package org.mockito;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import org.mockito.ArgumentMatcher;\n+import org.mockito.Mockito;\n+import org.mockito.exceptions.Reporter;\n+\n+public class Argument<T> extends ArgumentMatcher<T> {\n+    private LinkedList<Object> arguments = new LinkedList<Object>();\n+\n+    public boolean matches(Object argument) {\n+        this.arguments.add(argument);\n+        return true;\n+    }\n+    \n+    public T capture() {\n+        Mockito.argThat(this);\n+        return null;\n+    }\n+\n+    public T value() {\n+        if (arguments.isEmpty()) {\n+            new Reporter().argumentValueNotYetCaptured();\n+        } else {\n+            //TODO: after 1.7 nice instanceof check here?\n+            return (T) arguments.getLast();\n+        }\n+        return (T) arguments;\n+    }\n+    \n+    public List<T> allValues() {\n+        return (List) arguments;\n+    }\n+}", "timestamp": 1241120463, "metainfo": ""}