{"sha": "7c651c57e2bf61decc8710dfaa936c11e6845965", "log": "removed the functionality of using first unverified invocation as actual (if actual by name is not found).  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40272", "commit": "\n--- a/src/org/mockito/internal/invocation/InvocationsFinder.java\n+++ b/src/org/mockito/internal/invocation/InvocationsFinder.java\n         return firstChunk;\n     }\n     \n-    //TODO it should only show method of the same name (or even nothing)\n     public Invocation findSimilarInvocation(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {\n         for (Invocation invocation : invocations) {\n             String wantedMethodName = wanted.getMethod().getName();\n             }\n         }\n         \n-        return findFirstUnverified(invocations, wanted.getInvocation().getMock());\n+        return null;\n     }\n     \n     public Invocation findFirstUnverified(List<Invocation> invocations) {\n--- a/test/org/mockito/internal/invocation/InvocationsFinderTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationsFinderTest.java\n     }\n     \n     @Test\n-    public void shouldFindSimilarInvocationByGettingFirstUnverified() throws Exception {\n-        simpleMethodInvocation.markVerified();\n-        simpleMethodInvocationTwo.markVerified();\n-        Invocation found = finder.findSimilarInvocation(invocations, new InvocationMatcher(simpleMethodInvocation), atLeastOnce());\n-        assertSame(found, differentMethodInvocation);\n-    }\n-    \n-    @Test\n     public void shouldNotFindSimilarInvocationBecauseAllAreVerified() throws Exception {\n         simpleMethodInvocation.markVerified();\n         simpleMethodInvocationTwo.markVerified();\n--- a/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockito.exceptions.verification.InvocationDiffersFromActual;\n+import org.mockito.exceptions.verification.WantedButNotInvoked;\n \n @SuppressWarnings({\"serial\", \"unchecked\"})\n public class StubbingWithThrowablesTest extends RequiresValidState {\n         try {\n             verify(mock).size();\n             fail();\n-        } catch (InvocationDiffersFromActual e) {}\n+        } catch (WantedButNotInvoked e) {}\n         \n         try {\n             verify(mock).clone();\n             fail();\n-        } catch (InvocationDiffersFromActual e) {}\n+        } catch (WantedButNotInvoked e) {}\n         \n         try {\n             verifyNoMoreInteractions(mock);\n--- a/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java\n     }\n \n     @Test\n-    public void shouldTreatFirstUnverifiedInvocationAsActualInvocation() {\n-        mock.oneArg(true);\n-        mock.simpleMethod();\n-        mock.differentMethod();\n-        mock.twoArgumentMethod(1, 2);\n-\n-        try {\n-            verify(mock).oneArg(true);\n-            verify(mock).differentMethod();\n-            verify(mock).threeArgumentMethod(1, \"2\", \"3\");\n-            fail();\n-        } catch (InvocationDiffersFromActual e) {\n-            assertThat(e, messageContains(\"IMethods.threeArgumentMethod(1, \\\"2\\\", \\\"3\\\")\"));\n-            assertThat(e, causeMessageContains(\"IMethods.simpleMethod()\"));\n-        }\n-    }\n-\n-    @Test\n     public void shouldPrintActualAndUnverifiedWantedWhenTheDifferenceIsAboutArguments() {\n         mock.twoArgumentMethod(1, 1);\n         mock.twoArgumentMethod(2, 2);", "timestamp": 1199885721, "metainfo": ""}