{"sha": "bbbff77515c8b7d62ab7ad6f455e2300331fb682", "log": "fixed some javadoc stuff  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40227", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n      * Creates mock object of given class or interface.\n      * <p>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param classToMock\n      * @return mock object\n      *   stub(mock.countElements()).andThrow(new RuntimeException());\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param methodCallToStub\n      * @return OngoingStubbing object to set stubbed value/exception\n      *   verify(mock).someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mock to be verified\n      * @return mock object itself\n      *   verify(mock, atLeastOnce()).someMethod(\"should be called at least once\");\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mock to be verified\n      * @param mode times(x) or atLeastOnce()\n      * //oups: 'doSomethingUnexpected()' is unexpected\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mocks to be verified\n      */\n      * Instead of verifyZeroInteractions() you can call verifyNoMoreInteractions() but \n      * the first one is more explicit and can read better.\n      * <p>\n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mocks to be verified\n      */\n      *   stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mock to stub\n      * @return stubbable object that allows stubbing with throwable\n      *   strictly.verify(secondMock).add(\"should be called second\");\n      * </pre>\n      *\n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param mocks to be verified in strict order\n      * \n      *   verify(mock, atLeastOnce()).someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @return verification mode\n      */\n      *   verify(mock, times(2)).someMethod(\"some arg\");\n      * </pre>\n      * \n-     * See examples {@link Mockito}\n+     * See examples in javadoc for{@link Mockito#stub}\n      * \n      * @param wantedNumberOfInvocations wanted number of invocations \n      * \n--- a/src/org/mockito/internal/progress/OngoingStubbing.java\n+++ b/src/org/mockito/internal/progress/OngoingStubbing.java\n  * stub(mock.countElements()).andThrow(new RuntimeException());\n  * </pre>\n  * \n- * See examples {@link Mockito#stub}\n+ * See examples in javadoc for {@link Mockito#stub}\n  */\n public interface OngoingStubbing<T> {\n \n      * stub(mock.countElements()).andReturn(10);\n      * </pre>\n      * \n-     * See examples {@link Mockito#stub}\n+     * See examples in javadoc for {@link Mockito#stub}\n      * \n      * @param stubbed return value\n      */\n      * If throwable is a checked exception then it has to \n      * match one of the checked exceptions of method signature.\n      * \n-     * See examples {@link Mockito#stub}\n+     * See examples in javadoc for {@link Mockito#stub}\n      * \n      * @param throwable to be thrown on method invocation\n      */\n--- a/src/org/mockito/internal/progress/VerificationMode.java\n+++ b/src/org/mockito/internal/progress/VerificationMode.java\n  *   verify(mock, atLeastOnce()).someMethod(\"should be called at least once\");\n  * </pre>\n  * \n- * See examples {@link Mockito#verify(Object, VerificationMode)}\n+ * See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}\n  */\n public interface VerificationMode {}\n--- a/src/org/mockito/internal/stubbing/StubbedMethodSelector.java\n+++ b/src/org/mockito/internal/stubbing/StubbedMethodSelector.java\n  * stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();\n  * </pre>\n  * \n- * See examples {@link Mockito#stubVoid}\n+ * See examples in javadoc for {@link Mockito#stubVoid}\n  */\n public interface StubbedMethodSelector<T> {\n \n      * If throwable is a checked exception then it has to match one of the\n      * checked exceptions of method signature.\n      * <p>\n-     * See examples {@link Mockito#stubVoid}\n+     * See examples in javadoc for {@link Mockito#stubVoid}\n      * \n      * @return mock object itself\n      */\n--- a/src/org/mockito/internal/stubbing/VoidMethodStubbable.java\n+++ b/src/org/mockito/internal/stubbing/VoidMethodStubbable.java\n  * stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();\n  * </pre>\n  * \n- * See examples {@link Mockito#stubVoid}\n+ * See examples in javadoc for {@link Mockito#stubVoid}\n  */\n public interface VoidMethodStubbable<T> {\n \n      * If throwable is a checked exception then it has to \n      * match one of the checked exceptions of method signature.\n      * \n-     * See examples {@link Mockito#stubVoid}\n+     * See examples in javadoc for {@link Mockito#stubVoid}\n      * \n      * @param throwable\n      *            to be thrown on method invocation", "timestamp": 1198150918, "metainfo": ""}