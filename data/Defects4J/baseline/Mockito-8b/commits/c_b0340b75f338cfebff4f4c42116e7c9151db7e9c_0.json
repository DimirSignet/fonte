{"sha": "b0340b75f338cfebff4f4c42116e7c9151db7e9c", "log": "refactorings  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40134", "commit": "\n--- a/src/org/mockito/internal/LastArguments.java\n+++ b/src/org/mockito/internal/LastArguments.java\n \n     private void assertState(boolean toAssert, String message) {\n         if (!toAssert) {\n-            reset();\n+            matcherStack.clear();\n             throw new InvalidUseOfMatchersException(message);\n         }\n     }\n         assertState(!matcherStack.isEmpty(), \"No matchers found.\");\n         matcherStack.push(new Or(popLastArgumentMatchers(count)));\n     }\n-\n-    public void validateState() {\n-        if (!matcherStack.isEmpty()) {\n-            reset();\n-            throw new InvalidUseOfMatchersException(\"The way matchers were used is inapropriate!\");\n-        }\n-    }\n-\n-    void reset() {\n-        matcherStack.clear();\n-    }\n }\n--- a/src/org/mockito/internal/matchers/ArrayEquals.java\n+++ b/src/org/mockito/internal/matchers/ArrayEquals.java\n                 && (actual == null || actual instanceof Object[])) {\n             return Arrays.equals((Object[]) wanted, (Object[]) actual);\n         } else {\n-            throw new IllegalStateException(\"Something went really wrong. Arguments passed to ArrayEquals have to be an array!\");\n+            throw new IllegalStateException(\"Something went really wrong. Arguments passed to ArrayEquals have to be an array or null!\");\n         }\n     }\n \n--- a/test/org/mockito/internal/StateResetter.java\n+++ b/test/org/mockito/internal/StateResetter.java\n     \n     public static void reset() {\n         MockitoState.instance().reset();\n-        LastArguments.instance().reset();\n     }\n }\n--- a/test/org/mockito/util/RequiresValidState.java\n+++ b/test/org/mockito/util/RequiresValidState.java\n \n     @Before public void requiresValidState() {\n         MockitoState.instance().validateState();\n-        LastArguments.instance().validateState();\n     }\n }\n--- a/test/org/mockitousage/InvalidStateDetectionTest.java\n+++ b/test/org/mockitousage/InvalidStateDetectionTest.java\n         verify(mock).simpleMethod();\n     }\n     \n-    @Test\n-    @Ignore\n-    public void shouldDetectProblemsWithMatchers() {\n-        \n-    }\n-    \n     private static interface DetectsInvalidState {\n         void detect(IMethods mock);\n     }\n--- a/test/org/mockitousage/matchers/MatchersTest.java\n+++ b/test/org/mockitousage/matchers/MatchersTest.java\n         mock = mock(IMethods.class);\n         \n         try {\n-            verify(mock).oneArray(nullArray);\n+            verify(mock).oneArray(aryEq(nullArray));\n         } catch (VerificationError e) {\n             String expected = \"\\n\" +\n             \t\t\"Wanted but not invoked:\" +", "timestamp": 1196899782, "metainfo": ""}