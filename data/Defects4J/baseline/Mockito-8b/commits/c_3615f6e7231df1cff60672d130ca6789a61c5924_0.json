{"sha": "3615f6e7231df1cff60672d130ca6789a61c5924", "log": "refactorings around StrictVerifier, removed a TODO  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40242", "commit": "\n--- a/src/org/mockito/internal/progress/VerificationModeImpl.java\n+++ b/src/org/mockito/internal/progress/VerificationModeImpl.java\n     enum Verification { EXPLICIT, NO_MORE_WANTED };\n     \n     private final Integer wantedInvocationCount;\n-    private final List<Object> mocksToBeVerifiedStrictly;\n+    private final List<? extends Object> mocksToBeVerifiedStrictly;\n     private final Verification verification;\n     \n-    private VerificationModeImpl(Integer wantedNumberOfInvocations, List<Object> mocksToBeVerifiedStrictly, Verification verification) {\n+    private VerificationModeImpl(Integer wantedNumberOfInvocations, List<? extends Object> mocksToBeVerifiedStrictly, Verification verification) {\n         if (wantedNumberOfInvocations != null && wantedNumberOfInvocations.intValue() < 0) {\n             throw new MockitoException(\"Negative value is not allowed here\");\n         }\n         return new VerificationModeImpl(wantedNumberOfInvocations, Collections.emptyList(), Verification.EXPLICIT);\n     }\n \n-    public static VerificationModeImpl strict(Integer wantedNumberOfInvocations, List<Object> mocksToBeVerifiedStrictly) {\n+    public static VerificationModeImpl strict(Integer wantedNumberOfInvocations, List<? extends Object> mocksToBeVerifiedStrictly) {\n         assert !mocksToBeVerifiedStrictly.isEmpty();\n         return new VerificationModeImpl(wantedNumberOfInvocations, mocksToBeVerifiedStrictly, Verification.EXPLICIT);\n     }\n         return wantedInvocationCount;\n     }\n \n-    public List<Object> getMocksToBeVerifiedStrictly() {\n+    public List<? extends Object> getMocksToBeVerifiedStrictly() {\n         return mocksToBeVerifiedStrictly;\n     }\n \n     \n     public boolean missingMethodMode() {\n         return explicitMode() && (atLeastOnceMode() || wantedInvocationCount > 0);\n+    }\n+    \n+    public boolean strictlyMissingMethodMode() {\n+        return strictMode() && missingMethodMode();\n     }\n     \n     public boolean exactNumberOfInvocationsMode() {\n--- a/src/org/mockito/internal/verification/StrictlyMissingInvocationVerifier.java\n+++ b/src/org/mockito/internal/verification/StrictlyMissingInvocationVerifier.java\n     }\n \n     public void verify(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {\n-        //TODO push to mode\n-        if (!mode.strictMode() || mode.wantedCountIsZero()) {\n+        if (!mode.strictlyMissingMethodMode()) {\n             return;\n         }\n         \n--- a/test/org/mockito/internal/progress/VerificationModeImplTest.java\n+++ b/test/org/mockito/internal/progress/VerificationModeImplTest.java\n         \n         assertFalse(noMoreInteractions().missingMethodMode());\n         assertFalse(times(0).missingMethodMode());\n+    }\n+    \n+    @Test\n+    public void shouldKnowIfIsStrictlyMissingMethodMode() throws Exception {\n+        assertTrue(strict(null, asList(\"mock\")).strictlyMissingMethodMode());\n+        assertTrue(strict(1, asList(\"mock\")).strictlyMissingMethodMode());\n+        assertTrue(strict(10, asList(\"mock\")).strictlyMissingMethodMode());\n+        \n+        assertFalse(times(10).strictlyMissingMethodMode());\n+        assertFalse(noMoreInteractions().strictlyMissingMethodMode());\n+        assertFalse(times(0).strictlyMissingMethodMode());\n     }\n     \n     @Test", "timestamp": 1198704661, "metainfo": ""}