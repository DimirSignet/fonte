{"sha": "5f6a3cb640bf97b1df8d75a81af4a4eb8c24c036", "log": "Refactoring and tidy-up in the publications comparison story", "commit": "\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java\n+package org.mockito.release.comparison;\n+\n+import groovy.lang.Closure;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+\n+import static org.mockito.release.util.ArgumentValidation.notNull;\n+\n+class BinaryComparator {\n+\n+    private Closure<File> left;\n+    private Closure<File> right;\n+\n+    BinaryComparator setPair(Closure<File> left, Closure<File> right) {\n+        notNull(left, \"source jar file to compare\", right, \"source jar file to compare\");\n+        this.left = left;\n+        this.right = right;\n+        return this;\n+    }\n+\n+    boolean areEqual() {\n+        File left = this.left.call();\n+        File right = this.right.call();\n+        notNull(left, \"source jar file to compare\", right, \"source jar file to compare\");\n+\n+        FileHasher hasher = new FileHasher();\n+        byte[] leftHash = hasher.hash(left);\n+        byte[] rightHash = hasher.hash(right);\n+        return Arrays.equals(leftHash, rightHash);\n+    }\n+}\n--- a/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparator.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparator.java\n package org.mockito.release.comparison;\n \n+import groovy.lang.Closure;\n+\n+import java.io.File;\n+\n+/**\n+ * Compares publications\n+ */\n public interface PublicationsComparator {\n+\n+    /**\n+     * Sets files for comparison\n+     */\n+    void compareBinaries(Closure<File> left, Closure<File> right);\n+\n+    /**\n+     * Sets poms for comparison\n+     */\n+    void comparePoms(Closure<String> left, Closure<String> right);\n+\n+    /**\n+     * Gives information if publications are equal\n+     */\n+    boolean isPublicationsEqual();\n }\n--- a/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java\n \n public class PublicationsComparatorTask extends DefaultTask implements PublicationsComparator {\n \n-    private SourceJarComparator sourceJarComparator = new SourceJarComparator();\n+    private BinaryComparator binaryComparator = new BinaryComparator();\n     private PomComparator pomComparator = new PomComparator();\n     private Boolean publicationsEqual;\n \n-    void compareSourcesJar(Closure<File> left, Closure<File> right) {\n-        sourceJarComparator.setPair(left, right);\n+    public void compareBinaries(Closure<File> left, Closure<File> right) {\n+        binaryComparator.setPair(left, right);\n+    }\n+\n+    public void comparePoms(Closure<String> left, Closure<String> right) {\n+        pomComparator.setPair(left, right);\n     }\n \n     public boolean isPublicationsEqual() {\n-        assert publicationsEqual != null : \"task not executed yet\";\n+        assert publicationsEqual != null : \"Comparison task was not executed yet, the 'publicationsEqual' information not available.\";\n         return publicationsEqual;\n-    }\n-\n-    void comparePom(Closure<String> left, Closure<String> right) {\n-        pomComparator.setPair(left, right);\n     }\n \n     @TaskAction public void comparePublications() {\n         boolean poms = pomComparator.areEqual();\n         getLogger().lifecycle(\"{} - pom files equal: {}\", getPath(), poms);\n \n-        boolean jars = sourceJarComparator.areEqual();\n+        boolean jars = binaryComparator.areEqual();\n         getLogger().lifecycle(\"{} - source jars equal: {}\", getPath(), jars);\n \n         this.publicationsEqual = jars && poms;", "timestamp": 1416072549, "metainfo": ""}