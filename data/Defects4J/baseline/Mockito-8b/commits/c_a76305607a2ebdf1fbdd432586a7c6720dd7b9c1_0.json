{"sha": "a76305607a2ebdf1fbdd432586a7c6720dd7b9c1", "log": "reordered some arguments  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40692", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n      * @return mock object\n      */\n     public static <T> T mock(Class<T> classToMock, String name) {\n-        return MockUtil.createMock(classToMock, name, MOCKING_PROGRESS, null);\n+        return MockUtil.createMock(classToMock, MOCKING_PROGRESS, name, null);\n     }\n \n     /**\n      * @return a spy of the real object\n      */\n     public static <T> T spy(T object) {\n-        return MockUtil.createMock((Class<T>) object.getClass(), null, MOCKING_PROGRESS, object);\n+        return MockUtil.createMock((Class<T>) object.getClass(), MOCKING_PROGRESS, null, object);\n     }\n \n     /**\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n \n public class MockUtil {\n     \n-    //TODO reorder args\n-    public static <T> T createMock(Class<T> classToMock, String mockName, MockingProgress progress, T optionalInstance) {\n-        if (mockName == null) {\n-            mockName = toInstanceName(classToMock);\n+    public static <T> T createMock(Class<T> classToMock, MockingProgress progress, String optionalMockName, T optionalInstance) {\n+        if (optionalMockName == null) {\n+            optionalMockName = toInstanceName(classToMock);\n         }\n         MockFactory<T> proxyFactory = new MockFactory<T>();\n-        MockHandler<T> mockHandler = new MockHandler<T>(mockName, progress, new MatchersBinder());\n+        MockHandler<T> mockHandler = new MockHandler<T>(optionalMockName, progress, new MatchersBinder());\n         MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>>(classToMock, mockHandler);\n         return proxyFactory.createMock(classToMock, filter, optionalInstance);\n     }", "timestamp": 1216302669, "metainfo": ""}