{"sha": "d7b85d08283e9e21fb6c77c61b6d5e3d1d8e4c8d", "log": "fixed other object methods on SmartNulls  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401230", "commit": "\n--- a/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n+++ b/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n \n import java.lang.reflect.Method;\n \n-import net.sf.cglib.proxy.MethodInterceptor;\n import net.sf.cglib.proxy.MethodProxy;\n \n import org.mockito.Mockito;\n import org.mockito.ReturnValues;\n import org.mockito.exceptions.cause.BecauseThisMethodWasNotStubbed;\n import org.mockito.exceptions.verification.SmartNullPointerException;\n+import org.mockito.internal.creation.MethodInterceptorFilter;\n+import org.mockito.internal.creation.MockAwareInterceptor;\n import org.mockito.internal.creation.jmock.ClassImposterizer;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.invocation.InvocationOnMock;\n         }\n         Class<?> type = invocation.getMethod().getReturnType();\n         if (ClassImposterizer.INSTANCE.canImposterise(type)) {\n-            return ClassImposterizer.INSTANCE.imposterise(new MethodInterceptor() {\n-                Exception whenCreated = new BecauseThisMethodWasNotStubbed(\"\\nBecause this method was not stubbed correctly:\");\n-                public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {\n-                    if (Invocation.isToString(method)) {\n-                        return \"SmartNull returned by \" + invocation.getMethod().getName() + \"() method on mock\";\n-                    }\n-                    throw new SmartNullPointerException(\"\\nYou have a NullPointerException here:\", whenCreated);\n-                }}, type);\n+            return ClassImposterizer.INSTANCE.imposterise(\n+                    new MethodInterceptorFilter<MockAwareInterceptor>(type, new MockAwareInterceptor() {\n+                        \n+                        Exception whenCreated = new BecauseThisMethodWasNotStubbed(\"\\nBecause this method was not stubbed correctly:\");\n+                        \n+                        public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {\n+                            if (Invocation.isToString(method)) {\n+                                return \"SmartNull returned by \" + invocation.getMethod().getName() + \"() method on mock\";\n+                            }\n+                            throw new SmartNullPointerException(\"\\nYou have a NullPointerException here:\", whenCreated);\n+                        }\n+\n+                        public void setInstance(Object mock) {\n+                        }\n+                    }), type);\n         }\n         return null;\n     }\n--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n         ReturnValues returnValues = new SmartNullReturnValues();\n         \n         Foo smartNull = (Foo) returnValues.valueFor(invocationOf(Foo.class, \"get\"));\n+        Foo otherSmartNull = (Foo) returnValues.valueFor(invocationOf(Foo.class, \"get\"));\n         \n         //TODO after 1.7 add functionality of printing params\n         assertEquals(\"SmartNull returned by get() method on mock\", smartNull + \"\");\n-//        assertEquals(false, smartNull.equals(null));\n+        assertEquals(false, smartNull.equals(null));\n+        assertTrue(otherSmartNull.hashCode() != smartNull.hashCode());\n     }\n }", "timestamp": 1232491735, "metainfo": ""}