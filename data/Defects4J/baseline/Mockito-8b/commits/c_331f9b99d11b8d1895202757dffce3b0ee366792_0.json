{"sha": "331f9b99d11b8d1895202757dffce3b0ee366792", "log": "added link at every matcher in Matchers and AdditionalMatchers  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40276", "commit": "\n--- a/src/org/mockito/AdditionalMatchers.java\n+++ b/src/org/mockito/AdditionalMatchers.java\n  * See {@link Matchers} for general info about matchers.\n  * <p>\n  * AdditionalMatchers provides rarely used matchers, kept only for somewhat compatibility with EasyMock. \n- * Use additional matchers very judiciously because they impact readability of a test.\n- * It is recommended to use matchers only from {@link Matchers} and keep stubbing and verification simple.\n+ * Use additional matchers very judiciously because they may impact readability of a test.\n+ * It is recommended to use matchers from {@link Matchers} and keep stubbing and verification simple.\n  * <p>\n  * Example of using logical and(), not(), or() matchers: \n  *  \n \n     /**\n      * argument greater than or equal the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * byte argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * double argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * float argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * int argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * long argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * short argument greater than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * comparable argument less than or equal the given value details.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * byte argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * double argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * float argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * int argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * long argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * short argument less than or equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers} \n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * comparable argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * byte argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * double argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * float argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * int argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * long argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * short argument greater than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * comparable argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * byte argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * double argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * float argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * int argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * long argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * short argument less than the given value.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n     /**\n      * comparable argument equals to the given value according to their\n      * compareTo method.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n     /**\n      * Object array argument that is equal to the given array, i.e. it has to\n      * have the same type, length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param <T>\n      *            the type of the array, it is passed through to prevent casts.\n     /**\n      * short array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * long array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * int array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * float array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * double array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * char array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * byte array argument that is equal to the given array, i.e. it has to have\n      * the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n     /**\n      * boolean array argument that is equal to the given array, i.e. it has to\n      * have the same length, and each element has to be equal.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given array.\n \n     /**\n      * boolean argument that matches both given matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * byte argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * char argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * double argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * float argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * int argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * long argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * short argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * Object argument that matches both given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n \n     /**\n      * boolean argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * Object argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n \n     /**\n      * short argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * long argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * int argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * float argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * double argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * char argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * byte argument that matches any of the given argument matchers.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the first argument matcher.\n \n     /**\n      * Object argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n \n     /**\n      * short argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * int argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * long argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * float argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * double argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * char argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * boolean argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n \n     /**\n      * byte argument that does not match the given argument matcher.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param first\n      *            placeholder for the argument matcher.\n     /**\n      * double argument that has an absolute difference to the given value that\n      * is less than the given delta details.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n     /**\n      * float argument that has an absolute difference to the given value that is\n      * less than the given delta details.\n+     * <p>\n+     * See examples in javadoc for {@link AdditionalMatchers}\n      * \n      * @param value\n      *            the given value.\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n \n /**\n  * Allow less constrained verification or stubbing. See also {@link AdditionalMatchers}.\n+ * <p>\n+ * {@link Mockito} extends Matchers so to get access to matchers just import Mockito class statically.\n  * <pre>\n  *  //stubbing using anyInt() argument matcher\n  *  stub(mockedList.get(anyInt())).toReturn(\"element\");\n \n     /**\n      * any boolean argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>false</code>.\n      */\n     public static boolean anyBoolean() {\n-        //TODO every matcher should have a link to documentation about matchers\n         return reportMatcher(Any.ANY).returnFalse();\n     }\n \n     /**\n      * any byte argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any char argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any int argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any long argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any float argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any double argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any short argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>0</code>.\n      */\n \n     /**\n      * any Object argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>null</code>.\n      */\n \n     /**\n      * any String argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>null</code>.\n      */\n \n     /**\n      * Object argument that implements the given class. \n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param <T>\n      *            the accepted type.\n \n     /**\n      * boolean argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * byte argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * char argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * double argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * float argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n     \n     /**\n      * int argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * long argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * short argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * Object argument that is equal to the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param value\n      *            the given value.\n \n     /**\n      * Object argument that is the same as the given value.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param <T>\n      *            the type of the object, it is passed through to prevent casts.\n \n     /**\n      * null argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>null</code>.\n      */\n \n     /**\n      * not null argument.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @return <code>null</code>.\n      */\n \n     /**\n      * String argument that contains the given substring.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param substring\n      *            the substring.\n \n     /**\n      * String argument that matches the given regular expression.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param regex\n      *            the regular expression.\n \n     /**\n      * String argument that ends with the given suffix.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param suffix\n      *            the suffix.\n \n     /**\n      * String argument that starts with the given prefix.\n+     * <p>\n+     * See examples in javadoc for {@link Matchers}\n      * \n      * @param prefix\n      *            the prefix.\n--- a/src/org/mockito/internal/progress/LastArguments.java\n+++ b/src/org/mockito/internal/progress/LastArguments.java\n import org.mockito.internal.matchers.Not;\n import org.mockito.internal.matchers.Or;\n \n-//TODO should be similar pattern to MP\n @SuppressWarnings(\"unchecked\")\n public class LastArguments {\n     ", "timestamp": 1199914161, "metainfo": ""}