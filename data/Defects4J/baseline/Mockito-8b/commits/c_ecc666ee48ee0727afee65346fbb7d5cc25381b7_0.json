{"sha": "ecc666ee48ee0727afee65346fbb7d5cc25381b7", "log": "Fixed issue 228 Documentation update", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * <h3 id=\"6\">6. Verification in order</h3>\n  * \n  * <pre>\n+ * // A. Single mock whose methods must be invoked in a particular order\n+ * List singleMock = mock(List.class);\n+ *\n+ * //using a single mock\n+ * singleMock.add(\"was added first\");\n+ * singleMock.add(\"was added second\");\n+ *\n+ * //create an inOrder verifier for a single mock\n+ * InOrder inOrder = inOrder(singleMock);\n+ *\n+ * //following will make sure that add is first called with \"was added first, then with \"was added second\"\n+ * inOrder.verify(singleMock).add(\"was added first\");\n+ * inOrder.verify(singleMock).add(\"was added second\");\n+ *\n+ * // B. Multiple mocks that must be used in a particular order\n  * List firstMock = mock(List.class);\n  * List secondMock = mock(List.class);\n  * \n  * //following will make sure that firstMock was called before secondMock\n  * inOrder.verify(firstMock).add(\"was called first\");\n  * inOrder.verify(secondMock).add(\"was called second\");\n+ *\n+ * // Oh, and A + B can be mixed together at will\n  * </pre>\n  * \n  * Verification in order is flexible - <b>you don't have to verify all", "timestamp": 1288382661, "metainfo": ""}