{"sha": "ee8cd08c3f8293976e1761fef41876b39eee5cfa", "log": "Made the state reset when someone misuse mockito  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401034", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n     private static OngoingStubbing stub() {\n         OngoingStubbing stubbing = MOCKING_PROGRESS.pullOngoingStubbing();\n         if (stubbing == null) {\n+            MOCKING_PROGRESS.reset();\n             REPORTER.missingMethodInvocation();\n         }\n         return stubbing;\n--- a/test/org/mockitousage/stubbing/BasicStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/BasicStubbingTest.java\n \n import org.junit.Before;\n import org.junit.Test;\n+import org.mockito.exceptions.misusing.MissingMethodInvocationException;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n         verifyZeroInteractions(mock);\n     }\n     \n+    @Test\n+    public void unfinishedStubbingCleansUpTheState() {\n+        try {\n+            when(\"\").thenReturn(\"\");\n+            fail(); \n+        } catch (MissingMethodInvocationException e) {}\n+\n+        //anything that can cause state validation\n+        verifyZeroInteractions(mock);\n+    }\n+    \n     class Foo {\n         public final String toString() {\n             return \"foo\";", "timestamp": 1225056957, "metainfo": ""}