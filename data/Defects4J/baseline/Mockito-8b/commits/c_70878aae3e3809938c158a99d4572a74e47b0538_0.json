{"sha": "70878aae3e3809938c158a99d4572a74e47b0538", "log": "verify execution on derived iterface mock but run in on a base interface  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4048", "commit": "\n--- a/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n \n public class IncorectBindingPuzzleFixedTest {\n \n-    private DerivedInterface mock;\n-    \n-    @Before public void setup() {\n-        mock = Mockito.mock(DerivedInterface.class);\n+    private BaseInteface mock;\n+\n+    private void setMock(DerivedInterface mock) {\n+        this.mock = mock;\n     }\n \n     private class BaseMessage {}\n     private class Message extends BaseMessage {}\n-    \n+\n     private interface BaseInteface {\n         public void print(BaseMessage message);\n     }\n     private interface DerivedInterface extends BaseInteface {\n         public void print(Message message);\n     }\n-    \n+\n     private void print(BaseMessage message) {\n         mock.print(message);\n     }\n-    \n+\n+    @Ignore\n     @Test\n     public void overriddenInterfaceMethodNotWorking() throws Exception {\n+        DerivedInterface derivedMock = Mockito.mock(DerivedInterface.class);\n+        setMock(derivedMock);\n         Message message = new Message();\n         print(message);\n-        Mockito.verify(mock).print(message);\n+        Mockito.verify(derivedMock).print(message);\n     }\n-    \n+\n     @Test\n     public void overriddenInterfaceMethodWorking() throws Exception {\n-        Message message = new Message();\n+        DerivedInterface derivedMock = Mockito.mock(DerivedInterface.class);\n+        setMock(derivedMock);\n+        BaseMessage message = new Message();\n         print(message);\n-        Mockito.verify(mock).print((BaseMessage)message);\n+        Mockito.verify(derivedMock).print(message);\n     }\n+\n }", "timestamp": 1195755695, "metainfo": ""}