{"sha": "d154fbd76bba53d35072b8b8ea97f17b5db5c973", "log": "Added PluginSwitcher extension point  It does not work yet. Added an integration test.", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/plugins/PluginSwitcher.java\n+package org.mockito.plugins;\n+\n+/**\n+ * Allows switching off the plugins that are discovered on classpath.\n+ * When a particular plugin is switched off, the default Mockito behavior is used.\n+ * For example, if Android's dexmaker MockMaker is switched off,\n+ * Mockito default MockMaker implementation is used {@link org.mockito.plugins.MockMaker}\n+ */\n+public interface PluginSwitcher {\n+\n+    /**\n+     * Mockito invokes this method for every plugin found in the classpath\n+     * (except from the {@code PluginSwitcher} implementation itself).\n+     * If no custom plugins are discovered this method is not invoked at all.\n+     */\n+    boolean isEnabled(Class pluginClass);\n+}\n--- /dev/null\n+++ b/subprojects/extTest/src/test/java/org/mockitousage/plugins/switcher/MyPluginSwitcher.java\n+package org.mockitousage.plugins.switcher;\n+\n+import org.mockito.plugins.PluginSwitcher;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+public class MyPluginSwitcher implements PluginSwitcher {\n+\n+    static List<Class> invokedFor = new LinkedList<Class>();\n+\n+    public boolean isEnabled(Class pluginClass) {\n+        invokedFor.add(pluginClass);\n+        return true;\n+    }\n+}\n--- /dev/null\n+++ b/subprojects/extTest/src/test/java/org/mockitousage/plugins/switcher/PluginSwitcherTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+\n+package org.mockitousage.plugins.switcher;\n+\n+import org.junit.Test;\n+import org.mockitousage.plugins.stacktrace.MyStackTraceCleanerProvider;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.Assert.assertEquals;\n+\n+//TODO consider adding a separate source set or project\n+//that validates that switcher can disable a plugin\n+public class PluginSwitcherTest {\n+    \n+    @Test\n+    public void plugin_switcher_is_used() {\n+        assertEquals(MyPluginSwitcher.invokedFor, asList(MyStackTraceCleanerProvider.class));\n+    }\n+}", "timestamp": 1418426971, "metainfo": ""}