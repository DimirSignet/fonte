{"sha": "0228096eb7fb8073650ad4846c2e2344055673fc", "log": "Fixed the ant build that tries to run all the classes that ends with 'Test' even though those are not test classes  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401859", "commit": "\n--- a/test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java\n+++ b/test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java\n         ConfigurationAccess.getConfig().overrideAnnotationEngine(null);\n     }\n     \n-    class SimpleTest {\n+    class SimpleTestCase {\n         @InjectMock Tested tested = new Tested();\n         @Mock Dependency mock;\n     }\n         //given\n         AnnotationEngine defaultEngine = new DefaultMockitoConfiguration().getAnnotationEngine();\n         ConfigurationAccess.getConfig().overrideAnnotationEngine(defaultEngine);\n-        SimpleTest test = new SimpleTest();\n+        SimpleTestCase test = new SimpleTestCase();\n         \n         //when\n         MockitoAnnotations.initMocks(test);\n         //given\n         AnnotationEngine customizedEngine = new DefaultAnnotationEngine() { /**/ };\n         ConfigurationAccess.getConfig().overrideAnnotationEngine(customizedEngine);\n-        SimpleTest test = new SimpleTest();\n+        SimpleTestCase test = new SimpleTestCase();\n         \n         //when\n         MockitoAnnotations.initMocks(test);\n--- a/test/org/mockitousage/basicapi/MockInjectionTest.java\n+++ b/test/org/mockitousage/basicapi/MockInjectionTest.java\n \n public class MockInjectionTest extends TestBase {\n \n-\tprivate SuperUnderTest superUnderTestWithoutInjection = new SuperUnderTest();\n-\t@InjectMock private SuperUnderTest superUnderTest = new SuperUnderTest();\n-\t@InjectMock private BaseUnderTest baseUnderTest = new BaseUnderTest();\n-\t@InjectMock private SubUnderTest subUnderTest = new SubUnderTest();\n-\t@InjectMock private OtherBaseUnderTest otherBaseUnderTest = new OtherBaseUnderTest();\n+\tprivate SuperUnderTesting superUnderTestWithoutInjection = new SuperUnderTesting();\n+\t@InjectMock private SuperUnderTesting superUnderTest = new SuperUnderTesting();\n+\t@InjectMock private BaseUnderTesting baseUnderTest = new BaseUnderTesting();\n+\t@InjectMock private SubUnderTesting subUnderTest = new SubUnderTesting();\n+\t@InjectMock private OtherBaseUnderTesting otherBaseUnderTest = new OtherBaseUnderTesting();\n \t@Mock private Map map;\n \t@Mock private List list;\n \t@Mock private Set set;\n \t\tassertSame(searchTree, otherBaseUnderTest.getSearchTree());\n \t}\n \n-\tclass SuperUnderTest {\n+\tclass SuperUnderTesting {\n \n \t\tprivate List aList;\n \n \t\t}\n \t}\n \n-\tclass BaseUnderTest extends SuperUnderTest {\n+\tclass BaseUnderTesting extends SuperUnderTesting {\n \t\tprivate Map aMap;\n \n \t\tpublic Map getAMap() {\n \t\t}\n \t}\n \n-\tclass OtherBaseUnderTest extends SuperUnderTest {\n+\tclass OtherBaseUnderTesting extends SuperUnderTesting {\n \t\tprivate TreeSet searchTree;\n \n \t\tpublic TreeSet getSearchTree() {\n \t\t}\n \t}\n \n-\tclass SubUnderTest extends BaseUnderTest {\n+\tclass SubUnderTesting extends BaseUnderTesting {\n \t\tprivate Set histogram1;\n \t\tprivate Set histogram2;\n ", "timestamp": 1266695486, "metainfo": ""}