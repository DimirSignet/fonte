{"sha": "760ad4f276c4c399dc56e4f04f37edd2ea10aa8f", "log": "In order to make mocks serializable started work on this feature. Refactoring. Adding unit tests.  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401598", "commit": "\n--- a/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n+++ b/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n \n     @Test\n     public void shouldProvideOwnImplementationOfhashCode() throws Throwable {\n-        //given\n+        //when\n         Object ret = filter.intercept(new MethodsImpl(), MethodsImpl.class.getMethod(\"hashCode\"), new Object[0], null);\n \n         //then\n         assertTrue((Integer) ret != 0);\n         Mockito.verify(mockHanlder, never()).handle(any(Invocation.class));\n     }\n+\n+    @Test\n+    public void shouldKnowWhenMockIsEqualAndNotDelegateToHandler() throws Throwable {\n+        //when\n+        MethodsImpl proxy = new MethodsImpl();\n+        Object ret = filter.intercept(proxy, MethodsImpl.class.getMethod(\"equals\", Object.class), new Object[] {proxy}, null);\n+\n+        //then\n+        assertTrue((Boolean) ret);\n+        Mockito.verify(mockHanlder, never()).handle(any(Invocation.class));\n+    }\n+\n+    @Test\n+    public void shouldKnowWhenMockIsNotEqualAndNotDelegateToHandler() throws Throwable {\n+        //when\n+        MethodsImpl proxy = new MethodsImpl();\n+        Object ret = filter.intercept(proxy, MethodsImpl.class.getMethod(\"equals\", Object.class), new Object[] {\"some other object\"}, null);\n+\n+        //then\n+        assertFalse((Boolean) ret);\n+        Mockito.verify(mockHanlder, never()).handle(any(Invocation.class));\n+    }\n }", "timestamp": 1251021899, "metainfo": ""}