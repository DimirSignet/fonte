{"sha": "a0519165bd79442d6d520615c70ad761cca9cb45", "log": "[#467] change return value of compareTo for the same object", "commit": "\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java\n  *  Returns description of mock for toString() method\n  * </li>\n  * <li>\n- *  Returns non-zero for Comparable#compareTo(T other) method (see issue 184)\n+ *  Returns zero if references are equals otherwise non-zero for Comparable#compareTo(T other) method (see issue 184)\n  * </li>\n  * <li>\n  *  Returns null for everything else\n             }\n         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n             //see issue 184.\n-            //mocks by default should not return 0 for compareTo because they are not the same. Hence we return 1 (anything but 0 is good).\n+            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).\n             //Only for compareTo() method by the Comparable interface\n-            return 1;\n+            return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;\n         }\n         \n         Class<?> returnType = invocation.getMethod().getReturnType();\n--- a/test/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java\n+++ b/test/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java\n         assertTrue(result != (Object) 0);\n     }\n \n+    @Test public void should_return_zero_for_compareTo_method() {\n+        //given\n+        Date d = mock(Date.class);\n+        d.compareTo(d);\n+        Invocation compareTo = this.getLastInvocation();\n+\n+        //when\n+        Object result = values.answer(compareTo);\n+\n+        //then\n+        assertEquals(0, result);\n+    }\n+\n }\n--- a/test/org/mockitousage/bugs/ShouldMocksCompareToBeConsistentWithEqualsTest.java\n+++ b/test/org/mockitousage/bugs/ShouldMocksCompareToBeConsistentWithEqualsTest.java\n     }\n \n     @Test\n+    public void shouldCompareToTreatAsEqualMocksWithTheSameReferences() {\n+        //given\n+        Date today    = mock(Date.class);\n+\n+        //when\n+        Set<Date> set = new TreeSet<Date>();\n+        set.add(today);\n+        set.add(today);\n+\n+        //then\n+        assertEquals(1, set.size());\n+    }\n+\n+    @Test\n     public void shouldAllowStubbingAndVerifyingCompareTo() {\n         //given\n         Date mock    = mock(Date.class);", "timestamp": 1389138929, "metainfo": ""}