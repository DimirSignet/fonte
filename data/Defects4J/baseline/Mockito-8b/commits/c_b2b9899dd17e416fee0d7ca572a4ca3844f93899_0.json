{"sha": "b2b9899dd17e416fee0d7ca572a4ca3844f93899", "log": "added some tests and refactorings around syncingPrinter  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40627", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/internal/invocation/CanPrintInMultilines.java\n+package org.mockito.internal.invocation;\n+\n+public interface CanPrintInMultilines {\n+\n+    String toString();\n+    boolean printsInMultilines();\n+    String toMultilineString();\n+\n+}\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n  * Contains stack trace of invocation\n  */\n @SuppressWarnings(\"unchecked\")\n-public class Invocation implements PrintableInvocation, InvocationOnMock {\n+public class Invocation implements PrintableInvocation, InvocationOnMock, CanPrintInMultilines {\n \n     private static final int MAX_LINE_LENGTH = 45;\n     private final int sequenceNumber;\n         return toString(argumentsToMatchers(), false);\n     }\n \n-    public boolean hasMultiLinePrint() {\n+    public boolean printsInMultilines() {\n         return toString().contains(\"\\n\");\n     }\n \n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n import org.mockito.exceptions.PrintableInvocation;\n \n @SuppressWarnings(\"unchecked\")\n-public class InvocationMatcher implements PrintableInvocation {\n+public class InvocationMatcher implements PrintableInvocation, CanPrintInMultilines {\n \n     private final Invocation invocation;\n     private final List<Matcher> matchers;\n         return this.matchers;\n     }\n     \n+    /* (non-Javadoc)\n+     * @see org.mockito.internal.invocation.CanPrintInMultilines#toString()\n+     */\n     public String toString() {\n         return invocation.toString(matchers, false);\n     }\n \n-    public boolean hasMultilinePrint() {        \n+    /* (non-Javadoc)\n+     * @see org.mockito.internal.invocation.CanPrintInMultilines#hasMultilinePrint()\n+     */\n+    public boolean printsInMultilines() {        \n         return toString().contains(\"\\n\");\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.mockito.internal.invocation.CanPrintInMultilines#toMultilineString()\n+     */\n     public String toMultilineString() {\n         return invocation.toString(matchers, true);\n     }    \n--- a/src/org/mockito/internal/verification/SyncingPrinter.java\n+++ b/src/org/mockito/internal/verification/SyncingPrinter.java\n package org.mockito.internal.verification;\n \n import org.mockito.exceptions.PrintableInvocation;\n-import org.mockito.internal.invocation.Invocation;\n-import org.mockito.internal.invocation.InvocationMatcher;\n+import org.mockito.internal.invocation.CanPrintInMultilines;\n \n public class SyncingPrinter {\n \n     private final String wanted;\n     private final String actual;\n \n-    public SyncingPrinter(InvocationMatcher wanted, Invocation actual) {\n-        if (wanted.hasMultilinePrint() || actual.hasMultiLinePrint()) {\n+    public SyncingPrinter(CanPrintInMultilines wanted, CanPrintInMultilines actual) {\n+        if (wanted.printsInMultilines() || actual.printsInMultilines()) {\n             this.wanted = wanted.toMultilineString();\n             this.actual = actual.toMultilineString();\n         } else {\n--- a/test/org/mockito/internal/invocation/InvocationMatcherTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationMatcherTest.java\n     \n     @Test\n     public void shouldNotEqualIfNumberOfArgumentsDiffer() throws Exception {\n-        InvocationMatcher withOneArg = new InvocationMatcher(new InvocationBuilder().args(\"test\").toInvocation());\n-        InvocationMatcher withTwoArgs = new InvocationMatcher(new InvocationBuilder().args(\"test\", 100).toInvocation());\n+        CanPrintInMultilines withOneArg = new InvocationMatcher(new InvocationBuilder().args(\"test\").toInvocation());\n+        CanPrintInMultilines withTwoArgs = new InvocationMatcher(new InvocationBuilder().args(\"test\", 100).toInvocation());\n \n         assertFalse(withOneArg.equals(null));\n         assertFalse(withOneArg.equals(withTwoArgs));\n--- /dev/null\n+++ b/test/org/mockito/internal/verification/SyncingPrinterTest.java\n+package org.mockito.internal.verification;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.internal.invocation.CanPrintInMultilines;\n+\n+public class SyncingPrinterTest {\n+\n+    private CanPrintInMultilines multi;\n+    private CanPrintInMultilines normal;\n+\n+    @Before\n+    public void setup() {\n+        multi = new CanPrintInMultilinesStub(true, \"multi\", \"normal\");\n+        normal = new CanPrintInMultilinesStub(false, \"multi\", \"normal\");\n+    }\n+    \n+    @Test\n+    public void shouldPrintBothInMultilinesWhenAtLeastOneIsMulti() {\n+        SyncingPrinter printer = new SyncingPrinter(multi, normal);\n+        assertEquals(\"multi\", printer.getWanted().toString());\n+        assertEquals(\"multi\", printer.getActual().toString());\n+        \n+        printer = new SyncingPrinter(normal, multi);\n+        assertEquals(\"multi\", printer.getWanted().toString());\n+        assertEquals(\"multi\", printer.getActual().toString());\n+        \n+        printer = new SyncingPrinter(multi, multi);\n+        assertEquals(\"multi\", printer.getWanted().toString());\n+        assertEquals(\"multi\", printer.getActual().toString());\n+    }\n+    \n+    @Test\n+    public void shouldPrintBothInSingleLine() {\n+        SyncingPrinter printer = new SyncingPrinter(normal, normal);\n+        assertEquals(\"normal\", printer.getWanted().toString());\n+        assertEquals(\"normal\", printer.getActual().toString());\n+    }\n+\n+    static class CanPrintInMultilinesStub implements CanPrintInMultilines {\n+        private final boolean printsInMultilines;\n+        private final String multilineString;\n+        private final String normalString;\n+\n+        public CanPrintInMultilinesStub(boolean printsInMultilines, String multilineString, String normalString) {\n+            this.printsInMultilines = printsInMultilines;\n+            this.multilineString = multilineString;\n+            this.normalString = normalString;\n+        }\n+        \n+        public boolean printsInMultilines() {\n+            return printsInMultilines;\n+        }\n+\n+        public String toMultilineString() {\n+            return multilineString;\n+        }\n+        \n+        public String toString() {\n+            return normalString;\n+        }\n+    }\n+}\n--- a/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n+++ b/test/org/mockito/internal/verification/VerifyingRecorderTest.java\n import org.junit.Test;\n import org.mockito.TestBase;\n import org.mockito.internal.invocation.AllInvocationsFinder;\n+import org.mockito.internal.invocation.CanPrintInMultilines;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n     \n     class VerifierStub implements Verifier {\n         private List<Invocation> invocations;\n-        private InvocationMatcher wanted;\n+        private CanPrintInMultilines wanted;\n         private VerificationModeImpl mode;\n         public void verify(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {\n             this.invocations = invocations;", "timestamp": 1213640148, "metainfo": ""}