{"sha": "ebb6d01cd17a8f94fed0381cb72cde79c59119ed", "log": "Don't depend on cglib's ability to inject code into the current class loader for a test.  (Cglib can generate classes into the current class loader using reflection and magic; other IMockMaker implementations can't.)  --HG-- extra : transplant_source : %3C%5B%BF%DB%96p%AB%EE%D2%98Mu%85%B96O%2A%89%C8%C3", "commit": "\n--- a/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n+++ b/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.util.reflection;\n \n import static org.mockito.Matchers.*;\n         private String privateInherited = \"private\";\n     }\n     \n-    static class SomeObject extends InheritMe {\n+    public static class SomeObject extends InheritMe {\n         @SuppressWarnings(\"unused\")\n         // required because static fields needs to be excluded from copying\n         private static int staticField = -100;\n         }\n     }\n \n-    static class SomeOtherObject {\n+    public static class SomeOtherObject {\n     }\n \n     private SomeObject from = new SomeObject(100);", "timestamp": 1326748197, "metainfo": ""}