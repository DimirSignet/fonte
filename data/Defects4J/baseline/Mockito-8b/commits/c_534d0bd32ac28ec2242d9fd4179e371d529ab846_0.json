{"sha": "534d0bd32ac28ec2242d9fd4179e371d529ab846", "log": "Added javadocs for the new types. Moved the incubating API types around packages a bit.  --HG-- rename : src/org/mockito/plugins/MockitoInvocationHandler.java => src/org/mockito/invocation/MockitoInvocationHandler.java rename : src/org/mockito/plugins/MockSettingsInfo.java => src/org/mockito/mock/MockSettingsInfo.java", "commit": "\n--- a/src/org/mockito/MockSettings.java\n+++ b/src/org/mockito/MockSettings.java\n package org.mockito;\n \n import org.mockito.listeners.InvocationListener;\n-import org.mockito.plugins.MockSettingsInfo;\n+import org.mockito.mock.MockSettingsInfo;\n import org.mockito.stubbing.Answer;\n \n import java.io.Serializable;\n--- a/src/org/mockito/internal/InvocationNotifierHandler.java\n+++ b/src/org/mockito/internal/InvocationNotifierHandler.java\n import org.mockito.internal.stubbing.InvocationContainer;\n import org.mockito.invocation.Invocation;\n import org.mockito.listeners.InvocationListener;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.stubbing.Answer;\n import org.mockito.stubbing.VoidMethodStubbable;\n \n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n import org.mockito.internal.verification.MockAwareVerificationMode;\n import org.mockito.internal.verification.VerificationDataImpl;\n import org.mockito.invocation.Invocation;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.stubbing.Answer;\n import org.mockito.stubbing.VoidMethodStubbable;\n import org.mockito.verification.VerificationMode;\n--- a/src/org/mockito/internal/creation/CglibMockMaker.java\n+++ b/src/org/mockito/internal/creation/CglibMockMaker.java\n import org.mockito.cglib.proxy.Callback;\n import org.mockito.cglib.proxy.Factory;\n import org.mockito.plugins.MockMaker;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.internal.creation.jmock.ClassImposterizer;\n-import org.mockito.plugins.MockSettingsInfo;\n+import org.mockito.mock.MockSettingsInfo;\n \n /**\n  * A MockMaker that uses cglib to generate mocks on a JVM.\n--- a/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n+++ b/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n import org.mockito.cglib.proxy.MethodInterceptor;\n import org.mockito.cglib.proxy.MethodProxy;\n import org.mockito.invocation.Invocation;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.internal.creation.cglib.CGLIBHacker;\n import org.mockito.internal.invocation.*;\n import org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod;\n import org.mockito.internal.progress.SequenceNumber;\n import org.mockito.internal.util.ObjectMethodsGuru;\n-import org.mockito.plugins.MockSettingsInfo;\n+import org.mockito.mock.MockSettingsInfo;\n \n public class MethodInterceptorFilter implements MethodInterceptor, Serializable {\n \n--- a/src/org/mockito/internal/creation/MockSettingsImpl.java\n+++ b/src/org/mockito/internal/creation/MockSettingsImpl.java\n     private Class<?>[] extraInterfaces;\n     private String name;\n     private Object spiedInstance;\n-    private Object delegatedInstance ;\n+    private Object delegatedInstance;\n     private Answer<Object> defaultAnswer;\n     private MockName mockName;\n     private boolean serializable;\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java\n import org.mockito.internal.creation.MockSettingsImpl;\n import org.mockito.internal.util.ObjectMethodsGuru;\n import org.mockito.invocation.InvocationOnMock;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.stubbing.Answer;\n \n /**\n--- /dev/null\n+++ b/src/org/mockito/invocation/MockitoInvocationHandler.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.invocation;\n+\n+import org.mockito.internal.Incubating;\n+import org.mockito.invocation.Invocation;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Mockito handler of an invocation on a mock. This is a core part of the API, the heart of Mockito.\n+ * This type might be interesting for developers wishing to extend Mockito.\n+ * See also the {@link org.mockito.plugins.MockMaker}.\n+ * <p>\n+ * Takes an invocation object and handles it.\n+ * The Invocation instance should be created by the {@link org.mockito.plugins.MockMaker}.\n+ * <p>\n+ * The default implementation provided by Mockito handles invocations by recording\n+ * method calls on mocks for further verification, captures the stubbing information when mock is stubbed,\n+ * returns the stubbed values for invocations that have been stubbed, and much more.\n+ */\n+@Incubating\n+public interface MockitoInvocationHandler extends Serializable {\n+\n+    /**\n+     * Handles the invocation.\n+     *\n+     * @param invocation The invocation to handle\n+     * @return Result\n+     * @throws Throwable Throwable\n+     */\n+    @Incubating\n+    Object handle(Invocation invocation) throws Throwable;\n+\n+}\n--- /dev/null\n+++ b/src/org/mockito/mock/MockSettingsInfo.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+\n+package org.mockito.mock;\n+\n+import org.mockito.internal.Incubating;\n+\n+/**\n+ * Informs about the mock settings\n+ */\n+@Incubating\n+public interface MockSettingsInfo {\n+\n+    /**\n+     * if the mock is serializable\n+     */\n+    boolean isSerializable();\n+}\n--- a/src/org/mockito/plugins/MockMaker.java\n+++ b/src/org/mockito/plugins/MockMaker.java\n package org.mockito.plugins;\n \n import org.mockito.internal.Incubating;\n+import org.mockito.invocation.MockitoInvocationHandler;\n+import org.mockito.mock.MockSettingsInfo;\n \n /**\n  * The facility to create mocks.\n  *     the qualified name <code>org.awesome.mockito.AwesomeMockMaker</code>.</li>\n  * </ol></p>\n  *\n- * @see MockSettingsInfo\n- * @see MockitoInvocationHandler\n+ * @see org.mockito.mock.MockSettingsInfo\n+ * @see org.mockito.invocation.MockitoInvocationHandler\n  * @see org.mockito.internal.configuration.ClassPathLoader\n  */\n @Incubating\n--- a/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n+++ b/test/org/mockito/internal/creation/MethodInterceptorFilterTest.java\n import org.mockito.Mockito;\n import org.mockito.cglib.proxy.MethodProxy;\n import org.mockito.internal.invocation.InvocationImpl;\n-import org.mockito.plugins.MockitoInvocationHandler;\n+import org.mockito.invocation.MockitoInvocationHandler;\n import org.mockito.internal.creation.cglib.CGLIBHacker;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.MockitoMethod;", "timestamp": 1333294699, "metainfo": ""}