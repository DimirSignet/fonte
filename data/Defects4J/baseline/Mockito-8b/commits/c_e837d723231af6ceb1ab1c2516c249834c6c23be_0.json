{"sha": "e837d723231af6ceb1ab1c2516c249834c6c23be", "log": "some rename job and fixing a bit of javadoc  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40695", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * \n  * <li> \n  * Although it is possible to verify a stubbed invocation, in majority\n- * of cases it's not necessary. Let's say you've stubbed foo.bar()\n+ * of cases it's not necessary: Let's say you've stubbed foo.bar()\n  * method. If your code cares what value foo.bar() returns, something\n  * else will fail if you forget to call foo.bar(). Hence you don't have\n  * to verify() it (e.g. it's just redundant). Not convinced? See  \n  * verifyNoMoreInteractions(mockedList);\n  * </pre>\n  * \n- * verifyNoMoreInteractions() should not be used in every method. \n+ * verifyNoMoreInteractions() should not be used in every test method. \n  * verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.\n  * Abusing it leads to overspecified, less maintainable tests. You can find further reading \n  * <a href=\"http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/\">here</a>.\n      * the same arguments many times.\n      * <p>\n      * Although it is possible to verify a stubbed invocation, in majority\n-     * of cases it's not necessary. Let's say you've stubbed foo.bar()\n+     * of cases it's not necessary: Let's say you've stubbed foo.bar()\n      * method. If your code cares what value foo.bar() returns, something\n      * else will fail if you forget to call foo.bar(). Hence you don't have\n      * to verify() it (e.g. it's just redundant). Not convinced? See  \n      * <a href=\"http://monkeyisland.pl/2008/04/26/asking-and-telling\">here</a>. \n+     * \n      * <p>\n      * See examples in javadoc for {@link Mockito} class\n      * \n      * else will fail if you forget to call foo.bar(). Hence you don't have\n      * to verify() it (e.g. it's just redundant). Not convinced? See  \n      * <a href=\"http://monkeyisland.pl/2008/04/26/asking-and-telling\">here</a>.\n-     *  \n+     * \n+     * <p>\n      * See examples in javadoc for {@link Mockito} class\n      * \n      * @param mock to be verified\n      * <p>\n      * Stubbed invocations (if called) are also treated as interactions.\n      * <p>\n-     * verifyNoMoreInteractions() should not be used in every method. \n+     * verifyNoMoreInteractions() should not be used in every test method. \n      * verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.\n      * Abusing it leads to overspecified, less maintainable tests. You can find further reading \n      * <a href=\"http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/\">here</a>.\n--- a/src/org/mockito/internal/util/MockUtil.java\n+++ b/src/org/mockito/internal/util/MockUtil.java\n \n public class MockUtil {\n     \n-    public static <T> T createMock(Class<T> classToMock, MockingProgress progress, String optionalMockName, T optionalInstance) {\n-        if (optionalMockName == null) {\n-            optionalMockName = toInstanceName(classToMock);\n+    public static <T> T createMock(Class<T> classToMock, MockingProgress progress, String mockName, T optionalInstance) {\n+        if (mockName == null) {\n+            mockName = toInstanceName(classToMock);\n         }\n         MockFactory<T> proxyFactory = new MockFactory<T>();\n-        MockHandler<T> mockHandler = new MockHandler<T>(optionalMockName, progress, new MatchersBinder());\n+        MockHandler<T> mockHandler = new MockHandler<T>(mockName, progress, new MatchersBinder());\n         MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>>(classToMock, mockHandler);\n         return proxyFactory.createMock(classToMock, filter, optionalInstance);\n     }", "timestamp": 1216306861, "metainfo": ""}