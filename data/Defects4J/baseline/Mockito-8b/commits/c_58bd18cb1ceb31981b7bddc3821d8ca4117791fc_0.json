{"sha": "58bd18cb1ceb31981b7bddc3821d8ca4117791fc", "log": "added test that document the fact that mocks cannot be deserialized if the mocked type has a private constructor. It might be possible in the future though it might requires tricks with objenesis and the custom object streams.", "commit": "\n--- a/test/org/mockitousage/basicapi/MocksSerializationTest.java\n+++ b/test/org/mockitousage/basicapi/MocksSerializationTest.java\n import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.InOrder;\n+import org.mockito.Mockito;\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.matchers.Any;\n import org.mockito.internal.stubbing.answers.ThrowsException;\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n import org.mockitousage.IMethods;\n+import org.mockitoutil.SimpleSerializationUtil;\n import org.mockitoutil.TestBase;\n \n import java.io.ByteArrayOutputStream;\n+import java.io.ObjectStreamException;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Observable;\n \n import static org.mockito.Matchers.anyString;\n-import static org.mockito.Mockito.CALLS_REAL_METHODS;\n-import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n-import static org.mockito.Mockito.anyObject;\n-import static org.mockito.Mockito.inOrder;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.never;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n-import static org.mockito.Mockito.withSettings;\n-import static org.mockitoutil.SimpleSerializationUtil.deserializeMock;\n-import static org.mockitoutil.SimpleSerializationUtil.serializeAndBack;\n-import static org.mockitoutil.SimpleSerializationUtil.serializeMock;\n+import static org.mockito.Mockito.*;\n+import static org.mockitoutil.SimpleSerializationUtil.*;\n \n @SuppressWarnings({\"unchecked\", \"serial\"})\n public class MocksSerializationTest extends TestBase implements Serializable {\n     }\n \n \n+\n+    public static class AClassWithPrivateNoArgConstructor {\n+        private AClassWithPrivateNoArgConstructor() {}\n+        List returningSomething() { return Collections.emptyList(); }\n+    }\n+\n+    @Test\n+    public void private_constructor_currently_not_supported_at_the_moment_at_deserialization_time() throws Exception {\n+        // given\n+        AClassWithPrivateNoArgConstructor mockWithPrivateConstructor = Mockito.mock(\n+                AClassWithPrivateNoArgConstructor.class,\n+                Mockito.withSettings().serializable()\n+        );\n+\n+        try {\n+            // when\n+            SimpleSerializationUtil.serializeAndBack(mockWithPrivateConstructor);\n+        } catch (ObjectStreamException e) {\n+            // then\n+            Assertions.assertThat(e.getMessage()).contains(\"no valid constructor\");\n+        }\n+    }\n+\n+\n     @Test\n     @Ignore(\"Bug to fix !!! see issue 399\")\n     public void BUG_ISSUE_399_try_some_mocks_with_current_answers() throws Exception {", "timestamp": 1357154610, "metainfo": ""}