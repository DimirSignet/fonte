{"sha": "77b67ef7120416967538afdf6eb0d54ae7c92ae8", "log": "Refactoring of warnings: split the traversing logic from the printing logic  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401837", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/internal/debugging/FindingsListener.java\n+package org.mockito.internal.debugging;\n+\n+import org.mockito.internal.invocation.Invocation;\n+import org.mockito.internal.invocation.InvocationMatcher;\n+\n+public interface FindingsListener {\n+    void foundStubCalledWithDifferentArgs(Invocation unused, InvocationMatcher unstubbed);\n+\n+    void foundUnusedStub(Invocation unused);\n+\n+    void foundUstubbed(InvocationMatcher unstubbed);\n+}\n--- /dev/null\n+++ b/src/org/mockito/internal/debugging/WarningsFinder.java\n+package org.mockito.internal.debugging;\n+\n+import org.mockito.internal.invocation.Invocation;\n+import org.mockito.internal.invocation.InvocationMatcher;\n+\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+public class WarningsFinder {\n+    private List<Invocation> unusedStubs;\n+    private List<InvocationMatcher> allInvocations;\n+\n+    public WarningsFinder(List<Invocation> unusedStubs, List<InvocationMatcher> allInvocations) {\n+        this.unusedStubs = new LinkedList(unusedStubs);\n+        this.allInvocations = new LinkedList(allInvocations);\n+    }\n+\n+    public void find(FindingsListener findingsListener) {\n+        Iterator<Invocation> unusedIterator = unusedStubs.iterator();\n+        while(unusedIterator.hasNext()) {\n+            Invocation unused = unusedIterator.next();\n+            Iterator<InvocationMatcher> unstubbedIterator = allInvocations.iterator();\n+            while(unstubbedIterator.hasNext()) {\n+                InvocationMatcher unstubbed = unstubbedIterator.next();\n+                if(unstubbed.hasSimilarMethod(unused)) {\n+                    findingsListener.foundStubCalledWithDifferentArgs(unused, unstubbed);\n+                    unusedIterator.remove();\n+                    unstubbedIterator.remove();\n+                }\n+            }\n+        }\n+\n+        for (Invocation i : unusedStubs) {\n+            findingsListener.foundUnusedStub(i);\n+        }\n+\n+        for (InvocationMatcher i : allInvocations) {\n+            findingsListener.foundUstubbed(i);\n+        }\n+    }\n+}\n--- a/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n+++ b/src/org/mockito/internal/debugging/WarningsPrinterImpl.java\n public class WarningsPrinterImpl {\n \n     private final List<Invocation> unusedStubs;\n-    private final List<InvocationMatcher> unstubbedInvocations;\n+    private List<InvocationMatcher> allInvocations;\n     private final boolean warnAboutUnstubbed;\n \n     public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> unstubbedInvocations) {\n         this(unusedStubs, unstubbedInvocations, false);\n     }\n \n-    public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> unstubbedInvocations, boolean warnAboutUnstubbed) {\n+    public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> allInvocations, boolean warnAboutUnstubbed) {\n+        this.allInvocations = allInvocations;\n+        this.unusedStubs = unusedStubs;\n         this.warnAboutUnstubbed = warnAboutUnstubbed;\n-        this.unusedStubs = new LinkedList<Invocation>(unusedStubs);\n-        this.unstubbedInvocations = new LinkedList<InvocationMatcher>(unstubbedInvocations);\n     }\n     \n-    public void print(MockitoLogger logger) {\n-        Iterator<Invocation> unusedIterator = unusedStubs.iterator();\n-        while(unusedIterator.hasNext()) {\n-            Invocation unused = unusedIterator.next();\n-            Iterator<InvocationMatcher> unstubbedIterator = unstubbedInvocations.iterator();\n-            while(unstubbedIterator.hasNext()) {\n-                InvocationMatcher unstubbed = unstubbedIterator.next();\n-                if(unstubbed.hasSimilarMethod(unused)) { \n-                    logger.log(stubbedMethodCalledWithDifferentArguments(unused, unstubbed));\n-                    unusedIterator.remove();\n-                    unstubbedIterator.remove();\n-                } \n+    public void print(final MockitoLogger logger) {\n+        WarningsFinder finder = new WarningsFinder(unusedStubs, allInvocations);\n+        finder.find(new FindingsListener() {\n+            public void foundStubCalledWithDifferentArgs(Invocation unused, InvocationMatcher unstubbed) {\n+                logger.log(stubbedMethodCalledWithDifferentArguments(unused, unstubbed));\n             }\n-        }\n-        \n-        for (Invocation i : unusedStubs) {\n-            logger.log(thisStubWasNotUsed(i));\n-        }\n \n-        if (warnAboutUnstubbed) {\n-            for (InvocationMatcher i1 : unstubbedInvocations) {\n-                logger.log(thisMethodWasNotStubbed(i1));\n+            public void foundUnusedStub(Invocation unused) {\n+                logger.log(thisStubWasNotUsed(unused));\n             }\n-        }\n+\n+            public void foundUstubbed(InvocationMatcher unstubbed) {\n+                if (warnAboutUnstubbed) {\n+                    logger.log(thisMethodWasNotStubbed(unstubbed));\n+                }\n+            }\n+        });       \n     }\n \n     private String thisStubWasNotUsed(Invocation i) {\n--- a/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n+++ b/test/org/mockitousage/junitrunner/ModellingVerboseMockitoTest.java\n \n //@RunWith(ConsoleSpammingMockitoJUnitRunner.class)\n @RunWith(VerboseMockitoJUnitRunner.class)\n-@Ignore\n+//@Ignore\n public class ModellingVerboseMockitoTest extends TestBase {\n     \n     @Mock private IMethods mock;", "timestamp": 1266178880, "metainfo": ""}