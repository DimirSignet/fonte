{"sha": "3807e159b135381a4fc095b4b7b9b153a0ea4b2d", "log": "added class for future use  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40562", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.exceptions.verification;\n+\n+\n+public class ArgumentsAreDifferentEclipseReady /*extends ComparisonFailure implements HasStackTrace*/ {\n+    \n+    //coming in next release....\n+//\n+//    private static final long serialVersionUID = 1L;\n+//    private final String message;\n+//    private StackTraceElement[] unfilteredStackTrace;\n+//\n+//    public ArgumentsAreDifferentEclipseReady(String message, Throwable cause, String wanted, String actual) {\n+//        super(message, wanted, actual);\n+//        this.message = message;\n+//        \n+//        unfilteredStackTrace = getStackTrace();\n+//        StackTraceFilter filter = new StackTraceFilter();\n+//        filter.filterStackTrace(this);\n+//        \n+//        this.initCause(cause);\n+//        CommonStackTraceRemover remover = new CommonStackTraceRemover();\n+//        remover.remove(this, Arrays.asList(cause.getStackTrace()));\n+//    }\n+//    \n+//    @Override\n+//    public String getMessage() {\n+//        return message;\n+//    }\n+//    \n+//    public StackTraceElement[] getUnfilteredStackTrace() {\n+//        return unfilteredStackTrace;\n+//    }\n+}", "timestamp": 1207693160, "metainfo": ""}