{"sha": "3ed2d5d2331e8c757a7af8dfc2c67c30f8e59eec", "log": "added missing test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40101", "commit": "\n--- a/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n  */\n package org.mockito.usage.binding;\n \n-import static org.junit.Assert.*;\n-import org.junit.*;\n-import org.mockito.Mockito;\n-import org.mockito.exceptions.VerificationError;\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.*;\n+\n+import org.junit.Test;\n+import org.mockito.Strictly;\n+import org.mockito.exceptions.VerificationError;\n \n public class IncorectBindingPuzzleFixedTest {\n \n     private BaseInteface mock;\n-\n-    private void setMock(DerivedInterface mock) {\n-        this.mock = mock;\n-    }\n \n     private class BaseMessage {}\n     \n \n     @Test\n     public void shouldUseArgumentTypeWhenOverloadingPuzzleDetected() throws Exception {\n-        DerivedInterface derivedMock = Mockito.mock(DerivedInterface.class);\n-        setMock(derivedMock);\n+        DerivedInterface derivedMock = mock(DerivedInterface.class);\n+        mock = derivedMock;\n         Message message = new Message();\n         print(message);\n         try {\n-            Mockito.verify(derivedMock).print(message);\n+            verify(derivedMock).print(message);\n             fail();\n         } catch (VerificationError error) {\n             String expected = \n             \n             assertEquals(expected, error.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByStrictly() throws Exception {\n+        DerivedInterface derivedMock = mock(DerivedInterface.class);\n+        mock = derivedMock;\n+        Message message = new Message();\n+        print(message);\n+        Strictly strictly = createStrictOrderVerifier(mock);\n+        try {\n+            strictly.verify(derivedMock).print(message);\n+            fail();\n+        } catch (VerificationError error) {\n+            String expected = \n+                \"\\n\" +\n+                \"Strict order verification failed\" +\n+                \"\\n\" +\n+                \"Wanted: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$Message)\" +\n+                \"\\n\" +\n+                \"Actual: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$BaseMessage)\";\n+            \n+            assertEquals(expected, error.getMessage());\n+        }\n     }\n }", "timestamp": 1196428949, "metainfo": ""}