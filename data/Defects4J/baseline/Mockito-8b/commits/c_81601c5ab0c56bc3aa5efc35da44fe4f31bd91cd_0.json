{"sha": "81601c5ab0c56bc3aa5efc35da44fe4f31bd91cd", "log": "Added JavaDoc explaining the details of VerificationWithTimeout", "commit": "\n--- a/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification;\n \n import org.mockito.exceptions.base.MockitoAssertionError;\n import org.mockito.internal.verification.api.VerificationData;\n import org.mockito.verification.VerificationMode;\n \n+/**\n+ * Verifies that another verification mode (the delegate) becomes true within a certain timeframe\n+ * (before timeoutMillis has passed, measured from the call to verify()).\n+ */\n public class VerificationWithTimeoutImpl {\n     \n     VerificationMode delegate;\n     int timeoutMillis;\n     int pollingPeriod;\n \n+    /**\n+     * Create this verification mode, to be used to verify invocation ongoing data later.\n+     *\n+     * @param pollingPeriod The frequency to poll delegate.verify(), to check whether the delegate has been satisfied\n+     * @param timeoutMillis The time to wait (in millis) for the delegate verification mode to be satisfied\n+     * @param delegate The verification mode to delegate overall success or failure to\n+     */\n     public VerificationWithTimeoutImpl(int pollingPeriod, int timeoutMillis, VerificationMode delegate) {\n         this.pollingPeriod = pollingPeriod;\n         this.timeoutMillis = timeoutMillis;\n         this.delegate = delegate;\n     }\n \n+    /**\n+     * Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode\n+     * before the timeout has passed.\n+     *\n+     * In practice, this polls the delegate verification mode, and returns successfully as soon as\n+     * the delegate is satisfied. If the delegate is not satisfied before the timeout has passed, the last\n+     * error returned by the delegate verification mode will be thrown here in turn.\n+     *\n+     * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout\n+     */\n     public void verify(VerificationData data) {\n-        MockitoAssertionError error = null;\n-        \n+        MockitoAssertionError error = null;\n+        \n         long startTime = System.currentTimeMillis();\n         while (System.currentTimeMillis() - startTime <= timeoutMillis) {\n             try {", "timestamp": 1381073267, "metainfo": ""}