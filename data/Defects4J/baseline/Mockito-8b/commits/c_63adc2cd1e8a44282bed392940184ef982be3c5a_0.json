{"sha": "63adc2cd1e8a44282bed392940184ef982be3c5a", "log": "In order to keep track on compiler warnings fixed loads of warnings + removed some dead code (in order to not to have dead code...)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401560", "commit": "\n--- a/src/org/mockito/internal/configuration/GlobalConfiguration.java\n+++ b/src/org/mockito/internal/configuration/GlobalConfiguration.java\n         }\n     }\n     \n-    @SuppressWarnings(\"deprecation\")\n     private IMockitoConfiguration createConfig() {\n         IMockitoConfiguration defaultConfiguration = new DefaultMockitoConfiguration();\n         IMockitoConfiguration config = new ClassPathLoader().loadConfiguration();\n--- a/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n+++ b/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n import org.mockito.cglib.proxy.MethodProxy;\n import org.mockito.internal.creation.cglib.CGLIBHacker;\n \n-@SuppressWarnings(\"unchecked\")\n public class MethodInterceptorFilter<T extends MethodInterceptor> implements MethodInterceptor {\n     \n     private final Method equalsMethod;\n--- a/src/org/mockito/internal/reporting/PrintSettings.java\n+++ b/src/org/mockito/internal/reporting/PrintSettings.java\n import java.util.LinkedList;\n import java.util.List;\n \n-@SuppressWarnings(\"unchecked\")\n public class PrintSettings {\n \n     private boolean multiline;\n--- a/src/org/mockito/internal/reporting/SmartPrinter.java\n+++ b/src/org/mockito/internal/reporting/SmartPrinter.java\n  * <p>\n  * Makes arguments printed with types if necessary\n  */\n-@SuppressWarnings(\"unchecked\")\n public class SmartPrinter {\n \n     private final String wanted;\n--- a/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java\n import org.mockito.internal.reporting.SmartPrinter;\n import org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool;\n \n-@SuppressWarnings(\"unchecked\")\n public class MissingInvocationChecker {\n     \n     private final Reporter reporter;\n--- a/src/org/mockito/runners/MockitoJUnit44Runner.java\n+++ b/src/org/mockito/runners/MockitoJUnit44Runner.java\n  * \n  * </pre>\n  */\n-@SuppressWarnings(\"deprecation\")\n @Deprecated\n public class MockitoJUnit44Runner extends MockitoJUnitRunner {\n \n--- a/test/org/mockito/internal/creation/MockSettingsImplTest.java\n+++ b/test/org/mockito/internal/creation/MockSettingsImplTest.java\n import org.mockito.exceptions.base.MockitoException;\n import org.mockitoutil.TestBase;\n \n-@SuppressWarnings(\"unchecked\")\n public class MockSettingsImplTest extends TestBase {\n \n     private MockSettingsImpl mockSettingsImpl = new MockSettingsImpl();\n--- a/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n+++ b/test/org/mockito/internal/util/reflection/LenientCopyToolTest.java\n import java.util.LinkedList;\n \n import org.junit.Test;\n-import org.mockito.internal.util.reflection.FieldCopier;\n-import org.mockito.internal.util.reflection.LenientCopyTool;\n import org.mockitoutil.TestBase;\n \n @SuppressWarnings(\"unchecked\")\n--- a/test/org/mockito/internal/verification/SmartPrinterTest.java\n+++ b/test/org/mockito/internal/verification/SmartPrinterTest.java\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n-@SuppressWarnings(\"unchecked\")\n public class SmartPrinterTest extends TestBase {\n \n     private PrintingFriendlyInvocation multi;\n--- a/test/org/mockitousage/customization/BDDMockitoTest.java\n+++ b/test/org/mockitousage/customization/BDDMockitoTest.java\n     }\n \n     @Test\n-    @SuppressWarnings(\"unchecked\")\n     public void shouldStubByDelegatingToRealMethod() throws Exception {\n         //given\n         Dog dog = mock(Dog.class);\n     }\n     \n     @Test\n-    @SuppressWarnings(\"unchecked\")\n     public void shouldStubByDelegatingToRealMethodUsingTypicalStubbingSyntax() throws Exception {\n         //given\n         Dog dog = mock(Dog.class);\n--- a/test/org/mockitousage/matchers/ArgumentMatchingWithFancyAssertionsTest.java\n+++ b/test/org/mockitousage/matchers/ArgumentMatchingWithFancyAssertionsTest.java\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n-@SuppressWarnings(\"unchecked\")\n public class ArgumentMatchingWithFancyAssertionsTest extends TestBase {\n \n     class Person {\n--- a/test/org/mockitousage/matchers/CustomMatcherDoesYieldCCETest.java\n+++ b/test/org/mockitousage/matchers/CustomMatcherDoesYieldCCETest.java\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n-@SuppressWarnings(\"unchecked\")\n public class CustomMatcherDoesYieldCCETest extends TestBase {\n \n     @Mock private IMethods mock;", "timestamp": 1247142525, "metainfo": ""}