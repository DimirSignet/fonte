{"sha": "c4a34b95bb974eb5fef5bf2b00fc86ea45d9cb8d", "log": "fixed javadoc  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40385", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n      * <pre>\n      *   stub(mock.someMethod()).toReturn(10);\n      *   \n+     *   //you can use flexible argument matchers, e.g:\n+     *   stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);\n+     *   \n+     *   //setting exception to be thrown:\n      *   stub(mock.someMethod(\"some arg\")).toThrow(new RuntimeException());\n      * </pre>\n      *\n      *   verify(mock, times(5)).someMethod(\"should be called five times\");\n      *   \n      *   verify(mock, atLeastOnce()).someMethod(\"should be called at least once\");\n+     *   \n+     *   //you can use flexible argument matchers, e.g:\n+     *   verify(mock, atLeastOnce()).someMethod(<b>anyString()</b>);\n      * </pre>\n      * \n      * <b>times(1) is the default</b> and can be omitted\n--- a/src/org/mockito/internal/progress/OngoingStubbing.java\n+++ b/src/org/mockito/internal/progress/OngoingStubbing.java\n  * <pre>\n  * stub(mock.someMethod()).toReturn(10);\n  * \n+ * //you can use flexible argument matchers, e.g:\n+ * stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);\n+ * \n+ * //setting exception to be thrown:\n  * stub(mock.someMethod(\"some arg\")).toThrow(new RuntimeException());\n  * </pre>\n  * ", "timestamp": 1203366859, "metainfo": ""}