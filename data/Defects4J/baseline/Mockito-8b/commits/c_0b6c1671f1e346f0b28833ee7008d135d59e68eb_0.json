{"sha": "0b6c1671f1e346f0b28833ee7008d135d59e68eb", "log": "Fixed Issue 225. Pulled from Lucas Cavalcanti's clone. Thanks! SmartNull now prints args when throws exception", "commit": "\n--- a/test/org/mockitousage/stubbing/SmartNullsStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/SmartNullsStubbingTest.java\n         Bar getSomeInterface() {\n             return null;\n         }\n-        \n+\n+        Bar getBarWithParams(int x, String y) {\n+            return null;\n+        }\n+\n         void boo() {}\n     }\n-    \n+\n     @Test\n     public void shouldThrowSmartNPEWhenMethodReturnsClass() throws Exception {\n         Foo mock = mock(Foo.class, RETURNS_SMART_NULLS);\n-        Foo foo = mock.getSomeClass(); \n+        Foo foo = mock.getSomeClass();\n         try {\n             foo.boo();\n             fail();\n         } catch (SmartNullPointerException e) {}\n     }\n-    \n+\n     @Test\n     public void shouldThrowSmartNPEWhenMethodReturnsInterface() throws Exception {\n         Foo mock = mock(Foo.class, RETURNS_SMART_NULLS);\n-        Bar bar = mock.getSomeInterface(); \n+        Bar bar = mock.getSomeInterface();\n         try {\n             bar.boo();\n             fail();\n         } catch (SmartNullPointerException e) {}\n     }\n-    \n-    \n+\n+\n     @Test\n     public void shouldReturnOrdinaryEmptyValuesForOrdinaryTypes() throws Exception {\n         IMethods mock = mock(IMethods.class, RETURNS_SMART_NULLS);\n-        \n+\n         assertEquals(\"\", mock.stringReturningMethod());\n         assertEquals(0, mock.intReturningMethod());\n         assertEquals(true, mock.listReturningMethod().isEmpty());\n         assertEquals(0, mock.arrayReturningMethod().length);\n     }\n-    \n+\n     @Test\n     public void shouldNotThrowSmartNullPointerOnToString() {\n         Object smartNull = mock.objectReturningMethod();\n         Object smartNull = mock.objectReturningMethod();\n         smartNull.toString();\n     }\n+\n+    @Test\n+    public void shouldShowParameters() {\n+        Foo foo = mock(Foo.class, RETURNS_SMART_NULLS);\n+        Bar smartNull = foo.getBarWithParams(10, \"yes sir\");\n+\n+        try {\n+            //TODO: make sure the message is clear\n+            smartNull.boo();\n+            fail();\n+        } catch (Exception e) {\n+            assertContains(\"yes sir\", e.getMessage());\n+        }\n+    }\n }", "timestamp": 1289131589, "metainfo": ""}