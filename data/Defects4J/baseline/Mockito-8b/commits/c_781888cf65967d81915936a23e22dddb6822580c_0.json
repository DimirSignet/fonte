{"sha": "781888cf65967d81915936a23e22dddb6822580c", "log": "Removing duplicated code in refEq.  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401362", "commit": "\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n      */\n     public static <T> T eq(T value) {\n         return reportMatcher(new Equals(value)).<T>returnNull();\n-    }\n-\n-    /**\n-     * Object argument that is reflection-equal to the given value.\n-     * <p>\n-     * This matcher can be used when equals() is not implemented on compared objects.\n-     * Matcher uses java reflection API to compare fields of wanted and actual object.\n-     * <p>\n-     * Works similarly to EqualsBuilder.reflectionEquals(this, other) from apache commons library.\n-     * <p>\n-     * See examples in javadoc for {@link Matchers} class\n-     * \n-     * @param value\n-     *            the given value.\n-     * @return <code>null</code>.\n-     */\n-    public static <T> T refEq(T value) {\n-        return reportMatcher(new ReflectionEquals(value)).<T>returnNull();\n-    }\n+    }  \n \n     /**\n      * Object argument that is reflection-equal to the given value with support for excluding\n--- a/src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java\n+++ b/src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java\n public class ReflectionEquals extends ArgumentMatcher<Object>{\n     private final Object wanted;\n \tprivate final String[] excludeFields;\n-    \n-    public ReflectionEquals(Object wanted) {\n-        this.wanted = wanted;\n-\t\tthis.excludeFields = null;\t\t\n-    }\n \n     public ReflectionEquals(Object wanted, String... excludeFields) {\n         this.wanted = wanted;", "timestamp": 1240472146, "metainfo": ""}