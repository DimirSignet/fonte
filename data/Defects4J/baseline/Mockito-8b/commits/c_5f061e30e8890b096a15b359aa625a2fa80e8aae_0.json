{"sha": "5f061e30e8890b096a15b359aa625a2fa80e8aae", "log": "Tidy up: renamed a test, added javadoc, removed @Ignored test", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/ParentClassNotPublicTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.bugs;\n+\n+import org.fest.assertions.Assertions;\n+import org.junit.Test;\n+import org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue;\n+import org.mockito.exceptions.misusing.InvalidUseOfMatchersException;\n+import org.mockito.exceptions.misusing.MissingMethodInvocationException;\n+import org.mockito.exceptions.misusing.UnfinishedVerificationException;\n+import org.mockito.internal.exceptions.MockitoLimitations;\n+import org.mockitoutil.TestBase;\n+\n+import java.util.List;\n+\n+import static org.mockito.Matchers.anyObject;\n+import static org.mockito.Mockito.*;\n+\n+/**\n+ * See bug 212\n+ *\n+ * Mocking methods that are declared on a non-public parent is not supported.\n+ * We cannot really fail fast during mock creation because one might mock a method that is not declared on a parent - this would be valid.\n+ */\n+public class ParentClassNotPublicTest extends TestBase {\n+    \n+    class SuperClass {\n+        public boolean isValid() {\n+          return false;\n+        }\n+        public int arg(Object o) { return 0; }\n+      }\n+    \n+    public class ClassForMocking extends SuperClass {\n+    }\n+\n+    @Test\n+    public void hints_that_parent_not_public_during_stubbing() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        try {\n+            when(clazzMock.isValid()).thenReturn(true);\n+            fail();\n+        } catch (MissingMethodInvocationException e) {\n+            Assertions.assertThat(e.getMessage())\n+                    .contains(MockitoLimitations.NON_PUBLIC_PARENT);\n+        }\n+    }\n+\n+    @Test\n+    public void hints_that_parent_not_public_during_stubbing_start() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        mock(List.class).clear();\n+        try {\n+            //Mockito thinks that we're stubbing void 'clear' method here and reports that boolean value cannot stub void method\n+            when(clazzMock.isValid()).thenReturn(true);\n+            fail();\n+        } catch (CannotStubVoidMethodWithReturnValue e) {\n+            Assertions.assertThat(e.getMessage())\n+                    .contains(MockitoLimitations.NON_PUBLIC_PARENT);\n+        }\n+    }\n+\n+    @Test\n+    public void hints_that_parent_not_public_during_verify() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        verify(clazzMock).isValid();\n+        try {\n+            //Since Mockito did not see 'isValid()' method, we will report unfinished verification\n+            verify(clazzMock);\n+            fail();\n+        } catch (UnfinishedVerificationException e) {\n+            Assertions.assertThat(e.getMessage())\n+                    .contains(MockitoLimitations.NON_PUBLIC_PARENT);\n+        }\n+    }\n+\n+    @Test\n+    public void hints_that_parent_not_public_when_misplaced_matchers_detected() throws Exception {\n+        ClassForMocking clazzMock = mock(ClassForMocking.class);\n+        try {\n+            //Mockito does not see 'arg()' method so the anyObject() matcher is reported as misplaced\n+            when(clazzMock.arg(anyObject())).thenReturn(0);\n+            fail();\n+        } catch (InvalidUseOfMatchersException e) {\n+            Assertions.assertThat(e.getMessage())\n+                    .contains(MockitoLimitations.NON_PUBLIC_PARENT);\n+        }\n+    }\n+}", "timestamp": 1411928036, "metainfo": ""}