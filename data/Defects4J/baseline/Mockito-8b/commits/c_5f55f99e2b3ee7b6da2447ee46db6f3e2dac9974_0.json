{"sha": "5f55f99e2b3ee7b6da2447ee46db6f3e2dac9974", "log": "Added one more test scenario", "commit": "\n--- a/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n+++ b/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n import java.lang.reflect.Field;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertSame;\n \n @RunWith(MockitoJUnitRunner.class)\n \n     @InjectMocks private Service illegalInjectionExample = new Service();\n     @InjectMocks private ServiceWithReversedOrder reversedOrderService = new ServiceWithReversedOrder();\n+    @InjectMocks private WithNullObjectField withNullObjectField = new WithNullObjectField();\n \n     @Test\n     public void just_for_information_fields_are_read_in_declaration_order_see_Service() {\n         assertSame(mockedBean, reversedOrderService.mockShouldGoInHere);\n     }\n \n+    @Test\n+    public void should_not_inject_the_object() {\n+        assertNull(withNullObjectField.keepMeNull);\n+        assertSame(mockedBean, withNullObjectField.injectMePlease);\n+    }\n+\n     public static class Bean {}\n+\n     public static class Service {\n-\n         public final Object mockShouldNotGoInHere = REFERENCE;\n-\n         public Bean mockShouldGoInHere;\n-\n     }\n \n     public static class ServiceWithReversedOrder {\n-\n         public Bean mockShouldGoInHere;\n-\n         public final Object mockShouldNotGoInHere = REFERENCE;\n-\n     }\n \n-\n-}\n+    class WithNullObjectField{\n+        Bean injectMePlease;\n+        Object keepMeNull = null;\n+    }\n+}", "timestamp": 1292968933, "metainfo": ""}