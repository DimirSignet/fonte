{"sha": "389a09b79caf0e2b98553c5efd0fca9c9c25bbca", "log": "fixed documentation  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40248", "commit": "\n--- a/src/org/mockito/AdditionalMatchers.java\n+++ b/src/org/mockito/AdditionalMatchers.java\n import org.mockito.internal.progress.LastArguments;\n \n /**\n- * Very rarely used matchers are kept here\n+ * See {@link Matchers} for general info about matchers.\n  * <p>\n- * Read more about matchers: http://code.google.com/p/mockito/matchers\n+ * AdditionalMatchers provides rarely used matchers, kept only for somewhat compatibility with EasyMock. \n+ * Use additional matchers very judiciously because they impact readability of a test.\n+ * It is recommended to use matchers only from {@link Matchers} and keep stubbing and verification simple.\n+ * <p>\n+ * Example of using logical and(), not(), or() matchers: \n+ *  \n+ * <pre>\n+ *   //anything but not \"ejb\"\n+ *   mock.someMethod(not(eq(\"ejb\")));\n+ *   \n+ *   //not \"ejb\" and not \"michael jackson\"\n+ *   mock.someMethod(and(not(eq(\"ejb\")), not(eq(\"michael jackson\"))));\n+ *   \n+ *   //1 or 10\n+ *   mock.someMethod(or(eq(1), eq(10)));\n+ * </pre>\n  */\n public class AdditionalMatchers {\n \n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n import org.mockito.internal.progress.LastArguments;\n \n /**\n- * Argument matchers\n+ * Allow less constrained verification or stubbing. See also {@link AdditionalMatchers}.\n+ * <pre>\n+ *  //stubbing using anyInt() argument matcher\n+ *  stub(mockedList.get(anyInt())).toReturn(\"element\");\n+ *  \n+ *  //following prints \"element\"\n+ *  System.out.println(mockedList.get(999));\n+ *  \n+ *  //you can also verify using argument matcher\n+ *  verify(mockedList).get(anyInt());\n+ * </pre>\n+ * <b>Warning:</b>\n  * <p>\n- * TODO where is that documentation?\n- * Read more about matchers: http://code.google.com/p/mockito/matchers\n+ * When multiple arguments used, all arguments have to be provided by matchers, e.g:\n+ * <pre>\n+ *   verify(mock).someMethod(anyInt(), anyString(), <b>eq(\"third argument\")</b>);\n+ *   //above is correct - eq() is also an argument matcher (see {@link Matchers#eq(Object)})\n+ *   \n+ *   verify(mock).someMethod(anyInt(), anyString(), <b>\"third argument\"</b>);\n+ *   //above is incorrect - exception will be thrown because third argument is given without argument matcher.\n+ * </pre>\n  */\n public class Matchers {\n \n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * </pre>\n  * \n  * <p>\n- * Argument matchers allow less constrained verification or stubbing. Link to argument matchers documentation needed.\n+ * Argument matchers allow less constrained verification or stubbing. See all {@link Matchers}.\n+ * <p>\n+ * <b>Warning:</b>\n+ * <p>\n+ * When multiple arguments used, all arguments have to be provided by matchers, e.g:\n+ * <pre>\n+ *   verify(mock).someMethod(anyInt(), anyString(), <b>eq(\"third argument\")</b>);\n+ *   //above is correct - eq() is also an argument matcher (see {@link Matchers#eq(Object)})\n+ *   \n+ *   verify(mock).someMethod(anyInt(), anyString(), <b>\"third argument\"</b>);\n+ *   //above is incorrect - exception will be thrown because third argument is given without argument matcher.\n+ * </pre>\n  * \n  * <h3>Exact number of invocations verification</h3>\n  *\n--- a/src/org/mockito/exceptions/misusing/InvalidUseOfMatchersException.java\n+++ b/src/org/mockito/exceptions/misusing/InvalidUseOfMatchersException.java\n         super(  \"\\n\" +\n                 message +\n                 \"\\n\" +\n-                \"Read more: http://code.google.com/p/mockito/matchers\");\n+                \"See javadoc for Matchers class\");\n     }\n }\n--- a/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n+++ b/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n                     \"\\n\" +\n                     \"No matchers found for Not(?).\" +\n                     \"\\n\" +\n-                    \"Read more: http://code.google.com/p/mockito/matchers\"\n+                    \"See javadoc for Matchers class\"\n                     , e.getMessage());\n         }\n \n                     \"\\n\" +\n                     \"2 matchers expected, 1 recorded.\" +\n                     \"\\n\" +\n-                    \"Read more: http://code.google.com/p/mockito/matchers\"\n+                    \"See javadoc for Matchers class\"\n                     , e.getMessage());\n         }\n \n                     \"\\n\" +\n                     \"3 matchers expected, 1 recorded.\" +\n                     \"\\n\" +\n-                    \"Read more: http://code.google.com/p/mockito/matchers\"\n+                    \"See javadoc for Matchers class\"\n                     , e.getMessage());\n         }\n     }", "timestamp": 1198965868, "metainfo": ""}