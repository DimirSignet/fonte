{"sha": "5ed348f241caf600ab37e6dbdb96b770a16120f9", "log": "Added yet another test case for issue 101  --HG-- rename : test/org/mockitousage/bugs/CovariantOverrideTest.java => test/org/mockitousage/bugs/BridgeMethodsHitAgainTest.java", "commit": "\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/BridgeMethodsHitAgainTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.bugs;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockitoutil.TestBase;\n+\n+import static org.mockito.Mockito.*;\n+\n+//see issue 101\n+public class BridgeMethodsHitAgainTest extends TestBase {\n+   \n+  public interface Factory {}\n+  public interface ExtendedFactory extends Factory {}\n+\n+  public interface SomeInterface {\n+    Factory factory();\n+  }\n+\n+  public interface SomeSubInterface extends SomeInterface {\n+    ExtendedFactory factory();\n+  }\n+\n+  @Mock SomeSubInterface someSubInterface;\n+  @Mock ExtendedFactory extendedFactory;\n+\n+  @Test\n+  public void basicCheck() {\n+    Mockito.when((someSubInterface).factory()).thenReturn(extendedFactory);\n+    SomeInterface si = someSubInterface;\n+    assertTrue(si.factory() != null);\n+  }\n+\n+  @Test\n+  public void checkWithExtraCast() {\n+    Mockito.when(((SomeInterface) someSubInterface).factory()).thenReturn(extendedFactory);\n+    SomeInterface si = someSubInterface;\n+    assertTrue(si.factory() != null);\n+  }\n+}", "timestamp": 1294600113, "metainfo": ""}