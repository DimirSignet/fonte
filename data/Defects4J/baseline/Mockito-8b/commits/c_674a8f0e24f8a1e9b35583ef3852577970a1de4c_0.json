{"sha": "674a8f0e24f8a1e9b35583ef3852577970a1de4c", "log": "fixed issue 47 Better exception message when mocking fails  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401158", "commit": "\n--- a/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n+++ b/src/org/mockito/internal/creation/jmock/ClassImposterizer.java\n import net.sf.cglib.proxy.MethodInterceptor;\n import net.sf.cglib.proxy.NoOp;\n \n+import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.creation.cglib.MockitoNamingPolicy;\n import org.objenesis.ObjenesisStd;\n \n         try {\n             return enhancer.createClass(); \n         } catch (CodeGenerationException e) {\n-            throw new IllegalArgumentException(\"could not imposterise \" + mockedType, e);\n+            if (Modifier.isPrivate(mockedType.getModifiers())) {\n+                throw new MockitoException(\"\\n\"\n+                        + \"Mockito cannot mock this type: \" + mockedType \n+                        + \".\\n\"\n+                        + \"Most likely it is a private class that is not visible by Mockito\");\n+            }\n+            throw new MockitoException(\"\\n\"\n+                    + \"Mockito cannot mock this type: \" + mockedType \n+                    + \".\\n\" \n+                    + \"Mockito can only mock visible & non-final types\");\n         }\n     }\n     \n--- a/test/org/mockitousage/SpyingOnRealObjectsTest.java\n+++ b/test/org/mockitousage/SpyingOnRealObjectsTest.java\n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n+import java.util.Arrays;\n import java.util.LinkedList;\n import java.util.List;\n \n             assertThat(e.getMessage(), contains(\"cannot mock\"));\n         }\n     }\n+    \n+    @Test\n+    public void shouldSayNiceMessageWhenSpyingOnPrivateClass() throws Exception {\n+        List real = Arrays.asList(new String[] {\"first\", \"second\"});\n+        try {\n+            spy(real);\n+            fail();\n+        } catch (MockitoException e) {\n+            assertThat(e, messageContains(\"Most likely it is a private class that is not visible by Mockito\"));\n+        }\n+    }\n }", "timestamp": 1231606425, "metainfo": ""}