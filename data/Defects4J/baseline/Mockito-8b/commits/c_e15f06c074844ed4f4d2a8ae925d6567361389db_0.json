{"sha": "e15f06c074844ed4f4d2a8ae925d6567361389db", "log": "Fixed a bug with stubVoid() and a spy  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40689", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n     public static <T> VoidMethodStubbable<T> stubVoid(T mock) {\n         MockHandler<T> handler = MockUtil.getMockHandler(mock);\n         MOCKING_PROGRESS.stubbingStarted();\n-        return handler.voidMethodStubbable();\n+        return handler.voidMethodStubbable(mock);\n     }\n     \n     public static Stubber doReturn(Object toBeReturned) {\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n         verifyingRecorder.verify(VerificationModeImpl.noMoreInteractions());\n     }\n \n-    public VoidMethodStubbable<T> voidMethodStubbable() {\n-        return new VoidMethodStubbableImpl();\n+    public VoidMethodStubbable<T> voidMethodStubbable(T mock) {\n+        return new VoidMethodStubbableImpl(mock);\n     }\n \n     public void setInstance(T instance) {\n     }\n \n     private final class VoidMethodStubbableImpl implements VoidMethodStubbable<T> {\n+        private final T mock;\n+\n+        public VoidMethodStubbableImpl(T mock) {\n+            this.mock = mock;\n+        }\n+\n         public VoidMethodStubbable<T> toThrow(Throwable throwable) {\n             mockitoStubber.addAnswerForVoidMethod(new ThrowsException(throwable));\n             return this;\n         }\n \n         public T on() {\n-            return instance;\n+            return mock;\n         }\n     }\n \n--- a/test/org/mockitousage/MockingRealObjectsTest.java\n+++ b/test/org/mockitousage/MockingRealObjectsTest.java\n import java.util.LinkedList;\n import java.util.List;\n \n-import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.Mockito;\n import org.mockitoutil.TestBase;\n         assertEquals(1, spy.size());\n     }\n     \n-    @Ignore(\"needs fixing - the real clear() method is called :)\")\n     @Test\n     public void shouldStubVoid() {\n-        spy.add(\"one\");\n         stubVoid(spy)\n             .toReturn()\n             .toThrow(new RuntimeException())", "timestamp": 1216301914, "metainfo": ""}