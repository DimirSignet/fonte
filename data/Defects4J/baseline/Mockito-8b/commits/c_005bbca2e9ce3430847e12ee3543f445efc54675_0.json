{"sha": "005bbca2e9ce3430847e12ee3543f445efc54675", "log": "added new interesting reporting issues  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4049", "commit": "\n--- a/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java\n package org.mockito.usage.binding;\n \n+import static org.junit.Assert.*;\n import org.junit.*;\n import org.mockito.Mockito;\n+import org.mockito.exceptions.VerificationAssertionError;\n \n public class IncorectBindingPuzzleFixedTest {\n \n         this.mock = mock;\n     }\n \n-    private class BaseMessage {}\n-    private class Message extends BaseMessage {}\n+    private class BaseMessage { \n+        public String toString() {\n+            return \"BaseMessage\";\n+        }\n+    }\n+    \n+    private class Message extends BaseMessage {\n+        public String toString() {\n+            return \"Message\";\n+        }\n+    }\n \n     private interface BaseInteface {\n         public void print(BaseMessage message);\n         setMock(derivedMock);\n         Message message = new Message();\n         print(message);\n-        Mockito.verify(derivedMock).print(message);\n+        try {\n+            Mockito.verify(derivedMock).print(message);\n+        } catch (VerificationAssertionError error) {\n+            String expected = \"\\n\" +\n+            \t\t\"Not invoked: DerivedInterface.print(Message)\" +\n+            \t\t\"But found: DerivedInterface.print(BaseMessage)\";\n+            assertEquals(expected, error.getMessage());\n+        }\n     }\n-\n+    \n+    @Ignore\n     @Test\n-    public void overriddenInterfaceMethodWorking() throws Exception {\n+    public void shouldReportNoMoreInteractionsProperly() throws Exception {\n         DerivedInterface derivedMock = Mockito.mock(DerivedInterface.class);\n         setMock(derivedMock);\n-        BaseMessage message = new Message();\n+        Message message = new Message();\n         print(message);\n-        Mockito.verify(derivedMock).print(message);\n+        try {\n+            Mockito.verifyNoMoreInteractions(derivedMock);\n+        } catch (VerificationAssertionError error) {\n+            String expected = \"\\n\" +\n+            \t\t\"No more interactions expected on DerivedInterface but found: DerivedInterface.print(BaseMessage)\";\n+            assertEquals(expected, error.getMessage());\n+        }\n     }\n-\n }", "timestamp": 1195772230, "metainfo": ""}