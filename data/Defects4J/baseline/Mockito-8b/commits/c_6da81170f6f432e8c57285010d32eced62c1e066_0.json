{"sha": "6da81170f6f432e8c57285010d32eced62c1e066", "log": "fixed javadocs  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40840", "commit": "\n--- a/src/org/mockito/MockitoAnnotations.java\n+++ b/src/org/mockito/MockitoAnnotations.java\n public class MockitoAnnotations {\n \n     /**\n-     * TODO fix the message\n-     * <b>Deprecated</b> Use {@link Mock} annotation instead\n+     * <b>Deprecated</b> \n+     * Use top-level {@link org.mockito.Mock} annotation instead\n      * <p>\n-     * Annotation is now a top-level class so that IDEs are not confused.\n+     * When &#064;Mock annotation was implemented as an inner class then users experienced problems with autocomplete features in IDEs. \n+     * Hence &#064;Mock was made a top-level class.  \n      * <p>\n-     * Allows shorthand mock creation, see examples in javadoc for {@link MockitoAnnotations} class.\n+     * How to fix deprecation warnings? \n+     * Typically, you can just <b>search:</b> import org.mockito.MockitoAnnotations.Mock; <b>and replace with:</b> import org.mockito.Mock;\n      * <p>\n-     * To fix deprecation warnings just search & replace:\n-     * Search:\n-     *  import org.mockito.MockitoAnnotations.Mock;\n-     * <p>\n-     *  with:\n-     * <p>\n-     *  import org.mockito.Mock;\n+     * Sorry for making your code littered with deprecation warnings but this change was required to make Mockito better. Hope you still love your little spying framework...\n      * \n-     * @deprecated Use {@link Mock} annotation instead\n-     * \n+     * @deprecated Use {@link org.mockito.Mock} annotation instead\n      */\n     @Target( { FIELD })\n     @Retention(RetentionPolicy.RUNTIME)", "timestamp": 1220008272, "metainfo": ""}