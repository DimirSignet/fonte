{"sha": "2ce67f838b8774867249d803d5b6cc28e07972a7", "log": "tweak javadoc", "commit": "\n--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\n     /**\n      * Creates a mock using the Generics Metadata.\n      *\n+     * <li>Finally as we want to mock the actual type, but we want to pass along the contextual generics meta-data\n+     * that was resolved for the current return type, for this to happen we associate to the mock an new instance of\n+     * {@link ReturnsDeepStubs} answer in which we will store the returned type generic metadata.\n+     *\n      * @param returnTypeGenericMetadata The metadata to use to create the new mock.\n      * @return The mock\n      */\n--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java\n import org.mockito.Incubating;\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.util.Checks;\n-import org.mockito.stubbing.Answer;\n \n import java.lang.reflect.*;\n import java.util.*;\n  * <p>\n  *     Hence :\n  *     <ul>\n- *         <li>the metadata is created using the {@link #inferFrom(Type)} method from a real\n- *         Class or from a ParameterizedType, other types are not yet supported.</li>\n+ *         <li>A new instance representing the metadata is created using the {@link #inferFrom(Type)} method from a real\n+ *         <code>Class</code> or from a <code>ParameterizedType</code>, other types are not yet supported.</li>\n  *\n  *         <li>Then from this metadata, we can extract meta-data for a generic return type of a method, using\n  *         {@link #resolveGenericReturnType(Method)}.</li>\n- *\n- *         <li>Finally as we want to mock the actual type, but we want to pass along the contextual generics meta-data\n- *         we need to create the mock ourselves as we know how to create it, depending on the kind of Type (Class,\n- *         ParameterizedType, TypeVariable), the method {@link #toMock(Answer)} assumes this responsibility.</li>\n  *     </ul>\n  * </p>\n  *\n  *\n  * @see #inferFrom(Type)\n  * @see #resolveGenericReturnType(Method)\n- * @see #toMock(Answer)\n- * @see org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubs\n+ * @see org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs\n  */\n @Incubating\n public abstract class GenericMetadataSupport {", "timestamp": 1351240364, "metainfo": ""}