{"sha": "65d31f4c035b7c2fd869785412ecc7a81a9ba220", "log": "further fixes to the smart mocks  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401229", "commit": "\n--- a/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n+++ b/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n import org.mockito.ReturnValues;\n import org.mockito.exceptions.cause.BecauseThisMethodWasNotStubbed;\n import org.mockito.exceptions.verification.SmartNullPointerException;\n-import org.mockito.internal.creation.ClassNameFinder;\n import org.mockito.internal.creation.jmock.ClassImposterizer;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.invocation.InvocationOnMock;\n \n     private final ReturnValues delegate = new MoreEmptyReturnValues();\n \n-    public Object valueFor(InvocationOnMock invocation) {\n+    public Object valueFor(final InvocationOnMock invocation) {\n         Object defaultReturnValue = delegate.valueFor(invocation);\n         if (defaultReturnValue != null) {\n             return defaultReturnValue;\n                 Exception whenCreated = new BecauseThisMethodWasNotStubbed(\"\\nBecause this method was not stubbed correctly:\");\n                 public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {\n                     if (Invocation.isToString(method)) {\n-//                        return \"SmartNull for \" + ClassNameFinder.classNameForMock(obj) + \", hashCode: \" + obj.hashCode();\n-                        return \"SmartNull for \" + ClassNameFinder.classNameForMock(obj);\n+                        return \"SmartNull returned by \" + invocation.getMethod().getName() + \"() method on mock\";\n                     }\n                     throw new SmartNullPointerException(\"\\nYou have a NullPointerException here:\", whenCreated);\n                 }}, type);\n--- a/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n+++ b/test/org/mockito/internal/returnvalues/SmartNullReturnValuesTest.java\n             fail();\n         } catch (SmartNullPointerException expected) {}\n     }\n+    \n+    @Test\n+    public void shouldReturnAnObjectThatAllowsObjectMethods() throws Exception {\n+        ReturnValues returnValues = new SmartNullReturnValues();\n+        \n+        Foo smartNull = (Foo) returnValues.valueFor(invocationOf(Foo.class, \"get\"));\n+        \n+        //TODO after 1.7 add functionality of printing params\n+        assertEquals(\"SmartNull returned by get() method on mock\", smartNull + \"\");\n+//        assertEquals(false, smartNull.equals(null));\n+    }\n }", "timestamp": 1232491320, "metainfo": ""}