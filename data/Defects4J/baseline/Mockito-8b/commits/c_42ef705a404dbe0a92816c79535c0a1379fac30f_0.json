{"sha": "42ef705a404dbe0a92816c79535c0a1379fac30f", "log": "did some rename job  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40985", "commit": "\n--- a/src/org/mockito/internal/verification/AtLeast.java\n+++ b/src/org/mockito/internal/verification/AtLeast.java\n         if (wantedCount == 1) {\n             missingInvocation.check(data.getAllInvocations(), data.getWanted());\n         }\n-        numberOfInvocations.verify(data.getAllInvocations(), data.getWanted(), wantedCount);\n+        numberOfInvocations.check(data.getAllInvocations(), data.getWanted(), wantedCount);\n     }\n     \n     public void verifyInOrder(VerificationData data) {\n             missingInvocation.check(allInvocations, wanted, this);\n         }\n         \n-        numberOfCalls.verify(allInvocations, wanted, wantedCount);\n+        numberOfCalls.check(allInvocations, wanted, wantedCount);\n     }\n     \n     @Override\n--- a/src/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsChecker.java\n     private final InvocationsFinder finder = new InvocationsFinder();\n \n     //TODO check coverage\n-    public void verify(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\n+    public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\n         List<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);\n         \n         int actualCount = actualInvocations.size();\n--- a/src/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsInOrderChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsInOrderChecker.java\n     private final Reporter reporter = new Reporter();\n     private final InvocationsFinder finder = new InvocationsFinder();\n     \n-    public void verify(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\n+    public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\n         List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks(invocations, wanted);\n         \n         int actualCount = chunk.size();", "timestamp": 1223983634, "metainfo": ""}