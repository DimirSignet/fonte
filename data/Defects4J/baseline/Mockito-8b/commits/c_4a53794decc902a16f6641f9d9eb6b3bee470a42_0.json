{"sha": "4a53794decc902a16f6641f9d9eb6b3bee470a42", "log": "rename job  --HG-- rename : src/org/mockito/InOrderVerifier.java => src/org/mockito/InOrderImpl.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40966", "commit": "\n--- /dev/null\n+++ b/src/org/mockito/InOrderImpl.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import org.mockito.exceptions.Reporter;\n+import org.mockito.exceptions.base.MockitoException;\n+import org.mockito.internal.verification.InOrderVerificationModeWrapper;\n+import org.mockito.internal.verification.VerificationModeFactory;\n+import org.mockito.internal.verification.api.VerificationInOrderMode;\n+import org.mockito.internal.verification.api.VerificationMode;\n+\n+/**\n+ * Allows verifying in order. This class should not be exposed, hence default access.\n+ */\n+class InOrderImpl implements InOrder {\n+    \n+    private final Reporter reporter = new Reporter();\n+    private final List<Object> mocksToBeVerifiedInOrder = new LinkedList<Object>();\n+    \n+    public InOrderImpl(List<Object> mocksToBeVerifiedInOrder) {\n+        this.mocksToBeVerifiedInOrder.addAll(mocksToBeVerifiedInOrder);\n+    }\n+\n+    public <T> T verify(T mock) {\n+        return this.verify(mock, VerificationModeFactory.times(1));\n+    }\n+    \n+    public <T> T verify(T mock, VerificationMode mode) {\n+        if (!mocksToBeVerifiedInOrder.contains(mock)) {\n+            reporter.inOrderRequiresFamiliarMock();\n+        } else if (!(mode instanceof VerificationInOrderMode)) {\n+            throw new MockitoException(mode.getClass().getSimpleName() + \" is not implemented to work with InOrder\");\n+        }\n+        return Mockito.verify(mock, new InOrderVerificationModeWrapper((VerificationInOrderMode) mode, mocksToBeVerifiedInOrder));\n+    }\n+}\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n                 REPORTER.notAMockPassedWhenCreatingInOrder();\n             }\n         }\n-        InOrder inOrderVerifier = new InOrderVerifier(Arrays.asList(mocks));\n-        return inOrderVerifier;\n+        InOrder inOrder = new InOrderImpl(Arrays.asList(mocks));\n+        return inOrder;\n     }\n   \n     /**", "timestamp": 1223979474, "metainfo": ""}