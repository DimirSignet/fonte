{"sha": "695fe95fbad7512de5642afaa48309414ad2b0b7", "log": "refactoring verifiers - making VerificationModeImpl thinner  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40925", "commit": "\n--- a/src/org/mockito/internal/progress/VerificationModeImpl.java\n+++ b/src/org/mockito/internal/progress/VerificationModeImpl.java\n         return (explicitMode() && wantedInvocationCount > 0) || (atLeastMode() && wantedInvocationCount == 1);\n     }\n     \n-    public boolean missingMethodInOrderMode() {\n-        return inOrderMode() && missingMethodMode();\n-    }\n-    \n     public boolean exactNumberOfInvocationsMode() {\n         return !inOrderMode() && (explicitMode() || atLeastMode());\n     }\n--- a/src/org/mockito/internal/verification/MissingInvocationInOrderVerifier.java\n+++ b/src/org/mockito/internal/verification/MissingInvocationInOrderVerifier.java\n     }\n     \n     public boolean appliesTo(VerificationModeImpl mode) {\n-        return mode.missingMethodInOrderMode();\n+        return new VerificationModeDecoder(mode).missingMethodInOrderMode();\n     }\n \n     public void verify(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {\n--- /dev/null\n+++ b/src/org/mockito/internal/verification/VerificationModeDecoder.java\n+package org.mockito.internal.verification;\n+\n+import org.mockito.internal.progress.VerificationModeImpl;\n+\n+public class VerificationModeDecoder {\n+\n+    private final VerificationModeImpl mode;\n+\n+    public VerificationModeDecoder(VerificationModeImpl mode) {\n+        this.mode = mode;\n+    }\n+\n+    public boolean missingMethodInOrderMode() {\n+        return mode.inOrderMode() && mode.missingMethodMode();\n+    }\n+}\n--- a/test/org/mockito/internal/progress/VerificationModeImplTest.java\n+++ b/test/org/mockito/internal/progress/VerificationModeImplTest.java\n     @Test\n     public void inOrderAtLeastShouldBeInAtLeastMode() throws Exception {\n         assertTrue(inOrderAtLeast(5, asList(\"mock\")).atLeastMode());\n-    }\n-    \n-    @Test\n-    public void shouldKnowIfIsMissingMethodInOrderMode() throws Exception {\n-        assertTrue(inOrder(1, asList(\"mock\")).missingMethodInOrderMode());\n-        assertTrue(inOrder(10, asList(\"mock\")).missingMethodInOrderMode());\n-        \n-        assertFalse(times(10).missingMethodInOrderMode());\n-        assertFalse(noMoreInteractions().missingMethodInOrderMode());\n-        assertFalse(times(0).missingMethodInOrderMode());\n     }\n     \n     @Test\n--- /dev/null\n+++ b/test/org/mockito/internal/verification/VerificationModeDecoderTest.java\n+package org.mockito.internal.verification;\n+\n+import static java.util.Arrays.*;\n+import static org.mockito.internal.progress.VerificationModeImpl.*;\n+\n+import org.junit.Test;\n+import org.mockito.internal.progress.VerificationModeImpl;\n+import org.mockitoutil.TestBase;\n+\n+\n+public class VerificationModeDecoderTest extends TestBase {\n+    \n+    @Test\n+    public void shouldKnowIfIsMissingMethodInOrderMode() throws Exception {\n+        assertTrue(decode(inOrder(1, asList(\"mock\"))).missingMethodInOrderMode());\n+        assertTrue(decode(inOrder(10, asList(\"mock\"))).missingMethodInOrderMode());\n+        \n+        assertFalse(decode(times(10)).missingMethodInOrderMode());\n+        assertFalse(decode(noMoreInteractions()).missingMethodInOrderMode());\n+        assertFalse(decode(times(0)).missingMethodInOrderMode());\n+    }\n+\n+    private VerificationModeDecoder decode(VerificationModeImpl mode) {\n+        return new VerificationModeDecoder(mode);\n+    }\n+}", "timestamp": 1223478658, "metainfo": ""}