{"sha": "9a857ccaaa0864d87c2945059013aa6735784dde", "log": "Improved some synchronized code based on Hynek's suggestions.", "commit": "\n--- a/src/org/mockito/internal/verification/RegisteredInvocations.java\n+++ b/src/org/mockito/internal/verification/RegisteredInvocations.java\n \n package org.mockito.internal.verification;\n \n-import org.mockito.internal.invocation.InvocationImpl;\n import org.mockito.internal.util.ObjectMethodsGuru;\n import org.mockito.internal.util.collections.ListUtil;\n import org.mockito.internal.util.collections.ListUtil.Filter;\n import org.mockito.invocation.Invocation;\n \n import java.io.Serializable;\n-import java.util.Collections;\n import java.util.LinkedList;\n import java.util.List;\n \n public class RegisteredInvocations implements Serializable {\n \n     private static final long serialVersionUID = -2674402327380736290L;\n-    private final List<Invocation> invocations = Collections.synchronizedList(new LinkedList<Invocation>());\n+    private final LinkedList<Invocation> invocations = new LinkedList<Invocation>();\n \n     public void add(Invocation invocation) {\n-        invocations.add(invocation);\n+        synchronized (invocations) {\n+            invocations.add(invocation);\n+        }\n     }\n \n     public void removeLast() {\n         //TODO: add specific test for synchronization of this block (it is tested by InvocationContainerImplTest at the moment)\n         synchronized (invocations) {\n-            int last = invocations.size() - 1;\n-            invocations.remove(last);\n+            if (! invocations.isEmpty()) {\n+                invocations.removeLast();\n+            }\n         }\n     }\n \n     }\n \n     public boolean isEmpty() {\n-        return invocations.isEmpty();\n+        synchronized (invocations) {\n+            return invocations.isEmpty();\n+        }\n     }\n \n     private static class RemoveToString implements Filter<Invocation> {", "timestamp": 1347807635, "metainfo": ""}