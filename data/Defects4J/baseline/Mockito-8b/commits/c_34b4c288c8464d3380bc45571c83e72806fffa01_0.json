{"sha": "34b4c288c8464d3380bc45571c83e72806fffa01", "log": "In order to communicate potential code smell added a warning in the javadocs. Related to issue 124  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401615", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * \n  * //mock creation\n  * List mockedList = mock(List.class);\n- * \n+ *\n  * //using mock object\n  * mockedList.add(\"one\");\n  * mockedList.clear();\n- * \n+ *\n  * //verification\n  * verify(mockedList).add(\"one\");\n  * verify(mockedList).clear();\n  * false, ... for int/Integer, boolean/Boolean, ...). </li>\n  * \n  * <li> Stubbing can be overridden: for example common stubbing can go to\n- * fixture setup but the test methods can override it. </li>\n+ * fixture setup but the test methods can override it.\n+ * Please note that overridding stubbing is a potential code smell that points out too much stubbing</li>\n  * \n  * <li> Once stubbed, the method will always return stubbed value regardless\n  * of how many times it is called. </li>\n      * <p>\n      * Stubbing can be overridden: for example common stubbing can go to fixture\n      * setup but the test methods can override it.\n+     * Please note that overridding stubbing is a potential code smell that points out too much stubbing.\n      * <p>\n      * Once stubbed, the method will always return stubbed value regardless\n      * of how many times it is called.\n      * </pre>\n      * \n      * Above scenarios shows a tradeoff of Mockito's ellegant syntax. Note that the scenarios are very rare, though. \n-     * Spying should be sporadic and overriding exception-stubbing is very rare.  \n+     * Spying should be sporadic and overriding exception-stubbing is very rare. Not to mention that in general\n+     * overridding stubbing is a potential code smell that points out too much stubbing.\n      * <p>\n      * See examples in javadoc for {@link Mockito} class\n      * ", "timestamp": 1255468658, "metainfo": ""}