{"sha": "8195d5509cea18fc22474f5766081f09855a3a55", "log": "Improved an exception message", "commit": "\n--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n \t        \tClass<?> enclosing = type.getEnclosingClass();\n \t        \tif (enclosing != null) {\n \t        \t\tif (!enclosing.isInstance(testInstance)) {\n-\t        \t\t\tthrow new MockitoException(\"Cannot spy inner \" + type);\n+\t        \t\t\tthrow new MockitoException(\"Unable to initialize @Spy annotated field '\" + field.getName() + \"'.\"\n+                                + \"\\nIf you are mocking an inner class please ensure the instance of the outer class is supplied via withSettings().outerInstance()\"\n+                                + \"\\nThe outer class is: '\" + enclosing.getSimpleName() + \"'\");\n \t        \t\t}\n \t        \t\tif (Modifier.isPrivate(type.getDeclaredConstructor(enclosing).getModifiers())) {\n \t        \t\t\tthrow new MockitoException(\"Cannot spy inner \" + type + \" with private constructor\");\n--- a/test/org/mockitousage/annotation/SpyAnnotationTest.java\n+++ b/test/org/mockitousage/annotation/SpyAnnotationTest.java\n \t\t\t@Spy private Outer.Inner inner;\n \t\t}\n \t\tshouldThrow.expect(MockitoException.class);\n-\t\tshouldThrow.expectMessage(\"Cannot spy inner class \");\n+\t\tshouldThrow.expectMessage(\"outer class is supplied via withSettings().outerInstance()\");\n \t\tMockitoAnnotations.initMocks(new WithSpy());\n \t}\n ", "timestamp": 1417513677, "metainfo": ""}