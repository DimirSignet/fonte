{"sha": "5a1c7a3944fb47054ed7e0bb9052870842691e60", "log": "fixed some TODOs used InvocationBuilder instead of raw constructor  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%4087", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n         return verify(mock, 1);\n     }\n     \n-    //TODO make the interface consistent, it should be times(4) rather than int\n     public static <T> T verify(T mock, int expectedNumberOfInvocations) {\n         return verify(mock, VerifyingMode.times(expectedNumberOfInvocations));\n     }\n     \n-    //TODO should not be public\n     public static <T> T verify(T mock, VerifyingMode mode) {\n         MockUtil.validateMock(mock);\n         MockitoState.instance().verifyingStarted(mode);\n--- a/src/org/mockito/internal/MockControl.java\n+++ b/src/org/mockito/internal/MockControl.java\n         ExpectedInvocation expectedInvocation = new ExpectedInvocation(invocation, processedMatchers);\n         \n         if (verifyingMode != null) {\n-            //TODO shouldn't verify take only invocationWithMatchers.getInvocation(); ?\n             behavior.verify(expectedInvocation, verifyingMode);\n             return ToTypeMappings.emptyReturnValueFor(method.getReturnType());\n         }\n--- a/test/org/mockito/internal/InvocationBuilder.java\n+++ b/test/org/mockito/internal/InvocationBuilder.java\n     private Object[] args = new Object[] {};\n     private Object mock = \"mock\";\n \n-    //TODO replace occurences of raw creation with builder\n     public Invocation toInvocation() {\n         Method method;\n         List<Class> argTypes = new LinkedList<Class>();\n--- a/test/org/mockito/internal/MockitoBehaviorTest.java\n+++ b/test/org/mockito/internal/MockitoBehaviorTest.java\n  */\n package org.mockito.internal;\n \n-import java.lang.reflect.Method;\n+import static org.junit.Assert.assertTrue;\n+\n import java.util.*;\n-import static org.junit.Assert.*;\n-import org.junit.*;\n+\n+import org.junit.Test;\n \n @SuppressWarnings(\"unchecked\")\n public class MockitoBehaviorTest {\n \n-    private MockitoBehavior behavior;\n-    private ExpectedInvocation toLowerCaseInvocation;\n-\n-    @Before\n-    public void setup() throws Exception {\n-        Method toLowerCase = String.class.getMethod(\"toLowerCase\", new Class[] {});\n-        \n-        toLowerCaseInvocation = new ExpectedInvocation(new Invocation(\"mock\", toLowerCase , new Object[] {}, 0), Collections.EMPTY_LIST);\n-        \n-        behavior = new MockitoBehavior();\n-    }\n-    \n     @Test\n     public void shouldNotCheckForWrongNumberOfModificationsWhenVerifyingInOrder() throws Exception {\n+        ExpectedInvocation invocation = new ExpectedInvocation(new InvocationBuilder().toInvocation() , Collections.EMPTY_LIST);\n+        MockitoBehavior behavior = new MockitoBehavior();\n+        \n         VerifyingMode inOrder = VerifyingMode.inOrder(1, Arrays.asList(new Object()));\n         assertTrue(inOrder.orderOfInvocationsMatters());\n         \n-        behavior.checkForWrongNumberOfInvocations(toLowerCaseInvocation, inOrder);\n+        behavior.checkForWrongNumberOfInvocations(invocation, inOrder);\n     }\n }", "timestamp": 1196282912, "metainfo": ""}