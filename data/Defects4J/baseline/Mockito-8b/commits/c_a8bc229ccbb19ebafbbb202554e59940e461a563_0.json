{"sha": "a8bc229ccbb19ebafbbb202554e59940e461a563", "log": "removed some dead code  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40846", "commit": "\n--- a/test/org/mockitousage/stubbing/BasicStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/BasicStubbingTest.java\n \n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n-\n-import java.util.List;\n \n import org.junit.Before;\n import org.junit.Test;\n         } catch (NoInteractionsWanted e) {}\n     }\n     \n-    class Base {}\n-    class Sub extends Base {}\n-\n-    interface Generic {\n-        List<Base> getList();\n-    }\n-    \n-    @Test\n-    public void shouldAllowStubbingWithSubtypes() throws Exception {\n-        Generic mockTwo = mock(Generic.class);\n-        \n-        List<Sub> subs = null;\n-        //can I somehow avoid a cast here:\n-        when(mockTwo.getList()).thenReturn((List) subs);\n-    }\n-    \n     @Test\n     public void shouldAllowStubbingToString() throws Exception {\n         IMethods mockTwo = mock(IMethods.class);", "timestamp": 1220039016, "metainfo": ""}