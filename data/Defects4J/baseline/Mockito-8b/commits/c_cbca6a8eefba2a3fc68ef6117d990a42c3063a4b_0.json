{"sha": "cbca6a8eefba2a3fc68ef6117d990a42c3063a4b", "log": "added some yet unfinished bridge method tests  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40103", "commit": "\n--- a/src/org/mockito/internal/MockFactory.java\n+++ b/src/org/mockito/internal/MockFactory.java\n \n             public Object intercept(Object obj, Method method, Object[] args,\n                     MethodProxy proxy) throws Throwable {\n+                System.err.println(method + \" \" + method.isBridge());\n                 if (method.isBridge()) {\n-                    //TODO still don't understand this one. Is it needed?\n+                    //TODO still... why is this needed?\n                     return proxy.invokeSuper(obj, args);\n                 }\n                 return handler.invoke(obj, method, args);\n--- a/test/org/mockito/util/ExtraMatchers.java\n+++ b/test/org/mockito/util/ExtraMatchers.java\n  */\n package org.mockito.util;\n \n+import java.lang.reflect.Method;\n import java.util.*;\n \n import org.hamcrest.*;\n             }\n         };\n     }\n+    \n+    public static <T> Matcher<Object> hasBridgeMethod(final String methodName) {\n+        return new BaseMatcher<Object>() {\n+\n+            public boolean matches(Object o) {\n+                Class clazz = null;\n+                if (o instanceof Class) {\n+                    clazz = (Class) o;\n+                } else {\n+                    clazz = o.getClass();\n+                }\n+                \n+                for (Method m : clazz.getMethods()) {\n+                    if (m.isBridge()) {\n+                        if (m.getName().equals(methodName)) {\n+                            System.out.println(m);\n+                            return true;\n+                        }\n+                    }\n+                }\n+                \n+                return false; \n+            }\n+\n+            public void describeTo(Description desc) {\n+                desc.appendText(\"Bridge method: \" + methodName + \" not found!\");\n+            }\n+        };\n+    }\n }", "timestamp": 1196431478, "metainfo": ""}