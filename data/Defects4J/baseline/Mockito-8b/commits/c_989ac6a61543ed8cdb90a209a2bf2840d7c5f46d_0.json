{"sha": "989ac6a61543ed8cdb90a209a2bf2840d7c5f46d", "log": "Brige method tackled!  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40105", "commit": "\n--- a/src/org/mockito/internal/MockFactory.java\n+++ b/src/org/mockito/internal/MockFactory.java\n             public Object intercept(Object obj, Method method, Object[] args,\n                     MethodProxy proxy) throws Throwable {\n                 if (method.isBridge()) {\n-                    //TODO still... why is this needed?\n                     return proxy.invokeSuper(obj, args);\n                 }\n                 return handler.invoke(obj, method, args);\n--- a/test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java\n+++ b/test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java\n  */\n @SuppressWarnings(\"unchecked\")\n public class BridgeMethodPuzzleTest {\n-\n-    class Super<T> {\n+    \n+    private class Super<T> {\n         public String say(T t) {\n             return \"Super says: \" + t;\n         }\n     }\n-     \n-    class Sub extends Super<String> {\n+    \n+    private class Sub extends Super<String> {\n         @Override\n         public String say(String t)  {\n             return \"Sub says: \" + t;\n-        }\n-    }\n+        }\n+    }\n+\n+    Super mock;\n+    \n+    private void setMockWithDownCast(Super mock) {\n+        this.mock = mock;\n+    }\n+    \n+    private void say(String string) {\n+        mock.say(string);\n+    }\n     \n     @Test\n     public void shouldHaveBridgeMethod() throws Exception {\n     @Test\n     public void shouldVerifyCorrectlyWhenBridgeMethodCalled() throws Exception {\n         //Super has following erasure: say(Object) which differs from Sub.say(String)\n-        //mock has to detect it and do the polymorphic call: Sub.say(Object) \n-        Super s = mock(Sub.class);\n-        \n-        s.say(\"Hello\");\n-        \n-        verify(s).say(\"Hello\");\n-    }\n-    \n-    @Test\n-    public void shouldVerifyCorrectlyWhenBridgeMethodIsNotCalled() throws Exception {\n-        //no problem here, no polymorphic call\n+        //mock has to detect it and do the super.say()\n+        //see MockFactory.java\n         Sub s = mock(Sub.class);\n-        \n-        s.say(\"Hello\");\n+        setMockWithDownCast(s);\n+        say(\"Hello\");\n         \n         verify(s).say(\"Hello\");\n     }", "timestamp": 1196441797, "metainfo": ""}