{"sha": "80f7b3d94ff59c51270a2a7bbbad0042bc09c85a", "log": "Tidy-up in buildSrc - coverage, rename jobs", "commit": "\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java\n package org.mockito.release.notes.vcs;\n \n public interface Commit {\n-    String getEmail();\n+\n+    /**\n+     * Author identifier. For git it would be 'email'\n+     */\n+    String getAuthorId();\n+\n+    /**\n+     * Author display name. For git it would be 'author'\n+     */\n     String getAuthor();\n+\n+    /**\n+     * Commit message\n+     */\n     String getMessage();\n }\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java\n class DefaultContribution implements Contribution, Comparable<DefaultContribution> {\n \n     //email identifies the contributor, author alias not necessarily\n-    final String email;\n+    final String authorId;\n     final String author;\n     final List<Commit> commits = new LinkedList<Commit>();\n \n     DefaultContribution(Commit commit) {\n-        email = commit.getEmail();\n+        authorId = commit.getAuthorId();\n         author = commit.getAuthor();\n         commits.add(commit);\n     }\n \n-    void add(GitCommit commit) {\n-        assert email.equals(commit.getEmail());\n+    DefaultContribution add(GitCommit commit) {\n+        assert authorId.equals(commit.getAuthorId());\n         commits.add(commit);\n+        return this;\n     }\n \n     public String toString() {\n-        return author + \":\" + commits.size();\n+        return commits.size() + \": \" + author;\n     }\n \n     public int compareTo(DefaultContribution other) {\n-        return Integer.valueOf(commits.size()).compareTo(other.getCommits().size());\n+        return Integer.valueOf(other.getCommits().size()).compareTo(commits.size());\n     }\n \n     public Collection<Commit> getCommits() {\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java\n             return;\n         }\n         commits.add(commit);\n-        DefaultContribution c = contributions.get(commit.getEmail());\n+        DefaultContribution c = contributions.get(commit.getAuthorId());\n         if (c == null) {\n-            contributions.put(commit.getEmail(), c = new DefaultContribution(commit));\n+            contributions.put(commit.getAuthorId(), new DefaultContribution(commit));\n         } else {\n             c.add(commit);\n         }\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java\n         this.message = message;\n     }\n \n-    public String getEmail() {\n+    public String getAuthorId() {\n         return email;\n     }\n ", "timestamp": 1416516893, "metainfo": ""}