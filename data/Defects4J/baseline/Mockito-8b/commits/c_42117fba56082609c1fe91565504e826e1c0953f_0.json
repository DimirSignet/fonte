{"sha": "42117fba56082609c1fe91565504e826e1c0953f", "log": "removed IMockitoConfiguration stuff from main javadocs because it's the feature for ultra hackers  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401220", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n \n import java.util.Arrays;\n \n-import org.mockito.configuration.IMockitoConfiguration;\n import org.mockito.exceptions.Reporter;\n import org.mockito.exceptions.misusing.NotAMockException;\n import org.mockito.internal.MockHandler;\n  * \n  * <p>\n  * Read more about this interesting implementation of <i>ReturnValues</i>: {@link Mockito#RETURNS_SMART_NULLS}\n- * <p>\n- * Optionally, you can configure default return values for all mocks using {@link IMockitoConfiguration}.\n  * \n  */\n @SuppressWarnings(\"unchecked\")\n      * <p>\n      * {@link ReturnValues} defines the return values of unstubbed invocations. \n      * <p>\n-     * This implementation first tries the global configuration (see {@link IMockitoConfiguration}). \n+     * This implementation first tries the global configuration. \n      * If there is no global configuration then it uses {@link EmptyReturnValues} (returns zeros, empty collections, nulls, etc.)\n      */\n     public static final ReturnValues RETURNS_DEFAULTS = new GloballyConfiguredReturnValues();\n--- a/src/org/mockito/ReturnValues.java\n+++ b/src/org/mockito/ReturnValues.java\n  */\n package org.mockito;\n \n-import org.mockito.configuration.IMockitoConfiguration;\n import org.mockito.invocation.InvocationOnMock;\n \n /**\n  * Configures return values for an unstubbed invocation\n  * <p>\n- * Can be used in {@link Mockito#mock(Class, ReturnValues)} or configured globally - see: {@link IMockitoConfiguration}\n+ * Can be used in {@link Mockito#mock(Class, ReturnValues)}\n  */\n public interface ReturnValues {\n \n--- a/src/org/mockito/configuration/DefaultMockitoConfiguration.java\n+++ b/src/org/mockito/configuration/DefaultMockitoConfiguration.java\n  * See javadocs for {@link IMockitoConfiguration} on info how to configure Mockito\n  */\n public class DefaultMockitoConfiguration implements IMockitoConfiguration {\n-\n+    \n     /* (non-Javadoc)\n      * @see org.mockito.IMockitoConfiguration#getReturnValues()\n      */\n--- a/src/org/mockito/internal/returnvalues/GloballyConfiguredReturnValues.java\n+++ b/src/org/mockito/internal/returnvalues/GloballyConfiguredReturnValues.java\n package org.mockito.internal.returnvalues;\n \n import org.mockito.ReturnValues;\n-import org.mockito.configuration.IMockitoConfiguration;\n import org.mockito.internal.configuration.GlobalConfiguration;\n import org.mockito.invocation.InvocationOnMock;\n \n /**\n- * ReturnValues from global configuration, see {@link IMockitoConfiguration}\n+ * ReturnValues from global configuration\n  */\n public class GloballyConfiguredReturnValues implements ReturnValues {\n     \n--- a/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n+++ b/src/org/mockito/internal/returnvalues/SmartNullReturnValues.java\n \n import org.mockito.Mockito;\n import org.mockito.ReturnValues;\n-import org.mockito.configuration.IMockitoConfiguration;\n import org.mockito.exceptions.cause.BecauseThisMethodWasNotStubbed;\n import org.mockito.exceptions.verification.SmartNullPointerException;\n import org.mockito.internal.creation.jmock.ClassImposterizer;\n  * <p>\n  * SmartNullReturnValues first tries to return ordinary return values (see {@link MoreEmptyReturnValues})\n  * then it tries to return SmartNull. If the return type is not mockable (e.g. final) then ordinary null is returned.\n- * <p>\n- * If you would like to apply this return values strategy globally have a look at {@link IMockitoConfiguration} class\n  * <p>\n  * SmartNullReturnValues will be probably the default return values strategy in Mockito 2.0\n  */", "timestamp": 1232307794, "metainfo": ""}