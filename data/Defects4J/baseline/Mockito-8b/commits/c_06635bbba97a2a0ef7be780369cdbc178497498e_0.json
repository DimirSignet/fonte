{"sha": "06635bbba97a2a0ef7be780369cdbc178497498e", "log": "Tidy-up in buildSrc. Added coverage.", "commit": "\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/Contribution.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/Contribution.java\n  * Contribution of given author\n  */\n class Contribution {\n-    String email; //identifies the contributor\n-    String author;\n-    List<GitCommit> commits = new LinkedList<GitCommit>();\n+    //email identifies the contributor, author alias not necessarily\n+    final String email;\n+    final String author;\n+    final List<GitCommit> commits = new LinkedList<GitCommit>();\n+\n+    Contribution(GitCommit commit) {\n+        email = commit.email;\n+        author = commit.author;\n+        commits.add(commit);\n+    }\n \n     void add(GitCommit commit) {\n-        if (email == null) {\n-            email = commit.email;\n-            author = commit.author;\n-            //TODO we could guess the best author from the ones associated with given email\n-            //we could base on existence of space (this hints that it's a proper first name + surname)\n-        }\n-        //email identifies the contributor, author alias not necessarily\n         assert email.equals(commit.email);\n         commits.add(commit);\n     }\n     public String toString() {\n         return author + \":\" + commits.size();\n     }\n-}\n+}", "timestamp": 1416516892, "metainfo": ""}