{"sha": "756e46adf9246b0c2b3015441650d83b475ebfd0", "log": "Renamed PublicInvocation -> Invocation before using the interface type where possible...  --HG-- rename : src/org/mockito/invocation/PublicInvocation.java => src/org/mockito/invocation/Invocation.java", "commit": "\n--- a/src/org/mockito/internal/invocation/InvocationImpl.java\n+++ b/src/org/mockito/internal/invocation/InvocationImpl.java\n import org.mockito.internal.exceptions.VerificationAwareInvocation;\n import org.mockito.internal.invocation.realmethod.RealMethod;\n import org.mockito.internal.reporting.PrintSettings;\n+import org.mockito.invocation.Invocation;\n import org.mockito.invocation.InvocationOnMock;\n-import org.mockito.invocation.PublicInvocation;\n import org.mockito.invocation.StubInfo;\n \n import java.lang.reflect.Method;\n  * Contains stack trace of invocation\n  */\n @SuppressWarnings(\"unchecked\")\n-public class InvocationImpl implements PublicInvocation, PrintableInvocation, InvocationOnMock, VerificationAwareInvocation {\n+public class InvocationImpl implements Invocation, PrintableInvocation, InvocationOnMock, VerificationAwareInvocation {\n \n     private static final long serialVersionUID = 8240069639250980199L;\n     private final int sequenceNumber;\n--- a/src/org/mockito/internal/stubbing/answers/AnswersValidator.java\n+++ b/src/org/mockito/internal/stubbing/answers/AnswersValidator.java\n package org.mockito.internal.stubbing.answers;\n \n import org.mockito.exceptions.Reporter;\n-import org.mockito.invocation.PublicInvocation;\n+import org.mockito.invocation.Invocation;\n import org.mockito.stubbing.Answer;\n \n public class AnswersValidator {\n \n     private Reporter reporter = new Reporter();\n     \n-    public void validate(Answer<?> answer, PublicInvocation theInvocation) {\n+    public void validate(Answer<?> answer, Invocation theInvocation) {\n         MethodInfo invocation = new MethodInfo(theInvocation);\n         if (answer instanceof ThrowsException) {\n             validateException((ThrowsException) answer, invocation);\n--- a/src/org/mockito/internal/stubbing/answers/MethodInfo.java\n+++ b/src/org/mockito/internal/stubbing/answers/MethodInfo.java\n package org.mockito.internal.stubbing.answers;\n \n import org.mockito.internal.util.Primitives;\n-import org.mockito.invocation.PublicInvocation;\n+import org.mockito.invocation.Invocation;\n \n import java.lang.reflect.Method;\n \n \n     private Method method;\n \n-    public MethodInfo(PublicInvocation theInvocation) {\n+    public MethodInfo(Invocation theInvocation) {\n         this.method = theInvocation.getMethod();\n     }\n \n--- /dev/null\n+++ b/src/org/mockito/invocation/Invocation.java\n+package org.mockito.invocation;\n+\n+/**\n+ * by Szczepan Faber, created at: 3/31/12\n+ */\n+public interface Invocation extends InvocationOnMock {\n+\n+    boolean isVerified();\n+\n+    int getSequenceNumber();\n+\n+    Location getLocation();\n+\n+    Object[] getRawArguments();\n+\n+    void markVerified();\n+\n+    StubInfo stubInfo();\n+\n+    void markStubbed(StubInfo stubInfo);\n+\n+    boolean isIgnoredForVerification();\n+\n+    void ignoreForVerification();\n+}", "timestamp": 1333231848, "metainfo": ""}