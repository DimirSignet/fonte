{"sha": "44a94cbb57740e050881a46c0dfbbc7f56928c13", "log": "Simplified the JUnit specific handling", "commit": "\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n                 \"\"\n         );\n \n-        if (JUnitTool.hasJUnit()) {\n-            throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);\n-        } else {\n-            throw new ArgumentsAreDifferent(message);\n-        }\n+        throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);\n     }\n \n     public void wantedButNotInvoked(DescribedInvocation wanted) {\n--- a/src/org/mockito/internal/junit/JUnitTool.java\n+++ b/src/org/mockito/internal/junit/JUnitTool.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.junit;\n \n import org.mockito.exceptions.verification.ArgumentsAreDifferent;\n     }\n \n     public static AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {\n+        if (!hasJUnit) {\n+            return new ArgumentsAreDifferent(message);\n+        }\n+\n         try {\n             Class<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferent\");\n             AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, wanted, actual);", "timestamp": 1418685931, "metainfo": ""}