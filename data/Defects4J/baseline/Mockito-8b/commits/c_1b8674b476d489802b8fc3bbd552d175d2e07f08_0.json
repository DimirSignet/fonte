{"sha": "1b8674b476d489802b8fc3bbd552d175d2e07f08", "log": "Release notes automation tidy-up.  Fixes #119", "commit": "\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java\n \n import org.gradle.api.Project;\n import org.mockito.release.notes.versions.PreviousVersion;\n-import org.mockito.release.notes.versions.PreviousVersionFromFile;\n-\n-import java.io.File;\n+import org.mockito.release.notes.versions.Versions;\n \n /**\n  * Release notes services\n     }\n \n     /**\n-     * Provides previous version information based on the release notes file\n+     * Provides previous version information based on the release notes content file\n      */\n-    public static PreviousVersion previousVersion(File releaseNotesFile) {\n-        return new PreviousVersionFromFile(releaseNotesFile);\n+    public static PreviousVersion previousVersion(String releaseNotesContent) {\n+        return Versions.previousFromNotesContent(releaseNotesContent);\n     }\n }\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java\n+package org.mockito.release.notes.util;\n+\n+public class ReleaseNotesException extends RuntimeException {\n+\n+    public ReleaseNotesException(String message) {\n+        super(message);\n+    }\n+}\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/versions/FromNotesContent.java\n+package org.mockito.release.notes.versions;\n+\n+import org.mockito.release.notes.util.ReleaseNotesException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * Retrieves previously released version based on the top entry in the current release notes content.\n+ */\n+class FromNotesContent implements PreviousVersion {\n+\n+    private final String releaseNotesContent;\n+\n+    FromNotesContent(String releaseNotesContent) {\n+        this.releaseNotesContent = releaseNotesContent;\n+    }\n+\n+    public String getPreviousVersion() {\n+        //Example: \"### 1.9.5 (06-10-2012)\", we want to extract \"1.9.5\"\n+        Pattern p = Pattern.compile(\"(?s)^### (.+?) .*\");\n+        Matcher m = p.matcher(releaseNotesContent);\n+        if(!m.matches()) {\n+            throw new ReleaseNotesException(\"Unable to parse previous version from release notes content: \" + releaseNotesContent);\n+        }\n+        return m.group(1);\n+    }\n+}\n--- a/buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java\n package org.mockito.release.notes.versions;\n-\n-import java.io.File;\n \n /**\n  * Version services\n     /**\n      * Provides a way to retrieve previous version based on the content of the release notes file.\n      */\n-    PreviousVersion previousFromNotesFile(File releaseNotesFile) {\n-        return new PreviousVersionFromFile(releaseNotesFile);\n+    public static PreviousVersion previousFromNotesContent(String notesContent) {\n+        return new FromNotesContent(notesContent);\n     }\n }", "timestamp": 1416519273, "metainfo": ""}