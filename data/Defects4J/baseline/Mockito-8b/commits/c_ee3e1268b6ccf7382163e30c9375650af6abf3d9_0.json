{"sha": "ee3e1268b6ccf7382163e30c9375650af6abf3d9", "log": "Added an acceptance test to start working on a bug  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401477", "commit": "\n--- a/test/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java\n+++ b/test/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java\n import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n+import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;\n+import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n public class PrintingVerboseTypesWithArgumentsTest extends TestBase {\n             assertContains(\"withLongAndInt(100, 230)\", e.getMessage());\n         }\n     }\n+    \n+    class Foo {\n+        \n+        private final int x;\n+\n+        public Foo(int x) {\n+            this.x = x;\n+        }\n+        \n+        public boolean equals(Object obj) {\n+            return x == ((Foo) obj).x;\n+        }\n+        \n+        public int hashCode() {\n+            return 1;\n+        }\n+        \n+        public String toString() {\n+            return \"foo\";\n+        }\n+    }\n+    \n+    @Ignore\n+    @Test\n+    public void shouldNotShowTypesWhenTypesAreTheSameEvenIfToStringGivesTheSameResult() throws Exception {\n+        //given\n+        IMethods mock = mock(IMethods.class);\n+        mock.simpleMethod(new Foo(10));\n+        \n+        try {\n+            //when\n+            verify(mock).simpleMethod(new Foo(20));\n+            fail();\n+        } catch (ArgumentsAreDifferent e) {\n+            //then\n+            assertContains(\"simpleMethod(foo)\", e.getMessage());\n+        }\n+    }\n }", "timestamp": 1244403892, "metainfo": ""}