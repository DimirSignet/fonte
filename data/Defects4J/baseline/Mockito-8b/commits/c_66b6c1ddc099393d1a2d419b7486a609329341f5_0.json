{"sha": "66b6c1ddc099393d1a2d419b7486a609329341f5", "log": "added TODOs and ignored test so that I will not forget to change the behaviour of anyX() matchers  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40621", "commit": "\n--- a/test/org/mockitousage/IMethods.java\n+++ b/test/org/mockitousage/IMethods.java\n     Object objectReturningMethod(Object ... objects);\n \n     String oneArg(boolean value);\n+    \n+    String oneArg(Boolean value);\n \n     String oneArg(byte value);\n+    \n+    String oneArg(Byte value);\n \n     String oneArg(short value);\n \n+    String oneArg(Short value);\n+    \n     String oneArg(char value);\n+    \n+    String oneArg(Character value);\n \n     String oneArg(int value);\n+    \n+    String oneArg(Integer value);\n \n     String oneArg(long value);\n \n+    String oneArg(Long value);\n+    \n     String oneArg(float value);\n \n+    String oneArg(Float value);\n+    \n     String oneArg(double value);\n \n+    String oneArg(Double value);\n+    \n     String oneArg(Object value);\n \n     String oneArg(String value);\n--- /dev/null\n+++ b/test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.matchers;\n+\n+import static org.mockito.Matchers.*;\n+import static org.mockito.Mockito.*;\n+\n+import org.junit.Before;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.mockito.TestBase;\n+import org.mockitousage.IMethods;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class AnyXMatchersAcceptNullsTest extends TestBase {\n+    \n+    private IMethods mock;\n+\n+    @Before\n+    public void setUp() {\n+        mock = Mockito.mock(IMethods.class);\n+    }\n+\n+    @Ignore\n+    @Test\n+    public void shouldAnyXMatchersAcceptNull() {\n+        stub(mock.oneArg(anyObject())).toReturn(\"0\");\n+        stub(mock.oneArg(anyString())).toReturn(\"1\");\n+        stub(mock.oneArg(anyInt())).toReturn(\"2\");\n+        \n+        assertEquals(\"0\", mock.oneArg((Object) null));\n+        assertEquals(\"1\", mock.oneArg((String) null));\n+        assertEquals(\"2\", mock.oneArg((Integer) null));\n+    }\n+    \n+    \n+    \n+//        TODO add anyList()       matcher\n+//        TODO add anyMap()        matcher\n+//        TODO add anyCollection() matcher\n+//        TODO add anySet() matcher\n+    \n+}\n--- a/test/org/mockitousage/matchers/MatchersTest.java\n+++ b/test/org/mockitousage/matchers/MatchersTest.java\n         \n         assertEquals(\"1\", mock.oneArg(\"\"));\n         assertEquals(\"1\", mock.oneArg(\"any string\"));\n-        assertEquals(null, mock.oneArg(null));\n+        assertEquals(null, mock.oneArg((Object) null));\n     }\n \n     @Test\n \n         assertEquals(\"1\", mock.oneArg(\"ab12\"));\n         assertEquals(null, mock.oneArg(\"12345\"));\n-        assertEquals(null, mock.oneArg(null));\n+        assertEquals(null, mock.oneArg((Object) null));\n     }\n \n     @Test", "timestamp": 1212665302, "metainfo": ""}