{"sha": "e06ee9505c6a103a15f4a7a93b6baaf161c38041", "log": "removed Verification enum  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40972", "commit": "\n--- a/src/org/mockito/internal/verification/MockitoVerificationMode.java\n+++ b/src/org/mockito/internal/verification/MockitoVerificationMode.java\n import org.mockito.internal.verification.api.VerificationInOrderMode;\n import org.mockito.internal.verification.api.VerificationMode;\n \n-/**\n- * Holds additional information regarding verification.\n- * <p> \n- * Implements marking interface which hides details from Mockito users. \n- */\n public class MockitoVerificationMode implements VerificationInOrderMode, VerificationMode {\n     \n-    public enum Verification { EXPLICIT };\n+    final int wantedInvocationCount;\n     \n-    final int wantedInvocationCount;\n-    final Verification verification;\n-    \n-    public MockitoVerificationMode(int wantedNumberOfInvocations, Verification verification) {\n+    public MockitoVerificationMode(int wantedNumberOfInvocations) {\n         if (wantedNumberOfInvocations < 0) {\n             throw new MockitoException(\"Negative value is not allowed here\");\n         }\n         this.wantedInvocationCount = wantedNumberOfInvocations;\n-        this.verification = verification;\n     }\n     \n     public void verify(VerificationData data) {\n     public int wantedCount() {\n         return wantedInvocationCount;\n     }\n-    \n-    public Verification getVerification() {\n-        return verification;\n-    }\n }\n--- a/src/org/mockito/internal/verification/VerificationModeDecoder.java\n+++ b/src/org/mockito/internal/verification/VerificationModeDecoder.java\n package org.mockito.internal.verification;\n \n-import org.mockito.internal.verification.MockitoVerificationMode.Verification;\n \n //TODO verify all methods are used\n public class VerificationModeDecoder {\n         this.mode = mode;\n     }\n \n-    public boolean explicitMode() {\n-        return mode.getVerification() == Verification.EXPLICIT;\n-    }\n-    \n     public boolean matchesActualCount(int actualCount) {\n         return mode.wantedCount() == actualCount;\n     }\n--- a/src/org/mockito/internal/verification/VerificationModeFactory.java\n+++ b/src/org/mockito/internal/verification/VerificationModeFactory.java\n  */\n package org.mockito.internal.verification;\n \n-import org.mockito.internal.verification.MockitoVerificationMode.Verification;\n import org.mockito.internal.verification.api.VerificationMode;\n \n /**\n     }\n \n     public static MockitoVerificationMode times(int wantedNumberOfInvocations) {\n-        return new MockitoVerificationMode(wantedNumberOfInvocations, Verification.EXPLICIT);\n+        return new MockitoVerificationMode(wantedNumberOfInvocations);\n     }\n \n     public static NoMoreInteractionsMode noMoreInteractions() {", "timestamp": 1223981484, "metainfo": ""}