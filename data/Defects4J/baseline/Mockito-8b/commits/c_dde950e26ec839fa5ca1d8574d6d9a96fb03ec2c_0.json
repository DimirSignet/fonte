{"sha": "dde950e26ec839fa5ca1d8574d6d9a96fb03ec2c", "log": "Tidy-up in buildSrc. Groovy->Java migration.", "commit": "\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/Contribution.java\n+package org.mockito.release.notes;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+/**\n+ * Contribution of given author\n+ */\n+class Contribution {\n+    String email; //identifies the contributor\n+    String author;\n+    List<GitCommit> commits = new LinkedList<GitCommit>();\n+\n+    void add(GitCommit commit) {\n+        if (email == null) {\n+            email = commit.email;\n+            author = commit.author;\n+            //TODO we could guess the best author from the ones associated with given email\n+            //we could base on existence of space (this hints that it's a proper first name + surname)\n+        }\n+        //email identifies the contributor, author alias not necessarily\n+        assert email.equals(commit.email);\n+        commits.add(commit);\n+    }\n+\n+    public String toString() {\n+        return author + \":\" + commits.size();\n+    }\n+}\n--- /dev/null\n+++ b/buildSrc/src/main/groovy/org/mockito/release/notes/GitCommit.java\n+package org.mockito.release.notes;\n+\n+class GitCommit {\n+    String email;\n+    String author;\n+    String message;\n+}", "timestamp": 1416516892, "metainfo": ""}