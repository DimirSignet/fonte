{"sha": "1bad4142641ec8ad1591dc9f4354203345e3be69", "log": "fixed some @Ignored tests :)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40332", "commit": "\n--- a/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n import org.mockito.InOrder;\n import org.mockito.RequiresValidState;\n import org.mockito.exceptions.verification.InvocationDiffersFromActual;\n+import org.mockito.exceptions.verification.VerifcationInOrderFailure;\n+import org.mockitousage.IMethods;\n \n public class IncorectBindingPuzzleFixedTest extends RequiresValidState {\n \n \n     @Ignore(\"that's a very edge case, don't care for it now\")\n     @Test\n-    public void shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder() throws Exception {\n+    public void shouldPrintArgumentTypeWhenOverloadingPuzzleDetectedByVerificationInOrder() throws Exception {\n+        IMethods mockTwo = mock(IMethods.class);\n+        mockTwo.simpleMethod();\n+        \n         Sub sub = mock(Sub.class);\n         setMockWithDowncast(sub);\n         say(\"Hello\");\n-        InOrder inOrder = inOrder(mock);\n-        inOrder.verify(sub).say(\"Hello\");\n+        \n+        InOrder inOrder = inOrder(mock, mockTwo);\n+        inOrder.verify(mockTwo).simpleMethod();\n+        \n+        try {\n+            inOrder.verify(sub).say(\"Hello\");\n+            fail();\n+        } catch (VerifcationInOrderFailure e) {\n+            assertThat(e, messageContains(\"Sub.say(class java.lang.String)\"));\n+        }\n     }\n \n     @Test\n--- a/test/org/mockitousage/verification/DescriptiveMessagesOnVerificationInOrderErrorsTest.java\n+++ b/test/org/mockitousage/verification/DescriptiveMessagesOnVerificationInOrderErrorsTest.java\n import static org.mockito.Mockito.*;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.InOrder;\n import org.mockito.Mockito;\n     @Test\n     public void shouldPrintVerificationInOrderErrorAndShowWantedOnly() {\n         try {\n+            inOrder.verify(one).differentMethod();\n+            fail();\n+        } catch (WantedButNotInvoked e) {\n+            String expected = \n+                    \"\\n\" +\n+                    \"Wanted but not invoked:\" +\n+                    \"\\n\" +\n+                    \"IMethods.differentMethod()\"; \n+            \n+            assertEquals(expected, e.getMessage());\n+            \n+            assertEquals(null, e.getCause());\n+        }\n+    } \n+    \n+    @Ignore(\"TODO\")\n+    @Test\n+    public void shouldPrintVerificationInOrderErrorAndShowWantedAndActual() {\n+        try {\n             inOrder.verify(one).simpleMethod(999);\n             fail();\n         } catch (WantedButNotInvoked e) {\n             String expected = \n                     \"\\n\" +\n-                    \"Wanted but not invoked:\" +\n+                    \"Invocation differs from actual:\" +\n                     \"\\n\" +\n                     \"IMethods.simpleMethod(999)\"; \n             ", "timestamp": 1201478209, "metainfo": ""}