{"sha": "305eb1a427d96e347e101c86fed741c857325b42", "log": "added a unit test to complete a functional test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40426", "commit": "\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n         List<Matcher> matchers = new ArrayList<Matcher>(arguments.length);\n         for (Object arg : arguments) {\n             if (arg != null && arg.getClass().isArray()) {\n-                //TODO unit\n                 matchers.add(new ArrayEquals(arg));\n             } else {\n                 matchers.add(new Equals(arg));\n--- a/test/org/mockito/internal/invocation/InvocationTest.java\n+++ b/test/org/mockito/internal/invocation/InvocationTest.java\n  */\n package org.mockito.internal.invocation;\n \n+import static org.junit.Assert.*;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n \n import java.lang.reflect.Method;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.core.IsAnything;\n import org.junit.Before;\n import org.junit.Test;\n+import org.junit.matchers.IsCollectionContaining;\n import org.mockito.TestBase;\n+import org.mockito.internal.matchers.ArrayEquals;\n+import org.mockito.internal.matchers.Equals;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")\n         Invocation i = new InvocationBuilder().toInvocation();\n         assertEquals(\"    <NO ARGUMENTS>\", i.getArgs());\n     }\n+    \n+    @Test\n+    public void shouldTransformArgumentsToMatchers() throws Exception {\n+        Invocation i = new InvocationBuilder().args(\"foo\", new String[] {\"bar\"}).toInvocation();\n+        List matchers = i.argumentsToMatchers();\n+        //TODO sort out imports! in order?\n+        assertThat(matchers, IsCollectionContaining.hasItems(CoreMatchers.is(Equals.class), CoreMatchers.is(ArrayEquals.class)));\n+    }\n }\n--- a/test/org/mockito/util/ExtraMatchers.java\n+++ b/test/org/mockito/util/ExtraMatchers.java\n         };\n     }\n     \n+    //TODO can't you use matchers from hamcrest?\n     public static <T> Matcher<Collection> collectionHasExactlyInOrder(final T ... elements) {\n         return new BaseMatcher<Collection>() {\n \n--- a/test/org/mockitousage/IMethods.java\n+++ b/test/org/mockitousage/IMethods.java\n     String simpleMethod(String argOne, Integer argTwo);\n     \n     String simpleMethod(String one, Integer two, Integer three, Integer four, Integer five);\n+    \n+    String simpleMethod(String one, String[] two);\n \n     Object threeArgumentMethod(int valueOne, Object valueTwo, String valueThree);\n ", "timestamp": 1204476122, "metainfo": ""}