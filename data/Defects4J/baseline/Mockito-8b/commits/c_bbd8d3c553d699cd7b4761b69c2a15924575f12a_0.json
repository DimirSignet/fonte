{"sha": "bbd8d3c553d699cd7b4761b69c2a15924575f12a", "log": "fixed compilation errors (oups ;)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40277", "commit": "\n--- a/src/org/mockito/AdditionalMatchers.java\n+++ b/src/org/mockito/AdditionalMatchers.java\n      * @return <code>null</code>.\n      */\n     public static <T extends Comparable<T>> T geq(Comparable<T> value) {\n-        return reportMatcher(new GreaterOrEqual<T>(value)).returnNull();\n+        return reportMatcher(new GreaterOrEqual<T>(value)).<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T extends Comparable<T>> T gt(Comparable<T> value) {\n-        return reportMatcher(new GreaterThan<T>(value)).returnNull();\n+        return reportMatcher(new GreaterThan<T>(value)).<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T extends Comparable<T>> T lt(Comparable<T> value) {\n-        return reportMatcher(new LessThan<T>(value)).returnNull();\n+        return reportMatcher(new LessThan<T>(value)).<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static String find(String regex) {\n-        return reportMatcher(new Find(regex)).returnNull();\n+        return reportMatcher(new Find(regex)).<String>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T> T and(T first, T second) {\n-        return LastArguments.instance().reportAnd().returnNull();\n+        return LastArguments.instance().reportAnd().<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T> T or(T first, T second) {\n-        return LastArguments.instance().reportOr().returnNull();\n+        return LastArguments.instance().reportOr().<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T> T not(T first) {\n-        return LastArguments.instance().reportNot().returnNull();\n+        return LastArguments.instance().reportNot().<T>returnNull();\n     }\n \n     /**\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n      * @return <code>null</code>.\n      */\n     public static <T> T isA(Class<T> clazz) {\n-        return reportMatcher(new InstanceOf(clazz)).returnNull();\n+        return reportMatcher(new InstanceOf(clazz)).<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T> T eq(T value) {\n-        return reportMatcher(new Equals(value)).returnNull();\n+        return reportMatcher(new Equals(value)).<T>returnNull();\n     }\n \n     /**\n      * @return <code>null</code>.\n      */\n     public static <T> T same(T value) {\n-        return reportMatcher(new Same(value)).returnNull();\n+        return reportMatcher(new Same(value)).<T>returnNull();\n     }\n \n     /**", "timestamp": 1199914505, "metainfo": ""}