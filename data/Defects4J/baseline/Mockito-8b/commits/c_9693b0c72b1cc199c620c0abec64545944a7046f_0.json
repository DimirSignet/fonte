{"sha": "9693b0c72b1cc199c620c0abec64545944a7046f", "log": "Reset Captor before each test when using TestNG.", "commit": "\n--- a/subprojects/testng/src/main/java/org/mockito/testng/MockitoBeforeTestNGMethod.java\n+++ b/subprojects/testng/src/main/java/org/mockito/testng/MockitoBeforeTestNGMethod.java\n     private void initializeCaptors(Object instance) {\n         List<InstanceField> instanceFields = Fields.allDeclaredFieldsOf(instance).filter(annotatedBy(Captor.class)).instanceFields();\n         for (InstanceField instanceField : instanceFields) {\n-            new CaptorAnnotationProcessor().process(instanceField.annotation(Captor.class), instanceField.jdkField());\n+            instanceField.set(new CaptorAnnotationProcessor().process(instanceField.annotation(Captor.class), instanceField.jdkField()));\n         }\n     }\n \n--- a/subprojects/testng/src/test/java/org/mockitousage/testng/CaptorAnnotatedFieldShouldBeClearedTest.java\n+++ b/subprojects/testng/src/test/java/org/mockitousage/testng/CaptorAnnotatedFieldShouldBeClearedTest.java\n import static org.mockito.Mockito.verify;\n \n @Listeners(MockitoTestNGListener.class)\n-@Test(enabled = false, description = \"not yet ready\")\n public class CaptorAnnotatedFieldShouldBeClearedTest {\n \n     @Captor ArgumentCaptor<String> captor;\n     @Mock List<String> list;\n \n-    @Test(enabled = false)\n+    @Test\n     public void first_test_method_that_uses_captor() throws Exception {\n         list.add(\"a\");\n         list.add(\"b\");\n         assertThat(captor.getAllValues()).containsOnly(\"a\", \"b\");\n     }\n \n-    @Test(enabled = false)\n+    @Test\n     public void second_test_method_that_uses_captor() throws Exception {\n         list.add(\"t\");\n         list.add(\"u\");", "timestamp": 1358547382, "metainfo": ""}