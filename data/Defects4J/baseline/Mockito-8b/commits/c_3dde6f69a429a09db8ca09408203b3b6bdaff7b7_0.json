{"sha": "3dde6f69a429a09db8ca09408203b3b6bdaff7b7", "log": "added RequiresValidState for every test  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40129", "commit": "\n--- a/test/org/mockito/InvocationTest.java\n+++ b/test/org/mockito/InvocationTest.java\n \n import org.junit.*;\n import org.mockito.internal.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class InvocationTest {\n+public class InvocationTest extends RequiresValidState {\n \n     private Invocation call;\n     private Invocation equalCall;\n--- a/test/org/mockito/MockUtilTest.java\n+++ b/test/org/mockito/MockUtilTest.java\n \n import org.junit.Test;\n import org.mockito.exceptions.*;\n+import org.mockito.util.RequiresValidState;\n \n-public class MockUtilTest {\n+public class MockUtilTest extends RequiresValidState {\n \n     @SuppressWarnings(\"unchecked\")\n     @Test \n--- a/test/org/mockito/MockitoTest.java\n+++ b/test/org/mockito/MockitoTest.java\n import org.junit.*;\n import org.mockito.exceptions.NotAMockException;\n import org.mockito.internal.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class MockitoTest {\n+public class MockitoTest extends RequiresValidState {\n \n     private String notMock;\n \n--- a/test/org/mockito/exceptions/MockitoAssertionErrorTest.java\n+++ b/test/org/mockito/exceptions/MockitoAssertionErrorTest.java\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n-public class MockitoAssertionErrorTest {\n+public class MockitoAssertionErrorTest extends RequiresValidState {\n \n     private void throwIt() {\n         throw new MockitoAssertionError(\"boom\");\n--- a/test/org/mockito/exceptions/MockitoErrorTest.java\n+++ b/test/org/mockito/exceptions/MockitoErrorTest.java\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n-public class MockitoErrorTest {\n+public class MockitoErrorTest extends RequiresValidState {\n \n     private void throwIt() {\n         throw new MockitoException(\"boom\");\n--- a/test/org/mockito/internal/CglibTest.java\n+++ b/test/org/mockito/internal/CglibTest.java\n  */\n package org.mockito.internal;\n \n+import static org.junit.Assert.assertNotSame;\n+\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n-import static org.junit.Assert.*;\n \n-import net.sf.cglib.proxy.Callback;\n-import net.sf.cglib.proxy.Enhancer;\n-import net.sf.cglib.proxy.Factory;\n-import net.sf.cglib.proxy.MethodInterceptor;\n-import net.sf.cglib.proxy.MethodProxy;\n+import net.sf.cglib.proxy.*;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n /**\n  * This test case is used to make sure that the way cglib is used is providing the expected behavior\n  */\n-public class CglibTest {\n+public class CglibTest extends RequiresValidState {\n \n     /**\n      * Check that an interceptor is used by only one instance of a class\n--- a/test/org/mockito/internal/ExpectedInvocationTest.java\n+++ b/test/org/mockito/internal/ExpectedInvocationTest.java\n  */\n package org.mockito.internal;\n \n+import static java.util.Arrays.asList;\n import static org.junit.Assert.*;\n-import static java.util.Arrays.*;\n \n import java.util.*;\n \n import org.junit.Test;\n import org.mockito.internal.matchers.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class ExpectedInvocationTest {\n+public class ExpectedInvocationTest extends RequiresValidState {\n \n     @Test(expected=IllegalArgumentException.class)\n     public void shouldScreamWhenMatchersNull() throws Exception {\n--- a/test/org/mockito/internal/InvocationChunkTest.java\n+++ b/test/org/mockito/internal/InvocationChunkTest.java\n  */\n package org.mockito.internal;\n \n+import static org.junit.Assert.assertTrue;\n+\n import org.junit.Test;\n-import static org.junit.Assert.*;\n+import org.mockito.util.RequiresValidState;\n \n-public class InvocationChunkTest {\n+public class InvocationChunkTest extends RequiresValidState {\n \n     @Test\n     public void shouldMarkAllAsVerified() throws Exception {\n--- a/test/org/mockito/internal/MockControlTest.java\n+++ b/test/org/mockito/internal/MockControlTest.java\n import org.junit.*;\n import org.mockito.exceptions.InvalidUseOfMatchersException;\n import org.mockito.internal.matchers.Equals;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class MockControlTest {\n+public class MockControlTest extends RequiresValidState {\n     \n     @Before\n     @After\n--- a/test/org/mockito/internal/MockFactoryTest.java\n+++ b/test/org/mockito/internal/MockFactoryTest.java\n import net.sf.cglib.proxy.Factory;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class MockFactoryTest {\n+public class MockFactoryTest extends RequiresValidState {\n \n     @Test\n     public void shouldCreateMockFromInterface() throws Exception {\n--- a/test/org/mockito/internal/MockitoBehaviorTest.java\n+++ b/test/org/mockito/internal/MockitoBehaviorTest.java\n \n import static org.junit.Assert.assertTrue;\n \n-import java.util.*;\n+import java.util.Arrays;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class MockitoBehaviorTest {\n+public class MockitoBehaviorTest extends RequiresValidState {\n \n     @Test\n     public void shouldNotCheckForWrongNumberOfModificationsWhenVerifyingInOrder() throws Exception {\n--- a/test/org/mockito/internal/MockitoStateTest.java\n+++ b/test/org/mockito/internal/MockitoStateTest.java\n \n import org.junit.*;\n import org.mockito.exceptions.MockitoException;\n+import org.mockito.util.RequiresValidState;\n \n-public class MockitoStateTest {\n+public class MockitoStateTest extends RequiresValidState {\n \n     private MockitoState mockitoState;\n \n--- a/test/org/mockito/internal/RegisteredInvocationsTest.java\n+++ b/test/org/mockito/internal/RegisteredInvocationsTest.java\n package org.mockito.internal;\n \n import static java.util.Arrays.asList;\n+import static java.util.Collections.EMPTY_LIST;\n+import static org.junit.Assert.*;\n import static org.mockito.internal.VerifyingMode.*;\n-import static java.util.Collections.*;\n-import static org.junit.Assert.*;\n \n import java.util.*;\n \n import org.junit.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class RegisteredInvocationsTest {\n+public class RegisteredInvocationsTest extends RequiresValidState {\n \n     private RegisteredInvocations registered;\n     private Invocation simpleMethodInvocation;\n--- a/test/org/mockito/internal/ToTypeMappingsTest.java\n+++ b/test/org/mockito/internal/ToTypeMappingsTest.java\n import java.util.*;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n-public class ToTypeMappingsTest {\n+public class ToTypeMappingsTest extends RequiresValidState {\n     \n     @SuppressWarnings(\"unchecked\")\n     @Test public void shouldReturnEmptyCollectionsOrNullForNonCollections() {\n--- a/test/org/mockito/internal/VerifyingModeTest.java\n+++ b/test/org/mockito/internal/VerifyingModeTest.java\n  */\n package org.mockito.internal;\n \n+import static org.junit.Assert.*;\n+\n import org.junit.Test;\n import org.mockito.exceptions.MockitoException;\n-import org.mockito.internal.VerifyingMode;\n+import org.mockito.util.RequiresValidState;\n \n-import static org.junit.Assert.*;\n-\n-public class VerifyingModeTest {\n+public class VerifyingModeTest extends RequiresValidState {\n \n     @Test\n     public void shouldKnowIfNumberOfInvocationsMatters() throws Exception {\n--- a/test/org/mockito/internal/matchers/EqualsTest.java\n+++ b/test/org/mockito/internal/matchers/EqualsTest.java\n import static org.junit.Assert.*;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n \n-public class EqualsTest {\n+public class EqualsTest extends RequiresValidState {\n     \n     @Test\n     public void shouldBeEqual() {\n--- a/test/org/mockito/sample/MockitoSampleTest.java\n+++ b/test/org/mockito/sample/MockitoSampleTest.java\n  * This program is made available under the terms of the MIT License.\n  */\n package org.mockito.sample;\n-import java.util.*;\n+import static org.mockito.Mockito.*;\n+\n+import java.util.Arrays;\n \n import org.junit.Test;\n import org.mockito.Mockito;\n-import static org.mockito.Mockito.*;\n+import org.mockito.util.RequiresValidState;\n \n-public class MockitoSampleTest {\n+public class MockitoSampleTest extends RequiresValidState {\n     \n     @Test\n     public void managerCountsArticlesAndSavesThemInTheDatabase() {\n--- a/test/org/mockitousage/InvalidStateDetectionTest.java\n+++ b/test/org/mockitousage/InvalidStateDetectionTest.java\n import org.junit.*;\n import org.mockito.exceptions.*;\n import org.mockito.internal.StateResetter;\n+import org.mockito.util.RequiresValidState;\n \n /**\n  * invalid state happens if:\n  *    -on stubVoid\n  */\n @SuppressWarnings(\"unchecked\")\n-public class InvalidStateDetectionTest {\n+public class InvalidStateDetectionTest extends RequiresValidState {\n \n     private IMethods mock;\n \n--- a/test/org/mockitousage/InvalidUsageTest.java\n+++ b/test/org/mockitousage/InvalidUsageTest.java\n import org.mockito.Strictly;\n import org.mockito.exceptions.*;\n import org.mockito.internal.StateResetter;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class InvalidUsageTest {\n+public class InvalidUsageTest extends RequiresValidState {\n \n     private IMethods mock;\n     private IMethods mockTwo;\n--- a/test/org/mockitousage/MockitoSyntaxExperiments.java\n+++ b/test/org/mockitousage/MockitoSyntaxExperiments.java\n  */\n package org.mockitousage;\n \n+import static org.mockito.Mockito.*;\n+import static org.mockito.MockitoExperimental.*;\n+\n import java.util.List;\n-import static org.mockito.MockitoExperimental.*;\n \n @SuppressWarnings(\"unchecked\")\n public class MockitoSyntaxExperiments {\n--- a/test/org/mockitousage/ReplacingObjectMethodsTest.java\n+++ b/test/org/mockitousage/ReplacingObjectMethodsTest.java\n \n import org.junit.Test;\n import org.mockito.Mockito;\n+import org.mockito.util.RequiresValidState;\n \n-public class ReplacingObjectMethodsTest {\n+public class ReplacingObjectMethodsTest extends RequiresValidState {\n \n     private interface DummyInterface {}\n     private class DummyClass {}\n--- a/test/org/mockitousage/StackTrackeFilteringTest.java\n+++ b/test/org/mockitousage/StackTrackeFilteringTest.java\n import org.mockito.*;\n import org.mockito.exceptions.*;\n import org.mockito.internal.StateResetter;\n+import org.mockito.util.RequiresValidState;\n \n-public class StackTrackeFilteringTest {\n+public class StackTrackeFilteringTest extends RequiresValidState {\n     \n     private IMethods mock;\n \n--- a/test/org/mockitousage/UsingVarargsTest.java\n+++ b/test/org/mockitousage/UsingVarargsTest.java\n  */\n package org.mockitousage;\n \n+import static org.junit.Assert.*;\n import static org.mockito.Mockito.*;\n-import static org.junit.Assert.*;\n \n import java.util.ArrayList;\n \n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n \n-public class UsingVarargsTest {\n+public class UsingVarargsTest extends RequiresValidState {\n \n     private interface IVarArgs {\n         public void withStringVarargs(int value, String... s);\n--- a/test/org/mockitousage/binding/BridgeMethodPuzzleTest.java\n+++ b/test/org/mockitousage/binding/BridgeMethodPuzzleTest.java\n import static org.mockito.util.ExtraMatchers.hasBridgeMethod;\n \n import org.junit.Test;\n+import org.mockito.util.RequiresValidState;\n \n /**\n  * Bridge method is generated by compiler when erasure in parent class is\n  * and overridding is ON.\n  */\n @SuppressWarnings(\"unchecked\")\n-public class BridgeMethodPuzzleTest {\n+public class BridgeMethodPuzzleTest extends RequiresValidState {\n     \n     private class Super<T> {\n         public String say(T t) {\n--- a/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n+++ b/test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java\n import org.junit.Test;\n import org.mockito.Strictly;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n \n-public class IncorectBindingPuzzleFixedTest {\n+public class IncorectBindingPuzzleFixedTest extends RequiresValidState {\n \n     private Super mock;\n     \n--- a/test/org/mockitousage/matchers/ComparableMatchersTest.java\n+++ b/test/org/mockitousage/matchers/ComparableMatchersTest.java\n \n import org.junit.Test;\n import org.mockito.internal.matchers.*;\n+import org.mockito.util.RequiresValidState;\n \n-public class ComparableMatchersTest {\n+public class ComparableMatchersTest extends RequiresValidState {\n \n     @Test\n     public void testNotComparable() {\n--- a/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n+++ b/test/org/mockitousage/matchers/InvalidUseOfMatchersTest.java\n import org.junit.*;\n import org.mockito.*;\n import org.mockito.exceptions.InvalidUseOfMatchersException;\n-import org.mockito.internal.*;\n+import org.mockito.internal.StateResetter;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")\n-public class InvalidUseOfMatchersTest {\n+public class InvalidUseOfMatchersTest extends RequiresValidState {\n     \n     private IMethods mock;\n     \n--- a/test/org/mockitousage/matchers/MatchersTest.java\n+++ b/test/org/mockitousage/matchers/MatchersTest.java\n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")  \n-public class MatchersTest {\n+public class MatchersTest extends RequiresValidState {\n     private IMethods mock;\n \n     @Before\n--- a/test/org/mockitousage/matchers/MatchersToStringTest.java\n+++ b/test/org/mockitousage/matchers/MatchersToStringTest.java\n  */\n package org.mockitousage.matchers;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n \n-import java.util.ArrayList;\n-import java.util.List;\n+import java.util.*;\n \n-import org.junit.Before;\n-import org.junit.Test;\n+import org.junit.*;\n import org.mockito.internal.matchers.*;\n+import org.mockito.util.RequiresValidState;\n \n-public class MatchersToStringTest {\n+public class MatchersToStringTest extends RequiresValidState {\n     private StringBuilder buffer;\n \n     @Before\n--- a/test/org/mockitousage/matchers/VerificationAndStubbingUsingMatchersTest.java\n+++ b/test/org/mockitousage/matchers/VerificationAndStubbingUsingMatchersTest.java\n \n import static org.junit.Assert.assertEquals;\n import static org.mockito.CrazyMatchers.startsWith;\n-import static org.mockito.Matchers.anyString;\n+import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n import org.junit.*;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")  \n-public class VerificationAndStubbingUsingMatchersTest {\n+public class VerificationAndStubbingUsingMatchersTest extends RequiresValidState {\n     private IMethods one;\n     private IMethods two;\n     private IMethods three;\n--- a/test/org/mockitousage/stubbing/BasicStubbingTest.java\n+++ b/test/org/mockitousage/stubbing/BasicStubbingTest.java\n \n import org.junit.*;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")\n-public class BasicStubbingTest {\n+public class BasicStubbingTest extends RequiresValidState {\n \n     private IMethods mock;\n \n--- a/test/org/mockitousage/stubbing/ReturningDefaultValuesTest.java\n+++ b/test/org/mockitousage/stubbing/ReturningDefaultValuesTest.java\n \n import org.junit.Test;\n import org.mockito.Mockito;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")\n-public class ReturningDefaultValuesTest {\n+public class ReturningDefaultValuesTest extends RequiresValidState {\n \n     @Test\n     public void shouldReturnAllKindsOfPrimitives() throws Exception {\n--- a/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n+++ b/test/org/mockitousage/stubbing/StubbingWithThrowablesTest.java\n \n import org.junit.*;\n import org.mockito.exceptions.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings({\"serial\", \"unchecked\"})\n-public class StubbingWithThrowablesTest {\n+public class StubbingWithThrowablesTest extends RequiresValidState {\n \n     private LinkedList mock;\n     private Map mockTwo;\n--- a/test/org/mockitousage/verification/AtLeastOnceVerificationTest.java\n+++ b/test/org/mockitousage/verification/AtLeastOnceVerificationTest.java\n  */\n package org.mockitousage.verification;\n \n+import static org.junit.Assert.fail;\n import static org.mockito.Mockito.*;\n-import static org.junit.Assert.*;\n \n import java.util.List;\n \n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class AtLeastOnceVerificationTest {\n+public class AtLeastOnceVerificationTest extends RequiresValidState {\n \n     private List mock;\n     private List mockTwo;\n--- a/test/org/mockitousage/verification/BasicVerificationTest.java\n+++ b/test/org/mockitousage/verification/BasicVerificationTest.java\n import static org.junit.Assert.fail;\n import static org.mockito.Mockito.*;\n \n-import java.util.*;\n+import java.util.List;\n \n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.*;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class BasicVerificationTest {\n+public class BasicVerificationTest extends RequiresValidState {\n \n     private List mock;\n     private List mockTwo;\n--- a/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n+++ b/test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java\n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.NumberOfInvocationsError;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class ExactNumberOfTimesVerificationTest {\n+public class ExactNumberOfTimesVerificationTest extends RequiresValidState {\n \n     private LinkedList mock;\n     \n--- a/test/org/mockitousage/verification/NiceMessagesOnStrictOrderErrorsTest.java\n+++ b/test/org/mockitousage/verification/NiceMessagesOnStrictOrderErrorsTest.java\n import org.mockito.*;\n import org.mockito.exceptions.*;\n import org.mockito.internal.StateResetter;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n-public class NiceMessagesOnStrictOrderErrorsTest {\n+public class NiceMessagesOnStrictOrderErrorsTest extends RequiresValidState {\n     \n     private IMethods one;\n     private IMethods two;\n--- a/test/org/mockitousage/verification/NiceMessagesWhenVerificationFailsTest.java\n+++ b/test/org/mockitousage/verification/NiceMessagesWhenVerificationFailsTest.java\n \n import static org.junit.Assert.*;\n import static org.mockito.CrazyMatchers.aryEq;\n+import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n import org.junit.*;\n import org.mockito.Mockito;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n-public class NiceMessagesWhenVerificationFailsTest {\n+public class NiceMessagesWhenVerificationFailsTest extends RequiresValidState {\n     \n     private IMethods mock;\n \n--- a/test/org/mockitousage/verification/NoMoreInteractionsVerificationTest.java\n+++ b/test/org/mockitousage/verification/NoMoreInteractionsVerificationTest.java\n \n import org.junit.*;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class NoMoreInteractionsVerificationTest {\n+public class NoMoreInteractionsVerificationTest extends RequiresValidState {\n \n     private LinkedList mock;\n     \n--- a/test/org/mockitousage/verification/VerificationInOrderMixedWithOrdiraryVerificationTest.java\n+++ b/test/org/mockitousage/verification/VerificationInOrderMixedWithOrdiraryVerificationTest.java\n  */\n package org.mockitousage.verification;\n \n+import static org.junit.Assert.*;\n import static org.mockito.Mockito.*;\n \n-import static org.junit.Assert.*;\n import org.junit.*;\n import org.mockito.Strictly;\n import org.mockito.exceptions.*;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")  \n-public class VerificationInOrderMixedWithOrdiraryVerificationTest {\n+public class VerificationInOrderMixedWithOrdiraryVerificationTest extends RequiresValidState {\n     \n     private IMethods mockOne;\n     private IMethods mockTwo;\n--- a/test/org/mockitousage/verification/VerificationInOrderTest.java\n+++ b/test/org/mockitousage/verification/VerificationInOrderTest.java\n import org.junit.*;\n import org.mockito.Strictly;\n import org.mockito.exceptions.*;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")  \n-public class VerificationInOrderTest {\n+public class VerificationInOrderTest extends RequiresValidState {\n     \n     private IMethods mockOne;\n     private IMethods mockTwo;\n--- a/test/org/mockitousage/verification/VerificationOnMultipleMocksUsingMatchersTest.java\n+++ b/test/org/mockitousage/verification/VerificationOnMultipleMocksUsingMatchersTest.java\n  */\n package org.mockitousage.verification;\n \n+import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n import java.util.*;\n \n import org.junit.Test;\n import org.mockito.Mockito;\n+import org.mockito.util.RequiresValidState;\n \n @SuppressWarnings(\"unchecked\")\n-public class VerificationOnMultipleMocksUsingMatchersTest {\n+public class VerificationOnMultipleMocksUsingMatchersTest extends RequiresValidState {\n \n     @Test\n     public void shouldVerifyUsingMatchers() throws Exception {\n--- a/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n+++ b/test/org/mockitousage/verification/VerificationUsingMatchersTest.java\n  */\n package org.mockitousage.verification;\n \n+import static org.junit.Assert.*;\n import static org.mockito.CrazyMatchers.*;\n-import static org.junit.Assert.*;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.Matchers.isA;\n+import static org.mockito.Mockito.verify;\n \n import org.junit.*;\n import org.mockito.*;\n import org.mockito.exceptions.VerificationError;\n+import org.mockito.util.RequiresValidState;\n import org.mockitousage.IMethods;\n \n @SuppressWarnings(\"unchecked\")  \n-public class VerificationUsingMatchersTest {\n+public class VerificationUsingMatchersTest extends RequiresValidState {\n     private IMethods mock;\n \n     @Before", "timestamp": 1196719337, "metainfo": ""}