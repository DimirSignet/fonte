{"sha": "5a13217886884121cba6edb0f8b2bbd0f16392e1", "log": "Added one more test scenario", "commit": "\n--- a/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n+++ b/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n     @Mock private Bean mockedBean;\n \n     @InjectMocks private Service illegalInjectionExample = new Service();\n+    @InjectMocks private ServiceWithReversedOrder reversedOrderService = new ServiceWithReversedOrder();\n \n     @Test\n     public void just_for_information_fields_are_read_in_declaration_order_see_Service() {\n         assertSame(mockedBean, illegalInjectionExample.mockShouldGoInHere);\n     }\n \n+    @Test\n+    public void should_match_be_consistent_regardless_of_order() {\n+        assertSame(REFERENCE, reversedOrderService.mockShouldNotGoInHere);\n+        assertSame(mockedBean, reversedOrderService.mockShouldGoInHere);\n+    }\n+\n     public static class Bean {}\n     public static class Service {\n \n \n     }\n \n+    public static class ServiceWithReversedOrder {\n+\n+        public Bean mockShouldGoInHere;\n+\n+        public final Object mockShouldNotGoInHere = REFERENCE;\n+\n+    }\n+\n \n }", "timestamp": 1292968280, "metainfo": ""}