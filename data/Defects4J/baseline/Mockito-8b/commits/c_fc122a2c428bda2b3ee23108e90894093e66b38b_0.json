{"sha": "fc122a2c428bda2b3ee23108e90894093e66b38b", "log": "Fixed issue 182 (javadoc fix)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401977", "commit": "\n--- a/src/org/mockito/Captor.java\n+++ b/src/org/mockito/Captor.java\n  *\n  *    &#64;Before\n  *    public void init(){\n- *       MockitoAnnotations.init(this);\n+ *       MockitoAnnotations.initMocks(this);\n  *    }\n  *\n  *    &#64;Test public void shouldDoSomethingUseful() {\n--- a/src/org/mockito/Spy.java\n+++ b/src/org/mockito/Spy.java\n  *    &#64;Spy Foo spyOnFoo = new Foo();\n  *    &#64;Before\n  *    public void init(){\n- *       MockitoAnnotations.init(this);\n+ *       MockitoAnnotations.initMocks(this);\n  *    }\n  *    ...\n  * }\n  * Foo spyOnFoo = Mockito.spy(new Foo());\n  * </pre>\n  * \n- * <b>Warning</b> if you call <code>MockitoAnnotations.init(this)</code> in a\n+ * <b>Warning</b> if you call <code>MockitoAnnotations.initMocks(this)</code> in a\n  * super class <b>constructor</b> then this will not work. It is because fields\n  * in subclass are only instantiated after super class constructor has returned.\n  * It's better to use &#64;Before.", "timestamp": 1273604795, "metainfo": ""}