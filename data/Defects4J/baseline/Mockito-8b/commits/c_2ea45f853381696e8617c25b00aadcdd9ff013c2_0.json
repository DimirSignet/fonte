{"sha": "2ea45f853381696e8617c25b00aadcdd9ff013c2", "log": "more documentation added some TODOs  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40207", "commit": "\n--- a/src/org/mockito/exceptions/verification/VerificationError.java\n+++ b/src/org/mockito/exceptions/verification/VerificationError.java\n \n import org.mockito.exceptions.base.MockitoAssertionError;\n \n-\n+//TODO create specific NoInteractionsWantedError?\n public class VerificationError extends MockitoAssertionError {\n \n     private static final long serialVersionUID = 1L;\n--- a/src/org/mockito/internal/invocation/InvocationsCalculator.java\n+++ b/src/org/mockito/internal/invocation/InvocationsCalculator.java\n import org.mockito.exceptions.base.HasStackTrace;\n import org.mockito.internal.progress.VerificationMode;\n \n-//TODO refactor to an object that holds Invocations and exposes some calculations\n+//TODO refactor name to something like analyzer\n public class InvocationsCalculator {\n \n     public int countActual(List<Invocation> invocations, InvocationMatcher wanted) {\n         return actual;\n     }\n \n+    //TODO start all with find\n     public Invocation findActualInvocation(List<Invocation> invocations, InvocationMatcher wanted) {\n         Invocation actualbyName = null;\n         for (Invocation registered : invocations) {", "timestamp": 1197730577, "metainfo": ""}