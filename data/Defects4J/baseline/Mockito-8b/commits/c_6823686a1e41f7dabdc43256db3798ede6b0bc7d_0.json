{"sha": "6823686a1e41f7dabdc43256db3798ede6b0bc7d", "log": "issue 289 : quick fix to reset candidate filter for each class in the type hierarchy  --HG-- extra : transplant_source : %F6%AAg%24%7B%92%90%91J%3B.x%3CVtnA%A3%5B%B2", "commit": "\n--- a/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java\n+++ b/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java\n \n \n     public boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates) {\n-        Set<Object> mocksToBeInjected = new HashSet<Object>(mockCandidates);\n+        // Set<Object> mocksToBeInjected = new HashSet<Object>(mockCandidates);\n         FieldInitializationReport report = null;\n         try {\n             report = new FieldInitializer(fieldOwner, field).initialize();\n         Class<?> fieldClass = report.fieldClass();\n         Object fieldInstanceNeedingInjection = report.fieldInstance();\n         while (fieldClass != Object.class) {\n-            injectionOccurred |= injectMockCandidate(fieldClass, mocksToBeInjected, fieldInstanceNeedingInjection);\n+            injectionOccurred |= injectMockCandidate(fieldClass, new HashSet<Object>(mockCandidates), fieldInstanceNeedingInjection);\n             fieldClass = fieldClass.getSuperclass();\n         }\n         return injectionOccurred;\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/ChildWithSameParentFieldInjectionTest.java\n+package org.mockitousage.bugs;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+// issue 289\n+@RunWith(MockitoJUnitRunner.class)\n+public class ChildWithSameParentFieldInjectionTest {\n+    @InjectMocks\n+    private System system;\n+\n+    @Mock\n+    private SomeService someService;\n+\n+    @Test\n+    public void parent_field_is_not_null() {\n+        assertNotNull(((AbstractSystem) system).someService);\n+    }\n+\n+    @Test\n+    public void child_field_is_not_null() {\n+        assertNotNull(system.someService);\n+    }\n+\n+    public static class System extends AbstractSystem {\n+        private SomeService someService;\n+\n+        public void doSomethingElse() {\n+            someService.doSomething();\n+        }\n+    }\n+\n+    public static class AbstractSystem {\n+        private SomeService someService;\n+\n+        public void doSomething() {\n+            someService.doSomething();\n+        }\n+    }\n+\n+    public static class SomeService {\n+        public void doSomething() {\n+        }\n+    }\n+}\n--- a/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n+++ b/test/org/mockitousage/bugs/InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java\n     }\n \n     @Test\n-    public void should_not_inject_the_object() {\n+    public void should_inject_the_mock_only_once_and_in_the_correct_type() {\n         assertNull(withNullObjectField.keepMeNull);\n         assertSame(mockedBean, withNullObjectField.injectMePlease);\n     }", "timestamp": 1320439770, "metainfo": ""}