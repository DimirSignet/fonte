{"sha": "4f7060cc54bb50292ccfbf3b9fca27f0282abf51", "log": "Fixed issue 216 @Spy did not have nice names in the verification errors  --HG-- rename : test/org/mockitousage/bugs/VerifyingWithAnExtraCallToADifferentMockTest.java => test/org/mockitousage/bugs/SpyShouldHaveNiceNameTest.java extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%402110", "commit": "\n--- a/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n+++ b/src/org/mockito/internal/configuration/SpyAnnotationEngine.java\n import org.mockito.exceptions.Reporter;\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.util.MockUtil;\n+\n+import static org.mockito.Mockito.withSettings;\n \n @SuppressWarnings({\"unchecked\"})\n public class SpyAnnotationEngine implements AnnotationEngine {\n                         // instance has been spied earlier\n                         Mockito.reset(instance);\n                     } else {\n-                        field.set(testClass, Mockito.spy(instance));\n+                        field.set(testClass, Mockito.mock(instance.getClass(), withSettings()\n+                                .spiedInstance(instance)\n+                                .defaultAnswer(Mockito.CALLS_REAL_METHODS)\n+                                .name(field.getName())));\n                     }\n                 } catch (IllegalAccessException e) {\n                     throw new MockitoException(\"Problems initiating spied field \" + field.getName(), e);\n--- /dev/null\n+++ b/test/org/mockitousage/bugs/SpyShouldHaveNiceNameTest.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockitousage.bugs;\n+\n+import org.fest.assertions.Assertions;\n+import org.junit.Test;\n+import org.mockito.Spy;\n+import org.mockitoutil.TestBase;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import static org.mockito.Mockito.verify;\n+\n+//see issue 216\n+public class SpyShouldHaveNiceNameTest extends TestBase {\n+\n+    @Spy List veryCoolSpy = new LinkedList();\n+\n+    @Test\n+    public void shouldPrintNiceName() {\n+        //when\n+        veryCoolSpy.add(1);\n+\n+        try {\n+            verify(veryCoolSpy).add(2);\n+            fail();\n+        } catch(AssertionError e) {\n+            Assertions.assertThat(e.getMessage()).contains(\"veryCoolSpy\");\n+        }\n+    }\n+}", "timestamp": 1283451783, "metainfo": ""}