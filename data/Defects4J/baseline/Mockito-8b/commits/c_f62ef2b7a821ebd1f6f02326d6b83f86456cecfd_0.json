{"sha": "f62ef2b7a821ebd1f6f02326d6b83f86456cecfd", "log": "finished missing tests  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401483", "commit": "\n--- a/test/org/mockito/internal/matchers/LocalizedMatcherTest.java\n+++ b/test/org/mockito/internal/matchers/LocalizedMatcherTest.java\n package org.mockito.internal.matchers;\n \n import org.hamcrest.Matcher;\n+import org.hamcrest.StringDescription;\n import org.junit.Test;\n import org.mockitoutil.TestBase;\n \n     }\n     \n     @Test\n-    public void shouldGetSelfDescribingVerboselyTypesWhenActualMatcherHasCorrectType() throws Exception {\n+    public void shouldDescribeWithTypeInfoWhenActualMatcherHasCorrectType() throws Exception {\n         //when\n         ContainsExtraTypeInformation equals10 = new Equals(10);\n         LocalizedMatcher m = new LocalizedMatcher((Matcher) equals10);\n         \n         //then\n-        assertTrue(m.typeMatches(10));\n-        assertFalse(m.typeMatches(10L));\n+        //TODO: find usages of StringDescription and use static method\n+        assertEquals(\"(Integer) 10\", StringDescription.toString(m.withExtraTypeInfo()));\n+    }\n+    \n+    @Test\n+    public void shouldNotDescribeWithTypeInfoWhenActualMatcherDoesNotHaveCorrectType() throws Exception {\n+        //when\n+        LocalizedMatcher m = new LocalizedMatcher(Any.ANY);\n+        \n+        //then\n+        assertSame(m, m.withExtraTypeInfo());\n     }\n }", "timestamp": 1244408859, "metainfo": ""}