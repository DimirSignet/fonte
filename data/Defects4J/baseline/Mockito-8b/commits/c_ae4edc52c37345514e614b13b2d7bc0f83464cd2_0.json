{"sha": "ae4edc52c37345514e614b13b2d7bc0f83464cd2", "log": "Tiny javadoc fixes  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401055", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * System.out.println(mock.someMethod(\"some arg\"));\n  * </pre>\n  * \n+ * Alternative, shorter version of consecutive stubbing:\n+ * \n+ * <pre>\n+ * when(mock.someMethod(\"some arg\"))\n+ *   .thenReturn(\"one\", \"two\", \"three\");\n+ * </pre>\n+ * \n  * <h3> 11. Stubbing with callbacks</h3>\n  * \n  * Allows stubbing with generic {@link Answer} interface.\n      *  .thenThrow(new RuntimeException())\n      *  .thenReturn(\"foo\");\n      *  \n-     * //shorter version for consecutive method calls returning some values:\n+     * //Alternative, shorter version for consecutive stubbing:\n      * when(mock.someMethod(\"some arg\"))\n-     *  .thenReturn(\"foo\", \"bar\");\n+     *  .thenReturn(\"one\", \"two\");\n      * //is the same as:\n      * when(mock.someMethod(\"some arg\"))\n-     *  .thenReturn(\"foo\")\n-     *  .thenReturn(\"bar\");\n+     *  .thenReturn(\"one\")\n+     *  .thenReturn(\"two\");\n      *   \n      * </pre>\n      * ", "timestamp": 1225320536, "metainfo": ""}