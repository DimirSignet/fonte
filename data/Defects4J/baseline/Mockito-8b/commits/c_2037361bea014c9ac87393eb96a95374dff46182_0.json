{"sha": "2037361bea014c9ac87393eb96a95374dff46182", "log": "Fixed issue 138 again, hopefully this time forever :)  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401973", "commit": "\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n         //if verificationMode is not null then someone is doing verify()        \n         if (verificationMode != null) {\n             //We need to check if verification was started on the correct mock \n-            // - see VerifyingWithAnExtraCallToADifferentMockTest\n-            if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {\n+            // - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138)\n+            if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                \n                 VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);            \n                 verificationMode.verify(data);\n                 return null;\n+            } else {\n+                // this means there is an invocation on a different mock. Re-adding verification mode \n+                // - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138)\n+                mockingProgress.verificationStarted(verificationMode);\n             }\n         }\n         \n             // mocks / spies.\n             // Without it, the real method inside 'when' might have delegated\n             // to other self method and overwrite the intended stubbed method\n-            // with a different one.\n+            // with a different one. The reset is required to avoid runtime exception that validates return type with stubbed method signature.\n             invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);\n             return ret;\n         }\n--- a/test/org/mockitousage/bugs/VerifyingWithAnExtraCallToADifferentMockTest.java\n+++ b/test/org/mockitousage/bugs/VerifyingWithAnExtraCallToADifferentMockTest.java\n \n import org.junit.Test;\n import org.mockito.Mock;\n+import org.mockito.exceptions.verification.NeverWantedButInvoked;\n import org.mockitousage.IMethods;\n import org.mockitoutil.TestBase;\n \n         \n         //then\n         verify(mockTwo).simpleMethod(mock.otherMethod());\n+        try {\n+            verify(mockTwo, never()).simpleMethod(mock.otherMethod());\n+            fail();\n+        } catch (NeverWantedButInvoked e) {}\n     }\n }", "timestamp": 1273604507, "metainfo": ""}