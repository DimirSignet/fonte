{"sha": "97f307633481afa3e955a74c9e264540cfa671fd", "log": "Cleaned up some tests", "commit": "\n--- a/test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java\n+++ b/test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java\n \n package org.mockitousage.bugs;\n \n-import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.internal.TextListener;\n+import org.junit.runner.JUnitCore;\n+import org.junit.runner.Result;\n import org.junit.runner.RunWith;\n import org.mockito.runners.MockitoJUnitRunner;\n import org.mockitoutil.TestBase;\n \n-@RunWith(MockitoJUnitRunner.class)\n-@Ignore(\"for demo only. this test cannot be enabled as it fails :)\")\n+\n+// @Ignore(\"for demo only. this test cannot be enabled as it fails :)\")\n public class MockitoRunnerBreaksWhenNoTestMethodsTest extends TestBase {\n-    public void notATestMethod() {}\n+\n+    @Test\n+    public void ensure_the_test_runner_breaks() throws Exception {\n+        JUnitCore runner = new JUnitCore();\n+        runner.addListener(new TextListener(System.out));\n+\n+        Result result = runner.run(TestClassWithoutTestMethod.class);\n+\n+        assertEquals(1, result.getFailureCount());\n+        assertFalse(result.wasSuccessful());\n+    }\n+\n+    @RunWith(MockitoJUnitRunner.class)\n+    static class TestClassWithoutTestMethod { // package visibility is important\n+        public void notATestMethod() { }\n+    }\n+\n }", "timestamp": 1346959443, "metainfo": ""}