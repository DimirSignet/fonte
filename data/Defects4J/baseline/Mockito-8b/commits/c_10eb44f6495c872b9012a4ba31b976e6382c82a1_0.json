{"sha": "10eb44f6495c872b9012a4ba31b976e6382c82a1", "log": "In order to prepare Mockito for new feature: printing invocations for debugging In the middle of refactoring  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401722", "commit": "\n--- a/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n+++ b/src/org/mockito/internal/debugging/MockitoDebuggerImpl.java\n         System.out.println(\"*** Mockito interactions log ***\");\n         System.out.println(\"********************************\");\n         for(Invocation i:invocations) {\n-            //TODO: this is very ugly\n             System.out.println(i.toString());\n             System.out.println(\" invoked: \" + i.getLocation());\n             if (i.stubInfo() != null) {\n                 System.out.println(\" stubbed: \" + i.stubInfo().stubbingLocation());\n             }\n         }\n+//        System.out.println(\"********************************\");\n+//        System.out.println(\"***       Unused stubs       ***\");\n+//        System.out.println(\"********************************\");        \n+//        List<Invocation> invocations = finder.getAllUnusedStubs(asList(mocks));\n     }\n }\n--- a/src/org/mockito/internal/invocation/Invocation.java\n+++ b/src/org/mockito/internal/invocation/Invocation.java\n     private boolean verifiedInOrder;\n \n     final RealMethod realMethod;\n+    private StubInfo stubInfo;\n \n     public Invocation(Object mock, MockitoMethod mockitoMethod, Object[] args, int sequenceNumber, RealMethod realMethod) {\n         this.method = mockitoMethod;\n     }\n \n     public StubInfo stubInfo() {\n-        return new StubInfo();\n+        return stubInfo;\n+    }\n+\n+    public void markStubbed(StubInfo stubInfo) {\n+        this.stubInfo = stubInfo;\n     }\n }\n--- a/src/org/mockito/internal/invocation/StubInfo.java\n+++ b/src/org/mockito/internal/invocation/StubInfo.java\n package org.mockito.internal.invocation;\n \n-public class StubInfo {\n+import java.io.Serializable;\n+\n+public class StubInfo implements Serializable {\n+    private Invocation stubbing;\n+\n+    public StubInfo(Invocation stubbing) {\n+        this.stubbing = stubbing;\n+    }\n+\n     public String stubbingLocation() {\n-        return \"foooo!\";\n+        return stubbing.getLocation().toString();\n     }\n-}\n+}\n--- a/src/org/mockito/internal/stubbing/MockitoStubber.java\n+++ b/src/org/mockito/internal/stubbing/MockitoStubber.java\n \n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n+import org.mockito.internal.invocation.StubInfo;\n import org.mockito.internal.progress.MockingProgress;\n import org.mockito.internal.stubbing.answers.AnswersValidator;\n import org.mockito.internal.verification.RegisteredInvocations;\n import org.mockito.stubbing.Answer;\n-\n-import javax.management.openmbean.CompositeData;\n \n @SuppressWarnings(\"unchecked\")\n public class MockitoStubber implements Serializable {\n     public StubbedInvocationMatcher findAnswerFor(Invocation invocation) {\n         for (StubbedInvocationMatcher s : stubbed) {\n             if (s.matches(invocation)) {\n+                invocation.markStubbed(new StubInfo(s.getInvocation()));\n+                s.markStubUsed(invocation);\n                 return s;\n             }\n         }\n--- a/src/org/mockito/internal/stubbing/StubbedInvocationMatcher.java\n+++ b/src/org/mockito/internal/stubbing/StubbedInvocationMatcher.java\n import java.util.Queue;\n import java.util.concurrent.ConcurrentLinkedQueue;\n \n+import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.invocation.InvocationOnMock;\n import org.mockito.stubbing.Answer;\n         answers.add(answer);\n     }\n \n+    public void markStubUsed(Invocation where) {\n+        //TODO\n+    }\n+\n     @Override\n     public String toString() {\n         return super.toString() + \" stubbed with: \" + answers;\n--- a/src/org/mockito/internal/verification/RegisteredInvocations.java\n+++ b/src/org/mockito/internal/verification/RegisteredInvocations.java\n import java.util.List;\n \n import org.mockito.internal.invocation.Invocation;\n+import org.mockito.internal.invocation.StubInfo;\n import org.mockito.internal.util.ListUtil;\n import org.mockito.internal.util.ListUtil.Filter;\n \n     }\n \n     public void removeLast() {\n-        invocations.remove(invocations.size()-1);\n+        int last = invocations.size() - 1;\n+        invocations.remove(last);\n     }\n \n     public List<Invocation> getAll() {\n         return ListUtil.filter(new LinkedList<Invocation>(invocations), new RemoveToString());\n     }\n-    \n+\n     private static class RemoveToString implements Filter<Invocation> {\n         public boolean isOut(Invocation invocation) {\n             return Invocation.isToString(invocation);", "timestamp": 1258316277, "metainfo": ""}