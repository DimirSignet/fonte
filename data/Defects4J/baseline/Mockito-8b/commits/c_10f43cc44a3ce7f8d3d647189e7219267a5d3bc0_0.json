{"sha": "10f43cc44a3ce7f8d3d647189e7219267a5d3bc0", "log": "Fixed issue 32 Invalid state was not detected on mock/spy creation  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401083", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n     }\n     \n     private static <T> T mock(Class<T> classToMock, String name, T optionalInstance, ReturnValues returnValues) {\n+        MOCKING_PROGRESS.validateState();\n         return MockUtil.createMock(classToMock, MOCKING_PROGRESS, name, optionalInstance, returnValues);\n     }    \n \n      * @return a spy of the real object\n      */\n     public static <T> T spy(T object) {\n-        return MockUtil.createMock((Class<T>) object.getClass(), MOCKING_PROGRESS, null, object, USING_GLOBAL_CONFIG);\n+        return mock((Class<T>) object.getClass(), null, object, USING_GLOBAL_CONFIG);\n     }\n \n     /**\n--- a/test/org/mockitousage/misuse/InvalidStateDetectionTest.java\n+++ b/test/org/mockitousage/misuse/InvalidStateDetectionTest.java\n \n         when(mock.simpleMethod());\n         detectsAndCleansUp(new OnDoAnswer(), UnfinishedStubbingException.class);\n+        \n+        when(mock.simpleMethod());\n+        detectsAndCleansUp(new OnMockCreation(), UnfinishedStubbingException.class);\n+        \n+        when(mock.simpleMethod());\n+        detectsAndCleansUp(new OnSpyCreation(), UnfinishedStubbingException.class);\n     }\n     \n     @Test\n     private static class OnMethodCallOnMock implements DetectsInvalidState {\n         public void detect(IMethods mock) {\n             mock.simpleMethod();\n+        }\n+    }\n+    \n+    private static class OnMockCreation implements DetectsInvalidState {\n+        public void detect(IMethods mock) {\n+            mock(IMethods.class);\n+        }\n+    }\n+    \n+    private static class OnSpyCreation implements DetectsInvalidState {\n+        public void detect(IMethods mock) {\n+            spy(new Object());\n         }\n     }\n     ", "timestamp": 1226532132, "metainfo": ""}