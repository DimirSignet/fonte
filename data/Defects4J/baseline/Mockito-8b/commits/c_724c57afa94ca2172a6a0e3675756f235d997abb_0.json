{"sha": "724c57afa94ca2172a6a0e3675756f235d997abb", "log": "Added TODOs, fixed javadocs  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401978", "commit": "\n--- a/src/org/mockito/Mockito.java\n+++ b/src/org/mockito/Mockito.java\n  * <p>\n  * It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system.\n  * <p>\n+ * Not yet implemented to work with InOrder verification.\n+ * <p>\n  * Examples:\n  * <p>\n  * <pre>\n      * Allows verifying with timeout. May be useful for testing in concurrent conditions.\n      * <p>\n      * It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system\n+     * <p>\n+     * Not yet implemented to work with InOrder verification.\n      * <pre>\n      *   //passes when someMethod() is called within given time span \n      *   verify(mock, timeout(100)).someMethod();\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n         if (verificationMode != null) {\n             //We need to check if verification was started on the correct mock \n             // - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138)\n+            //TODO: can I avoid this cast here?\n             if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                \n                 VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);            \n                 verificationMode.verify(data);\n--- a/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n+++ b/src/org/mockito/internal/verification/VerificationWithTimeoutImpl.java\n package org.mockito.internal.verification;\n \n import org.mockito.exceptions.base.MockitoAssertionError;\n-import org.mockito.exceptions.base.MockitoException;\n import org.mockito.internal.verification.api.VerificationData;\n import org.mockito.verification.VerificationMode;\n \n--- a/test/org/mockitousage/verification/VerificationWithTimeoutTest.java\n+++ b/test/org/mockitousage/verification/VerificationWithTimeoutTest.java\n  */\n package org.mockitousage.verification;\n \n+import static org.mockito.Matchers.*;\n import static org.mockito.Mockito.*;\n \n import java.util.LinkedList;\n import java.util.List;\n \n import org.junit.After;\n+import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.InOrder;\n import org.mockito.Mock;\n-import org.mockito.Mockito;\n import org.mockito.exceptions.base.MockitoAssertionError;\n import org.mockito.exceptions.verification.NoInteractionsWanted;\n import org.mockito.exceptions.verification.TooLittleActualInvocations;\n             fail();\n         } catch (NoInteractionsWanted e) {}\n     }\n+    \n+    //TODO not yet implemented\n+    @Ignore\n+    @Test\n+    public void shouldAllowTimeoutVerificationInOrder() throws Exception {\n+        //given\n+        Thread t1 = waitAndExerciseMock(20);        \n+        \n+        //when\n+        t1.start();\n+        mock.add(\"foo\");\n+        \n+        //then\n+        InOrder inOrder = inOrder(mock);\n+        inOrder.verify(mock).add(anyString());\n+        inOrder.verify(mock, never()).clear();\n+        inOrder.verify(mock, timeout(40)).clear();                             \n+    }\n \n     private Thread waitAndExerciseMock(final int sleep) {\n         Thread t = new Thread() { ", "timestamp": 1273639020, "metainfo": ""}