{"sha": "041c06f6987ab4a07cd3c99db844574101e4baca", "log": "Refactored to make things simpler  --HG-- extra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401422", "commit": "\n--- a/src/org/mockito/internal/MockHandler.java\n+++ b/src/org/mockito/internal/MockHandler.java\n import java.lang.reflect.Method;\n import java.util.List;\n \n+import net.sf.cglib.proxy.MethodInterceptor;\n import net.sf.cglib.proxy.MethodProxy;\n \n-import org.mockito.internal.creation.MockAwareInterceptor;\n import org.mockito.internal.creation.MockSettingsImpl;\n import org.mockito.internal.invocation.Invocation;\n import org.mockito.internal.invocation.InvocationMatcher;\n  *\n  * @param <T> type of mock object to handle\n  */\n-public class MockHandler<T> implements MockAwareInterceptor<T> {\n+public class MockHandler<T> implements MethodInterceptor {\n \n     private final RegisteredInvocations registeredInvocations;\n     private final MockitoStubber mockitoStubber;\n     public void setAnswersForStubbing(List<Answer> answers) {\n         mockitoStubber.setAnswersForStubbing(answers);\n     }\n-\n-    public MockSettingsImpl getMockSettings() {\n-        return mockSettings;\n-    }\n }\n--- a/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n+++ b/src/org/mockito/internal/creation/MethodInterceptorFilter.java\n \n import org.mockito.internal.creation.cglib.CGLIBHacker;\n \n+import net.sf.cglib.proxy.MethodInterceptor;\n import net.sf.cglib.proxy.MethodProxy;\n \n @SuppressWarnings(\"unchecked\")\n-public class MethodInterceptorFilter<T extends MockAwareInterceptor> implements MockAwareInterceptor {\n+public class MethodInterceptorFilter<T extends MethodInterceptor> implements MethodInterceptor {\n     \n     private final Method equalsMethod;\n     private final Method hashCodeMethod;", "timestamp": 1242141969, "metainfo": ""}