{"sha": "a4f14b52c78f924d47e77d9a72606357c1bcea43", "log": "Copied the Discrepancy class to a private package. Left the deprecated variant just in case some uses it (however I think it's unlikely).  --HG-- rename : src/org/mockito/exceptions/Discrepancy.java => src/org/mockito/internal/reporting/Discrepancy.java", "commit": "\n--- a/src/org/mockito/exceptions/Discrepancy.java\n+++ b/src/org/mockito/exceptions/Discrepancy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.exceptions;\n \n-public class Discrepancy {\n-\n-    private final int wantedCount;\n-    private final int actualCount;\n-\n+@Deprecated\n+/**\n+ * @Deprecated. This class has been moved to internal packages because it was never meant to be public.\n+ * If you need it for extending Mockito please let us know. You can still use {@link org.mockito.internal.reporting.Discrepancy}.\n+ * However, the package clearly states that the class in a part of a public API so it can change.\n+ */\n+public class Discrepancy extends org.mockito.internal.reporting.Discrepancy {\n     public Discrepancy(int wantedCount, int actualCount) {\n-        this.wantedCount = wantedCount;\n-        this.actualCount = actualCount;\n-    }\n-\n-    public int getWantedCount() {\n-        return wantedCount;\n-    }\n-    \n-    public String getPluralizedWantedCount() {\n-        return Pluralizer.pluralize(wantedCount);\n-    }\n-\n-    public int getActualCount() {\n-        return actualCount;\n-    }\n-\n-    public String getPluralizedActualCount() {\n-        return Pluralizer.pluralize(actualCount);\n+        super(wantedCount, actualCount);\n     }\n }\n--- a/src/org/mockito/exceptions/Reporter.java\n+++ b/src/org/mockito/exceptions/Reporter.java\n                 ));\n     }\n \n-    private String createTooLittleInvocationsMessage(Discrepancy discrepancy, PrintableInvocation wanted,\n+    private String createTooLittleInvocationsMessage(org.mockito.internal.reporting.Discrepancy discrepancy, PrintableInvocation wanted,\n             Location lastActualInvocation) {\n         String ending =\n             (lastActualInvocation != null)? lastActualInvocation + \"\\n\" : \"\\n\";\n             return message;\n     }\n \n-    public void tooLittleActualInvocations(Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n+    public void tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n         String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);\n \n         throw new TooLittleActualInvocations(message);\n     }\n \n-    public void tooLittleActualInvocationsInOrder(Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n+    public void tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n         String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);\n \n         throw new VerificationInOrderFailure(join(\n--- /dev/null\n+++ b/src/org/mockito/internal/reporting/Discrepancy.java\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n+package org.mockito.internal.reporting;\n+\n+public class Discrepancy {\n+\n+    private final int wantedCount;\n+    private final int actualCount;\n+\n+    public Discrepancy(int wantedCount, int actualCount) {\n+        this.wantedCount = wantedCount;\n+        this.actualCount = actualCount;\n+    }\n+\n+    public int getWantedCount() {\n+        return wantedCount;\n+    }\n+    \n+    public String getPluralizedWantedCount() {\n+        return Pluralizer.pluralize(wantedCount);\n+    }\n+\n+    public int getActualCount() {\n+        return actualCount;\n+    }\n+\n+    public String getPluralizedActualCount() {\n+        return Pluralizer.pluralize(actualCount);\n+    }\n+}\n--- a/src/org/mockito/internal/verification/checkers/AtLeastDiscrepancy.java\n+++ b/src/org/mockito/internal/verification/checkers/AtLeastDiscrepancy.java\n-/*\n- * Copyright (c) 2007 Mockito contributors\n- * This program is made available under the terms of the MIT License.\n- */\n+/*\n+ * Copyright (c) 2007 Mockito contributors\n+ * This program is made available under the terms of the MIT License.\n+ */\n package org.mockito.internal.verification.checkers;\n \n-import org.mockito.exceptions.Discrepancy;\n+import org.mockito.internal.reporting.Discrepancy;\n \n public class AtLeastDiscrepancy extends Discrepancy {\n \n--- a/src/org/mockito/internal/verification/checkers/NonGreedyNumberOfInvocationsInOrderChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/NonGreedyNumberOfInvocationsInOrderChecker.java\n \n package org.mockito.internal.verification.checkers;\n \n-import org.mockito.exceptions.Discrepancy;\n import org.mockito.exceptions.Reporter;\n import org.mockito.internal.invocation.InvocationMarker;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n+import org.mockito.internal.reporting.Discrepancy;\n import org.mockito.internal.verification.api.InOrderContext;\n import org.mockito.invocation.Invocation;\n import org.mockito.invocation.Location;\n--- a/src/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java\n \n import java.util.List;\n \n-import org.mockito.exceptions.Discrepancy;\n import org.mockito.exceptions.Reporter;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationMarker;\n import org.mockito.internal.invocation.InvocationsFinder;\n+import org.mockito.internal.reporting.Discrepancy;\n import org.mockito.invocation.Invocation;\n import org.mockito.invocation.Location;\n \n--- a/src/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java\n+++ b/src/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java\n \n import java.util.List;\n \n-import org.mockito.exceptions.Discrepancy;\n import org.mockito.exceptions.Reporter;\n import org.mockito.internal.invocation.InvocationMarker;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.internal.invocation.InvocationsFinder;\n+import org.mockito.internal.reporting.Discrepancy;\n import org.mockito.internal.verification.api.InOrderContext;\n import org.mockito.invocation.Invocation;\n import org.mockito.invocation.Location;\n--- a/test/org/mockito/exceptions/ReporterTest.java\n+++ b/test/org/mockito/exceptions/ReporterTest.java\n import org.mockito.exceptions.base.MockitoException;\n import org.mockito.exceptions.verification.TooLittleActualInvocations;\n import org.mockito.internal.invocation.InvocationBuilder;\n+import org.mockito.internal.reporting.*;\n import org.mockitoutil.TestBase;\n \n public class ReporterTest extends TestBase {\n \n     @Test(expected=TooLittleActualInvocations.class)\n     public void shouldLetPassingNullLastActualStackTrace() throws Exception {\n-        new Reporter().tooLittleActualInvocations(new Discrepancy(1, 2), new InvocationBuilder().toInvocation(), null);\n+        new Reporter().tooLittleActualInvocations(new org.mockito.internal.reporting.Discrepancy(1, 2), new InvocationBuilder().toInvocation(), null);\n     }\n     \n     @Test(expected=MockitoException.class)\n--- a/test/org/mockito/internal/verification/checkers/NumberOfInvocationsCheckerTest.java\n+++ b/test/org/mockito/internal/verification/checkers/NumberOfInvocationsCheckerTest.java\n \n import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.exceptions.Discrepancy;\n import org.mockito.exceptions.PrintableInvocation;\n import org.mockito.exceptions.Reporter;\n-import org.mockito.internal.invocation.InvocationImpl;\n import org.mockito.internal.invocation.InvocationBuilder;\n import org.mockito.internal.invocation.InvocationMatcher;\n import org.mockito.invocation.Invocation;\n         private int actualCount;\n         private PrintableInvocation wanted;\n         private Location location;\n-        @Override public void tooLittleActualInvocations(Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n+        @Override public void tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy discrepancy, PrintableInvocation wanted, Location lastActualLocation) {\n                     this.wantedCount = discrepancy.getWantedCount();\n                     this.actualCount = discrepancy.getActualCount();\n                     this.wanted = wanted;", "timestamp": 1333283250, "metainfo": ""}