{"sha": "592b16b06a1574bce647975c5f1cc24354b814a4", "log": "Emit error when stripping a type or a name from the left hand side of an assignment in a complex expression.  R=nicksantos DELTA=31  (27 added, 1 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=78011   ", "commit": "\n--- a/src/com/google/javascript/jscomp/StripCode.java\n+++ b/src/com/google/javascript/jscomp/StripCode.java\n   static final DiagnosticType STRIP_TYPE_INHERIT_ERROR = DiagnosticType.error(\n       \"JSC_STRIP_TYPE_INHERIT_ERROR\",\n       \"Non-strip type {0} cannot inherit from strip type {1}\");\n+\n+  static final DiagnosticType STRIP_ASSIGNMENT_ERROR = DiagnosticType.error(\n+      \"JSC_STRIP_ASSIGNMENT_ERROR\",\n+      \"Unable to strip assignment to {0}\");\n \n   /**\n    * Creates an instance.\n       Node lvalue = n.getFirstChild();\n       if (nameEndsWithFieldNameToStrip(lvalue) ||\n           qualifiedNameBeginsWithStripType(lvalue)) {\n+\n+        // Limit to EXPR_RESULT because it is not\n+        // safe to eliminate assignment in complex expressions,\n+        // e.g. in ((x = 7) + 8)\n         if (NodeUtil.isExpressionNode(parent)) {\n           Node gramps = parent.getParent();\n           replaceWithEmpty(parent, gramps);\n+          compiler.reportCodeChange();\n         } else {\n-          replaceWithEmpty(n, parent);\n-        }\n-        compiler.reportCodeChange();\n+          t.report(n, STRIP_ASSIGNMENT_ERROR, lvalue.getQualifiedName());\n+        }\n       }\n     }\n \n--- a/test/com/google/javascript/jscomp/StripCodeTest.java\n+++ b/test/com/google/javascript/jscomp/StripCodeTest.java\n         \"goog.debug.Logger\",\n         \"goog.debug.LogManager\",\n         \"goog.debug.LogRecord\",\n-        \"goog.net.BrowserChannel.LogSaver\");\n+        \"goog.net.BrowserChannel.LogSaver\",\n+        \"GA_GoogleDebugger\");\n \n     Set<String> stripNames = Sets.newHashSet(\n         \"logger\",\n          \"  var one = this.logger_(); if (one) foo() }\",\n           \"a=function(){};a.prototype.b=function(){if(null)foo()}\");\n   }\n+\n+  public void testReportErrorOnStripInNestedAssignment() {\n+    // Strip name\n+    test(\"(foo.logger_ = 7) + 8\",\n+         \"(foo.logger_ = 7) + 8\",\n+         StripCode.STRIP_ASSIGNMENT_ERROR);\n+\n+    // Strip namespaced type\n+    test(\"(goog.debug.Logger.foo = 7) + 8\",\n+         \"(goog.debug.Logger.foo = 7) + 8\",\n+         StripCode.STRIP_ASSIGNMENT_ERROR);\n+\n+    // Strip non-namespaced type\n+    test(\"(GA_GoogleDebugger.foo = 7) + 8\",\n+         \"(GA_GoogleDebugger.foo = 7) + 8\",\n+         StripCode.STRIP_ASSIGNMENT_ERROR);\n+  }\n }", "timestamp": 1280770839, "metainfo": ""}