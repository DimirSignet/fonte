{"sha": "72988fec494186d46dff8b78de682fd1c5c191e7", "log": "Change on 2010/04/23 by alan          Fix alias externs thinking new x(y) mutables y.          R=john         DELTA=13  (9 added, 1 deleted, 3 changed)    Revision created by MOE tool push_codebase. MOE_MIGRATION=mabwho   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AliasExternals.java\n+++ b/src/com/google/javascript/jscomp/AliasExternals.java\n \n         Property global = globals.get(name);\n         if (global != null) {\n+          boolean isFirst = parent.getFirstChild() == n;\n           // If a global is being assigned to or otherwise modified, then we\n           // don't want to alias it.\n           // Using \"new\" with this global is not a mutator, but it's also\n           // something that we want to avoid when aliasing, since we may be\n           // dealing with external objects (e.g. ActiveXObject in MSIE)\n-          if ((NodeUtil.isAssignmentOp(parent) &&\n-              parent.getFirstChild() == n) ||\n+          if ((NodeUtil.isAssignmentOp(parent) && isFirst) ||\n+              (parent.getType() == Token.NEW && isFirst) ||\n               parent.getType() == Token.INC ||\n-              parent.getType() == Token.DEC ||\n-              parent.getType() == Token.NEW) {\n+              parent.getType() == Token.DEC) {\n             global.recordMutator(t);\n           } else {\n             global.recordAccessor(t);\n--- a/test/com/google/javascript/jscomp/AliasExternalsTest.java\n+++ b/test/com/google/javascript/jscomp/AliasExternalsTest.java\n          \"window++\");\n   }\n \n+  public void testNewOperator() {\n+    test(\"var x;new x(window);window;window;window;window;window\",\n+        \n+         \"var GLOBAL_window=window; var x;\" +\n+         \"  new x(GLOBAL_window);GLOBAL_window;GLOBAL_window;\" +\n+         \"  GLOBAL_window;GLOBAL_window;GLOBAL_window\");\n+  }\n+  \n   /**\n    * Test the standard replacement for GETPROP\n    */", "timestamp": 1272304460, "metainfo": ""}