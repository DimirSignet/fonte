{"sha": "9d5a6e3082dd99f6c44df1b3526b9e83b79aa7da", "log": "Fix a jsdoc parser bug where it was dropping the EndOfComment token Fixes issue 477  R=acleung DELTA=15  (12 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2193   ", "commit": "\n--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java\n                         }\n                         break;\n                     }\n-\n-                    token = eatTokensUntilEOL();\n-                  }\n+                  }\n+\n+                  token = eatTokensUntilEOL();\n                   continue retry;\n               }\n             }\n       }\n     }\n \n+    restoreLookAhead(token);\n     return reportGenericTypeSyntaxWarning();\n   }\n \n     // NOTE(nicksantos): We're not implementing generics at the moment, so\n     // just throw out TypeParameters.\n     if (token != JsDocToken.LP) {\n+      restoreLookAhead(token);\n       return reportTypeSyntaxWarning(\"msg.jsdoc.missing.lp\");\n     }\n \n--- a/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java\n+++ b/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java\n   public void testBug1419535() throws Exception {\n     parse(\"@type {function(Object, string, *)?} */\");\n     parse(\"@type {function(Object, string, *)|null} */\");\n+  }\n+\n+  public void testIssue477() throws Exception {\n+    parse(\"@type function */\",\n+        \"Bad type annotation. missing opening (\");\n+  }\n+\n+  public void testMalformedThisAnnotation() throws Exception {\n+    parse(\"@this */\",\n+        \"Bad type annotation. type not recognized due to syntax error\");\n   }\n \n   public void testParseFunctionalTypeError1() throws Exception {", "timestamp": 1307144563, "metainfo": ""}