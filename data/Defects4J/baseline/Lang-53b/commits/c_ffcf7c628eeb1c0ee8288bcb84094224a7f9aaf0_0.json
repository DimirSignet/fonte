{"sha": "ffcf7c628eeb1c0ee8288bcb84094224a7f9aaf0", "log": "simplified code by moving a chunk of the functionality up into the superclass, MutableNumber. Still important that setValue turns the Number into the correct type however, so that method may not go up into the superclass   ", "commit": "\n--- a/src/java/org/apache/commons/lang/mutable/MutableByte.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableByte.java\n  * A mutable <code>Byte</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableByte.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableByte.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableByte extends MutableNumber {\n \n-    /**\n-     * Internal value.\n-     */\n-    private byte value;\n-    \n     /**\n      * Instantiates with the specified value\n      * @param value a value.\n      */\n     public MutableByte(byte value) {\n         super();\n-        this.value = value;\n+        setValue(new Byte(value));\n     }\n \n     public void setValue(byte value) {\n-        this.value = value;\n-    }\n-\n-    public long longValue() {\n-        return this.value;\n-    }\n-\n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public int intValue() {\n-        return this.value;\n+        setValue(new Byte(value));\n     }\n \n     /**\n-     * @return a <code>Byte</code>\n-     */\n-    public Object getValue() {\n-        return new Byte(this.value);\n-    }\n-\n-    /**\n-     * @param value a <code>Byte</code>\n+     * @param value a <code>Number</code>\n      */\n     public void setValue(Object value) {\n         setValue(((Number)value).byteValue());\n--- a/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n package org.apache.commons.lang.mutable;\n \n /**\n- * A mutable <code>Double</code>\n+ * A mutable <code>Double</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableDouble.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableDouble.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableDouble extends MutableNumber {\n-\n-    /**\n-     * Internal value.\n-     */\n-    private double value;\n \n     /**\n      * Instantiates with the specified value\n      */\n     public MutableDouble(double value) {\n         super();\n-        this.value = value;\n+        setValue(new Double(value));\n     }\n \n     public void setValue(double value) {\n-        this.value = value;\n+        setValue(new Double(value));\n     }\n \n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public long longValue() {\n-        return (long)this.value;\n-    }\n-\n-    public int intValue() {\n-        return (int)this.value;\n-    }\n-\n-    public Object getValue() {\n-        return new Double(this.value);\n-    }\n-\n+    /**\n+     * @param value a <code>Number</code>\n+     */\n     public void setValue(Object value) {\n         setValue(((Number)value).doubleValue());\n     }\n--- a/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n package org.apache.commons.lang.mutable;\n \n /**\n- * A mutable <code>Float</code>\n+ * A mutable <code>Float</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableFloat.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableFloat.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableFloat extends MutableNumber {\n \n     /**\n-     * Internal value.\n-     */\n-    private float value;\n-\n-    /**\n      * Instantiates with the specified value\n-     * \n      * @param value a value.\n      */\n     public MutableFloat(float value) {\n         super();\n-        this.value = value;\n+        setValue(new Float(value));\n     }\n \n     public void setValue(float value) {\n-        this.value = value;\n+        setValue(new Float(value));\n     }\n \n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public int intValue() {\n-        return (int)this.value;\n-    }\n-\n-    public long longValue() {\n-        return (long)this.value;\n-    }\n-\n-    public Object getValue() {\n-        return new Float(this.value);\n-    }\n-\n+    /**\n+     * @param value a <code>Number</code>\n+     */\n     public void setValue(Object value) {\n         setValue(((Number)value).floatValue());\n     }\n--- a/src/java/org/apache/commons/lang/mutable/MutableInteger.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableInteger.java\n  * A mutable <code>Integer</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableInteger.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableInteger.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableInteger extends MutableNumber {\n \n     /**\n-     * Internal value.\n-     */\n-    private int value;\n-\n-    /**\n      * Instantiates with the specified value\n-     * \n      * @param value a value.\n      */\n     public MutableInteger(int value) {\n         super();\n-        this.value = value;\n+        setValue(new Integer(value));\n     }\n \n     public void setValue(int value) {\n-        this.value = value;\n+        setValue(new Integer(value));\n     }\n \n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public long longValue() {\n-        return this.value;\n-    }\n-\n-    public int intValue() {\n-        return this.value;\n-    }\n-\n-    public Object getValue() {\n-        return new Float(this.value);\n-    }\n-\n+    /**\n+     * @param value a <code>Number</code>\n+     */\n     public void setValue(Object value) {\n         setValue(((Number)value).intValue());\n     }\n--- a/src/java/org/apache/commons/lang/mutable/MutableLong.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableLong.java\n package org.apache.commons.lang.mutable;\n \n /**\n- * A mutable <code>Long</code>\n+ * A mutable <code>Long</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableLong.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableLong.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableLong extends MutableNumber {\n-\n-    /**\n-     * Internal value.\n-     */\n-    private long value;\n \n     /**\n      * Instantiates with the specified value\n      */\n     public MutableLong(long value) {\n         super();\n-        setValue(value);\n+        setValue(new Long(value));\n     }\n \n     public void setValue(long value) {\n-        this.value = value;\n+        setValue(new Long(value));\n     }\n \n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public long longValue() {\n-        return this.value;\n-    }\n-\n-    public int intValue() {\n-        return (int)this.value;\n-    }\n-\n-    public Object getValue() {\n-        return new Long(this.value);\n-    }\n-\n+    /**\n+     * @param value a <code>Number</code>\n+     */\n     public void setValue(Object value) {\n         setValue(((Number)value).longValue());\n     }\n--- a/src/java/org/apache/commons/lang/mutable/MutableNumber.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableNumber.java\n  * A mutable <code>Number</code>.\n  *\n  * @since 2.1\n- * @version $Id: MutableNumber.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableNumber.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public abstract class MutableNumber\n     extends Number\n     implements Comparable, Mutable, Serializable {\n \n-    MutableNumber() {\n+    private Number value;\n+\n+    public MutableNumber() {\n         super();\n+    }\n+\n+    /**\n+     * @param a <code>Number</code>\n+     */\n+    protected void setValue(Number value) {\n+        this.value = value;\n     }\n \n     // ----------------------------------------------------------------\n     // ----------------------------------------------------------------\n \n     public float floatValue() {\n-        return (float)doubleValue();\n+        return this.value.floatValue();\n     }\n     \n+    public long longValue() {\n+        return this.value.longValue();\n+    }\n+\n+    public double doubleValue() {\n+        return this.value.doubleValue();\n+    }\n+\n+    public int intValue() {\n+        return this.value.intValue();\n+    }\n+\n+    // ----------------------------------------------------------------\n+    // Mutable overrides\n+    // ----------------------------------------------------------------\n+\n+    /**\n+     * @return a <code>Number</code>\n+     */\n+    public Object getValue() {\n+        return this.value;\n+    }\n     // ----------------------------------------------------------------\n     // Object overrides\n     // ----------------------------------------------------------------\n     }\n \n     public int hashCode() {\n-        return super.hashCode();\n+        return this.value.hashCode();\n     }\n \n     /**\n      * @see #compareTo(Object)\n      */\n     public boolean equals(Object obj) {\n-        return super.equals(obj);\n+        return this.value.equals(obj);\n     }\n \n     // ----------------------------------------------------------------\n--- a/src/java/org/apache/commons/lang/mutable/MutableShort.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableShort.java\n package org.apache.commons.lang.mutable;\n \n /**\n- * A mutable <code>Short</code>\n+ * A mutable <code>Short</code>.\n  * \n  * @since 2.1\n- * @version $Id: MutableShort.java,v 1.1 2004/06/11 02:26:32 matth Exp $\n+ * @version $Id: MutableShort.java,v 1.2 2004/06/13 06:18:49 bayard Exp $\n  */\n public class MutableShort extends MutableNumber {\n-\n-    /**\n-     * Internal value.\n-     */\n-    private short value;\n \n     /**\n      * Instantiates with the specified value\n      */\n     public MutableShort(short value) {\n         super();\n-        this.value = value;\n+        setValue(new Short(value));\n     }\n \n     public void setValue(short value) {\n-        this.value = value;\n+        setValue(new Short(value));\n     }\n \n-    public double doubleValue() {\n-        return this.value;\n-    }\n-\n-    public int intValue() {\n-        return this.value;\n-    }\n-\n-    public long longValue() {\n-        return this.value;\n-    }\n-\n-    public Object getValue() {\n-        return new Short(this.value);\n-    }\n-\n+    /**\n+     * @param value a <code>Number</code>\n+     */\n     public void setValue(Object value) {\n         setValue(((Number)value).shortValue());\n     }", "timestamp": 1087107529, "metainfo": ""}