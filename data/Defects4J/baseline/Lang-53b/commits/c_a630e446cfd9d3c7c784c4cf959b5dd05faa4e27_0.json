{"sha": "a630e446cfd9d3c7c784c4cf959b5dd05faa4e27", "log": "Update licence date to 2003   ", "commit": "\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.ArrayUtils}.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author Moritz Petersen\n  * @author Nikolay Metchev\n- * @version $Id: ArrayUtilsTest.java,v 1.5 2003/02/04 22:06:24 scolebourne Exp $\n+ * @version $Id: ArrayUtilsTest.java,v 1.6 2003/03/23 21:47:30 scolebourne Exp $\n  */\n public class ArrayUtilsTest extends TestCase {\n \n--- a/src/test/org/apache/commons/lang/BooleanUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/BooleanUtilsTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.BooleanUtils}.\n  *\n  * @author Stephen Colebourne\n- * @version $Id: BooleanUtilsTest.java,v 1.2 2002/12/22 21:33:12 scolebourne Exp $\n+ * @version $Id: BooleanUtilsTest.java,v 1.3 2003/03/23 21:47:30 scolebourne Exp $\n  */\n public class BooleanUtilsTest extends TestCase {\n \n--- a/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.CharSetUtils}.\n  *\n  * @author <a href=\"mailto:bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: CharSetUtilsTest.java,v 1.6 2003/03/23 05:50:51 bayard Exp $\n+ * @version $Id: CharSetUtilsTest.java,v 1.7 2003/03/23 21:47:30 scolebourne Exp $\n  */\n public class CharSetUtilsTest extends TestCase\n {\n--- a/src/test/org/apache/commons/lang/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ClassUtilsTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.ClassUtils}.\n  *\n  * @author Stephen Colebourne\n- * @version $Id: ClassUtilsTest.java,v 1.2 2002/12/31 22:32:23 scolebourne Exp $\n+ * @version $Id: ClassUtilsTest.java,v 1.3 2003/03/23 21:47:30 scolebourne Exp $\n  */\n public class ClassUtilsTest extends TestCase {\n \n--- a/src/test/org/apache/commons/lang/LangTestSuite.java\n+++ b/src/test/org/apache/commons/lang/LangTestSuite.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Test suite for the Lang package.\n  *\n  * @author Stephen Colebourne\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: LangTestSuite.java,v 1.12 2002/12/29 22:09:53 scolebourne Exp $\n+ * @version $Id: LangTestSuite.java,v 1.13 2003/03/23 21:49:13 scolebourne Exp $\n  */\n public class LangTestSuite extends TestCase {\n     \n--- a/src/test/org/apache/commons/lang/NumberRangeTest.java\n+++ b/src/test/org/apache/commons/lang/NumberRangeTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n \n-\n /**\n  * Test cases for the {@link NumberRange} class.\n  *\n  * @author <a href=\"mailto:chrise@esha.com\">Christopher Elkins</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Revision: 1.3 $ $Date: 2002/11/07 16:59:44 $\n+ * @version $Revision: 1.4 $ $Date: 2003/03/23 21:49:13 $\n  */\n \n public final class NumberRangeTest extends TestCase {\n--- a/src/test/org/apache/commons/lang/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/NumberUtilsTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import java.lang.reflect.Method;\n import java.math.BigDecimal;\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.NumberUtils}.\n  *\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: NumberUtilsTest.java,v 1.4 2002/12/15 16:53:28 scolebourne Exp $\n+ * @version $Id: NumberUtilsTest.java,v 1.5 2003/03/23 21:49:13 scolebourne Exp $\n  */\n public class NumberUtilsTest extends TestCase {\n \n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n /**\n  * Unit tests {@link org.apache.commons.lang.ObjectUtils}.\n  *\n  * @author <a href=\"mailto:jmcnally@collab.net\">John McNally</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: ObjectUtilsTest.java,v 1.3 2002/09/18 20:12:15 scolebourne Exp $\n+ * @version $Id: ObjectUtilsTest.java,v 1.4 2003/03/23 21:49:13 scolebourne Exp $\n  */\n public class ObjectUtilsTest extends TestCase {\n     private static final String FOO = \"foo\";\n--- a/src/test/org/apache/commons/lang/RandomStringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/RandomStringUtilsTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *    the documentation and/or other materials provided with the\n  *    distribution.\n  *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n  *       \"This product includes software developed by the\n  *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowledgment may appear in the software itself,\n- *    if and wherever such third-party acknowledgments normally appear.\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n  *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n  *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Software Foundation.\n  *\n  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import java.util.Random;\n \n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: RandomStringUtilsTest.java,v 1.3 2003/02/02 03:46:13 bayard Exp $\n+ * @version $Id: RandomStringUtilsTest.java,v 1.4 2003/03/23 21:50:58 scolebourne Exp $\n  */\n public class RandomStringUtilsTest extends junit.framework.TestCase {\n     /**\n--- a/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: SerializationUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $\n+ * @version $Id: SerializationUtilsTest.java,v 1.2 2003/03/23 21:50:58 scolebourne Exp $\n  */\n public class SerializationUtilsTest extends TestCase {\n     private String iString;\n--- a/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: StringUtilsEqualsIndexOfTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $\n+ * @version $Id: StringUtilsEqualsIndexOfTest.java,v 1.2 2003/03/23 21:50:58 scolebourne Exp $\n  */\n public class StringUtilsEqualsIndexOfTest extends TestCase {\n     private static final String FOO = \"foo\";\n--- a/src/test/org/apache/commons/lang/StringUtilsIsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsIsTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * Unit tests {@link org.apache.commons.lang.StringUtils} - Substring methods\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: StringUtilsIsTest.java,v 1.4 2002/12/15 16:54:23 scolebourne Exp $\n+ * @version $Id: StringUtilsIsTest.java,v 1.5 2003/03/23 21:51:51 scolebourne Exp $\n  */\n public class StringUtilsIsTest extends TestCase {\n \n--- a/src/test/org/apache/commons/lang/StringUtilsSubstringTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsSubstringTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: StringUtilsSubstringTest.java,v 1.2 2002/11/27 22:53:48 bayard Exp $\n+ * @version $Id: StringUtilsSubstringTest.java,v 1.3 2003/03/23 21:51:19 scolebourne Exp $\n  */\n public class StringUtilsSubstringTest extends TestCase {\n     private static final String FOO = \"foo\";\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n- * @version $Id: StringUtilsTest.java,v 1.15 2003/03/23 05:26:23 bayard Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.16 2003/03/23 21:51:19 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n \n                      1, StringUtils.getLevenshteinDistance(\"hello\", \"hallo\") );\n     }\n \n-    public void testContainsOnly() {\n+    public void testContainsOnlyString() {\n+        String str1 = \"a\";\n+        String str2 = \"b\";\n+        String str3 = \"ab\";\n+        String chars1= \"b\";\n+        String chars2= \"a\";\n+        String chars3= \"ab\";\n+        String emptyChars = \"\";\n+        assertEquals(\"containsOnly(null, null) failed\", false, StringUtils.containsOnly(null, (String) null));\n+        assertEquals(\"containsOnly(empty-string, null) failed\", false, StringUtils.containsOnly(\"\", (String) null));\n+        assertEquals(\"containsOnly(null, empty-string) failed\", false, StringUtils.containsOnly(null, emptyChars));\n+        assertEquals(\"containsOnly(str1, empty-char-array) failed\", false, StringUtils.containsOnly(str1, emptyChars));\n+        assertEquals(\"containsOnly(empty-string, empty-char-array) failed\", true, StringUtils.containsOnly(\"\", emptyChars));\n+        assertEquals(\"containsOnly(empty-string, chars1) failed\", true, StringUtils.containsOnly(\"\", chars1));\n+        assertEquals(\"containsOnly(str1, chars1) failed\", false, StringUtils.containsOnly(str1, chars1));\n+        assertEquals(\"containsOnly(str1, chars2) success\", true, StringUtils.containsOnly(str1, chars2));\n+        assertEquals(\"containsOnly(str1, chars3) success\", true, StringUtils.containsOnly(str1, chars3));\n+        assertEquals(\"containsOnly(str2, chars1) success\", true, StringUtils.containsOnly(str2, chars1));\n+        assertEquals(\"containsOnly(str2, chars2) failed\", false, StringUtils.containsOnly(str2, chars2));\n+        assertEquals(\"containsOnly(str2, chars3) success\", true, StringUtils.containsOnly(str2, chars3));\n+        assertEquals(\"containsOnly(String3, chars1) failed\", false, StringUtils.containsOnly(str3, chars1));\n+        assertEquals(\"containsOnly(String3, chars2) failed\", false, StringUtils.containsOnly(str3, chars2));\n+        assertEquals(\"containsOnly(String3, chars3) success\", true, StringUtils.containsOnly(str3, chars3));\n+    }\n+\n+    public void testContainsOnlyCharArray() {\n         String str1 = \"a\";\n         String str2 = \"b\";\n         String str3 = \"ab\";\n         char[] chars2= {'a'};\n         char[] chars3= {'a', 'b'};\n         char[] emptyChars = new char[0];\n-        assertEquals(\"containsOnly(null, null) failed\", false, StringUtils.containsOnly(null, null));\n-        assertEquals(\"containsOnly(empty-string, null) failed\", false, StringUtils.containsOnly(\"\", null));\n+        assertEquals(\"containsOnly(null, null) failed\", false, StringUtils.containsOnly(null, (char[]) null));\n+        assertEquals(\"containsOnly(empty-string, null) failed\", false, StringUtils.containsOnly(\"\", (char[]) null));\n         assertEquals(\"containsOnly(null, empty-string) failed\", false, StringUtils.containsOnly(null, emptyChars));\n         assertEquals(\"containsOnly(str1, empty-char-array) failed\", false, StringUtils.containsOnly(str1, emptyChars));\n         assertEquals(\"containsOnly(empty-string, empty-char-array) failed\", true, StringUtils.containsOnly(\"\", emptyChars));\n         assertEquals(\"containsOnly(empty-string, chars1) failed\", true, StringUtils.containsOnly(\"\", chars1));\n         assertEquals(\"containsOnly(str1, chars1) failed\", false, StringUtils.containsOnly(str1, chars1));\n-        assertEquals(\"containsOnly(str1, chars1) failed\", false, StringUtils.containsOnly(str1, chars1));\n-        assertEquals(\"containsOnly(str1, chars1) success\", true, StringUtils.containsOnly(str1, chars2));\n-        assertEquals(\"containsOnly(str1, chars1) success\", true, StringUtils.containsOnly(str1, chars3));\n-        assertEquals(\"containsOnly(str2, chars2) success\", true, StringUtils.containsOnly(str2, chars1));\n+        assertEquals(\"containsOnly(str1, chars2) success\", true, StringUtils.containsOnly(str1, chars2));\n+        assertEquals(\"containsOnly(str1, chars3) success\", true, StringUtils.containsOnly(str1, chars3));\n+        assertEquals(\"containsOnly(str2, chars1) success\", true, StringUtils.containsOnly(str2, chars1));\n         assertEquals(\"containsOnly(str2, chars2) failed\", false, StringUtils.containsOnly(str2, chars2));\n-        assertEquals(\"containsOnly(str2, chars2) success\", true, StringUtils.containsOnly(str2, chars3));\n-        assertEquals(\"containsOnly(String3, chars3) failed\", false, StringUtils.containsOnly(str3, chars1));\n-        assertEquals(\"containsOnly(String3, chars3) failed\", false, StringUtils.containsOnly(str3, chars2));\n+        assertEquals(\"containsOnly(str2, chars3) success\", true, StringUtils.containsOnly(str2, chars3));\n+        assertEquals(\"containsOnly(String3, chars1) failed\", false, StringUtils.containsOnly(str3, chars1));\n+        assertEquals(\"containsOnly(String3, chars2) failed\", false, StringUtils.containsOnly(str3, chars2));\n         assertEquals(\"containsOnly(String3, chars3) success\", true, StringUtils.containsOnly(str3, chars3));\n+    }\n+\n+    public void testContainsNoneString() {\n+        String str1 = \"a\";\n+        String str2 = \"b\";\n+        String str3 = \"ab.\";\n+        String chars1= \"b\";\n+        String chars2= \".\";\n+        String chars3= \"cd\";\n+        String emptyChars = \"\";\n+        assertEquals(\"containsNone(null, null) failed\", true, StringUtils.containsNone(null, (String) null));\n+        assertEquals(\"containsNone(empty-string, null) failed\", true, StringUtils.containsNone(\"\", (String) null));\n+        assertEquals(\"containsNone(null, empty-string) failed\", true, StringUtils.containsNone(null, emptyChars));\n+        assertEquals(\"containsNone(str1, empty-char-array) failed\", true, StringUtils.containsNone(str1, emptyChars));\n+        assertEquals(\"containsNone(empty-string, empty-char-array) failed\", true, StringUtils.containsNone(\"\", emptyChars));\n+        assertEquals(\"containsNone(empty-string, chars1) failed\", true, StringUtils.containsNone(\"\", chars1));\n+        assertEquals(\"containsNone(str1, chars1)\", true, StringUtils.containsNone(str1, chars1));\n+        assertEquals(\"containsNone(str1, chars2)\", true, StringUtils.containsNone(str1, chars2));\n+        assertEquals(\"containsNone(str1, chars3)\", true, StringUtils.containsNone(str1, chars3));\n+        assertEquals(\"containsNone(str2, chars1)\", false, StringUtils.containsNone(str2, chars1));\n+        assertEquals(\"containsNone(str2, chars2)\", true, StringUtils.containsNone(str2, chars2));\n+        assertEquals(\"containsNone(str2, chars3)\", true, StringUtils.containsNone(str2, chars3));\n+        assertEquals(\"containsNone(str3, chars1)\", false, StringUtils.containsNone(str3, chars1));\n+        assertEquals(\"containsNone(str3, chars2)\", false, StringUtils.containsNone(str3, chars2));\n+        assertEquals(\"containsNone(str3, chars3)\", true, StringUtils.containsNone(str3, chars3));\n+    }\n+\n+    public void testContainsNoneCharArray() {\n+        String str1 = \"a\";\n+        String str2 = \"b\";\n+        String str3 = \"ab.\";\n+        char[] chars1= {'b'};\n+        char[] chars2= {'.'};\n+        char[] chars3= {'c', 'd'};\n+        char[] emptyChars = new char[0];\n+        assertEquals(\"containsNone(null, null) failed\", true, StringUtils.containsNone(null, (char[]) null));\n+        assertEquals(\"containsNone(empty-string, null) failed\", true, StringUtils.containsNone(\"\", (char[]) null));\n+        assertEquals(\"containsNone(null, empty-string) failed\", true, StringUtils.containsNone(null, emptyChars));\n+        assertEquals(\"containsNone(str1, empty-char-array) failed\", true, StringUtils.containsNone(str1, emptyChars));\n+        assertEquals(\"containsNone(empty-string, empty-char-array) failed\", true, StringUtils.containsNone(\"\", emptyChars));\n+        assertEquals(\"containsNone(empty-string, chars1) failed\", true, StringUtils.containsNone(\"\", chars1));\n+        assertEquals(\"containsNone(str1, chars1)\", true, StringUtils.containsNone(str1, chars1));\n+        assertEquals(\"containsNone(str1, chars2)\", true, StringUtils.containsNone(str1, chars2));\n+        assertEquals(\"containsNone(str1, chars3)\", true, StringUtils.containsNone(str1, chars3));\n+        assertEquals(\"containsNone(str2, chars1)\", false, StringUtils.containsNone(str2, chars1));\n+        assertEquals(\"containsNone(str2, chars2)\", true, StringUtils.containsNone(str2, chars2));\n+        assertEquals(\"containsNone(str2, chars3)\", true, StringUtils.containsNone(str2, chars3));\n+        assertEquals(\"containsNone(str3, chars1)\", false, StringUtils.containsNone(str3, chars1));\n+        assertEquals(\"containsNone(str3, chars2)\", false, StringUtils.containsNone(str3, chars2));\n+        assertEquals(\"containsNone(str3, chars3)\", true, StringUtils.containsNone(str3, chars3));\n     }\n \n     public void testAbbreviate()\n--- a/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n- * Copyright (c) 2002 The Apache Software Foundation.  All rights\n+ * Copyright (c) 2002-2003 The Apache Software Foundation.  All rights\n  * reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: StringUtilsTrimEmptyTest.java,v 1.5 2002/09/27 06:08:16 bayard Exp $\n+ * @version $Id: StringUtilsTrimEmptyTest.java,v 1.6 2003/03/23 21:51:19 scolebourne Exp $\n  */\n public class StringUtilsTrimEmptyTest extends TestCase {\n     private static final String FOO = \"foo\";", "timestamp": 1048456311, "metainfo": ""}