{"sha": "ce6e081d61402efbc1d2ce9ceaaf3a1214a8ef53", "log": "Commented out the parseCVS code for consideration/fixing for Lang 2.1   ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/DateUtils.java\n+++ b/src/java/org/apache/commons/lang/time/DateUtils.java\n  * @author Janek Bogucki\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: DateUtils.java,v 1.11 2003/08/10 13:32:16 stevencaswell Exp $\n+ * @version $Id: DateUtils.java,v 1.12 2003/08/15 16:14:35 bayard Exp $\n  */\n public class DateUtils {\n     \n \n     }\n \n+    // TODO: Decide whether this code is removed or goes into 2.1\n     //-----------------------------------------------------------------------\n-    /**\n+    /*\n      * <p>Parses a date string formatted in CVS format.</p>\n      * \n      * @param dateStr  the date to parse\n      * @return the parsed date\n      * @throws IllegalArgumentException if the date cannot be parsed\n-     */\n     public static Calendar parseCVS(String dateStr) {\n         if (dateStr == null) {\n             throw new IllegalArgumentException(\"The date must not be null\");\n \n         throw new IllegalArgumentException(\"Unable to parse '\" + dateStr + \"'.\");\n     }\n+     */\n \n     //-----------------------------------------------------------------------\n     /**\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n         } catch (ClassCastException ex) {}\n     }\n \n-    /**\n+    // TODO: Decide whether this code is removed or goes into 2.1\n+    /*\n      * Tests the parse method, which is supposed to handle various strings\n      * as flexibly as CVS supports.\n-     */\n     public void testParseCVS() throws Exception {\n         try {\n             DateUtils.parseCVS(null);\n         assertEquals(\"parseCVS format MMM d, yyyy h:mm a\",\n                   now, DateUtils.parseCVS(new SimpleDateFormat(\"MMM d, yyyy h:mm a\").format(now.getTime())), 50);\n         // h:mm z\n-        /*\n-         * This format is difficult to test using the current time because the\n-         * parseCVS method applies the default date of January 1, 1970 to the\n-         * parsed time. The most straightforward way to test the parse is to\n-         * pass in a known value, and test the output against this know value.\n-         */\n+        //\n+        // This format is difficult to test using the current time because the\n+        // parseCVS method applies the default date of January 1, 1970 to the\n+        // parsed time. The most straightforward way to test the parse is to\n+        // pass in a known value, and test the output against this know value.\n+        // \n         now = Calendar.getInstance();\n         now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT\"));\n         assertEquals(\"parseCVS format h:mm z 16:30 GMT\", \n         assertEquals(\"parseCVS last January\",\n                 now, DateUtils.parseCVS(\"last January\"), 50);\n     }\n+     */\n \n     /**\n      * Tests the iterator exceptions", "timestamp": 1060964075, "metainfo": ""}