{"sha": "21234107ee5516a670e9f36cfe22880394345b3d", "log": "Test identityToString Reformat for Suns coding standards   ", "commit": "\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n  * @author <a href=\"mailto:jmcnally@collab.net\">John McNally</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: ObjectUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $\n+ * @version $Id: ObjectUtilsTest.java,v 1.2 2002/09/18 19:49:47 scolebourne Exp $\n  */\n-public class ObjectUtilsTest extends TestCase\n-{\n+public class ObjectUtilsTest extends TestCase {\n     private static final String FOO = \"foo\";\n     private static final String BAR = \"bar\";\n \n-    public ObjectUtilsTest(String name)\n-    {\n+    public ObjectUtilsTest(String name) {\n         super(name);\n     }\n-    \n-    public static void main(String[] args) \n-    {\n+\n+    public static void main(String[] args) {\n         TestRunner.run(suite());\n     }\n \n-    public static Test suite() \n-    {\n-    \tTestSuite suite = new TestSuite(ObjectUtilsTest.class);\n-    \tsuite.setName(\"ObjectUtils Tests\");\n+    public static Test suite() {\n+        TestSuite suite = new TestSuite(ObjectUtilsTest.class);\n+        suite.setName(\"ObjectUtils Tests\");\n         return suite;\n     }\n \n-    protected void setUp() throws Exception \n-    {\n+    protected void setUp() throws Exception {\n         super.setUp();\n     }\n \n-    protected void tearDown() throws Exception\n-    {\n+    protected void tearDown() throws Exception {\n         super.tearDown();\n     }\n \n     //-----------------------------------------------------------------------\n-    \n-    public void testIsNull()\n-    {\n+\n+    public void testIsNull() {\n         Object o = FOO;\n         Object dflt = BAR;\n-        assertSame(\"dflt was not returned when o was null\", dflt,\n-                     ObjectUtils.defaultIfNull(null, dflt));\n-        assertSame(\"dflt was returned when o was not null\", o,\n-                     ObjectUtils.defaultIfNull(o, dflt));\n+        assertSame(\"dflt was not returned when o was null\", dflt, ObjectUtils.defaultIfNull(null, dflt));\n+        assertSame(\"dflt was returned when o was not null\", o, ObjectUtils.defaultIfNull(o, dflt));\n     }\n-        \n-    public void testEquals()\n-    {\n-        assertTrue(\"ObjectUtils.equals(null, null) returned false\", \n-                   ObjectUtils.equals(null, null));\n-        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", null) returned true\", \n-                   !ObjectUtils.equals(FOO, null));\n-        assertTrue(\"ObjectUtils.equals(null, \\\"bar\\\") returned true\", \n-                   !ObjectUtils.equals(null, BAR));\n-        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", \\\"bar\\\") returned true\", \n-                   !ObjectUtils.equals(FOO, BAR));\n-        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", \\\"foo\\\") returned false\", \n-                   ObjectUtils.equals(FOO, FOO));\n-    }        \n+\n+    public void testEquals() {\n+        assertTrue(\"ObjectUtils.equals(null, null) returned false\", ObjectUtils.equals(null, null));\n+        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", null) returned true\", !ObjectUtils.equals(FOO, null));\n+        assertTrue(\"ObjectUtils.equals(null, \\\"bar\\\") returned true\", !ObjectUtils.equals(null, BAR));\n+        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", \\\"bar\\\") returned true\", !ObjectUtils.equals(FOO, BAR));\n+        assertTrue(\"ObjectUtils.equals(\\\"foo\\\", \\\"foo\\\") returned false\", ObjectUtils.equals(FOO, FOO));\n+    }\n+\n+    public void testIdentityToString() {\n+        assertEquals(\n+            \"java.lang.String@\" + Integer.toHexString(System.identityHashCode(FOO)),\n+            ObjectUtils.identityToString(FOO));\n+        Integer i = new Integer(90);\n+        assertEquals(\n+            \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(i)),\n+            ObjectUtils.identityToString(i));\n+        assertEquals(null, ObjectUtils.identityToString(null));\n+    }\n }", "timestamp": 1032378587, "metainfo": ""}