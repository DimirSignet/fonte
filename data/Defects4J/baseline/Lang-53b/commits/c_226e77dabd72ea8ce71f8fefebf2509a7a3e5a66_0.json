{"sha": "226e77dabd72ea8ce71f8fefebf2509a7a3e5a66", "log": "Renamed methods so that they follow the \"MethodNameEvenForAcronyms\"-scheme.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharUtils.java\n+++ b/src/java/org/apache/commons/lang/CharUtils.java\n  * \n  * @author Stephen Colebourne\n  * @since 2.1\n- * @version $Id: CharUtils.java,v 1.4 2004/02/19 21:04:03 fredrik Exp $\n+ * @version $Id: CharUtils.java,v 1.5 2004/02/24 22:22:51 fredrik Exp $\n  */\n public class CharUtils {\n     \n      * @throws IllegalArgumentException if the character is not ASCII numeric\n      */\n     public static int toInteger(char ch) {\n-        if (isASCIINumeric(ch) == false) {\n+        if (isAsciiNumeric(ch) == false) {\n             throw new IllegalArgumentException(\"The character \" + ch + \" is not in the range '0' - '9'\");\n         }\n         return (ch - 48);\n      * @return the int value of the character\n      */\n     public static int toInteger(char ch, int defaultValue) {\n-        if (isASCIINumeric(ch) == false) {\n+        if (isAsciiNumeric(ch) == false) {\n             return defaultValue;\n         }\n         return (ch - 48);\n      * <p>Checks whether the character is ASCII 7 bit.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCII('a')  = true\n-     *   CharUtils.isASCII('A')  = true\n-     *   CharUtils.isASCII('3')  = true\n-     *   CharUtils.isASCII('-')  = true\n-     *   CharUtils.isASCII('\\n') = true\n-     *   CharUtils.isASCII('&copy;') = false\n+     *   CharUtils.isAscii('a')  = true\n+     *   CharUtils.isAscii('A')  = true\n+     *   CharUtils.isAscii('3')  = true\n+     *   CharUtils.isAscii('-')  = true\n+     *   CharUtils.isAscii('\\n') = true\n+     *   CharUtils.isAscii('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if less than 128\n      */\n-    public static boolean isASCII(char ch) {\n+    public static boolean isAscii(char ch) {\n         return (ch < 128);\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit printable.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIPrintable('a')  = true\n-     *   CharUtils.isASCIIPrintable('A')  = true\n-     *   CharUtils.isASCIIPrintable('3')  = true\n-     *   CharUtils.isASCIIPrintable('-')  = true\n-     *   CharUtils.isASCIIPrintable('\\n') = false\n-     *   CharUtils.isASCIIPrintable('&copy;') = false\n+     *   CharUtils.isAsciiPrintable('a')  = true\n+     *   CharUtils.isAsciiPrintable('A')  = true\n+     *   CharUtils.isAsciiPrintable('3')  = true\n+     *   CharUtils.isAsciiPrintable('-')  = true\n+     *   CharUtils.isAsciiPrintable('\\n') = false\n+     *   CharUtils.isAsciiPrintable('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 32 and 126 inclusive\n      */\n-    public static boolean isASCIIPrintable(char ch) {\n+    public static boolean isAsciiPrintable(char ch) {\n         return (ch >= 32 && ch < 127);\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit control.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIControl('a')  = false\n-     *   CharUtils.isASCIIControl('A')  = false\n-     *   CharUtils.isASCIIControl('3')  = false\n-     *   CharUtils.isASCIIControl('-')  = false\n-     *   CharUtils.isASCIIControl('\\n') = true\n-     *   CharUtils.isASCIIControl('&copy;') = false\n+     *   CharUtils.isAsciiControl('a')  = false\n+     *   CharUtils.isAsciiControl('A')  = false\n+     *   CharUtils.isAsciiControl('3')  = false\n+     *   CharUtils.isAsciiControl('-')  = false\n+     *   CharUtils.isAsciiControl('\\n') = true\n+     *   CharUtils.isAsciiControl('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if less than 32 or equals 127\n      */\n-    public static boolean isASCIIControl(char ch) {\n+    public static boolean isAsciiControl(char ch) {\n         return (ch < 32 || ch == 127);\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit alphabetic.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIAlpha('a')  = true\n-     *   CharUtils.isASCIIAlpha('A')  = true\n-     *   CharUtils.isASCIIAlpha('3')  = false\n-     *   CharUtils.isASCIIAlpha('-')  = false\n-     *   CharUtils.isASCIIAlpha('\\n') = false\n-     *   CharUtils.isASCIIAlpha('&copy;') = false\n+     *   CharUtils.isAsciiAlpha('a')  = true\n+     *   CharUtils.isAsciiAlpha('A')  = true\n+     *   CharUtils.isAsciiAlpha('3')  = false\n+     *   CharUtils.isAsciiAlpha('-')  = false\n+     *   CharUtils.isAsciiAlpha('\\n') = false\n+     *   CharUtils.isAsciiAlpha('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 65 and 90 or 97 and 122 inclusive\n      */\n-    public static boolean isASCIIAlpha(char ch) {\n+    public static boolean isAsciiAlpha(char ch) {\n         return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit alphabetic upper case.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIAlphaUpper('a')  = false\n-     *   CharUtils.isASCIIAlphaUpper('A')  = true\n-     *   CharUtils.isASCIIAlphaUpper('3')  = false\n-     *   CharUtils.isASCIIAlphaUpper('-')  = false\n-     *   CharUtils.isASCIIAlphaUpper('\\n') = false\n-     *   CharUtils.isASCIIAlphaUpper('&copy;') = false\n+     *   CharUtils.isAsciiAlphaUpper('a')  = false\n+     *   CharUtils.isAsciiAlphaUpper('A')  = true\n+     *   CharUtils.isAsciiAlphaUpper('3')  = false\n+     *   CharUtils.isAsciiAlphaUpper('-')  = false\n+     *   CharUtils.isAsciiAlphaUpper('\\n') = false\n+     *   CharUtils.isAsciiAlphaUpper('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 65 and 90 inclusive\n      */\n-    public static boolean isASCIIAlphaUpper(char ch) {\n+    public static boolean isAsciiAlphaUpper(char ch) {\n         return (ch >= 'A' && ch <= 'Z');\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit alphabetic lower case.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIAlphaLower('a')  = true\n-     *   CharUtils.isASCIIAlphaLower('A')  = false\n-     *   CharUtils.isASCIIAlphaLower('3')  = false\n-     *   CharUtils.isASCIIAlphaLower('-')  = false\n-     *   CharUtils.isASCIIAlphaLower('\\n') = false\n-     *   CharUtils.isASCIIAlphaLower('&copy;') = false\n+     *   CharUtils.isAsciiAlphaLower('a')  = true\n+     *   CharUtils.isAsciiAlphaLower('A')  = false\n+     *   CharUtils.isAsciiAlphaLower('3')  = false\n+     *   CharUtils.isAsciiAlphaLower('-')  = false\n+     *   CharUtils.isAsciiAlphaLower('\\n') = false\n+     *   CharUtils.isAsciiAlphaLower('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 97 and 122 inclusive\n      */\n-    public static boolean isASCIIAlphaLower(char ch) {\n+    public static boolean isAsciiAlphaLower(char ch) {\n         return (ch >= 'a' && ch <= 'z');\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit numeric.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIINumeric('a')  = false\n-     *   CharUtils.isASCIINumeric('A')  = false\n-     *   CharUtils.isASCIINumeric('3')  = true\n-     *   CharUtils.isASCIINumeric('-')  = false\n-     *   CharUtils.isASCIINumeric('\\n') = false\n-     *   CharUtils.isASCIINumeric('&copy;') = false\n+     *   CharUtils.isAsciiNumeric('a')  = false\n+     *   CharUtils.isAsciiNumeric('A')  = false\n+     *   CharUtils.isAsciiNumeric('3')  = true\n+     *   CharUtils.isAsciiNumeric('-')  = false\n+     *   CharUtils.isAsciiNumeric('\\n') = false\n+     *   CharUtils.isAsciiNumeric('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 48 and 57 inclusive\n      */\n-    public static boolean isASCIINumeric(char ch) {\n+    public static boolean isAsciiNumeric(char ch) {\n         return (ch >= '0' && ch <= '9');\n     }\n     \n      * <p>Checks whether the character is ASCII 7 bit numeric.</p>\n      *\n      * <pre>\n-     *   CharUtils.isASCIIAlphanumeric('a')  = true\n-     *   CharUtils.isASCIIAlphanumeric('A')  = true\n-     *   CharUtils.isASCIIAlphanumeric('3')  = true\n-     *   CharUtils.isASCIIAlphanumeric('-')  = false\n-     *   CharUtils.isASCIIAlphanumeric('\\n') = false\n-     *   CharUtils.isASCIIAlphanumeric('&copy;') = false\n+     *   CharUtils.isAsciiAlphanumeric('a')  = true\n+     *   CharUtils.isAsciiAlphanumeric('A')  = true\n+     *   CharUtils.isAsciiAlphanumeric('3')  = true\n+     *   CharUtils.isAsciiAlphanumeric('-')  = false\n+     *   CharUtils.isAsciiAlphanumeric('\\n') = false\n+     *   CharUtils.isAsciiAlphanumeric('&copy;') = false\n      * </pre>\n      * \n      * @param ch  the character to check\n      * @return true if between 48 and 57 or 65 and 90 or 97 and 122 inclusive\n      */\n-    public static boolean isASCIIAlphanumeric(char ch) {\n+    public static boolean isAsciiAlphanumeric(char ch) {\n         return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9');\n     }\n     \n--- a/src/test/org/apache/commons/lang/CharUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/CharUtilsTest.java\n  * Unit tests {@link org.apache.commons.lang.CharUtils}.\n  *\n  * @author Stephen Colebourne\n- * @version $Id: CharUtilsTest.java,v 1.2 2004/02/18 23:06:19 ggregory Exp $\n+ * @version $Id: CharUtilsTest.java,v 1.3 2004/02/24 22:22:51 fredrik Exp $\n  */\n public class CharUtilsTest extends TestCase {\n \n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testIsASCII_char() {\n-        assertEquals(true, CharUtils.isASCII('a'));\n-        assertEquals(true, CharUtils.isASCII('A'));\n-        assertEquals(true, CharUtils.isASCII('3'));\n-        assertEquals(true, CharUtils.isASCII('-'));\n-        assertEquals(true, CharUtils.isASCII('\\n'));\n-        assertEquals(false, CharUtils.isASCII(CHAR_COPY));\n+    public void testIsAscii_char() {\n+        assertEquals(true, CharUtils.isAscii('a'));\n+        assertEquals(true, CharUtils.isAscii('A'));\n+        assertEquals(true, CharUtils.isAscii('3'));\n+        assertEquals(true, CharUtils.isAscii('-'));\n+        assertEquals(true, CharUtils.isAscii('\\n'));\n+        assertEquals(false, CharUtils.isAscii(CHAR_COPY));\n        \n         for (int i = 0; i < 128; i++) {\n             if (i < 128) {\n-                assertEquals(true, CharUtils.isASCII((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCII((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIPrintable_char() {\n-        assertEquals(true, CharUtils.isASCIIPrintable('a'));\n-        assertEquals(true, CharUtils.isASCIIPrintable('A'));\n-        assertEquals(true, CharUtils.isASCIIPrintable('3'));\n-        assertEquals(true, CharUtils.isASCIIPrintable('-'));\n-        assertEquals(false, CharUtils.isASCIIPrintable('\\n'));\n-        assertEquals(false, CharUtils.isASCII(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAscii((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAscii((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiPrintable_char() {\n+        assertEquals(true, CharUtils.isAsciiPrintable('a'));\n+        assertEquals(true, CharUtils.isAsciiPrintable('A'));\n+        assertEquals(true, CharUtils.isAsciiPrintable('3'));\n+        assertEquals(true, CharUtils.isAsciiPrintable('-'));\n+        assertEquals(false, CharUtils.isAsciiPrintable('\\n'));\n+        assertEquals(false, CharUtils.isAscii(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if (i >= 32 && i <= 126) {\n-                assertEquals(true, CharUtils.isASCIIPrintable((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIPrintable((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIControl_char() {\n-        assertEquals(false, CharUtils.isASCIIControl('a'));\n-        assertEquals(false, CharUtils.isASCIIControl('A'));\n-        assertEquals(false, CharUtils.isASCIIControl('3'));\n-        assertEquals(false, CharUtils.isASCIIControl('-'));\n-        assertEquals(true, CharUtils.isASCIIControl('\\n'));\n-        assertEquals(false, CharUtils.isASCIIControl(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiPrintable((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiPrintable((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiControl_char() {\n+        assertEquals(false, CharUtils.isAsciiControl('a'));\n+        assertEquals(false, CharUtils.isAsciiControl('A'));\n+        assertEquals(false, CharUtils.isAsciiControl('3'));\n+        assertEquals(false, CharUtils.isAsciiControl('-'));\n+        assertEquals(true, CharUtils.isAsciiControl('\\n'));\n+        assertEquals(false, CharUtils.isAsciiControl(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if (i < 32 || i == 127) {\n-                assertEquals(true, CharUtils.isASCIIControl((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIControl((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIAlpha_char() {\n-        assertEquals(true, CharUtils.isASCIIAlpha('a'));\n-        assertEquals(true, CharUtils.isASCIIAlpha('A'));\n-        assertEquals(false, CharUtils.isASCIIAlpha('3'));\n-        assertEquals(false, CharUtils.isASCIIAlpha('-'));\n-        assertEquals(false, CharUtils.isASCIIAlpha('\\n'));\n-        assertEquals(false, CharUtils.isASCIIAlpha(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiControl((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiControl((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiAlpha_char() {\n+        assertEquals(true, CharUtils.isAsciiAlpha('a'));\n+        assertEquals(true, CharUtils.isAsciiAlpha('A'));\n+        assertEquals(false, CharUtils.isAsciiAlpha('3'));\n+        assertEquals(false, CharUtils.isAsciiAlpha('-'));\n+        assertEquals(false, CharUtils.isAsciiAlpha('\\n'));\n+        assertEquals(false, CharUtils.isAsciiAlpha(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if ((i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z')) {\n-                assertEquals(true, CharUtils.isASCIIAlpha((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIAlpha((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIAlphaUpper_char() {\n-        assertEquals(false, CharUtils.isASCIIAlphaUpper('a'));\n-        assertEquals(true, CharUtils.isASCIIAlphaUpper('A'));\n-        assertEquals(false, CharUtils.isASCIIAlphaUpper('3'));\n-        assertEquals(false, CharUtils.isASCIIAlphaUpper('-'));\n-        assertEquals(false, CharUtils.isASCIIAlphaUpper('\\n'));\n-        assertEquals(false, CharUtils.isASCIIAlphaUpper(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiAlpha((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiAlpha((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiAlphaUpper_char() {\n+        assertEquals(false, CharUtils.isAsciiAlphaUpper('a'));\n+        assertEquals(true, CharUtils.isAsciiAlphaUpper('A'));\n+        assertEquals(false, CharUtils.isAsciiAlphaUpper('3'));\n+        assertEquals(false, CharUtils.isAsciiAlphaUpper('-'));\n+        assertEquals(false, CharUtils.isAsciiAlphaUpper('\\n'));\n+        assertEquals(false, CharUtils.isAsciiAlphaUpper(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if (i >= 'A' && i <= 'Z') {\n-                assertEquals(true, CharUtils.isASCIIAlphaUpper((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIAlphaUpper((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIAlphaLower_char() {\n-        assertEquals(true, CharUtils.isASCIIAlphaLower('a'));\n-        assertEquals(false, CharUtils.isASCIIAlphaLower('A'));\n-        assertEquals(false, CharUtils.isASCIIAlphaLower('3'));\n-        assertEquals(false, CharUtils.isASCIIAlphaLower('-'));\n-        assertEquals(false, CharUtils.isASCIIAlphaLower('\\n'));\n-        assertEquals(false, CharUtils.isASCIIAlphaLower(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiAlphaUpper((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiAlphaUpper((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiAlphaLower_char() {\n+        assertEquals(true, CharUtils.isAsciiAlphaLower('a'));\n+        assertEquals(false, CharUtils.isAsciiAlphaLower('A'));\n+        assertEquals(false, CharUtils.isAsciiAlphaLower('3'));\n+        assertEquals(false, CharUtils.isAsciiAlphaLower('-'));\n+        assertEquals(false, CharUtils.isAsciiAlphaLower('\\n'));\n+        assertEquals(false, CharUtils.isAsciiAlphaLower(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if (i >= 'a' && i <= 'z') {\n-                assertEquals(true, CharUtils.isASCIIAlphaLower((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIAlphaLower((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIINumeric_char() {\n-        assertEquals(false, CharUtils.isASCIINumeric('a'));\n-        assertEquals(false, CharUtils.isASCIINumeric('A'));\n-        assertEquals(true, CharUtils.isASCIINumeric('3'));\n-        assertEquals(false, CharUtils.isASCIINumeric('-'));\n-        assertEquals(false, CharUtils.isASCIINumeric('\\n'));\n-        assertEquals(false, CharUtils.isASCIINumeric(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiAlphaLower((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiAlphaLower((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiNumeric_char() {\n+        assertEquals(false, CharUtils.isAsciiNumeric('a'));\n+        assertEquals(false, CharUtils.isAsciiNumeric('A'));\n+        assertEquals(true, CharUtils.isAsciiNumeric('3'));\n+        assertEquals(false, CharUtils.isAsciiNumeric('-'));\n+        assertEquals(false, CharUtils.isAsciiNumeric('\\n'));\n+        assertEquals(false, CharUtils.isAsciiNumeric(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if (i >= '0' && i <= '9') {\n-                assertEquals(true, CharUtils.isASCIINumeric((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIINumeric((char) i));\n-            }\n-        }\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testIsASCIIAlphanumeric_char() {\n-        assertEquals(true, CharUtils.isASCIIAlphanumeric('a'));\n-        assertEquals(true, CharUtils.isASCIIAlphanumeric('A'));\n-        assertEquals(true, CharUtils.isASCIIAlphanumeric('3'));\n-        assertEquals(false, CharUtils.isASCIIAlphanumeric('-'));\n-        assertEquals(false, CharUtils.isASCIIAlphanumeric('\\n'));\n-        assertEquals(false, CharUtils.isASCIIAlphanumeric(CHAR_COPY));\n+                assertEquals(true, CharUtils.isAsciiNumeric((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiNumeric((char) i));\n+            }\n+        }\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsAsciiAlphanumeric_char() {\n+        assertEquals(true, CharUtils.isAsciiAlphanumeric('a'));\n+        assertEquals(true, CharUtils.isAsciiAlphanumeric('A'));\n+        assertEquals(true, CharUtils.isAsciiAlphanumeric('3'));\n+        assertEquals(false, CharUtils.isAsciiAlphanumeric('-'));\n+        assertEquals(false, CharUtils.isAsciiAlphanumeric('\\n'));\n+        assertEquals(false, CharUtils.isAsciiAlphanumeric(CHAR_COPY));\n        \n         for (int i = 0; i < 196; i++) {\n             if ((i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z') || (i >= '0' && i <= '9')) {\n-                assertEquals(true, CharUtils.isASCIIAlphanumeric((char) i));\n-            } else {\n-                assertEquals(false, CharUtils.isASCIIAlphanumeric((char) i));\n+                assertEquals(true, CharUtils.isAsciiAlphanumeric((char) i));\n+            } else {\n+                assertEquals(false, CharUtils.isAsciiAlphanumeric((char) i));\n             }\n         }\n     }", "timestamp": 1077661371, "metainfo": ""}