{"sha": "f4cf865b7c10a52892473eadb1620ab5b78157b4", "log": "Optimize the performance of StringUtils.replace bug 36583, from Chris Hyzer  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Al Chou\n  * @author Michael Davey\n  * @author Reuben Sivan\n+ * @author Chris Hyzer\n  * @since 1.0\n  * @version $Id$\n  */\n      *  <code>null</code> if null String input\n      */\n     public static String replace(String text, String repl, String with, int max) {\n-        if (text == null || isEmpty(repl) || with == null || max == 0) {\n+        if (isEmpty(text) || isEmpty(repl) || with == null || max == 0) {\n             return text;\n         }\n-\n-        StringBuffer buf = new StringBuffer(text.length());\n-        int start = 0, end = 0;\n-        while ((end = text.indexOf(repl, start)) != -1) {\n+        int start = 0;\n+        int end = text.indexOf(repl, start);\n+        if (end == -1) {\n+            return text;\n+        }\n+        int increase = with.length() - repl.length();\n+        increase = (increase < 0 ? 0 : increase);\n+        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));\n+        StringBuffer buf = new StringBuffer(text.length() + increase);\n+        while (end != -1) {\n             buf.append(text.substring(start, end)).append(with);\n             start = end + repl.length();\n-\n             if (--max == 0) {\n                 break;\n             }\n+            end = text.indexOf(repl, start);\n         }\n         buf.append(text.substring(start));\n         return buf.toString();\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n         assertEquals(null, StringUtils.replace(null, \"any\", null, 2));\n         assertEquals(null, StringUtils.replace(null, \"any\", \"any\", 2));\n \n+        assertEquals(\"\", StringUtils.replace(\"\", null, null, 2));\n+        assertEquals(\"\", StringUtils.replace(\"\", null, \"any\", 2));\n+        assertEquals(\"\", StringUtils.replace(\"\", \"any\", null, 2));\n+        assertEquals(\"\", StringUtils.replace(\"\", \"any\", \"any\", 2));\n+        \n+        String str = new String(new char[] {'o', 'o', 'f', 'o', 'o'});\n+        assertSame(str, StringUtils.replace(str, \"x\", \"\", -1));\n+        \n         assertEquals(\"f\", StringUtils.replace(\"oofoo\", \"o\", \"\", -1));\n         assertEquals(\"oofoo\", StringUtils.replace(\"oofoo\", \"o\", \"\", 0));\n         assertEquals(\"ofoo\", StringUtils.replace(\"oofoo\", \"o\", \"\", 1));\n         assertEquals(\"foo\", StringUtils.replace(\"oofoo\", \"o\", \"\", 2));\n         assertEquals(\"fo\", StringUtils.replace(\"oofoo\", \"o\", \"\", 3));\n         assertEquals(\"f\", StringUtils.replace(\"oofoo\", \"o\", \"\", 4));\n+        \n+        assertEquals(\"f\", StringUtils.replace(\"oofoo\", \"o\", \"\", -5));\n+        assertEquals(\"f\", StringUtils.replace(\"oofoo\", \"o\", \"\", 1000));\n     }\n     \n     public void testReplaceOnce_StringStringString() {", "timestamp": 1126344588, "metainfo": ""}