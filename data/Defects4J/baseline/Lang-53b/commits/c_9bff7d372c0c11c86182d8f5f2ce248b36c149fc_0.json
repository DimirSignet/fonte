{"sha": "9bff7d372c0c11c86182d8f5f2ce248b36c149fc", "log": "make test strings 7-bit clean (bug 18836)   ", "commit": "\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n  *\n  * @author of original StringUtilsTest.testEscape = ?\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n- * @version $Id: StringEscapeUtilsTest.java,v 1.1 2003/03/31 03:53:52 alex Exp $\n+ * @version $Id: StringEscapeUtilsTest.java,v 1.2 2003/04/09 17:30:29 alex Exp $\n  */\n public class StringEscapeUtilsTest extends TestCase {\n     private final static String FOO = \"foo\";\n         {\"final character only\", \"greater than &gt;\", \"greater than >\"},\n         {\"first character only\", \"&lt; less than\", \"< less than\"},\n         {\"apostrophe\", \"Huntington's chorea\", \"Huntington's chorea\"},\n-        {\"languages\", \"English,Fran&ccedil;ais,&#26085;&#26412;&#35486; (nihongo)\", \"English,Franais,\\u65E5\\u672C\\u8A9E (nihongo)\"},\n+        {\"languages\", \"English,Fran&ccedil;ais,&#26085;&#26412;&#35486; (nihongo)\", \"English,Fran\\u00E7ais,\\u65E5\\u672C\\u8A9E (nihongo)\"},\n     };\n \n     public void testEscapeHtml() {\n             assertEquals(htmlEscapes[i][0], htmlEscapes[i][2], StringEscapeUtils.unescapeHtml(htmlEscapes[i][1]));\n             // todo: add test for (and implement) Writer-based version\n         }\n-        // should we unicode-escape the cedilla here, for 7-bit cleanliness?\n-        assertEquals(\"funny chars pass through OK\", \"Franais\", StringEscapeUtils.unescapeHtml(\"Franais\"));\n+        // \\u00E7 is a cedilla ()\n+        // note that the test string must be 7-bit-clean (unicode escaped) or else it will compile incorrectly\n+        // on some locales\n+        assertEquals(\"funny chars pass through OK\", \"Fran\\u00E7ais\", StringEscapeUtils.unescapeHtml(\"Fran\\u00E7ais\"));\n     }\n \n     // SQL", "timestamp": 1049909429, "metainfo": ""}