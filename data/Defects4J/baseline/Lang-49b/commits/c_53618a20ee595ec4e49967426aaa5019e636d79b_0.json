{"sha": "53618a20ee595ec4e49967426aaa5019e636d79b", "log": "o Improved getThrowableCount(Throwable) to return zero when passed a null argument.  o Added @param JavaDoc for methods added during last commit.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n+++ b/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n      * Returns the number of <code>Throwable</code> objects in the\n      * exception chain.\n      *\n+     * @param t The exception to inspect.\n      * @return The throwable count.\n      */\n     public static int getThrowableCount(Throwable t)\n     {\n         // Count the number of throwables\n-        int count = 1;\n-        t = ExceptionUtils.getCause(t);\n-        while (t != null)\n+        int count = 0;\n+        if (t != null)\n         {\n             count++;\n             t = ExceptionUtils.getCause(t);\n+            while (t != null)\n+            {\n+                count++;\n+                t = ExceptionUtils.getCause(t);\n+            }\n         }\n         return count;\n     }\n      * Returns the list of <code>Throwable</code> objects in the\n      * exception chain.\n      *\n+     * @param t The exception to inspect.\n      * @return The list of <code>Throwable</code> objects.\n      */\n     public static Throwable[] getThrowables(Throwable t)\n      * greater than or equal to the specified index, or\n      * <code>-1</code> if the type is not found.\n      *\n+     * @param t The exception to inspect.\n      * @param type <code>Class</code> to look for.\n      * @param fromIndex The (zero based) index of the starting\n      * position in the chain to be searched.", "timestamp": 1029974220, "metainfo": ""}