{"sha": "f098b2b0df8b6f9650cbcaa7b292584595e67409", "log": "Remove commented out code that never went anywhere   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ClassUtils.java\n+++ b/src/java/org/apache/commons/lang/ClassUtils.java\n  * @author Gary Gregory\n  * @author Norm Deane\n  * @since 2.0\n- * @version $Id: ClassUtils.java,v 1.31 2004/10/08 00:10:59 scolebourne Exp $\n+ * @version $Id: ClassUtils.java,v 1.32 2004/10/15 20:57:18 scolebourne Exp $\n  */\n public class ClassUtils {\n \n         return list;\n     }\n     \n-//    /**\n-//     * <p>Gets a <code>List</code> of subclasses of the specified class.</p>\n-//     *\n-//     * <p>This method searches the classpath to find all the subclasses\n-//     * of a particular class available. No classes are loaded, the \n-//     * returned list contains class names, not classes.</p>\n-//     *\n-//     * @param cls  the class to find subclasses for\n-//     * @return the <code>List</code> of subclass String class names\n-//     * @throws IllegalArgumentException if the class is <code>null</code>\n-//     */\n-//    public static List getAllSubclassNames(Class cls) {\n-//        if (cls == null) {\n-//            throw new IllegalArgumentException(\"The class must not be null\");\n-//        }\n-//        // TODO Use JavaWorld tip for searching the classpath\n-//        return null;\n-//    }\n-\n-//    /**\n-//     * <p>Gets a <code>List</code> of subclasses of the specified class.</p>\n-//     *\n-//     * <p>This method searches the classpath to find all the subclasses\n-//     * of a particular class available.</p>\n-//     *\n-//     * @param cls  the class to find subclasses for\n-//     * @return the <code>List</code> of subclasses\n-//     * @throws IllegalArgumentException if the class is <code>null</code>\n-//     */\n-//    public static List getAllSubclasses(Class cls) {\n-//        List names = getAllSubclassNames(cls);\n-//        return convertClassNamesToClasses(names);\n-//    }\n-\n-//    /**\n-//     * <p>Gets a <code>List</code> of implementations of the specified interface.</p>\n-//     *\n-//     * <p>This method searches the classpath to find all the implementations\n-//     * of a particular interface available. No classes are loaded, the \n-//     * returned list contains class names, not classes.</p>\n-//     *\n-//     * @param cls  the class to find sub classes for\n-//     * @return the <code>List</code> of implementation String class names\n-//     * @throws IllegalArgumentException if the class is <code>null</code>\n-//     */\n-//    public static List getAllImplementationClassNames(Class cls) {\n-//        if (cls == null) {\n-//            throw new IllegalArgumentException(\"The class must not be null\");\n-//        }\n-//        // TODO Use JavaWorld tip for searching the classpath\n-//        return null;\n-//    }\n-\n     // Convert list\n     // ----------------------------------------------------------------------\n     /**", "timestamp": 1097873838, "metainfo": ""}