{"sha": "234d0b3c29f5e88492244e6408569aee3036168c", "log": "more test coverage of obscure situations   ", "commit": "\n--- a/src/test/org/apache/commons/lang/math/RandomUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/math/RandomUtilsTest.java\n  * Test cases for the {@link RandomUtils} class.\n  *\n  * @author <a href=\"mailto:phil@steitz.com\">Phil Steitz</a>\n- * @version $Revision: 1.7 $ $Date: 2004/02/18 23:02:38 $\n+ * @version $Revision: 1.8 $ $Date: 2004/12/25 17:52:19 $\n  */\n \n public final class RandomUtilsTest extends TestCase {\n         rnd.setSeed(System.currentTimeMillis());\n         tstNextInt(rnd);\n     } \n+    \n+    /** test distribution of JVMRandom.nextInt() */\n+    public void testJvmRandomNextInt() {\n+        tstNextInt(RandomUtils.JVM_RANDOM);\n+    } \n+\n     \n     /** \n      * Generate 1000 values for nextInt(bound) and compare\n             chiSquare(expected,observed) < 10.83);  \n     }\n     \n-    /** make sure that setSeed fails */\n-    public void testSetSeed() {\n+    /** make sure that unimplemented methods fail */\n+    public void testUnimplementedMethods() {\n+\n         try {\n             RandomUtils.JVM_RANDOM.setSeed(1000);\n             fail(\"expecting UnsupportedOperationException\");\n         } catch (UnsupportedOperationException ex) {\n             // empty\n         }\n+\n+        try {\n+            RandomUtils.JVM_RANDOM.nextGaussian();\n+            fail(\"expecting UnsupportedOperationException\");\n+        } catch (UnsupportedOperationException ex) {\n+            // empty\n+        }\n+\n+        try {\n+            RandomUtils.JVM_RANDOM.nextBytes(null);\n+            fail(\"expecting UnsupportedOperationException\");\n+        } catch (UnsupportedOperationException ex) {\n+            // empty\n+        }\n+\n+    }\n+\n+    /** make sure that illegal arguments fail */\n+    public void testIllegalArguments() {\n+\n+        try {\n+            RandomUtils.JVM_RANDOM.nextInt(-1);\n+            fail(\"expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException ex) {\n+            // empty\n+        }\n+\n+        try {\n+            JVMRandom.nextLong( -1L );\n+            fail(\"expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException ex) {\n+            // empty\n+        }\n+\n     }\n     \n     /**", "timestamp": 1103997139, "metainfo": ""}