{"sha": "e48472319e000b15d9ba43be566ac1d31d90b635", "log": "Add validate methods for all elements same type bug 25683, from Norm Deane   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Validate.java\n+++ b/src/java/org/apache/commons/lang/Validate.java\n  * @author <a href=\"mailto:ola.berg@arkitema.se\">Ola Berg</a>\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n+ * @author Norm Deane\n  * @since 2.0\n- * @version $Id: Validate.java,v 1.8 2004/02/11 23:33:23 ggregory Exp $\n+ * @version $Id: Validate.java,v 1.9 2004/02/14 00:48:19 scolebourne Exp $\n  */\n public class Validate {\n     \n             }\n         }\n     }\n+    \n+    /**\n+     * <p>Validate an argument, throwing <code>IllegalArgumentException</code>\n+     * if the argument collection  is <code>null</code> or has elements that\n+     * are not of type <code>clazz</code>.</p>\n+     *\n+     * <pre>\n+     * Validate.allElementsOfClass(collection, String.class, \"Collection has invalid elements\");\n+     * </pre>\n+     *\n+     * @param collection  the collection to check\n+     * @param clazz  the <code>Class</code> which the collection's elements are expected to be\n+     * @param message  the exception message if the <code>Collection</code> has elements not of type <code>clazz</code>\n+     * @since 2.1\n+     */\n+    public static void allElementsOfClass(Collection collection, Class clazz, String message) {\n+    \tValidate.notNull(collection);\n+    \tfor (Iterator it = collection.iterator(); it.hasNext(); ) {\n+    \t\tif ((it.next().getClass().equals(clazz)) == false) {\n+    \t\t\tthrow new IllegalArgumentException(message);\n+    \t\t}\n+    \t}\n+    }   \n+    \n+    /**\n+     * <p>Validate an argument, throwing <code>IllegalArgumentException</code>\n+     * if the argument collection  is <code>null</code> or has elements that are not of \n+     * type <code>clazz</code>.</p>\n+     *\n+     * <pre>\n+     * Validate.allElementsOfClass(collection, String.class);\n+     * </pre>\n+     *\n+     * <p>The message in the exception is 'The validated collection contains an element not of type clazz at index: '.</p>\n+     * \n+     * @param collection  the collection to check\n+     * @param clazz the <code>Class</code> which the collection's elements are expected to be\n+     * @since 2.1\n+     */\n+    public static void allElementsOfClass(Collection collection, Class clazz) {\n+    \tValidate.notNull(collection);\n+    \tint i = 0;\n+    \tfor (Iterator it = collection.iterator(); it.hasNext(); i++) {\n+    \t\tif ((it.next().getClass().equals(clazz)) == false) {\n+    \t\t\tthrow new IllegalArgumentException(\"The validated collection contains an element not of type \"\n+                    + (clazz == null ? \"null\" : clazz.getName()) + \" at index: \" + i);\n+    \t\t}\n+    \t}\n+    }\n \n }\n--- a/src/test/org/apache/commons/lang/ValidateTest.java\n+++ b/src/test/org/apache/commons/lang/ValidateTest.java\n  * Unit tests {@link org.apache.commons.lang.util.Validate}.\n  *\n  * @author Stephen Colebourne\n- * @version $Id: ValidateTest.java,v 1.3 2003/08/19 02:32:16 bayard Exp $\n+ * @author Norm Deane\n+ * @version $Id: ValidateTest.java,v 1.4 2004/02/14 00:48:20 scolebourne Exp $\n  */\n public class ValidateTest extends TestCase {\n \n     }\n \n     //-----------------------------------------------------------------------\n+    public void testAllElementsOfClass() {\n+    \tList coll = new ArrayList();\n+    \tcoll.add(\"a\");\n+    \tcoll.add(\"b\");\n+    \tValidate.allElementsOfClass(coll, String.class, \"MSG\");\n+    \ttry {\n+    \t\tValidate.allElementsOfClass(coll, Integer.class, \"MSG\");\n+    \t\tfail(\"Expecting IllegalArgumentException\");\n+    \t} catch (IllegalArgumentException ex) {\n+    \t\tassertEquals(\"MSG\", ex.getMessage());\n+    \t}\n+    \tcoll.set(1, Boolean.FALSE);\n+    \ttry {\n+    \t\tValidate.allElementsOfClass(coll, String.class);\n+    \t\tfail(\"Expecting IllegalArgumentException\");\n+    \t} catch (IllegalArgumentException ex) {\n+    \t\tassertEquals(\"The validated collection contains an element not of type java.lang.String at index: 1\", ex.getMessage());\n+    \t}\n+    }\n }", "timestamp": 1076719700, "metainfo": ""}