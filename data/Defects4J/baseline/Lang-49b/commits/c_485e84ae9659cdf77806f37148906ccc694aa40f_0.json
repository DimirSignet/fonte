{"sha": "485e84ae9659cdf77806f37148906ccc694aa40f", "log": "clone method is now full covered in unit tests.  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrTokenizer.java\n+++ b/src/java/org/apache/commons/lang/text/StrTokenizer.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Creates a new instance of this Tokenizer.\n-     * The new instance is reset so that it will be at the start of the token list.\n+     * Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token\n+     * list. If a {@link CloneNotSupportedException} is caught, return <code>null</code>.\n+     * \n      * @return a new instance of this Tokenizer which has been reset.\n      */\n     public Object clone() {\n         try {\n-            StrTokenizer cloned = (StrTokenizer) super.clone();\n-            if (cloned.chars != null) {\n-                cloned.chars = (char[]) cloned.chars.clone();\n-            }\n-            cloned.reset();\n-            return cloned;\n-\n+            return cloneReset();\n         } catch (CloneNotSupportedException ex) {\n             return null;\n         }\n     }\n \n+    /**\n+     * Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token\n+     * list.\n+     * \n+     * @return a new instance of this Tokenizer which has been reset.\n+     */\n+    protected Object cloneReset() throws CloneNotSupportedException {\n+        StrTokenizer cloned = (StrTokenizer) super.clone();\n+        if (cloned.chars != null) {\n+            cloned.chars = (char[]) cloned.chars.clone();\n+        }\n+        cloned.reset();\n+        return cloned;\n+    }\n+\n }\n--- a/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n         assertEquals(tok, tok.setTrimmerMatcher(null));\n         assertEquals(tok, tok.setEmptyTokenAsNull(false));\n         assertEquals(tok, tok.setIgnoreEmptyTokens(false));\n+    }\n+\n+    /**\n+     * Tests that the {@link StrTokenizer#clone()} clone method catches {@link CloneNotSupportedException} and returns\n+     * <code>null</code>.\n+     */\n+    public void testCloneNotSupportedException() {\n+        Object notCloned = (new StrTokenizer() {\n+            public Object cloneReset() throws CloneNotSupportedException {\n+                throw new CloneNotSupportedException(\"test\");\n+            }\n+        }).clone();\n+        assertNull(notCloned);\n     }\n \n     public void testCloneNull() {", "timestamp": 1125260602, "metainfo": ""}