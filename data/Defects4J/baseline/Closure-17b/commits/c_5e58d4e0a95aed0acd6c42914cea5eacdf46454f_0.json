{"sha": "5e58d4e0a95aed0acd6c42914cea5eacdf46454f", "log": "Wiring of new Cleanup passconfig & basic unit test.  R=nicksantos DELTA=101  (100 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2834   ", "commit": "\n--- a/src/com/google/javascript/jscomp/FieldCleanupPass.java\n+++ b/src/com/google/javascript/jscomp/FieldCleanupPass.java\n  */\n public class FieldCleanupPass implements HotSwapCompilerPass {\n \n+  public FieldCleanupPass(AbstractCompiler compiler) {\n+  }\n+\n   @Override\n   public void hotSwapScript(Node scriptRoot, Node originalRoot) {\n   }\n--- /dev/null\n+++ b/src/com/google/javascript/jscomp/GlobalVarCleanupPass.java\n+/*\n+ * Copyright 2011 The Closure Compiler Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.javascript.jscomp;\n+\n+import com.google.javascript.rhino.Node;\n+\n+/**\n+ * A CleanupPass implementation that will remove all Global Vars contributed by\n+ * the original file.\n+ *\n+ * @author tylerg@google.com (Tyler Goodwin)\n+ */\n+public class GlobalVarCleanupPass implements HotSwapCompilerPass {\n+\n+  public GlobalVarCleanupPass(AbstractCompiler compiler) {\n+  }\n+\n+  @Override\n+  public void hotSwapScript(Node scriptRoot, Node originalRoot) {\n+  }\n+\n+  @Override\n+  public void process(Node externs, Node root) {\n+    // GlobalVarCleanupPass should not do work during process.\n+  }\n+\n+}", "timestamp": 1311967204, "metainfo": ""}