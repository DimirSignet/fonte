{"sha": "d7455015516a2b64927e405336bdab5286cef132", "log": "PeepholeOptimizations appear to always be the last pass to modify the AST, run it last in the optimization loops to avoid an extra pass. This order was manually choosen.  R=nicksantos DELTA=8  (3 added, 1 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4334   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PhaseOptimizer.java\n+++ b/src/com/google/javascript/jscomp/PhaseOptimizer.java\n   // This ordering is computed offline by running with compute_phase_ordering.\n   @VisibleForTesting\n   static final List<String> OPTIMAL_ORDER = ImmutableList.of(\n+     \"deadAssignmentsElimination\",\n+     \"inlineFunctions\",\n+     \"removeUnusedPrototypeProperties\",\n      \"removeUnreachableCode\",\n      \"removeUnusedVars\",\n-     \"foldConstants\",\n-     \"deadAssignmentsElimination\",\n+     \"minimizeExitPoints\",\n      \"inlineVariables\",\n-     \"inlineFunctions\",\n-     \"removeUnusedPrototypeProperties\",\n-     \"minimizeExitPoints\");\n+     \"collapseObjectLiterals\",\n+     \"peepholeOptimizations\"\n+     );\n \n   static final int MAX_LOOPS = 100;\n   static final String OPTIMIZE_LOOP_ERROR =", "timestamp": 1331165257, "metainfo": ""}