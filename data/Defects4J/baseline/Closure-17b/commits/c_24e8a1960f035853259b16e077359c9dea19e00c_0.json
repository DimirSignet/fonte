{"sha": "24e8a1960f035853259b16e077359c9dea19e00c", "log": "Work around for generated AST not having file info and failing aggressive var check.  R=nicksantos DELTA=10  (7 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3179   ", "commit": "\n--- a/src/com/google/javascript/jscomp/VariableReferenceCheck.java\n+++ b/src/com/google/javascript/jscomp/VariableReferenceCheck.java\n           // check if any of them are before this block.\n           for (BasicBlock declaredBlock : blocksWithDeclarations) {\n             if (declaredBlock.provablyExecutesBefore(basicBlock)) {\n+              // TODO(johnlenz): Fix AST generating clients that so they would\n+              // have property StaticSourceFile attached at each node. Or\n+              // better yet, make sure the generated code never violates\n+              // the requirement to pass aggressive var check!\n+              String filename = NodeUtil.getSourceName(reference.getNode());\n               compiler.report(\n-                  JSError.make(reference.getSourceFile().getName(),\n+                  JSError.make(filename,\n                       reference.getNode(),\n                       checkLevel,\n                       REDECLARED_VARIABLE, v.name));\n           // block it is declared.\n           for (BasicBlock declaredBlock : blocksWithDeclarations) {\n             if (!declaredBlock.provablyExecutesBefore(basicBlock)) {\n+              String filename = NodeUtil.getSourceName(reference.getNode());\n               compiler.report(\n-                  JSError.make(reference.getSourceFile().getName(),\n+                  JSError.make(filename,\n                       reference.getNode(),\n                       AMBIGUOUS_FUNCTION_DECL, v.name));\n               break;\n             // Only generate warnings if the scopes do not match in order\n             // to deal with possible forward declarations and recursion\n             if (reference.getScope() == v.scope) {\n+              String filename = NodeUtil.getSourceName(reference.getNode());\n               compiler.report(\n-                  JSError.make(reference.getSourceFile().getName(),\n+                  JSError.make(filename,\n                                reference.getNode(),\n                                checkLevel,\n                                UNDECLARED_REFERENCE, v.name));", "timestamp": 1315006687, "metainfo": ""}