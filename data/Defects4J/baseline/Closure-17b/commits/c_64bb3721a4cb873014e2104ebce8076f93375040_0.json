{"sha": "64bb3721a4cb873014e2104ebce8076f93375040", "log": "Throw exceptions when duplicated MF or bundle file names are passed to JSCompiler, to avoid JSCompiler flags blowing up.  R=nicksantos DELTA=53  (53 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3086   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n import com.google.javascript.jscomp.CompilerOptions.TweakProcessing;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.TokenStream;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.logging.Level;\n \n /**\n       } else {\n         throw new FlagUsageException(\"Unknown language `\" + config.languageIn +\n                                      \"' specified.\");\n+      }\n+    }\n+\n+    if (!config.outputManifests.isEmpty()) {\n+      Set<String> uniqueNames = Sets.newHashSet();\n+      for (String filename : config.outputManifests) {\n+        if (!uniqueNames.add(filename)) {\n+          throw new FlagUsageException(\"output_manifest flags specify \" +\n+              \"duplicate file names: \" + filename);\n+        }\n+      }\n+    }\n+\n+    if (!config.outputBundles.isEmpty()) {\n+      Set<String> uniqueNames = Sets.newHashSet();\n+      for (String filename : config.outputBundles) {\n+        if (!uniqueNames.add(filename)) {\n+          throw new FlagUsageException(\"output_bundle flags specify \" +\n+              \"duplicate file names: \" + filename);\n+        }\n       }\n     }\n ", "timestamp": 1314056681, "metainfo": ""}