{"sha": "c559972fbc64b616050017adeffb079d0b8801c0", "log": "Make sure that provide'd strings get added to the symbol table, even when there are crazy errors  R=johnlenz DELTA=15  (13 added, 2 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3705   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n         }\n       }\n \n+      maybeAddToSymbolTable(left);\n+      maybeAddStringNodeToSymbolTable(arg);\n+\n       // Requires should be removed before runtime.  The one\n       // exception is if the type has not been provided yet and\n       // errors for broken requires are turned off, in which case,\n       // leave this here this time and let it error next time if it\n       // is still not provided.\n       if (provided != null || requiresLevel.isOn()) {\n-        maybeAddToSymbolTable(left);\n-        maybeAddStringNodeToSymbolTable(arg);\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }\n--- a/test/com/google/javascript/jscomp/SymbolTableTest.java\n+++ b/test/com/google/javascript/jscomp/SymbolTableTest.java\n     // that the one in the goog.provide string and the one created by\n     // ProcessClosurePrimitives count as the same reference.\n     assertEquals(8, Iterables.size(table.getReferences(goog)));\n+  }\n+\n+  public void testGoogRequireReferences2() throws Exception {\n+    options.brokenClosureRequiresLevel = CheckLevel.OFF;\n+    SymbolTable table = createSymbolTable(\n+        \"foo.bar = function(){};  // definition\\n\"\n+        + \"goog.require('foo.bar')\\n\");\n+    Symbol fooBar = getGlobalVar(table, \"foo.bar\");\n+    assertNotNull(fooBar);\n+    assertEquals(2, Iterables.size(table.getReferences(fooBar)));\n   }\n \n   public void testGlobalVarInExterns() throws Exception {", "timestamp": 1321319632, "metainfo": ""}