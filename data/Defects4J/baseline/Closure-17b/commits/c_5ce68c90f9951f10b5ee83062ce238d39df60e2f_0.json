{"sha": "5ce68c90f9951f10b5ee83062ce238d39df60e2f", "log": "fix another edge case involving direct assignment to prototypes of global variables in a local scope.  R=johnlenz DELTA=17  (16 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=222680   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n             // Just ignore assigns to declared prototypes.\n             return;\n           }\n-          scope.undeclare(qVar);\n+          if (qVar.getScope() == scope) {\n+            scope.undeclare(qVar);\n+          }\n         }\n       }\n \n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"A.prototype = new Base();\" +\n         \"A.prototype.foo = 3;\" +\n         \"/** @return {string} */ function foo() { return (new Base).foo; }\");\n+  }\n+\n+  public void testDirectPrototypeAssignment3() throws Exception {\n+    // This verifies that the compiler doesn't crash if the user\n+    // overwrites the prototype of a global variable in a local scope.\n+    testTypes(\n+        \"/** @constructor */ var MainWidgetCreator = function() {};\" +\n+        \"/** @param {Function} ctor */\" +\n+        \"function createMainWidget(ctor) {\" +\n+        \"  /** @constructor */ function tempCtor() {};\" +\n+        \"  tempCtor.prototype = ctor.prototype;\" +\n+        \"  MainWidgetCreator.superClass_ = ctor.prototype;\" +\n+        \"  MainWidgetCreator.prototype = new tempCtor();\" +\n+        \"}\");\n   }\n \n   public void testGoodImplements1() throws Exception {", "timestamp": 1284662481, "metainfo": ""}