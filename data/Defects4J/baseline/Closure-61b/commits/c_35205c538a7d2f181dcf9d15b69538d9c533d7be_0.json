{"sha": "35205c538a7d2f181dcf9d15b69538d9c533d7be", "log": "Fold assignments with commutative operators: \"x=2|x\" becomes \"x|=2\"  R=nicksantos DELTA=19  (16 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=251   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n       return n;\n     }\n \n-    Node leftChild = right.getFirstChild();\n-    if (!areNodesEqualForInlining(left, leftChild)) {\n+    Node newRight;\n+    if (areNodesEqualForInlining(left, right.getFirstChild())) {\n+      newRight = right.getLastChild();\n+    } else if (NodeUtil.isCommutative(right.getType()) &&\n+          areNodesEqualForInlining(left, right.getLastChild())) {\n+      newRight = right.getFirstChild();\n+    } else {\n       return n;\n     }\n \n     }\n \n     Node newNode = new Node(newType,\n-        left.detachFromParent(), right.getLastChild().detachFromParent());\n+        left.detachFromParent(), newRight.detachFromParent());\n     n.getParent().replaceChild(n, newNode);\n \n     reportCodeChange();\n--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n \n   public void testAssignOps() {\n     fold(\"x=x+y\", \"x+=y\");\n+    foldSame(\"x=y+x\");\n     fold(\"x=x*y\", \"x*=y\");\n+    fold(\"x=y*x\", \"x*=y\");\n+    fold(\"x.y=x.y+z\", \"x.y+=z\");\n+    foldSame(\"next().x = next().x + 1\");\n+\n+    fold(\"x=x-y\", \"x-=y\");\n+    foldSame(\"x=y-x\");\n+    fold(\"x=x|y\", \"x|=y\");\n+    fold(\"x=y|x\", \"x|=y\");\n+    fold(\"x=x*y\", \"x*=y\");\n+    fold(\"x=y*x\", \"x*=y\");\n     fold(\"x.y=x.y+z\", \"x.y+=z\");\n     foldSame(\"next().x = next().x + 1\");\n   }", "timestamp": 1294793413, "metainfo": ""}