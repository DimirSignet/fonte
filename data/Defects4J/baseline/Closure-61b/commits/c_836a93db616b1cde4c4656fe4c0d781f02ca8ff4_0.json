{"sha": "836a93db616b1cde4c4656fe4c0d781f02ca8ff4", "log": "Add handling for \"if (cond) return expression1; return expression2; Fixes issue 436 Issue: http://code.google.com/p/closure-compiler/issues/detail?id=436  R=acleung   Revision created by MOE tool push_codebase. MOE_MIGRATION=1912   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n       case Token.NAME:\n         return tryReplaceUndefined(node);\n \n+      case Token.BLOCK:\n+        return tryReplaceIf(node);\n+\n       default:\n         return node; //Nothing changed\n     }\n     } else {\n       return n;\n     }\n+  }\n+\n+  /**\n+   * Use \"return x?1:2;\" in place of \"if(x)return 1;return 2;\"\n+   */\n+  private Node tryReplaceIf(Node n) {\n+\n+    for (Node child = n.getFirstChild();\n+         child != null; child = child.getNext()){\n+      if (child.getType() == Token.IF){\n+\n+        Node cond = child.getFirstChild();\n+        Node thenBranch = cond.getNext();\n+        Node elseBranch = thenBranch.getNext();\n+        Node nextNode = child.getNext();\n+\n+        if (nextNode != null && elseBranch == null &&\n+            isReturnBlock(thenBranch) && isReturnExpression(nextNode)) {\n+          Node thenExpr = null;\n+          // if(x)return; return 1 -> return x?void 0:1\n+          if (isReturnExpressBlock(thenBranch)) {\n+            thenExpr = getBlockReturnExpression(thenBranch);\n+            thenExpr.detachFromParent();\n+          } else {\n+            thenExpr = NodeUtil.newUndefinedNode(child);\n+          }\n+\n+          Node elseExpr = nextNode.getFirstChild();\n+\n+          cond.detachFromParent();\n+          elseExpr.detachFromParent();\n+\n+          Node hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr)\n+                              .copyInformationFrom(child);\n+          Node returnNode = new Node(Token.RETURN, hookNode);\n+          n.replaceChild(child, returnNode);\n+          n.removeChild(nextNode);\n+          reportCodeChange();\n+        }\n+      }\n+    }\n+    return n;\n   }\n \n   /**\n \n   /**\n    * @return Whether the node is a block with a single statement that is\n+   *     an return with or without an expression.\n+   */\n+  private boolean isReturnBlock(Node n) {\n+    if (n.getType() == Token.BLOCK) {\n+      if (n.hasOneChild()) {\n+        Node first = n.getFirstChild();\n+        return first.getType() == Token.RETURN;\n+      }\n+    }\n+\n+    return false;\n+  }\n+\n+  /**\n+   * @return Whether the node is a block with a single statement that is\n    *     an return.\n    */\n   private boolean isReturnExpressBlock(Node n) {\n       }\n     }\n \n+    return false;\n+  }\n+\n+  /**\n+   * @return Whether the node is a single return statement.\n+   */\n+  private boolean isReturnExpression(Node n) {\n+    if (n.getType() == Token.RETURN) {\n+      return n.hasOneChild();\n+    }\n     return false;\n   }\n \n--- a/test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java\n   public void testFoldReturns() {\n     fold(\"function f(){if(x)return 1;else return 2}\",\n          \"function f(){return x?1:2}\");\n+    fold(\"function f(){if(x)return 1;return 2}\",\n+         \"function f(){return x?1:2}\");\n+    fold(\"function f(){if(x)return;return 2}\",\n+         \"function f(){return x?void 0:2}\");\n     fold(\"function f(){if(x)return 1+x;else return 2-x}\",\n+         \"function f(){return x?1+x:2-x}\");\n+    fold(\"function f(){if(x)return 1+x;return 2-x}\",\n          \"function f(){return x?1+x:2-x}\");\n     fold(\"function f(){if(x)return y += 1;else return y += 2}\",\n          \"function f(){return x?(y+=1):(y+=2)}\");\n \n     fold(\"function f(){if(x)return;else return 2-x}\",\n          \"function f(){if(x);else return 2-x}\");\n+    fold(\"function f(){if(x)return;return 2-x}\",\n+         \"function f(){return x?void 0:2-x}\");\n     fold(\"function f(){if(x)return x;else return}\",\n          \"function f(){if(x)return x;else;}\");\n+    fold(\"function f(){if(x)return x;return}\",\n+         \"function f(){if(x)return x}\");\n \n     foldSame(\"function f(){for(var x in y) { return x.y; } return k}\");\n   }", "timestamp": 1305346141, "metainfo": ""}