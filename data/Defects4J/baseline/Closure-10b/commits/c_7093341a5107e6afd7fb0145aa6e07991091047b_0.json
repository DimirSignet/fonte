{"sha": "7093341a5107e6afd7fb0145aa6e07991091047b", "log": "Add a \"@suppress {unreachable}\".  R=acleung DELTA=92  (87 added, 2 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=87016   ", "commit": "\n--- a/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n+++ b/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n   public java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Entry> getEntryList() {\n     return entry_;\n   }\n+  public java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder> \n+      getEntryOrBuilderList() {\n+    return entry_;\n+  }\n   public int getEntryCount() {\n     return entry_.size();\n   }\n   public com.google.javascript.jscomp.FunctionInformationMap.Entry getEntry(int index) {\n+    return entry_.get(index);\n+  }\n+  public com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder getEntryOrBuilder(\n+      int index) {\n     return entry_.get(index);\n   }\n   \n   public java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Module> getModuleList() {\n     return module_;\n   }\n+  public java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder> \n+      getModuleOrBuilderList() {\n+    return module_;\n+  }\n   public int getModuleCount() {\n     return module_.size();\n   }\n   public com.google.javascript.jscomp.FunctionInformationMap.Module getModule(int index) {\n+    return module_.get(index);\n+  }\n+  public com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder getModuleOrBuilder(\n+      int index) {\n     return module_.get(index);\n   }\n   \n     }\n     \n     private com.google.protobuf.RepeatedFieldBuilder<\n-        com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder> entryBuilder_;\n+        com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder, com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder> entryBuilder_;\n     \n     public java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Entry> getEntryList() {\n       if (entryBuilder_ == null) {\n         int index) {\n       return getEntryFieldBuilder().getBuilder(index);\n     }\n+    public com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder getEntryOrBuilder(\n+        int index) {\n+      if (entryBuilder_ == null) {\n+        return entry_.get(index);  } else {\n+        return entryBuilder_.getMessageOrBuilder(index);\n+      }\n+    }\n+    public java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder> \n+         getEntryOrBuilderList() {\n+      if (entryBuilder_ != null) {\n+        return entryBuilder_.getMessageOrBuilderList();\n+      } else {\n+        return java.util.Collections.unmodifiableList(entry_);\n+      }\n+    }\n     public com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder addEntryBuilder() {\n       return getEntryFieldBuilder().addBuilder(\n           com.google.javascript.jscomp.FunctionInformationMap.Entry.getDefaultInstance());\n       return getEntryFieldBuilder().getBuilderList();\n     }\n     private com.google.protobuf.RepeatedFieldBuilder<\n-        com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder> getEntryFieldBuilder() {\n+        com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder, com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder> \n+        getEntryFieldBuilder() {\n       if (entryBuilder_ == null) {\n         entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<\n-            com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder>(\n+            com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder, com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder>(\n                 entry_,\n                 ((bitField0_ & 0x00000001) == 0x00000001),\n                 getParentForChildren(),\n     }\n     \n     private com.google.protobuf.RepeatedFieldBuilder<\n-        com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder> moduleBuilder_;\n+        com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder, com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder> moduleBuilder_;\n     \n     public java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Module> getModuleList() {\n       if (moduleBuilder_ == null) {\n         int index) {\n       return getModuleFieldBuilder().getBuilder(index);\n     }\n+    public com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder getModuleOrBuilder(\n+        int index) {\n+      if (moduleBuilder_ == null) {\n+        return module_.get(index);  } else {\n+        return moduleBuilder_.getMessageOrBuilder(index);\n+      }\n+    }\n+    public java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder> \n+         getModuleOrBuilderList() {\n+      if (moduleBuilder_ != null) {\n+        return moduleBuilder_.getMessageOrBuilderList();\n+      } else {\n+        return java.util.Collections.unmodifiableList(module_);\n+      }\n+    }\n     public com.google.javascript.jscomp.FunctionInformationMap.Module.Builder addModuleBuilder() {\n       return getModuleFieldBuilder().addBuilder(\n           com.google.javascript.jscomp.FunctionInformationMap.Module.getDefaultInstance());\n       return getModuleFieldBuilder().getBuilderList();\n     }\n     private com.google.protobuf.RepeatedFieldBuilder<\n-        com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder> getModuleFieldBuilder() {\n+        com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder, com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder> \n+        getModuleFieldBuilder() {\n       if (moduleBuilder_ == null) {\n         moduleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<\n-            com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder>(\n+            com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder, com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder>(\n                 module_,\n                 ((bitField0_ & 0x00000002) == 0x00000002),\n                 getParentForChildren(),\n--- a/gen/com/google/javascript/jscomp/FunctionInformationMapOrBuilder.java\n+++ b/gen/com/google/javascript/jscomp/FunctionInformationMapOrBuilder.java\n     extends com.google.protobuf.MessageOrBuilder {\n   \n   // repeated group Entry = 1 {\n+  java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Entry> \n+      getEntryList();\n+  com.google.javascript.jscomp.FunctionInformationMap.Entry getEntry(int index);\n+  int getEntryCount();\n   java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder> \n-      getEntryList();\n-  int getEntryCount();\n-  com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder getEntry(int index);\n+      getEntryOrBuilderList();\n+  com.google.javascript.jscomp.FunctionInformationMap.EntryOrBuilder getEntryOrBuilder(\n+      int index);\n   \n   // repeated group Module = 101 {\n+  java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Module> \n+      getModuleList();\n+  com.google.javascript.jscomp.FunctionInformationMap.Module getModule(int index);\n+  int getModuleCount();\n   java.util.List<? extends com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder> \n-      getModuleList();\n-  int getModuleCount();\n-  com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder getModule(int index);\n+      getModuleOrBuilderList();\n+  com.google.javascript.jscomp.FunctionInformationMap.ModuleOrBuilder getModuleOrBuilder(\n+      int index);\n }\n--- a/src/com/google/javascript/jscomp/CheckUnreachableCode.java\n+++ b/src/com/google/javascript/jscomp/CheckUnreachableCode.java\n import com.google.javascript.jscomp.graph.GraphNode;\n import com.google.javascript.jscomp.graph.GraphReachability;\n import com.google.javascript.jscomp.graph.GraphReachability.EdgeTuple;\n+import com.google.javascript.rhino.JSDocInfo;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n import com.google.javascript.rhino.jstype.TernaryValue;\n \n   private final AbstractCompiler compiler;\n   private final CheckLevel level;\n+  private boolean scopeNeedsInit = true;\n \n   CheckUnreachableCode(AbstractCompiler compiler, CheckLevel level) {\n     this.compiler = compiler;\n \n   @Override\n   public void enterScope(NodeTraversal t) {\n-    new GraphReachability<Node, ControlFlowGraph.Branch>(\n-        t.getControlFlowGraph(), new ReachablePredicate()).compute(\n-            t.getControlFlowGraph().getEntry().getValue());\n+    scopeNeedsInit = true;\n   }\n \n   @Override\n   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n+    if (!shouldCheck(n)) {\n+      return false;\n+    }\n+\n+    if (scopeNeedsInit) {\n+      initScope(t.getControlFlowGraph());\n+      scopeNeedsInit = false;\n+    }\n+\n     GraphNode<Node, Branch> gNode = t.getControlFlowGraph().getNode(n);\n     if (gNode != null && gNode.getAnnotation() != GraphReachability.REACHABLE) {\n \n         return false;\n       }\n     }\n+    return true;\n+  }\n+\n+  private void initScope(ControlFlowGraph<Node> controlFlowGraph) {\n+    new GraphReachability<Node, ControlFlowGraph.Branch>(\n+        controlFlowGraph, new ReachablePredicate()).compute(\n+            controlFlowGraph.getEntry().getValue());\n+  }\n+\n+  private boolean shouldCheck(Node n) {\n+    switch (n.getType()) {\n+      case Token.SCRIPT:\n+      case Token.BLOCK:\n+      case Token.FUNCTION:\n+        JSDocInfo info = n.getJSDocInfo();\n+        if (info != null && info.getSuppressions().contains(\"unreachable\")) {\n+          return false;\n+        }\n+    }\n+\n     return true;\n   }\n \n--- a/test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java\n+++ b/test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java\n     assertUnreachable(\"while(true) {} foo()\");\n   }\n \n+  public void testSuppression() {\n+    assertUnreachable(\"if(false) { }\");\n+\n+    testSame(\n+        \"/** @fileoverview\\n\" +\n+        \" * @suppress {unreachable}\\n\" +\n+        \" */\\n\" +\n+        \"if(false) { }\");\n+\n+    testSame(\n+        \"/** @fileoverview\\n\" +\n+        \" * @suppress {unreachable}\\n\" +\n+        \" */\\n\" +\n+        \"function f() { if(false) { } }\");\n+\n+    testSame(\n+        \"/**\\n\" +\n+        \" * @suppress {unreachable}\\n\" +\n+        \" */\\n\" +\n+        \"function f() { if(false) { } }\");\n+\n+    assertUnreachable(\n+        \"/**\\n\" +\n+        \" * @suppress {unreachable}\\n\" +\n+        \" */\\n\" +\n+        \"function f() { if(false) { } }\\n\" +\n+        \"function g() { if(false) { } }\\n\");\n+\n+    testSame(\n+        \"/**\\n\" +\n+        \" * @suppress {unreachable}\\n\" +\n+        \" */\\n\" +\n+        \"function f() {\\n\" +\n+        \"  function g() { if(false) { } }\\n\" +\n+        \"  if(false) { } }\\n\");\n+\n+    assertUnreachable(\n+        \"function f() {\\n\" +\n+        \"  /**\\n\" +\n+        \"   * @suppress {unreachable}\\n\" +\n+        \"   */\\n\" +\n+        \"  function g() { if(false) { } }\\n\" +\n+        \"  if(false) { } }\\n\");\n+\n+    testSame(\n+        \"function f() {\\n\" +\n+        \"  /**\\n\" +\n+        \"   * @suppress {unreachable}\\n\" +\n+        \"   */\\n\" +\n+        \"  function g() { if(false) { } }\\n\" +\n+        \"}\\n\");\n+  }\n+\n   private void assertUnreachable(String js) {\n     test(js, js, CheckUnreachableCode.UNREACHABLE_CODE);\n   }", "timestamp": 1281051209, "metainfo": ""}