{"sha": "8bcffc6d81ab00eaf25a963d8f8b206410fad225", "log": "Fix .join folding blocking the next release.  R=acleung DELTA=18  (16 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=799   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n           // If the Node is not a string literal, ensure that\n           // it is coerced to a string.\n           Node replacement = new Node(Token.ADD,\n-              Node.newString(\"\").copyInformationFrom(right),\n+              Node.newString(\"\").copyInformationFrom(n),\n               foldedStringNode);\n           foldedStringNode = replacement;\n         }\n         }\n         int kJoinOverhead = \"[].join()\".length();\n         foldedSize += kJoinOverhead;\n-        foldedSize += InlineCostEstimator.getCost(right);\n+        foldedSize += (right != null) ? InlineCostEstimator.getCost(right) : 0;\n         if (foldedSize > originalSize) {\n           return n;\n         }\n--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n     fold(\"void 1\", \"void 0\");\n     fold(\"void x\", \"void 0\");\n     fold(\"void x()\", \"void x()\");\n+  }\n+\n+  public void testJoinBug() {\n+    fold(\"var x = [].join();\", \"var x = '';\");\n+    fold(\"var x = [x].join();\", \"var x = '' + x;\");\n+    foldSame(\"var x = [x,y].join();\");\n+    foldSame(\"var x = [x,y,z].join();\");\n+\n+    foldSame(\"shape['matrix'] = [\\n\" +\n+            \"    Number(headingCos2).toFixed(4),\\n\" +\n+            \"    Number(-headingSin2).toFixed(4),\\n\" +\n+            \"    Number(headingSin2 * yScale).toFixed(4),\\n\" +\n+            \"    Number(headingCos2 * yScale).toFixed(4),\\n\" +\n+            \"    0,\\n\" +\n+            \"    0\\n\" +\n+            \"  ].join()\");\n   }\n \n   private static final List<String> LITERAL_OPERANDS =", "timestamp": 1299603016, "metainfo": ""}