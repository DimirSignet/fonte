{"sha": "a455a437d82e4945330499cb7925fc767a4db046", "log": "Fold identity assignments  R=nicksantos DELTA=30  (30 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=163   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n+++ b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n   @Override\n   Node optimizeSubtree(Node subtree) {\n     switch(subtree.getType()) {\n+      case Token.ASSIGN:\n+        return tryFoldAssignment(subtree);\n       case Token.COMMA:\n         return tryFoldComma(subtree);\n       case Token.SCRIPT:\n         default:\n           return subtree;\n     }\n+  }\n+\n+  /**\n+   * Try removing identity assignments\n+   * @return the replacement node, if changed, or the original if not\n+   */\n+  private Node tryFoldAssignment(Node subtree) {\n+    Preconditions.checkState(subtree.getType() == Token.ASSIGN);\n+    Node left = subtree.getFirstChild();\n+    Node right = subtree.getLastChild();\n+    // Only names\n+    if (left.getType() == Token.NAME\n+        && right.getType() == Token.NAME\n+        && left.getString().equals(right.getString())) {\n+      subtree.getParent().replaceChild(subtree, right.detachFromParent());\n+      reportCodeChange();\n+      return right;\n+    }\n+    return subtree;\n   }\n \n   /**\n--- a/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n   public void testNew2() {\n     test(\"1 + new Date;\", \"\");\n   }\n+  \n+  public void testFoldAssign() {\n+    test(\"x=x\", \"\");\n+    testSame(\"x=xy\");\n+    testSame(\"x=x + 1\");\n+    testSame(\"x.a=x.a\");\n+    test(\"var y=(x=x)\", \"var y=x\");\n+    test(\"y=1 + (x=x)\", \"y=1 + x\");\n+  }\n }", "timestamp": 1292870571, "metainfo": ""}