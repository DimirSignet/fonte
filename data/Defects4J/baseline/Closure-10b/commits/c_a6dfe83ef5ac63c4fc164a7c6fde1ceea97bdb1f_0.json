{"sha": "a6dfe83ef5ac63c4fc164a7c6fde1ceea97bdb1f", "log": "Don't run RemoveClassProperties with heuristic renaming.  R=nicksantos DELTA=7  (2 added, 1 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5075   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n       passes.add(removeUnusedPrototypeProperties);\n     }\n \n-    if (options.removeUnusedClassProperties) {\n+    if (options.removeUnusedClassProperties && !isInliningForbidden()) {\n       passes.add(removeUnusedClassProperties);\n     }\n \n--- a/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java\n      switch (n.getType()) {\n        case Token.GETPROP: {\n          String propName = n.getLastChild().getString();\n-         if (inExterns || isPinningPropertyUse(n) ||\n-             compiler.getCodingConvention().isExported(propName)) {\n+         if (inExterns || isPinningPropertyUse(n)) {\n            used.add(propName);\n          } else {\n            // This is a definition of a property but it is only removable", "timestamp": 1340750316, "metainfo": ""}