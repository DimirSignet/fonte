{"sha": "c827c306c28bd89bf354d0f6ece737d58eb97a61", "log": "Add an integration test for source map parsing and consuming, and fix bugs that it found.  R=jschorr DELTA=69  (66 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1506   ", "commit": "\n--- a/src/com/google/debugging/sourcemap/SourceMapConsumerV2.java\n+++ b/src/com/google/debugging/sourcemap/SourceMapConsumerV2.java\n       return null;\n     }\n \n+    Preconditions.checkState(lineNumber >= 0, \"Line number must be >= 0\");\n+    Preconditions.checkState(columnIndex >= 0, \"Column index must be >= 0\");\n+\n     if (!characterMap.containsKey(lineNumber)) {\n       // Parse the line map entry and place it into the character map.\n       try {\n     }\n \n     int index = map.get(columnIndex);\n+    if (index == -1) {\n+      return null;\n+    }\n     Preconditions.checkState(index < mappings.size(),\n         \"Invalid mapping reference\");\n     return mappings.get(index);\n--- a/src/com/google/debugging/sourcemap/SourceMapLineDecoder.java\n+++ b/src/com/google/debugging/sourcemap/SourceMapLineDecoder.java\n   private static List<Integer> decodeLine(StringParser reader) {\n     List<Integer> result = Lists.newArrayListWithCapacity(512);\n     int lastId = 0;\n-    do {\n+    while (reader.hasNext()) {\n       LineEntry entry = decodeLineEntry(reader, lastId);\n       lastId = entry.id;\n \n       for (int i=0; i < entry.reps; i++) {\n         result.add(entry.id);\n       }\n-    } while(reader.hasNext());\n+    }\n \n     return result;\n   }\n--- a/test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java\n+++ b/test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java\n     assertEquals(15, mapping.getLineNumber());\n     assertEquals(16, mapping.getColumnPosition());\n     assertEquals(\"yo!\", mapping.getIdentifier());\n+\n+    assertNull(sourceMap.getMappingForLine(Integer.MAX_VALUE, 1));\n+    assertNotNull(sourceMap.getMappingForLine(1, Integer.MAX_VALUE));\n   }\n \n   public void testLineEdges() throws Exception {\n--- a/test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java\n+++ b/test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java\n     assertEquals(1, mapping.getLineNumber());\n     assertEquals(51, mapping.getColumnPosition());\n     assertEquals(\"foo\", mapping.getIdentifier());\n+\n+    assertNull(sourceMap.getMappingForLine(Integer.MAX_VALUE, 1));\n+    assertNull(sourceMap.getMappingForLine(1, Integer.MAX_VALUE));\n   }\n \n   public void testGetMappingForLineWithNameIndex() throws Exception {", "timestamp": 1303253665, "metainfo": ""}