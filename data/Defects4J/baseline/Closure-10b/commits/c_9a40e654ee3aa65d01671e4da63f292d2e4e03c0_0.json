{"sha": "9a40e654ee3aa65d01671e4da63f292d2e4e03c0", "log": "print parameter types better  R=acleung DELTA=18  (8 added, 0 deleted, 10 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4166   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/ParameterizedType.java\n+++ b/src/com/google/javascript/rhino/jstype/ParameterizedType.java\n   public JSType getParameterType() {\n     return parameterType;\n   }\n+\n+  @Override\n+  String toStringHelper(boolean forAnnotations) {\n+    String result = super.toStringHelper(forAnnotations);\n+    return parameterType.isUnknownType() ?\n+        result :\n+        (result + \".<\" + parameterType.toStringHelper(forAnnotations) + \">\");\n+  }\n }\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n         + \"function f(a){};\\n\",\n         \"goog.java.Long;\\n\"\n         + \"/**\\n\"\n-        + \" * @param {(Array|null)} a\\n\"\n+        + \" * @param {(Array.<number>|null)} a\\n\"\n         + \" * @return {undefined}\\n\"\n         + \" */\\n\"\n         + \"function f(a) {\\n}\\n\");\n--- a/test/com/google/javascript/jscomp/LooseTypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/LooseTypeCheckTest.java\n         \"* @return {number}\\n\" +\n         \"*/ var f = function(a) { return a[0]; };\",\n         \"inconsistent return type\\n\" +\n-        \"found   : Array\\n\" +\n+        \"found   : Array.<number>\\n\" +\n         \"required: number\");\n   }\n \n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"* @return {number}\\n\" +\n         \"*/ var f = function(a) { return a[0]; };\",\n         \"inconsistent return type\\n\" +\n-        \"found   : Array\\n\" +\n+        \"found   : Array.<number>\\n\" +\n         \"required: number\");\n   }\n ", "timestamp": 1328285067, "metainfo": ""}