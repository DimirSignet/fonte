{"sha": "f9618adc742b3d2caab2f958d3ff1fa0b1124d0e", "log": "Fix a bug where using \"this\" in a {!Function} would give you the universal object, which is not correct.  R=johnlenz DELTA=20  (18 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4642   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n   @Override\n   public ObjectType getTypeOfThis() {\n     return typeOfThis.isNoObjectType() ?\n-        registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE) : typeOfThis;\n+        registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE) : typeOfThis;\n   }\n \n   /**\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"var f = function() { throw 'x' };\",\n         \"f\",\n         \"function (): ?\");\n+  }\n+\n+  public void testFunctionInference22() throws Exception {\n+    testTypes(\n+        \"/** @type {!Function} */ var f = function() { g(this); };\" +\n+        \"/** @param {boolean} x */ var g = function(x) {};\");\n+  }\n+\n+  public void testFunctionInference23() throws Exception {\n+    // We want to make sure that 'prop' isn't declared on all objects.\n+    testTypes(\n+        \"/** @type {!Function} */ var f = function() {\\n\" +\n+        \"  /** @type {number} */ this.prop = 3;\\n\" +\n+        \"};\" +\n+        \"/**\\n\" +\n+        \" * @param {Object} x\\n\" +\n+        \" * @return {string}\\n\" +\n+        \" */ var g = function(x) { return x.prop; };\");\n   }\n \n   public void testInnerFunction1() throws Exception {\n--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n     // The type of apply() on a function instance is resolved dynamically,\n     // since apply varies with the type of the function it's called on.\n     assertEquals(\n-        \"function ((Object|null)=, (Object|null)=): ?\",\n+        \"function (?=, (Object|null)=): ?\",\n         f.getPropertyType(\"apply\").toString());\n \n     // The type of apply() on the function prototype just takes what it was", "timestamp": 1335839875, "metainfo": ""}