{"sha": "ccbbcbf71b1cb8771c9cdad1d28b367ce6ea0da2", "log": "Change on 2010/06/03 by nicksantos          Also use the @override tag as a signal that a global this is safe.         see the test case for an example.          R=acleung         DELTA=10  (8 added, 0 deleted, 2 changed)    Revision created by MOE tool push_codebase. MOE_MIGRATION=18001   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n \n     if (n.getType() == Token.FUNCTION) {\n       // Don't traverse functions that are constructors or have the @this\n-      // annotation.\n+      // or @override annotation.\n       JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n-      if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.hasThisType())) {\n+      if (jsDoc != null &&\n+          (jsDoc.isConstructor() ||\n+           jsDoc.hasThisType() ||\n+           jsDoc.isOverride())) {\n         return false;\n       }\n \n--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n     testSame(\"/** @constructor */a.A = function() { this.m2 = 5; }\");\n   }\n \n+  public void testOverride1() {\n+    testSame(\"/** @constructor */function A() { } var a = new A();\" +\n+             \"/** @override */ a.foo = function() { this.bar = 5; };\");\n+  }\n+\n   public void testThisJSDoc1() throws Exception {\n     testSame(\"/** @this whatever */function h() { this.foo = 56; }\");\n   }", "timestamp": 1275611479, "metainfo": ""}