{"sha": "396a730ddf5b74ae223a5949f276d0c166a2284d", "log": "For the open source compiler running with WarningLevel. QUIET skip the passes that can't report anything.  R=nicksantos DELTA=21  (21 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3397   ", "commit": "\n--- a/src/com/google/javascript/jscomp/WarningLevel.java\n+++ b/src/com/google/javascript/jscomp/WarningLevel.java\n     options.addWarningsGuard(\n         new ShowByPathWarningsGuard(\n             \"the_longest_path_that_cannot_be_expressed_as_a_string\"));\n+\n+    // Allow passes that aren't going to report anything to be skipped.\n+\n+    // NOTE: options.checkShadowVars is not in this list as it produces an\n+    // error.\n+    options.checkRequires = CheckLevel.OFF;\n+    options.checkProvides = CheckLevel.OFF;\n+    options.checkMissingGetCssNameLevel = CheckLevel.OFF;\n+    options.aggressiveVarCheck = CheckLevel.OFF;\n+    options.checkTypes = false;\n+    options.setWarningLevel(DiagnosticGroups.CHECK_TYPES, CheckLevel.OFF);\n+    options.checkUnreachableCode = CheckLevel.OFF;\n+    options.checkMissingReturn = CheckLevel.OFF;\n+    options.setWarningLevel(DiagnosticGroups.ACCESS_CONTROLS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.CONSTANT_PROPERTY, CheckLevel.OFF);\n+    options.checkGlobalNamesLevel = CheckLevel.OFF;\n+    options.checkSuspiciousCode = false;\n+    options.checkGlobalThisLevel = CheckLevel.OFF;\n+    options.setWarningLevel(DiagnosticGroups.GLOBAL_THIS, CheckLevel.OFF);\n+    options.setWarningLevel(DiagnosticGroups.ES5_STRICT, CheckLevel.OFF);\n+    options.checkCaja = false;\n   }\n \n   /**", "timestamp": 1317710508, "metainfo": ""}