{"sha": "effb8b88642e8a81c2a7ba7bae0578530099be86", "log": "Add setters for all public properties in CompilerOptions  R=nicksantos DELTA=449  (429 added, 9 deleted, 11 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3964   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n \n   /** Tightens types based on a global analysis. Experimental. */\n   public void setTightenTypes(boolean tighten) {\n-    this.tightenTypes = tighten;\n+    tightenTypes = tighten;\n   }\n \n   public CheckLevel reportMissingOverride;\n    * overrides a base class property.\n    */\n   public void setReportMissingOverride(CheckLevel level) {\n-    this.reportMissingOverride = level;\n+    reportMissingOverride = level;\n   }\n \n   CheckLevel reportUnknownTypes;\n \n   /** Flags a warning for every node whose type could not be determined. */\n   public void setReportUnknownTypes(CheckLevel level) {\n-    this.reportUnknownTypes = level;\n+    reportUnknownTypes = level;\n   }\n \n   /** Checks for missing goog.require() calls **/\n   public CheckLevel checkRequires;\n \n   public void setCheckRequires(CheckLevel level) {\n-    this.checkRequires = level;\n+    checkRequires = level;\n   }\n \n   public CheckLevel checkProvides;\n \n   /** Checks for missing goog.provides() calls **/\n   public void setCheckProvides(CheckLevel level) {\n-    this.checkProvides = level;\n+    checkProvides = level;\n   }\n \n   public CheckLevel checkGlobalNamesLevel;\n    * (e.g. \"a.b\")\n    */\n   public void setCheckGlobalNamesLevel(CheckLevel level) {\n-    this.checkGlobalNamesLevel = level;\n+    checkGlobalNamesLevel = level;\n   }\n \n   public CheckLevel brokenClosureRequiresLevel;\n \n   /** Sets the check level for bad Closure require calls. */\n   public void setBrokenClosureRequiresLevel(CheckLevel level) {\n-    this.brokenClosureRequiresLevel = level;\n+    brokenClosureRequiresLevel = level;\n   }\n \n   public CheckLevel checkGlobalThisLevel;\n   /** Extracts common prototype member declarations */\n   public boolean extractPrototypeMemberDeclarations;\n \n-  // TODO(johnlenz): REMOVE THS\n+  // TODO(johnlenz): REMOVE THIS\n   public boolean removeEmptyFunctions;\n \n   /** Removes unused member prototypes */\n \n   /** Group multiple variable declarations into one */\n   boolean groupVariableDeclarations;\n-\n-  public void groupVariableDeclarations(boolean enabled) {\n-    groupVariableDeclarations = enabled;\n-  }\n \n   /**\n    * Collapses anonymous function declarations into named function\n \n   public ErrorFormat errorFormat;\n \n-  private ComposeWarningsGuard warningsGuard =\n-      new ComposeWarningsGuard();\n+  private ComposeWarningsGuard warningsGuard = new ComposeWarningsGuard();\n \n   int summaryDetailLevel = 1;\n \n     this.nameAnonymousFunctionsOnly = value;\n   }\n \n-  public void lineLengthThreshold(int value) {\n-    this.lineLengthThreshold = value;\n-  }\n-\n   public void setColorizeErrorOutput(boolean colorizeErrorOutput) {\n     this.colorizeErrorOutput = colorizeErrorOutput;\n   }\n     this.summaryDetailLevel = summaryDetailLevel;\n   }\n \n-  public void enableExternExports(boolean enable) {\n-    this.externExports = enable;\n+  /**\n+   * @deprecated replaced by {@link #setExternExports}\n+   */\n+  @Deprecated\n+  public void enableExternExports(boolean enabled) {\n+    this.externExports = enabled;\n   }\n \n   public void setExtraAnnotationNames(Set<String> extraAnnotationNames) {\n         Maps.newHashMap(propertyInvalidationErrors);\n   }\n \n+  public void setLanguageOut(LanguageMode languageOut) {\n+    this.languageOut = languageOut;\n+  }\n+\n+  public void setIdeMode(boolean ideMode) {\n+    this.ideMode = ideMode;\n+  }\n+\n+  public void setSkipAllPasses(boolean skipAllPasses) {\n+    this.skipAllPasses = skipAllPasses;\n+  }\n+\n+  public void setDevMode(DevMode devMode) {\n+    this.devMode = devMode;\n+  }\n+\n+  public void setMessageBundle(MessageBundle messageBundle) {\n+    this.messageBundle = messageBundle;\n+  }\n+\n+  public void setCheckSymbols(boolean checkSymbols) {\n+    this.checkSymbols = checkSymbols;\n+  }\n+\n+  public void setCheckSuspiciousCode(boolean checkSuspiciousCode) {\n+    this.checkSuspiciousCode = checkSuspiciousCode;\n+  }\n+\n+  public void setCheckControlStructures(boolean checkControlStructures) {\n+    this.checkControlStructures = checkControlStructures;\n+  }\n+\n+  public void setCheckTypes(boolean checkTypes) {\n+    this.checkTypes = checkTypes;\n+  }\n+\n+  public void setCheckMissingGetCssNameBlacklist(String blackList) {\n+    this.checkMissingGetCssNameBlacklist = blackList;\n+  }\n+\n+  public void setFoldConstants(boolean foldConstants) {\n+    this.foldConstants = foldConstants;\n+  }\n+\n+  public void setDeadAssignmentElimination(boolean deadAssignmentElimination) {\n+    this.deadAssignmentElimination = deadAssignmentElimination;\n+  }\n+\n+  public void setInlineConstantVars(boolean inlineConstantVars) {\n+    this.inlineConstantVars = inlineConstantVars;\n+  }\n+\n+  public void setInlineFunctions(boolean inlineFunctions) {\n+    this.inlineFunctions = inlineFunctions;\n+  }\n+\n+  public void setInlineLocalFunctions(boolean inlineLocalFunctions) {\n+    this.inlineLocalFunctions = inlineLocalFunctions;\n+  }\n+\n+  public void setCrossModuleCodeMotion(boolean crossModuleCodeMotion) {\n+    this.crossModuleCodeMotion = crossModuleCodeMotion;\n+  }\n+\n+  public void setCoalesceVariableNames(boolean coalesceVariableNames) {\n+    this.coalesceVariableNames = coalesceVariableNames;\n+  }\n+\n+  public void setCrossModuleMethodMotion(boolean crossModuleMethodMotion) {\n+    this.crossModuleMethodMotion = crossModuleMethodMotion;\n+  }\n+\n+  public void setInlineGetters(boolean inlineGetters) {\n+    this.inlineGetters = inlineGetters;\n+  }\n+\n+  public void setInlineVariables(boolean inlineVariables) {\n+    this.inlineVariables = inlineVariables;\n+  }\n+\n+  public void setInlineLocalVariables(boolean inlineLocalVariables) {\n+    this.inlineLocalVariables = inlineLocalVariables;\n+  }\n+\n+  public void setFlowSensitiveInlineVariables(boolean enabled) {\n+    this.flowSensitiveInlineVariables = enabled;\n+  }\n+\n+  public void setSmartNameRemoval(boolean smartNameRemoval) {\n+    this.smartNameRemoval = smartNameRemoval;\n+  }\n+\n+  public void setRemoveDeadCode(boolean removeDeadCode) {\n+    this.removeDeadCode = removeDeadCode;\n+  }\n+\n+  public void setExtractPrototypeMemberDeclarations(boolean enabled) {\n+    this.extractPrototypeMemberDeclarations = enabled;\n+  }\n+\n+  public void setRemoveUnusedPrototypeProperties(boolean enabled) {\n+    this.removeUnusedPrototypeProperties = enabled;\n+  }\n+\n+  public void setRemoveUnusedPrototypePropertiesInExterns(\n+      boolean enabled) {\n+    this.removeUnusedPrototypePropertiesInExterns = enabled;\n+  }\n+\n+  public void setRemoveUnusedVars(boolean removeUnusedVars) {\n+    this.removeUnusedVars = removeUnusedVars;\n+  }\n+\n+  public void setRemoveUnusedLocalVars(boolean removeUnusedLocalVars) {\n+    this.removeUnusedLocalVars = removeUnusedLocalVars;\n+  }\n+\n+  public void setAliasExternals(boolean aliasExternals) {\n+    this.aliasExternals = aliasExternals;\n+  }\n+\n+  public void setCollapseVariableDeclarations(boolean enabled) {\n+    this.collapseVariableDeclarations = enabled;\n+  }\n+\n+  public void setGroupVariableDeclarations(boolean enabled) {\n+    this.groupVariableDeclarations = enabled;\n+  }\n+\n+  public void setCollapseAnonymousFunctions(boolean enabled) {\n+    this.collapseAnonymousFunctions = enabled;\n+  }\n+\n+  public void setAliasableStrings(Set<String> aliasableStrings) {\n+    this.aliasableStrings = aliasableStrings;\n+  }\n+\n+  public void setAliasStringsBlacklist(String aliasStringsBlacklist) {\n+    this.aliasStringsBlacklist = aliasStringsBlacklist;\n+  }\n+\n+  public void setAliasAllStrings(boolean aliasAllStrings) {\n+    this.aliasAllStrings = aliasAllStrings;\n+  }\n+\n+  public void setOutputJsStringUsage(boolean outputJsStringUsage) {\n+    this.outputJsStringUsage = outputJsStringUsage;\n+  }\n+\n+  public void setConvertToDottedProperties(boolean convertToDottedProperties) {\n+    this.convertToDottedProperties = convertToDottedProperties;\n+  }\n+\n+  public void setRewriteFunctionExpressions(boolean rewriteFunctionExpressions) {\n+    this.rewriteFunctionExpressions = rewriteFunctionExpressions;\n+  }\n+\n+  public void setOptimizeParameters(boolean optimizeParameters) {\n+    this.optimizeParameters = optimizeParameters;\n+  }\n+\n+  public void setOptimizeReturns(boolean optimizeReturns) {\n+    this.optimizeReturns = optimizeReturns;\n+  }\n+\n+  public void setOptimizeCalls(boolean optimizeCalls) {\n+    this.optimizeCalls = optimizeCalls;\n+  }\n+\n+  public void setOptimizeArgumentsArray(boolean optimizeArgumentsArray) {\n+    this.optimizeArgumentsArray = optimizeArgumentsArray;\n+  }\n+\n+  public void setVariableRenaming(VariableRenamingPolicy variableRenaming) {\n+    this.variableRenaming = variableRenaming;\n+  }\n+\n+  public void setPropertyRenaming(PropertyRenamingPolicy propertyRenaming) {\n+    this.propertyRenaming = propertyRenaming;\n+  }\n+\n+  public void setLabelRenaming(boolean labelRenaming) {\n+    this.labelRenaming = labelRenaming;\n+  }\n+\n+  public void setReserveRawExports(boolean reserveRawExports) {\n+    this.reserveRawExports = reserveRawExports;\n+  }\n+\n+  public void setGeneratePseudoNames(boolean generatePseudoNames) {\n+    this.generatePseudoNames = generatePseudoNames;\n+  }\n+\n+  public void setRenamePrefix(String renamePrefix) {\n+    this.renamePrefix = renamePrefix;\n+  }\n+\n+  public void setRenamePrefixNamespace(String renamePrefixNamespace) {\n+    this.renamePrefixNamespace = renamePrefixNamespace;\n+  }\n+\n+  public void setAliasKeywords(boolean aliasKeywords) {\n+    this.aliasKeywords = aliasKeywords;\n+  }\n+\n+  public void setCollapseProperties(boolean collapseProperties) {\n+    this.collapseProperties = collapseProperties;\n+  }\n+\n+  public void setDevirtualizePrototypeMethods(boolean devirtualizePrototypeMethods) {\n+    this.devirtualizePrototypeMethods = devirtualizePrototypeMethods;\n+  }\n+\n+  public void setComputeFunctionSideEffects(boolean computeFunctionSideEffects) {\n+    this.computeFunctionSideEffects = computeFunctionSideEffects;\n+  }\n+\n+  public void setDebugFunctionSideEffectsPath(String debugFunctionSideEffectsPath) {\n+    this.debugFunctionSideEffectsPath = debugFunctionSideEffectsPath;\n+  }\n+\n+  public void setDisambiguateProperties(boolean disambiguateProperties) {\n+    this.disambiguateProperties = disambiguateProperties;\n+  }\n+\n+  public void setAmbiguateProperties(boolean ambiguateProperties) {\n+    this.ambiguateProperties = ambiguateProperties;\n+  }\n+\n+  public void setAnonymousFunctionNaming(\n+      AnonymousFunctionNamingPolicy anonymousFunctionNaming) {\n+    this.anonymousFunctionNaming = anonymousFunctionNaming;\n+  }\n+\n+  public void setInputVariableMapSerialized(byte[] inputVariableMapSerialized) {\n+    this.inputVariableMapSerialized = inputVariableMapSerialized;\n+  }\n+\n+  public void setInputPropertyMapSerialized(byte[] inputPropertyMapSerialized) {\n+    this.inputPropertyMapSerialized = inputPropertyMapSerialized;\n+  }\n+\n+  public void setExportTestFunctions(boolean exportTestFunctions) {\n+    this.exportTestFunctions = exportTestFunctions;\n+  }\n+\n+  public void setRuntimeTypeCheck(boolean runtimeTypeCheck) {\n+    this.runtimeTypeCheck = runtimeTypeCheck;\n+  }\n+\n+  public void setRuntimeTypeCheckLogFunction(String runtimeTypeCheckLogFunction) {\n+    this.runtimeTypeCheckLogFunction = runtimeTypeCheckLogFunction;\n+  }\n+\n+  public void setSyntheticBlockStartMarker(String syntheticBlockStartMarker) {\n+    this.syntheticBlockStartMarker = syntheticBlockStartMarker;\n+  }\n+\n+  public void setSyntheticBlockEndMarker(String syntheticBlockEndMarker) {\n+    this.syntheticBlockEndMarker = syntheticBlockEndMarker;\n+  }\n+\n+  public void setLocale(String locale) {\n+    this.locale = locale;\n+  }\n+\n+  public void setMarkAsCompiled(boolean markAsCompiled) {\n+    this.markAsCompiled = markAsCompiled;\n+  }\n+\n+  public void setRemoveTryCatchFinally(boolean removeTryCatchFinally) {\n+    this.removeTryCatchFinally = removeTryCatchFinally;\n+  }\n+\n+  public void setClosurePass(boolean closurePass) {\n+    this.closurePass = closurePass;\n+  }\n+\n+  public void setGatherCssNames(boolean gatherCssNames) {\n+    this.gatherCssNames = gatherCssNames;\n+  }\n+\n+  public void setStripTypes(Set<String> stripTypes) {\n+    this.stripTypes = stripTypes;\n+  }\n+\n+  public void setStripNameSuffixes(Set<String> stripNameSuffixes) {\n+    this.stripNameSuffixes = stripNameSuffixes;\n+  }\n+\n+  public void setStripNamePrefixes(Set<String> stripNamePrefixes) {\n+    this.stripNamePrefixes = stripNamePrefixes;\n+  }\n+\n+  public void setStripTypePrefixes(Set<String> stripTypePrefixes) {\n+    this.stripTypePrefixes = stripTypePrefixes;\n+  }\n+\n+  public void setCustomPasses(Multimap<CustomPassExecutionTime, CompilerPass> customPasses) {\n+    this.customPasses = customPasses;\n+  }\n+\n+  public void setMarkNoSideEffectCalls(boolean markNoSideEffectCalls) {\n+    this.markNoSideEffectCalls = markNoSideEffectCalls;\n+  }\n+\n+  public void setDefineReplacements(Map<String, Object> defineReplacements) {\n+    this.defineReplacements = defineReplacements;\n+  }\n+\n+  public void setTweakReplacements(Map<String, Object> tweakReplacements) {\n+    this.tweakReplacements = tweakReplacements;\n+  }\n+\n+  public void setMoveFunctionDeclarations(boolean moveFunctionDeclarations) {\n+    this.moveFunctionDeclarations = moveFunctionDeclarations;\n+  }\n+\n+  public void setInstrumentationTemplate(String instrumentationTemplate) {\n+    this.instrumentationTemplate = instrumentationTemplate;\n+  }\n+\n+  public void setRecordFunctionInformation(boolean recordFunctionInformation) {\n+    this.recordFunctionInformation = recordFunctionInformation;\n+  }\n+\n+  public void setCssRenamingMap(CssRenamingMap cssRenamingMap) {\n+    this.cssRenamingMap = cssRenamingMap;\n+  }\n+\n+  public void setReplaceStringsFunctionDescriptions(List<String> replaceStringsFunctionDescriptions) {\n+    this.replaceStringsFunctionDescriptions = replaceStringsFunctionDescriptions;\n+  }\n+\n+  public void setReplaceStringsPlaceholderToken(String replaceStringsPlaceholderToken) {\n+    this.replaceStringsPlaceholderToken = replaceStringsPlaceholderToken;\n+  }\n+\n+  public void setReplaceStringsReservedStrings(Set<String> replaceStringsReservedStrings) {\n+    this.replaceStringsReservedStrings = replaceStringsReservedStrings;\n+  }\n+\n+  public void setPrettyPrint(boolean prettyPrint) {\n+    this.prettyPrint = prettyPrint;\n+  }\n+\n+  public void setLineBreak(boolean lineBreak) {\n+    this.lineBreak = lineBreak;\n+  }\n+\n+  public void setPrintInputDelimiter(boolean printInputDelimiter) {\n+    this.printInputDelimiter = printInputDelimiter;\n+  }\n+\n+  public void setInputDelimiter(String inputDelimiter) {\n+    this.inputDelimiter = inputDelimiter;\n+  }\n+\n+  public void setTracer(TracerMode tracer) {\n+    this.tracer = tracer;\n+  }\n+\n+  public void setErrorFormat(ErrorFormat errorFormat) {\n+    this.errorFormat = errorFormat;\n+  }\n+\n+  public void setWarningsGuard(ComposeWarningsGuard warningsGuard) {\n+    this.warningsGuard = warningsGuard;\n+  }\n+\n+  public void setLineLengthThreshold(int lineLengthThreshold) {\n+    this.lineLengthThreshold = lineLengthThreshold;\n+  }\n+\n+  public void setExternExports(boolean externExports) {\n+    this.externExports = externExports;\n+  }\n+\n+  public void setExternExportsPath(String externExportsPath) {\n+    this.externExportsPath = externExportsPath;\n+  }\n+\n+  public void setSourceMapOutputPath(String sourceMapOutputPath) {\n+    this.sourceMapOutputPath = sourceMapOutputPath;\n+  }\n+\n+  public void setSourceMapDetailLevel(SourceMap.DetailLevel sourceMapDetailLevel) {\n+    this.sourceMapDetailLevel = sourceMapDetailLevel;\n+  }\n+\n+  public void setSourceMapFormat(SourceMap.Format sourceMapFormat) {\n+    this.sourceMapFormat = sourceMapFormat;\n+  }\n+\n+  public void setSourceMapLocationMappings(List<SourceMap.LocationMapping> sourceMapLocationMappings) {\n+    this.sourceMapLocationMappings = sourceMapLocationMappings;\n+  }\n \n   //////////////////////////////////////////////////////////////////////////////\n   // Enums", "timestamp": 1323804536, "metainfo": ""}