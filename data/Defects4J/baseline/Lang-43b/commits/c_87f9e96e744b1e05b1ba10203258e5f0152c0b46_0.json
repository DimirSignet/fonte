{"sha": "87f9e96e744b1e05b1ba10203258e5f0152c0b46", "log": "Added  public static String removeEnd(String str, String remove). Reimpl'd removeStart.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Gary Gregory\n  * @author Phil Steitz\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.113 2003/10/29 01:49:47 ggregory Exp $\n+ * @version $Id: StringUtils.java,v 1.114 2003/10/29 02:16:15 ggregory Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * instance to operate.</p>\n      */\n     public StringUtils() {\n+        // no init.\n     }\n \n     // Empty checks\n                 lastIdx--;\n             }\n         } else if (last == '\\r') {\n-\n+            // why is this block empty?\n+            // just to skip incrementing the index?\n         } else {\n             lastIdx++;\n         }\n         if (remove == null || remove.length() == 0) {\n             return str;\n         }\n-        int pos = str.indexOf(remove);\n-        if (pos == -1) {\n+        if (str.startsWith(remove)){\n+            return str.substring(remove.length());\n+        }\n+        return str;\n+    }\n+\n+    /**\n+     * <p>Removes a substring only if it is at the end of a source string, otherwise returns the source string.\n+     *\n+     * <p>A <code>null</code> source string will return <code>null</code>.\n+     * An empty (\"\") source string will return the empty string.\n+     * A <code>null</code> search string will return the source string.</p>\n+     * \n+     * <pre>\n+     * StringUtils.removeEnd(null, *)      = null\n+     * StringUtils.removeEnd(\"\", *)        = \"\"\n+     * StringUtils.removeEnd(*, null)      = *\n+     * StringUtils.removeEnd(\"www.domain.com\", \".com.\")   = \"www,domain\"\n+     * StringUtils.removeEnd(\"www.domain.com\", \".com\")   = \"www.domain\"\n+     * StringUtils.removeEnd(\"abc\", \"\")    = \"abc\"\n+     * </pre>\n+     *\n+     * @param string  the source String to search, may be null\n+     * @param remove  the String to search for, may be null\n+     * @return the substring after the optional occurrence of the separator,\n+     *  <code>null</code> if null String input\n+     */\n+    public static String removeEnd(String str, String remove) {\n+        if (str == null || str.length() == 0) {\n             return str;\n         }\n-        return str.substring(pos + remove.length());\n+        if (remove == null || remove.length() == 0) {\n+            return str;\n+        }\n+        if (str.endsWith(remove)) {\n+            return str.substring(0, str.length() - remove.length());\n+        }\n+        return str;\n     }\n \n }", "timestamp": 1067393775, "metainfo": ""}