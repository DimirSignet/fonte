{"sha": "f78394327f234859671181410f625c0112eee6db", "log": "Block nextInt(int) and nextLong(long) from being <= 0.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/math/JVMRandom.java\n+++ b/src/java/org/apache/commons/lang/math/JVMRandom.java\n  * \n  * @author Henri Yandell\n  * @since 2.0\n- * @version $Id: JVMRandom.java,v 1.3 2003/05/12 04:29:26 bayard Exp $\n+ * @version $Id: JVMRandom.java,v 1.4 2003/05/12 04:41:40 bayard Exp $\n  */\n public final class JVMRandom extends Random {\n \n      * Math.random() sequence. \n      *\n      * @param n  the specified exclusive max-value\n+     * @throws IllegalArgumentException when n <= 0\n      *\n      * @return the random int\n      */\n     public int nextInt(int n) {\n-        // check this cannot return 'n'\n+        if (n <= 0) {\n+            throw new IllegalArgumentException(\n+                \"Upper bound for nextInt must be positive\"\n+            );\n+        }\n+        // TODO: check this cannot return 'n'\n         return (int)(Math.random() * n);\n     }\n     /**\n      */\n     public long nextLong() {\n         // possible loss of precision?\n-        return (long)(Math.random() * Long.MAX_VALUE);\n+        return nextLong(Long.MAX_VALUE);\n     }\n+\n+\n+    /**\n+     * Returns a pseudorandom, uniformly distributed long value between 0 \n+     * (inclusive) and the specified value (exclusive), from the \n+     * Math.random() sequence.\n+     *\n+     * @param n  the specified exclusive max-value\n+     * @throws IllegalArgumentException when n <= 0\n+     *\n+     * @return the random long\n+     */\n+    public static long nextLong(long n) {\n+        if (n <= 0) {\n+            throw new IllegalArgumentException(\n+                \"Upper bound for nextInt must be positive\"\n+            );\n+        }\n+        // TODO: check this cannot return 'n'\n+        return (long)(Math.random() * n);\n+     }\n+\n     /**\n      * Returns the next pseudorandom, uniformly distributed boolean value \n      * from the Math.random() sequence.", "timestamp": 1052714500, "metainfo": ""}