{"sha": "1e4a20ba0ca4bab5048598060318a63236c132f7", "log": "Add an alternate constructor for JsonGenerator", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n     protected GeneratorBase(int features, ObjectCodec codec) {\n         super();\n         _features = features;\n+        _objectCodec = codec;\n         DupDetector dups = Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)\n                 ? DupDetector.rootDetector(this) : null;\n         _writeContext = JsonWriteContext.createRootContext(dups);\n+        _cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);\n+    }\n+\n+    /**\n+     * @since 2.5\n+     */\n+    protected GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt) {\n+        super();\n+        _features = features;\n         _objectCodec = codec;\n+        _writeContext = ctxt;\n         _cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java\n+++ b/src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java\n \n     /**\n      * Accessor that can be used to find out type for which parameterization\n-     * is applied: this is often NOT same as what {@link #getRawType} returns,\n+     * is applied: this is often NOT same as what {@link #getRawClass} returns,\n      * but rather one of it supertype.\n      *<p>\n      * For example: for type like {@link java.util.HashMap}, raw type is", "timestamp": 1414534670, "metainfo": ""}