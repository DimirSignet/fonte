{"sha": "3da5c04cbb2e1970ea07dc37cf8038be3af9f45d", "log": "Need to modify BOM test a bit: not sure if this is the right thing, but keeping track of real input offsets seems more important", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java\n         JsonParser jp = jf.createParser(bytes.toByteArray());\n         assertEquals(JsonToken.START_ARRAY, jp.nextToken());\n         // should also have skipped first 3 bytes of BOM; but do we have offset available?\n+        /* 08-Oct-2013, tatu: Alas, due to [Issue#111], we have to omit BOM in calculations\n+         *   as we do not know what the offset is due to -- may need to revisit, if this\n+         *   discrepancy becomes an issue. For now it just means that BOM is considered\n+         *   \"out of stream\" (not part of input).\n+         */\n         JsonLocation loc = jp.getTokenLocation();\n-        assertEquals(3, loc.getByteOffset());\n+        // so if BOM was consider in-stream (part of input), this should expect 3:\n+        assertEquals(0, loc.getByteOffset());\n         assertEquals(-1, loc.getCharOffset());\n         jp.close();\n     }", "timestamp": 1381252104, "metainfo": ""}