{"sha": "9bdda3fb87a1a768feb840c4ce27fc643d22a3f7", "log": "minor fix to handling of null char in names", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n \n     /**\n      * Method called when not even first 8 bytes are guaranteed\n-     * to come consequtively. Happens rarely, so this is offlined;\n+     * to come consecutively. Happens rarely, so this is off-lined;\n      * plus we'll also do full checks for escaping etc.\n      */\n     protected Name slowParseName() throws IOException\n             }\n             ch = _inputBuffer[_inputPtr++] & 0xFF;\n         }\n-\n         if (currQuadBytes > 0) {\n             if (qlen >= quads.length) {\n                 _quadBuffer = quads = growArrayBy(quads, quads.length);\n             }\n-            quads[qlen++] = currQuad;\n+            quads[qlen++] = pad(currQuad, currQuadBytes);\n         }\n         Name name = _symbols.findName(quads, qlen);\n         if (name == null) {\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java\n     private void _testSymbolsWithNull(boolean useBytes) throws Exception\n     {\n         final JsonFactory f = new JsonFactory();\n-        final String INPUT = \"{\\\"\\\\u0000abc\\\" : 1, \\\"abc\\\" : 2}\";\n+        final String INPUT = \"{\\\"\\\\u0000abc\\\" : 1, \\\"abc\\\":2}\";\n         JsonParser parser = useBytes ? f.createParser(INPUT.getBytes(\"UTF-8\"))\n                 : f.createParser(INPUT);\n ", "timestamp": 1422941752, "metainfo": ""}