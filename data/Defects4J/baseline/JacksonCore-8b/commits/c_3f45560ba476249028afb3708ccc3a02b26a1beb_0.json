{"sha": "3f45560ba476249028afb3708ccc3a02b26a1beb", "log": "Deprecate old API instead of removing it. Added new API to mutate the indenter.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java\n     private final int charsPerLevel;\n     private final String eol;\n \n+    /** Indent with two spaces and the system's default line feed */\n+    public DefaultIndenter() {\n+        this(\"  \", SYS_LF);\n+    }\n+    \n     /** Create an indenter which uses the <code>indent</code> string to indent one level\n      *  and the <code>eol</code> string to separate lines. */\n     public DefaultIndenter(String indent, String eol)\n         }\n \n         this.eol = eol;\n+    }\n+    \n+    public DefaultIndenter withLinefeed(String lf)\n+    {\n+        if (lf.equals(eol)) {\n+            return this;\n+        }\n+        return new DefaultIndenter(getIndent(), lf);\n+    }\n+    \n+    public DefaultIndenter withIndent(String indent)\n+    {\n+        if (indent.equals(getIndent())) {\n+            return this;\n+        }\n+        return new DefaultIndenter(indent, eol);\n     }\n \n     @Override\n             jg.writeRaw(indents, 0, level);\n         }\n     }\n+    \n+    public String getEol()\n+    {\n+        return eol;\n+    }\n+    \n+    public String getIndent()\n+    {\n+        return new String(indents, 0, charsPerLevel);\n+    }\n }\n--- a/src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java\n         @Override\n         public boolean isInline() { return true; }\n     }\n+    \n+    /** @deprecated Use {@link DefaultIndenter} instead */\n+    @Deprecated\n+    public static class Lf2SpacesIndenter extends DefaultIndenter\n+    {\n+        /** @deprecated Use {@link DefaultIndenter.SYSTEM_LINEFEED_INSTANCE} instead */\n+        public static final Lf2SpacesIndenter instance = new Lf2SpacesIndenter();\n+\n+        /** @deprecated Use {@code new DefaultIndenter(\"  \", DefaultIndenter.SYS_LF)} instead */\n+        public Lf2SpacesIndenter()\n+        {\n+            super(\"  \", DefaultIndenter.SYS_LF);\n+        }\n+        \n+        /** @deprecated Use {@code new DefaultIndenter(\"  \", lf)} instead */\n+        public Lf2SpacesIndenter(String lf) {\n+            super(\"  \", lf);\n+        }\n+    }\n }\n--- a/src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java\n+++ b/src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java\n             \"}\", _printTestData(pp));\n     }\n \n+    @Test\n+    public void testWithLineFeed() throws IOException\n+    {\n+        PrettyPrinter pp = new DefaultPrettyPrinter()\n+        .withObjectIndenter(new DefaultIndenter().withLinefeed(\"\\n\"));\n+        assertEquals(\n+            \"{\\n\" +\n+            \"  \\\"name\\\" : \\\"John Doe\\\",\\n\" +\n+            \"  \\\"age\\\" : 3.14\\n\" +\n+            \"}\", _printTestData(pp));\n+    }\n+    \n+    @Test\n+    public void testWithIndent() throws IOException\n+    {\n+        PrettyPrinter pp = new DefaultPrettyPrinter()\n+        .withObjectIndenter(new DefaultIndenter().withIndent(\" \"));\n+        assertEquals(\n+            \"{\\n\" +\n+            \" \\\"name\\\" : \\\"John Doe\\\",\\n\" +\n+            \" \\\"age\\\" : 3.14\\n\" +\n+            \"}\", _printTestData(pp));\n+    }\n+    \n     @Test\n     public void testUnixLinefeed() throws IOException\n     {", "timestamp": 1416514144, "metainfo": ""}