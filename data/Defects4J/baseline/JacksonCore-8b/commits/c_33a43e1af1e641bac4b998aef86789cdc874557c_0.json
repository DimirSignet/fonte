{"sha": "33a43e1af1e641bac4b998aef86789cdc874557c", "log": "tiny refactoring of constants", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n  */\n public abstract class GeneratorBase extends JsonGenerator\n {\n+    public final static int SURR1_FIRST = 0xD800;\n+    public final static int SURR1_LAST = 0xDBFF;\n+    public final static int SURR2_FIRST = 0xDC00;\n+    public final static int SURR2_LAST = 0xDFFF;\n+\n     /*\n     /**********************************************************\n     /* Configuration\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n     private final static byte BYTE_COMMA = (byte) ',';\n     private final static byte BYTE_COLON = (byte) ':';\n     private final static byte BYTE_QUOTE = (byte) '\"';\n-\n-    protected final static int SURR1_FIRST = 0xD800;\n-    protected final static int SURR1_LAST = 0xDBFF;\n-    protected final static int SURR2_FIRST = 0xDC00;\n-    protected final static int SURR2_LAST = 0xDFFF;\n \n     // intermediate copies only made up to certain length...\n     private final static int MAX_BYTES_TO_BUFFER = 512;\n--- a/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n     public void writeRaw(SerializableString text) throws IOException {\n         writeRaw(text.getValue());\n     }\n-    \n+\n     @Override\n     public void writeRaw(char[] text, int offset, int len) throws IOException\n     {", "timestamp": 1415739983, "metainfo": ""}