{"sha": "a804cb70ffcf4087bed8ced8387cb8743b36c51a", "log": "fixes to a patch", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/io/CharTypes.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/CharTypes.java\n package com.fasterxml.jackson.core.io;\n \n import java.util.Arrays;\n-\n \n public final class CharTypes\n {\n-    /**\n-     * Utility class - not for instantiation\n-     */\n-    private CharTypes() {}\n-\n     private final static char[] HEX_CHARS = \"0123456789ABCDEF\".toCharArray();\n     private final static byte[] HEX_BYTES;\n     static {\n         int[] table = new int[128];\n         // Control chars need generic escape sequence\n         for (int i = 0; i < 32; ++i) {\n-            // 04-Mar-2011, tatu: Used to use \"-(i + 1)\", replaced with constants\n+            // 04-Mar-2011, tatu: Used to use \"-(i + 1)\", replaced with constant\n             table[i] = CharacterEscapes.ESCAPE_STANDARD;\n         }\n         /* Others (and some within that range too) have explicit shorter\n             sb.append('\\\\');\n             int escCode = escCodes[c];\n             if (escCode < 0) { // generic quoting (hex value)\n-                assert escCode == CharacterEscapes.ESCAPE_STANDARD :\n-                        \"Unexpected/unsupported ESCAPE_XXX sentinel value\";\n                 // The only negative value sOutputEscapes128 returns\n                 // is CharacterEscapes.ESCAPE_STANDARD, which mean\n                 // appendQuotes should encode using the Unicode encoding;", "timestamp": 1372304048, "metainfo": ""}