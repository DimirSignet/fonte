{"sha": "691b57437bc5d0e75201646abc403ca3f6b59bb8", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n         _currInputRowStart = _inputPtr;\n     }\n \n+    /*\n     private int _skipCR(int ptr) throws IOException {\n         if (ptr < _inputEnd) {\n             if (_inputBuffer[ptr] == '\\n') {\n         _currInputRowStart = ptr;\n         return ptr;\n     }\n+    */\n     \n     private int _skipColon() throws IOException\n     {\n-        int ptr = _inputPtr;\n-        if ((ptr + 4) >= _inputEnd) {\n-            return _skipColon2(ptr, false);\n-        }\n-        char c = _inputBuffer[ptr++];\n+        if ((_inputPtr + 4) >= _inputEnd) {\n+            return _skipColon2(false);\n+        }\n+        char c = _inputBuffer[_inputPtr];\n         if (c == ':') { // common case, no leading space\n-            int i = _inputBuffer[ptr++];\n+            int i = _inputBuffer[++_inputPtr];\n             if (i > 32) { // nor trailing\n-                _inputPtr = ptr;\n+                ++_inputPtr;\n                 return i;\n             }\n             if (i == INT_SPACE || i == INT_TAB) {\n-                i = (int) _inputBuffer[ptr];\n+                i = (int) _inputBuffer[++_inputPtr];\n                 if (i > 32) {\n-                    _inputPtr = ptr+1;\n+                    ++_inputPtr;                    \n                     return i;\n                 }\n-            } else {\n-                --ptr; // push back whatever it was\n-            }\n-            return _skipColon2(ptr, true); // true -> skipped colon\n+            }\n+            return _skipColon2(true); // true -> skipped colon\n         }\n         if (c == ' ' || c == '\\t') {\n-            c = _inputBuffer[ptr++];\n+            c = _inputBuffer[++_inputPtr];\n         }\n         if (c == ':') {\n-            int i = _inputBuffer[ptr];\n+            int i = _inputBuffer[++_inputPtr];\n             if (i > 32) {\n-                _inputPtr = ptr+1;\n+                ++_inputPtr;\n                 return i;\n             }\n             if (i == INT_SPACE || i == INT_TAB) {\n-                ++ptr;\n-                i = (int) _inputBuffer[ptr];\n+                i = (int) _inputBuffer[++_inputPtr];\n                 if (i > 32) {\n-                    _inputPtr = ptr+1;\n+                    ++_inputPtr;\n                     return i;\n                 }\n             }\n-            return _skipColon2(ptr, true);\n-        }\n-        --ptr; // push back the very first char\n-        return _skipColon2(ptr, false);\n-    }\n-\n-    private int _skipColon2(int ptr, boolean gotColon) throws IOException\n-    {\n-        _inputPtr = ptr;\n+            return _skipColon2(true);\n+        }\n+        return _skipColon2(false);\n+    }\n+\n+    private int _skipColon2(boolean gotColon) throws IOException\n+    {\n         final int[] codes = _icWS;\n         while (true) {\n             if (_inputPtr >= _inputEnd) {", "timestamp": 1398144794, "metainfo": ""}