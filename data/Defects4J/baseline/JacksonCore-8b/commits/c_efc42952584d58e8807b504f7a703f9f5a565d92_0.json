{"sha": "efc42952584d58e8807b504f7a703f9f5a565d92", "log": "Minor improvement to overridability of \"default\" PrettyPrinter", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n     }\n \n     /**\n-     * Implemented with detection that tries to find \"VERSION.txt\" in same\n-     * package as the implementation class.\n+     * Implemented with standard version number detection algorithm, typically using\n+     * a simple generated class, with information extracted from Maven project file\n+     * during build.\n      */\n     @Override public Version version() { return VersionUtil.versionFor(getClass()); }\n \n         if (getPrettyPrinter() != null) {\n             return this;\n         }\n-        return setPrettyPrinter(new DefaultPrettyPrinter());\n+        return setPrettyPrinter(_constructDefaultPrettyPrinter());\n     }\n     \n     @Override public JsonGenerator setCodec(ObjectCodec oc) {\n      */\n     protected abstract void _verifyValueWrite(String typeMsg) throws IOException;\n \n+    /**\n+     * Overridable factory method called to instantiate an appropriate {@link PrettyPrinter}\n+     * for case of \"just use the default one\", when {@link #useDefaultPrettyPrinter()} is called.\n+     *\n+     * @since 2.6\n+     */\n+    protected PrettyPrinter _constructDefaultPrettyPrinter() {\n+        return new DefaultPrettyPrinter();\n+    }\n+\n     /*\n     /**********************************************************\n     /* UTF-8 related helper method(s)", "timestamp": 1423160284, "metainfo": ""}