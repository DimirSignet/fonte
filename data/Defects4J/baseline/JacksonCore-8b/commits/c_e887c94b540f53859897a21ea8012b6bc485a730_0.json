{"sha": "e887c94b540f53859897a21ea8012b6bc485a730", "log": "...", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java\n {\n     // For [Issue#148]\n     public void testSymbolsWithNullBytes() throws Exception {\n-        _testSymbolsWithNull(true);\n+        JsonFactory f = new JsonFactory();\n+        _testSymbolsWithNull(f, true);\n+        // and repeat with same factory, just for fun, and to ensure symbol table is fine\n+        _testSymbolsWithNull(f, true);\n     }\n \n     // For [Issue#148]\n     public void testSymbolsWithNullChars() throws Exception {\n-        _testSymbolsWithNull(false);\n+        JsonFactory f = new JsonFactory();\n+        _testSymbolsWithNull(f, false);\n+        _testSymbolsWithNull(f, false);\n     }\n     \n-    private void _testSymbolsWithNull(boolean useBytes) throws Exception\n+    private void _testSymbolsWithNull(JsonFactory f, boolean useBytes) throws Exception\n     {\n-        final JsonFactory f = new JsonFactory();\n         final String INPUT = \"{\\\"\\\\u0000abc\\\" : 1, \\\"abc\\\" : 2}\";\n         JsonParser parser = useBytes ? f.createParser(INPUT.getBytes(\"UTF-8\"))\n                 : f.createParser(INPUT);\n         assertToken(JsonToken.FIELD_NAME, parser.nextToken());\n         currName = parser.getCurrentName();\n         if (!\"abc\".equals(currName)) {\n+            /*\n+            for (int i = 0; i < currName.length(); ++i) {\n+                System.out.println(\"#\"+i+\" -> 0x\"+Integer.toHexString(currName.charAt(i)));\n+            }\n+            */\n             fail(\"Expected 'abc' (3 bytes), '\"+currName+\"' (\"+currName.length()+\")\");\n         }\n         assertToken(JsonToken.VALUE_NUMBER_INT, parser.nextToken());", "timestamp": 1422938683, "metainfo": ""}