{"sha": "d493cf070d6bfc0e362b96fcef164e51c96dfec5", "log": "Rename TreeNode method used for using JsonPointer", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/TreeNode.java\n+++ b/src/main/java/com/fasterxml/jackson/core/TreeNode.java\n      * \n      * @since 2.3\n      */\n-    <T extends TreeNode> T find(JsonPointer ptr);\n+    <T extends TreeNode> T at(JsonPointer ptr);\n \n     /**\n      * Convenience method that is functionally equivalent to:\n      *<pre>\n-     *   return find(JsonPointer.valueOf(jsonPointerExpression));\n+     *   return at(JsonPointer.valueOf(jsonPointerExpression));\n      *</pre>\n      *<p>\n      * Note that if the same expression is used often, it is preferable to construct\n      * {@link JsonPointer} instance once and reuse it: this method will not perform\n      * any caching of compiled expressions.\n      * \n+     * @param jsonPointerExpression Expression to compile as a {@link JsonPointer}\n+     *   instance\n+     * \n      * @return Node that matches given JSON Pointer: if no match exists,\n      *   will return a node for which {@link TreeNode#isMissingNode()} returns true.\n      * \n      * @since 2.3\n      */\n-    <T extends TreeNode> T find(String jsonPointerExpression)\n+    <T extends TreeNode> T at(String jsonPointerExpression)\n         throws IllegalArgumentException;\n     \n     /*", "timestamp": 1378258050, "metainfo": ""}