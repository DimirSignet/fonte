{"sha": "8e76aa3cdb8b794bc1db18964494f7213446af77", "log": "test cleanup", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java\n         }\n     }\n \n-    public void testIntWrite()\n-        throws Exception\n+    public void testIntWrite() throws Exception\n     {\n         doTestIntWrite(false);\n         doTestIntWrite(true);\n     }\n \n-    public void testLongWrite()\n-        throws Exception\n+    public void testLongWrite() throws Exception\n     {\n         doTestLongWrite(false);\n         doTestLongWrite(true);\n     }\n \n-    public void testBooleanWrite()\n-        throws Exception\n+    public void testBooleanWrite() throws Exception\n     {\n         for (int i = 0; i < 4; ++i) {\n             boolean state = (i & 1) == 0;\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java\n                 String STR = INPUTS[i];\n                 double EXP_D = Double.parseDouble(STR);\n                 String DOC = \"[\"+STR+\"]\";\n-                \n+\n                 JsonParser jp;\n                 \n                 if (input == 0) {\n--- a/src/test/java/com/fasterxml/jackson/core/main/TestParserLinefeeds.java\n+++ b/src/test/java/com/fasterxml/jackson/core/main/TestParserLinefeeds.java\n     private void _testLinefeeds(String lf, boolean useStream)\n         throws IOException\n     {\n-        String DOC = \"[1,@2,@-178@]\";\n+        String DOC = \"[1,@2,@-478@]\";\n         DOC = DOC.replaceAll(\"@\", lf);\n \n         JsonParser jp = useStream ?\n         assertEquals(2, jp.getCurrentLocation().getLineNr());\n \n         assertToken(JsonToken.VALUE_NUMBER_INT, jp.nextToken());\n-        assertEquals(-178, jp.getIntValue());\n+        assertEquals(-478, jp.getIntValue());\n         assertEquals(3, jp.getCurrentLocation().getLineNr());\n         \n         assertToken(JsonToken.END_ARRAY, jp.nextToken());", "timestamp": 1398213420, "metainfo": ""}