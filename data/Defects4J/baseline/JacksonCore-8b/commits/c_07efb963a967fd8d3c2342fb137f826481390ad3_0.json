{"sha": "07efb963a967fd8d3c2342fb137f826481390ad3", "log": "Last tweaking of byte-based writer", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n          * (Question: should quoting of spaces (etc) still be enabled?)\n          */\n         if (_cfgUnqNames) {\n-            _writeStringSegments(name);\n+            _writeStringSegments(name, false);\n             return;\n         }\n-        if (_outputTail >= _outputEnd) {\n-            _flushBuffer();\n-        }\n-        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n-        // The beef:\n         final int len = name.length();\n-        if (len <= _charBufferLength) { // yes, fits right in\n-            name.getChars(0, len, _charBuffer, 0);\n-            // But as one segment, or multiple?\n-            if (len <= _outputMaxContiguous) {\n-                if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n-                    _flushBuffer();\n-                }\n-                _writeStringSegment(_charBuffer, 0, len);\n-            } else {\n-                _writeStringSegments(_charBuffer, 0, len);\n-            }\n+        // Does it fit in buffer?\n+        if (len > _charBufferLength) { // no, offline\n+            _writeStringSegments(name, true);\n+            return;\n+        }\n+        if (_outputTail >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n+        name.getChars(0, len, _charBuffer, 0);\n+        // But as one segment, or multiple?\n+        if (len <= _outputMaxContiguous) {\n+            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n+                _flushBuffer();\n+            }\n+            _writeStringSegment(_charBuffer, 0, len);\n         } else {\n-            _writeStringSegments(name);\n-        }\n-\n+            _writeStringSegments(_charBuffer, 0, len);\n+        }\n         // and closing quotes; need room for one more char:\n         if (_outputTail >= _outputEnd) {\n             _flushBuffer();\n             }\n             _outputBuffer[_outputTail++] = BYTE_COMMA;\n         }\n-        _writeFieldName(name);\n-    }\n-\n-    protected final void _writeFieldName(SerializableString name) throws IOException\n-    {\n         if (_cfgUnqNames) {\n             _writeUnq(name);\n             return;\n         } else {\n             _cfgPrettyPrinter.beforeObjectEntries(this);\n         }\n-        if (_cfgUnqNames) { // standard\n-            _writeStringSegments(name);\n+        if (_cfgUnqNames) {\n+            _writeStringSegments(name, false);\n+            return;\n+        }\n+        final int len = name.length();\n+        if (len > _charBufferLength) {\n+            _writeStringSegments(name, true);\n+            return;\n+        }\n+        if (_outputTail >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n+        name.getChars(0, len, _charBuffer, 0);\n+        // But as one segment, or multiple?\n+        if (len <= _outputMaxContiguous) {\n+            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n+                _flushBuffer();\n+            }\n+            _writeStringSegment(_charBuffer, 0, len);\n         } else {\n-            if (_outputTail >= _outputEnd) {\n-                _flushBuffer();\n-            }\n-            _outputBuffer[_outputTail++] = BYTE_QUOTE;\n-            final int len = name.length();\n-            if (len <= _charBufferLength) { // yes, fits right in\n-                name.getChars(0, len, _charBuffer, 0);\n-                // But as one segment, or multiple?\n-                if (len <= _outputMaxContiguous) {\n-                    if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n-                        _flushBuffer();\n-                    }\n-                    _writeStringSegment(_charBuffer, 0, len);\n-                } else {\n-                    _writeStringSegments(_charBuffer, 0, len);\n-                }\n-            } else {\n-                _writeStringSegments(name);\n-            }\n-            if (_outputTail >= _outputEnd) {\n-                _flushBuffer();\n-            }\n-            _outputBuffer[_outputTail++] = BYTE_QUOTE;\n-        }\n+            _writeStringSegments(_charBuffer, 0, len);\n+        }\n+        if (_outputTail >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n     }\n \n     protected final void _writePPFieldName(SerializableString name) throws IOException\n         // First: can we make a local copy of chars that make up text?\n         final int len = text.length();\n         if (len > _charBufferLength) { // nope: off-line handling\n-            _writeLongString(text);\n+            _writeStringSegments(text, true);\n             return;\n         }\n         // yes: good.\n         /* [JACKSON-462] But that method may have had to expand multi-byte Unicode\n          *   chars, so we must check again\n          */\n-        if (_outputTail >= _outputEnd) {\n-            _flushBuffer();\n-        }\n-        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n-    }\n-    \n-    private void _writeLongString(String text) throws IOException\n-    {\n-        if (_outputTail >= _outputEnd) {\n-            _flushBuffer();\n-        }\n-        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n-        _writeStringSegments(text);\n         if (_outputTail >= _outputEnd) {\n             _flushBuffer();\n         }\n      * to single-segment writes (instead of maximum slices that\n      * would fit in copy buffer)\n      */\n-    private final void _writeStringSegments(String text)\n-        throws IOException, JsonGenerationException\n-    {\n+    private final void _writeStringSegments(String text, boolean addQuotes) throws IOException\n+    {\n+        if (addQuotes) {\n+            if (_outputTail >= _outputEnd) {\n+                _flushBuffer();\n+            }\n+            _outputBuffer[_outputTail++] = BYTE_QUOTE;        \n+        }\n+\n         int left = text.length();\n         int offset = 0;\n         final char[] cbuf = _charBuffer;\n             _writeStringSegment(cbuf, 0, len);\n             offset += len;\n             left -= len;\n+        }\n+\n+        if (addQuotes) {\n+            if (_outputTail >= _outputEnd) {\n+                _flushBuffer();\n+            }\n+            _outputBuffer[_outputTail++] = BYTE_QUOTE;\n         }\n     }\n ", "timestamp": 1398838496, "metainfo": ""}