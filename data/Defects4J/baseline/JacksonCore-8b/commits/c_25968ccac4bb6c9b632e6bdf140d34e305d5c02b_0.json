{"sha": "25968ccac4bb6c9b632e6bdf140d34e305d5c02b", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n                         i = input[_inputPtr++] & 0xFF;\n                         if (codes[i] == 0) {\n                             _quad1 = q;\n-                            return parseMediumName(i, codes);\n+                            return parseMediumName(i);\n                         }\n                         if (i == INT_QUOTE) { // 4 byte/char case or broken\n                             return findName(q, 4);\n         return parseName(0, q, 0); // quoting or invalid char\n     }\n \n-    protected Name parseMediumName(int q2, final int[] codes) throws IOException\n-    {\n+    protected Name parseMediumName(int q2) throws IOException\n+    {\n+        final byte[] input = _inputBuffer;\n+        final int[] codes = _icLatin1;\n+\n         // Ok, got 5 name bytes so far\n-        int i = _inputBuffer[_inputPtr++] & 0xFF;\n+        int i = input[_inputPtr++] & 0xFF;\n         if (codes[i] != 0) {\n             if (i == INT_QUOTE) { // 5 bytes\n                 return findName(_quad1, q2, 1);\n             return parseName(_quad1, q2, i, 1); // quoting or invalid char\n         }\n         q2 = (q2 << 8) | i;\n-        i = _inputBuffer[_inputPtr++] & 0xFF;\n+        i = input[_inputPtr++] & 0xFF;\n         if (codes[i] != 0) {\n             if (i == INT_QUOTE) { // 6 bytes\n                 return findName(_quad1, q2, 2);\n             return parseName(_quad1, q2, i, 2);\n         }\n         q2 = (q2 << 8) | i;\n-        i = _inputBuffer[_inputPtr++] & 0xFF;\n+        i = input[_inputPtr++] & 0xFF;\n         if (codes[i] != 0) {\n             if (i == INT_QUOTE) { // 7 bytes\n                 return findName(_quad1, q2, 3);\n             return parseName(_quad1, q2, i, 3);\n         }\n         q2 = (q2 << 8) | i;\n-        i = _inputBuffer[_inputPtr++] & 0xFF;\n+        i = input[_inputPtr++] & 0xFF;\n         if (codes[i] != 0) {\n             if (i == INT_QUOTE) { // 8 bytes\n                 return findName(_quad1, q2, 4);\n         }\n         _quadBuffer[0] = _quad1;\n         _quadBuffer[1] = q2;\n-        return parseLongName(i, codes);\n-    }\n-\n-    protected Name parseLongName(int q, final int[] codes) throws IOException\n+        return parseLongName(i);\n+    }\n+\n+    protected Name parseLongName(int q) throws IOException\n     {\n         // As explained above, will ignore UTF-8 encoding at this point\n-        final byte[] buf = _inputBuffer;\n+        final byte[] input = _inputBuffer;\n+        final int[] codes = _icLatin1;\n         int qlen = 2;\n \n         while ((_inputPtr + 4) <= _inputEnd) {\n-            int i = buf[_inputPtr++] & 0xFF;\n+            int i = input[_inputPtr++] & 0xFF;\n             if (codes[i] != 0) {\n                 if (i == INT_QUOTE) {\n                     return findName(_quadBuffer, qlen, q, 1);\n             }\n \n             q = (q << 8) | i;\n-            i = buf[_inputPtr++] & 0xFF;\n+            i = input[_inputPtr++] & 0xFF;\n             if (codes[i] != 0) {\n                 if (i == INT_QUOTE) {\n                     return findName(_quadBuffer, qlen, q, 2);\n             }\n \n             q = (q << 8) | i;\n-            i = buf[_inputPtr++] & 0xFF;\n+            i = input[_inputPtr++] & 0xFF;\n             if (codes[i] != 0) {\n                 if (i == INT_QUOTE) {\n                     return findName(_quadBuffer, qlen, q, 3);\n             }\n \n             q = (q << 8) | i;\n-            i = buf[_inputPtr++] & 0xFF;\n+            i = input[_inputPtr++] & 0xFF;\n             if (codes[i] != 0) {\n                 if (i == INT_QUOTE) {\n                     return findName(_quadBuffer, qlen, q, 4);", "timestamp": 1398322324, "metainfo": ""}