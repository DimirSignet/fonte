{"sha": "aae5397afef690b3571bfa6a0dedbe85a48fb031", "log": "Added `JsonParser.hasTokenId()` method", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n     public abstract boolean hasCurrentToken();\n \n     /**\n+     * Method that is functionally equivalent to:\n+     *<code>\n+     *  return getCurrentTokenId() == id\n+     *<code>\n+     * but may be more efficiently implemented.\n+     *<p>\n+     * Note that no traversal or conversion is performed; so in some\n+     * cases calling method like {@link #isExpectedStartArrayToken()}\n+     * is necessary instead.\n+     *\n+     * @since 2.5\n+     */\n+    public abstract boolean hasTokenId(int id);\n+\n+    /**\n      * Method that can be called to get the name associated with\n      * the current token: for {@link JsonToken#FIELD_NAME}s it will\n      * be the same as what {@link #getText} returns;\n--- a/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n         final JsonToken t = _currToken;\n         return (t == null) ? JsonTokenId.ID_NO_TOKEN : t.id();\n     }\n-    \n+\n     @Override public boolean hasCurrentToken() { return _currToken != null; }\n-    \n+    @Override public boolean hasTokenId(int id) {\n+        final JsonToken t = _currToken;\n+        if (t == null) {\n+            return (JsonTokenId.ID_NO_TOKEN == id);\n+        }\n+        return t.id() == id;\n+    }\n+\n     @Override\n     public JsonToken nextValue() throws IOException {\n         /* Implementation should be as trivial as follows; only\n--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n     @Override public JsonToken getCurrentToken() { return delegate.getCurrentToken(); }\n     @Override public int getCurrentTokenId() { return delegate.getCurrentTokenId(); }\n     @Override public boolean hasCurrentToken() { return delegate.hasCurrentToken(); }\n+    @Override public boolean hasTokenId(int id) { return delegate.hasTokenId(id); }\n+    \n     @Override public String getCurrentName() throws IOException, JsonParseException { return delegate.getCurrentName(); }\n     @Override public JsonLocation getCurrentLocation() { return delegate.getCurrentLocation(); }\n     @Override public JsonStreamContext getParsingContext() { return delegate.getParsingContext(); }", "timestamp": 1418184304, "metainfo": ""}