{"sha": "39170c07410d472cdfed24a3770d49de05e1adac", "log": "Add `JsonParser.hasExpectedStartObjectToken()`", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n      * token indicates start array (usually meaning that current token\n      * is {@link JsonToken#START_ARRAY}) when start array is expected.\n      * For some specialized parsers this can return true for other cases\n-     * as well; this is usually done to emulate arrays.\n+     * as well; this is usually done to emulate arrays in cases underlying\n+     * format is ambiguous (XML, for example, has no format-level difference\n+     * between Objects and Arrays; it just has elements).\n      *<p>\n      * Default implementation is equivalent to:\n      *<pre>\n      */\n     public boolean isExpectedStartArrayToken() { return getCurrentToken() == JsonToken.START_ARRAY; }\n \n+    /**\n+     * Similar to {@link #isExpectedStartArrayToken()}, but checks whether stream\n+     * currently points to {@link JsonToken#START_OBJECT}.\n+     * \n+     * @since 2.5\n+     */\n+    public boolean isExpectedStartObjectToken() { return getCurrentToken() == JsonToken.START_OBJECT; }\n+    \n     /*\n     /**********************************************************\n     /* Public API, token state overrides\n--- a/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n     /**********************************************************\n      */\n \n-    @Override public abstract JsonToken nextToken() throws IOException, JsonParseException;\n+    @Override public abstract JsonToken nextToken() throws IOException;\n     @Override public JsonToken getCurrentToken() { return _currToken; }\n \n     @Override public final int getCurrentTokenId() {\n         return t.id() == id;\n     }\n \n+    @Override public boolean isExpectedStartArrayToken() { return _currToken == JsonToken.START_ARRAY; }\n+    @Override public boolean isExpectedStartObjectToken() { return _currToken == JsonToken.START_OBJECT; }\n+    \n     @Override\n     public JsonToken nextValue() throws IOException {\n         /* Implementation should be as trivial as follows; only\n--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n     @Override public JsonLocation getCurrentLocation() { return delegate.getCurrentLocation(); }\n     @Override public JsonStreamContext getParsingContext() { return delegate.getParsingContext(); }\n     @Override public boolean isExpectedStartArrayToken() { return delegate.isExpectedStartArrayToken(); }\n+    @Override public boolean isExpectedStartObjectToken() { return delegate.isExpectedStartObjectToken(); }\n \n     /*\n     /**********************************************************", "timestamp": 1418444233, "metainfo": ""}