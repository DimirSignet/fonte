{"sha": "995e1694a87c96eb62be6155517f67f68f62f574", "log": "moe re-sync (which just fixes some spacing) Revision created by MOE tool push_codebase.  R=johnlenz   Revision created by MOE tool push_codebase. MOE_MIGRATION=4566   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n       } else {\n         conv = new ClosureCodingConvention();\n       }\n-      \n+\n       getCommandLineConfig()\n           .setPrintTree(flags.print_tree)\n           .setPrintAst(flags.print_ast)\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n       }\n       return checks;\n     }\n-    \n+\n     if (options.jqueryPass) {\n       checks.add(jqueryAliases.makeOneTimePass());\n     }\n--- a/src/com/google/javascript/jscomp/ExpandJqueryAliases.java\n+++ b/src/com/google/javascript/jscomp/ExpandJqueryAliases.java\n \n     NodeTraversal.traverse(compiler,\n         NodeUtil.getFunctionBody(callbackFunction),\n-        new FindCallbackArgumentReferences(callbackFunction, \n+        new FindCallbackArgumentReferences(callbackFunction,\n             keyNodeReferences, valueNodeReferences,\n             objectToLoopOver.isArrayLit()));\n \n--- a/test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java\n+++ b/test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java\n     test(setupCode + \"jQuery.expandedEach(['a', 'b', 'c'],\" +\n         \"function(key, val){ jQuery[val] = key; });\",\n         setupCode + \"(function(){ jQuery.a = 0; })();\" +\n-        \"(function(){ jQuery.b = 1; })();\" + \n+        \"(function(){ jQuery.b = 1; })();\" +\n         \"(function(){ jQuery.c = 2 })();\");\n \n     // Test expansion with object literal using 'this' keyword\n     test(setupCode + \"jQuery.expandedEach(['a', 'b', 'c'],\" +\n         \"function(key, val){ jQuery[this] = key; });\",\n         setupCode + \"(function(){ jQuery.a = 0; })();\" +\n-        \"(function(){ jQuery.b = 1; })();\" + \n+        \"(function(){ jQuery.b = 1; })();\" +\n         \"(function(){ jQuery.c = 2 })();\");\n \n     // test nested function using argument name to shadow callback name\n     test(setupCode + \"jQuery.expandedEach(['a'], function(key,val) {\" +\n         \"jQuery[val] = key; (function(key) { jQuery[key] = 1;})('test'); })\",\n-        setupCode + \"(function(){ jQuery.a = 0;\" + \n+        setupCode + \"(function(){ jQuery.a = 0;\" +\n          \"(function(key){ jQuery[key] = 1})('test') })()\");\n \n     // test nested function using var name to shadow callback name\n         \"jQuery[val] = key; (function(key) { var val = 2;\" +\n         \"jQuery[key] = val;})('test');})\",\n         setupCode + \"(function(){\" +\n-        \"jQuery.a=0;\" + \n+        \"jQuery.a=0;\" +\n         \"(function(key){var val = 2; jQuery[key] = val;})('test')})()\");\n \n     // test nested function using function name to shadow callback name", "timestamp": 1334789473, "metainfo": ""}