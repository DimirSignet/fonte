{"sha": "28cb80c7b5768c6381a72c5f500ec85bc4d798d2", "log": "Don't report exits of nested functions as exits of the top function.  R=avd,dgajda DELTA=14  (13 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=201481   ", "commit": "\n--- a/src/com/google/javascript/jscomp/InstrumentFunctions.java\n+++ b/src/com/google/javascript/jscomp/InstrumentFunctions.java\n    * }\n    *\n    **/\n-  private class InstrumentReturns extends AbstractPostOrderCallback {\n+  private class InstrumentReturns implements NodeTraversal.Callback {\n     private final int functionId;\n     /**\n      * @param functionId Function identifier computed by FunctionNames;\n         body.addChildToBack(expr);\n         compiler.reportCodeChange();\n       }\n+    }\n+\n+    @Override\n+    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n+      return n.getType() != Token.FUNCTION;\n     }\n \n     @Override\n--- a/test/com/google/javascript/jscomp/InstrumentFunctionsTest.java\n+++ b/test/com/google/javascript/jscomp/InstrumentFunctionsTest.java\n          \"function a(){try{}catch(err){}finally{return $$testExit(0)}}\");\n   }\n \n+  public void testNestedExit() {\n+    this.instrumentationPb = \"report_exit: \\\"$$testExit\\\"\\n\" +\n+        \"report_defined: \\\"$$testDefine\\\"\";\n+    test(\"function a(){ return function(){ return c;}}\",\n+         \"$$testDefine(1);function a(){$$testDefine(0);\" +\n+         \"return $$testExit(1, function(){return $$testExit(0, c);});}\");\n+  }\n+\n   public void testProtobuffParseFail() {\n     this.instrumentationPb = \"not an ascii pb\\n\";\n     test(\"function a(){b}\", \"\", RhinoErrorReporter.PARSE_ERROR);", "timestamp": 1283343091, "metainfo": ""}