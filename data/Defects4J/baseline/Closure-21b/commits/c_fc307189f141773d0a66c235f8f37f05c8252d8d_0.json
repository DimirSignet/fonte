{"sha": "fc307189f141773d0a66c235f8f37f05c8252d8d", "log": "Make sure \"global this\" properties get declared even for built-in types.  R=acleung DELTA=37  (23 added, 14 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3172   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n         Var newVar =\n             scopeToDeclareIn.declare(variableName, n, type, input, inferred);\n \n-        if (shouldDeclareOnGlobalThis) {\n-          ObjectType globalThis =\n-              typeRegistry.getNativeObjectType(GLOBAL_THIS);\n-          if (inferred) {\n-            globalThis.defineInferredProperty(variableName,\n-                type == null ?\n-                    getNativeType(JSTypeNative.NO_TYPE) :\n-                    type,\n-                 n);\n-          } else {\n-            globalThis.defineDeclaredProperty(variableName, type, n);\n-          }\n-        }\n-\n         if (type instanceof EnumType) {\n           Node initialValue = newVar.getInitialValue();\n           boolean isValidValue = initialValue != null &&\n                       variableName));\n             }\n           }\n+        }\n+      }\n+\n+      if (shouldDeclareOnGlobalThis) {\n+        ObjectType globalThis =\n+            typeRegistry.getNativeObjectType(GLOBAL_THIS);\n+        if (inferred) {\n+          globalThis.defineInferredProperty(variableName,\n+              type == null ?\n+              getNativeType(JSTypeNative.NO_TYPE) :\n+              type,\n+              n);\n+        } else {\n+          globalThis.defineDeclaredProperty(variableName, type, n);\n         }\n       }\n \n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"};\",\n         \"actual parameter 1 of f does not match formal parameter\\n\" +\n         \"found   : Ctor\\n\" +\n+        \"required: number\");\n+  }\n+\n+  public void testThis14() throws Exception {\n+    testTypes(\n+        \"/** @param {number} x */ function f(x) {}\" +\n+        \"f(this.Object);\",\n+        \"actual parameter 1 of f does not match formal parameter\\n\" +\n+        \"found   : function (new:Object, *): ?\\n\" +\n         \"required: number\");\n   }\n ", "timestamp": 1314834480, "metainfo": ""}