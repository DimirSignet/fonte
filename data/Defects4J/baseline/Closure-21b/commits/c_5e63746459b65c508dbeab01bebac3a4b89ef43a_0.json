{"sha": "5e63746459b65c508dbeab01bebac3a4b89ef43a", "log": "Automated g4 rollback.  *** Reason for rollback ***  Fix to disambiguate properties submitted.  *** Original change description ***  Automated g4 rollback.  *** Reason for rollback ***  Break builds  *** Original change description ***  Preserve type information during collapse properties.  R=mgoodman DELTA=31  (23 added, 1 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=56   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n import com.google.javascript.rhino.TokenStream;\n+import com.google.javascript.rhino.jstype.JSType;\n \n import java.util.ArrayDeque;\n import java.util.Deque;\n     Node ref = NodeUtil.newName(\n         compiler.getCodingConvention(), alias, n, originalName);\n     NodeUtil.copyNameAnnotations(n.getLastChild(), ref);\n+    JSType type = n.getJSType();\n+    if (type != null) {\n+      ref.setJSType(type);\n+    }\n     parent.replaceChild(n, ref);\n     compiler.reportCodeChange();\n   }\n--- a/test/com/google/javascript/jscomp/ReplaceStringsTest.java\n+++ b/test/com/google/javascript/jscomp/ReplaceStringsTest.java\n \n import com.google.common.collect.Lists;\n import com.google.javascript.jscomp.ReplaceStrings.Result;\n+import com.google.javascript.rhino.Node;\n \n import java.util.List;\n \n   }\n \n   @Override\n-  public CompilerPass getProcessor(Compiler compiler) {\n+  public CompilerPass getProcessor(final Compiler compiler) {\n     List<String> names = Lists.newArrayList(\n         \"Error(?)\",\n         \"goog.debug.Trace.startTracer(*)\",\n         \"goog.debug.Logger.prototype.info(?)\"\n         );\n     pass = new ReplaceStrings(compiler, \"`\", names);\n-    return pass;\n+\n+    return new CompilerPass() {\n+        public void process(Node externs, Node js) {\n+          new CollapseProperties(compiler, true, true).process(externs, js);\n+          pass.process(externs, js);\n+        }\n+      };\n   }\n \n   @Override\n         \"var x = {};\" +\n         \"x.logger_ = goog.debug.Logger.getLogger('foo');\" +\n         \"x.logger_.info('Some message');\",\n-        \"var x = {};\" +\n-        \"x.logger_ = goog.debug.Logger.getLogger('a');\" +\n-        \"x.logger_.info('b');\",\n+        \"var x$logger_ = goog.debug.Logger.getLogger('a');\" +\n+        \"x$logger_.info('b');\",\n         new String[] {\n             \"a\", \"foo\",\n             \"b\", \"Some message\"});\n \n   // Non-matching \"info\" property.\n   public void testLoggerOnObject2() {\n-    testSame(\n+    test(\n         \"var x = {};\" +\n         \"x.info = function(a) {};\" +\n-        \"x.info('Some message');\");\n+        \"x.info('Some message');\",\n+        \"var x$info = function(a) {};\" +\n+        \"x$info('Some message');\");\n   }\n \n   // Non-matching \"info\" prototype property.\n-  public void testLoggerOnObject3() {\n+  public void testLoggerOnObject3a() {\n     testSame(\n         \"/** @constructor */\\n\" +\n         \"var x = function() {};\\n\" +\n         \"x.prototype.info = function(a) {};\" +\n         \"(new x).info('Some message');\");\n+  }\n+\n+  // Non-matching \"info\" prototype property.\n+  public void testLoggerOnObject3b() {\n+    testSame(\n+      \"/** @constructor */\\n\" +\n+      \"var x = function() {};\\n\" +\n+      \"x.prototype.info = function(a) {};\" +\n+      \"var y = (new x); this.info('Some message');\");\n   }\n \n   // Non-matching \"info\" property on \"NoObject\" type.", "timestamp": 1291411629, "metainfo": ""}