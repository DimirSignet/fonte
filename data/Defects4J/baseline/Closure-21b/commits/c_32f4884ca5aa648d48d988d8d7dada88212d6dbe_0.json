{"sha": "32f4884ca5aa648d48d988d8d7dada88212d6dbe", "log": "Normalize the file name prefix if it doesn't end with / Makes some things public fixes issue 651 fixes issue 652  Contributed by Ben McCann  R=malteubl DELTA=24  (11 added, 6 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4179   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n  */\n package com.google.javascript.jscomp;\n \n-import java.io.File;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-\n import com.google.common.base.Preconditions;\n import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;\n import com.google.javascript.rhino.IR;\n import com.google.javascript.rhino.Node;\n+\n+import java.io.File;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n \n /**\n  * Rewrites a Common JS module http://wiki.commonjs.org/wiki/Modules/1.1.1\n  * goog.provide and goog.require are emitted for closure compiler automatic\n  * ordering.\n  */\n-class ProcessCommonJSModules implements CompilerPass {\n-\n-  public static final String  DEFAULT_FILENAME_PREFIX = \".\" + File.separator;\n+public class ProcessCommonJSModules implements CompilerPass {\n+\n+  public static final String DEFAULT_FILENAME_PREFIX = \".\" + File.separator;\n \n   private static final String MODULE_NAME_PREFIX = \"module$\";\n \n   private JSModule module;\n \n   ProcessCommonJSModules(AbstractCompiler compiler, String filenamePrefix) {\n-    this.compiler = compiler;\n-    this.filenamePrefix = filenamePrefix;\n-    this.reportDependencies = true;\n+    this(compiler, filenamePrefix, true);\n   }\n \n   ProcessCommonJSModules(AbstractCompiler compiler, String filenamePrefix,\n       boolean reportDependencies) {\n     this.compiler = compiler;\n-    this.filenamePrefix = filenamePrefix;\n+    this.filenamePrefix = filenamePrefix.endsWith(File.separator) ?\n+        filenamePrefix : filenamePrefix + File.separator;\n     this.reportDependencies = reportDependencies;\n   }\n \n         .traverse(compiler, root, new ProcessCommonJsModulesCallback());\n   }\n \n-  private String guessCJSModuleName(String filename) {\n+  String guessCJSModuleName(String filename) {\n     return toModuleName(normalizeSourceName(filename));\n   }\n \n \n     private final String suffix;\n \n-    public SuffixVarsCallback(String suffix) {\n+    SuffixVarsCallback(String suffix) {\n       this.suffix = suffix;\n     }\n \n--- a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n+++ b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n         \"module$foo$bar=module$foo$bar.module$exports\");\n \n   }\n+\n+  public void testGuessModuleName() {\n+    ProcessCommonJSModules pass = new ProcessCommonJSModules(null, \"foo\");\n+    assertEquals(\"module$baz\",\n+        pass.guessCJSModuleName(\"foo/baz.js\"));\n+  }\n }", "timestamp": 1328636596, "metainfo": ""}