{"sha": "f640b5dec722422c93a9a624cd21d30b5e321858", "log": "Allow expressions on LHS of for-in loops. Fixes issue 528.  R=johnlenz DELTA=10  (8 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2965   ", "commit": "\n--- a/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java\n+++ b/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java\n             // for(var x in y) {...}\n             lhs = lhs.getLastChild();\n           }\n-          addToSetIfLocal(lhs, kill);\n-          addToSetIfLocal(lhs, gen);\n+          if (NodeUtil.isName(lhs)) {\n+            addToSetIfLocal(lhs, kill);\n+            addToSetIfLocal(lhs, gen);\n+          } else {\n+            computeGenKill(lhs, gen, kill, conditional);\n+          }\n           computeGenKill(rhs, gen, kill, conditional);\n         }\n         return;\n--- a/test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java\n+++ b/test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java\n     assertNotLiveAfterX(\"var a;X:a();a(param2)\", \"param1\");\n   }\n \n+  public void testExpressionInForIn() {\n+    assertLiveBeforeX(\"var a = [0]; X:for (a[1] in foo) { }\", \"a\");\n+  }\n+\n   public void testArgumentsArray() {\n     // Check that use of arguments forces the parameters into the\n     // escaped set.", "timestamp": 1312913737, "metainfo": ""}