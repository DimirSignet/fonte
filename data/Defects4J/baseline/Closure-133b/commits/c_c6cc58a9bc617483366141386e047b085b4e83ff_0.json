{"sha": "c6cc58a9bc617483366141386e047b085b4e83ff", "log": "Fix \"string-to-number\" conversions in the presense of verical tabs. Fixes issue 395.  R=nicksantos DELTA=20  (14 added, 1 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1246   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n+    if (rawJsString.contains(\"\\u000b\")) {\n+      // vertical tab is not always whitespace\n+      return null;\n+    }\n+\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n   static String trimJsWhiteSpace(String s) {\n     int start = 0;\n     int end = s.length();\n-    while (end > 0 && isStrWhiteSpaceChar(s.charAt(end-1))) {\n+    while (end > 0\n+        && isStrWhiteSpaceChar(s.charAt(end - 1)) == TernaryValue.TRUE) {\n       end--;\n     }\n-    while (start < end && isStrWhiteSpaceChar(s.charAt(start))) {\n+    while (start < end\n+        && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {\n       start++;\n     }\n     return s.substring(start, end);\n   /**\n    * Copied from Rhino's ScriptRuntime\n    */\n-  static boolean isStrWhiteSpaceChar(int c) {\n+  static TernaryValue isStrWhiteSpaceChar(int c) {\n     switch (c) {\n+      case '\\u000B': // <VT>\n+        return TernaryValue.UNKNOWN;  // IE says \"no\", EcmaScript says \"yes\"\n       case ' ': // <SP>\n       case '\\n': // <LF>\n       case '\\r': // <CR>\n       case '\\t': // <TAB>\n       case '\\u00A0': // <NBSP>\n       case '\\u000C': // <FF>\n-      case '\\u000B': // <VT>\n       case '\\u2028': // <LS>\n       case '\\u2029': // <PS>\n       case '\\uFEFF': // <BOM>\n-        return true;\n+        return TernaryValue.TRUE;\n       default:\n-        return Character.getType(c) == Character.SPACE_SEPARATOR;\n+        return (Character.getType(c) == Character.SPACE_SEPARATOR)\n+            ? TernaryValue.TRUE : TernaryValue.FALSE;\n     }\n   }\n \n--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n     test(\"(![1])\", \"false\");\n     test(\"(![a])\", \"false\");\n     testSame(\"(![foo()])\");\n+  }\n+\n+  public void testIEString() {\n+    testSame(\"!+'\\\\v1'\");\n   }\n \n   private static final List<String> LITERAL_OPERANDS =", "timestamp": 1301936576, "metainfo": ""}