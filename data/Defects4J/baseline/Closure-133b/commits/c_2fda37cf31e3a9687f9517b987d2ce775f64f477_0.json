{"sha": "2fda37cf31e3a9687f9517b987d2ce775f64f477", "log": "Tighten types a bit around goog.isXXX methods.  R=dimvar DELTA=145  (127 added, 7 deleted, 11 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5816   ", "commit": "\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n import static com.google.javascript.rhino.jstype.JSTypeNative.ARRAY_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.NO_OBJECT_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.NULL_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.NULL_VOID;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_STRING_BOOLEAN;\n import static com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;\n \n import com.google.common.base.Function;\n import com.google.common.collect.ImmutableMap;\n    */\n   private final Visitor<JSType> restrictToNotObjectVisitor =\n       new RestrictByFalseTypeOfResultVisitor() {\n+\n+        @Override\n+        public JSType caseAllType() {\n+          return typeRegistry.createUnionType(\n+              getNativeType(NUMBER_STRING_BOOLEAN), getNativeType(NULL_VOID));\n+        }\n+\n         @Override\n         public JSType caseObjectType(ObjectType type) {\n           return null;\n           if (p.outcome) {\n             return getRestrictedWithoutUndefined(p.type);\n           } else {\n-            return null;\n+            return  p.type != null ?\n+                getNativeType(VOID_TYPE).getGreatestSubtype(p.type) : null;\n           }\n          }\n       })\n         @Override\n         public JSType apply(TypeRestriction p) {\n           if (p.outcome) {\n-            return getNativeType(NULL_TYPE);\n+            return p.type != null ?\n+                getNativeType(NULL_TYPE).getGreatestSubtype(p.type) : null;\n           } else {\n             return getRestrictedWithoutNull(p.type);\n           }\n             return getRestrictedWithoutUndefined(\n                 getRestrictedWithoutNull(p.type));\n           } else {\n-            return null;\n+            return p.type != null ?\n+                getNativeType(NULL_VOID).getGreatestSubtype(p.type) : null;\n           }\n         }\n       })\n--- a/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java\n+++ b/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java\n     testClosureFunction(\"goog.isDef\",\n         createOptionalType(NUMBER_TYPE),\n         NUMBER_TYPE,\n-        createOptionalType(NUMBER_TYPE));\n+        VOID_TYPE);\n   }\n \n   public void testGoogIsDef2() throws Exception {\n     testClosureFunction(\"goog.isDef\",\n         createNullableType(NUMBER_TYPE),\n         createNullableType(NUMBER_TYPE),\n-        createNullableType(NUMBER_TYPE));\n+        NO_TYPE);\n+  }\n+\n+  public void testGoogIsDef3() throws Exception {\n+    testClosureFunction(\"goog.isDef\",\n+        ALL_TYPE,\n+        createUnionType(OBJECT_NUMBER_STRING_BOOLEAN,NULL_TYPE),\n+        VOID_TYPE);\n+  }\n+\n+  public void testGoogIsDef4() throws Exception {\n+    testClosureFunction(\"goog.isDef\",\n+        UNKNOWN_TYPE,\n+        UNKNOWN_TYPE,  // TODO(johnlenz): should be CHECKED_UNKNOWN_TYPE\n+        UNKNOWN_TYPE);\n   }\n \n   public void testGoogIsNull1() throws Exception {\n     testClosureFunction(\"goog.isNull\",\n         createOptionalType(NUMBER_TYPE),\n-        NULL_TYPE,\n+        NO_TYPE,\n         createOptionalType(NUMBER_TYPE));\n   }\n \n         NUMBER_TYPE);\n   }\n \n+  public void testGoogIsNull3() throws Exception {\n+    testClosureFunction(\"goog.isNull\",\n+        ALL_TYPE,\n+        NULL_TYPE,\n+        createUnionType(OBJECT_NUMBER_STRING_BOOLEAN, VOID_TYPE));\n+  }\n+\n+  public void testGoogIsNull4() throws Exception {\n+    testClosureFunction(\"goog.isNull\",\n+        UNKNOWN_TYPE,\n+        UNKNOWN_TYPE,\n+        UNKNOWN_TYPE); // TODO(johnlenz): this should be CHECK_UNKNOWN\n+  }\n+\n   public void testGoogIsDefAndNotNull1() throws Exception {\n     testClosureFunction(\"goog.isDefAndNotNull\",\n         createOptionalType(NUMBER_TYPE),\n         NUMBER_TYPE,\n-        createOptionalType(NUMBER_TYPE));\n+        VOID_TYPE);\n   }\n \n   public void testGoogIsDefAndNotNull2() throws Exception {\n     testClosureFunction(\"goog.isDefAndNotNull\",\n         createNullableType(NUMBER_TYPE),\n         NUMBER_TYPE,\n-        createNullableType(NUMBER_TYPE));\n+        NULL_TYPE);\n   }\n \n   public void testGoogIsDefAndNotNull3() throws Exception {\n     testClosureFunction(\"goog.isDefAndNotNull\",\n         createOptionalType(createNullableType(NUMBER_TYPE)),\n         NUMBER_TYPE,\n-        createOptionalType(createNullableType(NUMBER_TYPE)));\n+        NULL_VOID);\n+  }\n+\n+  public void testGoogIsDefAndNotNull4() throws Exception {\n+    testClosureFunction(\"goog.isDefAndNotNull\",\n+        ALL_TYPE,\n+        OBJECT_NUMBER_STRING_BOOLEAN,\n+        NULL_VOID);\n+  }\n+\n+  public void testGoogIsDefAndNotNull5() throws Exception {\n+    testClosureFunction(\"goog.isDefAndNotNull\",\n+        UNKNOWN_TYPE,\n+        UNKNOWN_TYPE,  // TODO(johnlenz): this should be \"CHECKED_UNKNOWN\"\n+        UNKNOWN_TYPE);\n   }\n \n   public void testGoogIsString1() throws Exception {\n         createUnionType(STRING_TYPE, NO_OBJECT_TYPE));\n   }\n \n+  public void testGoogIsBoolean3() throws Exception {\n+    testClosureFunction(\"goog.isBoolean\",\n+        ALL_TYPE,\n+        BOOLEAN_TYPE,\n+        ALL_TYPE); // TODO(johnlenz): this should be:\n+                   //   {Object|number|string|null|void}\n+  }\n+\n+  public void testGoogIsBoolean4() throws Exception {\n+    testClosureFunction(\"goog.isBoolean\",\n+        UNKNOWN_TYPE,\n+        BOOLEAN_TYPE,\n+        CHECKED_UNKNOWN_TYPE);\n+  }\n+\n   public void testGoogIsNumber() throws Exception {\n     testClosureFunction(\"goog.isNumber\",\n         createNullableType(NUMBER_TYPE),\n \n   public void testGoogIsFunction3() throws Exception {\n     testClosureFunction(\"goog.isFunction\",\n-        createUnionType(U2U_CONSTRUCTOR_TYPE,NUMBER_STRING_BOOLEAN),\n+        createUnionType(U2U_CONSTRUCTOR_TYPE, NUMBER_STRING_BOOLEAN),\n         U2U_CONSTRUCTOR_TYPE,\n         NUMBER_STRING_BOOLEAN);\n   }\n \n-  public void testGoogIsArray() throws Exception {\n+  public void testGoogIsFunctionOnNull() throws Exception {\n+    testClosureFunction(\"goog.isFunction\",\n+        null,\n+        U2U_CONSTRUCTOR_TYPE,\n+        null);\n+  }\n+\n+  public void testGoogIsArray1() throws Exception {\n     testClosureFunction(\"goog.isArray\",\n         OBJECT_TYPE,\n         ARRAY_TYPE,\n         OBJECT_TYPE);\n   }\n \n+  public void testGoogIsArray2() throws Exception {\n+    testClosureFunction(\"goog.isArray\",\n+        ALL_TYPE,\n+        ALL_TYPE, // TODO(johnlenz): should be ARRAY_TYPE?\n+        ALL_TYPE);\n+  }\n+\n+  public void testGoogIsArray3() throws Exception {\n+    testClosureFunction(\"goog.isArray\",\n+        UNKNOWN_TYPE,\n+        CHECKED_UNKNOWN_TYPE,\n+        CHECKED_UNKNOWN_TYPE);\n+  }\n+\n+  public void testGoogIsArray4() throws Exception {\n+    testClosureFunction(\"goog.isArray\",\n+        createUnionType(ARRAY_TYPE, NULL_TYPE),\n+        ARRAY_TYPE,\n+        NULL_TYPE);\n+  }\n+\n   public void testGoogIsArrayOnNull() throws Exception {\n     testClosureFunction(\"goog.isArray\",\n         null,\n         null);\n   }\n \n-  public void testGoogIsFunctionOnNull() throws Exception {\n-    testClosureFunction(\"goog.isFunction\",\n-        null,\n-        U2U_CONSTRUCTOR_TYPE,\n-        null);\n-  }\n-\n   public void testGoogIsObjectOnNull() throws Exception {\n     testClosureFunction(\"goog.isObject\",\n         null,\n         OBJECT_TYPE,\n         null);\n+  }\n+\n+  public void testGoogIsObject1() throws Exception {\n+    testClosureFunction(\"goog.isObject\",\n+        ALL_TYPE,\n+        NO_OBJECT_TYPE,\n+        createUnionType(NUMBER_STRING_BOOLEAN, NULL_TYPE, VOID_TYPE));\n+  }\n+\n+  public void testGoogIsObject2() throws Exception {\n+    testClosureFunction(\"goog.isObject\",\n+          createUnionType(OBJECT_TYPE, NUMBER_STRING_BOOLEAN),\n+          OBJECT_TYPE,\n+          NUMBER_STRING_BOOLEAN);\n+  }\n+\n+  public void testGoogIsObject3() throws Exception {\n+    testClosureFunction(\"goog.isObject\",\n+          createUnionType(\n+              OBJECT_TYPE, NUMBER_STRING_BOOLEAN, NULL_TYPE, VOID_TYPE),\n+          OBJECT_TYPE,\n+          createUnionType(NUMBER_STRING_BOOLEAN, NULL_TYPE, VOID_TYPE));\n+  }\n+\n+  public void testGoogIsObject4() throws Exception {\n+    testClosureFunction(\"goog.isObject\",\n+        UNKNOWN_TYPE,\n+        NO_OBJECT_TYPE,  // ? Should this be CHECKED_UNKNOWN?\n+        CHECKED_UNKNOWN_TYPE);\n   }\n \n   private void testClosureFunction(String function, JSType type,", "timestamp": 1353003332, "metainfo": ""}