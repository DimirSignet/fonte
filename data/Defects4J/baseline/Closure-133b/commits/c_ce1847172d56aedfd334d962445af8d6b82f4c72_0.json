{"sha": "ce1847172d56aedfd334d962445af8d6b82f4c72", "log": "Fix compiler crash when doing instanceof on a GETELEM  R=acleung DELTA=14  (12 added, 1 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=343   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n       }\n \n       if (parent.getType() == Token.INSTANCEOF &&\n-          parent.getLastChild() == n) {\n+          parent.getLastChild() == n &&\n+          // Don't cover GETELEMs with a global root node.\n+          n.isQualifiedName()) {\n         JsName checkedClass = getName(nameInfo.name, true);\n         refNodes.add(\n             new InstanceOfCheckNode(\n                 checkedClass, n, parent, parent.getParent()));\n-\n         return;\n       }\n \n--- a/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n+++ b/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n         \"}; new Bar().func();\");\n   }\n \n+  public void testDoNotChangeInstanceOfGetElem() {\n+    testSame(\"var goog = {};\" +\n+        \"function f(obj, name) {\" +\n+        \"  if (obj instanceof goog[name]) {\" +\n+        \"    return name;\" +\n+        \"  }\" +\n+        \"}\" +\n+        \"window['f'] = f;\");\n+  }\n+\n   public void testWeirdnessOnLeftSideOfPrototype() {\n     // This checks a bug where 'x' was removed, but the function referencing\n     // it was not, causing problems.", "timestamp": 1295903824, "metainfo": ""}