{"sha": "da36f250f9452743dbf0859af86312b844c0d0bd", "log": "Don't crash on large numbers :)  R=johnlenz DELTA=14  (11 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1495   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n \n   static double getSimpleNumber(String s) {\n     if (isSimpleNumber(s)) {\n-      long l = Long.parseLong(s);\n-      if (l < NodeUtil.MAX_POSITIVE_INTEGER_NUMBER) {\n-        return l;\n+      try {\n+        long l = Long.parseLong(s);\n+        if (l < NodeUtil.MAX_POSITIVE_INTEGER_NUMBER) {\n+          return l;\n+        }\n+      } catch (NumberFormatException e) {\n+        // The number was too long to parse. Fall through to NaN.\n       }\n     }\n     return Double.NaN;\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n                 \"var x={\\\"12345678901234567\\\":1}\");\n   }\n \n+  public void testObjectLit4() {\n+    // More than 128 bits.\n+    assertPrint(\n+        \"var x={\\\"123456789012345671234567890123456712345678901234567\\\":1}\",\n+        \"var x={\\\"123456789012345671234567890123456712345678901234567\\\":1}\");\n+  }\n+\n   public void testGetter() {\n     assertPrint(\"var x = {}\", \"var x={}\");\n     assertPrint(\"var x = {get a() {return 1}}\", \"var x={get a(){return 1}}\");", "timestamp": 1303169223, "metainfo": ""}