{"sha": "e262606c17c8c8ad09f4b6e0d76a1a94ff73bfd3", "log": "Don't remove \"var\" statement from pruned cases.  Peephole optimizations remove the false cases from switch statements, as well as all remaining statements coming after the true cases. If any of those cases contain \"var\" definitions, however, the var definitions must be preserved.  R=dimvar,johnlenz DELTA=16  (12 added, 2 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5925   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n+++ b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n           } else if (caseMatches == TernaryValue.UNKNOWN) {\n             break;\n           } else {\n-            n.removeChild(cur);\n-            reportCodeChange();\n+            removeCase(n, cur);\n           }\n         }\n         if (caseMatches != TernaryValue.UNKNOWN) {\n           // Remove any remaining cases\n           for (; cur != null; cur = next) {\n             next = cur.getNext();\n-            n.removeChild(cur);\n-            reportCodeChange();\n+            removeCase(n, cur);\n           }\n           // If there is one case left, we may be able to fold it\n           cur = cond.getNext();\n--- a/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n     // TODO(johnlenz): merge the useless \"case 2\"\n     foldSame(\"switch(a){case 1: goo(); case 2:break; case 3: foo()}\");\n \n+    // Can't remove unused code with a \"var\" in it.\n+    fold(\"switch(1){case 2: var x=0;}\", \"var x;\");\n+    fold(\"switch ('repeated') {\\n\" +\n+        \"case 'repeated':\\n\" +\n+        \"  foo();\\n\" +\n+        \"  break;\\n\" +\n+        \"case 'repeated':\\n\" +\n+        \"  var x=0;\\n\" +\n+        \"  break;\\n\" +\n+        \"}\",\n+        \"var x; {foo();}\");\n+\n     // Can't remove cases if something useful is done.\n     foldSame(\"switch(a){case 1: var c =2; break;}\");\n     foldSame(\"function f() {switch(a){case 1: return;}}\");", "timestamp": 1354667233, "metainfo": ""}