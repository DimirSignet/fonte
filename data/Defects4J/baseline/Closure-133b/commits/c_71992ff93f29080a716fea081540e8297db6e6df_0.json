{"sha": "71992ff93f29080a716fea081540e8297db6e6df", "log": "Make parameterized types public and visitable distinctly from other ProxyObjectTypes.  R=nicksantos DELTA=27  (26 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4956   ", "commit": "\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n import com.google.javascript.rhino.jstype.JSTypeNative;\n import com.google.javascript.rhino.jstype.JSTypeRegistry;\n import com.google.javascript.rhino.jstype.ObjectType;\n+import com.google.javascript.rhino.jstype.ParameterizedType;\n import com.google.javascript.rhino.jstype.StaticSlot;\n import com.google.javascript.rhino.jstype.TemplateType;\n import com.google.javascript.rhino.jstype.UnionType;\n       }\n \n       @Override\n+      public JSType caseParameterizedType(ParameterizedType type) {\n+        return caseObjectType(type);\n+      }\n+\n+      @Override\n       public JSType caseTemplateType(TemplateType templateType) {\n         return caseObjectType(templateType);\n       }\n       @Override\n       public JSType caseVoidType() {\n         return getNativeType(VOID_TYPE);\n+      }\n+\n+      @Override\n+      public JSType caseParameterizedType(ParameterizedType type) {\n+        return caseObjectType(type);\n       }\n \n       @Override\n       } else {\n         return type;\n       }\n+    }\n+\n+    @Override\n+    public JSType caseParameterizedType(ParameterizedType type) {\n+      return caseObjectType(type);\n     }\n \n     @Override\n--- a/src/com/google/javascript/rhino/jstype/ParameterizedType.java\n+++ b/src/com/google/javascript/rhino/jstype/ParameterizedType.java\n  * take parameterized type into account for equality.\n  *\n  */\n-final class ParameterizedType extends ProxyObjectType {\n+public final class ParameterizedType extends ProxyObjectType {\n   private static final long serialVersionUID = 1L;\n \n   final JSType parameterType;\n         result :\n         (result + \".<\" + parameterType.toStringHelper(forAnnotations) + \">\");\n   }\n+\n+  @Override\n+  public <T> T visit(Visitor<T> visitor) {\n+    return visitor.caseParameterizedType(this);\n+  }\n }\n--- a/src/com/google/javascript/rhino/jstype/Visitor.java\n+++ b/src/com/google/javascript/rhino/jstype/Visitor.java\n   T caseUnionType(UnionType type);\n \n   /**\n+   * Parameterized type's case.\n+   */\n+  T caseParameterizedType(ParameterizedType type);\n+\n+  /**\n    * Template type's case.\n    */\n   T caseTemplateType(TemplateType templateType);", "timestamp": 1338998912, "metainfo": ""}