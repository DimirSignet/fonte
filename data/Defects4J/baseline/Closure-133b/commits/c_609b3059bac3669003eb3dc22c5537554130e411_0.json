{"sha": "609b3059bac3669003eb3dc22c5537554130e411", "log": "add more special cases to the \"is this declared or inferred?\" decision tree.  now, functions in conditional blocks are inferred  R=acleung DELTA=26  (24 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4463   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n \n       if (inferred && rhsValue != null && rhsValue.isFunction()) {\n         if (info != null) {\n-          inferred = false;\n+          return false;\n         } else if (!scope.isDeclared(qName, false) &&\n             n.isUnscopedQualifiedName()) {\n \n+          // Check if this is in a conditional block.\n+          // Functions assigned in conditional blocks are inferred.\n+          for (Node current = n.getParent();\n+               !(current.isScript() || current.isFunction());\n+               current = current.getParent()) {\n+            if (NodeUtil.isControlStructure(current)) {\n+              return true;\n+            }\n+          }\n+\n           // Check if this is assigned in an inner scope.\n+          // Functions assigned in inner scopes are inferred.\n           AstFunctionContents contents =\n               getFunctionAnalysisResults(scope.getRootNode());\n           if (contents == null ||\n               !contents.getEscapedQualifiedNames().contains(qName)) {\n-            inferred = false;\n+            return false;\n           }\n         }\n       }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"}\");\n   }\n \n+  public void testQualifiedNameInference13() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function Foo() {}\" +\n+        \"function f(z) {\" +\n+        \"  var x = new Foo();\" +\n+        \"  if (z) {\" +\n+        \"    x.onload = function() {};\" +\n+        \"  } else {\" +\n+        \"    x.onload = null;\" +\n+        \"  };\" +\n+        \"}\");\n+  }\n+\n   public void testSheqRefinedScope() throws Exception {\n     Node n = parseAndTypeCheck(\n         \"/** @constructor */function A() {}\\n\" +", "timestamp": 1333402878, "metainfo": ""}