{"sha": "e4b41a7272b5458050bbbac493408a34e1042aee", "log": "Add getter/setter for checkDeterminism option.  R=johnlenz DELTA=12 (8 added, 0 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=6159   ", "commit": "\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n     if (options.devMode == DevMode.EVERY_PASS) {\n       phaseOptimizer.setSanityCheck(sanityCheck);\n     }\n-    if (options.checkDeterminism) {\n+    if (options.getCheckDeterminism()) {\n       phaseOptimizer.setPrintAstHashcodes(true);\n     }\n     phaseOptimizer.consume(getPassConfig().getChecks());\n     if (options.devMode == DevMode.EVERY_PASS) {\n       phaseOptimizer.setSanityCheck(sanityCheck);\n     }\n-    if (options.checkDeterminism) {\n+    if (options.getCheckDeterminism()) {\n       phaseOptimizer.setPrintAstHashcodes(true);\n     }\n     phaseOptimizer.consume(getPassConfig().getOptimizations());\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n    * Configures the compiler to log a hash code of the AST after\n    * every pass. Only intended for internal development.\n    */\n-  public boolean checkDeterminism;\n+  private boolean checkDeterminism;\n \n   //--------------------------------\n   // Input Options\n     this.devMode = devMode;\n   }\n \n+  public void setCheckDeterminism(boolean checkDeterminism) {\n+    this.checkDeterminism = checkDeterminism;\n+  }\n+\n+  public boolean getCheckDeterminism() {\n+    return checkDeterminism;\n+  }\n+\n   public void setMessageBundle(MessageBundle messageBundle) {\n     this.messageBundle = messageBundle;\n   }", "timestamp": 1358463435, "metainfo": ""}