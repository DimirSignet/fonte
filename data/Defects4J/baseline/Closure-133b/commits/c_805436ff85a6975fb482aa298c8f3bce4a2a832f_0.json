{"sha": "805436ff85a6975fb482aa298c8f3bce4a2a832f", "log": "Automated g4 rollback  *** Reason for rollback ***  Causes a memory leak in the Maps API: reintroduce the flag and disable it by default.  *** Original change description ***  remove the function inlining assumptions option  R=nicksantos DELTA=30 (29 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=6209   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CompilationLevel.java\n+++ b/src/com/google/javascript/jscomp/CompilationLevel.java\n     options.setInlineVariables(Reach.LOCAL_ONLY);\n     options.flowSensitiveInlineVariables = true;\n     options.setInlineFunctions(Reach.LOCAL_ONLY);\n+    options.setAssumeClosuresOnlyCaptureReferences(false);\n     options.checkGlobalThisLevel = CheckLevel.OFF;\n     options.foldConstants = true;\n     options.coalesceVariableNames = true;\n     options.smartNameRemoval = true;\n     options.inlineConstantVars = true;\n     options.setInlineFunctions(Reach.ALL);\n+    options.setAssumeClosuresOnlyCaptureReferences(false);\n     options.inlineGetters = true;\n     options.setInlineVariables(Reach.ALL);\n     options.flowSensitiveInlineVariables = true;\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n \n   /** Inlines functions defined in local scopes */\n   public boolean inlineLocalFunctions;\n+\n+  /** More aggressive function inlining */\n+  boolean assumeClosuresOnlyCaptureReferences;\n \n   /** Inlines properties */\n   boolean inlineProperties;\n     inlineFunctions = false;\n     inlineLocalFunctions = false;\n     assumeStrictThis = false;\n+    assumeClosuresOnlyCaptureReferences = false;\n     inlineProperties = false;\n     crossModuleCodeMotion = false;\n     crossModuleMethodMotion = false;\n   }\n \n   /**\n+   * @return Whether assumeClosuresOnlyCaptureReferences is set.\n+   */\n+  public boolean assumeClosuresOnlyCaptureReferences() {\n+    return assumeClosuresOnlyCaptureReferences;\n+  }\n+\n+  /**\n+   * Whether to assume closures capture only what they reference. This allows\n+   * more aggressive function inlining.\n+   */\n+  public void setAssumeClosuresOnlyCaptureReferences(boolean enable) {\n+    this.assumeClosuresOnlyCaptureReferences = enable;\n+  }\n+\n+  /**\n    * Sets the list of properties that we report property invalidation errors\n    * for.\n    */\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n           enableBlockInlining,\n           options.assumeStrictThis()\n               || options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT,\n-          true /* assumeMinimumCapture */);\n+          options.assumeClosuresOnlyCaptureReferences);\n     }\n   };\n ", "timestamp": 1359492919, "metainfo": ""}