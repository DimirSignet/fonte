{"sha": "333bd7bc5c79a5ba16a514ea5f6087503ad58f74", "log": "Fix a regression that i introduced when cleaning up checked unknowns in RAI.  R=johnlenz DELTA=21  (19 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5320   ", "commit": "\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n \n import static com.google.javascript.rhino.jstype.JSTypeNative.ALL_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.CHECKED_UNKNOWN_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.NO_OBJECT_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.NO_TYPE;\n import static com.google.javascript.rhino.jstype.JSTypeNative.NULL_TYPE;\n \n     @Override\n     public JSType caseUnknownType() {\n-      return caseTopType(getNativeType(UNKNOWN_TYPE));\n+      return caseTopType(getNativeType(CHECKED_UNKNOWN_TYPE));\n     }\n \n     @Override\n     if (type == null) {\n       if (resultEqualsValue) {\n         JSType result = getNativeTypeForTypeOf(value);\n-        return result == null ? getNativeType(UNKNOWN_TYPE) : result;\n+        return result == null ? getNativeType(CHECKED_UNKNOWN_TYPE) : result;\n       } else {\n         return null;\n       }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"function f(x) { if (x.impossible) x.impossible(); }\");\n   }\n \n+\n+  public void testMissingProperty42() throws Exception {\n+    testTypes(\n+        \"/** @param {Object} x */\" +\n+        \"function f(x) { \" +\n+        \"  if (typeof x.impossible == 'undefined') throw Error();\" +\n+        \"  return x.impossible;\" +\n+        \"}\");\n+  }\n+\n   public void testReflectObject1() throws Exception {\n     testClosureTypes(\n         \"var goog = {}; goog.reflect = {}; \" +\n--- a/test/com/google/javascript/jscomp/TypeInferenceTest.java\n+++ b/test/com/google/javascript/jscomp/TypeInferenceTest.java\n                \"f(out);\");\n     assertEquals(\"{prop: (string|undefined)}\", getType(\"out\").toString());\n   }\n+\n+  public void testAssertTypeofProp() {\n+    assuming(\"x\", createNullableType(OBJECT_TYPE));\n+    inFunction(\n+        \"goog.asserts.assert(typeof x.prop != 'undefined');\" +\n+        \"out = x.prop;\");\n+    verify(\"out\", CHECKED_UNKNOWN_TYPE);\n+  }\n }", "timestamp": 1344289999, "metainfo": ""}