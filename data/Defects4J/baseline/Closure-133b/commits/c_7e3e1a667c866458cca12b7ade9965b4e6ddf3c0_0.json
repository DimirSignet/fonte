{"sha": "7e3e1a667c866458cca12b7ade9965b4e6ddf3c0", "log": "expand the diagnostic group api  R=mwr DELTA=80  (56 added, 7 deleted, 17 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4298   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DiagnosticGroup.java\n+++ b/src/com/google/javascript/jscomp/DiagnosticGroup.java\n \n import java.io.Serializable;\n import java.util.Arrays;\n-import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n \n       Maps.newHashMap();\n \n   /** Create a diagnostic group that matches only the given type. */\n-  static DiagnosticGroup forType(DiagnosticType type) {\n+  public static DiagnosticGroup forType(DiagnosticType type) {\n     if (!singletons.containsKey(type)) {\n       singletons.put(type, new DiagnosticGroup(type));\n     }\n   }\n \n   /**\n-   * Returns an iterator over all the types in this group.\n+   * Returns an iterable over all the types in this group.\n    */\n-  Collection<DiagnosticType> getTypes() {\n+  public Iterable<DiagnosticType> getTypes() {\n     return types;\n   }\n ", "timestamp": 1330529928, "metainfo": ""}