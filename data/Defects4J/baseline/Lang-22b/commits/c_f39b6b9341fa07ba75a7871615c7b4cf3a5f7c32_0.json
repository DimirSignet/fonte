{"sha": "f39b6b9341fa07ba75a7871615c7b4cf3a5f7c32", "log": "Document unused items Raw types  ", "commit": "\n--- a/src/test/org/apache/commons/lang/reflect/ConstructorUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/reflect/ConstructorUtilsTest.java\n     }\n \n     private static class PrivateClass {\n+        @SuppressWarnings(\"unused\")\n         public PrivateClass() {\n         }\n     }\n \n-    private Map classCache;\n+    private Map<Class<?>, Class<?>[]> classCache;\n \n     public ConstructorUtilsTest(String name) {\n         super(name);\n-        classCache = new HashMap();\n+        classCache = new HashMap<Class<?>, Class<?>[]>();\n     }\n \n     /**\n                 singletonArray(Double.TYPE), singletonArray(Double.TYPE));\n     }\n \n-    private void expectMatchingAccessibleConstructorParameterTypes(Class cls,\n-            Class[] requestTypes, Class[] actualTypes) {\n-        Constructor c = ConstructorUtils.getMatchingAccessibleConstructor(cls,\n+    private void expectMatchingAccessibleConstructorParameterTypes(Class<?> cls,\n+            Class<?>[] requestTypes, Class<?>[] actualTypes) {\n+        Constructor<?> c = ConstructorUtils.getMatchingAccessibleConstructor(cls,\n                 requestTypes);\n         assertTrue(toString(c.getParameterTypes()) + \" not equals \"\n                 + toString(actualTypes), Arrays.equals(actualTypes, c\n                 .getParameterTypes()));\n     }\n \n-    private String toString(Class[] c) {\n+    private String toString(Class<?>[] c) {\n         return Arrays.asList(c).toString();\n     }\n \n-    private Class[] singletonArray(Class c) {\n-        Class[] result = (Class[]) classCache.get(c);\n+    private Class<?>[] singletonArray(Class<?> c) {\n+        Class<?>[] result = classCache.get(c);\n         if (result == null) {\n             result = new Class[] { c };\n             classCache.put(c, result);", "timestamp": 1256400143, "metainfo": ""}