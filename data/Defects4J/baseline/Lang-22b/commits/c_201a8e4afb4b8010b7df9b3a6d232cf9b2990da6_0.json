{"sha": "201a8e4afb4b8010b7df9b3a6d232cf9b2990da6", "log": "Applying Sean Mickey's patch to LANG-630 such that MutableObject.equals is as would be expected. Now it directly overrides the equals(Object) method.   ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/mutable/MutableObject.java\n+++ b/src/main/java/org/apache/commons/lang3/mutable/MutableObject.java\n \n     //-----------------------------------------------------------------------\n     /**\n+     * <p>\n      * Compares this object against the specified object. The result is <code>true</code> if and only if the argument\n      * is not <code>null</code> and is a <code>MutableObject</code> object that contains the same <code>T</code>\n      * value as this object.\n+     * </p>\n      * \n-     * @param obj  the object to compare with, null returns false\n-     * @return <code>true</code> if the objects are the same; <code>false</code> otherwise.\n+     * @param obj  the object to compare with, <code>null</code> returns <code>false</code>\n+     * @return\t<code>true</code> if the objects are the same;\n+     *          <code>true</code> if the objects have equivalent <code>value</code> fields;\t\t\t\n+     *          <code>false</code> otherwise.\n      */\n-    public boolean equals(MutableObject<T> obj) {\n-        if(obj == null) {\n-            return false;\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+\tpublic boolean equals(Object obj) {\n+        if (obj == null) {\n+        \treturn false;\n         }\n-\n-        T other = obj.value;\n-        return value == other || (value != null && value.equals(other));\n+        if (this == obj) {\n+        \treturn true;\n+        }\n+    \tif (this.getClass() == obj.getClass()) {\n+            MutableObject<T> that = (MutableObject<T>) obj;\n+            return this.value.equals(that.value);\n+        }\n+    \telse {\n+    \t\treturn false;\n+    \t}\n     }\n \n     /**", "timestamp": 1279432410, "metainfo": ""}