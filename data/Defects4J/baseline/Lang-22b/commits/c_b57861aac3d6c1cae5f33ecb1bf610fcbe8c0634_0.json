{"sha": "b57861aac3d6c1cae5f33ecb1bf610fcbe8c0634", "log": "improved javadoc, and missing javadoc for new uncapitalize method added.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author Gary Gregory\n  * @since 2.0\n- * @version $Id: WordUtils.java,v 1.12 2004/06/03 03:49:47 bayard Exp $\n+ * @version $Id: WordUtils.java,v 1.13 2004/06/04 03:58:27 bayard Exp $\n  */\n public class WordUtils {\n \n      * Only the first letter of each word is changed. To change all letters to\n      * the capitalized case, use {@link #capitalizeFully(String)}.</p>\n      *\n+     * <p>The delimiters represent a set of characters understood to separate words.\n+     * The first string character and the first non-delimiter character after a\n+     * delimiter will be capitalized. </p>\n+     *\n      * <p>A <code>null</code> input String returns <code>null</code>.\n      * Capitalization uses the unicode title case, normally equivalent to\n      * upper case.</p>\n      * </pre>\n      * \n      * @param str  the String to capitalize, may be null\n-     * @param delimiters  characters to capitalize afterwards\n+     * @param delimiters  set of characters to determine capitalization\n      * @return capitalized String, <code>null</code> if null String input\n      * @see #uncapitalize(String)\n      * @see #capitalizeFully(String)\n      * <p>Capitalizes all the delimiter separated words in a String.\n      * All letters are changed, so the resulting string will be fully changed.</p>\n      *\n+     * <p>The delimiters represent a set of characters understood to separate words.\n+     * The first string character and the first non-delimiter character after a\n+     * delimiter will be capitalized. </p>\n+     *\n      * <p>A <code>null</code> input String returns <code>null</code>.\n      * Capitalization uses the unicode title case, normally equivalent to\n      * upper case.</p>\n      * </pre>\n      * \n      * @param str  the String to capitalize, may be null\n-     * @param delimiters  characters to capitalize afterwards\n+     * @param delimiters  set of characters to determine capitalization\n      * @return capitalized String, <code>null</code> if null String input\n      */\n     public static String capitalizeFully(String str, char[] delimiters) {\n         return uncapitalize(str, null);\n     }\n \n+    /**\n+     * <p>Uncapitalizes all the whitespace separated words in a String.\n+     * Only the first letter of each word is changed.</p>\n+     *\n+     * <p>The delimiters represent a set of characters understood to separate words.\n+     * The first string character and the first non-delimiter character after a\n+     * delimiter will be uncapitalized. </p>\n+     *\n+     * <p>Whitespace is defined by {@link Character#isWhitespace(char)}.\n+     * A <code>null</code> input String returns <code>null</code>.</p>\n+     *\n+     * <pre>\n+     * WordUtils.uncapitalize(null)        = null\n+     * WordUtils.uncapitalize(\"\")          = \"\"\n+     * WordUtils.uncapitalize(\"I Am FINE\") = \"i am fINE\"\n+     * </pre>\n+     * \n+     * @param str  the String to uncapitalize, may be null\n+     * @param delimiters  set of characters to determine uncapitalization\n+     * @return uncapitalized String, <code>null</code> if null String input\n+     * @see #capitalize(String)\n+     */\n     public static String uncapitalize(String str, char[] delimiters) {\n         if (str == null || str.length() == 0) {\n             return str;", "timestamp": 1086321507, "metainfo": ""}