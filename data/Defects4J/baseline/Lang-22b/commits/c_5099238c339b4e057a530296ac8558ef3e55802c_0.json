{"sha": "5099238c339b4e057a530296ac8558ef3e55802c", "log": "Removing deprecated fields in DateUtils as per LANG-438  ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/DateUtils.java\n+++ b/src/java/org/apache/commons/lang/time/DateUtils.java\n      * @param amount  the amount to add, may be negative\n      * @return the new date object with the amount added\n      * @throws IllegalArgumentException if the date is null\n-     * @deprecated Will become privately scoped in 3.0\n-     */\n-    public static Date add(Date date, int calendarField, int amount) {\n+     */\n+    private static Date add(Date date, int calendarField, int amount) {\n         if (date == null) {\n             throw new IllegalArgumentException(\"The date must not be null\");\n         }\n         }\n     }\n     \n-    //------------------------------------------------------------------------- \n-    // Deprecated int constants\n-    // TODO: Remove in 3.0\n-    \n-    /**\n-     * Number of milliseconds in a standard second.\n-     * \n-     * @deprecated Use MILLIS_PER_SECOND. This will be removed in Commons Lang 3.0.\n-     */\n-    public static final int MILLIS_IN_SECOND = 1000;\n-    /**\n-     * Number of milliseconds in a standard minute.\n-     * \n-     * @deprecated Use MILLIS_PER_MINUTE. This will be removed in Commons Lang 3.0.\n-     */\n-    public static final int MILLIS_IN_MINUTE = 60 * 1000;\n-    /**\n-     * Number of milliseconds in a standard hour.\n-     * \n-     * @deprecated Use MILLIS_PER_HOUR. This will be removed in Commons Lang 3.0.\n-     */\n-    public static final int MILLIS_IN_HOUR = 60 * 60 * 1000;\n-    /**\n-     * Number of milliseconds in a standard day.\n-     * \n-     * @deprecated Use MILLIS_PER_DAY. This will be removed in Commons Lang 3.0.\n-     */\n-    public static final int MILLIS_IN_DAY = 24 * 60 * 60 * 1000;\n-    \n }\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n         assertDate(result, 2000, 6, 5, 4, 3, 2, 0);\n     }\n \n-    //-----------------------------------------------------------------------\n-    public void testAddByField() throws Exception {\n-        Date base = new Date(MILLIS_TEST);\n-        Date result = DateUtils.add(base, Calendar.YEAR, 0);\n-        assertNotSame(base, result);\n-        assertDate(base, 2000, 6, 5, 4, 3, 2, 1);\n-        assertDate(result, 2000, 6, 5, 4, 3, 2, 1);\n-        \n-        result = DateUtils.add(base, Calendar.YEAR, 1);\n-        assertNotSame(base, result);\n-        assertDate(base, 2000, 6, 5, 4, 3, 2, 1);\n-        assertDate(result, 2001, 6, 5, 4, 3, 2, 1);\n-        \n-        result = DateUtils.add(base, Calendar.YEAR, -1);\n-        assertNotSame(base, result);\n-        assertDate(base, 2000, 6, 5, 4, 3, 2, 1);\n-        assertDate(result, 1999, 6, 5, 4, 3, 2, 1);\n-    }\n-    \n \t// -----------------------------------------------------------------------\n \tpublic void testSetYears() throws Exception {\n \t\tDate base = new Date(MILLIS_TEST);", "timestamp": 1237024667, "metainfo": ""}