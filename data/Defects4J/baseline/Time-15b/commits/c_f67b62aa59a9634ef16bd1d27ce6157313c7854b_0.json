{"sha": "f67b62aa59a9634ef16bd1d27ce6157313c7854b", "log": "Clarify Javadoc around week-of-weekyear", "commit": "\n--- a/src/main/java/org/joda/time/DateMidnight.java\n+++ b/src/main/java/org/joda/time/DateMidnight.java\n /*\n- *  Copyright 2001-2010 Stephen Colebourne\n+ *  Copyright 2001-2011 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n     /**\n      * Returns a copy of this date with the weekyear field updated.\n      * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n+     * <p>\n      * DateMidnight is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n      * weekyear changed.\n \n     /**\n      * Returns a copy of this date with the week of weekyear field updated.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #withWeekyear(int)}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * <p>\n      * DateMidnight is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n--- a/src/main/java/org/joda/time/DateTime.java\n+++ b/src/main/java/org/joda/time/DateTime.java\n     /**\n      * Returns a copy of this datetime with the weekyear field updated.\n      * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n+     * <p>\n      * DateTime is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n      * weekyear changed.\n \n     /**\n      * Returns a copy of this datetime with the week of weekyear field updated.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #withWeekyear(int)}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * <p>\n      * DateTime is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n--- a/src/main/java/org/joda/time/LocalDate.java\n+++ b/src/main/java/org/joda/time/LocalDate.java\n /*\n- *  Copyright 2001-2010 Stephen Colebourne\n+ *  Copyright 2001-2011 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n     /**\n      * Get the week of weekyear field value.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #getWeekyear()}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      *\n      * @return the week of a week based year\n      */\n     /**\n      * Returns a copy of this date with the weekyear field updated.\n      * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n+     * <p>\n      * LocalDate is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n      * weekyear changed.\n \n     /**\n      * Returns a copy of this date with the week of weekyear field updated.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #withWeekyear(int)}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * <p>\n      * LocalDate is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n--- a/src/main/java/org/joda/time/LocalDateTime.java\n+++ b/src/main/java/org/joda/time/LocalDateTime.java\n /*\n- *  Copyright 2001-2010 Stephen Colebourne\n+ *  Copyright 2001-2011 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n     /**\n      * Get the week of weekyear field value.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #getWeekyear()}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      *\n      * @return the week of a week based year\n      */\n     /**\n      * Returns a copy of this datetime with the weekyear field updated.\n      * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n+     * <p>\n      * LocalDateTime is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n      * weekyear changed.\n \n     /**\n      * Returns a copy of this datetime with the week of weekyear field updated.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #withWeekyear(int)}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * <p>\n      * LocalDateTime is immutable, so there are no set methods.\n      * Instead, this method returns a new instance with the value of\n--- a/src/main/java/org/joda/time/ReadableDateTime.java\n+++ b/src/main/java/org/joda/time/ReadableDateTime.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2011 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n     /**\n      * Get the week of weekyear field value.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #getWeekyear()}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * \n      * @return the week of a week based year\n      */\n \n     /**\n      * Get the weekyear field value.\n+     * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n      * \n      * @return the year of a week based year\n      */\n--- a/src/main/java/org/joda/time/base/AbstractDateTime.java\n+++ b/src/main/java/org/joda/time/base/AbstractDateTime.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2011 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n     /**\n      * Get the weekyear field value.\n+     * <p>\n+     * The weekyear is the year that matches with the weekOfWeekyear field.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n+     * The weekyear allows you to query the effective year for that day.\n      * \n      * @return the year of a week based year\n      */\n \n     /**\n      * Get the week of weekyear field value.\n+     * <p>\n+     * This field is associated with the \"weekyear\" via {@link #getWeekyear()}.\n+     * In the standard ISO8601 week algorithm, the first week of the year\n+     * is that in which at least 4 days are in the year. As a result of this\n+     * definition, day 1 of the first week may be in the previous year.\n      * \n      * @return the week of a week based year\n      */", "timestamp": 1306011537, "metainfo": ""}