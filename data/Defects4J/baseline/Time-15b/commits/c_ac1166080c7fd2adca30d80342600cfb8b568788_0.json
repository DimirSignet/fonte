{"sha": "ac1166080c7fd2adca30d80342600cfb8b568788", "log": "Simplify read writable interface   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/ReadWritablePeriod.java\n+++ b/JodaTime/src/java/org/joda/time/ReadWritablePeriod.java\n     void setPeriod(ReadableInterval interval, Chronology chrono);\n \n     /**\n-     * Sets all the fields in one go from a millisecond interval dividing the\n-     * fields using the period type.\n-     * \n-     * @param startInstant  interval start, in milliseconds\n-     * @param endInstant  interval end, in milliseconds\n-     * @param chrono  the chronology to use, null means ISO default\n-     */\n-    void setPeriod(long startInstant, long endInstant, Chronology chrono);\n-\n-    /**\n      * Sets all the fields in one go from a duration dividing the\n      * fields using the period type.\n      * <p>\n      * @param chrono  the chronology to use, null means ISO default\n      */\n     void setPeriod(ReadableDuration duration, Chronology chrono);\n-\n-    /**\n-     * Sets all the fields in one go from a millisecond duration dividing the\n-     * fields using the period type.\n-     * <p>\n-     * When dividing the duration, only precise fields in the period type will be used.\n-     * For large durations, all the remaining duration will be stored in the largest\n-     * available precise field.\n-     * \n-     * @param duration  the duration, in milliseconds\n-     * @param chrono  the chronology to use, null means ISO default\n-     */\n-    void setPeriod(long duration, Chronology chrono);\n \n     //-----------------------------------------------------------------------\n     /**\n      */\n     void add(ReadableDuration duration);\n \n-    /**\n-     * Adds a duration to this one by dividing the duration into\n-     * fields and then adding each field in turn.\n-     * <p>\n-     * When dividing the duration, only precise fields in the period type will be used.\n-     * For large durations, all the remaining duration will be added to the largest\n-     * available precise field.\n-     * \n-     * @param duration  the duration to add\n-     * @throws ArithmeticException if the addition exceeds the capacity of the period\n-     */\n-    void add(long duration);\n-\n     //-----------------------------------------------------------------------\n     /**\n      * Sets the number of years of the period.\n--- a/JodaTime/src/java/org/joda/time/convert/NullConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/NullConverter.java\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTimeUtils;\n+import org.joda.time.Period;\n import org.joda.time.ReadWritablePeriod;\n \n /**\n      * @throws NullPointerException if the duration is null\n      */\n     public void setInto(ReadWritablePeriod duration, Object object, Chronology chrono) {\n-        duration.setPeriod(0L, chrono);\n+        duration.setPeriod((Period) null);\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1094410931, "metainfo": ""}