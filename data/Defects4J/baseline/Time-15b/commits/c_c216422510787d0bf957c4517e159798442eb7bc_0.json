{"sha": "c216422510787d0bf957c4517e159798442eb7bc", "log": "Javadoc   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/AbstractDuration.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractDuration.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Converts this duration to a Duration instance.\n+     * Get this duration as an immutable <code>Duration</code> object.\n+     * <p>\n+     * This will either typecast this instance, or create a new <code>Duration</code>.\n      * \n      * @return a Duration created using the millisecond duration from this instance\n      */\n--- a/JodaTime/src/java/org/joda/time/AbstractInterval.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractInterval.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Get this interval as an <code>Interval</code> object.\n+     * Get this interval as an immutable <code>Interval</code> object.\n      * <p>\n      * This will either typecast this instance, or create a new <code>Interval</code>.\n      *\n     }\n \n     /**\n-     * Get this time interval as a <code>MutableInterval</code> object.\n+     * Get this time interval as a <code>MutableInterval</code>.\n      * <p>\n      * This will always return a new <code>MutableInterval</code> with the same interval.\n      *\n--- a/JodaTime/src/java/org/joda/time/AbstractPeriod.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractPeriod.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Get this object as an immutable Period. This can be useful if you\n-     * don't trust the implementation of the interface to be well-behaved, or\n-     * to get a guaranteed immutable object.\n+     * Get this period as an immutable <code>Period</code> object.\n+     * <p>\n+     * This will either typecast this instance, or create a new <code>Period</code>.\n      * \n      * @return a Duration using the same field set and values\n      */\n     }\n \n     /**\n-     * Get this object as a MutablePeriod.\n+     * Get this object as a <code>MutablePeriod</code>.\n+     * <p>\n+     * This will always return a new <code>MutablePeriod</code> with the same fields.\n      * \n      * @return a MutablePeriod using the same field set and values\n      */\n--- a/JodaTime/src/java/org/joda/time/ReadableDuration.java\n+++ b/JodaTime/src/java/org/joda/time/ReadableDuration.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Converts this duration to a Duration instance.\n-     * This can be useful if you don't trust the implementation of the interface\n-     * to be well-behaved, or to get a guaranteed immutable object.\n+     * Get this duration as an immutable <code>Duration</code> object.\n+     * <p>\n+     * This will either typecast this instance, or create a new <code>Duration</code>.\n      * \n      * @return a Duration created using the millisecond duration from this instance\n      */\n--- a/JodaTime/src/java/org/joda/time/ReadableInterval.java\n+++ b/JodaTime/src/java/org/joda/time/ReadableInterval.java\n     \n     //-----------------------------------------------------------------------\n     /**\n-     * Get this interval as an <code>Interval</code> object.\n+     * Get this interval as an immutable <code>Interval</code> object.\n      * <p>\n      * This will either typecast this instance, or create a new <code>Interval</code>.\n      *\n     Interval toInterval();\n \n     /**\n-     * Get this time interval as a <code>MutableInterval</code> object.\n+     * Get this time interval as a <code>MutableInterval</code>.\n      * <p>\n      * This will always return a new <code>MutableInterval</code> with the same interval.\n      *\n--- a/JodaTime/src/java/org/joda/time/ReadablePeriod.java\n+++ b/JodaTime/src/java/org/joda/time/ReadablePeriod.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Gets this object as an immutable Period. This can be useful if you\n-     * don't trust the implementation of the interface to be well-behaved, or\n-     * to get a guaranteed immutable object.\n+     * Get this period as an immutable <code>Period</code> object.\n+     * <p>\n+     * This will either typecast this instance, or create a new <code>Period</code>.\n      * \n      * @return a Duration using the same field set and values\n      */\n     Period toPeriod();\n \n     /**\n-     * Get this object as a MutablePeriod.\n+     * Get this object as a <code>MutablePeriod</code>.\n+     * <p>\n+     * This will always return a new <code>MutablePeriod</code> with the same fields.\n      * \n      * @return a MutablePeriod using the same field set and values\n      */", "timestamp": 1092264930, "metainfo": ""}