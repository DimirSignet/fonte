{"sha": "2e7de31b0fb56e8821ad7e68d15f7e9d7690c6a4", "log": "Add tests to show pivot year parse works  ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n+++ b/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n         assertEquals(dt, f.parseDateTime(\"2004/03/09\"));\n     }\n \n+    public void testParse_pivotYear() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd.MM.yy\").withPivotYear(2050).withZone(DateTimeZone.UTC);\n+        \n+        DateTime date = dateFormatter.parseDateTime(\"25.12.15\");\n+        assertEquals(date.getYear(), 2015);\n+        \n+        date = dateFormatter.parseDateTime(\"25.12.00\");\n+        assertEquals(date.getYear(), 2000);\n+        \n+        date = dateFormatter.parseDateTime(\"25.12.99\");\n+        assertEquals(date.getYear(), 2099);\n+    }\n+\n+    public void testParse_pivotYear_ignored4DigitYear() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd.MM.yyyy\").withPivotYear(2050).withZone(DateTimeZone.UTC);\n+        \n+        DateTime date = dateFormatter.parseDateTime(\"25.12.15\");\n+        assertEquals(date.getYear(), 15);\n+        \n+        date = dateFormatter.parseDateTime(\"25.12.00\");\n+        assertEquals(date.getYear(), 0);\n+        \n+        date = dateFormatter.parseDateTime(\"25.12.99\");\n+        assertEquals(date.getYear(), 99);\n+    }\n+\n }", "timestamp": 1173019949, "metainfo": ""}