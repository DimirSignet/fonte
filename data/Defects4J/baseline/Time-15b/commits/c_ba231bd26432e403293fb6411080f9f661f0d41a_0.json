{"sha": "ba231bd26432e403293fb6411080f9f661f0d41a", "log": "Javadoc   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Duration.java\n+++ b/JodaTime/src/java/org/joda/time/Duration.java\n  * Whether a particular duration instance is precise depends on the constructor\n  * used and the duration type specified.\n  * <p>\n- * Duration is thread-safe and immutable, provided that the DurationType is\n- * as well. All standard DurationType classes supplied are thread-safe and\n- * immutable.\n+ * Duration is thread-safe and immutable, provided that the DurationType is as well.\n+ * All standard DurationType classes supplied are thread-safe and immutable.\n  *\n  * @author Brian S O'Neill\n  * @author Stephen Colebourne\n--- a/JodaTime/src/java/org/joda/time/MutableDuration.java\n+++ b/JodaTime/src/java/org/joda/time/MutableDuration.java\n \n     /**\n      * Creates a zero length millisecond duration using MillisType.\n-     * MillisType using ISOChronology in UTC is a precise duration type.\n+     * This constructor creates a precise duration because\n+     * MillisType in ISOChronology UTC is precise.\n      */\n     public MutableDuration() {\n         super((DurationType) null);\n \n     /**\n      * Creates a zero length duration.\n-     *\n-     * @param type  which set of fields this duration supports, null means MillisType\n+     * This constructor creates a precise duration.\n+     *\n+     * @param type  which set of fields this duration supports, null means millis type\n      */\n     public MutableDuration(DurationType type) {\n         super(type);\n \n     /**\n      * Create a duration from a set of field values using DayHourType.\n-     * DayHourType using ISOChronology in UTC is a precise duration type.\n+     * This constructor creates a precise duration because\n+     * DayHourType in ISOChronology UTC is precise.\n      *\n      * @param days  amount of days in this duration\n      * @param hours  amount of hours in this duration\n      * AllType using ISOChronology in UTC is an imprecise duration type\n      * unless the year, month and week fields are zero.\n      *\n-     * @param years  amount of years in this duration, which must be zero if unsupported\n-     * @param months  amount of months in this duration, which must be zero if unsupported\n-     * @param weeks  amount of weeks in this duration, which must be zero if unsupported\n-     * @param days  amount of days in this duration, which must be zero if unsupported\n-     * @param hours  amount of hours in this duration, which must be zero if unsupported\n-     * @param minutes  amount of minutes in this duration, which must be zero if unsupported\n-     * @param seconds  amount of seconds in this duration, which must be zero if unsupported\n-     * @param millis  amount of milliseconds in this duration, which must be zero if unsupported\n-     * @throws UnsupportedOperationException if an unsupported field's value is non-zero\n+     * @param years  amount of years in this duration\n+     * @param months  amount of months in this duration\n+     * @param weeks  amount of weeks in this duration\n+     * @param days  amount of days in this duration\n+     * @param hours  amount of hours in this duration\n+     * @param minutes  amount of minutes in this duration\n+     * @param seconds  amount of seconds in this duration\n+     * @param millis  amount of milliseconds in this duration\n      */\n     public MutableDuration(int years, int months, int weeks, int days,\n                     int hours, int minutes, int seconds, int millis) {\n \n     /**\n      * Creates a duration from the given interval endpoints using AllType.\n-     * AllType using ISOChronology in UTC is an imprecise duration type\n-     * unless the year, month and week fields are zero.\n+     * This constructor creates a precise duration.\n      *\n      * @param startInstant  interval start, in milliseconds\n      * @param endInstant  interval end, in milliseconds\n \n     /**\n      * Creates a duration from the given interval endpoints.\n+     * This constructor creates a precise duration.\n      *\n      * @param startInstant  interval start, in milliseconds\n      * @param endInstant  interval end, in milliseconds\n \n     /**\n      * Creates a duration from the given interval endpoints using AllType.\n-     * AllType using ISOChronology in UTC is an imprecise duration type\n-     * unless the year, month and week fields are zero.\n+     * This constructor creates a precise duration.\n      *\n      * @param startInstant  interval start, null means now\n      * @param endInstant  interval end, null means now\n \n     /**\n      * Creates a duration from the given interval endpoints.\n+     * This constructor creates a precise duration.\n      *\n      * @param startInstant  interval start, null means now\n      * @param endInstant  interval end, null means now\n      * @param type  which set of fields this duration supports, null means AllType\n      */\n-    public MutableDuration(\n-            ReadableInstant startInstant, ReadableInstant endInstant, DurationType type) {\n+    public MutableDuration(ReadableInstant startInstant, ReadableInstant endInstant, DurationType type) {\n         super(startInstant, endInstant, type);\n     }\n \n     /**\n      * Creates a duration from the given millisecond duration using MillisType.\n-     * MillisType using ISOChronology in UTC is a precise duration type.\n+     * This constructor creates a precise duration because\n+     * MillisType in ISOChronology UTC is precise.\n      *\n      * @param duration  the duration, in milliseconds\n      */\n \n     /**\n      * Creates a duration from the given millisecond duration.\n+     * This constructor creates a precise duration.\n      *\n      * @param duration  the duration, in milliseconds\n      * @param type  which set of fields this duration supports", "timestamp": 1090621192, "metainfo": ""}