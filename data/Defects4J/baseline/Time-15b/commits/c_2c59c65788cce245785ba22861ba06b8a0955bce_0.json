{"sha": "2c59c65788cce245785ba22861ba06b8a0955bce", "log": "Remove unused code   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/base/BasePartial.java\n+++ b/JodaTime/src/java/org/joda/time/base/BasePartial.java\n     }\n \n     /**\n-     * Constructs a AbstractPartial with specified time field values and chronology.\n-     * <p>\n-     * The constructor uses the time zone of the chronology specified.\n-     * Once the constructor is complete, all further calculations are performed\n-     * without reference to a timezone (by switching to UTC).\n-     *\n-     * @param values  the new set of values\n-     * @param chronology  the chronology, null means ISOChronology in the default zone\n-     */\n-    protected BasePartial(int[] values, Chronology chronology) {\n-        super();\n-        chronology = DateTimeUtils.getChronology(chronology);\n-        iChronology = chronology.withUTC();\n-        chronology.validate(this, values);\n-        iValues = (int[]) values.clone();\n-    }\n-\n-    /**\n      * Private constructor to be used by subclasses only which performs no validation.\n      * <p>\n      * Data is assigned (not cloned) to the new instance.", "timestamp": 1093303412, "metainfo": ""}