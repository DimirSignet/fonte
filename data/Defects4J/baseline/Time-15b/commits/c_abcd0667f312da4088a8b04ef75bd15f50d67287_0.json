{"sha": "abcd0667f312da4088a8b04ef75bd15f50d67287", "log": "Add ability to compare comparators   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateTimeComparator.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTimeComparator.java\n             DateTimeComparator.getInstance(ISO.dayOfYear(), ISO.hourOfDay());\n             fail();\n         } catch (IllegalArgumentException ex) {}\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testEqualsHashCode() {\n+        DateTimeComparator c1 = DateTimeComparator.getInstance();\n+        assertEquals(true, c1.equals(c1));\n+        assertEquals(false, c1.equals(null));\n+        assertEquals(true, c1.hashCode() == c1.hashCode());\n+        \n+        DateTimeComparator c2 = DateTimeComparator.getTimeOnlyInstance(ISOChronology.getInstance());\n+        assertEquals(true, c2.equals(c2));\n+        assertEquals(false, c2.equals(c1));\n+        assertEquals(false, c1.equals(c2));\n+        assertEquals(false, c2.equals(null));\n+        assertEquals(false, c1.hashCode() == c2.hashCode());\n+        \n+        DateTimeComparator c3 = DateTimeComparator.getTimeOnlyInstance(ISOChronology.getInstance());\n+        assertEquals(true, c3.equals(c3));\n+        assertEquals(false, c3.equals(c1));\n+        assertEquals(true, c3.equals(c2));\n+        assertEquals(false, c1.equals(c3));\n+        assertEquals(true, c2.equals(c3));\n+        assertEquals(false, c1.hashCode() == c3.hashCode());\n+        assertEquals(true, c2.hashCode() == c3.hashCode());\n     }\n     \n     //-----------------------------------------------------------------------", "timestamp": 1090309144, "metainfo": ""}