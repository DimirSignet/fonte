{"sha": "362a57a143736bf275c4b48cdf0284d0b569a54b", "log": "Support converting strings to durations.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n+++ b/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n  * The default duration converters are:\n  * <ul>\n  * <li>ReadableDuration\n+ * <li>String\n  * <li>Long\n  * </ul>\n  *\n \n         iDurationConverters = new ConverterSet(new Converter[] {\n             ReadableDurationConverter.INSTANCE,\n+            StringConverter.INSTANCE,\n             LongConverter.INSTANCE,\n         });\n     }\n--- a/JodaTime/src/java/org/joda/time/convert/StringConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/StringConverter.java\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTimeZone;\n+import org.joda.time.ReadWritableDuration;\n import org.joda.time.chrono.iso.ISOChronology;\n import org.joda.time.format.DateTimeParser;\n+import org.joda.time.format.DurationParser;\n import org.joda.time.format.ISODateTimeFormat;\n+import org.joda.time.format.ISODurationFormat;\n \n /**\n  * StringConverter converts a String to milliseconds in the ISOChronology.\n  *\n  * @author Stephen Colebourne\n+ * @author Brian S O'Neill\n  * @since 1.0\n  */\n-class StringConverter extends AbstractConverter implements InstantConverter {\n+class StringConverter extends AbstractConverter implements InstantConverter, DurationConverter {\n     \n     /**\n      * Singleton instance.\n     \n     //-----------------------------------------------------------------------\n     /**\n+     * Returns false always.\n+     */\n+    public boolean isPrecise(Object object) {\n+        return false;\n+    }\n+\n+    /**\n+     * @throws UnsupportedOperationException always\n+     */\n+    public long getDurationMillis(Object object) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Extracts duration values from an object of this converter's type, and\n+     * sets them into the given ReadWritableDuration.\n+     *\n+     * @param duration duration to get modified\n+     * @param object  the object to convert, must not be null\n+     * @return the millisecond duration\n+     * @throws ClassCastException if the object is invalid\n+     */\n+    public void setInto(ReadWritableDuration duration, Object object) {\n+        String str = (String) object;\n+        DurationParser parser = ISODurationFormat.getInstance().standard();\n+        int pos = parser.parseInto(duration, str, 0);\n+        if (pos < str.length()) {\n+            if (pos < 0) {\n+                // Parse again to get a better exception thrown.\n+                parser.parseMutableDuration(duration.getDurationType(), str);\n+            }\n+            throw new IllegalArgumentException(\"Invalid format: \\\"\" + str + '\"');\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Returns String.class.\n      * \n      * @return String.class", "timestamp": 1071978616, "metainfo": ""}