{"sha": "5f641456be4deab3b30f29ee250fc1fc0f0028f1", "log": "Explicitly set default java.util.TimeZone to Europe/London so that tests pass for those who don't live in London.   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java\n             (y2003days + 31L + 28L + 31L + 30L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY\n              - 2*DateTimeConstants.MILLIS_PER_HOUR;\n     \n-    private DateTimeZone zone = null;\n-    private Locale locale = null;\n+    private DateTimeZone originalDateTimeZone = null;\n+    private TimeZone originalTimeZone = null;\n+    private Locale originalLocale = null;\n \n     public static void main(String[] args) {\n         junit.textui.TestRunner.run(suite());\n \n     protected void setUp() throws Exception {\n         DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW_UTC);\n-        zone = DateTimeZone.getDefault();\n-        locale = Locale.getDefault();\n+        originalDateTimeZone = DateTimeZone.getDefault();\n+        originalTimeZone = TimeZone.getDefault();\n+        originalLocale = Locale.getDefault();\n         DateTimeZone.setDefault(LONDON);\n+        TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/London\"));\n         Locale.setDefault(Locale.UK);\n     }\n \n     protected void tearDown() throws Exception {\n         DateTimeUtils.setCurrentMillisSystem();\n-        DateTimeZone.setDefault(zone);\n-        Locale.setDefault(locale);\n-        zone = null;\n+        DateTimeZone.setDefault(originalDateTimeZone);\n+        TimeZone.setDefault(originalTimeZone);\n+        Locale.setDefault(originalLocale);\n+        originalDateTimeZone = null;\n+        originalTimeZone = null;\n+        originalLocale = null;\n     }\n \n     //-----------------------------------------------------------------------\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n             + 14L * DateTimeConstants.MILLIS_PER_HOUR\n             + 28L * DateTimeConstants.MILLIS_PER_MINUTE;\n     \n-    private DateTimeZone zone = null;\n-    private Locale locale = null;\n+    private DateTimeZone originalDateTimeZone = null;\n+    private TimeZone originalTimeZone = null;\n+    private Locale originalLocale = null;\n \n     public static void main(String[] args) {\n         junit.textui.TestRunner.run(suite());\n \n     protected void setUp() throws Exception {\n         DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);\n-        zone = DateTimeZone.getDefault();\n-        locale = Locale.getDefault();\n+        originalDateTimeZone = DateTimeZone.getDefault();\n+        originalTimeZone = TimeZone.getDefault();\n+        originalLocale = Locale.getDefault();\n         DateTimeZone.setDefault(LONDON);\n+        TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/London\"));\n         Locale.setDefault(Locale.UK);\n     }\n \n     protected void tearDown() throws Exception {\n         DateTimeUtils.setCurrentMillisSystem();\n-        DateTimeZone.setDefault(zone);\n-        Locale.setDefault(locale);\n-        zone = null;\n+        DateTimeZone.setDefault(originalDateTimeZone);\n+        TimeZone.setDefault(originalTimeZone);\n+        Locale.setDefault(originalLocale);\n+        originalDateTimeZone = null;\n+        originalTimeZone = null;\n+        originalLocale = null;\n     }\n \n     //-----------------------------------------------------------------------\n--- a/JodaTime/src/test/org/joda/time/TestInstant_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestInstant_Basics.java\n             + 14L * DateTimeConstants.MILLIS_PER_HOUR\n             + 28L * DateTimeConstants.MILLIS_PER_MINUTE;\n         \n-    private DateTimeZone zone = null;\n-    private Locale locale = null;\n+    private DateTimeZone originalDateTimeZone = null;\n+    private TimeZone originalTimeZone = null;\n+    private Locale originalLocale = null;\n \n     public static void main(String[] args) {\n         junit.textui.TestRunner.run(suite());\n \n     protected void setUp() throws Exception {\n         DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);\n-        zone = DateTimeZone.getDefault();\n-        locale = Locale.getDefault();\n+        originalDateTimeZone = DateTimeZone.getDefault();\n+        originalTimeZone = TimeZone.getDefault();\n+        originalLocale = Locale.getDefault();\n         DateTimeZone.setDefault(LONDON);\n+        TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/London\"));\n         Locale.setDefault(Locale.UK);\n     }\n \n     protected void tearDown() throws Exception {\n         DateTimeUtils.setCurrentMillisSystem();\n-        DateTimeZone.setDefault(zone);\n-        Locale.setDefault(locale);\n-        zone = null;\n+        DateTimeZone.setDefault(originalDateTimeZone);\n+        TimeZone.setDefault(originalTimeZone);\n+        Locale.setDefault(originalLocale);\n+        originalDateTimeZone = null;\n+        originalTimeZone = null;\n+        originalLocale = null;\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1089867092, "metainfo": ""}