{"sha": "cc50f0867f74af1718a2682f442895d1e5cc96c7", "log": "Test DateTimeConstants   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeConstants.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeConstants.java\n  * @author Brian S O'Neill\n  * @since 1.0\n  */\n-public final class DateTimeConstants {\n+public class DateTimeConstants {\n \n     // These are ints not enumerations as they represent genuine int values\n     /** Constant (1) representing January, the first month (ISO) */\n--- a/JodaTime/src/test/org/joda/time/TestAll.java\n+++ b/JodaTime/src/test/org/joda/time/TestAll.java\n     public static Test suite() {\n         TestSuite suite = new TestSuite();\n         suite.addTest(TestDateTimeComparator.suite());\n+        suite.addTest(TestDateTimeConstants.suite());\n         suite.addTest(TestParseISO.suite());\n         return suite;\n     }\n--- /dev/null\n+++ b/JodaTime/src/test/org/joda/time/TestDateTimeConstants.java\n+/*\n+ * Joda Software License, Version 1.0\n+ *\n+ *\n+ * Copyright (c) 2001-2004 Stephen Colebourne.  \n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer. \n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:  \n+ *       \"This product includes software developed by the\n+ *        Joda project (http://www.joda.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The name \"Joda\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact licence@joda.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Joda\",\n+ *    nor may \"Joda\" appear in their name, without prior written\n+ *    permission of the Joda project.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Joda project and was originally \n+ * created by Stephen Colebourne <scolebourne@joda.org>. For more\n+ * information on the Joda project, please see <http://www.joda.org/>.\n+ */\n+package org.joda.time;\n+\n+import junit.framework.TestSuite;\n+\n+import org.joda.test.time.BulkTest;\n+\n+/**\n+ * Test case.\n+ *\n+ * @author Stephen Colebourne\n+ */\n+public class TestDateTimeConstants extends BulkTest {\n+\n+    /**\n+     * The main method for this test program.\n+     * @param args command line arguments.\n+     */\n+    public static void main(String[] args) {\n+        junit.textui.TestRunner.run(suite());\n+    }\n+\n+    /**\n+     * TestSuite is a junit required method.\n+     */\n+    public static TestSuite suite() {\n+        return BulkTest.makeSuite(TestDateTimeConstants.class);\n+    }\n+\n+    /**\n+     * TestDateTimeComparator constructor.\n+     * @param name\n+     */\n+    public TestDateTimeConstants(String name) {\n+        super(name);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testConstructor() {\n+        DateTimeConstants c = new DateTimeConstants() {\n+        };\n+        c.toString();\n+    }\n+\n+    public void testHalfdaysOfDay() {\n+        assertEquals(0, DateTimeConstants.AM);\n+        assertEquals(1, DateTimeConstants.PM);\n+    }\n+\n+    public void testDaysOfWeek() {\n+        assertEquals(1, DateTimeConstants.MONDAY);\n+        assertEquals(2, DateTimeConstants.TUESDAY);\n+        assertEquals(3, DateTimeConstants.WEDNESDAY);\n+        assertEquals(4, DateTimeConstants.THURSDAY);\n+        assertEquals(5, DateTimeConstants.FRIDAY);\n+        assertEquals(6, DateTimeConstants.SATURDAY);\n+        assertEquals(7, DateTimeConstants.SUNDAY);\n+    }\n+\n+    public void testMonthsOfYear() {\n+        assertEquals(1, DateTimeConstants.JANUARY);\n+        assertEquals(2, DateTimeConstants.FEBRUARY);\n+        assertEquals(3, DateTimeConstants.MARCH);\n+        assertEquals(4, DateTimeConstants.APRIL);\n+        assertEquals(5, DateTimeConstants.MAY);\n+        assertEquals(6, DateTimeConstants.JUNE);\n+        assertEquals(7, DateTimeConstants.JULY);\n+        assertEquals(8, DateTimeConstants.AUGUST);\n+        assertEquals(9, DateTimeConstants.SEPTEMBER);\n+        assertEquals(10, DateTimeConstants.OCTOBER);\n+        assertEquals(11, DateTimeConstants.NOVEMBER);\n+        assertEquals(12, DateTimeConstants.DECEMBER);\n+    }\n+\n+    public void testEras() {\n+        assertEquals(0, DateTimeConstants.BC);\n+        assertEquals(0, DateTimeConstants.BCE);\n+        assertEquals(1, DateTimeConstants.AD);\n+        assertEquals(1, DateTimeConstants.CE);\n+    }\n+\n+    public void testMaths() {\n+        assertEquals(1000, DateTimeConstants.MILLIS_PER_SECOND);\n+        assertEquals(60 * 1000, DateTimeConstants.MILLIS_PER_MINUTE);\n+        assertEquals(60 * 60 * 1000, DateTimeConstants.MILLIS_PER_HOUR);\n+        assertEquals(24 * 60 * 60 * 1000, DateTimeConstants.MILLIS_PER_DAY);\n+        assertEquals(7 * 24 * 60 * 60 * 1000, DateTimeConstants.MILLIS_PER_WEEK);\n+        \n+        assertEquals(60, DateTimeConstants.SECONDS_PER_MINUTE);\n+        assertEquals(60 * 60, DateTimeConstants.SECONDS_PER_HOUR);\n+        assertEquals(24 * 60 * 60, DateTimeConstants.SECONDS_PER_DAY);\n+        assertEquals(7 * 24 * 60 * 60, DateTimeConstants.SECONDS_PER_WEEK);\n+        \n+        assertEquals(60, DateTimeConstants.MINUTES_PER_HOUR);\n+        assertEquals(24 * 60, DateTimeConstants.MINUTES_PER_DAY);\n+        assertEquals(7 * 24 * 60, DateTimeConstants.MINUTES_PER_WEEK);\n+        \n+        assertEquals(24, DateTimeConstants.HOURS_PER_DAY);\n+        assertEquals(7 * 24, DateTimeConstants.HOURS_PER_WEEK);\n+        \n+        assertEquals(7, DateTimeConstants.DAYS_PER_WEEK);\n+    }\n+\n+}", "timestamp": 1088377318, "metainfo": ""}