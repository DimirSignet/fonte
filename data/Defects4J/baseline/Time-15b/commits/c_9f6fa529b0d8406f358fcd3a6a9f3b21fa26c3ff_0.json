{"sha": "9f6fa529b0d8406f358fcd3a6a9f3b21fa26c3ff", "log": "Remove incorrect comments   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/TimeOfDay.java\n+++ b/JodaTime/src/java/org/joda/time/TimeOfDay.java\n      * The string format must begin with a 'T' to be recognised, such as 'T10:20'.\n      * <p>\n      * The chronology used will be derived from the object, defaulting to ISO.\n-     * <p>\n-     * Note that as from version 1.2, the default converters go to extra\n-     * effort to maintain the field values of the input Date or Calendar.\n-     * This means that the differences in timezone data between Joda-Time\n-     * and each JDK version are now handled correctly. If you just want to\n-     * use the milliseconds value without conversion you must use\n-     * {@link #TimeOfDay(long, Chronology)}.\n      *\n      * @param instant  the datetime object, null means now\n      * @throws IllegalArgumentException if the instant is invalid\n--- a/JodaTime/src/java/org/joda/time/base/BasePartial.java\n+++ b/JodaTime/src/java/org/joda/time/base/BasePartial.java\n      * The constructor uses the time zone of the chronology specified.\n      * Once the constructor is complete, all further calculations are performed\n      * without reference to a timezone (by switching to UTC).\n-     * <p>\n-     * Note that as from version 1.2, the default converters go to extra\n-     * effort to maintain the field values of the input Date or Calendar.\n-     * This means that the differences in timezone data between Joda-Time\n-     * and each JDK version are now handled correctly.\n      *\n      * @param instant  the datetime object\n      * @param chronology  the chronology, null means use converter", "timestamp": 1135120874, "metainfo": ""}