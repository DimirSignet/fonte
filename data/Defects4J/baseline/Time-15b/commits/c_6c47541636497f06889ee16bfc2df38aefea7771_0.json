{"sha": "6c47541636497f06889ee16bfc2df38aefea7771", "log": "Fix bugs by using instant chronology correctly in add methods   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/AbstractDuration.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractDuration.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Adds this duration to the given instant, returning a new value.\n+     * Adds this duration to the given instant using the chronology of the duration\n+     * which typically ignores time zones.\n      * <p>\n      * To add just once, pass in a scalar of one. To subtract once, pass\n      * in a scalar of minus one.\n     }\n \n     /**\n-     * Adds this duration to the given instant, returning a new value.\n+     * Adds this duration to the given instant using a specific chronology.\n      * <p>\n      * To add just once, pass in a scalar of one. To subtract once, pass\n      * in a scalar of minus one.\n     }\n \n     /**\n-     * Adds this duration to the given instant, returning a new Instant.\n+     * Adds this duration to the given instant using the chronology of the specified\n+     * instant (if present), returning a new Instant.\n      * <p>\n      * To add just once, pass in a scalar of one. To subtract once, pass\n      * in a scalar of minus one.\n         if (instant == null) {\n             return new Instant(addTo(DateTimeUtils.currentTimeMillis(), scalar));\n         }\n-        return new Instant(addTo(instant.getMillis(), scalar));\n-    }\n-\n-    /**\n-     * Adds this duration into the given mutable instant.\n+        return new Instant(addTo(instant.getMillis(), scalar, instant.getChronology()));\n+    }\n+\n+    /**\n+     * Adds this duration into the given mutable instant using the chronology of\n+     * the specified mutable instant (if present).\n      * <p>\n      * To add just once, pass in a scalar of one. To subtract once, pass\n      * in a scalar of minus one.\n         if (instant == null) {\n             throw new IllegalArgumentException(\"The instant must not be null\");\n         }\n-        instant.setMillis(addTo(instant.getMillis(), scalar));\n+        instant.setMillis(addTo(instant.getMillis(), scalar, instant.getChronology()));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1090966535, "metainfo": ""}