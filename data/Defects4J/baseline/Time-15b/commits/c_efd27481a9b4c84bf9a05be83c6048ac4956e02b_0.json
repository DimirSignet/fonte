{"sha": "efd27481a9b4c84bf9a05be83c6048ac4956e02b", "log": "Bux fix handing offset based default time zones   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java\n import java.util.Map;\n import java.util.Set;\n \n+import org.joda.time.chrono.ISOChronology;\n import org.joda.time.field.FieldUtils;\n import org.joda.time.format.DateTimeFormatter;\n import org.joda.time.format.DateTimeFormatterBuilder;\n             return zone;\n         }\n         if (id.startsWith(\"+\") || id.startsWith(\"-\")) {\n-            int offset = -(int) offsetFormatter().parseMillis(id);\n+            // Pass in explicit chronology since default time zone may not yet be initialized.\n+            int offset = -(int) offsetFormatter().parseMillis(id, ISOChronology.getInstance(UTC));\n             if (offset == 0L) {\n                 return DateTimeZone.UTC;\n             } else {\n             convId = zone.getDisplayName();\n             if (convId.startsWith(\"GMT+\") || convId.startsWith(\"GMT-\")) {\n                 convId = convId.substring(3);\n-                int offset = -(int) offsetFormatter().parseMillis(convId);\n+                // Pass in explicit chronology since default time zone may not yet be initialized.\n+                int offset = -(int) offsetFormatter().parseMillis\n+                    (convId, ISOChronology.getInstance(UTC));\n                 if (offset == 0L) {\n                     return DateTimeZone.UTC;\n                 } else {", "timestamp": 1101919056, "metainfo": ""}