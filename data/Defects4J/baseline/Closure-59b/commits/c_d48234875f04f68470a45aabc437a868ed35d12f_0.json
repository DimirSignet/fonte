{"sha": "d48234875f04f68470a45aabc437a868ed35d12f", "log": "Fix property disambiguation for enum of objects.  R=johnlenz DELTA=36  (26 added, 0 deleted, 10 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2637   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/EnumElementType.java\n+++ b/src/com/google/javascript/rhino/jstype/EnumElementType.java\n \n   @Override\n   public ObjectType getImplicitPrototype() {\n-    return null;\n+    return primitiveObjectType == null ? null : primitiveObjectType;\n   }\n \n   @Override\n--- a/test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java\n+++ b/test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java\n \n   public void testEnum() {\n     String js = \"\"\n-      + \"/** @enum {string} */ var En = {\\n\"\n-      + \"  A: 'first',\\n\"\n-      + \"  B: 'second'\\n\"\n-      + \"};\\n\"\n-      + \"var EA = En.A;\\n\"\n-      + \"var EB = En.B;\\n\"\n-      + \"/** @constructor */ function Foo(){};\\n\"\n-      + \"Foo.prototype.A = 0;\\n\"\n-      + \"Foo.prototype.B = 0;\\n\";\n+        + \"/** @enum {string} */ var En = {\\n\"\n+        + \"  A: 'first',\\n\"\n+        + \"  B: 'second'\\n\"\n+        + \"};\\n\"\n+        + \"var EA = En.A;\\n\"\n+        + \"var EB = En.B;\\n\"\n+        + \"/** @constructor */ function Foo(){};\\n\"\n+        + \"Foo.prototype.A = 0;\\n\"\n+        + \"Foo.prototype.B = 0;\\n\";\n     String output = \"\"\n         + \"var En={A:'first',B:'second'};\"\n         + \"var EA=En.A;\"\n         + \"Foo.prototype.Foo_prototype$B=0\";\n     testSets(false, js, output, \"{A=[[Foo.prototype]], B=[[Foo.prototype]]}\");\n     testSets(true, js, ttOutput, \"{A=[[Foo.prototype]], B=[[Foo.prototype]]}\");\n+  }\n+\n+  public void testEnumOfObjects() {\n+    String js = \"\"\n+        + \"/** @constructor */ function Formatter() {}\"\n+        + \"Formatter.prototype.format = function() {};\"\n+        + \"/** @constructor */ function Unrelated() {}\"\n+        + \"Unrelated.prototype.format = function() {};\"\n+        + \"/** @enum {!Formatter} */ var Enum = {\\n\"\n+        + \"  A: new Formatter()\\n\"\n+        + \"};\\n\"\n+        + \"Enum.A.format();\\n\";\n+    String output = \"\"\n+        + \"/** @constructor */ function Formatter() {}\"\n+        + \"Formatter.prototype.Formatter_prototype$format = function() {};\"\n+        + \"/** @constructor */ function Unrelated() {}\"\n+        + \"Unrelated.prototype.Unrelated_prototype$format = function() {};\"\n+        + \"/** @enum {!Formatter} */ var Enum = {\\n\"\n+        + \"  A: new Formatter()\\n\"\n+        + \"};\\n\"\n+        + \"Enum.A.Formatter_prototype$format();\\n\";\n+    testSets(false, js, output,\n+        \"{format=[[Formatter.prototype], [Unrelated.prototype]]}\");\n+\n+    // TODO(nicksantos): Fix the type tightener to handle this case.\n+    // It currently doesn't work, because getSubTypes is broken for enums.\n   }\n \n   public void testUntypedExterns() {", "timestamp": 1311019749, "metainfo": ""}