{"sha": "13ed38070494863b4bbd4f8328fa9e7e575de463", "log": "Really handle extern stubs declarations, so common externs can have \"nosideeffects\".  R=avd DELTA=70  (67 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=216257   ", "commit": "\n--- a/src/com/google/javascript/jscomp/SimpleDefinitionFinder.java\n+++ b/src/com/google/javascript/jscomp/SimpleDefinitionFinder.java\n import com.google.javascript.jscomp.DefinitionsRemover.ExternalNameOnlyDefinition;\n import com.google.javascript.jscomp.DefinitionsRemover.UnknownDefinition;\n import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;\n+import com.google.javascript.rhino.JSDocInfo;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n \n             if (qualifiedName != null) {\n               for (Definition prevDef : nameDefinitionMultimap.get(name)) {\n                 if (prevDef instanceof ExternalNameOnlyDefinition\n-                    && node.getJSDocInfo() == null) {\n+                    && !jsdocContainsDeclarations(node)) {\n                   String prevName = prevDef.getLValue().getQualifiedName();\n                   if (qualifiedName.equals(prevName)) {\n                     // Drop this stub, there is a real definition.\n           //    externs definition if no other definition is provided.\n \n           boolean dropStub = false;\n-          if (node.getJSDocInfo() == null) {\n+          if (!jsdocContainsDeclarations(node)) {\n             String qualifiedName = node.getQualifiedName();\n             if (qualifiedName != null) {\n               for (Definition prevDef : nameDefinitionMultimap.get(name)) {\n         }\n       }\n     }\n+\n+    /**\n+     * @return Whether the node has a JSDoc that actually declares something.\n+     */\n+    private boolean jsdocContainsDeclarations(Node node) {\n+      JSDocInfo info = node.getJSDocInfo();\n+      return (info != null && info.containsDeclaration());\n+    }\n   }\n \n   private class UseSiteGatheringCallback extends AbstractPostOrderCallback {\n--- a/src/com/google/javascript/rhino/JSDocInfo.java\n+++ b/src/com/google/javascript/rhino/JSDocInfo.java\n     return getFlag(MASK_NOCOMPILE);\n   }\n \n+  /**\n+   * @return Whether there is declaration present on this {@link JSDocInfo}.\n+   */\n+  public boolean containsDeclaration() {\n+    return (hasType()\n+        || hasReturnType()\n+        || hasEnumParameterType()\n+        || hasTypedefType()\n+        || hasThisType()\n+        || getParameterCount() > 0\n+        || getFlag(MASK_CONSTANT\n+            | MASK_CONSTRUCTOR\n+            | MASK_DEFINE\n+            | MASK_OVERRIDE\n+            | MASK_NOALIAS\n+            | MASK_DEPRECATED\n+            | MASK_INTERFACE\n+            | MASK_NOSHADOW\n+            | MASK_IMPLICITCAST\n+            | MASK_NOSIDEEFFECTS));\n+  }\n+\n   private boolean getFlag(int mask) {\n     return (bitset & mask) != 0x00;\n   }\n--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java\n+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java\n       \" */\\n\" +\n       \"externObj3.prototype.propWithStubBefore = function(s) {};\" +\n \n+      // useless jsdoc\n+      \"/**\\n\" +\n+      \" * @see {foo}\\n\" +\n+      \" */\\n\" +\n+      \"externObj3.prototype.propWithStubBeforeWithJSDoc;\" +\n+\n+      \"/**\\n\" +\n+      \" * @param {string} s id.\\n\" +\n+      \" * @return {string}\\n\" +\n+      \" * @nosideeffects\\n\" +\n+      \" */\\n\" +\n+      \"externObj3.prototype.propWithStubBeforeWithJSDoc = function(s) {};\" +\n+\n       // An externs definition with a stub after.\n \n       \"/**@constructor*/function externObj4(){}\" +\n       \" */\\n\" +\n       \"externObj4.prototype.propWithStubAfter = function(s) {};\" +\n \n-      \"externObj4.prototype.propWithStubAfter;\";\n+      \"externObj4.prototype.propWithStubAfter;\" +\n+\n+      \"/**\\n\" +\n+      \" * @param {string} s id.\\n\" +\n+      \" * @return {string}\\n\" +\n+      \" * @nosideeffects\\n\" +\n+      \" */\\n\" +\n+      \"externObj4.prototype.propWithStubAfterWithJSDoc = function(s) {};\" +\n+\n+      // useless jsdoc\n+      \"/**\\n\" +\n+      \" * @see {foo}\\n\" +\n+      \" */\\n\" +\n+      \"externObj4.prototype.propWithStubAfterWithJSDoc;\";\n \n   public PureFunctionIdentifierTest() {\n     super(kExterns);\n         ImmutableList.<String>of(\"o.propWithStubBefore\"));\n   }\n \n+  public void testAnnotationInExternStubs1b() throws Exception {\n+    checkMarkedCalls(\"o.propWithStubBeforeWithJSDoc('a');\",\n+        ImmutableList.<String>of(\"o.propWithStubBeforeWithJSDoc\"));\n+  }\n+\n   public void testAnnotationInExternStubs2() throws Exception {\n+    checkMarkedCalls(\"o.propWithStubAfter('a');\",\n+        ImmutableList.<String>of(\"o.propWithStubAfter\"));\n+  }\n+\n+  public void testAnnotationInExternStubs2b() throws Exception {\n     checkMarkedCalls(\"o.propWithStubAfter('a');\",\n         ImmutableList.<String>of(\"o.propWithStubAfter\"));\n   }", "timestamp": 1284146124, "metainfo": ""}