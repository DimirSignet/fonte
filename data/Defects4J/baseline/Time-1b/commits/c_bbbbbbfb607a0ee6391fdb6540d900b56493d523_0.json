{"sha": "bbbbbbfb607a0ee6391fdb6540d900b56493d523", "log": "Standard DateTimeFieldType hashCode and equals for stability across serialization  ", "commit": "\n--- a/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java\n+++ b/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java\n  * If required, you can create your own field, for example a quarterOfYear.\n  * You must create a subclass of <code>DateTimeFieldType</code> that defines the field type.\n  * This class returns the actual calculation engine from {@link #getField(Chronology)}.\n+ * The subclass should implement equals and hashCode.\n  *\n  * @author Stephen Colebourne\n  * @author Brian S O'Neill\n         /** @inheritdoc */\n         public DurationFieldType getRangeDurationType() {\n             return iRangeType;\n+        }\n+\n+        /** @inheritdoc */\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if (obj instanceof StandardDateTimeFieldType) {\n+                return iOrdinal == ((StandardDateTimeFieldType) obj).iOrdinal;\n+            }\n+            return false;\n+        }\n+\n+        /** @inheritdoc */\n+        @Override\n+        public int hashCode() {\n+            return iOrdinal;\n         }\n \n         /** @inheritdoc */", "timestamp": 1296781636, "metainfo": ""}