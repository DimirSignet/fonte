{"sha": "c52cb86eb06d1b40382f9048aa49a44d86da2fad", "log": "Add NullConverter that returns current time   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n+++ b/JodaTime/src/java/org/joda/time/convert/ConverterManager.java\n             CalendarConverter.INSTANCE,\n             DateConverter.INSTANCE,\n             LongConverter.INSTANCE,\n+            NullConverter.INSTANCE,\n         });\n \n         iDurationConverters = new ConverterSet(new Converter[] {\n--- /dev/null\n+++ b/JodaTime/src/java/org/joda/time/convert/NullConverter.java\n+/*\n+ * Joda Software License, Version 1.0\n+ *\n+ *\n+ * Copyright (c) 2001-2004 Stephen Colebourne.  \n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer. \n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:  \n+ *       \"This product includes software developed by the\n+ *        Joda project (http://www.joda.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The name \"Joda\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact licence@joda.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Joda\",\n+ *    nor may \"Joda\" appear in their name, without prior written\n+ *    permission of the Joda project.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Joda project and was originally \n+ * created by Stephen Colebourne <scolebourne@joda.org>. For more\n+ * information on the Joda project, please see <http://www.joda.org/>.\n+ */\n+package org.joda.time.convert;\n+\n+import org.joda.time.DateTimeUtils;\n+\n+/**\n+ * NullConverter converts null to milliseconds (now) in the ISOChronology.\n+ *\n+ * @author Stephen Colebourne\n+ * @author Brian S O'Neill\n+ * @since 1.0\n+ */\n+class NullConverter extends AbstractConverter implements InstantConverter {\n+    \n+    /**\n+     * Singleton instance.\n+     */\n+    static final NullConverter INSTANCE = new NullConverter();\n+    \n+    /**\n+     * Restricted constructor.\n+     */\n+    protected NullConverter() {\n+        super();\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the millisecond instant, which is now.\n+     * \n+     * @param object  the object to convert\n+     * @return the millisecond instant of now\n+     */\n+    public long getInstantMillis(Object object) {\n+        return DateTimeUtils.currentTimeMillis();\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Returns null.\n+     * \n+     * @return null\n+     */\n+    public Class getSupportedType() {\n+        return null;\n+    }\n+    \n+}\n--- a/JodaTime/src/java/org/joda/time/partial/TimeOfDay.java\n+++ b/JodaTime/src/java/org/joda/time/partial/TimeOfDay.java\n      * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n      * include ReadableInstant, String, Calendar and Date.\n      *\n-     * @param instant  the datetime object, must not be null\n+     * @param instant  the datetime object, null means now\n      * @throws IllegalArgumentException if the date is null\n      */\n     public TimeOfDay(Object instant) {\n      * Once the constructor is complete, all further calculations are performed\n      * without reference to a timezone (by switching to UTC).\n      *\n-     * @param instant  the datetime object, must not be null\n+     * @param instant  the datetime object, null means now\n      * @param chronology  the chronology, null means ISOChronology\n      * @throws IllegalArgumentException if the date is null\n      */", "timestamp": 1088262082, "metainfo": ""}