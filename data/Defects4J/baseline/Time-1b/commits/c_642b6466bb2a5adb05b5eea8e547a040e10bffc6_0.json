{"sha": "642b6466bb2a5adb05b5eea8e547a040e10bffc6", "log": "Javadoc   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/MutableDateTime.java\n+++ b/JodaTime/src/java/org/joda/time/MutableDateTime.java\n          * Adds a value to the millis value.\n          * \n          * @param value  the value to add\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#add(long,int)\n          */\n         public MutableDateTime add(int value) {\n          * Adds a value to the millis value.\n          * \n          * @param value  the value to add\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#add(long,long)\n          */\n         public MutableDateTime add(long value) {\n          * Adds a value, possibly wrapped, to the millis value.\n          * \n          * @param value  the value to add\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#addWrapField\n          */\n         public MutableDateTime addWrapField(int value) {\n          * Sets a value.\n          * \n          * @param value  the value to set.\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#set(long,int)\n          */\n         public MutableDateTime set(int value) {\n          * \n          * @param text  the text value to set\n          * @param locale  optional locale to use for selecting a text symbol\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @throws IllegalArgumentException if the text value isn't valid\n          * @see DateTimeField#set(long,java.lang.String,java.util.Locale)\n          */\n          * Sets a text value.\n          * \n          * @param text  the text value to set\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @throws IllegalArgumentException if the text value isn't valid\n          * @see DateTimeField#set(long,java.lang.String)\n          */\n         /**\n          * Round to the lowest whole unit of this field.\n          *\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#roundFloor\n          */\n         public MutableDateTime roundFloor() {\n         /**\n          * Round to the highest whole unit of this field.\n          *\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#roundCeiling\n          */\n         public MutableDateTime roundCeiling() {\n          * Round to the nearest whole unit of this field, favoring the floor if\n          * halfway.\n          *\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#roundHalfFloor\n          */\n         public MutableDateTime roundHalfFloor() {\n          * Round to the nearest whole unit of this field, favoring the ceiling if\n          * halfway.\n          *\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#roundHalfCeiling\n          */\n         public MutableDateTime roundHalfCeiling() {\n          * Round to the nearest whole unit of this field. If halfway, the ceiling\n          * is favored over the floor only if it makes this field's value even.\n          *\n-         * @return mutable datetime being used\n+         * @return the mutable datetime being used, so calls can be chained\n          * @see DateTimeField#roundHalfEven\n          */\n         public MutableDateTime roundHalfEven() {", "timestamp": 1093303335, "metainfo": ""}