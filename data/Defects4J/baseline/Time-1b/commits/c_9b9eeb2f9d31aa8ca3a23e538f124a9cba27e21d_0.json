{"sha": "9b9eeb2f9d31aa8ca3a23e538f124a9cba27e21d", "log": "Optimise deepCopy()  ", "commit": "\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new DateTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java\n         }\n         DateTime dtx = (DateTime) x;\n         DateTime dty = (DateTime) y;\n-\n         return dtx.equals(dty);\n     }\n \n         if (timestamp == null || timezone == null) {\n             return null;\n         }\n-\n         return new DateTime(timestamp, DateTimeZone.forID(timezone.toString()));\n     }\n \n             Hibernate.STRING.nullSafeSet(preparedStatement, null, index + 1);\n         } else {\n             DateTime dt = (DateTime) value;\n-\n             Hibernate.TIMESTAMP.nullSafeSet(preparedStatement, dt.toDate(), index);\n             Hibernate.STRING.nullSafeSet(preparedStatement, dt.getZone().getID(), index + 1);\n         }\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new DateTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInstant.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInstant.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new Instant(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInstantAsBigInt.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInstantAsBigInt.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new Instant(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalDate.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalDate.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new LocalDate(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalDateTime.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalDateTime.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new LocalDateTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeAsString.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeAsString.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new LocalTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeAsTime.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeAsTime.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new LocalTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeExact.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentLocalTimeExact.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new LocalTime(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new TimeOfDay(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new TimeOfDay(value);\n+        return value;\n     }\n \n     public boolean isMutable() {\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java\n     }\n \n     public Object deepCopy(Object value) throws HibernateException {\n-        if (value == null) {\n-            return null;\n-        }\n-        return new YearMonthDay(value);\n+        return value;\n     }\n \n     public boolean isMutable() {", "timestamp": 1257635298, "metainfo": ""}