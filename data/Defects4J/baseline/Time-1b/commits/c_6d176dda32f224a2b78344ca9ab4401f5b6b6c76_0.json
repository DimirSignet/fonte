{"sha": "6d176dda32f224a2b78344ca9ab4401f5b6b6c76", "log": "Remove toDateTime(Zone) as it had unclear semantics   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/ReadablePartial.java\n+++ b/JodaTime/src/java/org/joda/time/ReadablePartial.java\n     boolean isSupported(DateTimeFieldType field);\n \n     /**\n-     * Converts this partial to a full datetime using the specified time zone and\n-     * filing in any gaps using the current datetime.\n-     * <p>\n-     * This method obtains the current datetime, creates a chronology from that\n-     * on this instance plus the time zone specified, and then sets the fields\n-     * from this instant on top.\n-     * <p>\n-     * For example, if this partial represents a time, then the result of this\n-     * method will be the datetime from the specified base instant plus the\n-     * time from this partial.\n-     *\n-     * @param zone  the zone to use, null means default\n-     * @return the combined datetime\n-     */\n-    DateTime toDateTime(DateTimeZone zone);\n-\n-    /**\n      * Converts this partial to a full datetime by resolving it against another\n      * datetime.\n      * <p>", "timestamp": 1106497977, "metainfo": ""}