{"sha": "ab6b7a46049bba471d8cb9d2f85f31b77e67e293", "log": "Fix DateTimeFormat pattern letter K from Maxim Zhao   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n  * are as well.\n  *\n  * @author Brian S O'Neill\n+ * @author Maxim Zhao\n  * @since 1.0\n  * @see ISODateTimeFormat\n  * @see DateTimeFormatterBuilder\n             case 'd': // day of month (number)\n                 builder.appendDayOfMonth(tokenLen);\n                 break;\n-            case 'h': // hour of day (number, 1..12)\n+            case 'a': // am/pm marker (text)\n+                builder.appendHalfdayOfDayText();\n+                break;\n+            case 'h': // clockhour of halfday (number, 1..12)\n                 builder.appendClockhourOfHalfday(tokenLen);\n                 break;\n             case 'H': // hour of day (number, 0..23)\n                 builder.appendHourOfDay(tokenLen);\n+                break;\n+            case 'k': // clockhour of day (1..24)\n+                builder.appendClockhourOfDay(tokenLen);\n+                break;\n+            case 'K': // hour of halfday (0..11)\n+                builder.appendHourOfHalfday(tokenLen);\n                 break;\n             case 'm': // minute of hour (number)\n                 builder.appendMinuteOfHour(tokenLen);\n                 break;\n             case 'w': // week of weekyear (number)\n                 builder.appendWeekOfWeekyear(tokenLen);\n-                break;\n-            case 'a': // am/pm marker (text)\n-                builder.appendHalfdayOfDayText();\n-                break;\n-            case 'k': // hour of day (1..24)\n-                builder.appendClockhourOfDay(tokenLen);\n-                break;\n-            case 'K': // hour of day (0..11)\n-                builder.appendClockhourOfHalfday(tokenLen);\n                 break;\n             case 'z': // time zone (text)\n                 if (tokenLen >= 4) {\n--- a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n+++ b/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n         \n         dt = dt.withZone(TOKYO);\n         assertEquals(dt.toString(), \"7\", f.print(dt));\n+        \n+        dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, UTC);\n+        assertEquals(dt.toString(), \"0\", f.print(dt));\n     }\n \n     //-----------------------------------------------------------------------\n         \n         dt = dt.withZone(TOKYO);\n         assertEquals(dt.toString(), \"7\", f.print(dt));\n+        \n+        dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, UTC);\n+        assertEquals(dt.toString(), \"12\", f.print(dt));\n     }\n \n     //-----------------------------------------------------------------------\n         \n         dt = dt.withZone(TOKYO);\n         assertEquals(dt.toString(), \"19\", f.print(dt));\n+        \n+        dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, UTC);\n+        assertEquals(dt.toString(), \"0\", f.print(dt));\n     }\n \n     //-----------------------------------------------------------------------\n         \n         dt = dt.withZone(TOKYO);\n         assertEquals(dt.toString(), \"19\", f.print(dt));\n+        \n+        dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, UTC);\n+        assertEquals(dt.toString(), \"24\", f.print(dt));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1134952640, "metainfo": ""}