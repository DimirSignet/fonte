{"sha": "22b39081c85640ff5add5ed3a8037f4ac00ccb49", "log": "Add since tags for 1.1   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n      * \n      * @param interval  the interval to use, null means now to now\n      * @return the interval, never null\n+     * @since 1.1\n      */\n     public static final ReadableInterval getReadableInterval(ReadableInterval interval) {\n         if (interval == null) {\n--- a/JodaTime/src/java/org/joda/time/Partial.java\n+++ b/JodaTime/src/java/org/joda/time/Partial.java\n      * This class binds a <code>YearMonthDay</code> to a <code>DateTimeField</code>.\n      * \n      * @author Stephen Colebourne\n+     * @since 1.1\n      */\n     public static class Property extends AbstractPartialFieldProperty implements Serializable {\n \n--- a/JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java\n+++ b/JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java\n      * \n      * @return the current value\n      * @see DateTimeField#get\n+     * @since 1.1\n      */\n     public String getAsString() {\n         return Integer.toString(get());\n--- a/JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java\n+++ b/JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java\n      * \n      * @return the current value\n      * @see DateTimeField#get\n+     * @since 1.1\n      */\n     public String getAsString() {\n         return Integer.toString(get());\n--- a/JodaTime/src/java/org/joda/time/field/FieldUtils.java\n+++ b/JodaTime/src/java/org/joda/time/field/FieldUtils.java\n      * @param lowerBound  the lower bound allowed for value\n      * @param upperBound  the upper bound allowed for value\n      * @throws IllegalFieldValueException if value is not in the specified bounds\n+     * @since 1.1\n      */\n     public static void verifyValueBounds(DateTimeFieldType fieldType, \n                                          int value, int lowerBound, int upperBound) {\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n     //-----------------------------------------------------------------------\n     /**\n      * Constructor.\n+     *\n+     * @since 1.1 (previously private)\n      */\n     protected DateTimeFormat() {\n         super();\n--- a/JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java\n         dtp; // date time parser\n \n     /**\n-     * Restricted constructor.\n+     * Constructor.\n+     *\n+     * @since 1.1 (previously private)\n      */\n     protected ISODateTimeFormat() {\n         super();\n--- a/JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java\n \n     /**\n      * Constructor.\n+     *\n+     * @since 1.1 (previously private)\n      */\n     protected ISOPeriodFormat() {\n         super();\n--- a/JodaTime/src/java/org/joda/time/format/PeriodFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/PeriodFormat.java\n \n     /**\n      * Constructor.\n+     *\n+     * @since 1.1 (previously private)\n      */\n     protected PeriodFormat() {\n         super();", "timestamp": 1123713297, "metainfo": ""}