{"sha": "548b2fb362bb0a240b89cb0d036c1068cd68b650", "log": "Can't use strictfp, need jre1.2 compatibility.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/FormatUtils.java\n+++ b/JodaTime/src/java/org/joda/time/format/FormatUtils.java\n  *\n  * @author Brian S O'Neill\n  */\n-// Note: Use strictfp and StrictMath to ensure consistent results on all VMs.\n-public strictfp class FormatUtils {\n-    private static final double LOG_10 = StrictMath.log(10);\n+public class FormatUtils {\n+    private static final double LOG_10 = Math.log(10);\n \n     private FormatUtils() {\n     }\n             } else if (value < 10000) {\n                 digits = 4;\n             } else {\n-                digits = (int)(StrictMath.log(value) / LOG_10) + 1;\n+                digits = (int)(Math.log(value) / LOG_10) + 1;\n             }\n             for (; size > digits; size--) {\n                 buf.append('0');\n                     return;\n                 }\n             }\n-            int digits = (int)(StrictMath.log(value) / LOG_10) + 1;\n+            int digits = (int)(Math.log(value) / LOG_10) + 1;\n             for (; size > digits; size--) {\n                 buf.append('0');\n             }\n             } else if (value < 10000) {\n                 digits = 4;\n             } else {\n-                digits = (int)(StrictMath.log(value) / LOG_10) + 1;\n+                digits = (int)(Math.log(value) / LOG_10) + 1;\n             }\n             for (; size > digits; size--) {\n                 out.write('0');\n                     return;\n                 }\n             }\n-            int digits = (int)(StrictMath.log(value) / LOG_10) + 1;\n+            int digits = (int)(Math.log(value) / LOG_10) + 1;\n             for (; size > digits; size--) {\n                 out.write('0');\n             }\n              (value < 100 ? 2 :\n               (value < 1000 ? 3 :\n                (value < 10000 ? 4 :\n-                ((int)(StrictMath.log(value) / LOG_10) + 1)))));\n+                ((int)(Math.log(value) / LOG_10) + 1)))));\n     }\n \n     static int parseTwoDigits(String text, int position) {", "timestamp": 1073625635, "metainfo": ""}