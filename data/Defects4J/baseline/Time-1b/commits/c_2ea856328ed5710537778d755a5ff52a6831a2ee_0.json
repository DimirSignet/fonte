{"sha": "2ea856328ed5710537778d755a5ff52a6831a2ee", "log": "Fix MonthDay add/subtract around Feb29 [3528941]", "commit": "\n--- a/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java\n+++ b/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java\n         if (valueToAdd == 0) {\n             return values;\n         }\n+        if (partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0) {\n+            // month is largest field and being added to, such as month-day\n+            int curMonth0 = partial.getValue(0) - 1;\n+            int newMonth = ((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1;\n+            return set(partial, 0, values, newMonth);\n+        }\n         if (DateTimeUtils.isContiguous(partial)) {\n             long instant = 0L;\n             for (int i = 0, isize = partial.size(); i < isize; i++) {\n--- a/src/test/java/org/joda/time/TestMonthDay_Basics.java\n+++ b/src/test/java/org/joda/time/TestMonthDay_Basics.java\n         assertEquals(expected, result);\n     }\n \n+    public void testPlusMonths_int_fromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusMonths(1);\n+        MonthDay expected = new MonthDay(3, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testPlusMonths_int_negativeFromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusMonths(-1);\n+        MonthDay expected = new MonthDay(1, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testPlusMonths_int_endOfMonthAdjust() {\n+        MonthDay test = new MonthDay(3, 31, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusMonths(1);\n+        MonthDay expected = new MonthDay(4, 30, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testPlusMonths_int_negativeEndOfMonthAdjust() {\n+        MonthDay test = new MonthDay(3, 31, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusMonths(-1);\n+        MonthDay expected = new MonthDay(2, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n     public void testPlusMonths_int_same() {\n         MonthDay test = new MonthDay(6, 5, ISO_UTC);\n         MonthDay result = test.plusMonths(0);\n         assertEquals(expected, result);\n     }\n \n+    //-------------------------------------------------------------------------\n     public void testPlusDays_int() {\n         MonthDay test = new MonthDay(5, 10, BuddhistChronology.getInstance());\n         MonthDay result = test.plusDays(1);\n         assertEquals(expected, result);\n     }\n \n+    public void testPlusDays_int_fromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusDays(1);\n+        MonthDay expected = new MonthDay(3, 1, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testPlusDays_int_negativeFromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.plusDays(-1);\n+        MonthDay expected = new MonthDay(2, 28, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n     public void testPlusDays_same() {\n         MonthDay test = new MonthDay(5, 10, BuddhistChronology.getInstance());\n         MonthDay result = test.plusDays(0);\n         assertEquals(expected, result);\n     }\n \n+    public void testMinusMonths_int_fromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusMonths(1);\n+        MonthDay expected = new MonthDay(1, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testMinusMonths_int_negativeFromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusMonths(-1);\n+        MonthDay expected = new MonthDay(3, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testMinusMonths_int_endOfMonthAdjust() {\n+        MonthDay test = new MonthDay(3, 31, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusMonths(1);\n+        MonthDay expected = new MonthDay(2, 29, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testMinusMonths_int_negativeEndOfMonthAdjust() {\n+        MonthDay test = new MonthDay(3, 31, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusMonths(-1);\n+        MonthDay expected = new MonthDay(4, 30, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n     public void testMinusMonths_int_same() {\n         MonthDay test = new MonthDay(6, 5, ISO_UTC);\n         MonthDay result = test.minusMonths(0);\n         assertEquals(expected, result);\n     }\n \n+    //-------------------------------------------------------------------------\n     public void testMinusDays_int() {\n         MonthDay test = new MonthDay(5, 11, BuddhistChronology.getInstance());\n         MonthDay result = test.minusDays(1);\n         MonthDay expected = new MonthDay(5, 10, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testMinusDays_int_fromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusDays(1);\n+        MonthDay expected = new MonthDay(2, 28, ISOChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+\n+    public void testMinusDays_int_negativeFromLeap() {\n+        MonthDay test = new MonthDay(2, 29, ISOChronology.getInstanceUTC());\n+        MonthDay result = test.minusDays(-1);\n+        MonthDay expected = new MonthDay(3, 1, ISOChronology.getInstance());\n         assertEquals(expected, result);\n     }\n ", "timestamp": 1337773541, "metainfo": ""}