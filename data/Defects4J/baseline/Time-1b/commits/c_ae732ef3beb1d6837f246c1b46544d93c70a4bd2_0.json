{"sha": "ae732ef3beb1d6837f246c1b46544d93c70a4bd2", "log": "Switch documentation to refer to Local classes instead of YMD/TOD  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateMidnight.java\n+++ b/JodaTime/src/java/org/joda/time/DateMidnight.java\n  * <p>\n  * This class does not represent a day, but the millisecond instant at midnight.\n  * If you need a class that represents the whole day, then an {@link Interval} or\n- * a {@link YearMonthDay} may be more suitable.\n+ * a {@link LocalDate} may be more suitable.\n  * <p>\n  * This class uses a Chronology internally. The Chronology determines how the\n  * millisecond instant value is converted into the date time fields.\n      * Gets a copy of this datetime with the partial set of fields replacing those\n      * from this instance.\n      * <p>\n-     * For example, if the partial is a <code>YearMonthDay</code> then the date fields\n+     * For example, if the partial is a <code>LocalDate</code> then the date fields\n      * would be changed in the returned instance.\n      * If the partial is null, then <code>this</code> is returned.\n      *\n--- a/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2006 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n      * <p>\n      * A partial is contiguous if one field starts where another ends.\n      * <p>\n-     * For example YearMonthDay is contiguous because DayOfMonth has the\n-     * same range (Month) as the unit of the next field (MonthOfYear), and\n-     * MonthOfYear has the same range (Year) as the unit of the next field\n-     * (Year).\n-     * <p>\n-     * Similarly, TimeOfDay is contiguous, as it consists of MillisOfSecond,\n-     * SecondOfMinute, MinuteOfHour and HourOfDay (note how the names of\n-     * each field 'join up').\n+     * For example <code>LocalDate</code> is contiguous because DayOfMonth has\n+     * the same range (Month) as the unit of the next field (MonthOfYear), and\n+     * MonthOfYear has the same range (Year) as the unit of the next field (Year).\n+     * <p>\n+     * Similarly, <code>LocalTime</code> is contiguous, as it consists of\n+     * MillisOfSecond, SecondOfMinute, MinuteOfHour and HourOfDay (note how\n+     * the names of each field 'join up').\n      * <p>\n      * However, a Year/HourOfDay partial is not contiguous because the range\n      * field Day is not equal to the next field Year.\n--- a/JodaTime/src/java/org/joda/time/Period.java\n+++ b/JodaTime/src/java/org/joda/time/Period.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2006 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n      * Creates a period from two partially specified times, calculating\n      * by field difference.\n      * <p>\n-     * The two partials must contain the same fields, thus you can\n-     * specify two YearMonthDay objects, or two TimeOfDay objects,\n+     * The two partials must contain the same fields, thus you can specify\n+     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n      * but not one of each. Also, the partial may not contain overlapping\n      * fields, such as dayOfWeek and dayOfMonth.\n      * <p>\n     /**\n      * Creates a period from two partially specified times.\n      * <p>\n-     * The two partials must contain the same fields, thus you can\n-     * specify two YearMonthDay objects, or two TimeOfDay objects,\n+     * The two partials must contain the same fields, thus you can specify\n+     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n      * but not one of each.\n-     * As these are Partial objects, time zones have no effect on\n-     * the result.\n+     * As these are Partial objects, time zones have no effect on the result.\n      * <p>\n      * The two partials must also both be contiguous - see\n-     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a\n-     * definition. Both YearMonthDay and TimeOfDay are contiguous.\n+     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a definition.\n+     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.\n      * <p>\n      * An alternative way of constructing a Period from two Partials\n      * is {@link #fieldDifference(ReadablePartial, ReadablePartial)}.\n     /**\n      * Creates a period from two partially specified times.\n      * <p>\n-     * The two partials must contain the same fields, thus you can\n-     * specify two YearMonthDay objects, or two TimeOfDay objects,\n+     * The two partials must contain the same fields, thus you can specify\n+     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n      * but not one of each.\n-     * As these are Partial objects, time zones have no effect on\n-     * the result.\n+     * As these are Partial objects, time zones have no effect on the result.\n      * <p>\n      * The two partials must also both be contiguous - see\n-     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a\n-     * definition. Both YearMonthDay and TimeOfDay are contiguous.\n+     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a definition.\n+     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.\n      * <p>\n      * An alternative way of constructing a Period from two Partials\n      * is {@link #fieldDifference(ReadablePartial, ReadablePartial)}.\n--- a/JodaTime/src/java/org/joda/time/base/BasePeriod.java\n+++ b/JodaTime/src/java/org/joda/time/base/BasePeriod.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2006 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n      * Creates a period from the given duration and end point.\n      * <p>\n      * The two partials must contain the same fields, thus you can\n-     * specify two YearMonthDay objects, or two TimeOfDay objects,\n-     * but not one of each.\n-     * As these are Partial objects, time zones have no effect on\n-     * the result.\n+     * specify two <code>LocalDate</code> objects, or two <code>LocalTime</code>\n+     * objects, but not one of each.\n+     * As these are Partial objects, time zones have no effect on the result.\n      * <p>\n      * The two partials must also both be contiguous - see\n      * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a\n-     * definition. Both YearMonthDay and TimeOfDay are contiguous.\n+     * definition. Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.\n      *\n      * @param start  the start of the period, must not be null\n      * @param end  the end of the period, must not be null", "timestamp": 1151621092, "metainfo": ""}