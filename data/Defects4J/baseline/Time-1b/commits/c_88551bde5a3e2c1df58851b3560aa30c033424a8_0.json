{"sha": "88551bde5a3e2c1df58851b3560aa30c033424a8", "log": "Support parsing all upper-case and all lower-case text  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n                     for (int i = min; i <= max; i++) {\n                         property.set(i);\n                         validValues.add(property.getAsShortText(locale));\n+                        validValues.add(property.getAsShortText(locale).toLowerCase(locale));\n+                        validValues.add(property.getAsShortText(locale).toUpperCase(locale));\n                         validValues.add(property.getAsText(locale));\n+                        validValues.add(property.getAsText(locale).toLowerCase(locale));\n+                        validValues.add(property.getAsText(locale).toUpperCase(locale));\n                     }\n                     if (\"en\".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era()) {\n                         // hack to support for parsing \"BCE\" and \"CE\" if the language is English\n                         validValues.add(\"BCE\");\n+                        validValues.add(\"bce\");\n                         validValues.add(\"CE\");\n+                        validValues.add(\"ce\");\n                         maxLength = 3;\n                     }\n                     array = new Object[] {validValues, new Integer(maxLength)};\n--- a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n+++ b/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java\n         check(date, 2007, 1, 23);\n     }\n \n+    public void testFormatParse_textMonthJanShortLowerCase_UK() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd MMM yyyy\")\n+            .withLocale(Locale.UK).withZone(DateTimeZone.UTC);\n+        DateTime date = dateFormatter.parseDateTime(\"23 jan 2007\");\n+        check(date, 2007, 1, 23);\n+    }\n+\n+    public void testFormatParse_textMonthJanShortUpperCase_UK() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd MMM yyyy\")\n+            .withLocale(Locale.UK).withZone(DateTimeZone.UTC);\n+        DateTime date = dateFormatter.parseDateTime(\"23 JAN 2007\");\n+        check(date, 2007, 1, 23);\n+    }\n+\n     public void testParse_textMonthJanLong_UK() {\n         DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd MMM yyyy\")\n             .withLocale(Locale.UK).withZone(DateTimeZone.UTC);\n         \n         DateTime date = dateFormatter.parseDateTime(\"23 January 2007\");\n+        check(date, 2007, 1, 23);\n+    }\n+\n+    public void testFormatParse_textMonthJanLongLowerCase_UK() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd MMM yyyy\")\n+            .withLocale(Locale.UK).withZone(DateTimeZone.UTC);\n+        DateTime date = dateFormatter.parseDateTime(\"23 january 2007\");\n+        check(date, 2007, 1, 23);\n+    }\n+\n+    public void testFormatParse_textMonthJanLongUpperCase_UK() {\n+        DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(\"dd MMM yyyy\")\n+            .withLocale(Locale.UK).withZone(DateTimeZone.UTC);\n+        DateTime date = dateFormatter.parseDateTime(\"23 JANUARY 2007\");\n         check(date, 2007, 1, 23);\n     }\n ", "timestamp": 1196241422, "metainfo": ""}