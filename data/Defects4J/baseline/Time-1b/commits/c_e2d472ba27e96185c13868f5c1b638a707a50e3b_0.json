{"sha": "e2d472ba27e96185c13868f5c1b638a707a50e3b", "log": "Format the endpoints of an interval in toString using ISODateTimeFormat.dateTime(), to not lose the timezone", "commit": "\n--- a/src/main/java/org/joda/time/base/AbstractInterval.java\n+++ b/src/main/java/org/joda/time/base/AbstractInterval.java\n      * @return re-parsable string\n      */\n     public String toString() {\n-        DateTimeFormatter printer = ISODateTimeFormat.dateHourMinuteSecondFraction();\n+        DateTimeFormatter printer = ISODateTimeFormat.dateTime();\n         printer = printer.withChronology(getChronology());\n         StringBuffer buf = new StringBuffer(48);\n         printer.printTo(buf, getStartMillis());\n--- a/src/test/java/org/joda/time/TestInterval_Basics.java\n+++ b/src/test/java/org/joda/time/TestInterval_Basics.java\n         DateTime dt1 = new DateTime(2004, 6, 9, 7, 8, 9, 10, DateTimeZone.UTC);\n         DateTime dt2 = new DateTime(2005, 8, 13, 12, 14, 16, 18, DateTimeZone.UTC);\n         Interval test = new Interval(dt1, dt2);\n-        assertEquals(\"2004-06-09T07:08:09.010/2005-08-13T12:14:16.018\", test.toString());\n+        assertEquals(\"2004-06-09T07:08:09.010Z/2005-08-13T12:14:16.018Z\", test.toString());\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/test/java/org/joda/time/TestMutableInterval_Basics.java\n+++ b/src/test/java/org/joda/time/TestMutableInterval_Basics.java\n         DateTime dt1 = new DateTime(2004, 6, 9, 7, 8, 9, 10, DateTimeZone.UTC);\n         DateTime dt2 = new DateTime(2005, 8, 13, 12, 14, 16, 18, DateTimeZone.UTC);\n         MutableInterval test = new MutableInterval(dt1, dt2);\n-        assertEquals(\"2004-06-09T07:08:09.010/2005-08-13T12:14:16.018\", test.toString());\n+        assertEquals(\"2004-06-09T07:08:09.010Z/2005-08-13T12:14:16.018Z\", test.toString());\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1317042638, "metainfo": ""}