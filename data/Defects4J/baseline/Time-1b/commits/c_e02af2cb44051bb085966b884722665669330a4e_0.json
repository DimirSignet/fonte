{"sha": "e02af2cb44051bb085966b884722665669330a4e", "log": "Better Javadoc for DateTimeFormatter parsing  See #78", "commit": "\n--- a/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatter.java\n  * // parse using the Paris zone\n  * DateTime date = formatter.withZone(DateTimeZone.forID(\"Europe/Paris\")).parseDateTime(str);\n  * </pre>\n+ * <p>\n+ * Parsing builds up the resultant instant by 'setting' the value of each parsed field\n+ * from largest to smallest onto an initial instant, typically 1970-01-01T00:00Z.\n+ * This design means that day-of-month is set before day-of-week.\n+ * As such, if both the day-of-month and day-of-week are parsed, and the day-of-week\n+ * is incorrect, then the day-of-week overrides the day-of-month.\n+ * \n+ * This has a side effect if the input is not consistent.\n+ * \n  * \n  * @author Brian S O'Neill\n  * @author Stephen Colebourne", "timestamp": 1383316587, "metainfo": ""}