{"sha": "d21736df31ca4888e76ccbdc7d31f406cf68b645", "log": "Fix tests to handle chronology issues and withDurationType   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDuration_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDuration_Basics.java\n     //-----------------------------------------------------------------------\n     public void testAddTo1() {\n         long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        long added = test.addTo(TEST_TIME_NOW, 1);\n+        assertEquals(expected, added);\n+    }\n+    \n+    public void testAddTo2() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, -2);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, -4);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, -8);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);\n+        \n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        long added = test.addTo(TEST_TIME_NOW, -2);\n+        assertEquals(expected, added);\n+    }\n+    \n+    public void testAddTo3() {\n+        long expected = TEST_TIME_NOW;\n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        long added = test.addTo(TEST_TIME_NOW, 0);\n+        assertEquals(expected, added);\n+    }\n+    \n+    public void testAddTo4() {\n+        long expected = TEST_TIME_NOW + 100L;\n+        Duration test = new Duration(100L);\n+        long added = test.addTo(TEST_TIME_NOW, 1);\n+        assertEquals(expected, added);\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testAddToWithChronology1() {\n+        long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().weeks().add(expected, 3);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1);\n+        long added = test.addTo(TEST_TIME_NOW, 1, ISOChronology.getInstance());\n         assertEquals(expected, added);\n     }\n     \n-    public void testAddTo2() {\n+    public void testAddToWithChronology2() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, -2);\n+        long added = test.addTo(TEST_TIME_NOW, -2, ISOChronology.getInstance());\n         assertEquals(expected, added);\n     }\n     \n-    public void testAddTo3() {\n-        long expected = TEST_TIME_NOW;\n-        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 0);\n-        assertEquals(expected, added);\n-    }\n-    \n-    public void testAddTo4() {\n-        long expected = TEST_TIME_NOW + 100L;\n-        Duration test = new Duration(100L);\n-        long added = test.addTo(TEST_TIME_NOW, 1);\n-        assertEquals(expected, added);\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testAddToWithChronology1() {\n+    public void testAddToWithChronology3() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1, ISOChronology.getInstance());\n+        long added = test.addTo(TEST_TIME_NOW, 1, null);\n         assertEquals(expected, added);\n     }\n     \n-    public void testAddToWithChronology2() {\n+    //-----------------------------------------------------------------------\n+    public void testAddToRI1() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(new Instant(), 1);  // Instant has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI2() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, -2);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, -4);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, -8);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);\n+        \n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(new Instant(), -2);  // Instant has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI3() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, -2, ISOChronology.getInstance());\n-        assertEquals(expected, added);\n-    }\n-    \n-    public void testAddToWithChronology3() {\n+        Instant added = test.addTo(new DateTime(), -2);  // DateTime has local time zone\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI4() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(null, 1);  // null has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testAddIntoRWI1() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1, null);\n-        assertEquals(expected, added);\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testAddToRI1() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(new Instant(), 1);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    public void testAddToRI2() {\n+        MutableDateTime mdt = new MutableDateTime();\n+        test.addInto(mdt, 1);\n+        assertEquals(expected, mdt.getMillis());\n+    }\n+    \n+    public void testAddIntoRWI2() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(new Instant(), -2);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    public void testAddToRI3() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(null, 1);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testAddIntoRWI1() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n-        MutableDateTime mdt = new MutableDateTime();\n-        test.addInto(mdt, 1);\n-        assertEquals(expected, mdt.getMillis());\n-    }\n-    \n-    public void testAddIntoRWI2() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, -2);\n-        expected = ISOChronology.getInstance().months().add(expected, -4);\n-        expected = ISOChronology.getInstance().weeks().add(expected, -6);\n-        expected = ISOChronology.getInstance().days().add(expected, -8);\n-        expected = ISOChronology.getInstance().hours().add(expected, -10);\n-        expected = ISOChronology.getInstance().minutes().add(expected, -12);\n-        expected = ISOChronology.getInstance().seconds().add(expected, -14);\n-        expected = ISOChronology.getInstance().millis().add(expected, -16);\n-        \n-        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n         MutableDateTime mdt = new MutableDateTime();\n         test.addInto(mdt, -2);\n         assertEquals(expected, mdt.getMillis());\n     }\n     \n     public void testAddIntoRWI3() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n         Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8);\n         try {\n             test.addInto(null, 1);\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testWithDurationType1() {\n+        Duration test = new Duration(123L);\n+        Duration result = test.withDurationType(DurationType.getMillisType());\n+        assertSame(test, result);\n+    }\n+\n+    public void testWithDurationType2() {\n+        Duration test = new Duration(3123L);\n+        Duration result = test.withDurationType(DurationType.getDayHourType());\n+        assertEquals(3, result.getSeconds());\n+        assertEquals(123, result.getMillis());\n+        assertEquals(3123L, result.getTotalMillis());\n+        assertEquals(DurationType.getDayHourType(), result.getDurationType());\n+    }\n+\n+    public void testWithDurationType3() {\n+        Duration test = new Duration(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());\n+        try {\n+            test.withDurationType(DurationType.getDayHourType());\n+            fail();\n+        } catch (IllegalStateException ex) {}\n+    }\n+\n+    public void testWithDurationType4() {\n+        Duration test = new Duration(3123L);\n+        Duration result = test.withDurationType(null);\n+        assertEquals(3, result.getSeconds());\n+        assertEquals(123, result.getMillis());\n+        assertEquals(3123L, result.getTotalMillis());\n+        assertEquals(DurationType.getAllType(), result.getDurationType());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testImmutable() {\n         MockChangeDuration test = new MockChangeDuration(111L);\n         test.testSetDuration_RD();\n--- a/JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java\n     //-----------------------------------------------------------------------\n     public void testAddTo1() {\n         long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n+        long added = test.addTo(TEST_TIME_NOW, 1);\n+        assertEquals(expected, added);\n+    }\n+    \n+    public void testAddTo2() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, -2);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, -4);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, -8);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);\n+        \n+        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n+        long added = test.addTo(TEST_TIME_NOW, -2);\n+        assertEquals(expected, added);\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testAddToWithChronology1() {\n+        long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().weeks().add(expected, 3);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1);\n+        long added = test.addTo(TEST_TIME_NOW, 1, ISOChronology.getInstance());\n         assertEquals(expected, added);\n     }\n     \n-    public void testAddTo2() {\n+    public void testAddToWithChronology2() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, -2);\n+        long added = test.addTo(TEST_TIME_NOW, -2, ISOChronology.getInstance());\n         assertEquals(expected, added);\n     }\n     \n-    //-----------------------------------------------------------------------\n-    public void testAddToWithChronology1() {\n+    public void testAddToWithChronology3() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1, ISOChronology.getInstance());\n+        long added = test.addTo(TEST_TIME_NOW, 1, null);\n         assertEquals(expected, added);\n     }\n     \n-    public void testAddToWithChronology2() {\n+    //-----------------------------------------------------------------------\n+    public void testAddToRI1() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(new Instant(), 1);  // Instant has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI2() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, -2);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, -4);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, -8);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);\n+        \n+        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(new Instant(), -2);  // Instant has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI3() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, -2, ISOChronology.getInstance());\n-        assertEquals(expected, added);\n-    }\n-    \n-    public void testAddToWithChronology3() {\n+        Instant added = test.addTo(new DateTime(), -2);  // DateTime has local time zone\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    public void testAddToRI4() {\n+        long expected = TEST_TIME_NOW;\n+        expected = ISOChronology.getInstanceUTC().years().add(expected, 1);\n+        expected = ISOChronology.getInstanceUTC().months().add(expected, 2);\n+        expected = ISOChronology.getInstanceUTC().weeks().add(expected, 3);\n+        expected = ISOChronology.getInstanceUTC().days().add(expected, 4);\n+        expected = ISOChronology.getInstanceUTC().hours().add(expected, 5);\n+        expected = ISOChronology.getInstanceUTC().minutes().add(expected, 6);\n+        expected = ISOChronology.getInstanceUTC().seconds().add(expected, 7);\n+        expected = ISOChronology.getInstanceUTC().millis().add(expected, 8);\n+        \n+        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n+        Instant added = test.addTo(null, 1);  // null has no time zone, uses duration's UTC\n+        assertEquals(expected, added.getMillis());\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testAddIntoRWI1() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, 1);\n         expected = ISOChronology.getInstance().months().add(expected, 2);\n         expected = ISOChronology.getInstance().millis().add(expected, 8);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        long added = test.addTo(TEST_TIME_NOW, 1, null);\n-        assertEquals(expected, added);\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testAddToRI1() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(new Instant(), 1);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    public void testAddToRI2() {\n+        MutableDateTime mdt = new MutableDateTime();\n+        test.addInto(mdt, 1);\n+        assertEquals(expected, mdt.getMillis());\n+    }\n+    \n+    public void testAddIntoRWI2() {\n         long expected = TEST_TIME_NOW;\n         expected = ISOChronology.getInstance().years().add(expected, -2);\n         expected = ISOChronology.getInstance().months().add(expected, -4);\n         expected = ISOChronology.getInstance().millis().add(expected, -16);\n         \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(new Instant(), -2);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    public void testAddToRI3() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        Instant added = test.addTo(null, 1);\n-        assertEquals(expected, added.getMillis());\n-    }\n-    \n-    //-----------------------------------------------------------------------\n-    public void testAddIntoRWI1() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n-        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n-        MutableDateTime mdt = new MutableDateTime();\n-        test.addInto(mdt, 1);\n-        assertEquals(expected, mdt.getMillis());\n-    }\n-    \n-    public void testAddIntoRWI2() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, -2);\n-        expected = ISOChronology.getInstance().months().add(expected, -4);\n-        expected = ISOChronology.getInstance().weeks().add(expected, -6);\n-        expected = ISOChronology.getInstance().days().add(expected, -8);\n-        expected = ISOChronology.getInstance().hours().add(expected, -10);\n-        expected = ISOChronology.getInstance().minutes().add(expected, -12);\n-        expected = ISOChronology.getInstance().seconds().add(expected, -14);\n-        expected = ISOChronology.getInstance().millis().add(expected, -16);\n-        \n-        MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n         MutableDateTime mdt = new MutableDateTime();\n         test.addInto(mdt, -2);\n         assertEquals(expected, mdt.getMillis());\n     }\n     \n     public void testAddIntoRWI3() {\n-        long expected = TEST_TIME_NOW;\n-        expected = ISOChronology.getInstance().years().add(expected, 1);\n-        expected = ISOChronology.getInstance().months().add(expected, 2);\n-        expected = ISOChronology.getInstance().weeks().add(expected, 3);\n-        expected = ISOChronology.getInstance().days().add(expected, 4);\n-        expected = ISOChronology.getInstance().hours().add(expected, 5);\n-        expected = ISOChronology.getInstance().minutes().add(expected, 6);\n-        expected = ISOChronology.getInstance().seconds().add(expected, 7);\n-        expected = ISOChronology.getInstance().millis().add(expected, 8);\n-        \n         MutableDuration test = new MutableDuration(1, 2, 3, 4, 5, 6, 7, 8);\n         try {\n             test.addInto(null, 1);", "timestamp": 1090966771, "metainfo": ""}