{"sha": "119418fb76680e704e2b076b289620ba4d16459d", "log": "Add Partial.isMatch(ReadablePartial)  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Partial.java\n+++ b/JodaTime/src/java/org/joda/time/Partial.java\n         return true;\n     }\n \n+    /**\n+     * Does this partial match the specified partial.\n+     * <p>\n+     * A match occurs when all the fields of this partial are the same as the\n+     * corresponding fields on the specified partial.\n+     *\n+     * @param partial  a partial to check against, must not be null\n+     * @return true if this partial matches the specified partial\n+     * @throws IllegalArgumentException if the partial is null\n+     * @throws IllegalArgumentException if the fields of the two partials do not match\n+     */\n+    public boolean isMatch(ReadablePartial partial) {\n+        if (partial == null) {\n+            throw new IllegalArgumentException(\"The partial must not be null\");\n+        }\n+        for (int i = 0; i < iTypes.length; i++) {\n+            int value = partial.get(iTypes[i]);\n+            if (value != iValues[i]) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * Gets a formatter suitable for the fields in this partial.\n--- a/JodaTime/src/test/org/joda/time/TestPartial_Match.java\n+++ b/JodaTime/src/test/org/joda/time/TestPartial_Match.java\n     }\n \n     //-----------------------------------------------------------------------\n-    public void testIsMatch() {\n+    public void testIsMatch_Instant() {\n         // Year=2005, Month=7 (July), DayOfWeek=2 (Tuesday)\n         Partial test = createYMDwPartial(ISO_UTC, 2005, 7, 2);\n         DateTime instant = new DateTime(2005, 7, 5, 0, 0, 0, 0);\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testIsMatch_Partial() {\n+        // Year=2005, Month=7 (July), DayOfWeek=2 (Tuesday)\n+        Partial test = createYMDwPartial(ISO_UTC, 2005, 7, 2);\n+        LocalDate partial = new LocalDate(2005, 7, 5);\n+        assertEquals(true, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 7, 4);\n+        assertEquals(false, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 7, 6);\n+        assertEquals(false, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 7, 12);\n+        assertEquals(true, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 7, 19);\n+        assertEquals(true, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 7, 26);\n+        assertEquals(true, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 8, 2);\n+        assertEquals(false, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2006, 7, 5);\n+        assertEquals(false, test.isMatch(partial));\n+        \n+        partial = new LocalDate(2005, 6, 5);\n+        assertEquals(false, test.isMatch(partial));\n+    }\n+\n+    //-----------------------------------------------------------------------\n     private Partial createYMDwPartial(Chronology chrono, int year, int month, int dow) {\n         return new Partial(\n             new DateTimeFieldType[] {", "timestamp": 1193586786, "metainfo": ""}