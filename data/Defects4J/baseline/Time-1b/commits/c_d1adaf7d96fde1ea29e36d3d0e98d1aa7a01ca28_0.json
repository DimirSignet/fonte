{"sha": "d1adaf7d96fde1ea29e36d3d0e98d1aa7a01ca28", "log": "Reorder methods   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/ReadableInstant.java\n+++ b/JodaTime/src/java/org/joda/time/ReadableInstant.java\n \n     //-----------------------------------------------------------------------\n     /**\n+     * Compares this object with the specified object for ascending\n+     * millisecond instant order. This ordering is inconsistent with\n+     * equals, as it ignores the Chronology.\n+     * <p>\n+     * All ReadableInstant instances are accepted.\n+     *\n+     * @param readableInstant  a readable instant to check against\n+     * @return negative value if this is less, 0 if equal, or positive value if greater\n+     * @throws NullPointerException if the object is null\n+     * @throws ClassCastException if the object type is not supported\n+     */\n+    int compareTo(Object readableInstant);\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Is this instant equal to the instant passed in\n+     * comparing solely by millisecond.\n+     *\n+     * @param instant  an instant to check against, null means now\n+     * @return true if the instant is equal to the instant passed in\n+     */\n+    boolean isEqual(ReadableInstant instant);\n+\n+    /**\n+     * Is this instant after the instant passed in\n+     * comparing solely by millisecond.\n+     *\n+     * @param instant  an instant to check against, null means now\n+     * @return true if the instant is after the instant passed in\n+     */\n+    boolean isAfter(ReadableInstant instant);\n+\n+    /**\n+     * Is this instant before the instant passed in\n+     * comparing solely by millisecond.\n+     *\n+     * @param instant  an instant to check against, null means now\n+     * @return true if the instant is before the instant passed in\n+     */\n+    boolean isBefore(ReadableInstant instant);\n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Compares this object with the specified object for equality based\n      * on the millisecond instant and the Chronology. All ReadableInstant\n      * instances are accepted.\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Compares this object with the specified object for ascending\n-     * millisecond instant order. This ordering is inconsistent with\n-     * equals, as it ignores the Chronology.\n-     * <p>\n-     * All ReadableInstant instances are accepted.\n-     *\n-     * @param readableInstant  a readable instant to check against\n-     * @return negative value if this is less, 0 if equal, or positive value if greater\n-     * @throws NullPointerException if the object is null\n-     * @throws ClassCastException if the object type is not supported\n-     */\n-    int compareTo(Object readableInstant);\n-\n-    //-----------------------------------------------------------------------\n-    /**\n-     * Is this instant after the instant passed in\n-     * comparing solely by millisecond.\n-     *\n-     * @param instant  an instant to check against, null means now\n-     * @return true if the instant is after the instant passed in\n-     */\n-    boolean isAfter(ReadableInstant instant);\n-\n-    /**\n-     * Is this instant before the instant passed in\n-     * comparing solely by millisecond.\n-     *\n-     * @param instant  an instant to check against, null means now\n-     * @return true if the instant is before the instant passed in\n-     */\n-    boolean isBefore(ReadableInstant instant);\n-\n-    /**\n-     * Is this instant equal to the instant passed in\n-     * comparing solely by millisecond.\n-     *\n-     * @param instant  an instant to check against, null means now\n-     * @return true if the instant is equal to the instant passed in\n-     */\n-    boolean isEqual(ReadableInstant instant);\n-\n-    //-----------------------------------------------------------------------\n-    /**\n      * Get the value as a String in a recognisable ISO8601 format.\n      * <p>\n      * The string output is in ISO8601 format to enable the String", "timestamp": 1093129063, "metainfo": ""}