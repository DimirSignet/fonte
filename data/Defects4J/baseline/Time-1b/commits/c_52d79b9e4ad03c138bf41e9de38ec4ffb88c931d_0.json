{"sha": "52d79b9e4ad03c138bf41e9de38ec4ffb88c931d", "log": "Fix tests to compile with changed converters  ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/convert/MockZeroNullIntegerConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/MockZeroNullIntegerConverter.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2006 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTimeZone;\n+import org.joda.time.format.DateTimeFormatter;\n \n /**\n  * A basic mock testing class for a converter.\n         return 0;\n     }\n \n+    public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) {\n+        return 0;\n+    }\n+\n     public Chronology getChronology(Object object, DateTimeZone zone) {\n         return null;\n     }\n--- a/JodaTime/src/test/org/joda/time/convert/TestConverterManager.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestConverterManager.java\n /*\n- *  Copyright 2001-2005 Stephen Colebourne\n+ *  Copyright 2001-2006 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n import org.joda.time.ReadableInstant;\n import org.joda.time.ReadableInterval;\n import org.joda.time.TimeOfDay;\n+import org.joda.time.format.DateTimeFormatter;\n \n /**\n  * This class is a JUnit test for ConverterManager.\n \n     public void testGetInstantConverterOKMultipleMatches() {\n         InstantConverter c = new InstantConverter() {\n-            public long getInstantMillis(Object object) { return 0;}\n-            public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}\n             public long getInstantMillis(Object object, Chronology chrono) {return 0;}\n-            public Chronology getChronology(Object object) {return null;}\n+            public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) { return 0; }\n             public Chronology getChronology(Object object, DateTimeZone zone) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return ReadableDateTime.class;}\n \n     public void testGetInstantConverterBadMultipleMatches() {\n         InstantConverter c = new InstantConverter() {\n-            public long getInstantMillis(Object object) { return 0;}\n-            public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}\n             public long getInstantMillis(Object object, Chronology chrono) {return 0;}\n-            public Chronology getChronology(Object object) {return null;}\n+            public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) { return 0; }\n             public Chronology getChronology(Object object, DateTimeZone zone) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Serializable.class;}\n     //-----------------------------------------------------------------------\n     public void testAddInstantConverter1() {\n         InstantConverter c = new InstantConverter() {\n-            public long getInstantMillis(Object object) { return 0;}\n-            public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}\n             public long getInstantMillis(Object object, Chronology chrono) {return 0;}\n-            public Chronology getChronology(Object object) {return null;}\n+            public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) { return 0; }\n             public Chronology getChronology(Object object, DateTimeZone zone) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Boolean.class;}\n \n     public void testAddInstantConverter2() {\n         InstantConverter c = new InstantConverter() {\n-            public long getInstantMillis(Object object) { return 0;}\n-            public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}\n             public long getInstantMillis(Object object, Chronology chrono) {return 0;}\n-            public Chronology getChronology(Object object) {return null;}\n+            public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) { return 0; }\n             public Chronology getChronology(Object object, DateTimeZone zone) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return String.class;}\n \n     public void testRemoveInstantConverter2() {\n         InstantConverter c = new InstantConverter() {\n-            public long getInstantMillis(Object object) { return 0;}\n-            public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}\n             public long getInstantMillis(Object object, Chronology chrono) {return 0;}\n-            public Chronology getChronology(Object object) {return null;}\n+            public long getInstantMillis(Object object, Chronology chrono, DateTimeFormatter parser) { return 0; }\n             public Chronology getChronology(Object object, DateTimeZone zone) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Boolean.class;}\n     public void testGetPartialConverterOKMultipleMatches() {\n         PartialConverter c = new PartialConverter() {\n             public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono) {return null;}\n+            public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return ReadableDateTime.class;}\n         };\n     public void testGetPartialConverterBadMultipleMatches() {\n         PartialConverter c = new PartialConverter() {\n             public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono) {return null;}\n+            public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Serializable.class;}\n         };\n     public void testAddPartialConverter1() {\n         PartialConverter c = new PartialConverter() {\n             public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono) {return null;}\n+            public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Boolean.class;}\n         };\n     public void testAddPartialConverter2() {\n         PartialConverter c = new PartialConverter() {\n             public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono) {return null;}\n+            public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return String.class;}\n         };\n     public void testRemovePartialConverter2() {\n         PartialConverter c = new PartialConverter() {\n             public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono) {return null;}\n+            public int[] getPartialValues(ReadablePartial partial, Object object, Chronology chrono, DateTimeFormatter parser) {return null;}\n             public Chronology getChronology(Object object, Chronology chrono) {return null;}\n             public Class getSupportedType() {return Boolean.class;}\n         };", "timestamp": 1146309836, "metainfo": ""}