{"sha": "e1e7a3b742d392bbe9d4a87b37dadd67c6f9069a", "log": "Add millis() factory [2648777]  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Duration.java\n+++ b/JodaTime/src/java/org/joda/time/Duration.java\n         return new Duration(FieldUtils.safeMultiply(seconds, DateTimeConstants.MILLIS_PER_SECOND));\n     }\n \n+    /**\n+     * Create a duration with the specified number of milliseconds.\n+     *\n+     * @param millis  the number of standard milliseconds in this duration\n+     * @return the duration, never null\n+     * @since 2.0\n+     */\n+    public static Duration millis(long millis) {\n+        if (millis == 0) {\n+            return ZERO;\n+        }\n+        return new Duration(millis);\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * Creates a duration from the given millisecond duration.\n--- a/JodaTime/src/test/org/joda/time/TestDuration_Constructors.java\n+++ b/JodaTime/src/test/org/joda/time/TestDuration_Constructors.java\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testFactory_millis_long() throws Throwable {\n+        Duration test = Duration.millis(1);\n+        assertEquals(1L, test.getMillis());\n+        \n+        test = Duration.millis(2);\n+        assertEquals(2L, test.getMillis());\n+        \n+        test = Duration.millis(0);\n+        assertSame(Duration.ZERO, test);\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testConstructor_long1() throws Throwable {\n         long length = 4 * DateTimeConstants.MILLIS_PER_DAY +\n                 5 * DateTimeConstants.MILLIS_PER_HOUR +", "timestamp": 1235952184, "metainfo": ""}