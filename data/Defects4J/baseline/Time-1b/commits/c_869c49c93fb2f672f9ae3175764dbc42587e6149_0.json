{"sha": "869c49c93fb2f672f9ae3175764dbc42587e6149", "log": "Moved out UTCProvider.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java\n import org.joda.time.tz.FixedDateTimeZone;\n import org.joda.time.tz.NameProvider;\n import org.joda.time.tz.Provider;\n+import org.joda.time.tz.UTCProvider;\n import org.joda.time.tz.ZoneInfoProvider;\n \n /**\n  * DateTimeZone represents a time zone.\n  * <p>\n  * A time zone is a system of rules to convert time from one geographic \n- * location to another. For example, Paris, France in one hour ahead of\n+ * location to another. For example, Paris, France is one hour ahead of\n  * London, England. Thus when it is 10:00 in London, it is 11:00 in Paris.\n  * <p>\n  * All time zone rules are expressed, for historical reasons, relative to\n     \n     static final long serialVersionUID = 5546345482340108586L;\n \n-    /** The UTC time zone */\n+    /** The time zone for Universal Coordinated Time */\n     public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);\n \n     private static Provider cProvider;\n         return new Stub(iID);\n     }\n \n-    static class UTCProvider implements Provider {\n-        public DateTimeZone getDateTimeZone(String id) {\n-            if (\"UTC\".equals(id)) {\n-                return UTC;\n-            }\n-            return null;\n-        }\n-\n-        public Set getAvailableIDs() {\n-            return Collections.singleton(\"UTC\");\n-        }\n-    }\n-\n     /**\n      * Used to serialize DateTimeZones by id.\n      */", "timestamp": 1071802762, "metainfo": ""}