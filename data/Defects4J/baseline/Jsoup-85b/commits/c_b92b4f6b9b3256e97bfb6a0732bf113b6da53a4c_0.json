{"sha": "b92b4f6b9b3256e97bfb6a0732bf113b6da53a4c", "log": "isEmpty() should bufferUp  isEmpty wasn't checking to see if more content was able to be read, so when called directly without a consume() could give misleading results.  Fixes #995", "commit": "\n--- a/src/main/java/org/jsoup/parser/CharacterReader.java\n+++ b/src/main/java/org/jsoup/parser/CharacterReader.java\n             return;\n \n         try {\n-            readerPos += bufPos;\n             reader.skip(bufPos);\n             reader.mark(maxBufferLen);\n-            bufLength = reader.read(charBuf);\n+            final int read = reader.read(charBuf);\n             reader.reset();\n-            bufPos = 0;\n-            bufMark = 0;\n-            bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;\n+            if (read != -1) {\n+                bufLength = read;\n+                readerPos += bufPos;\n+                bufPos = 0;\n+                bufMark = 0;\n+                bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;\n+            }\n         } catch (IOException e) {\n             throw new UncheckedIOException(e);\n         }\n      * @return true if nothing left to read.\n      */\n     public boolean isEmpty() {\n+        bufferUp();\n+        return bufPos >= bufLength;\n+    }\n+\n+    private boolean isEmptyNoBufferUp() {\n         return bufPos >= bufLength;\n     }\n \n      */\n     public char current() {\n         bufferUp();\n-        return isEmpty() ? EOF : charBuf[bufPos];\n+        return isEmptyNoBufferUp() ? EOF : charBuf[bufPos];\n     }\n \n     char consume() {\n         bufferUp();\n-        char val = isEmpty() ? EOF : charBuf[bufPos];\n+        char val = isEmptyNoBufferUp() ? EOF : charBuf[bufPos];\n         bufPos++;\n         return val;\n     }\n             else\n                 break;\n         }\n-        while (!isEmpty()) {\n+        while (!isEmptyNoBufferUp()) {\n             char c = charBuf[bufPos];\n             if (c >= '0' && c <= '9')\n                 bufPos++;\n--- a/src/test/java/org/jsoup/parser/CharacterReaderTest.java\n+++ b/src/test/java/org/jsoup/parser/CharacterReaderTest.java\n package org.jsoup.parser;\n \n+import org.junit.Ignore;\n import org.junit.Test;\n+\n+import java.io.StringReader;\n \n import static org.junit.Assert.*;\n \n         assertTrue(r.isEmpty());\n     }\n \n+    @Ignore\n+    @Test\n+    public void notEmptyAtBufferSplitPoint() {\n+        CharacterReader r = new CharacterReader(new StringReader(\"How about now\"), 3);\n+        assertEquals(\"How\", r.consumeTo(' '));\n+        assertFalse(\"Should not be empty\", r.isEmpty());\n+\n+        assertEquals(' ', r.consume());\n+        assertFalse(r.isEmpty());\n+\n+        // todo - current consume to won't expand buffer. impl buffer extension and test\n+    }\n+\n \n }", "timestamp": 1514079613, "metainfo": ""}