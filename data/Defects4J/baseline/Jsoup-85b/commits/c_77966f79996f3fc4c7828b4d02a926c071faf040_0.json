{"sha": "77966f79996f3fc4c7828b4d02a926c071faf040", "log": "Some redirect tests", "commit": "\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n                     }\n \n                     String location = res.header(LOCATION);\n-                    if (location != null && location.startsWith(\"http:/\") && location.charAt(6) != '/') // fix broken Location: http:/temp/AAG_New/en/index.php\n+                    if (location.startsWith(\"http:/\") && location.charAt(6) != '/') // fix broken Location: http:/temp/AAG_New/en/index.php\n                         location = location.substring(6);\n                     URL redir = StringUtil.resolve(req.url(), location);\n                     req.url(encodeUrl(redir));\n--- a/src/test/java/org/jsoup/integration/ConnectTest.java\n+++ b/src/test/java/org/jsoup/integration/ConnectTest.java\n import org.jsoup.integration.servlets.EchoServlet;\n import org.jsoup.integration.servlets.HelloServlet;\n import org.jsoup.integration.servlets.InterruptedServlet;\n+import org.jsoup.integration.servlets.RedirectServlet;\n import org.jsoup.integration.servlets.SlowRider;\n import org.jsoup.nodes.Document;\n import org.jsoup.nodes.Element;\n \n import static org.jsoup.integration.UrlConnectTest.browserUa;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n /**\n     private static String echoUrl;\n \n     @BeforeClass\n-    public static void setUp() throws Exception {\n+    public static void setUp() {\n         TestServer.start();\n         echoUrl = EchoServlet.Url;\n     }\n \n     @AfterClass\n-    public static void tearDown() throws Exception {\n+    public static void tearDown() {\n         TestServer.stop();\n     }\n \n     }\n \n     private static String ihVal(String key, Document doc) {\n-        return doc.select(\"th:contains(\" + key + \") + td\").first().text();\n+        final Element first = doc.select(\"th:contains(\" + key + \") + td\").first();\n+        return first != null ? first.text() : null;\n     }\n \n     @Test\n         } catch (IOException e) {\n             threw = true;\n         }\n-        assertEquals(true, threw);\n+        assertTrue(threw);\n     }\n \n     @Test\n         } catch (UncheckedIOException e) {\n             threw = true;\n         }\n-        assertEquals(true, threw);\n-\n+        assertTrue(threw);\n+    }\n+\n+    @Test public void handlesRedirect() throws IOException {\n+        Document doc = Jsoup.connect(RedirectServlet.Url)\n+            .data(RedirectServlet.LocationParam, HelloServlet.Url)\n+            .get();\n+\n+        Element p = doc.selectFirst(\"p\");\n+        assertEquals(\"Hello, World!\", p.text());\n+\n+        assertEquals(HelloServlet.Url, doc.location());\n+    }\n+\n+    @Test public void handlesEmptyRedirect() throws IOException {\n+        boolean threw = false;\n+        try {\n+            Connection.Response res = Jsoup.connect(RedirectServlet.Url)\n+                .execute();\n+        } catch (IOException e) {\n+            assertTrue(e.getMessage().contains(\"Too many redirects\"));\n+            threw = true;\n+        }\n+        assertTrue(threw);\n+    }\n+\n+    @Test public void doesNotPostFor302() throws IOException {\n+        final Document doc = Jsoup.connect(RedirectServlet.Url)\n+            .data(\"Hello\", \"there\")\n+            .data(RedirectServlet.LocationParam, EchoServlet.Url)\n+            .post();\n+\n+        assertEquals(EchoServlet.Url, doc.location());\n+        assertEquals(\"GET\", ihVal(\"Method\", doc));\n+        assertNull(ihVal(\"Hello\", doc)); // data not sent\n+    }\n+\n+    @Test public void doesPostFor307() throws IOException {\n+        final Document doc = Jsoup.connect(RedirectServlet.Url)\n+            .data(\"Hello\", \"there\")\n+            .data(RedirectServlet.LocationParam, EchoServlet.Url)\n+            .data(RedirectServlet.CodeParam, \"307\")\n+            .post();\n+\n+        assertEquals(EchoServlet.Url, doc.location());\n+        assertEquals(\"POST\", ihVal(\"Method\", doc));\n+        assertEquals(\"there\", ihVal(\"Hello\", doc));\n     }\n }\n--- /dev/null\n+++ b/src/test/java/org/jsoup/integration/servlets/RedirectServlet.java\n+package org.jsoup.integration.servlets;\n+\n+import org.jsoup.integration.TestServer;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+public class RedirectServlet extends BaseServlet {\n+    public static final String Url = TestServer.map(RedirectServlet.class);\n+    public static final String LocationParam = \"loc\";\n+    public static final String CodeParam = \"code\";\n+    private static final int DefaultCode = HttpServletResponse.SC_MOVED_TEMPORARILY;\n+\n+    @Override\n+    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws IOException {\n+        String location = req.getParameter(LocationParam);\n+        if (location == null)\n+            location = \"\";\n+\n+        int intCode = DefaultCode;\n+        String code = req.getParameter(CodeParam);\n+        if (code != null)\n+            intCode = Integer.parseInt(code);\n+\n+        res.setHeader(\"Location\", location);\n+        res.setStatus(intCode);\n+    }\n+\n+    @Override\n+    protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n+        doGet(req, res);\n+    }\n+}\n--- a/src/test/java/org/jsoup/integration/servlets/SlowRider.java\n+++ b/src/test/java/org/jsoup/integration/servlets/SlowRider.java\n \n import org.jsoup.integration.TestServer;\n \n-import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n     private static final int SleepTime = 2000;\n     public static final String MaxTimeParam = \"maxTime\";\n \n-\n     @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n+    protected void doGet(HttpServletRequest req, HttpServletResponse res) throws IOException {\n         pause(1000);\n         res.setContentType(TextHtml);\n         res.setStatus(HttpServletResponse.SC_OK);", "timestamp": 1525030942, "metainfo": ""}