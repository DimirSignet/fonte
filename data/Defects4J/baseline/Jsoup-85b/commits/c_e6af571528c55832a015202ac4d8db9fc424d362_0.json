{"sha": "e6af571528c55832a015202ac4d8db9fc424d362", "log": "Add Element#getWholeText() (#564)  * Add Element#getWhoteText()\r \r * Add test case for nested nodes\r \r * Not trim() result string", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n             }\n         }, this);\n         return accum.toString().trim();\n+    }\n+\n+    /**\n+     * Get the (unencoded) text of all children of this element, including any newlines and spaces present in the original.\n+     *\n+     * @return text\n+     */\n+    public String getWholeText(){\n+        final StringBuilder accum = new StringBuilder();\n+        new NodeTraversor(new NodeVisitor() {\n+            public void head(Node node, int depth) {\n+                if (node instanceof TextNode) {\n+                    TextNode textNode = (TextNode) node;\n+                    accum.append(textNode.getWholeText());\n+                }\n+            }\n+\n+            public void tail(Node node, int depth) {\n+            }\n+        }).traverse(this);\n+        return accum.toString();\n     }\n \n     /**\n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n \n         doc = Jsoup.parse(\"<p>Hello <br> there</p>\");\n         assertEquals(\"Hello there\", doc.text());\n+    }\n+\n+    @Test public void testGetWholeText() {\n+        Document doc = Jsoup.parse(\"<p>Hello\\nthere</p>\");\n+        assertEquals(\"Hello\\nthere\", doc.getWholeText());\n+\n+        doc = Jsoup.parse(\"<p>Hello  \\n  there</p>\");\n+        assertEquals(\"Hello  \\n  there\", doc.getWholeText());\n+\n+        doc = Jsoup.parse(\"<p>Hello  <div>\\n  there</div></p>\");\n+        assertEquals(\"Hello  \\n  there\", doc.getWholeText());\n     }\n \n     @Test public void testGetSiblings() {", "timestamp": 1511145790, "metainfo": ""}