{"sha": "bf4f99c72ba3d59486e0decb59a2b87edee4f1ff", "log": "Prep #988 for merge", "commit": "\n--- a/src/main/java/org/jsoup/parser/TokenQueue.java\n+++ b/src/main/java/org/jsoup/parser/TokenQueue.java\n             if (last == 0 || last != ESC) {\n                 if (c.equals('\\'') && c != open && !inDoubleQuote)\n                     inSingleQuote = !inSingleQuote;\n-                if (c.equals('\"') && c != open && !inSingleQuote)\n+                else if (c.equals('\"') && c != open && !inSingleQuote)\n                     inDoubleQuote = !inDoubleQuote;\n                 if (inSingleQuote || inDoubleQuote)\n                     continue;\n+\n                 if (c.equals(open)) {\n                     depth++;\n                     if (start == -1)\n--- a/src/test/java/org/jsoup/parser/TokenQueueTest.java\n+++ b/src/test/java/org/jsoup/parser/TokenQueueTest.java\n package org.jsoup.parser;\n \n-import junitparams.JUnitParamsRunner;\n-import junitparams.Parameters;\n import org.jsoup.Jsoup;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * Token queue tests.\n  */\n-@RunWith(JUnitParamsRunner.class)\n public class TokenQueueTest {\n     @Test public void chompBalanced() {\n         TokenQueue tq = new TokenQueue(\":contains(one (two) three) four\");\n         assertEquals(\" third \", data);\n     }\n \n-    @Test @Parameters(method = \"singleQuotesInsideDouble, doubleQuotesInsideSingle\")\n-    public void testNestedQuotes(String html, String selector) {\n+    @Test public void testNestedQuotes() {\n+        validateNestedQuotes(\"<html><body><a id=\\\"identifier\\\" onclick=\\\"func('arg')\\\" /></body></html>\", \"a[onclick*=\\\"('arg\\\"]\");\n+        validateNestedQuotes(\"<html><body><a id=\\\"identifier\\\" onclick=func('arg') /></body></html>\", \"a[onclick*=\\\"('arg\\\"]\");\n+        validateNestedQuotes(\"<html><body><a id=\\\"identifier\\\" onclick='func(\\\"arg\\\")' /></body></html>\", \"a[onclick*='(\\\"arg']\");\n+        validateNestedQuotes(\"<html><body><a id=\\\"identifier\\\" onclick=func(\\\"arg\\\") /></body></html>\", \"a[onclick*='(\\\"arg']\");\n+    }\n+\n+    private static void validateNestedQuotes(String html, String selector) {\n         assertEquals(\"#identifier\", Jsoup.parse(html).select(selector).first().cssSelector());\n     }\n-\n-    public Object[] singleQuotesInsideDouble() {\n-        return new Object[] {new String[] {\n-            \"<html><body><a id=\\\"identifier\\\" onclick=\\\"func('arg')\\\" /></body></html>\",\n-            \"a[onclick*=\\\"('arg\\\"]\"},\n-            new String[] {\"<html><body><a id=\\\"identifier\\\" onclick=func('arg') /></body></html>\",\n-                \"a[onclick*=\\\"('arg\\\"]\"}};\n-    }\n-\n-    public Object[] doubleQuotesInsideSingle() {\n-        return new Object[] {new String[] {\n-            \"<html><body><a id=\\\"identifier\\\" onclick='func(\\\"arg\\\")' /></body></html>\",\n-            \"a[onclick*='(\\\"arg']\"},\n-            new String[] {\"<html><body><a id=\\\"identifier\\\" onclick=func(\\\"arg\\\") /></body></html>\",\n-                \"a[onclick*='(\\\"arg']\"}};\n-    }\n }", "timestamp": 1513910176, "metainfo": ""}