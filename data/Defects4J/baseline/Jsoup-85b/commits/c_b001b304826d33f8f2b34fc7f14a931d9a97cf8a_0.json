{"sha": "b001b304826d33f8f2b34fc7f14a931d9a97cf8a", "log": "Renamed and changelog for wholeText", "commit": "\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n      * <p>\n      * For example, given HTML {@code <p>Hello  <b>there</b> now! </p>}, {@code p.text()} returns {@code \"Hello there now!\"}\n      *\n-     * @return unencoded text, or empty string if none.\n+     * @return unencoded, normalized text, or empty string if none.\n+     * @see #wholeText() if you don't want the text to be normalized.\n      * @see #ownText()\n      * @see #textNodes()\n      */\n     }\n \n     /**\n-     * Get the (unencoded) text of all children of this element, including any newlines and spaces present in the original.\n+     * Get the (unencoded) text of all children of this element, including any newlines and spaces present in the\n+     * original.\n      *\n-     * @return text\n-     */\n-    public String getWholeText(){\n+     * @return unencoded, un-normalized text\n+     * @see #text()\n+     */\n+    public String wholeText() {\n         final StringBuilder accum = new StringBuilder();\n-        new NodeTraversor(new NodeVisitor() {\n+        NodeTraversor.traverse(new NodeVisitor() {\n             public void head(Node node, int depth) {\n                 if (node instanceof TextNode) {\n                     TextNode textNode = (TextNode) node;\n \n             public void tail(Node node, int depth) {\n             }\n-        }).traverse(this);\n+        }, this);\n         return accum.toString();\n     }\n \n--- a/src/test/java/org/jsoup/nodes/ElementTest.java\n+++ b/src/test/java/org/jsoup/nodes/ElementTest.java\n         assertEquals(\"Hello there\", doc.text());\n     }\n \n-    @Test public void testGetWholeText() {\n-        Document doc = Jsoup.parse(\"<p>Hello\\nthere</p>\");\n-        assertEquals(\"Hello\\nthere\", doc.getWholeText());\n+    @Test public void testWholeText() {\n+        Document doc = Jsoup.parse(\"<p> Hello\\nthere &nbsp;  </p>\");\n+        assertEquals(\" Hello\\nthere \u00a0  \", doc.wholeText());\n \n         doc = Jsoup.parse(\"<p>Hello  \\n  there</p>\");\n-        assertEquals(\"Hello  \\n  there\", doc.getWholeText());\n+        assertEquals(\"Hello  \\n  there\", doc.wholeText());\n \n         doc = Jsoup.parse(\"<p>Hello  <div>\\n  there</div></p>\");\n-        assertEquals(\"Hello  \\n  there\", doc.getWholeText());\n+        assertEquals(\"Hello  \\n  there\", doc.wholeText());\n     }\n \n     @Test public void testGetSiblings() {", "timestamp": 1511146321, "metainfo": ""}