{"sha": "e38dfd44829e13ee83fd62bfe937580f5a998c11", "log": "Detect charset from pseudo XML declaration when in HTML parser mode  Fixes #1009", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n \n import org.jsoup.UncheckedIOException;\n import org.jsoup.internal.ConstrainableInputStream;\n+import org.jsoup.nodes.Comment;\n import org.jsoup.nodes.Document;\n import org.jsoup.nodes.Element;\n+import org.jsoup.nodes.Node;\n import org.jsoup.nodes.XmlDeclaration;\n import org.jsoup.parser.Parser;\n import org.jsoup.select.Elements;\n             }\n \n             // look for <?xml encoding='ISO-8859-1'?>\n-            if (foundCharset == null && doc.childNodeSize() > 0 && doc.childNode(0) instanceof XmlDeclaration) {\n-                XmlDeclaration prolog = (XmlDeclaration) doc.childNode(0);\n-                if (prolog.name().equals(\"xml\"))\n-                    foundCharset = prolog.attr(\"encoding\");\n+            if (foundCharset == null && doc.childNodeSize() > 0) {\n+                Node first = doc.childNode(0);\n+                XmlDeclaration decl = null;\n+                if (first instanceof XmlDeclaration)\n+                    decl = (XmlDeclaration) first;\n+                else if (first instanceof Comment) {\n+                    Comment comment = (Comment) first;\n+                    if (comment.isXmlDeclaration())\n+                        decl = comment.asXmlDeclaration();\n+                }\n+                if (decl != null) {\n+                    if (decl.name().equalsIgnoreCase(\"xml\"))\n+                        foundCharset = decl.attr(\"encoding\");\n+                }\n             }\n             foundCharset = validateCharset(foundCharset);\n             if (foundCharset != null && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode. (case insensitive check here to match how validate works)\n--- a/src/main/java/org/jsoup/nodes/Comment.java\n+++ b/src/main/java/org/jsoup/nodes/Comment.java\n package org.jsoup.nodes;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.parser.Parser;\n \n import java.io.IOException;\n \n     public String toString() {\n         return outerHtml();\n     }\n+\n+    /**\n+     * Check if this comment looks like an XML Declaration.\n+     * @return true if it looks like, maybe, it's an XML Declaration.\n+     */\n+    public boolean isXmlDeclaration() {\n+        String data = getData();\n+        return (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\")));\n+    }\n+\n+    /**\n+     * Attempt to cast this comment to an XML Declaration note.\n+     * @return an XML declaration if it could be parsed as one, null otherwise.\n+     */\n+    public XmlDeclaration asXmlDeclaration() {\n+        String data = getData();\n+        Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri(), Parser.xmlParser());\n+        XmlDeclaration decl = null;\n+        if (doc.childNodeSize() > 0) {\n+            Element el = doc.child(0);\n+            decl = new XmlDeclaration(doc.getParser().settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n+            decl.attributes().addAll(el.attributes());\n+        }\n+        return decl;\n+    }\n }\n--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java\n package org.jsoup.parser;\n \n-import org.jsoup.Jsoup;\n import org.jsoup.helper.Validate;\n import org.jsoup.nodes.CDataNode;\n import org.jsoup.nodes.Comment;\n     void insert(Token.Comment commentToken) {\n         Comment comment = new Comment(commentToken.getData());\n         Node insert = comment;\n-        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n+        if (commentToken.bogus && comment.isXmlDeclaration()) {\n+            // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n             // so we do a bit of a hack and parse the data as an element to pull the attributes out\n-            String data = comment.getData();\n-            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n-                Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri, Parser.xmlParser());\n-                if (doc.childNodeSize() > 0) {\n-                    Element el = doc.child(0);\n-                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n-                    insert.attributes().addAll(el.attributes());\n-                } // else, we couldn't parse it as a decl, so leave as a comment\n-            }\n+            XmlDeclaration decl = comment.asXmlDeclaration(); // else, we couldn't parse it as a decl, so leave as a comment\n+            if (decl != null)\n+                insert = decl;\n         }\n         insertNode(insert);\n     }\n--- a/src/test/java/org/jsoup/helper/DataUtilTest.java\n+++ b/src/test/java/org/jsoup/helper/DataUtilTest.java\n         Document doc = Jsoup.parse(in, null, \"http://example.com\");\n         assertEquals(\"OK\", doc.head().select(\"title\").text());\n     }\n+\n+    @Test\n+    public void supportsXmlCharsetDeclaration() throws IOException {\n+        String encoding = \"iso-8859-1\";\n+        InputStream soup = new ByteArrayInputStream((\n+            \"<?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?>\" +\n+                \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\" +\n+                \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" lang=\\\"en\\\" xml:lang=\\\"en\\\">Hell\u00f6 W\u00f6rld!</html>\"\n+        ).getBytes(encoding));\n+\n+        Document doc = Jsoup.parse(soup, null, \"\");\n+        assertEquals(\"Hell\u00f6 W\u00f6rld!\", doc.body().text());\n+    }\n }", "timestamp": 1524970731, "metainfo": ""}