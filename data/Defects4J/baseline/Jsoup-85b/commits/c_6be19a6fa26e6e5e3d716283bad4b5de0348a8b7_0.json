{"sha": "6be19a6fa26e6e5e3d716283bad4b5de0348a8b7", "log": "If a charset cannot encode, flip to one that can  Fixes #1007", "commit": "\n--- a/src/main/java/org/jsoup/helper/DataUtil.java\n+++ b/src/main/java/org/jsoup/helper/DataUtil.java\n                 // io exception when parsing (not seen before because reading the stream as we go)\n                 throw e.ioException();\n             }\n-            doc.outputSettings().charset(charsetName);\n+            Charset charset = Charset.forName(charsetName);\n+            doc.outputSettings().charset(charset);\n+            if (!charset.canEncode()) {\n+                // some charsets can read but not encode; switch to an encodable charset and update the meta el\n+                doc.charset(Charset.forName(defaultCharset));\n+            }\n         }\n         input.close();\n         return doc;\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n import org.junit.Ignore;\n import org.junit.Test;\n \n+import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n import java.util.List;\n \n       assertEquals(\"A Certain Kind of Test\", doc.head().select(\"title\").text());\n   }\n+\n+    @Test public void fallbackToUtfIfCantEncode() throws IOException {\n+        // that charset can't be encoded, so make sure we flip to utf\n+\n+        String in = \"<html><meta charset=\\\"ISO-2022-CN\\\"/>One</html>\";\n+        Document doc = Jsoup.parse(new ByteArrayInputStream(in.getBytes()), null, \"\");\n+\n+        assertEquals(\"UTF-8\", doc.charset().name());\n+        assertEquals(\"One\", doc.text());\n+\n+        String html = doc.outerHtml();\n+        assertEquals(\"<html><head><meta charset=\\\"UTF-8\\\"></head><body>One</body></html>\", TextUtil.stripNewlines(html));\n+    }\n }", "timestamp": 1525038171, "metainfo": ""}