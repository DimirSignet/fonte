{"sha": "e9885f060d59dc2bd7351c5bd654a27cbe6de69a", "log": "More cdata coverage", "commit": "\n--- a/src/test/java/org/jsoup/parser/HtmlParserTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlParserTest.java\n         assertEquals(1, doc.body().childNodeSize());\n     }\n \n+    @Test public void handleCDataInText() {\n+        String h = \"<p>One <![CDATA[Two <&]]> Three</p>\";\n+        Document doc = Jsoup.parse(h);\n+        Element p = doc.selectFirst(\"p\");\n+\n+        List<Node> nodes = p.childNodes();\n+        assertEquals(\"One \", ((TextNode) nodes.get(0)).getWholeText());\n+        assertEquals(\"Two <&\", ((TextNode) nodes.get(1)).getWholeText());\n+        assertEquals(\"Two <&\", ((CDataNode) nodes.get(1)).getWholeText());\n+        assertEquals(\" Three\", ((TextNode) nodes.get(2)).getWholeText());\n+\n+        assertEquals(h, p.outerHtml());\n+    }\n+\n+    @Test public void cdataNodesAreTextNodes() {\n+        String h = \"<p>One <![CDATA[ Two <& ]]> Three</p>\";\n+        Document doc = Jsoup.parse(h);\n+        Element p = doc.selectFirst(\"p\");\n+\n+        List<TextNode> nodes = p.textNodes();\n+        assertEquals(\"One \", nodes.get(0).text());\n+        assertEquals(\" Two <& \", nodes.get(1).text());\n+        assertEquals(\" Three\", nodes.get(2).text());\n+    }\n+\n     @Test public void handlesInvalidStartTags() {\n         String h = \"<div>Hello < There <&amp;></div>\"; // parse to <div {#text=Hello < There <&>}>\n         Document doc = Jsoup.parse(h);", "timestamp": 1511634781, "metainfo": ""}