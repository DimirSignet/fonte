{"sha": "ae99d7ebaa7ce4e8446150ce4ccbad4646433f8f", "log": "Table parse performance tweak", "commit": "\n--- a/src/main/java/org/jsoup/parser/CharacterReader.java\n+++ b/src/main/java/org/jsoup/parser/CharacterReader.java\n     }\n \n     private void bufferUp() {\n-        if (bufPos < bufSplitPoint)\n+        final int pos = bufPos;\n+        if (pos < bufSplitPoint)\n             return;\n \n         try {\n-            reader.skip(bufPos);\n+            reader.skip(pos);\n             reader.mark(maxBufferLen);\n             final int read = reader.read(charBuf);\n             reader.reset();\n             if (read != -1) {\n                 bufLength = read;\n-                readerPos += bufPos;\n+                readerPos += pos;\n                 bufPos = 0;\n                 bufMark = 0;\n                 bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;\n         final int start = bufPos;\n         final int remaining = bufLength;\n         final char[] val = charBuf;\n-\n-        OUTER: while (bufPos < remaining) {\n-            for (char c : chars) {\n-                if (val[bufPos] == c)\n+        final int charLen = chars.length;\n+        int pos = bufPos;\n+        int i;\n+\n+        OUTER: while (pos < remaining) {\n+            for (i = 0; i < charLen; i++) {\n+                if (val[pos] == chars[i])\n                     break OUTER;\n             }\n-            bufPos++;\n-        }\n-\n-        return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";\n+            pos++;\n+        }\n+\n+        bufPos = pos;\n+        return pos > start ? cacheString(charBuf, stringCache, start, pos -start) : \"\";\n     }\n \n     String consumeToAnySorted(final char... chars) {\n         final int start = bufPos;\n         final int remaining = bufLength;\n         final char[] val = charBuf;\n-\n-        while (bufPos < remaining) {\n-            if (Arrays.binarySearch(chars, val[bufPos]) >= 0)\n-                break;\n-            bufPos++;\n-        }\n-\n-        return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";\n+        int pos = bufPos;\n+\n+        while (pos < remaining) {\n+            if (Arrays.binarySearch(chars, val[pos]) >= 0)\n+                break;\n+            pos++;\n+        }\n+        bufPos = pos;\n+        return bufPos > start ? cacheString(charBuf, stringCache, start, pos -start) : \"\";\n     }\n \n     String consumeData() {\n         final int start = bufPos;\n         final int remaining = bufLength;\n         final char[] val = charBuf;\n-\n-        while (bufPos < remaining) {\n-            final char c = val[bufPos];\n+        int pos = bufPos;\n+\n+        while (pos < remaining) {\n+            final char c = val[pos];\n             if (c == '\\t'|| c ==  '\\n'|| c ==  '\\r'|| c ==  '\\f'|| c ==  ' '|| c ==  '/'|| c ==  '>'|| c == '<' || c ==  TokeniserState.nullChar)\n                 break;\n-            bufPos++;\n-        }\n-\n-        return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";\n+            pos++;\n+        }\n+\n+        bufPos = pos;\n+        return pos > start ? cacheString(charBuf, stringCache, start, pos -start) : \"\";\n     }\n \n     String consumeToEnd() {\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n                 Token.EndTag endTag = t.asEndTag();\n                 String name = endTag.normalName();\n \n-                if (StringUtil.in(name, \"td\", \"th\")) {\n+                if (StringUtil.inSorted(name, Constants.InCellNames)) {\n                     if (!tb.inTableScope(name)) {\n                         tb.error(this);\n                         tb.transition(InRow); // might not be in scope if empty: <td /> and processing fake end tag\n                     tb.popStackToClose(name);\n                     tb.clearFormattingElementsToLastMarker();\n                     tb.transition(InRow);\n-                } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\")) {\n+                } else if (StringUtil.inSorted(name, Constants.InCellBody)) {\n                     tb.error(this);\n                     return false;\n-                } else if (StringUtil.in(name, \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\")) {\n+                } else if (StringUtil.inSorted(name, Constants.InCellTable)) {\n                     if (!tb.inTableScope(name)) {\n                         tb.error(this);\n                         return false;\n                     return anythingElse(t, tb);\n                 }\n             } else if (t.isStartTag() &&\n-                    StringUtil.in(t.asStartTag().normalName(),\n-                            \"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\")) {\n+                    StringUtil.inSorted(t.asStartTag().normalName(), Constants.InCellCol)) {\n                 if (!(tb.inTableScope(\"td\") || tb.inTableScope(\"th\"))) {\n                     tb.error(this);\n                     return false;\n             \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};\n         static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};\n         static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};\n+        static final String[] InCellNames = new String[]{\"td\", \"th\"};\n+        static final String[] InCellBody = new String[]{\"body\", \"caption\", \"col\", \"colgroup\", \"html\"};\n+        static final String[] InCellTable = new String[]{ \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};\n+        static final String[] InCellCol = new String[]{\"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};\n     }\n }\n--- a/src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java\n+++ b/src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java\n             Constants.InBodyStartDrop,\n             Constants.InBodyEndClosers,\n             Constants.InBodyEndAdoptionFormatters,\n-            Constants.InBodyEndTableFosters\n+            Constants.InBodyEndTableFosters,\n+            Constants.InCellNames,\n+            Constants.InCellBody,\n+            Constants.InCellTable,\n+            Constants.InCellCol,\n         };\n \n         for (String[] array : arrays) {", "timestamp": 1525631049, "metainfo": ""}