{"sha": "e3d3cadad8b866d1d076c1a91eb88875d1de9959", "log": "don't try to decrypt in tests if no strong crypto is available  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n \n import java.io.File;\n import java.io.IOException;\n+import javax.crypto.Cipher;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n import org.apache.commons.compress.AbstractTestCase;\n \n public class SevenZFileTest extends AbstractTestCase {\n     }\n \n     public void test7zDecryptUnarchive() throws Exception {\n-        test7zUnarchive(getFile(\"bla.encrypted.7z\"), \"foo\".getBytes(\"UTF-16LE\"));\n+        if (isStrongCryptoAvailable()) {\n+            test7zUnarchive(getFile(\"bla.encrypted.7z\"), \"foo\".getBytes(\"UTF-16LE\"));\n+        }\n     }\n \n     private void test7zUnarchive(File f) throws Exception {\n             sevenZFile.close();\n         }\n     }\n+\n+    private static boolean isStrongCryptoAvailable() {\n+        try {\n+            Cipher cipher = Cipher.getInstance(\"AES/CBC/NoPadding\");\n+            cipher.init(Cipher.DECRYPT_MODE,\n+                        new SecretKeySpec(new byte[32], \"AES\"),\n+                        new IvParameterSpec(new byte[16]));\n+            return true;\n+        } catch (Exception e) {\n+        }\n+        return false;\n+    }\n }", "timestamp": 1382525851, "metainfo": ""}