{"sha": "a933173f486614073b68b6c0a6ef09a9c72c94fc", "log": "Only assume a TAR is a TAR if it at least contains one 512 byte block.  COMPRESS-171  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n                 return new TarArchiveInputStream(in);\n             }\n             // COMPRESS-117 - improve auto-recognition\n+            if (signatureLength >= 512) {\n             try {\n                 TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));\n                 tais.getNextEntry();\n                 // autodetection, simply not a TAR\n                 // ignored\n             }\n+            }\n         } catch (IOException e) {\n             throw new ArchiveException(\"Could not use reset and mark operations.\", e);\n         }\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.compress.archivers;\n+\n+import java.io.ByteArrayInputStream;\n+import org.junit.Test;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+public class ArchiveStreamFactoryTest {\n+\n+    /**\n+     * see https://issues.apache.org/jira/browse/COMPRESS-171\n+     */\n+    @Test\n+    public void shortTextFilesAreNoTARs() throws Exception {\n+        try {\n+            new ArchiveStreamFactory()\n+                .createArchiveInputStream(new ByteArrayInputStream(\"This certainly is not a tar archive, really, no kidding\".getBytes()));\n+            fail(\"created an input stream for a non-archive\");\n+        } catch (ArchiveException ae) {\n+            assertTrue(ae.getMessage().startsWith(\"No Archiver found\"));\n+        }\n+    }\n+\n+}", "timestamp": 1327870610, "metainfo": ""}