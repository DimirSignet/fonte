{"sha": "bb2200b087e604986922414878a1db36e2dcd86e", "log": "Replaced StringBuffers with StringBuilders  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n  * while ((cpioEntry = cpioIn.getNextEntry()) != null) {\n  *     System.out.println(cpioEntry.getName());\n  *     int tmp;\n- *     StringBuffer buf = new StringBuffer();\n+ *     StringBuilder buf = new StringBuilder();\n  *     while ((tmp = cpIn.read()) != -1) {\n  *         buf.append((char) tmp);\n  *     }\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n \n     private void writeAsciiLong(final long number, final int length,\n             final int radix) throws IOException {\n-        StringBuffer tmp = new StringBuffer();\n+        StringBuilder tmp = new StringBuilder();\n         String tmpStr;\n         if (radix == 16) {\n             tmp.append(Long.toHexString(number));\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n \n     private String stripTo7Bits(String name) {\n         final int length = name.length();\n-        StringBuffer result = new StringBuffer(length);\n+        StringBuilder result = new StringBuilder(length);\n         for (int i = 0; i < length; i++) {\n             char stripped = (char) (name.charAt(i) & 0x7F);\n             if (stripped != 0) { // would be read as Trailing null\n         out.flush();\n     }\n \n-    /** {@inheritDoc} */\n     @Override\n     public ArchiveEntry createArchiveEntry(File inputFile, String entryName)\n             throws IOException {\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n \n             public String decode(byte[] buffer) {\n                 final int length = buffer.length;\n-                StringBuffer result = new StringBuffer(length);\n+                StringBuilder result = new StringBuilder(length);\n \n                 for (int i = 0; i < length; ++i) {\n                     byte b = buffer[i];\n--- a/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java\n      * @return the representation of the entry\n      */\n     public static String toString(ArchiveEntry entry){\n-        StringBuffer sb = new StringBuffer();\n+        StringBuilder sb = new StringBuilder();\n         sb.append(entry.isDirectory()? 'd' : '-');// c.f. \"ls -l\" output\n         String size = Long.toString((entry.getSize()));\n         sb.append(' ');", "timestamp": 1375884430, "metainfo": ""}