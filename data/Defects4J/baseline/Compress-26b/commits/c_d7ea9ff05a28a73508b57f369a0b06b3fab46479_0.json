{"sha": "d7ea9ff05a28a73508b57f369a0b06b3fab46479", "log": "Check a data descriptor actually uses the signature before skipping too many bytes if it doesn't.  COMPRESS-101  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n         }\n \n         if (hasDataDescriptor) {\n-            readFully(new byte[4 * WORD]);\n+            byte[] sig = new byte[WORD];\n+            readFully(sig);\n+            if (ZipLong.DD_SIG.equals(new ZipLong(sig))) {\n+                readFully(new byte[3 * WORD]);\n+            } else {\n+                // data descriptor without signature, we've already\n+                // read the CRC\n+                readFully(new byte[2 * WORD]);\n+            }\n         }\n \n         inf.reset();\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n     /**\n      * data descriptor signature\n      */\n-    static final byte[] DD_SIG = ZipLong.getBytes(0X08074B50L);\n+    static final byte[] DD_SIG = ZipLong.DD_SIG.getBytes();\n     /**\n      * central file header signature\n      */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n \n     /** Local File Header Signature */\n     public static final ZipLong LFH_SIG = new ZipLong(0X04034B50L);\n+\n+    /**\n+     * Data Descriptor signature\n+     * @since Commons Compress 1.1\n+     */\n+    public static final ZipLong DD_SIG = new ZipLong(0X08074B50L);\n \n     /**\n      * Create instance from a number.", "timestamp": 1268408144, "metainfo": ""}