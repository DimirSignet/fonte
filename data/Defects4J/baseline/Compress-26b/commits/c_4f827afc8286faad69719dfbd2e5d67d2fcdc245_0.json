{"sha": "4f827afc8286faad69719dfbd2e5d67d2fcdc245", "log": "Cache the ArchiveStreamFactory  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n  * Checks several ChangeSet business logics.\n  */\n public final class ChangeSetTestCase extends AbstractTestCase {\n+    \n+    private ArchiveStreamFactory factory = new ArchiveStreamFactory();\n+\n     /**\n      * Tries to delete the folder \"bla\" from a zip file. This should result in\n      * the deletion of bla/*, which actually means bla/test4.xml should be\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n         try {\n \n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n \n             final File input = getFile(\"bla.zip\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"zip\", is);\n+            ais = factory.createArchiveInputStream(\"zip\", is);\n \n             temp = File.createTempFile(\"test\", \".zip\");\n             temp.deleteOnExit();\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\",\n+            out = factory.createArchiveOutputStream(\"zip\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n \n             final File input = getFile(\"bla.tar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"tar\", is);\n+            ais = factory.createArchiveInputStream(\"tar\", is);\n \n             temp = new File(dir, \"bla.tar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"tar\",\n+            out = factory.createArchiveOutputStream(\"tar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n \n             final File input = getFile(\"bla.jar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"jar\", is);\n+            ais = factory.createArchiveInputStream(\"jar\", is);\n \n             temp = new File(dir, \"bla.jar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"jar\",\n+            out = factory.createArchiveOutputStream(\"jar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n \n             final File input = getFile(\"bla.tar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"tar\", is);\n+            ais = factory.createArchiveInputStream(\"tar\", is);\n \n             temp = new File(dir, \"bla.tar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"tar\",\n+            out = factory.createArchiveOutputStream(\"tar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n         expected.add(\"test1.xml\");\n         expected.add(\"testdata/test.txt\");\n         // TODO: automatic detection of TAR archive temp fails here\n-        final ArchiveInputStream in = new ArchiveStreamFactory()\n-                .createArchiveInputStream(\"tar\", new FileInputStream(temp));\n+        final ArchiveInputStream in = factory.createArchiveInputStream(\"tar\", new FileInputStream(temp));\n         this.checkArchiveContent(in, expected);\n     }\n \n \n             final File input = getFile(\"bla.jar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory()\n-                    .createArchiveInputStream(\"jar\", is);\n+            ais = factory.createArchiveInputStream(\"jar\", is);\n \n             temp = new File(dir, \"bla.jar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"jar\",\n+            out = factory.createArchiveOutputStream(\"jar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n \n             final File input = getFile(\"bla.ar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory().createArchiveInputStream(\"ar\", is);\n+            ais = factory.createArchiveInputStream(\"ar\", is);\n \n             temp = new File(dir, \"bla.ar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"ar\",\n+            out = factory.createArchiveOutputStream(\"ar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);\n \n             final File input = getFile(\"bla.ar\");\n             final InputStream is = new FileInputStream(input);\n-            ais = new ArchiveStreamFactory().createArchiveInputStream(\"ar\", is);\n+            ais = factory.createArchiveInputStream(\"ar\", is);\n \n             temp = new File(dir, \"bla.ar\");\n-            out = new ArchiveStreamFactory().createArchiveOutputStream(\"ar\",\n+            out = factory.createArchiveOutputStream(\"ar\",\n                     new FileOutputStream(temp));\n \n             changes.perform(ais, out);", "timestamp": 1238335535, "metainfo": ""}