{"sha": "bb54f6d755fb6c39f6e6ffe62b85d96148b85fd9", "log": "PKZip integration tests.  COMPRESS-36  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java\n         read5GBOfZerosImpl(get5GBZerosFileGeneratedByWinZIP(), \"5GB_of_Zeros\");\n     }\n \n+    @Test public void read5GBOfZerosGeneratedByPKZipUsingInputStream()\n+        throws Throwable {\n+        read5GBOfZerosImpl(get5GBZerosFileGeneratedByPKZip(),\n+                           \"zip6/5GB_of_Zeros\");\n+    }\n+\n     @Test public void read100KFilesUsingInputStream() throws Throwable {\n         read100KFilesImpl(get100KFileFile());\n     }\n         read100KFilesImpl(get100KFileFileGeneratedByWinZIP());\n     }\n \n+    @Test public void read100KFilesGeneratedByPKZipUsingInputStream()\n+        throws Throwable {\n+        read100KFilesImpl(get100KFileFileGeneratedByPKZip());\n+    }\n+\n     @Test public void read5GBOfZerosUsingZipFile() throws Throwable {\n         read5GBOfZerosUsingZipFileImpl(get5GBZerosFile(), \"5GB_of_Zeros\");\n     }\n                                        \"5GB_of_Zeros\");\n     }\n \n+    @Test public void read5GBOfZerosGeneratedByPKZipUsingZipFile()\n+        throws Throwable {\n+        read5GBOfZerosUsingZipFileImpl(get5GBZerosFileGeneratedByPKZip(),\n+                                       \"zip6/5GB_of_Zeros\");\n+    }\n+\n     @Test public void read100KFilesUsingZipFile() throws Throwable {\n         read100KFilesUsingZipFileImpl(get100KFileFile());\n     }\n     @Test public void read100KFilesGeneratedByWinZIPUsingZipFile()\n         throws Throwable {\n         read100KFilesUsingZipFileImpl(get100KFileFileGeneratedByWinZIP());\n+    }\n+\n+    @Test public void read100KFilesGeneratedByPKZipUsingZipFile()\n+        throws Throwable {\n+        read100KFilesUsingZipFileImpl(get100KFileFileGeneratedByPKZip());\n     }\n \n     private static ZipOutputTest write100KFiles() {\n     }\n \n     private static File get5GBZerosFileGeneratedByWinZIP() throws Throwable {\n-        return getFile(\"/5GB_of_Zeros_7ZIP.zip\");\n+        return getFile(\"/5GB_of_Zeros_WinZip.zip\");\n+    }\n+\n+    private static File get5GBZerosFileGeneratedByPKZip() throws Throwable {\n+        return getFile(\"/5GB_of_Zeros_PKZip.zip\");\n     }\n \n     private static File get100KFileFile() throws Throwable {\n \n     private static File get100KFileFileGeneratedByWinZIP() throws Throwable {\n         return getFile(\"/100k_Files_WinZIP.zip\");\n+    }\n+\n+    private static File get100KFileFileGeneratedByPKZip() throws Throwable {\n+        return getFile(\"/100k_Files_PKZip.zip\");\n     }\n \n     private static File getTempFile(String testName) throws Throwable {\n         try {\n             zin = new ZipArchiveInputStream(fin);\n             ZipArchiveEntry zae = zin.getNextZipEntry();\n+            while (zae.isDirectory()) {\n+                zae = zin.getNextZipEntry();\n+            }\n             assertEquals(expectedName, zae.getName());\n             byte[] buf = new byte[1024 * 1024];\n             long read = 0;\n             Enumeration<ZipArchiveEntry> e = zf.getEntries();\n             assertTrue(e.hasMoreElements());\n             ZipArchiveEntry zae = e.nextElement();\n+            while (zae.isDirectory()) {\n+                zae = e.nextElement();\n+            }\n             assertEquals(expectedName, zae.getName());\n             assertEquals(FIVE_BILLION, zae.getSize());\n             byte[] buf = new byte[1024 * 1024];", "timestamp": 1318591868, "metainfo": ""}