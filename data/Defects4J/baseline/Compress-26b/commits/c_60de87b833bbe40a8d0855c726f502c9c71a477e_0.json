{"sha": "60de87b833bbe40a8d0855c726f502c9c71a477e", "log": "Fix Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n      * @param archiverName the archive name, i.e. \"ar\", \"zip\", \"tar\", \"jar\" or \"cpio\"\n      * @param in the input stream\n      * @return the archive input stream\n-     * @throws ArchiveException\n-     * @throws IllegalArgumentException if the archiver name is null or not known\n+     * @throws ArchiveException if the archiver name is not known\n+     * @throws IllegalArgumentException if the archiver name or stream is null\n      */\n     public ArchiveInputStream createArchiveInputStream(\n             final String archiverName, final InputStream in)\n      * @param archiverName the archive name, i.e. \"ar\", \"zip\", \"tar\", \"jar\" or \"cpio\"\n      * @param out the output stream\n      * @return the archive output stream\n-     * @throws ArchiveException\n-     * @throws IllegalArgumentException if the archiver name is null or not known\n+     * @throws ArchiveException if the archiver name is not known\n+     * @throws IllegalArgumentException if the archiver name or stream is null\n      */\n     public ArchiveOutputStream createArchiveOutputStream(\n             final String archiverName, final OutputStream out)\n      * \n      * @param in the input stream\n      * @return the archive input stream\n-     * @throws ArchiveException\n-     * @throws IllegalArgumentException if the archiver name is null or not known\n+     * @throws ArchiveException if the archiver name is not known\n+     * @throws IllegalArgumentException if the stream is null or does not support mark\n      */\n     public ArchiveInputStream createArchiveInputStream(final InputStream in)\n             throws ArchiveException {", "timestamp": 1236997138, "metainfo": ""}