{"sha": "cc3d4186a7488af04ac096d9047d7694e9f18892", "log": "now ar and cpio really use seconds internally and read/write them as such.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n     private final long lastModified;\n     private final long length;\n \n+    /**\n+     * Create a new instance using a couple of default values.\n+     *\n+     * <p>Sets userId and groupId to 0, the octal file mode to 644 and\n+     * the last modified time to the current time.</p>\n+     *\n+     * @param name name of the entry\n+     * @param length length of the entry in bytes\n+     */\n     public ArArchiveEntry(String name, long length) {\n-        this(name, length, 0, 0, DEFAULT_MODE, System.currentTimeMillis());\n+        this(name, length, 0, 0, DEFAULT_MODE,\n+             System.currentTimeMillis() / 1000);\n     }\n \n-    public ArArchiveEntry(String name, long length, int userId, int groupId, int mode, long lastModified) {\n+    /**\n+     * Create a new instance.\n+     *\n+     * @param name name of the entry\n+     * @param length length of the entry in bytes\n+     * @param userId numeric user id\n+     * @param groupId numeric group id\n+     * @param mode file mode\n+     * @param lastModified last modified time in seconds since the epoch\n+     */\n+    public ArArchiveEntry(String name, long length, int userId, int groupId,\n+                          int mode, long lastModified) {\n         this.name = name;\n         this.length = length;\n         this.userId = userId;\n         this.lastModified = lastModified;\n     }\n \n+    /**\n+     * Create a new instance using the attributes of the given file\n+     */\n     public ArArchiveEntry(File inputFile, String entryName) {\n         // TODO sort out mode\n-        this(entryName, inputFile.isFile() ? inputFile.length() : 0, 0, 0, 0, inputFile.lastModified());\n+        this(entryName, inputFile.isFile() ? inputFile.length() : 0,\n+             0, 0, 0, inputFile.lastModified() / 1000);\n     }\n \n     public long getSize() {\n         return mode;\n     }\n \n+    /**\n+     * Last modified time in seconds since the epoch.\n+     */\n     public long getLastModified() {\n         return lastModified;\n     }\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n         if (temp.endsWith(\"/\")) {\n             temp = temp.substring(0, temp.length() - 1);\n         }\n-        currentEntry = new ArArchiveEntry(temp, Long.parseLong(new String(length).trim()));\n+        currentEntry = new ArArchiveEntry(temp, asLong(length), asInt(userid),\n+                                          asInt(groupid), asInt(filemode),\n+                                          asLong(lastmodified));\n         return currentEntry;\n+    }\n+\n+    private long asLong(byte[] input) {\n+        return Long.parseLong(new String(input).trim());\n+    }\n+\n+    private int asInt(byte[] input) {\n+        return Integer.parseInt(new String(input).trim());\n     }\n \n     /*\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n             closeArchiveEntry(); // close previous entry\n         }\n         if (e.getTime() == -1) {\n-            e.setTime(System.currentTimeMillis());\n+            e.setTime(System.currentTimeMillis() / 1000);\n         }\n \n         final short format = e.getFormat();", "timestamp": 1249139062, "metainfo": ""}