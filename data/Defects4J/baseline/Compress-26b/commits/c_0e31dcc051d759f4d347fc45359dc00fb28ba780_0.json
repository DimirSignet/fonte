{"sha": "0e31dcc051d759f4d347fc45359dc00fb28ba780", "log": "this should take care of regions with DST in January as well  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n                         switch (year) {\n                             case 2107:\n                                 // Zip time is okay up to 2107.\n-                                assertEquals(year  + \"-01-01/00:00:02 +0000\", zipTime);\n+                                assertEquals(year + \"-01-01/00:00:02 +0000\", zipTime);\n                                 // But the X5455 data has overflowed:\n                                 assertEquals(\"1970-11-24/17:31:45 +0000\", modTime);\n                                 assertEquals(\"1970-11-24/17:31:47 +0000\", accTime);\n     private static Date adjustFromGMTToExpectedOffset(Date from) {\n         Calendar cal = Calendar.getInstance();\n         cal.setTime(from);\n-        // we may even need to take DST into account for the southern hemisphere\n         cal.add(Calendar.MILLISECOND, cal.get(Calendar.ZONE_OFFSET));\n+        if (cal.getTimeZone().inDaylightTime(from)) {\n+            cal.add(Calendar.MILLISECOND, cal.get(Calendar.DST_OFFSET));\n+        }\n         cal.add(Calendar.HOUR, 8);\n         return cal.getTime();\n     }", "timestamp": 1357926249, "metainfo": ""}