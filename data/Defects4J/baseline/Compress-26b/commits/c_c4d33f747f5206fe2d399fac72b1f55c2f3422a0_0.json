{"sha": "c4d33f747f5206fe2d399fac72b1f55c2f3422a0", "log": "EOL  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/utils/CharsetsTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/CharsetsTest.java\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.commons.compress.utils;\n-\n-import java.nio.charset.Charset;\n-\n-import junit.framework.Assert;\n-\n-import org.junit.Test;\n-\n-/**\n- * Sanity checks for {@link Charsets}.\n- * \n- * @version $Id$\n- */\n-public class CharsetsTest {\n-\n-    @Test\n-    public void testToCharset() {\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((String) null));\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((Charset) null));\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset(Charset.defaultCharset()));\n-        Assert.assertEquals(Charset.forName(\"UTF-8\"), Charsets.toCharset(Charset.forName(\"UTF-8\")));\n-    }\n-\n-    @Test\n-    public void testIso8859_1() {\n-        Assert.assertEquals(\"ISO-8859-1\", Charsets.ISO_8859_1.name());\n-    }\n-\n-    @Test\n-    public void testUsAscii() {\n-        Assert.assertEquals(\"US-ASCII\", Charsets.US_ASCII.name());\n-    }\n-\n-    @Test\n-    public void testUtf16() {\n-        Assert.assertEquals(\"UTF-16\", Charsets.UTF_16.name());\n-    }\n-\n-    @Test\n-    public void testUtf16Be() {\n-        Assert.assertEquals(\"UTF-16BE\", Charsets.UTF_16BE.name());\n-    }\n-\n-    @Test\n-    public void testUtf16Le() {\n-        Assert.assertEquals(\"UTF-16LE\", Charsets.UTF_16LE.name());\n-    }\n-\n-    @Test\n-    public void testUtf8() {\n-        Assert.assertEquals(\"UTF-8\", Charsets.UTF_8.name());\n-    }\n-\n-}\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.compress.utils;\n+\n+import java.nio.charset.Charset;\n+\n+import junit.framework.Assert;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Sanity checks for {@link Charsets}.\n+ * \n+ * @version $Id$\n+ */\n+public class CharsetsTest {\n+\n+    @Test\n+    public void testToCharset() {\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((String) null));\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((Charset) null));\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset(Charset.defaultCharset()));\n+        Assert.assertEquals(Charset.forName(\"UTF-8\"), Charsets.toCharset(Charset.forName(\"UTF-8\")));\n+    }\n+\n+    @Test\n+    public void testIso8859_1() {\n+        Assert.assertEquals(\"ISO-8859-1\", Charsets.ISO_8859_1.name());\n+    }\n+\n+    @Test\n+    public void testUsAscii() {\n+        Assert.assertEquals(\"US-ASCII\", Charsets.US_ASCII.name());\n+    }\n+\n+    @Test\n+    public void testUtf16() {\n+        Assert.assertEquals(\"UTF-16\", Charsets.UTF_16.name());\n+    }\n+\n+    @Test\n+    public void testUtf16Be() {\n+        Assert.assertEquals(\"UTF-16BE\", Charsets.UTF_16BE.name());\n+    }\n+\n+    @Test\n+    public void testUtf16Le() {\n+        Assert.assertEquals(\"UTF-16LE\", Charsets.UTF_16LE.name());\n+    }\n+\n+    @Test\n+    public void testUtf8() {\n+        Assert.assertEquals(\"UTF-8\", Charsets.UTF_8.name());\n+    }\n+\n+}", "timestamp": 1333529015, "metainfo": ""}