{"sha": "d17c68da28348187afe2b52d560218917107401f", "log": "Add some more sequence tests - current causes test failures  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java\n package org.apache.commons.compress.archivers;\n \n import java.io.ByteArrayOutputStream;\n+import java.io.File;\n import java.io.IOException;\n import java.io.OutputStream;\n \n         aos1.close();\n         try {\n             aos1.finish();\n-            aos1.finish();\n-            fail(\"After putArchive should follow closeArchive\");\n+            fail(\"finish() cannot follow close()\");\n         } catch (IOException io) {\n             // Exception expected\n         }\n     }\n+    \n+    public void testCallSequenceAr() throws Exception{\n+        doCallSequence(\"Ar\");\n+    }\n+\n+    public void testCallSequenceCpio() throws Exception{\n+        doCallSequence(\"Cpio\");\n+    }\n+\n+    public void testCallSequenceJar() throws Exception{\n+        doCallSequence(\"Jar\");\n+    }\n+\n+    public void testCallSequenceTar() throws Exception{\n+        doCallSequence(\"Tar\");\n+    }\n+\n+    public void testCallSequenceZip() throws Exception{\n+        doCallSequence(\"Zip\");\n+    }\n+\n+    private void doCallSequence(String archiveType) throws Exception {\n+        OutputStream out1 = new ByteArrayOutputStream();\n+        File dummy = getFile(\"test1.xml\"); // need a real file\n+        \n+        ArchiveOutputStream aos1;\n+        aos1 = factory.createArchiveOutputStream(archiveType, out1);\n+        aos1.putArchiveEntry(aos1.createArchiveEntry(dummy, \"dummy\"));\n+        aos1.closeArchiveEntry();\n+        aos1.close(); // omitted finish\n+\n+        aos1 = factory.createArchiveOutputStream(archiveType, out1);\n+        try {\n+            aos1.closeArchiveEntry();\n+            fail(\"Should have raised IOException - closeArchiveEntry() called before putArchiveEntry()\");\n+        } catch (IOException expected) {\n+        }\n+\n+        aos1.putArchiveEntry(aos1.createArchiveEntry(dummy, \"dummy\"));\n+        \n+        try {\n+            aos1.finish();\n+            fail(\"Should have raised IOException - finish() called before closeArchiveEntry()\");\n+        } catch (IOException expected) {\n+        }\n+        try {\n+            aos1.close();\n+            fail(\"Should have raised IOException - close() called before closeArchiveEntry()\");\n+        } catch (IOException expected) {\n+        }\n+        aos1.closeArchiveEntry();\n+        try {\n+            aos1.closeArchiveEntry();\n+            fail(\"Should have raised IOException - closeArchiveEntry() called with no open entry\");\n+        } catch (IOException expected) {\n+        }\n+        aos1.finish();\n+        aos1.close();\n+        try {\n+            aos1.finish();\n+            fail(\"Should have raised IOException - finish() called after close()\");\n+        } catch (IOException expected) {\n+        }\n+    }\n }", "timestamp": 1240860632, "metainfo": ""}