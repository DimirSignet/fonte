{"sha": "10fdfd5513309798cdff0e62e4662f97f5799559", "log": "buffer input and add a test that skips a large amount of bytes by winding forward to the end of the archive  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n+import java.io.BufferedInputStream;\n+import java.io.InputStream;\n import java.util.Random;\n \n import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n         readFileBiggerThan8GByte(\"/8.posix.tar.gz\");\n     }\n \n-    private void readFileBiggerThan8GByte(String name) throws Exception {\n-        GzipCompressorInputStream in = null;\n+    @Test\n+    public void readFileHeadersOfArchiveBiggerThan8GByte() throws Exception {\n+        InputStream in = null;\n+        GzipCompressorInputStream gzin = null;\n         TarArchiveInputStream tin = null;\n         try {\n-            in =\n-                new GzipCompressorInputStream(BigFilesIT.class\n-                                              .getResourceAsStream(name));\n-            tin = new TarArchiveInputStream(in);\n+            in = new BufferedInputStream(BigFilesIT.class\n+                                         .getResourceAsStream(\"/8.posix.tar.gz\")\n+                                         );\n+            gzin = new GzipCompressorInputStream(in);\n+            tin = new TarArchiveInputStream(gzin);\n+            TarArchiveEntry e = tin.getNextTarEntry();\n+            assertNotNull(e);\n+            assertNull(tin.getNextTarEntry());\n+        } finally {\n+            if (tin != null) {\n+                tin.close();\n+            }\n+            if (gzin != null) {\n+                gzin.close();\n+            }\n+            if (in != null) {\n+                in.close();\n+            }\n+        }\n+    }\n+\n+    private void readFileBiggerThan8GByte(String name) throws Exception {\n+        InputStream in = null;\n+        GzipCompressorInputStream gzin = null;\n+        TarArchiveInputStream tin = null;\n+        try {\n+            in = new BufferedInputStream(BigFilesIT.class\n+                                         .getResourceAsStream(name));\n+            gzin = new GzipCompressorInputStream(in);\n+            tin = new TarArchiveInputStream(gzin);\n             TarArchiveEntry e = tin.getNextTarEntry();\n             assertNotNull(e);\n             assertEquals(8200l * 1024 * 1024, e.getSize());\n             if (tin != null) {\n                 tin.close();\n             }\n+            if (gzin != null) {\n+                gzin.close();\n+            }\n             if (in != null) {\n                 in.close();\n             }", "timestamp": 1375380276, "metainfo": ""}