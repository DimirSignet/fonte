{"sha": "3161093afffc6958a0139f1861371ae201e4f3f7", "log": "Don't close dump's input when the archive has been consumed  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n             // check if this is an end-of-volume marker.\n             if (DumpArchiveConstants.SEGMENT_TYPE.END == active.getHeaderType()) {\n                 hasHitEOF = true;\n-                isClosed = true;\n-                raw.close();\n \n                 return null;\n             }\n     public int read(byte[] buf, int off, int len) throws IOException {\n         int totalRead = 0;\n \n-        if (isClosed || (entryOffset >= entrySize)) {\n+        if (hasHitEOF || isClosed || (entryOffset >= entrySize)) {\n             return -1;\n         }\n \n--- a/src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStreamTest.java\n  */\n package org.apache.commons.compress.archivers.dump;\n \n+import static org.junit.Assert.assertArrayEquals;\n+\n import java.io.FileInputStream;\n+import java.io.InputStream;\n \n import org.apache.commons.compress.AbstractTestCase;\n import org.apache.commons.compress.archivers.ArchiveException;\n         }\n     }\n \n+    public void testConsumesArchiveCompletely() throws Exception {\n+        InputStream is = DumpArchiveInputStreamTest.class\n+            .getResourceAsStream(\"/archive_with_trailer.dump\");\n+        DumpArchiveInputStream dump = new DumpArchiveInputStream(is);\n+        while (dump.getNextDumpEntry() != null) {\n+            // just consume the archive\n+            ;\n+        }\n+        byte[] expected = new byte[] {\n+            'H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!', '\\n'\n+        };\n+        byte[] actual = new byte[expected.length];\n+        is.read(actual);\n+        assertArrayEquals(expected, actual);\n+    }\n+\n }", "timestamp": 1358710350, "metainfo": ""}