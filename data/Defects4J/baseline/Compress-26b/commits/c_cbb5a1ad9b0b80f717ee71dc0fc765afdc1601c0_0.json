{"sha": "cbb5a1ad9b0b80f717ee71dc0fc765afdc1601c0", "log": "COMPRESS-256 bad calculation of LZMA dictionary sizes  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java\n             byte propsByte = coder.properties[0];\n             long dictSize = coder.properties[1];\n             for (int i = 1; i < 4; i++) {\n-                dictSize |= (coder.properties[i + 1] << (8 * i));\n+                dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);\n             }\n             if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n                 throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n         }\n     }\n \n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-256\"\n+     */\n+    public void testCompressedHeaderWithNonDefaultDictionarySize() throws Exception {\n+        SevenZFile sevenZFile = new SevenZFile(getFile(\"COMPRESS-256.7z\"));\n+        try {\n+            int count = 0;\n+            while (sevenZFile.getNextEntry() != null) {\n+                count++;\n+            }\n+            assertEquals(446, count);\n+        } finally {\n+            sevenZFile.close();\n+        }\n+    }\n+\n     private void test7zUnarchive(File f, byte[] password) throws Exception {\n         SevenZFile sevenZFile = new SevenZFile(f, password);\n         try {", "timestamp": 1390367614, "metainfo": ""}