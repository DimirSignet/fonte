{"sha": "281591e0e7de97667596e358d937383b01efffcd", "log": "make DumpArchiveEntry's getName consistent with other implementations by adding a trailing / for directories.  Strip leading . if present.  COMPRESS-132  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java\n     // this information is available from standard index.\n     private TapeSegmentHeader header = new TapeSegmentHeader();\n     private String simpleName;\n+    private String originalName;\n \n     // this information is available from QFA index\n     private int volume;\n      * @param simpleName actual filename.\n      */\n     public DumpArchiveEntry(String name, String simpleName) {\n-        this.name = name;\n+        setName(name);\n         this.simpleName = simpleName;\n     }\n \n     }\n \n     /**\n+     * Returns the unmodified name of the entry.\n+     * @return the name of the entry.\n+     */\n+    String getOriginalName() {\n+        return originalName;\n+    }\n+\n+    /**\n      * Sets the name of the entry.\n      */\n-    public void setName(String name) {\n+    public final void setName(String name) {\n+        this.originalName = name;\n+        if (name != null) {\n+            if (\".\".equals(name) || name.startsWith(\"./\")) {\n+                name = name.substring(1);\n+            }\n+            if (isDirectory() && !name.endsWith(\"/\")) {\n+                name += \"/\";\n+            }\n+        }\n         this.name = name;\n     }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n         queue = new PriorityQueue<DumpArchiveEntry>(10,\n                 new Comparator<DumpArchiveEntry>() {\n                     public int compare(DumpArchiveEntry p, DumpArchiveEntry q) {\n-                        if ((p.getName() == null) || (q.getName() == null)) {\n+                        if ((p.getOriginalName() == null) || (q.getOriginalName() == null)) {\n                             return Integer.MAX_VALUE;\n                         }\n \n-                        return p.getName().compareTo(q.getName());\n+                        return p.getOriginalName().compareTo(q.getOriginalName());\n                     }\n                 });\n     }\n--- a/src/test/java/org/apache/commons/compress/archivers/DumpTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/DumpTestCase.java\n \n     private void checkDumpArchive(final File f) throws Exception {\n         ArrayList<String> expected = new ArrayList<String>();\n-        expected.add(\".\");\n-        expected.add(\"./lost+found\");\n-        expected.add(\"./test1.xml\");\n-        expected.add(\"./test2.xml\");\n+        expected.add(\"/\");\n+        expected.add(\"/lost+found/\");\n+        expected.add(\"/test1.xml\");\n+        expected.add(\"/test2.xml\");\n         final InputStream is = new FileInputStream(f);\n         try {\n             checkArchiveContent(new DumpArchiveInputStream(is),", "timestamp": 1313592548, "metainfo": ""}