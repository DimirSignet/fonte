{"sha": "7be83c02122feac8eb6de64c05d63342fa5eea03", "log": "COMPRESS-270 two more cases where readFully should be used  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n     private ArArchiveEntry readGNUStringTable(byte[] length) throws IOException {\n         int bufflen = asInt(length); // Assume length will fit in an int\n         namebuffer = new byte[bufflen];\n-        int read = read(namebuffer, 0, bufflen);\n+        int read = IOUtils.readFully(this, namebuffer, 0, bufflen);\n         if (read != bufflen){\n             throw new IOException(\"Failed to read complete // record: expected=\"\n                                   + bufflen + \" read=\" + read);\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java\n     public byte[] readRecord() throws IOException {\n         byte[] result = new byte[recordSize];\n \n+        // the read implementation will loop internally as long as\n+        // input is available\n         if (-1 == read(result, 0, result.length)) {\n             throw new ShortFileException();\n         }\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n import java.io.InputStream;\n \n import org.apache.commons.compress.compressors.CompressorInputStream;\n+import org.apache.commons.compress.utils.IOUtils;\n \n /**\n  * CompressorInputStream for the raw Snappy format.\n      * @return True if the decompressed data should be flushed\n      */\n     private boolean expandLiteral(final int length) throws IOException {\n-        int bytesRead = in.read(decompressBuf, writeIndex, length);\n+        int bytesRead = IOUtils.readFully(in, decompressBuf, writeIndex, length);\n         count(bytesRead);\n         if (length != bytesRead) {\n             throw new IOException(\"Premature end of stream\");", "timestamp": 1396024080, "metainfo": ""}