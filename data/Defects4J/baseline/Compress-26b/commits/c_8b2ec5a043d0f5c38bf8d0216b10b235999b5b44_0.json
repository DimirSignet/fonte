{"sha": "8b2ec5a043d0f5c38bf8d0216b10b235999b5b44", "log": "make sure 'too big' messages for fields that can't be represented in ustar headers are consistent  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n             paxHeaders.put(\"SCHILY.devminor\",\n                            String.valueOf(entry.getDevMinor()));\n         }\n-        if (entry.getMode() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"mode '\" + entry.getMode()\n+        failForBigNumber(\"mode\", entry.getMode(), TarConstants.MAXID);\n+    }\n+\n+    private void failForBigNumbers(TarArchiveEntry entry) {\n+        failForBigNumber(\"entry size\", entry.getSize(), TarConstants.MAXSIZE);\n+        failForBigNumber(\"group id\", entry.getGroupId(), TarConstants.MAXID);\n+        failForBigNumber(\"last modification time\",\n+                         entry.getModTime().getTime() / 1000,\n+                         TarConstants.MAXSIZE);\n+        failForBigNumber(\"user id\", entry.getUserId(), TarConstants.MAXID);\n+        failForBigNumber(\"mode\", entry.getMode(), TarConstants.MAXID);\n+        failForBigNumber(\"major device number\", entry.getDevMajor(),\n+                         TarConstants.MAXID);\n+        failForBigNumber(\"minor device number\", entry.getDevMinor(),\n+                         TarConstants.MAXID);\n+    }\n+\n+    private void failForBigNumber(String field, long value, long maxValue) {\n+        if (value < 0 || value > maxValue) {\n+            throw new RuntimeException(field + \" '\" + value\n                                        + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n-        }\n-    }\n-\n-    private void failForBigNumbers(TarArchiveEntry entry) {\n-        if (entry.getSize() > TarConstants.MAXSIZE) {\n-            throw new RuntimeException(\"file size '\" + entry.getSize()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXSIZE + \" bytes)\");\n-        }\n-        if (entry.getGroupId() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"group id '\" + entry.getGroupId()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n-        }\n-        final long mtime =  entry.getModTime().getTime() / 1000;\n-        if (mtime < 0 || mtime > TarConstants.MAXSIZE) {\n-            throw new RuntimeException(\"last modification time '\"\n-                                       + entry.getModTime()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXSIZE + \" bytes)\");\n-        }\n-        if (entry.getUserId() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"user id '\" + entry.getUserId()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n-        }\n-        if (entry.getMode() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"mode '\" + entry.getMode()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n-        }\n-        if (entry.getDevMajor() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"major device number '\"\n-                                       + entry.getDevMajor()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n-        }\n-        if (entry.getDevMinor() > TarConstants.MAXID) {\n-            throw new RuntimeException(\"minor device number '\"\n-                                       + entry.getDevMinor()\n-                                       + \"' is too big ( > \"\n-                                       + TarConstants.MAXID + \" bytes)\");\n+                                       + maxValue + \" )\");\n         }\n     }\n }", "timestamp": 1331314141, "metainfo": ""}