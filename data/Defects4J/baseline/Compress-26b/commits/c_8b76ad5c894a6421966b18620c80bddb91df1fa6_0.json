{"sha": "8b76ad5c894a6421966b18620c80bddb91df1fa6", "log": "Added tests for the ERROR and TRUNCATE long file modes of TarArchiveOutputStream  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n         tin.close();\n     }\n \n+    public void testWriteLongDirectoryNameErrorMode() throws Exception {\n+        String n = \"01234567890123456789012345678901234567890123456789\"\n+                + \"01234567890123456789012345678901234567890123456789\"\n+                + \"01234567890123456789012345678901234567890123456789/\";\n+\n+        try {\n+            TarArchiveEntry t = new TarArchiveEntry(n);\n+            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+            TarArchiveOutputStream tos = new TarArchiveOutputStream(bos, \"ASCII\");\n+            tos.setLongFileMode(TarArchiveOutputStream.LONGFILE_ERROR);\n+            tos.putArchiveEntry(t);\n+            tos.closeArchiveEntry();\n+            tos.close();\n+            \n+            fail(\"Truncated name didn't throw an exception\");\n+        } catch (RuntimeException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testWriteLongDirectoryNameTruncateMode() throws Exception {\n+        String n = \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789/\";\n+        TarArchiveEntry t = new TarArchiveEntry(n);\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos, \"ASCII\");\n+        tos.setLongFileMode(TarArchiveOutputStream.LONGFILE_TRUNCATE);\n+        tos.putArchiveEntry(t);\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        byte[] data = bos.toByteArray();\n+        TarArchiveInputStream tin =\n+            new TarArchiveInputStream(new ByteArrayInputStream(data));\n+        TarArchiveEntry e = tin.getNextTarEntry();\n+        assertEquals(\"Entry name\", n.substring(0, TarConstants.NAMELEN) + \"/\", e.getName());\n+        assertTrue(\"The entry is not a directory\", e.isDirectory());\n+        tin.close();\n+    }\n+\n     /**\n      * @see \"https://issues.apache.org/jira/browse/COMPRESS-203\"\n      */", "timestamp": 1375867054, "metainfo": ""}