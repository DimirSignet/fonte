{"sha": "cb893e84fc383ec42c89bd6c5a4a60d785f2ec80", "log": "Add some tar long name archive tests  ", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarReadTests.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \n+ */\n+\n+package org.apache.commons.compress.archivers.tar;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.compress.AbstractTestCase;\n+\n+/**\n+ * Test that can read various tar file examples.\n+ * \n+ * The class uses nested suites in order to be able to name the test after the file name,\n+ * as JUnit does not allow one to change the display name of a test.\n+ */\n+public class TarReadTests extends AbstractTestCase {\n+    \n+    private static final ClassLoader classLoader = TarReadTests.class.getClassLoader();\n+\n+    private File file;\n+\n+    private static final ArrayList fileList = new ArrayList();\n+    \n+    public TarReadTests(String name) {\n+        super(name);\n+    }\n+    \n+    private TarReadTests(String name, File file){\n+        super(name);\n+        this.file = file;\n+    }\n+    \n+    public static TestSuite suite() throws IOException{\n+        TestSuite suite = new TestSuite(\"TarReadTests\");\n+        File arcdir =new File(classLoader.getResource(\"tarlongpath\").getFile());\n+        assertTrue(arcdir.exists());\n+        File listing= new File(arcdir,\"files.txt\");\n+        assertTrue(\"File listing is readable\",listing.canRead());\n+        BufferedReader br = new BufferedReader(new FileReader(listing));\n+        String line;\n+        while ((line=br.readLine())!=null){\n+            if (line.startsWith(\"#\")){\n+                continue;\n+            }\n+            fileList.add(line);\n+        }\n+        br.close();\n+        File[]files=arcdir.listFiles();\n+        for (int i=0; i<files.length; i++){\n+            final File file = files[i];\n+            if (file.getName().endsWith(\".txt\")){\n+                continue;\n+            }\n+            // Appears to be the only way to give the test a variable name\n+            TestSuite namedSuite = new TestSuite(file.getName());\n+            Test test = new TarReadTests(\"testArchive\", file);\n+            namedSuite.addTest(test);\n+            suite.addTest(namedSuite);\n+        }        \n+        return suite;\n+    }\n+    \n+    public void testArchive() throws Exception{\n+        ArrayList expected=(ArrayList) fileList.clone();\n+        checkArchiveContent(new TarArchiveInputStream(new FileInputStream(file)), expected);\n+    }\n+}", "timestamp": 1273502257, "metainfo": ""}