{"sha": "7fce030afc06b59a952aef8745eb92f875db1bb3", "log": "fixed codeflow  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n      * @param len The length of the encoded filename or commentin\n      * <code>bytes</code>.\n      */\n-    protected AbstractUnicodeExtraField(String text, byte[] bytes, int off,\n-                                        int len) {\n+    protected AbstractUnicodeExtraField(String text, byte[] bytes, int off, int len) {\n         CRC32 crc32 = new CRC32();\n         crc32.update(bytes, off, len);\n         nameCRC32 = crc32.getValue();\n         try {\n             unicodeName = text.getBytes(\"UTF-8\");\n         } catch (UnsupportedEncodingException e) {\n-            throw new RuntimeException(\"FATAL: UTF-8 encoding not supported.\",\n-                                       e);\n+            throw new RuntimeException(\"FATAL: UTF-8 encoding not supported.\", e);\n         }\n     }\n \n      * file.\n      */\n     protected AbstractUnicodeExtraField(String text, byte[] bytes) {\n-\n         this(text, bytes, 0, bytes.length);\n     }\n \n         throws ZipException {\n \n         if (length < 5) {\n-            throw new ZipException(\"UniCode path extra data must have at least\"\n-                                   + \" 5 bytes.\");\n+            throw new ZipException(\"UniCode path extra data must have at least 5 bytes.\");\n         }\n \n         int version = buffer[offset];", "timestamp": 1240852972, "metainfo": ""}