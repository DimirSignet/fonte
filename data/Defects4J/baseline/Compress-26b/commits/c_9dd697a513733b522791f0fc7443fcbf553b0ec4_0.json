{"sha": "9dd697a513733b522791f0fc7443fcbf553b0ec4", "log": "simplify location of test files  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/AbstractTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/AbstractTestCase.java\n         dir = File.createTempFile(\"dir\", \"\");\n         dir.delete();\n         dir.mkdir();\n-\n-        addURL(new File(\"src/test/resources\").toURL());\n-    }\n-\n-    protected File getFile(String path) throws IOException {\n-        URL url = getClass().getResource(path);\n-        if (url == null) {\n-            throw new java.io.FileNotFoundException(path + \" doesn't exist\");\n-        }\n-        try {\n-            return new File(new URI(url.toString()));\n-        } catch (java.net.URISyntaxException ex) {\n-            // impossible since URL.toString() should always yield a valid URI\n-            throw new IOException(ex.getMessage());\n-        }\n+    }\n+\n+    protected File getFile(String path) {\n+        return new File(\"src/test/resources\", path);\n     }\n \n     protected void tearDown() throws Exception {\n         dir.delete();\n         dir = null;\n-    }\n-\n-    /**\n-     * Adds a URL to the classpath. This method is necessary when running junit\n-     * tests from within eclipse.\n-     * \n-     * @param url\n-     *            the url to add\n-     * @throws Exception\n-     *             if an error occurs\n-     */\n-    public void addURL(URL url) throws Exception {\n-        URLClassLoader classLoader = (URLClassLoader) ClassLoader\n-            .getSystemClassLoader();\n-        Class clazz = URLClassLoader.class;\n-\n-        Method method = clazz.getDeclaredMethod(\"addURL\",\n-                                                new Class[] { URL.class });\n-        method.setAccessible(true);\n-        method.invoke(classLoader, new Object[] { url });\n     }\n \n     /**", "timestamp": 1236349380, "metainfo": ""}