{"sha": "5c136a3f9089fd8b787258462b40cb057195b5d6", "log": "prove parsing of PAX headers works correctly.  COMPRESS-167  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n                     // make sure GC doesn't close \"this\" before we are done\n                 }\n             };\n+        Map<String, String> headers = null;\n+        try {\n+            headers = parsePaxHeaders(br);\n+        } finally {\n+            // NO-OP but makes FindBugs happy\n+            br.close();\n+        }\n+\n+        getNextEntry(); // Get the actual file entry\n+        applyPaxHeadersToCurrentEntry(headers);\n+    }\n+\n+    Map<String, String> parsePaxHeaders(Reader br) throws IOException {\n         Map<String, String> headers = new HashMap<String, String>();\n         // Format is \"length keyword=value\\n\";\n-        try {\n             while(true){ // get length\n                 int ch;\n                 int len = 0;\n                     break;\n                 }\n             }\n-        } finally {\n-            // NO-OP but makes FindBugs happy\n-            br.close();\n-        }\n-\n-        getNextEntry(); // Get the actual file entry\n+        return headers;\n+    }\n+\n+    private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n         /*\n          * The following headers are defined for Pax.\n          * atime, ctime, mtime, charset: cannot use these without changing TarArchiveEntry fields\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.commons.compress.archivers.tar;\n+\n+import java.io.StringReader;\n+import java.util.Map;\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+public class TarArchiveInputStreamTest {\n+\n+    @Test\n+    public void readSimplePaxHeader() throws Exception {\n+        Map<String, String> headers = new TarArchiveInputStream(null)\n+            .parsePaxHeaders(new StringReader(\"30 atime=1321711775.972059463\\n\"));\n+        assertEquals(1, headers.size());\n+        assertEquals(\"1321711775.972059463\", headers.get(\"atime\"));\n+    }\n+\n+    @Test\n+    public void readPaxHeaderWithEmbeddedNewline() throws Exception {\n+        Map<String, String> headers = new TarArchiveInputStream(null)\n+            .parsePaxHeaders(new StringReader(\"28 comment=line1\\nline2\\nand3\\n\"));\n+        assertEquals(1, headers.size());\n+        assertEquals(\"line1\\nline2\\nand3\", headers.get(\"comment\"));\n+    }\n+}", "timestamp": 1323270087, "metainfo": ""}