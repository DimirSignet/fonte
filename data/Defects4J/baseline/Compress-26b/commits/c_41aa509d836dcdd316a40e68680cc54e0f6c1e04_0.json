{"sha": "41aa509d836dcdd316a40e68680cc54e0f6c1e04", "log": "COMPRESS-93: Support for alternative ZIP compression methods  Fix the Maven221MultiVolumeTest failure by not using skip() to skip bytes. The FileInputStream implementation of skip() will happily skip past the end of the file, so we never see the EOFException that Maven221MultiVolumeTest expects to see when closing a truncated entry.  Also added an explicit test case for the ability to skip entries with unsupported compression methods.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n                 && !hasDataDescriptor) {\n             long remaining = current.getCompressedSize() - bytesReadFromStream;\n             while (remaining > 0) {\n-                long n = in.skip(remaining);\n-                if (n == 0) { // skip() may return 0, use read() as a fallback\n-                    n = in.read(buf, 0, (int) Math.min(buf.length, remaining));\n-                }\n+                long n = in.read(buf, 0, (int) Math.min(buf.length, remaining));\n                 if (n < 0) {\n                     throw new EOFException(\n                             \"Truncated ZIP entry: \" + current.getName());\n--- a/src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java\n \n import org.apache.commons.compress.AbstractTestCase;\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n+import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\n import org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\n import org.apache.commons.compress.archivers.zip.ZipFile;\n import org.apache.commons.compress.utils.IOUtils;\n         ZipFile moby = new ZipFile(getFile(\"moby.zip\"));\n         assertFalse(moby.getEntry(\"README\").isSupportedCompressionMethod());\n         moby.close();\n+    }\n+\n+    /**\n+     * Test case for being able to skip an entry in an \n+     * {@link ZipArchiveInputStream} even if the compression method of that\n+     * entry is unsupported.\n+     *\n+     * @see <a href=\"https://issues.apache.org/jira/browse/COMPRESS-93\"\n+     *        >COMPRESS-93</a>\n+     */\n+    public void testSkipEntryWithUnsupportedCompressionMethod()\n+            throws IOException {\n+        ZipArchiveInputStream zip =\n+            new ZipArchiveInputStream(new FileInputStream(getFile(\"moby.zip\")));\n+        try {\n+            ZipArchiveEntry entry = zip.getNextZipEntry();\n+            assertEquals(\"README\", entry.getName());\n+            assertFalse(entry.isSupportedCompressionMethod());\n+            try {\n+                assertNull(zip.getNextZipEntry());\n+            } catch (IOException e) {\n+                fail(\"COMPRESS-93: Unable to skip an unsupported zip entry\");\n+            }\n+        } finally {\n+            zip.close();\n+        }\n     }\n \n     /**", "timestamp": 1260734879, "metainfo": ""}