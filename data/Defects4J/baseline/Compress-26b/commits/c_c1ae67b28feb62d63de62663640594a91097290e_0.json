{"sha": "c1ae67b28feb62d63de62663640594a91097290e", "log": "re-enable tests disabled by accident.  7ZIP uses CP437 by default  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java\n         testFileRoundtrip(UTF_8, true);\n     }\n \n-    public void xtestUtf8FileRoundtripNoEFS() throws IOException {\n+    public void testUtf8FileRoundtripNoEFS() throws IOException {\n         testFileRoundtrip(UTF_8, false);\n     }\n \n-    public void xtestCP437FileRoundtrip() throws IOException {\n+    public void testCP437FileRoundtrip() throws IOException {\n         testFileRoundtrip(CP437, false);\n     }\n \n-    public void xtestASCIIFileRoundtrip() throws IOException {\n+    public void testASCIIFileRoundtrip() throws IOException {\n         testFileRoundtrip(US_ASCII, false);\n     }\n \n-    /**\n+    /*\n      * 7-ZIP created archive, uses EFS to signal UTF-8 filenames.\n+     *\n+     * 7-ZIP doesn't use EFS for strings that can be encoded in CP437\n+     * - which is true for OIL_BARREL_TXT.\n      */\n-    public void testReadEFS() throws IOException, URISyntaxException {\n+    public void testRead7ZipArchive() throws IOException, URISyntaxException {\n         URL zip = getClass().getResource(\"/utf8-7zip-test.zip\");\n         File archive = new File(new URI(zip.toString()));\n         ZipFile zf = null;\n         try {\n-            zf = new ZipFile(archive);\n+            zf = new ZipFile(archive, CP437);\n             assertNotNull(zf.getEntry(ASCII_TXT));\n             assertNotNull(zf.getEntry(EURO_FOR_DOLLAR_TXT));\n+            assertNotNull(zf.getEntry(OIL_BARREL_TXT));\n         } finally {\n             ZipFile.closeQuietly(zf);\n         }", "timestamp": 1235380920, "metainfo": ""}