{"sha": "3306ac9693a117af79c815caf13587ad4322d46e", "log": "make PMD a bit happier  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java\n      * @return The next bit (0 or 1) or -1 if the end of the stream has been reached\n      */\n     int nextBit() throws IOException {\n-        if (bitCacheSize == 0) {\n-            if (!fillCache()) {\n-                return -1;\n-            }\n+        if (bitCacheSize == 0 && !fillCache()) {\n+            return -1;\n         }\n \n         int bit = (int) (bitCache & 1); // extract the right most bit\n      * @return The value formed by the n bits, or -1 if the end of the stream has been reached\n      */\n     int nextBits(final int n) throws IOException {\n-        if (bitCacheSize < n) {\n-            if (!fillCache()) {\n-                return -1;\n-            }\n+        if (bitCacheSize < n && !fillCache()) {\n+            return -1;\n         }\n \n         final int bits = (int) (bitCache & MASKS[n]); // extract the right most bits", "timestamp": 1387550640, "metainfo": ""}