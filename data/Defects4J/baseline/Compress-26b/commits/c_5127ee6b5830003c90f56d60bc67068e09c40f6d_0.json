{"sha": "5127ee6b5830003c90f56d60bc67068e09c40f6d", "log": "COMPRESS-227 return Iterable rather than Iterator in new methods  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n      * the archive's central directory.\n      *\n      * @param name name of the entry.\n-     * @return the Iterator<ZipArchiveEntry> corresponding to the\n+     * @return the Iterable<ZipArchiveEntry> corresponding to the\n      * given name\n      * @since 1.6\n      */\n-    public Iterator<ZipArchiveEntry> getEntries(String name) {\n+    public Iterable<ZipArchiveEntry> getEntries(String name) {\n         List<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);\n-        return entriesOfThatName != null ? entriesOfThatName.iterator()\n-            : Collections.<ZipArchiveEntry>emptyList().iterator();\n+        return entriesOfThatName != null ? entriesOfThatName\n+            : Collections.<ZipArchiveEntry>emptyList();\n     }\n \n     /**\n      * appear within the archive.\n      *\n      * @param name name of the entry.\n-     * @return the Iterator<ZipArchiveEntry> corresponding to the\n+     * @return the Iterable<ZipArchiveEntry> corresponding to the\n      * given name\n      * @since 1.6\n      */\n-    public Iterator<ZipArchiveEntry> getEntriesInPhysicalOrder(String name) {\n+    public Iterable<ZipArchiveEntry> getEntriesInPhysicalOrder(String name) {\n         ZipArchiveEntry[] entriesOfThatName = new ZipArchiveEntry[0];\n         if (nameMap.containsKey(name)) {\n             entriesOfThatName = nameMap.get(name).toArray(entriesOfThatName);\n             Arrays.sort(entriesOfThatName, OFFSET_COMPARATOR);\n         }\n-        return Arrays.asList(entriesOfThatName).iterator();\n+        return Arrays.asList(entriesOfThatName);\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n         assertNotNull(zf.getInputStream(ze));\n \n         int numberOfEntries = 0;\n-        for (Iterator<ZipArchiveEntry> it = zf.getEntries(\"test1.txt\");\n-             it.hasNext(); ) {\n+        for (ZipArchiveEntry entry : zf.getEntries(\"test1.txt\")) {\n             numberOfEntries++;\n-            ze = it.next();\n-            assertNotNull(zf.getInputStream(ze));\n+            assertNotNull(zf.getInputStream(entry));\n         }\n         assertEquals(2, numberOfEntries);\n     }", "timestamp": 1370319725, "metainfo": ""}