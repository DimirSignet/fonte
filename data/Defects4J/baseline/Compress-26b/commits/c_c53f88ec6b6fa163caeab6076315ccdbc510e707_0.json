{"sha": "c53f88ec6b6fa163caeab6076315ccdbc510e707", "log": "COMPRESS-147 test file big enough to make the Snappy buffers slide  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java\n import java.util.Arrays;\n \n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n import org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream;\n import org.apache.commons.compress.utils.IOUtils;\n \n         });\n     }\n \n+    /**\n+     * Something big enough to make buffers slide.\n+     */\n+    public void testLoremIpsum() throws Exception {\n+        final FileInputStream isSz = new FileInputStream(getFile(\"lorem-ipsum.txt.sz\"));\n+        final File outputSz = new File(dir, \"lorem-ipsum.1\");\n+        final File outputGz = new File(dir, \"lorem-ipsum.2\");\n+        try {\n+            CompressorInputStream in = new FramedSnappyCompressorInputStream(isSz);\n+            FileOutputStream out = null;\n+            try {\n+                out = new FileOutputStream(outputSz);\n+                IOUtils.copy(in, out);\n+            } finally {\n+                if (out != null) {\n+                    out.close();\n+                }\n+                in.close();\n+            }\n+            final FileInputStream isGz = new FileInputStream(getFile(\"lorem-ipsum.txt.gz\"));\n+            try {\n+                in = new GzipCompressorInputStream(isGz);\n+                try {\n+                    out = new FileOutputStream(outputGz);\n+                    IOUtils.copy(in, out);\n+                } finally {\n+                    if (out != null) {\n+                        out.close();\n+                    }\n+                    in.close();\n+                }\n+            } finally {\n+                isGz.close();\n+            }\n+        } finally {\n+            isSz.close();\n+        }\n+\n+        final FileInputStream sz = new FileInputStream(outputSz);\n+        try {\n+            FileInputStream gz = new FileInputStream(outputGz);\n+            try {\n+                assertTrue(Arrays.equals(IOUtils.toByteArray(sz),\n+                                         IOUtils.toByteArray(gz)));\n+            } finally {\n+                gz.close();\n+            }\n+        } finally {\n+            sz.close();\n+        }\n+    }\n+\n     private void testUnarchive(StreamWrapper<CompressorInputStream> wrapper) throws Exception {\n         final File input = getFile(\"bla.tar.sz\");\n         final File output = new File(dir, \"bla.tar\");", "timestamp": 1385885555, "metainfo": ""}