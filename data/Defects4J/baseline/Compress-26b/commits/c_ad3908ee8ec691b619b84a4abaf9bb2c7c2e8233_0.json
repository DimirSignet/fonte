{"sha": "ad3908ee8ec691b619b84a4abaf9bb2c7c2e8233", "log": "Add Javadoc for second method; combine common code.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n public final class IOUtils {\n \n \t/**\n+     * Copies the content of a InputStream into an OutputStream.\n+     * Uses a default buffer size of 8024 bytes.\n+     * \n+     * @param input\n+     *            the InputStream to copy\n+     * @param output\n+     *            the target Stream\n+     * @throws IOException\n+     *             if an error occurs\n+     */\n+    public static void copy(final InputStream input, final OutputStream output) throws IOException {\n+        copy(input, output, 8024);\n+    }\n+    \n+    /**\n      * Copies the content of a InputStream into an OutputStream\n      * \n      * @param input\n      *            the InputStream to copy\n      * @param output\n      *            the target Stream\n+     * @param buffersize\n+     *            the buffer size to use\n      * @throws IOException\n-     *             if the streams are interrupted\n+     *             if an error occurs\n      */\n-    public static void copy(final InputStream input, final OutputStream output) throws IOException {\n-        final byte[] buffer = new byte[8024];\n-        int n = 0;\n-        while (-1 != (n = input.read(buffer))) {\n-            output.write(buffer, 0, n);\n-        }\n-    }\n-    \n     public static void copy(final InputStream input, final OutputStream output, int buffersize) throws IOException {\n         final byte[] buffer = new byte[buffersize];\n         int n = 0;", "timestamp": 1236995455, "metainfo": ""}