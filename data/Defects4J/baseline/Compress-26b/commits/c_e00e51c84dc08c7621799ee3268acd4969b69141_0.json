{"sha": "e00e51c84dc08c7621799ee3268acd4969b69141", "log": "unit test for oldGNU sparse file detection  ", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.commons.compress.archivers.tar;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.net.URI;\n+import java.net.URL;\n+import junit.framework.TestCase;\n+\n+public class SparseFilesTest extends TestCase {\n+\n+    public void testOldGNU() throws Throwable {\n+        URL tar = getClass().getResource(\"/oldgnu_sparse.tar\");\n+        File file = new File(new URI(tar.toString()));\n+        TarArchiveInputStream tin = null;\n+        try {\n+            tin = new TarArchiveInputStream(new FileInputStream(file));\n+            TarArchiveEntry ae = tin.getNextTarEntry();\n+            assertEquals(\"sparsefile\", ae.getName());\n+            assertTrue(ae.isGNUSparse());\n+            assertFalse(tin.canReadEntryData(ae));\n+        } finally {\n+            if (tin != null) {\n+                tin.close();\n+            }\n+        }\n+    }\n+}\n+", "timestamp": 1311572638, "metainfo": ""}