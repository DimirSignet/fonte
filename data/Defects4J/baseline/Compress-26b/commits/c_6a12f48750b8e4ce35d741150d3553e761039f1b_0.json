{"sha": "6a12f48750b8e4ce35d741150d3553e761039f1b", "log": "Use example archive from COMPRESS-227 in test rather than creating a new one  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n         }\n     }\n \n+    /**\n+     * @see https://issues.apache.org/jira/browse/COMPRESS-227\n+     */\n     public void testDuplicateEntry() throws Exception {\n-        File f = File.createTempFile(\"commons-compress-zipfiletest\", \".zip\");\n-        f.deleteOnExit();\n-        File f2 = File.createTempFile(\"commons-compress-zipfiletest\", \".txt\");\n-        f2.deleteOnExit();\n-\n-        OutputStream o = null;\n-        try {\n-            o = new FileOutputStream(f);\n-            ZipArchiveOutputStream zo = new ZipArchiveOutputStream(o);\n-            // simple way to ensure entries have extra data\n-            zo.setUseZip64(Zip64Mode.Always);\n-\n-            // add the same file twice\n-            ZipArchiveEntry ze = new ZipArchiveEntry(f2, \"foo\");\n-            zo.putArchiveEntry(ze);\n-            zo.write(new byte[0]);\n-            zo.closeArchiveEntry();\n-            ze = new ZipArchiveEntry(f2, \"foo\");\n-            zo.putArchiveEntry(ze);\n-            zo.write(new byte[0]);\n-            zo.closeArchiveEntry();\n-            zo.close();\n-\n-            o.close();\n-            o = null;\n-\n-            System.err.println(\"-------------------vvvvvvvvvvvvvvvvvvvvvvv-----------\");\n-            zf = new ZipFile(f);\n-            ze = zf.getEntry(\"foo\");\n-            assertNotNull(ze);\n-            assertNotNull(zf.getInputStream(ze));\n-        } finally {\n-            System.err.println(\"-------------------^^^^^^^^^^^^^^^^^^^^^^^-----------\");\n-            if (o != null) {\n-                o.close();\n-            }\n-            f.delete();\n-            f2.delete();\n-        }\n+        File archive = getFile(\"COMPRESS-227.zip\");\n+        zf = new ZipFile(archive);\n+\n+        ZipArchiveEntry ze = zf.getEntry(\"test1.txt\");\n+        assertNotNull(ze);\n+        assertNotNull(zf.getInputStream(ze));\n     }\n \n     /*", "timestamp": 1369493558, "metainfo": ""}