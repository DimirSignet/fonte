{"sha": "5c05b49cf407a34bbbaf2818e26b7bf00471d4c7", "log": "support for non-ASCII linkpath in PAX headers  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n         if (addPaxHeadersForNonAsciiNames && !paxHeaderContainsPath\n             && !ASCII.canEncode(entryName)) {\n             paxHeaders.put(\"path\", entryName);\n+        }\n+\n+        if (addPaxHeadersForNonAsciiNames\n+            && (entry.isLink() || entry.isSymbolicLink())\n+            && !ASCII.canEncode(entry.getLinkName())) {\n+            paxHeaders.put(\"linkpath\", entry.getLinkName());\n         }\n \n         if (paxHeaders.size() > 0) {\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n         assertEquals(n, e.getName());\n     }\n \n+    public void testWriteNonAsciiLinkPathNamePaxHeader() throws Exception {\n+        String n = \"\\u00e4\";\n+        TarArchiveEntry t = new TarArchiveEntry(\"a\", TarConstants.LF_LINK);\n+        t.setSize(10 * 1024);\n+        t.setLinkName(n);\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos);\n+        tos.setAddPaxHeadersForNonAsciiNames(true);\n+        tos.putArchiveEntry(t);\n+        tos.write(new byte[10 * 1024]);\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        byte[] data = bos.toByteArray();\n+        assertEquals(\"15 linkpath=\" + n + \"\\n\",\n+                     new String(data, 512, 15, \"UTF-8\"));\n+        TarArchiveInputStream tin =\n+            new TarArchiveInputStream(new ByteArrayInputStream(data));\n+        TarArchiveEntry e = tin.getNextTarEntry();\n+        assertEquals(n, e.getLinkName());\n+    }\n+\n }", "timestamp": 1332570213, "metainfo": ""}