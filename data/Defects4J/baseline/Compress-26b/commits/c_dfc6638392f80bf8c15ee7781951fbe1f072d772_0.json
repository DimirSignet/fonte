{"sha": "dfc6638392f80bf8c15ee7781951fbe1f072d772", "log": "COMPRESS-108: add initial implementation of command-line interface to list archive contents  ", "commit": "\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/archivers/Lister.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.commons.compress.archivers;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.InputStream;\n+\n+import org.apache.commons.compress.archivers.ArchiveEntry;\n+import org.apache.commons.compress.archivers.ArchiveInputStream;\n+import org.apache.commons.compress.archivers.ArchiveStreamFactory;\n+\n+/**\n+ * Simple command line application that lists the contents of an archive.\n+ *\n+ * <p>The name of the archive must be given as a command line argument.</p>\n+ * <p>The optional second argument defines the archive type, in case the format is not recognised.</p>\n+ *\n+ * @since Apache Commons Compress 1.1\n+ */\n+public final class Lister {\n+    private static final ArchiveStreamFactory factory = new ArchiveStreamFactory();\n+    \n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Analysing \"+args[0]);\n+        File f = new File(args[0]);\n+        if (!f.isFile()) {\n+            System.err.println(f + \" doesn't exist or is a directory\");\n+        }\n+        InputStream fis = new BufferedInputStream(new FileInputStream(f));\n+        ArchiveInputStream ais;\n+        if (args.length > 1) {\n+            ais = factory.createArchiveInputStream(args[1], fis);\n+        } else {\n+            ais = factory.createArchiveInputStream(fis);\n+        }\n+        System.out.println(\"Created \"+ais.toString());\n+        ArchiveEntry ae;\n+        while((ae=ais.getNextEntry()) != null){\n+            System.out.println(ae.getName());\n+        }\n+        ais.close();\n+        fis.close();\n+    }\n+\n+}", "timestamp": 1274615587, "metainfo": ""}