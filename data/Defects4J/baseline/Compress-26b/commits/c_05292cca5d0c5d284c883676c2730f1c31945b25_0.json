{"sha": "05292cca5d0c5d284c883676c2730f1c31945b25", "log": "COMPRESS-200 - passing test case, will ask for more info  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n         tin.close();\n     }\n \n-}\n+    /**\n+     * @see https://issues.apache.org/jira/browse/COMPRESS-200\n+     */\n+    public void testRoundtripWith66CharFileNameGnu() throws Exception {\n+        testRoundtripWith66CharFileName(TarArchiveOutputStream.LONGFILE_GNU);\n+    }\n+\n+    /**\n+     * @see https://issues.apache.org/jira/browse/COMPRESS-200\n+     */\n+    public void testRoundtripWith66CharFileNamePosix() throws Exception {\n+        testRoundtripWith66CharFileName(TarArchiveOutputStream.LONGFILE_POSIX);\n+    }\n+\n+    private void testRoundtripWith66CharFileName(int mode) throws Exception {\n+        String n = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+            + \"AAAAAAA\";\n+        assertEquals(67, n.length());\n+        TarArchiveEntry t = new TarArchiveEntry(n);\n+        t.setSize(10 * 1024);\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos);\n+        tos.setLongFileMode(mode);\n+        tos.putArchiveEntry(t);\n+        tos.write(new byte[10 * 1024]);\n+        tos.closeArchiveEntry();\n+        byte[] data = bos.toByteArray();\n+        TarArchiveInputStream tin =\n+            new TarArchiveInputStream(new ByteArrayInputStream(data));\n+        TarArchiveEntry e = tin.getNextTarEntry();\n+        assertEquals(n, e.getName());\n+        tin.close();\n+        tos.close();\n+    }\n+\n+}", "timestamp": 1356631458, "metainfo": ""}