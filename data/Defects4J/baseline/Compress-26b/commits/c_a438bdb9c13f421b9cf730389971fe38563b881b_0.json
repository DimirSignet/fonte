{"sha": "a438bdb9c13f421b9cf730389971fe38563b881b", "log": "Added ChangeSetResults which reports what actually has happened while performing the changeset. Added Test.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n      *            the resulting OutputStream with all modifications\n      * @throws IOException\n      *             if an read/write error occurs\n+     * @return the results of this operation\n      */\n-    public void perform(ArchiveInputStream in, ArchiveOutputStream out)\n+    public ChangeSetResults perform(ArchiveInputStream in, ArchiveOutputStream out)\n             throws IOException {\n+        ChangeSetResults results = new ChangeSetResults();\n+        \n         Set workingSet = new LinkedHashSet(changes);\n         \n         for (Iterator it = workingSet.iterator(); it.hasNext();) {\n             if (change.type() == Change.TYPE_ADD) {\n                 copyStream(change.getInput(), out, change.getEntry());\n                 it.remove();\n+                results.addedFromChangeSet(change.getEntry().getName());\n             }\n         }\n \n                     if (name.equals(change.targetFile())) {\n                         copy = false;\n                         it.remove();\n+                        results.deleted(name);\n                         break;\n                     }\n                 } else if(type == Change.TYPE_DELETE_DIR && name != null) {\n                     if (name.startsWith(change.targetFile() + \"/\")) {\n                         copy = false;\n+                        results.deleted(name);\n                         break;\n                     }\n                 }\n             if (copy) {\n                 if (!isDeletedLater(workingSet, entry)) {\n                     copyStream(in, out, entry);\n+                    results.addedFromStream(entry.getName());\n                 }\n             }\n         }\n+        \n+        return results;\n     }\n \n     /**\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java\n+package org.apache.commons.compress.changes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class ChangeSetResults {\n+    private List addedFromChangeSet = new ArrayList();\n+    private List addedFromStream = new ArrayList();\n+    private List deleted = new ArrayList();\n+    \n+    void deleted(String fileName) {\n+        deleted.add(fileName);\n+    }\n+    \n+    void addedFromStream(String fileName) {\n+        addedFromStream.add(fileName);\n+    }\n+    \n+    void addedFromChangeSet(String fileName) {\n+        addedFromChangeSet.add(fileName);\n+    }\n+\n+    /**\n+     * @return the addedFromChangeSet\n+     */\n+    public List getAddedFromChangeSet() {\n+        return addedFromChangeSet;\n+    }\n+\n+    /**\n+     * @return the addedFromStream\n+     */\n+    public List getAddedFromStream() {\n+        return addedFromStream;\n+    }\n+\n+    /**\n+     * @return the deleted\n+     */\n+    public List getDeleted() {\n+        return deleted;\n+    }\n+}\n--- a/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n     }\n     \n     /**\n+     * Checks for the correct ChangeSetResults\n+     * \n+     * @throws Exception\n+     */\n+    public void testChangeSetResults() throws Exception {\n+        final String archivename = \"cpio\";\n+        File input = this.createArchive(archivename);\n+\n+        ArchiveOutputStream out = null;\n+        ArchiveInputStream ais = null;\n+        File result = File.createTempFile(\"test\", \".\"+archivename);\n+        result.deleteOnExit();\n+        try {\n+\n+            final InputStream is = new FileInputStream(input);\n+            ais = factory.createArchiveInputStream(archivename, is);\n+            out = factory.createArchiveOutputStream(archivename,\n+                    new FileOutputStream(result));\n+\n+            ChangeSet changes = new ChangeSet();\n+            changes.deleteDir(\"bla\");\n+            archiveListDeleteDir(\"bla\");\n+\n+            // Add a file\n+            final File file1 = getFile(\"test.txt\");\n+            ArchiveEntry entry = out.createArchiveEntry(file1, \"bla/test.txt\");\n+            changes.add(entry, new FileInputStream(file1));\n+            archiveList.add(\"bla/test.txt\");\n+\n+            ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n+            ChangeSetResults results = performer.perform(ais, out);\n+            is.close();\n+\n+            // Checks\n+            assertEquals(1,results.getAddedFromChangeSet().size());\n+            assertEquals(\"bla/test.txt\",(String)results.getAddedFromChangeSet().iterator().next());\n+            assertEquals(3,results.getDeleted().size());\n+            assertTrue(results.getDeleted().contains(\"bla/test4.xml\"));\n+            assertTrue(results.getDeleted().contains(\"bla/test5.xml\"));\n+            assertTrue(results.getDeleted().contains(\"bla/blubber/test6.xml\"));\n+            \n+            assertTrue(results.getAddedFromStream().contains(\"testdata/test1.xml\"));\n+            assertTrue(results.getAddedFromStream().contains(\"testdata/test2.xml\"));\n+            assertTrue(results.getAddedFromStream().contains(\"test/test3.xml\"));\n+            assertTrue(results.getAddedFromStream().contains(\"test.txt\"));\n+            assertTrue(results.getAddedFromStream().contains(\"something/bla\"));\n+            assertTrue(results.getAddedFromStream().contains(\"test with spaces.txt\"));\n+            assertEquals(6,results.getAddedFromStream().size());\n+        } finally {\n+            if (out != null)\n+                out.close();\n+            if (ais != null)\n+                ais.close();\n+        }\n+\n+        this.checkArchiveContent(result, archiveList);\n+    }\n+    \n+    /**\n      * Tries to delete a directory with a file and adds a new directory with a\n      * new file and with the same name. Should delete dir1/* and add\n      * dir1/test.txt at the end", "timestamp": 1239949634, "metainfo": ""}