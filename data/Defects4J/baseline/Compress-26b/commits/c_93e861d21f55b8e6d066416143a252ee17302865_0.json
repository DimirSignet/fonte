{"sha": "93e861d21f55b8e6d066416143a252ee17302865", "log": "document 'EOF behaviour' of Dump/Ar/Cpio InputStreams  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n  * \n  * Due to the limitation of the file name length to 16 bytes GNU and\n  * BSD has their own variants of this format. Currently Commons\n- * Compress can read but not write the GNU variant and fully supports\n+ * Compress can read but not write the GNU variant.  It fully supports\n  * the BSD variant.\n  * \n  * @see <a href=\"http://www.freebsd.org/cgi/man.cgi?query=ar&sektion=5\">ar man page</a>\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n     private final byte[] FOUR_BYTES_BUF = new byte[4];\n     private final byte[] SIX_BYTES_BUF = new byte[6];\n \n-    /**\n-     * Construct the cpio input stream\n+    private final int blockSize;\n+\n+    /**\n+     * Construct the cpio input stream with a blocksize of {@link\n+     * CpioConstants#BLOCK_SIZE BLOCK_SIZE}.\n      * \n      * @param in\n      *            The cpio stream\n      */\n     public CpioArchiveInputStream(final InputStream in) {\n+        this(in, BLOCK_SIZE);\n+    }\n+\n+    /**\n+     * Construct the cpio input stream with a blocksize of {@link CpioConstants#BLOCK_SIZE BLOCK_SIZE}.\n+     * Construct the cpio input stream.\n+     * \n+     * @param in\n+     *            The cpio stream\n+     * @param blockSize\n+     *            The block size of the archive.\n+     * @since 1.5\n+     */\n+    public CpioArchiveInputStream(final InputStream in, int blockSize) {\n         this.in = in;\n+        this.blockSize = blockSize;\n     }\n \n     /**\n \n         if (this.entry.getName().equals(CPIO_TRAILER)) {\n             this.entryEOF = true;\n+            skipRemainderOfLastBlock();\n             return null;\n         }\n         return this.entry;\n     }\n \n     /**\n+     * Skips the padding zeros written after the TRAILER!!! entry.\n+     */\n+    private void skipRemainderOfLastBlock() throws IOException {\n+        long readFromLastBlock = (getBytesRead() % blockSize);\n+        if (readFromLastBlock != 0) {\n+            skip(blockSize - readFromLastBlock);\n+        }\n+    }\n+\n+    /**\n      * Checks if the signature matches one of the following magic values:\n      * \n      * Strings:", "timestamp": 1358712973, "metainfo": ""}