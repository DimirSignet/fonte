{"sha": "dff9001560b49c623a47386b0e706397b9038841", "log": "use length of signature read when trying to match input stream formats  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n         input.mark(signature.length);\n         int signatureLength = input.read(signature);\n         // TODO if reset is not supported pass on the IOException or return null?\n-        // TODO, what if we failed to read 12 bytes?\n         input.reset();\n \n-        if(ZipArchiveInputStream.matches(signature)) {\n+        if(ZipArchiveInputStream.matches(signature, signatureLength)) {\n             return new ZipArchiveInputStream(input);\n-        } else if(JarArchiveInputStream.matches(signature)) {\n+        } else if(JarArchiveInputStream.matches(signature, signatureLength)) {\n             return new JarArchiveInputStream(input);\n-        } else if(TarArchiveInputStream.matches(signature)) {\n+        } else if(TarArchiveInputStream.matches(signature, signatureLength)) {\n             return new TarArchiveInputStream(input);\n-        } else if(ArArchiveInputStream.matches(signature)) {\n+        } else if(ArArchiveInputStream.matches(signature, signatureLength)) {\n             return new ArArchiveInputStream(input);\n-        } else if(CpioArchiveInputStream.matches(signature)) {\n+        } else if(CpioArchiveInputStream.matches(signature, signatureLength)) {\n             return new CpioArchiveInputStream(input);\n         } \n         return null;\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n         return ret;\n     }\n         \n-    public static boolean matches( byte[] signature ) {\n+    public static boolean matches(byte[] signature, int length) {\n         // 3c21 7261 6863 0a3e\n         \n+        if (length < 8) {\n+            return false;\n+        }\n         if (signature[0] != 0x21) {\n             return false;\n         }\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n         return (ArchiveEntry)entry;\n     }\n         \n-    public static boolean matches( byte[] signature ) {\n+    public static boolean matches(byte[] signature, int length) {\n         // 3037 3037 30\n         \n+        if (length < 5) {\n+            return false;\n+        }\n         if (signature[0] != 0x30) {\n             return false;\n         }\n--- a/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n         }\n     }\n         \n-    public static boolean matches( byte[] signature ) {\n+    public static boolean matches(byte[] signature, int length ) {\n         // 4b50 0403 0014 0008\n+\n+        if (length < 8) {\n+            return false;\n+        }\n \n         if (signature[0] != 0x50) {\n             return false;\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n         return in.read();\n     }\n     \n-    public static boolean matches( byte[] signature ) {\n+    public static boolean matches(byte[] signature, int length) {\n         // 6574 7473 2e31 6d78\n         \n+        if (length < 8) {\n+            return false;\n+        }\n+\n         if (signature[0] != 0x74) {\n             return false;\n         }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n     public static boolean matches( byte[] signature, int length ) {\n         // 4b50 0403 0014 0000\n \n+        if (length < 8) {\n+            return false;\n+        }\n+\n         if (signature[0] != 0x50) {\n             return false;\n         }", "timestamp": 1233910754, "metainfo": ""}