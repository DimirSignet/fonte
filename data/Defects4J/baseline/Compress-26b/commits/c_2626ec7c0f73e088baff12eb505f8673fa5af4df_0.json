{"sha": "2626ec7c0f73e088baff12eb505f8673fa5af4df", "log": "Fix parameter order to assertEquals(expected, actual)  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n                         switch (year) {\n                             case 2107:\n                                 // Zip time is okay up to 2107.\n-                                assertEquals(zipTime, year + \"-01-01/00:00:02 +0000\");\n+                                assertEquals(year + \"-01-01/00:00:02 +0000\", zipTime);\n                                 // But the X5455 data has overflowed:\n-                                assertEquals(modTime, \"1970-11-24/17:31:45 +0000\");\n-                                assertEquals(accTime, \"1970-11-24/17:31:47 +0000\");\n+                                assertEquals(\"1970-11-24/17:31:45 +0000\", modTime);\n+                                assertEquals(\"1970-11-24/17:31:47 +0000\", accTime);\n                                 break;\n                             case 2108:\n                                 // Zip time is still okay at Jan 1st midnight (UTC) in 2108\n                                 // because we created the zip file in pacific time zone, so it's\n                                 // actually still 2107 in the zip file!\n-                                assertEquals(zipTime, year + \"-01-01/00:00:02 +0000\");\n+                                assertEquals(year + \"-01-01/00:00:02 +0000\", zipTime);\n                                 // The X5455 data is still overflowed, of course:\n-                                assertEquals(modTime, \"1971-11-24/17:31:45 +0000\");\n-                                assertEquals(accTime, \"1971-11-24/17:31:47 +0000\");\n+                                assertEquals(\"1971-11-24/17:31:45 +0000\", modTime);\n+                                assertEquals(\"1971-11-24/17:31:47 +0000\", accTime);\n                                 break;\n                             case 2109:\n                                 // All three timestamps have overflowed by 2109.\n-                                assertEquals(zipTime, \"1981-01-01/00:00:02 +0000\");\n-                                assertEquals(modTime, \"1972-11-24/17:31:45 +0000\");\n-                                assertEquals(accTime, \"1972-11-24/17:31:47 +0000\");\n+                                assertEquals(\"1981-01-01/00:00:02 +0000\", zipTime);\n+                                assertEquals(\"1972-11-24/17:31:45 +0000\", modTime);\n+                                assertEquals(\"1972-11-24/17:31:47 +0000\", accTime);\n \n                                 // Hmmm.... looks like one could examine both DOS time\n                                 // and the Unix time together to hack a nice workaround to\n                                 // X5455 time is good from epoch (1970) to 2106.\n                                 // Zip time is good from 1980 to 2107.\n                                 if (year < 1980) {\n-                                    assertEquals(zipTime, \"1980-01-01/08:00:00 +0000\");\n+                                    assertEquals(\"1980-01-01/08:00:00 +0000\", zipTime);\n                                 } else {\n-                                    assertEquals(zipTime, year + \"-01-01/00:00:02 +0000\");\n+                                    assertEquals(year + \"-01-01/00:00:02 +0000\", zipTime);\n                                 }\n-                                assertEquals(modTime, year + \"-01-01/00:00:01 +0000\");\n-                                assertEquals(accTime, year + \"-01-01/00:00:03 +0000\");\n+                                assertEquals(year + \"-01-01/00:00:01 +0000\", modTime);\n+                                assertEquals(year + \"-01-01/00:00:03 +0000\", accTime);\n                                 break;\n                         }\n                     }", "timestamp": 1357870130, "metainfo": ""}