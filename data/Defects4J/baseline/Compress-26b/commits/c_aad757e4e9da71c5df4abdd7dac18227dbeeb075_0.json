{"sha": "aad757e4e9da71c5df4abdd7dac18227dbeeb075", "log": "properly write ZIP64 central directories if the number of entries, the size of the central directory or its location exceed the ZIP32 limit.  COMPRESS-150  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n import static org.apache.commons.compress.archivers.zip.ZipConstants.DWORD;\n import static org.apache.commons.compress.archivers.zip.ZipConstants.SHORT;\n import static org.apache.commons.compress.archivers.zip.ZipConstants.WORD;\n+import static org.apache.commons.compress.archivers.zip.ZipConstants.ZIP64_MAGIC;\n+import static org.apache.commons.compress.archivers.zip.ZipConstants.ZIP64_MAGIC_SHORT;\n import static org.apache.commons.compress.archivers.zip.ZipConstants.ZIP64_MIN_VERSION;\n \n /**\n         writeOut(ZERO);\n \n         // number of entries\n-        byte[] num = ZipShort.getBytes(entries.size());\n+        byte[] num = ZipShort.getBytes(Math.min(entries.size(),\n+                                                ZIP64_MAGIC_SHORT));\n         writeOut(num);\n         writeOut(num);\n \n         // length and location of CD\n-        writeOut(ZipLong.getBytes(cdLength));\n-        writeOut(ZipLong.getBytes(cdOffset));\n+        writeOut(ZipLong.getBytes(Math.min(cdLength, ZIP64_MAGIC)));\n+        writeOut(ZipLong.getBytes(Math.min(cdOffset, ZIP64_MAGIC)));\n \n         // ZIP file comment\n         ByteBuffer data = this.zipEncoding.encode(comment);\n     private static final byte[] ONE = ZipLong.getBytes(1L);\n \n     /**\n-     * Writes the &quot;ZIP64 End of central dir record&quot; and &quot;ZIP64 End of central dir locator&quot;.\n+     * Writes the &quot;ZIP64 End of central dir record&quot; and\n+     * &quot;ZIP64 End of central dir locator&quot;.\n      * @throws IOException on error\n      * @since Apache Commons Compress 1.3\n      */\n     protected void writeZip64CentralDirectory() throws IOException {\n+        if (!hasUsedZip64) {\n+            if (cdOffset >= ZIP64_MAGIC || cdLength >= ZIP64_MAGIC\n+                || entries.size() >= ZIP64_MAGIC_SHORT) {\n+                // actually \"will use\"\n+                hasUsedZip64 = true;\n+            }\n+        }\n+\n         if (!hasUsedZip64) {\n             return;\n         }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipConstants.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipConstants.java\n \n     /** ZIP specification version that introduced ZIP64 */\n     static final int ZIP64_MIN_VERSION = 45;\n+\n+    /**\n+     * Value stored in two-byte size and similar fields if ZIP64\n+     * extensions are used.\n+     */\n+    static final int ZIP64_MAGIC_SHORT = 0xFFFF;\n+\n+    /**\n+     * Value stored in four-byte size and similar fields if ZIP64\n+     * extensions are used.\n+     */\n+    static final long ZIP64_MAGIC = 0xFFFFFFFFL;\n+\n }", "timestamp": 1311872012, "metainfo": ""}