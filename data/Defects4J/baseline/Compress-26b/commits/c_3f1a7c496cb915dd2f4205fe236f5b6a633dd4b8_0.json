{"sha": "3f1a7c496cb915dd2f4205fe236f5b6a633dd4b8", "log": "use long returning methods in Java5's Inflater/Deflater.  Addresses COMPRESS-129.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n \n             long inB;\n             if (current.getMethod() == ZipArchiveOutputStream.DEFLATED) {\n-                inB = inf.getTotalIn();\n+                inB = inf.getBytesRead();\n             } else {\n                 inB = readBytesOfEntry;\n             }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n                 deflate();\n             }\n \n-            entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));\n-            entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));\n+            entry.setSize(def.getBytesRead());\n+            entry.setCompressedSize(def.getBytesWritten());\n             entry.setCrc(realCrc);\n \n             def.reset();\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n     /**\n      * Assumes a negative integer really is a positive integer that\n      * has wrapped around and re-creates the original value.\n+     *\n+     * <p>This methods is no longer used as of Apache Commons Compress\n+     * 1.3</p>\n+     *\n      * @param i the value to treat as unsigned int.\n      * @return the unsigned int as a long.\n      */", "timestamp": 1311587610, "metainfo": ""}