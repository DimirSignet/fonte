{"sha": "59dfc7c478f627632966447edc7b145837ac138c", "log": "Avoid some threading issues with HashMap  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java\n package org.apache.commons.compress.archivers.zip;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.zip.ZipException;\n \n /**\n     private static final Map<ZipShort, Class<?>> implementations;\n \n     static {\n-        implementations = new HashMap<ZipShort, Class<?>>();\n+        implementations = new ConcurrentHashMap<ZipShort, Class<?>>();\n         register(AsiExtraField.class);\n         register(JarMarker.class);\n         register(UnicodePathExtraField.class);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java\n import java.nio.ByteBuffer;\n import java.nio.charset.Charset;\n import java.nio.charset.UnsupportedCharsetException;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n     private static final Map<String, SimpleEncodingHolder> simpleEncodings;\n \n     static {\n-        simpleEncodings = new HashMap<String, SimpleEncodingHolder>();\n+        Map<String, SimpleEncodingHolder> se =\n+            new HashMap<String, SimpleEncodingHolder>();\n \n         char[] cp437_high_chars =\n             new char[] { 0x00c7, 0x00fc, 0x00e9, 0x00e2, 0x00e4, 0x00e0,\n \n         SimpleEncodingHolder cp437 = new SimpleEncodingHolder(cp437_high_chars);\n \n-        simpleEncodings.put(\"CP437\",cp437);\n-        simpleEncodings.put(\"Cp437\",cp437);\n-        simpleEncodings.put(\"cp437\",cp437);\n-        simpleEncodings.put(\"IBM437\",cp437);\n-        simpleEncodings.put(\"ibm437\",cp437);\n+        se.put(\"CP437\", cp437);\n+        se.put(\"Cp437\", cp437);\n+        se.put(\"cp437\", cp437);\n+        se.put(\"IBM437\", cp437);\n+        se.put(\"ibm437\", cp437);\n \n         char[] cp850_high_chars =\n             new char[] { 0x00c7, 0x00fc, 0x00e9, 0x00e2, 0x00e4, 0x00e0,\n \n         SimpleEncodingHolder cp850 = new SimpleEncodingHolder(cp850_high_chars);\n \n-        simpleEncodings.put(\"CP850\",cp850);\n-        simpleEncodings.put(\"Cp850\",cp850);\n-        simpleEncodings.put(\"cp850\",cp850);\n-        simpleEncodings.put(\"IBM850\",cp850);\n-        simpleEncodings.put(\"ibm850\",cp850);\n+        se.put(\"CP850\", cp850);\n+        se.put(\"Cp850\", cp850);\n+        se.put(\"cp850\", cp850);\n+        se.put(\"IBM850\", cp850);\n+        se.put(\"ibm850\", cp850);\n+        simpleEncodings = Collections.unmodifiableMap(se);\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java\n  */\n package org.apache.commons.compress.archivers.zip;\n \n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.zip.ZipEntry;\n \n     private final int code;\n \n-    private static final Map<Integer, ZipMethod> codeToEnum =\n-        new HashMap<Integer, ZipMethod>();\n+    private static final Map<Integer, ZipMethod> codeToEnum;\n \n     static {\n+        Map<Integer, ZipMethod> cte = new HashMap<Integer, ZipMethod>();\n         for (ZipMethod method : values()) {\n-            codeToEnum.put(Integer.valueOf(method.getCode()), method);\n+            cte.put(Integer.valueOf(method.getCode()), method);\n         }\n+        codeToEnum = Collections.unmodifiableMap(cte);\n     }\n \n     /**", "timestamp": 1352568434, "metainfo": ""}