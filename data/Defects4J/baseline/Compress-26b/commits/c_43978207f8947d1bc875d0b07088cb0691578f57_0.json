{"sha": "43978207f8947d1bc875d0b07088cb0691578f57", "log": "foreach loops  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n import java.util.Map.Entry;\n \n          * size\n          * uid,uname\n          */\n-        Iterator hdrs = headers.entrySet().iterator();\n-        while(hdrs.hasNext()){\n-            Entry ent = (Entry) hdrs.next();\n-            String key = (String) ent.getKey();\n-            String val = (String) ent.getValue();\n+        for (Entry<String, String> ent : headers.entrySet()){\n+            String key = ent.getKey();\n+            String val = ent.getValue();\n             if (\"path\".equals(key)){\n                 currEntry.setName(val);\n             } else if (\"linkpath\".equals(key)){\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSet.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSet.java\n         }\n \n         if (!changes.isEmpty()) {\n-            for (Iterator it = changes.iterator(); it.hasNext();) {\n-                Change change = (Change) it.next();\n+            for (Iterator<Change> it = changes.iterator(); it.hasNext();) {\n+                Change change = it.next();\n                 if (change.type() == Change.TYPE_ADD\n                         && change.getEntry() != null) {\n                     ArchiveEntry entry = change.getEntry();\n         String source = pChange.targetFile();\n \n         if (!changes.isEmpty()) {\n-            for (Iterator it = changes.iterator(); it.hasNext();) {\n-                Change change = (Change) it.next();\n+            for (Iterator<Change> it = changes.iterator(); it.hasNext();) {\n+                Change change = it.next();\n                 if (change.type() == Change.TYPE_ADD\n                         && change.getEntry() != null) {\n                     String target = change.getEntry().getName();\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n         while ((entry = in.getNextEntry()) != null) {\n             boolean copy = true;\n \n-            for (Iterator it = workingSet.iterator(); it.hasNext();) {\n-                Change change = (Change) it.next();\n+            for (Iterator<Change> it = workingSet.iterator(); it.hasNext();) {\n+                Change change = it.next();\n \n                 final int type = change.type();\n                 final String name = entry.getName();\n         }\n         \n         // Adds files which hasn't been added from the original and do not have replace mode on\n-        for (Iterator it = workingSet.iterator(); it.hasNext();) {\n-            Change change = (Change) it.next();\n+        for (Iterator<Change> it = workingSet.iterator(); it.hasNext();) {\n+            Change change = it.next();\n \n             if (change.type() == Change.TYPE_ADD && \n                 !change.isReplaceMode() && \n      *            the entry to check\n      * @return true, if this entry has an deletion change later, false otherwise\n      */\n-    private boolean isDeletedLater(Set workingSet, ArchiveEntry entry) {\n+    private boolean isDeletedLater(Set<Change> workingSet, ArchiveEntry entry) {\n         String source = entry.getName();\n \n         if (!workingSet.isEmpty()) {\n-            for (Iterator it = workingSet.iterator(); it.hasNext();) {\n-                Change change = (Change) it.next();\n+            for (Change change : workingSet) {\n                 final int type = change.type();\n                 String target = change.targetFile();\n                 if (type == Change.TYPE_DELETE && source.equals(target)) {", "timestamp": 1312637919, "metainfo": ""}