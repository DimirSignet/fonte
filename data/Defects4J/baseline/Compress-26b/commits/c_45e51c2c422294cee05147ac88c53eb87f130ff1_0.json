{"sha": "45e51c2c422294cee05147ac88c53eb87f130ff1", "log": "fix javadoc errors detected by Java8 EA b120  Not there are still 54 errors as the \"unknown\" JCIP tags cause trouble but I neither want to remove them nor add a dependency just to make a broken tool happy.   ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n  *   <li> optionally write additional data, provided format supports it,</li>\n  *   <li>{@link #close()}.</li>\n  * </ul>\n- * \n- * <p>\n- * Example usage:<br/>\n- * TBA\n- * </p>\n  */\n public abstract class ArchiveOutputStream extends OutputStream {\n \n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n /**\n  * Represents an archive entry in the \"ar\" format.\n  * \n- * Each AR archive starts with \"!<arch>\" followed by a LF. After these 8 bytes\n+ * Each AR archive starts with \"!&lt;arch&gt;\" followed by a LF. After these 8 bytes\n  * the archive entries are listed. The format of an entry header is as it follows:\n  * \n  * <pre>\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n     }\n \n     /**\n-     * Checks if the signature matches ASCII \"!<arch>\" followed by a single LF\n+     * Checks if the signature matches ASCII \"!&lt;arch&gt;\" followed by a single LF\n      * control character\n      * \n      * @param signature\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n     /**\n      * Set the long file mode.\n      * This can be LONGFILE_ERROR(0) or LONGFILE_BSD(1).\n-     * This specifies the treatment of long file names (names >= 16).\n+     * This specifies the treatment of long file names (names &gt;= 16).\n      * Default is LONGFILE_ERROR.\n      * @param longFileMode the mode to use\n      * @since 1.3\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n  * N.B. does not handle the cpio \"tar\" format\n  * </p>\n  * @NotThreadSafe\n- * @see \"http://people.freebsd.org/~kientzle/libarchive/man/cpio.5.txt\"\n+ * @see <a href=\"http://people.freebsd.org/~kientzle/libarchive/man/cpio.5.txt\">http://people.freebsd.org/~kientzle/libarchive/man/cpio.5.txt</a>\n  */\n public class CpioArchiveEntry implements CpioConstants, ArchiveEntry {\n \n      * \n      * @param format\n      *            The cpio format for this entry.\n-     * <br/>\n+     * <p>\n      * Possible format values are:\n-     * <p>\n-     * CpioConstants.FORMAT_NEW<br/>\n-     * CpioConstants.FORMAT_NEW_CRC<br/>\n-     * CpioConstants.FORMAT_OLD_BINARY<br/>\n-     * CpioConstants.FORMAT_OLD_ASCII<br/>\n-     * \n+     * <pre>\n+     * CpioConstants.FORMAT_NEW\n+     * CpioConstants.FORMAT_NEW_CRC\n+     * CpioConstants.FORMAT_OLD_BINARY\n+     * CpioConstants.FORMAT_OLD_ASCII\n+     * </pre>\n      */\n     public CpioArchiveEntry(final short format) {\n         switch (format) {\n      *            The cpio format for this entry.\n      * @param name\n      *            The name of this entry.\n-     * <br/>\n+     * <p>\n      * Possible format values are:\n-     * <p>\n-     * CpioConstants.FORMAT_NEW<br/>\n-     * CpioConstants.FORMAT_NEW_CRC<br/>\n-     * CpioConstants.FORMAT_OLD_BINARY<br/>\n-     * CpioConstants.FORMAT_OLD_ASCII<br/>\n+     * <pre>\n+     * CpioConstants.FORMAT_NEW\n+     * CpioConstants.FORMAT_NEW_CRC\n+     * CpioConstants.FORMAT_OLD_BINARY\n+     * CpioConstants.FORMAT_OLD_ASCII\n+     * </pre>\n      * \n      * @since 1.1\n      */\n      *            The name of this entry.\n      * @param size\n      *            The size of this entry\n-     * <br/>\n+     * <p>\n      * Possible format values are:\n-     * <p>\n-     * CpioConstants.FORMAT_NEW<br/>\n-     * CpioConstants.FORMAT_NEW_CRC<br/>\n-     * CpioConstants.FORMAT_OLD_BINARY<br/>\n-     * CpioConstants.FORMAT_OLD_ASCII<br/>\n+     * <pre>\n+     * CpioConstants.FORMAT_NEW\n+     * CpioConstants.FORMAT_NEW_CRC\n+     * CpioConstants.FORMAT_OLD_BINARY\n+     * CpioConstants.FORMAT_OLD_ASCII\n+     * </pre>\n      * \n      * @since 1.1\n      */\n      *            The file to gather information from.\n      * @param entryName\n      *            The name of this entry.\n-     * <br/>\n+     * <p>\n      * Possible format values are:\n-     * <p>\n-     * CpioConstants.FORMAT_NEW<br/>\n-     * CpioConstants.FORMAT_NEW_CRC<br/>\n-     * CpioConstants.FORMAT_OLD_BINARY<br/>\n-     * CpioConstants.FORMAT_OLD_ASCII<br/>\n+     * <pre>\n+     * CpioConstants.FORMAT_NEW\n+     * CpioConstants.FORMAT_NEW_CRC\n+     * CpioConstants.FORMAT_OLD_BINARY\n+     * CpioConstants.FORMAT_OLD_ASCII\n+     * </pre>\n      * \n      * @since 1.1\n      */\n \n     /**\n      * Set the checksum. The checksum is calculated by adding all bytes of a\n-     * file to transfer (crc += buf[pos] & 0xFF).\n+     * file to transfer (crc += buf[pos] &amp; 0xFF).\n      * \n      * @param chksum\n      *            The checksum to set.\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n  * CPIOArchiveInputStream is a stream for reading cpio streams. All formats of\n  * cpio are supported (old ascii, old binary, new portable format and the new\n  * portable format with crc).\n- * <p/>\n- * <p/>\n+ *\n+ * <p>\n  * The stream can be read by extracting a cpio entry (containing all\n  * informations about a entry) and afterwards reading from the stream the file\n  * specified by the entry.\n- * <p/>\n- * <code><pre>\n+ * </p>\n+ * <pre>\n  * CPIOArchiveInputStream cpioIn = new CPIOArchiveInputStream(\n  *         new FileInputStream(new File(&quot;test.cpio&quot;)));\n  * CPIOArchiveEntry cpioEntry;\n- * <p/>\n+ *\n  * while ((cpioEntry = cpioIn.getNextEntry()) != null) {\n  *     System.out.println(cpioEntry.getName());\n  *     int tmp;\n  *     System.out.println(buf.toString());\n  * }\n  * cpioIn.close();\n- * </pre></code>\n- * <p/>\n+ * </pre>\n+ * <p>\n  * Note: This implementation should be compatible to cpio 2.5\n  * \n- * This class uses mutable fields and is not considered to be threadsafe.\n+ * <p>This class uses mutable fields and is not considered to be threadsafe.\n  * \n- * Based on code from the jRPM project (jrpm.sourceforge.net)\n+ * <p>Based on code from the jRPM project (jrpm.sourceforge.net)\n  */\n \n public class CpioArchiveInputStream extends ArchiveInputStream implements\n     /**\n      * Returns 0 after EOF has reached for the current entry data, otherwise\n      * always return 1.\n-     * <p/>\n+     * <p>\n      * Programs should not count on this method to return the actual number of\n      * bytes that could be read without blocking.\n      * \n      * @throws IOException\n      *             if an I/O error has occurred\n      * @throws IllegalArgumentException\n-     *             if n < 0\n+     *             if n &lt; 0\n      */\n     @Override\n     public long skip(final long n) throws IOException {\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n  * CPIOArchiveOutputStream is a stream for writing CPIO streams. All formats of\n  * CPIO are supported (old ASCII, old binary, new portable format and the new\n  * portable format with CRC).\n- * <p/>\n- * <p/>\n- * An entry can be written by creating an instance of CpioArchiveEntry and fill\n+ *\n+ * <p>An entry can be written by creating an instance of CpioArchiveEntry and fill\n  * it with the necessary values and put it into the CPIO stream. Afterwards\n  * write the contents of the file into the CPIO stream. Either close the stream\n- * by calling finish() or put a next entry into the cpio stream.\n- * <p/>\n- * <code><pre>\n+ * by calling finish() or put a next entry into the cpio stream.</p>\n+ *\n+ * <pre>\n  * CpioArchiveOutputStream out = new CpioArchiveOutputStream(\n  *         new FileOutputStream(new File(\"test.cpio\")));\n  * CpioArchiveEntry entry = new CpioArchiveEntry();\n  * out.putArchiveEntry(entry);\n  * out.write(testContents.getBytes());\n  * out.close();\n- * </pre></code>\n- * <p/>\n- * Note: This implementation should be compatible to cpio 2.5\n+ * </pre>\n+ *\n+ * <p>Note: This implementation should be compatible to cpio 2.5</p>\n  * \n- * This class uses mutable fields and is not considered threadsafe.\n+ * <p>This class uses mutable fields and is not considered threadsafe.</p>\n  * \n- * based on code from the jRPM project (jrpm.sourceforge.net)\n+ * <p>based on code from the jRPM project (jrpm.sourceforge.net)</p>\n  */\n public class CpioArchiveOutputStream extends ArchiveOutputStream implements\n         CpioConstants {\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java\n  * #define EXT2_XATTR_MAGIC        0xEA020000  // block EA\n  * #define EXT2_XATTR_MAGIC2       0xEA020001  // in inode EA\n  * </pre>\n+ * <p>\n  * The fields in <b>bold</b> are the same for all blocks. (This permitted\n  * multiple dumps to be written to a single tape.)\n  * </p>\n  *\n  * //\n  * // This is the new (4.4) BSD inode structure\n- * // copied from the FreeBSD 2.0 <ufs/ufs/dinode.h> include file\n+ * // copied from the FreeBSD 2.0 &lt;ufs/ufs/dinode.h&gt; include file\n  * //\n  * struct new_bsd_inode {\n  *   __u16       di_mode;           // file type, standard Unix permissions\n  *   __s32       di_spare[2];       // unused\n  * };\n  * </pre>\n+ * <p>\n  * It is important to note that the header DOES NOT have the name of the\n  * file. It can't since hard links mean that you may have multiple filenames\n  * for a single physical file. You must read the contents of the directory\n  * <p>\n  * The C structure that indicates if a specific block is a real block\n  * that contains data or is a sparse block that is not persisted to the\n- * disk is:\n+ * disk is:</p>\n  * <pre>\n  * #define TP_BSIZE    1024\n  * #define TP_NINDIR   (TP_BSIZE/2)\n  *\n  * union u_data {\n- *   char    s_addrs[TP_NINDIR]; // 1 => data; 0 => hole in inode\n+ *   char    s_addrs[TP_NINDIR]; // 1 =&gt; data; 0 =&gt; hole in inode\n  *   int32_t s_inos[TP_NINOS];   // table of first inode on each volume\n  * } u_data;\n- * </pre></p>\n+ * </pre>\n  *\n  * @NotThreadSafe\n  */\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n     /**\n      * Set the long file mode.\n      * This can be LONGFILE_ERROR(0), LONGFILE_TRUNCATE(1) or LONGFILE_GNU(2).\n-     * This specifies the treatment of long file names (names >= TarConstants.NAMELEN).\n+     * This specifies the treatment of long file names (names &gt;= TarConstants.NAMELEN).\n      * Default is LONGFILE_ERROR.\n      * @param longFileMode the mode to use\n      */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n  * Adds Unix file permission and UID/GID fields as well as symbolic\n  * link handling.\n  *\n- * <p>This class uses the ASi extra field in the format:\n+ * <p>This class uses the ASi extra field in the format:</p>\n  * <pre>\n  *         Value         Size            Description\n  *         -----         ----            -----------\n  *         GID           Short           group ID\n  *         (var.)        variable        symbolic link filename\n  * </pre>\n- * taken from appnote.iz (Info-ZIP note, 981119) found at <a\n+ * <p>taken from appnote.iz (Info-ZIP note, 981119) found at <a\n  * href=\"ftp://ftp.uu.net/pub/archiving/zip/doc/\">ftp://ftp.uu.net/pub/archiving/zip/doc/</a></p>\n-\n  *\n  * <p>Short is two bytes and Long is four bytes in big endian byte and\n  * word order, device numbers are currently not supported.</p>\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField.java\n  * <p>Stores the UTF-8 version of the file comment as stored in the\n  * central directory header.</p>\n  *\n- * <p>See {@link\n- * \"http://www.pkware.com/documents/casestudies/APPNOTE.TXT PKWARE's\n- * APPNOTE.TXT, section 4.6.8\"}.</p>\n+ * @see <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">PKWARE's\n+ * APPNOTE.TXT, section 4.6.8</a>\n  *\n  * @NotThreadSafe super-class is not thread-safe\n  */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnicodePathExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnicodePathExtraField.java\n  * <p>Stores the UTF-8 version of the file name field as stored in the \n  * local header and central directory header.</p>\n  *\n- * <p>See {@link\n- * \"http://www.pkware.com/documents/casestudies/APPNOTE.TXT PKWARE's\n- * APPNOTE.TXT, section 4.6.9\"}.</p>\n+ * @see <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">PKWARE's\n+ * APPNOTE.TXT, section 4.6.9</a>\n+ *\n  * @NotThreadSafe super-class is not thread-safe\n  */\n public class UnicodePathExtraField extends AbstractUnicodeExtraField {\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java\n /**\n  * Wrapper for extra field data that doesn't conform to the recommended format of header-tag + size + data.\n  *\n- * <p>The header-id is artificial (and not listed as a known ID in\n- * {@link <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">\n- * APPNOTE.TXT</a>}).  Since it isn't used anywhere except to satisfy the\n- * ZipExtraField contract it shouldn't matter anyway.</p>\n+ * <p>The header-id is artificial (and not listed as a known ID in <a\n+ * href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">APPNOTE.TXT</a>).  Since it isn't used anywhere\n+ * except to satisfy the ZipExtraField contract it shouldn't matter anyway.</p>\n  *\n  * @since 1.1\n  * @NotThreadSafe\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java\n  * allows one to store additional timestamps, and, in addition, the timestamps\n  * are stored using per-second granularity (zip's default behaviour can only store\n  * timestamps to the nearest <em>even</em> second).\n- * <p/>\n  * </p><p>\n  * Unfortunately, 32 (unsigned) bits can only store dates up to the year 2106,\n  * and so this extra field will eventually be obsolete.  Enjoy it while it lasts!\n     /**\n      * Length of the extra field in the local file data - without\n      * Header-ID or length specifier.\n-     * <p/>\n-     * For X5455 the central length is often smaller than the\n+     *\n+     * <p>For X5455 the central length is often smaller than the\n      * local length, because central cannot contain access or create\n-     * timestamps.\n+     * timestamps.</p>\n      *\n      * @return a <code>ZipShort</code> for the length of the data of this extra field\n      */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java\n import static org.apache.commons.compress.archivers.zip.ZipUtil.unsignedIntToSignedByte;\n \n /**\n- * An extra field that stores UNIX UID/GID data (owner & group ownership) for a given\n+ * An extra field that stores UNIX UID/GID data (owner &amp; group ownership) for a given\n  * zip entry.  We're using the field definition given in Info-Zip's source archive:\n  * zip-3.0.tar.gz/proginfo/extrafld.txt\n- * <p/>\n+ *\n  * <pre>\n  * Value         Size        Description\n  * -----         ----        -----------\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java\n  * Holds size and other extended information for entries that use Zip64\n  * features.\n  *\n- * <p>See {@link\n- * \"http://www.pkware.com/documents/casestudies/APPNOTE.TXT PKWARE's\n- * APPNOTE.TXT, section 4.5.3\"}.</p>\n- *\n  * <p>Currently Commons Compress doesn't support encrypting the\n- * central directory so the note about masking doesn't apply.</p>\n+ * central directory so the note in APPNOTE.TXT about masking doesn't\n+ * apply.</p>\n  *\n  * <p>The implementation relies on data being read from the local file\n  * header and assumes that both size values are always present.</p>\n+ *\n+ * @see <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">PKWARE's\n+ * APPNOTE.TXT, section 4.5.3</a>\n  *\n  * @since 1.2\n  * @NotThreadSafe\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n  * access to the internal and external file attributes.\n  *\n  * <p>The extra data is expected to follow the recommendation of\n- * {@link <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">\n- * APPNOTE.txt</a>}:</p>\n+ * <a href=\"http://www.pkware.com/documents/casestudies/APPNOTE.TXT\">APPNOTE.TXT</a>:</p>\n  * <ul>\n  *   <li>the extra byte array consists of a sequence of extra fields</li>\n  *   <li>each extra fields starts by a two byte header id followed by\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n      * the archive's central directory.\n      *\n      * @param name name of the entry.\n-     * @return the Iterable<ZipArchiveEntry> corresponding to the\n+     * @return the Iterable&lt;ZipArchiveEntry&gt; corresponding to the\n      * given name\n      * @since 1.6\n      */\n      * appear within the archive.\n      *\n      * @param name name of the entry.\n-     * @return the Iterable<ZipArchiveEntry> corresponding to the\n+     * @return the Iterable&lt;ZipArchiveEntry&gt; corresponding to the\n      * given name\n      * @since 1.6\n      */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n         new ZipLong(0X30304B50L);\n \n     /**\n-     * Archive extra data record signature.</p>\n+     * Archive extra data record signature.\n      * @since 1.5\n      */\n     public static final ZipLong AED_SIG = new ZipLong(0X08064B50L);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java\n     /**\n      * Compression Method 9 for enhanced deflate.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     ENHANCED_DEFLATED(9),\n \n     /**\n      * PKWARE Data Compression Library Imploding.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     PKWARE_IMPLODING(10),\n \n     /**\n      * Compression Method 12 for bzip2.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     BZIP2(12),\n \n     /**\n      * Compression Method 14 for LZMA.\n      * \n-     * @see \"http://www.7-zip.org/sdk.html\"\n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.7-zip.org/sdk.html\">http://www.7-zip.org/sdk.html</a>\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     LZMA(14),\n \n     /**\n      * Compression Method 96 for Jpeg compression.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     JPEG(96),\n \n     /**\n      * Compression Method 97 for WavPack.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     WAVPACK(97),\n \n     /**\n      * Compression Method 98 for PPMd.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     PPMD(98),\n \n     /**\n      * Compression Method 99 for AES encryption.\n      * \n-     * @see \"http://www.winzip.com/wz54.htm\"\n+     * @see <a href=\"http://www.winzip.com/wz54.htm\">http://www.winzip.com/wz54.htm</a>\n      */\n     AES_ENCRYPTED(99),\n \n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n  * &lt;code&gt;65k + (5 * blocksize)&lt;/code&gt;.\n  * </pre>\n  *\n- * <table width=\"100%\" border=\"1\">\n- * <colgroup> <col width=\"33%\" /> <col width=\"33%\" /> <col width=\"33%\" />\n- * </colgroup>\n+ * <table width=\"100%\" border=\"1\" summary=\"Memory usage by blocksize\">\n  * <tr>\n  * <th colspan=\"3\">Memory usage by blocksize</th>\n  * </tr>\n      * @throws IOException\n      *             if an I/O error occurs in the specified stream.\n      * @throws IllegalArgumentException\n-     *             if <code>(blockSize < 1) || (blockSize > 9)</code>.\n+     *             if <code>(blockSize &lt; 1) || (blockSize &gt; 9)</code>.\n      * @throws NullPointerException\n      *             if <code>out == null</code>.\n      *\n--- a/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java\n     /**\n      * Generates a string containing the name, isDirectory setting and size of an entry.\n      * <p>\n-     * For example:<br/>\n-     * <tt>-    2000 main.c</tt><br/>\n-     * <tt>d     100 testfiles</tt><br/>\n+     * For example:\n+     * <pre>\n+     * -    2000 main.c\n+     * d     100 testfiles\n+     * </pre>\n      * \n      * @return the representation of the entry\n      */\n--- a/src/main/java/org/apache/commons/compress/utils/CharsetNames.java\n+++ b/src/main/java/org/apache/commons/compress/utils/CharsetNames.java\n  * documentation for your implementation to see if any other encodings are supported. </cite>\n  * </p>\n  * \n- * <ul>\n- * <li><code>US-ASCII</code><br/>\n- * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</li>\n- * <li><code>ISO-8859-1</code><br/>\n- * ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</li>\n- * <li><code>UTF-8</code><br/>\n- * Eight-bit Unicode Transformation Format.</li>\n- * <li><code>UTF-16BE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, big-endian byte order.</li>\n- * <li><code>UTF-16LE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, little-endian byte order.</li>\n- * <li><code>UTF-16</code><br/>\n- * Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n- * accepted on input, big-endian used on output.)</li>\n- * </ul>\n+ * <dl>\n+ * <dt><code>US-ASCII</code></dt>\n+ * <dd>Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</dd>\n+ * <dt><code>ISO-8859-1</code></dt>\n+ * <dd>ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</dd>\n+ * <dt><code>UTF-8</code></dt>\n+ * <dd>Eight-bit Unicode Transformation Format.</dd>\n+ * <dt><code>UTF-16BE</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, big-endian byte order.</dd>\n+ * <dt><code>UTF-16LE</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, little-endian byte order.</dd>\n+ * <dt><code>UTF-16</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n+ * accepted on input, big-endian used on output.)</dd>\n+ * </dl>\n  * \n- * This perhaps would best belong in the [lang] project. Even if a similar interface is defined in [lang], it is not\n- * foreseen that [codec] would be made to depend on [lang].\n+ * <p>This perhaps would best belong in the [lang] project. Even if a similar interface is defined in [lang], it is not\n+ * foreseen that [compress] would be made to depend on [lang].</p>\n  * \n  * @see <a href=\"http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n  * @since 1.4\n  */\n public class CharsetNames {\n     /**\n-     * CharEncodingISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1. </p>\n+     * CharEncodingISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.\n      * <p>\n      * Every implementation of the Java platform is required to support this character encoding.\n      * </p>\n      * @see <a href=\"http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n      */\n     public static final String UTF_8 = \"UTF-8\";\n-}\n+}\n--- a/src/main/java/org/apache/commons/compress/utils/Charsets.java\n+++ b/src/main/java/org/apache/commons/compress/utils/Charsets.java\n  * documentation for your implementation to see if any other encodings are supported. </cite>\n  * </p>\n  *\n- * <ul>\n- * <li><code>US-ASCII</code><br/>\n- * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</li>\n- * <li><code>ISO-8859-1</code><br/>\n- * ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</li>\n- * <li><code>UTF-8</code><br/>\n- * Eight-bit Unicode Transformation Format.</li>\n- * <li><code>UTF-16BE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, big-endian byte order.</li>\n- * <li><code>UTF-16LE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, little-endian byte order.</li>\n- * <li><code>UTF-16</code><br/>\n- * Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n- * accepted on input, big-endian used on output.)</li>\n- * </ul>\n+ * <dl>\n+ * <dt><code>US-ASCII</code></dt>\n+ * <dd>Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</dd>\n+ * <dt><code>ISO-8859-1</code></dt>\n+ * <dd>ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</dd>\n+ * <dt><code>UTF-8</code></dt>\n+ * <dd>Eight-bit Unicode Transformation Format.</dd>\n+ * <dt><code>UTF-16BE</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, big-endian byte order.</dd>\n+ * <dt><code>UTF-16LE</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, little-endian byte order.</dd>\n+ * <dt><code>UTF-16</code></dt>\n+ * <dd>Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n+ * accepted on input, big-endian used on output.)</dd>\n+ * </dl>\n  *\n- * This class best belongs in the Commons Lang or IO project. Even if a similar class is defined in another Commons component, it is\n- * not foreseen that Commons Compress would be made to depend on another Commons component.\n+ * <p>This class best belongs in the Commons Lang or IO project. Even if a similar class is defined in another Commons\n+ * component, it is not foreseen that Commons Compress would be made to depend on another Commons component.</p>\n  *\n  * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n  * @since 1.4\n     }\n \n     /**\n-     * CharsetNamesISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1. </p>\n+     * CharsetNamesISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.\n      * <p>\n      * Every implementation of the Java platform is required to support this character encoding.\n      * </p>", "timestamp": 1387695823, "metainfo": ""}