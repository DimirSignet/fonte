{"sha": "8da377299d085b4ce1f15dbc0732232ea32e601d", "log": "COMPRESS-262 be more lenient when parsing tar headers as some dialect use up all space for big numbers  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n             }\n         }\n \n-        // Must have trailing NUL or space\n-        byte trailer;\n-        trailer = buffer[end-1];\n-        if (trailer == 0 || trailer == ' '){\n-            end--;\n-        } else {\n-            throw new IllegalArgumentException(\n-                    exceptionMessage(buffer, offset, length, end-1, trailer));\n-        }\n-        // May have additional NULs or spaces\n-        trailer = buffer[end - 1];\n-        while (start < end - 1 && (trailer == 0 || trailer == ' ')) {\n+        // Trim all trailing NULs and spaces.\n+        // The ustar and POSIX tar specs require a trailing NUL or\n+        // space but some implementations use the extra digit for big\n+        // sizes/uids/gids ...\n+        byte trailer = buffer[end - 1];\n+        while (start < end && (trailer == 0 || trailer == ' ')) {\n             end--;\n             trailer = buffer[end - 1];\n+        }\n+        if (start == end) {\n+            throw new IllegalArgumentException(\n+                    exceptionMessage(buffer, offset, length, start, trailer));\n         }\n \n         for ( ;start < end; start++) {\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n         long value; \n         byte [] buffer;\n         final long MAX_OCTAL  = 077777777777L; // Allowed 11 digits\n-        final String maxOctal = \"77777777777 \"; // Maximum valid octal\n+        final long MAX_OCTAL_OVERFLOW  = 0777777777777L; // in fact 12 for some implementations\n+        final String maxOctal = \"777777777777\"; // Maximum valid octal\n         buffer = maxOctal.getBytes(CharsetNames.UTF_8);\n+        value = TarUtils.parseOctal(buffer,0, buffer.length);\n+        assertEquals(MAX_OCTAL_OVERFLOW, value);\n+        buffer[buffer.length - 1] = ' ';\n         value = TarUtils.parseOctal(buffer,0, buffer.length);\n         assertEquals(MAX_OCTAL, value);\n         buffer[buffer.length-1]=0;\n         try {\n             TarUtils.parseOctal(buffer,0, buffer.length);\n             fail(\"Expected IllegalArgumentException\");\n-        } catch (IllegalArgumentException expected) {\n-        }\n-        buffer = \"77777777777\".getBytes(CharsetNames.UTF_8); // Invalid input - no trailer\n-        try {\n-            TarUtils.parseOctal(buffer,0, buffer.length);\n-            fail(\"Expected IllegalArgumentException - no trailer\");\n         } catch (IllegalArgumentException expected) {\n         }\n         buffer = \" 0 07 \".getBytes(CharsetNames.UTF_8); // Invalid - embedded space", "timestamp": 1392960008, "metainfo": ""}