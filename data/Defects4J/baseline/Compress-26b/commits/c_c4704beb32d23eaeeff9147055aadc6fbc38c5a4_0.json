{"sha": "c4704beb32d23eaeeff9147055aadc6fbc38c5a4", "log": "test that proves PAX archives with big entries are read correctly.  COMPRESS-16  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java\n public class BigFilesIT {\n \n     @Test\n-    public void readFileBiggerThan8GByte() throws Exception {\n+    public void readFileBiggerThan8GByteStar() throws Exception {\n+        readFileBiggerThan8GByte(\"/8.star.tar.gz\");\n+    }\n+\n+    @Test\n+    public void readFileBiggerThan8GBytePosix() throws Exception {\n+        readFileBiggerThan8GByte(\"/8.posix.tar.gz\");\n+    }\n+\n+    private void readFileBiggerThan8GByte(String name) throws Exception {\n         GzipCompressorInputStream in = null;\n         TarArchiveInputStream tin = null;\n         try {\n             in =\n                 new GzipCompressorInputStream(BigFilesIT.class\n-                                              .getResourceAsStream(\"/8.tar.gz\"));\n+                                              .getResourceAsStream(name));\n             tin = new TarArchiveInputStream(in);\n             TarArchiveEntry e = tin.getNextTarEntry();\n             assertNotNull(e);", "timestamp": 1323260099, "metainfo": ""}