{"sha": "17cc253856d4f743bbb94f4288b16c067f250195", "log": "J\u00f6rg's solution is a lot simpler  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n \n import java.io.File;\n import java.io.IOException;\n+import java.security.NoSuchAlgorithmException;\n import javax.crypto.Cipher;\n-import javax.crypto.spec.IvParameterSpec;\n-import javax.crypto.spec.SecretKeySpec;\n import org.apache.commons.compress.AbstractTestCase;\n \n public class SevenZFileTest extends AbstractTestCase {\n         }\n     }\n \n-    private static boolean isStrongCryptoAvailable() {\n-        try {\n-            Cipher cipher = Cipher.getInstance(\"AES/CBC/NoPadding\");\n-            cipher.init(Cipher.DECRYPT_MODE,\n-                        new SecretKeySpec(new byte[32], \"AES\"),\n-                        new IvParameterSpec(new byte[16]));\n-            return true;\n-        } catch (Exception e) {\n-        }\n-        return false;\n+    private static boolean isStrongCryptoAvailable() throws NoSuchAlgorithmException {\n+        return Cipher.getMaxAllowedKeyLength(\"AES/ECB/PKCS5Padding\") >= 256;\n     }\n }", "timestamp": 1382526201, "metainfo": ""}