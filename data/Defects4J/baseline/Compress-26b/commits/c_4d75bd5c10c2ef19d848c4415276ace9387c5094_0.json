{"sha": "4d75bd5c10c2ef19d848c4415276ace9387c5094", "log": "Move mutable rNums array into separate utility class  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n             int su_ch2Shadow = this.data.ll8[this.su_tPos] & 0xff;\n             this.su_tPos = this.data.tt[this.su_tPos];\n             if (this.su_rNToGo == 0) {\n-                this.su_rNToGo = BZip2Constants.rNums[this.su_rTPos] - 1;\n+                this.su_rNToGo = Rand.rNums(this.su_rTPos) - 1;\n                 if (++this.su_rTPos == 512) {\n                     this.su_rTPos = 0;\n                 }\n             this.su_z = (char) (this.data.ll8[this.su_tPos] & 0xff);\n             this.su_tPos = this.data.tt[this.su_tPos];\n             if (this.su_rNToGo == 0) {\n-                this.su_rNToGo = BZip2Constants.rNums[this.su_rTPos] - 1;\n+                this.su_rNToGo = Rand.rNums(this.su_rTPos) - 1;\n                 if (++this.su_rTPos == 512) {\n                     this.su_rTPos = 0;\n                 }\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n         int rTPos = 0;\n         for (int i = 0, j = 1; i <= lastShadow; i = j, j++) {\n             if (rNToGo == 0) {\n-                rNToGo = (char) BZip2Constants.rNums[rTPos];\n+                rNToGo = (char) Rand.rNums(rTPos);\n                 if (++rTPos == 512) {\n                     rTPos = 0;\n                 }\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java\n     int MAX_SELECTORS = (2 + (900000 / G_SIZE));\n     int NUM_OVERSHOOT_BYTES = 20;\n \n-    /**\n-     * This array really shouldn't be here.\n-     * Again, for historical purposes it is.\n-     *\n-     * <p>FIXME: This array should be in a private or package private\n-     * location, since it could be modified by malicious code.</p>\n-     */\n-    int[] rNums = {\n-        619, 720, 127, 481, 931, 816, 813, 233, 566, 247,\n-        985, 724, 205, 454, 863, 491, 741, 242, 949, 214,\n-        733, 859, 335, 708, 621, 574,  73, 654, 730, 472,\n-        419, 436, 278, 496, 867, 210, 399, 680, 480,  51,\n-        878, 465, 811, 169, 869, 675, 611, 697, 867, 561,\n-        862, 687, 507, 283, 482, 129, 807, 591, 733, 623,\n-        150, 238,  59, 379, 684, 877, 625, 169, 643, 105,\n-        170, 607, 520, 932, 727, 476, 693, 425, 174, 647,\n-         73, 122, 335, 530, 442, 853, 695, 249, 445, 515,\n-        909, 545, 703, 919, 874, 474, 882, 500, 594, 612,\n-        641, 801, 220, 162, 819, 984, 589, 513, 495, 799,\n-        161, 604, 958, 533, 221, 400, 386, 867, 600, 782,\n-        382, 596, 414, 171, 516, 375, 682, 485, 911, 276,\n-         98, 553, 163, 354, 666, 933, 424, 341, 533, 870,\n-        227, 730, 475, 186, 263, 647, 537, 686, 600, 224,\n-        469,  68, 770, 919, 190, 373, 294, 822, 808, 206,\n-        184, 943, 795, 384, 383, 461, 404, 758, 839, 887,\n-        715,  67, 618, 276, 204, 918, 873, 777, 604, 560,\n-        951, 160, 578, 722,  79, 804,  96, 409, 713, 940,\n-        652, 934, 970, 447, 318, 353, 859, 672, 112, 785,\n-        645, 863, 803, 350, 139,  93, 354,  99, 820, 908,\n-        609, 772, 154, 274, 580, 184,  79, 626, 630, 742,\n-        653, 282, 762, 623, 680,  81, 927, 626, 789, 125,\n-        411, 521, 938, 300, 821,  78, 343, 175, 128, 250,\n-        170, 774, 972, 275, 999, 639, 495,  78, 352, 126,\n-        857, 956, 358, 619, 580, 124, 737, 594, 701, 612,\n-        669, 112, 134, 694, 363, 992, 809, 743, 168, 974,\n-        944, 375, 748,  52, 600, 747, 642, 182, 862,  81,\n-        344, 805, 988, 739, 511, 655, 814, 334, 249, 515,\n-        897, 955, 664, 981, 649, 113, 974, 459, 893, 228,\n-        433, 837, 553, 268, 926, 240, 102, 654, 459, 51,\n-        686, 754, 806, 760, 493, 403, 415, 394, 687, 700,\n-        946, 670, 656, 610, 738, 392, 760, 799, 887, 653,\n-        978, 321, 576, 617, 626, 502, 894, 679, 243, 440,\n-        680, 879, 194, 572, 640, 724, 926,  56, 204, 700,\n-        707, 151, 457, 449, 797, 195, 791, 558, 945, 679,\n-        297,  59,  87, 824, 713, 663, 412, 693, 342, 606,\n-        134, 108, 571, 364, 631, 212, 174, 643, 304, 329,\n-        343,  97, 430, 751, 497, 314, 983, 374, 822, 928,\n-        140, 206,  73, 263, 980, 736, 876, 478, 430, 305,\n-        170, 514, 364, 692, 829,  82, 855, 953, 676, 246,\n-        369, 970, 294, 750, 807, 827, 150, 790, 288, 923,\n-        804, 378, 215, 828, 592, 281, 565, 555, 710,  82,\n-        896, 831, 547, 261, 524, 462, 293, 465, 502,  56,\n-        661, 821, 976, 991, 658, 869, 905, 758, 745, 193,\n-        768, 550, 608, 933, 378, 286, 215, 979, 792, 961,\n-         61, 688, 793, 644, 986, 403, 106, 366, 905, 644,\n-        372, 567, 466, 434, 645, 210, 389, 550, 919, 135,\n-        780, 773, 635, 389, 707, 100, 626, 958, 165, 504,\n-        920, 176, 193, 713, 857, 265, 203,  50, 668, 108,\n-        645, 990, 626, 197, 510, 357, 358, 850, 858, 364,\n-        936, 638\n-    };\n }\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/Rand.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.commons.compress.compressors.bzip2;\n+\n+/**\n+ * Random numbers for both the compress and decompress BZip2 classes.\n+ */\n+final class Rand {\n+\n+    private static final int[] RNUMS = {\n+        619, 720, 127, 481, 931, 816, 813, 233, 566, 247,\n+        985, 724, 205, 454, 863, 491, 741, 242, 949, 214,\n+        733, 859, 335, 708, 621, 574,  73, 654, 730, 472,\n+        419, 436, 278, 496, 867, 210, 399, 680, 480,  51,\n+        878, 465, 811, 169, 869, 675, 611, 697, 867, 561,\n+        862, 687, 507, 283, 482, 129, 807, 591, 733, 623,\n+        150, 238,  59, 379, 684, 877, 625, 169, 643, 105,\n+        170, 607, 520, 932, 727, 476, 693, 425, 174, 647,\n+         73, 122, 335, 530, 442, 853, 695, 249, 445, 515,\n+        909, 545, 703, 919, 874, 474, 882, 500, 594, 612,\n+        641, 801, 220, 162, 819, 984, 589, 513, 495, 799,\n+        161, 604, 958, 533, 221, 400, 386, 867, 600, 782,\n+        382, 596, 414, 171, 516, 375, 682, 485, 911, 276,\n+         98, 553, 163, 354, 666, 933, 424, 341, 533, 870,\n+        227, 730, 475, 186, 263, 647, 537, 686, 600, 224,\n+        469,  68, 770, 919, 190, 373, 294, 822, 808, 206,\n+        184, 943, 795, 384, 383, 461, 404, 758, 839, 887,\n+        715,  67, 618, 276, 204, 918, 873, 777, 604, 560,\n+        951, 160, 578, 722,  79, 804,  96, 409, 713, 940,\n+        652, 934, 970, 447, 318, 353, 859, 672, 112, 785,\n+        645, 863, 803, 350, 139,  93, 354,  99, 820, 908,\n+        609, 772, 154, 274, 580, 184,  79, 626, 630, 742,\n+        653, 282, 762, 623, 680,  81, 927, 626, 789, 125,\n+        411, 521, 938, 300, 821,  78, 343, 175, 128, 250,\n+        170, 774, 972, 275, 999, 639, 495,  78, 352, 126,\n+        857, 956, 358, 619, 580, 124, 737, 594, 701, 612,\n+        669, 112, 134, 694, 363, 992, 809, 743, 168, 974,\n+        944, 375, 748,  52, 600, 747, 642, 182, 862,  81,\n+        344, 805, 988, 739, 511, 655, 814, 334, 249, 515,\n+        897, 955, 664, 981, 649, 113, 974, 459, 893, 228,\n+        433, 837, 553, 268, 926, 240, 102, 654, 459, 51,\n+        686, 754, 806, 760, 493, 403, 415, 394, 687, 700,\n+        946, 670, 656, 610, 738, 392, 760, 799, 887, 653,\n+        978, 321, 576, 617, 626, 502, 894, 679, 243, 440,\n+        680, 879, 194, 572, 640, 724, 926,  56, 204, 700,\n+        707, 151, 457, 449, 797, 195, 791, 558, 945, 679,\n+        297,  59,  87, 824, 713, 663, 412, 693, 342, 606,\n+        134, 108, 571, 364, 631, 212, 174, 643, 304, 329,\n+        343,  97, 430, 751, 497, 314, 983, 374, 822, 928,\n+        140, 206,  73, 263, 980, 736, 876, 478, 430, 305,\n+        170, 514, 364, 692, 829,  82, 855, 953, 676, 246,\n+        369, 970, 294, 750, 807, 827, 150, 790, 288, 923,\n+        804, 378, 215, 828, 592, 281, 565, 555, 710,  82,\n+        896, 831, 547, 261, 524, 462, 293, 465, 502,  56,\n+        661, 821, 976, 991, 658, 869, 905, 758, 745, 193,\n+        768, 550, 608, 933, 378, 286, 215, 979, 792, 961,\n+         61, 688, 793, 644, 986, 403, 106, 366, 905, 644,\n+        372, 567, 466, 434, 645, 210, 389, 550, 919, 135,\n+        780, 773, 635, 389, 707, 100, 626, 958, 165, 504,\n+        920, 176, 193, 713, 857, 265, 203,  50, 668, 108,\n+        645, 990, 626, 197, 510, 357, 358, 850, 858, 364,\n+        936, 638\n+    };\n+\n+    /**\n+     * Return the random number at a specific index.\n+     * \n+     * @param i the index\n+     * @return the random number\n+     */\n+    static int rNums(int i){\n+        return RNUMS[i];\n+    }\n+}", "timestamp": 1239796488, "metainfo": ""}