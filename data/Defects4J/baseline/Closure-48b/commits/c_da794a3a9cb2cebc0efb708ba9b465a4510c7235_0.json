{"sha": "da794a3a9cb2cebc0efb708ba9b465a4510c7235", "log": "short-circuit mutatesThis propagation because it is broken  R=johnlenz DELTA=25  (20 added, 0 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1203472   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PureFunctionIdentifier.java\n+++ b/src/com/google/javascript/jscomp/PureFunctionIdentifier.java\n             // direct method call because null and undefined don't have any\n             // properties.\n             String name = objectNode.getString();\n-            if (!caller.knownLocals.contains(name)) {\n+\n+            // TODO(nicksantos): Turn this back on when locals-tracking\n+            // is fixed. See testLocalizedSideEffects11.\n+            //if (!caller.knownLocals.contains(name)) {\n               if (!caller.mutatesGlobalState()) {\n                 caller.setTaintsGlobalState();\n                 changed = true;\n               }\n-            }\n+            //}\n           } else if (objectNode != null && NodeUtil.isThis(objectNode)) {\n             if (!caller.mutatesThis()) {\n               caller.setTaintsThis();\n--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java\n+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java\n         \"  x.externObjSEThisMethod('') \" +\n         \"};\" +\n         \"f();\",\n-        ImmutableList.<String>of(\"externObjSEThis\", \"f\"));\n+        ImmutableList.<String>of(\"externObjSEThis\"));\n   }\n \n   public void testAnnotationInExterns_new8() throws Exception {\n                      \"  var a = new A; a.g(); return a;\" +\n                      \"}\" +\n                      \"f()\",\n-                     ImmutableList.<String>of(\"A\", \"f\"));\n+                     ImmutableList.<String>of(\"A\"));\n+  }\n+\n+  public void testLocalizedSideEffects11() throws Exception {\n+    // Calling a function of a local object that taints this.\n+    checkMarkedCalls(\n+        \"/** @constructor */ function A() {}\" +\n+        \"A.prototype.update = function() { this.x = 1; };\" +\n+        \"/** @constructor */ function B() { \" +\n+        \"  this.a_ = new A();\" +\n+        \"}\" +\n+        \"B.prototype.updateA = function() {\" +\n+        \"  var b = this.a_;\" +\n+        \"  b.update();\" +\n+        \"};\" +\n+        \"var x = new B();\" +\n+        \"x.updateA();\",\n+        ImmutableList.of(\"A\", \"B\"));\n   }\n \n   public void testUnaryOperators1() throws Exception {\n         \"function g(){var a = new A; a.foo(); return a}\\n\" +\n         \"f(); g()\";\n \n-    checkMarkedCalls(source, ImmutableList.<String>of(\"A\", \"A\", \"f\", \"g\"));\n+    checkMarkedCalls(source, ImmutableList.<String>of(\"A\", \"A\", \"f\"));\n   }\n \n   public void testCallFunctionFOrG() throws Exception {", "timestamp": 1289888417, "metainfo": ""}