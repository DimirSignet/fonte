{"sha": "63df133d0850805818d1e280ba47dcefc9763c89", "log": "Make sure that functions are called with a 'this' type. Fixes issue 440  R=zhuyi DELTA=60  (59 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2097   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n           \"JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE\",\n           \"Interface {0} has a property {1} with incompatible types in \" +\n           \"its super interfaces {2} and {3}\");\n+\n+  static final DiagnosticType EXPECTED_THIS_TYPE =\n+      DiagnosticType.warning(\n+          \"JSC_EXPECTED_THIS_TYPE\",\n+          \"\\\"{0}\\\" must be called with a \\\"this\\\" type\");\n \n   static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(\n       DETERMINISTIC_TEST,\n       WRONG_ARGUMENT_COUNT,\n       ILLEGAL_IMPLICIT_CAST,\n       INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,\n+      EXPECTED_THIS_TYPE,\n       RhinoErrorReporter.TYPE_PARSE_ERROR,\n       TypedScopeCreator.UNKNOWN_LENDS,\n       TypedScopeCreator.LENDS_ON_NON_OBJECT,\n         report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n       }\n \n+      // Functions with explcit 'this' types must be called in a GETPROP\n+      // or GETELEM.\n+      if (functionType.isOrdinaryFunction() &&\n+          !functionType.getTypeOfThis().isUnknownType() &&\n+          !functionType.getTypeOfThis().isNativeObjectType() &&\n+          !(child.getType() == Token.GETELEM ||\n+            child.getType() == Token.GETPROP)) {\n+        report(t, n, EXPECTED_THIS_TYPE, functionType.toString());\n+      }\n+\n       visitParameterList(t, n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());\n     } else {\n--- a/test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java\n+++ b/test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java\n   }\n \n   public void testStatement() {\n-    test(\"/** @constructor */ \\n\" +\n+    test(\"/**\\n\" +\n+         \" * @fileoverview\\n\" +\n+         \" * @notypecheck\\n\" +\n+         \" */ \\n\" +\n+         \"/** @constructor */\" +\n         \"function e(){}\" +\n            \"var x = e.prototype.method1 = function(){};\" +\n            \"var y = new e; x()\",\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"actual parameter 1 of f does not match formal parameter\\n\" +\n         \"found   : Date\\n\" +\n         \"required: number\");\n+  }\n+\n+  public void testThisTypeOfFunction1() throws Exception {\n+    testTypes(\n+        \"/** @type {function(this:Object)} */ function f() {}\" +\n+        \"f();\");\n+  }\n+\n+  public void testThisTypeOfFunction2() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"/** @type {function(this:F)} */ function f() {}\" +\n+        \"f();\",\n+        \"\\\"function (this:F): ?\\\" must be called with a \\\"this\\\" type\");\n+  }\n+\n+  public void testThisTypeOfFunction3() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"F.prototype.bar = function() {};\" +\n+        \"var f = (new F()).bar; f();\",\n+        \"\\\"function (this:F): undefined\\\" must be called with a \\\"this\\\" type\");\n+  }\n+\n+  public void testThisTypeOfFunction4() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"F.prototype.moveTo = function(x, y) {};\" +\n+        \"F.prototype.lineTo = function(x, y) {};\" +\n+        \"function demo() {\" +\n+        \"  var path = new F();\" +\n+        \"  var points = [[1,1], [2,2]];\" +\n+        \"  for (var i = 0; i < points.length; i++) {\" +\n+        \"    (i == 0 ? path.moveTo : path.lineTo)(\" +\n+        \"       points[i][0], points[i][1]);\" +\n+        \"  }\" +\n+        \"}\",\n+        \"\\\"function (this:F, ?, ?): undefined\\\" \" +\n+        \"must be called with a \\\"this\\\" type\");\n   }\n \n   public void testGlobalThis1() throws Exception {", "timestamp": 1306854896, "metainfo": ""}