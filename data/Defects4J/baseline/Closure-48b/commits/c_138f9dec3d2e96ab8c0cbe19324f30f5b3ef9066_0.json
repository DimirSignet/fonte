{"sha": "138f9dec3d2e96ab8c0cbe19324f30f5b3ef9066", "log": "more symbol table improvements  R=acleung DELTA=191  (135 added, 36 deleted, 20 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3395   ", "commit": "\n--- a/src/com/google/javascript/jscomp/SymbolTable.java\n+++ b/src/com/google/javascript/jscomp/SymbolTable.java\n   }\n \n   /**\n+   * Declare a symbol after the main symbol table was constructed.\n+   * Throws an exception if you try to declare a symbol twice.\n+   */\n+  public Symbol declareInferredSymbol(\n+      SymbolScope scope, String name, Node declNode) {\n+    Symbol symbol = new Symbol(name, null, true, scope);\n+    symbols.put(declNode, name, symbol);\n+\n+    Symbol replacement = scope.ownSymbols.put(name, symbol);\n+    Preconditions.checkState(replacement == null, \"duplicate symbol\");\n+\n+    symbol.setDeclaration(new Reference(symbol, declNode));\n+    return symbol;\n+  }\n+\n+  /**\n    * Gets the scope that contains the given node.\n    * If {@code n} is a function name, we return the scope that contains the\n    * function, not the function itself.", "timestamp": 1317679736, "metainfo": ""}