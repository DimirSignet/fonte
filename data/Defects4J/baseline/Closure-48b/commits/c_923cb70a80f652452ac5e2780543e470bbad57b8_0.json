{"sha": "923cb70a80f652452ac5e2780543e470bbad57b8", "log": "Don't inline aliases if there is a modification on something that is copy-by-value.  R=nicksantos DELTA=31  (31 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2499   ", "commit": "\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n                 isSet = true;\n                 type = Name.Type.FUNCTION;\n                 break;\n+              case Token.INC:\n+              case Token.DEC:\n+                isSet = true;\n+                type = Name.Type.OTHER;\n+                break;\n+              default:\n+                if (NodeUtil.isAssignmentOp(parent) &&\n+                    parent.getFirstChild() == n) {\n+                  isSet = true;\n+                  type = Name.Type.OTHER;\n+                }\n             }\n           }\n           name = n.getString();\n                   isPropAssign = true;\n                 }\n                 break;\n+              case Token.INC:\n+              case Token.DEC:\n+                isSet = true;\n+                type = Name.Type.OTHER;\n+                break;\n               case Token.GETPROP:\n                 return;\n+              default:\n+                if (NodeUtil.isAssignmentOp(parent) &&\n+                    parent.getFirstChild() == n) {\n+                  isSet = true;\n+                  type = Name.Type.OTHER;\n+                }\n             }\n           }\n           name = n.getQualifiedName();\n--- a/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n+++ b/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n          \"var b = x; function f() { var a = null; b(); }\");\n     test(\"var b = {}; b.c = x; function f() { var a = b.c; a(); }\",\n          \"var b$c = x; function f() { var a = null; b$c(); }\");\n+  }\n+\n+  public void testInlineAliasWithModifications() {\n+    testSame(\"var x = 10; function f() { var y = x; x++; alert(y)} \");\n+    testSame(\"var x = 10; function f() { var y = x; x+=1; alert(y)} \");\n+    test(\"var x = {}; x.x = 10; function f() {var y=x.x; x.x++; alert(y)}\",\n+         \"var x$x = 10; function f() {var y=x$x; x$x++; alert(y)}\");\n+    test(\"var x = {}; x.x = 10; function f() {var y=x.x; x.x+=1; alert(y)}\",\n+         \"var x$x = 10; function f() {var y=x$x; x$x+=1; alert(y)}\");\n   }\n \n   public void testCollapsePropertyOnExternType() {", "timestamp": 1309481754, "metainfo": ""}