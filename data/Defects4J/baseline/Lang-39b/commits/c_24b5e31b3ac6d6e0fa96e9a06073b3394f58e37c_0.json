{"sha": "24b5e31b3ac6d6e0fa96e9a06073b3394f58e37c", "log": "Refactor such that the ObjectUtils.identityToString() method logic is only in ObjectUtils and not duplicated in the builder package.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n  * @author <a href=\"mailto:janekdb@yahoo.co.uk\">Janek Bogucki</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n  * @author Stephen Colebourne\n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: ObjectUtils.java,v 1.10 2003/07/16 00:39:05 scolebourne Exp $\n+ * @version $Id: ObjectUtils.java,v 1.11 2003/07/16 01:47:39 ggregory Exp $\n  */\n public class ObjectUtils {\n     \n         if (object == null) {\n             return null;\n         }\n-        return new StringBuffer()\n+        return appendIdentityToString(new StringBuffer(), object).toString();\n+    }\n+\n+    /**\n+     * <p>Appends the toString that would be produced by <code>Object</code>\n+     * if a class did not override toString itself. <code>Null</code>\n+     * will return <code>null</code>.</p>\n+     *\n+     * @param buffer  the buffer to append to, may not be\n+     *  <code>null</code>\n+     * @param object  the object to create a toString for, may be\n+     *  <code>null</code>\n+     * @return the default toString text, or <code>null</code> if\n+     *  <code>null</code> passed in\n+     */\n+    public static StringBuffer appendIdentityToString(StringBuffer buffer, Object object) {\n+        if (object == null) {\n+            return null;\n+        }\n+        return buffer\n             .append(object.getClass().getName())\n             .append('@')\n-            .append(Integer.toHexString(System.identityHashCode(object)))\n-            .toString();\n+            .append(Integer.toHexString(System.identityHashCode(object)));\n     }\n \n     /**\n--- a/src/java/org/apache/commons/lang/builder/ToStringBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/ToStringBuilder.java\n package org.apache.commons.lang.builder;\n \n import org.apache.commons.lang.BooleanUtils;\n+import org.apache.commons.lang.ObjectUtils;\n \n /**\n  * <p>Builds <code>toString()</code> values.</p>\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @since 1.0\n- * @version $Id: ToStringBuilder.java,v 1.24 2003/07/14 22:25:03 bayard Exp $\n+ * @version $Id: ToStringBuilder.java,v 1.25 2003/07/16 01:47:39 ggregory Exp $\n  */\n public class ToStringBuilder {\n \n      * @param object  the <code>Object</code> whose class name and id to output\n      */\n     public ToStringBuilder appendAsObjectToString(Object object) {\n-        this.getStyle().appendAsObjectToString(this.getStringBuffer(), object);\n+        ObjectUtils.appendIdentityToString(this.getStringBuffer(), object);\n         return this;\n     }\n \n--- a/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n+++ b/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n import java.util.Collection;\n import java.util.Map;\n \n+import org.apache.commons.lang.ObjectUtils;\n import org.apache.commons.lang.SystemUtils;\n /**\n  * <p><code>ToStringStyle</code> works with <code>ToStringBuilder</code>\n  * @author Stephen Colebourne\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: ToStringStyle.java,v 1.15 2003/07/14 22:25:04 bayard Exp $\n+ * @version $Id: ToStringStyle.java,v 1.16 2003/07/16 01:47:39 ggregory Exp $\n  */\n public abstract class ToStringStyle implements Serializable {\n     \n     protected void appendInternal(StringBuffer buffer, String fieldName, Object value, boolean detail) {\n         if (ReflectionToStringBuilder.isRegistered(value) \n                 && !(value instanceof Number || value instanceof Boolean || value instanceof Character)) {\n-            appendAsObjectToString(buffer, value);\n+                ObjectUtils.appendIdentityToString(buffer, value);\n             \n         } else if (value instanceof Collection) {\n             if (detail) {\n             buffer.append('@');\n             buffer.append(Integer.toHexString(System.identityHashCode(object)));\n         }\n-    }\n-\n-    /**\n-     * <p>Appends with the same format as the default <code>Object toString()\n-     * </code> method. Appends the class name followed by \n-     * {@link System#identityHashCode(java.lang.Object)}.</p>\n-     * \n-     * @param buffer  the <code>StringBuffer</code> to populate\n-     * @param object  the <code>Object</code> whose class name and id to output\n-     */\n-    protected void appendAsObjectToString(StringBuffer buffer, Object object) {\n-        this.appendClassName(buffer, object);\n-        this.appendIdentityHashCode(buffer, object);\n     }\n \n     /**\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n  * @author <a href=\"mailto:jmcnally@collab.net\">John McNally</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: ObjectUtilsTest.java,v 1.4 2003/03/23 21:49:13 scolebourne Exp $\n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @version $Id: ObjectUtilsTest.java,v 1.5 2003/07/16 01:47:40 ggregory Exp $\n  */\n public class ObjectUtilsTest extends TestCase {\n     private static final String FOO = \"foo\";\n         assertEquals(null, ObjectUtils.identityToString(null));\n     }\n \n+    public void testAppendIdentityToString() {\n+        assertEquals(\n+            \"java.lang.String@\" + Integer.toHexString(System.identityHashCode(FOO)),\n+            ObjectUtils.appendIdentityToString(new StringBuffer(), FOO).toString());\n+        Integer i = new Integer(90);\n+        assertEquals(\n+            \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(i)),\n+            ObjectUtils.appendIdentityToString(new StringBuffer(), i).toString());\n+        assertEquals(null, ObjectUtils.appendIdentityToString(new StringBuffer(), null));\n+    }\n+\n     public void testNull() {\n         assertTrue(ObjectUtils.NULL != null);\n         assertTrue(ObjectUtils.NULL instanceof ObjectUtils.Null);\n         assertSame(ObjectUtils.NULL, SerializationUtils.clone(ObjectUtils.NULL));\n     }\n-   \n+\n }", "timestamp": 1058320060, "metainfo": ""}