{"sha": "5b2a0546ef167853d19c1721afed13560032daa6", "log": "Update Enum initial sizes for JDK1.2 and JDK1.3 from Mike Bowler, bug fix 16690   ", "commit": "\n--- a/src/java/org/apache/commons/lang/enum/Enum.java\n+++ b/src/java/org/apache/commons/lang/enum/Enum.java\n  *\n  * @author Stephen Colebourne\n  * @author Chris Webb\n+ * @author Mike Bowler\n  * @since 1.0\n- * @version $Id: Enum.java,v 1.8 2003/02/04 18:30:07 scolebourne Exp $\n+ * @version $Id: Enum.java,v 1.9 2003/02/04 18:42:50 scolebourne Exp $\n  */\n public abstract class Enum implements Comparable, Serializable {\n     /**\n      * An empty map, as JDK1.2 didn't have an empty map\n      */\n-    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap());\n+    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(1));\n     /**\n      * Map, key of class name, value of Entry.\n      */\n-    private static final Map cEnumClasses = new HashMap();\n+    private static final Map cEnumClasses = new HashMap(61);\n     /**\n      * The string representation of the Enum.\n      */\n      */\n     private static class Entry {\n         /** Map of Enum name to Enum */\n-        final Map map = new HashMap(50);\n+        final Map map = new HashMap(61);\n         /** List of Enums in source code order */\n         final List list = new ArrayList(25);\n \n     protected Enum(String name) {\n         super();\n         if (name == null || name.length() == 0) {\n-            throw new IllegalArgumentException(\"The Enum name must not be empty\");\n+            throw new IllegalArgumentException(\"The Enum name must not be empty or null\");\n         }\n         iName = name;\n         Class enumClass = Enum.getEnumClass(getClass());", "timestamp": 1044384170, "metainfo": ""}