{"sha": "d99ba35255d303f04b8531b807917c1528b9acef", "log": "Adding Locale overloads for toUpperCase and toLowerCase as provided by Benjamin Bentmann in LANG-430  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Locale;\n \n /**\n  * <p>Operations on {@link java.lang.String} that are\n      * StringUtils.upperCase(\"aBc\") = \"ABC\"\n      * </pre>\n      *\n+     * <p><strong>Note:</strong> As described in the documentation for {@link String#toUpperCase()},\n+     * the result of this method is affected by the current locale.\n+     * For platform-independent case transformations, the method {@link #lowerCase(String, Locale)}\n+     * should be used with a specific locale (e.g. {@link Locale#ENGLISH}).</p>\n+     *\n      * @param str  the String to upper case, may be null\n      * @return the upper cased String, <code>null</code> if null String input\n      */\n     }\n \n     /**\n+     * <p>Converts a String to upper case as per {@link String#toUpperCase(Locale)}.</p>\n+     *\n+     * <p>A <code>null</code> input String returns <code>null</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.upperCase(null, Locale.ENGLISH)  = null\n+     * StringUtils.upperCase(\"\", Locale.ENGLISH)    = \"\"\n+     * StringUtils.upperCase(\"aBc\", Locale.ENGLISH) = \"ABC\"\n+     * </pre>\n+     *\n+     * @param str  the String to upper case, may be null\n+     * @param locale  the locale that defines the case transformation rules, must not be null\n+     * @return the upper cased String, <code>null</code> if null String input\n+     * @since 3.0\n+     */\n+    public static String upperCase(String str, Locale locale) {\n+        if (str == null) {\n+            return null;\n+        }\n+        return str.toUpperCase(locale);\n+    }\n+\n+    /**\n      * <p>Converts a String to lower case as per {@link String#toLowerCase()}.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      * StringUtils.lowerCase(\"aBc\") = \"abc\"\n      * </pre>\n      *\n+     * <p><strong>Note:</strong> As described in the documentation for {@link String#toLowerCase()},\n+     * the result of this method is affected by the current locale.\n+     * For platform-independent case transformations, the method {@link #lowerCase(String, Locale)}\n+     * should be used with a specific locale (e.g. {@link Locale#ENGLISH}).</p>\n+     *\n      * @param str  the String to lower case, may be null\n      * @return the lower cased String, <code>null</code> if null String input\n      */\n             return null;\n         }\n         return str.toLowerCase();\n+    }\n+\n+    /**\n+     * <p>Converts a String to lower case as per {@link String#toLowerCase(Locale)}.</p>\n+     *\n+     * <p>A <code>null</code> input String returns <code>null</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.lowerCase(null, Locale.ENGLISH)  = null\n+     * StringUtils.lowerCase(\"\", Locale.ENGLISH)    = \"\"\n+     * StringUtils.lowerCase(\"aBc\", Locale.ENGLISH) = \"abc\"\n+     * </pre>\n+     *\n+     * @param str  the String to lower case, may be null\n+     * @param locale  the locale that defines the case transformation rules, must not be null\n+     * @return the lower cased String, <code>null</code> if null String input\n+     * @since 3.0\n+     */\n+    public static String lowerCase(String str, Locale locale) {\n+        if (str == null) {\n+            return null;\n+        }\n+        return str.toLowerCase(locale);\n     }\n \n     /**\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n+import java.util.Locale;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n     //-----------------------------------------------------------------------\n     public void testCaseFunctions() {\n         assertEquals(null, StringUtils.upperCase(null));\n+        assertEquals(null, StringUtils.upperCase(null, Locale.ENGLISH));\n         assertEquals(null, StringUtils.lowerCase(null));\n+        assertEquals(null, StringUtils.lowerCase(null, Locale.ENGLISH));\n         assertEquals(null, StringUtils.capitalize(null));\n         assertEquals(null, StringUtils.uncapitalise(null));\n         assertEquals(null, StringUtils.uncapitalize(null));\n                      \"foo test thing\", StringUtils.lowerCase(\"fOo test THING\") );\n         assertEquals(\"lowerCase(empty-string) failed\",\n                      \"\", StringUtils.lowerCase(\"\") );\n-        \n+\n+        assertEquals(\"upperCase(String, Locale) failed\",\n+                     \"FOO TEST THING\", StringUtils.upperCase(\"fOo test THING\", Locale.ENGLISH) );\n+        assertEquals(\"upperCase(empty-string, Locale) failed\",\n+                     \"\", StringUtils.upperCase(\"\", Locale.ENGLISH) );\n+        assertEquals(\"lowerCase(String, Locale) failed\",\n+                     \"foo test thing\", StringUtils.lowerCase(\"fOo test THING\", Locale.ENGLISH) );\n+        assertEquals(\"lowerCase(empty-string, Locale) failed\",\n+                     \"\", StringUtils.lowerCase(\"\", Locale.ENGLISH) );\n     }\n \n     public void testSwapCase_String() {", "timestamp": 1210481530, "metainfo": ""}