{"sha": "e805467d0420ad2fc99f0351ab98e52759680ef9", "log": "simplify testcase compat. w/ rev 587243  ", "commit": "\n--- a/src/test/org/apache/commons/lang/text/StrMatcherTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrMatcherTest.java\n     public void testCommaMatcher() {\n         StrMatcher matcher = StrMatcher.commaMatcher();\n         assertSame(matcher, StrMatcher.commaMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 0, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 1, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 0));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 1));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 2));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testTabMatcher() {\n         StrMatcher matcher = StrMatcher.tabMatcher();\n         assertSame(matcher, StrMatcher.tabMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 2));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 4));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testSpaceMatcher() {\n         StrMatcher matcher = StrMatcher.spaceMatcher();\n         assertSame(matcher, StrMatcher.spaceMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 4));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 5));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 6));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testSplitMatcher() {\n         StrMatcher matcher = StrMatcher.splitMatcher();\n         assertSame(matcher, StrMatcher.splitMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 2));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 4));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 5));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 6));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 7));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 8));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 9));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 10));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testTrimMatcher() {\n         StrMatcher matcher = StrMatcher.trimMatcher();\n         assertSame(matcher, StrMatcher.trimMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 2));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 4));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 5));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 6));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 7));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 8));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 9));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 10));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testSingleQuoteMatcher() {\n         StrMatcher matcher = StrMatcher.singleQuoteMatcher();\n         assertSame(matcher, StrMatcher.singleQuoteMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 10));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 11));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 12));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testDoubleQuoteMatcher() {\n         StrMatcher matcher = StrMatcher.doubleQuoteMatcher();\n         assertSame(matcher, StrMatcher.doubleQuoteMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 11));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 12));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testQuoteMatcher() {\n         StrMatcher matcher = StrMatcher.quoteMatcher();\n         assertSame(matcher, StrMatcher.quoteMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));\n-        assertEquals(1, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 10));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 11));\n+        assertEquals(1, matcher.isMatch(BUFFER1, 12));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testNoneMatcher() {\n         StrMatcher matcher = StrMatcher.noneMatcher();\n         assertSame(matcher, StrMatcher.noneMatcher());\n-        assertEquals(0, matcher.isMatch(BUFFER1, 0, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 1, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));\n-        assertEquals(0, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 0));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 1));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 2));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 4));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 5));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 6));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 7));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 8));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 9));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 10));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 11));\n+        assertEquals(0, matcher.isMatch(BUFFER1, 12));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testCharMatcher_char() {\n         StrMatcher matcher = StrMatcher.charMatcher('c');\n-        assertEquals(0, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));\n-        assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 0));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 1));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 2));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 4));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 5));\n     }\n \n     //-----------------------------------------------------------------------\n     public void testCharSetMatcher_String() {\n         StrMatcher matcher = StrMatcher.charSetMatcher(\"ace\");\n-        assertEquals(1, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));\n-        assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));\n-        assertEquals(1, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 0));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 1));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 2));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 3));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 4));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 5));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher(\"\"));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher((String) null));\n         assertTrue(StrMatcher.charSetMatcher(\"a\") instanceof StrMatcher.CharMatcher);\n     //-----------------------------------------------------------------------\n     public void testCharSetMatcher_charArray() {\n         StrMatcher matcher = StrMatcher.charSetMatcher(\"ace\".toCharArray());\n-        assertEquals(1, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));\n-        assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));\n-        assertEquals(1, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 0));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 1));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 2));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 3));\n+        assertEquals(1, matcher.isMatch(BUFFER2, 4));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 5));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher(new char[0]));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher((char[]) null));\n         assertTrue(StrMatcher.charSetMatcher(\"a\".toCharArray()) instanceof StrMatcher.CharMatcher);\n     //-----------------------------------------------------------------------\n     public void testStringMatcher_String() {\n         StrMatcher matcher = StrMatcher.stringMatcher(\"bc\");\n-        assertEquals(0, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));\n-        assertEquals(2, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));\n-        assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 0));\n+        assertEquals(2, matcher.isMatch(BUFFER2, 1));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 2));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 3));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 4));\n+        assertEquals(0, matcher.isMatch(BUFFER2, 5));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.stringMatcher(\"\"));\n         assertSame(StrMatcher.noneMatcher(), StrMatcher.stringMatcher((String) null));\n     }", "timestamp": 1193086010, "metainfo": ""}