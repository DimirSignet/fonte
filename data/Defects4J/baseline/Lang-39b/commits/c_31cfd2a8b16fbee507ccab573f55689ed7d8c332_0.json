{"sha": "31cfd2a8b16fbee507ccab573f55689ed7d8c332", "log": "LANG-290 - Rename isEnum to isValidEnum  ", "commit": "\n--- a/src/java/org/apache/commons/lang/EnumUtils.java\n+++ b/src/java/org/apache/commons/lang/EnumUtils.java\n      * @param enumClass  the class of the <code>enum</code> to get, not null\n      * @return the map of enum names to enums, never null\n      */\n-    public static <E extends Enum<E>> boolean isEnum(Class<E> enumClass, String enumName) {\n+    public static <E extends Enum<E>> boolean isValidEnum(Class<E> enumClass, String enumName) {\n         try {\n             Enum.valueOf(enumClass, enumName);\n             return true;\n--- a/src/test/org/apache/commons/lang/EnumUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/EnumUtilsTest.java\n     }\n \n     public void test_isEnum() {\n-        assertEquals(true, EnumUtils.isEnum(Traffic.class, \"RED\"));\n-        assertEquals(true, EnumUtils.isEnum(Traffic.class, \"AMBER\"));\n-        assertEquals(true, EnumUtils.isEnum(Traffic.class, \"GREEN\"));\n-        assertEquals(false, EnumUtils.isEnum(Traffic.class, \"PURPLE\"));\n+        assertEquals(true, EnumUtils.isValidEnum(Traffic.class, \"RED\"));\n+        assertEquals(true, EnumUtils.isValidEnum(Traffic.class, \"AMBER\"));\n+        assertEquals(true, EnumUtils.isValidEnum(Traffic.class, \"GREEN\"));\n+        assertEquals(false, EnumUtils.isValidEnum(Traffic.class, \"PURPLE\"));\n     }\n \n     public void test_getEnum() {", "timestamp": 1257089344, "metainfo": ""}