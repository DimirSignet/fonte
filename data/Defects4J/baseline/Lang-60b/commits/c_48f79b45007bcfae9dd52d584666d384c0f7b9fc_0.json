{"sha": "48f79b45007bcfae9dd52d584666d384c0f7b9fc", "log": "Fix ClassUtils.primitiveToWrapper() to handle Void.TYPE bug 34327, from Alban Peignier  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ClassUtils.java\n+++ b/src/java/org/apache/commons/lang/ClassUtils.java\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @author Norm Deane\n+ * @author Alban Peignier\n  * @since 2.0\n  * @version $Id$\n  */\n          primitiveWrapperMap.put(Long.TYPE, Long.class);\n          primitiveWrapperMap.put(Double.TYPE, Double.class);\n          primitiveWrapperMap.put(Float.TYPE, Float.class);\n+         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);\n     }\n     \n     /**\n     /**\n      * <p>Converts the specified primitive Class object to its corresponding\n      * wrapper Class object.</p>\n+     * \n+     * <p>NOTE: From v2.2, this method handles <code>Void.TYPE</code>,\n+     * returning <code>Void.TYPE</code>.</p>\n      *\n      * @param cls  the class to convert, may be null\n      * @return the wrapper class for <code>cls</code> or <code>cls</code> if\n--- a/src/test/org/apache/commons/lang/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ClassUtilsTest.java\n         assertEquals(\"ClassUtils.class -> ClassUtils.class\",\n             org.apache.commons.lang.ClassUtils.class, \n             ClassUtils.primitiveToWrapper(org.apache.commons.lang.ClassUtils.class));\n+        assertEquals(\"Void.TYPE -> Void.TYPE\",\n+            Void.TYPE, ClassUtils.primitiveToWrapper(Void.TYPE));\n             \n         // test null     \n         assertNull(\"null -> null\",\n \n         // test an array of no primitive classes\n         final Class[] noPrimitives = new Class[] {\n-                String.class, ClassUtils.class\n+                String.class, ClassUtils.class, Void.TYPE\n         };\n         // This used to return the exact same array, but no longer does.\n         assertNotSame(\"unmodified\", noPrimitives, ClassUtils.primitivesToWrappers(noPrimitives));", "timestamp": 1121378888, "metainfo": ""}