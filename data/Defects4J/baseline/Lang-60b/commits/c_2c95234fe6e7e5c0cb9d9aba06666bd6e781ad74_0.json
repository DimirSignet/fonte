{"sha": "2c95234fe6e7e5c0cb9d9aba06666bd6e781ad74", "log": "Add missing @return tags on subarray methods.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n  * @author Gary Gregory\n  * @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n  * @since 2.0\n- * @version $Id: ArrayUtils.java,v 1.29 2003/12/05 23:37:18 scolebourne Exp $\n+ * @version $Id: ArrayUtils.java,v 1.30 2003/12/29 01:08:38 ggregory Exp $\n  */\n public class ArrayUtils {\n \n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static Object[] subarray(Object[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {\n      *      returned subarray. Undervalue (&lt; startIndex) produces\n      *      empty array, overvalue (&gt;array.length) is demoted to\n      *      array length.\n+     * @return a new array containing the elements between\n+     *      the start and end indices.\n      */\n     public static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n         if (array == null) {", "timestamp": 1072660118, "metainfo": ""}