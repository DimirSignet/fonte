{"sha": "7190d20eab0ade12dab4ea2a6fb1c3153416a6e0", "log": "Added JsonGenerator.writeNumber(short)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n      * Additional white space may be added around the value\n      * if pretty-printing is enabled.\n      */\n+    public abstract void writeNumber(short v)\n+        throws IOException, JsonGenerationException;\n+\n+    /**\n+     * Method for outputting given value as Json number.\n+     * Can be called in any context where a value is expected\n+     * (Array value, Object field value, root-level value).\n+     * Additional white space may be added around the value\n+     * if pretty-printing is enabled.\n+     */\n     public abstract void writeNumber(int v)\n         throws IOException, JsonGenerationException;\n \n--- a/src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java\n     /**********************************************************\n      */\n \n+    public static int outputShort(int value, char[] buffer, int offset) {\n+    \treturn outputInt(value, buffer, offset);\n+    }\n+\n+    public static int outputShort(int value, byte[] buffer, int offset) {\n+    \treturn outputInt(value, buffer, offset);\n+    }\n+    \n     /**\n      * @return Offset within buffer after outputting int\n      */\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n     /**********************************************************\n      */\n \n+    @Override\n+    public void writeNumber(short s)\n+        throws IOException, JsonGenerationException\n+    {\n+        _verifyValueWrite(\"write number\");\n+        // up to 5 digits and possible minus sign\n+        if ((_outputTail + 6) >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        if (_cfgNumbersAsStrings) {\n+            _writeQuotedShort(s);\n+            return;\n+        }\n+        _outputTail = NumberOutput.outputShort(s, _outputBuffer, _outputTail);\n+    }\n+    \n+    private void _writeQuotedShort(short s) throws IOException {\n+        if ((_outputTail + 8) >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n+        _outputTail = NumberOutput.outputShort(s, _outputBuffer, _outputTail);\n+        _outputBuffer[_outputTail++] = BYTE_QUOTE;\n+    } \n+    \n     @Override\n     public void writeNumber(int i)\n         throws IOException, JsonGenerationException\n--- a/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n     /* Output method implementations, primitive\n     /**********************************************************\n      */\n+\n+    @Override\n+    public void writeNumber(short s)\n+        throws IOException, JsonGenerationException\n+    {\n+        _verifyValueWrite(\"write number\");\n+        if (_cfgNumbersAsStrings) {\n+            _writeQuotedShort(s);\n+            return;\n+        }\n+        // up to 5 digits and possible minus sign\n+        if ((_outputTail + 6) >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputTail = NumberOutput.outputShort(s, _outputBuffer, _outputTail);\n+    }\n+\n+    private void _writeQuotedShort(short s) throws IOException {\n+        if ((_outputTail + 8) >= _outputEnd) {\n+            _flushBuffer();\n+        }\n+        _outputBuffer[_outputTail++] = '\"';\n+        _outputTail = NumberOutput.outputShort(s, _outputBuffer, _outputTail);\n+        _outputBuffer[_outputTail++] = '\"';\n+    }    \n \n     @Override\n     public void writeNumber(int i)\n--- a/src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java\n      */\n \n     @Override\n+    public void writeNumber(short v) throws IOException, JsonGenerationException {\n+        delegate.writeNumber(v);\n+    }\n+\n+    @Override\n     public void writeNumber(int v) throws IOException, JsonGenerationException {\n         delegate.writeNumber(v);\n     }", "timestamp": 1365850532, "metainfo": ""}