{"sha": "7d2519f9e48b846ddf6d633d2bc161408c535aa6", "log": "Add a test for yaml style comments", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestComments.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestComments.java\n         _testWithUTF8Chars(JSON, false);\n         _testWithUTF8Chars(JSON, true);\n     }\n+\n+    public void testYAMLCommentsBytes() throws Exception {\n+        _testYAMLComments(true);\n+    }\n+\n+    public void testYAMLCommentsChars() throws Exception {\n+        _testYAMLComments(false);\n+    }\n     \n+    private void _testYAMLComments(boolean useStream) throws Exception\n+    {\n+        JsonFactory jf = new JsonFactory();\n+        jf.configure(JsonParser.Feature.ALLOW_YAML_COMMENTS, true);\n+        final String DOC = \"# foo\\n\"\n+                +\" {\\\"a\\\" # xyz\\n\"\n+                +\" : # foo\\n\"\n+                +\" 1, # more\\n\"\n+                +\"\\\"b\\\": [ \\n\"\n+                +\" #all!\\n\"\n+                +\" 3 #yay!\\n\"\n+                +\"] # foobar\\n\"\n+                +\"} # x\"\n+                ;\n+        JsonParser jp = useStream ?\n+                jf.createParser(DOC.getBytes(\"UTF-8\"))\n+                : jf.createParser(DOC);\n+        assertEquals(JsonToken.START_OBJECT, jp.nextToken());\n+        assertEquals(JsonToken.FIELD_NAME, jp.nextToken());\n+        assertEquals(\"a\", jp.getCurrentName());\n+        assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());\n+        assertEquals(1, jp.getIntValue());\n+        assertEquals(JsonToken.FIELD_NAME, jp.nextToken());\n+        assertEquals(\"b\", jp.getCurrentName());\n+        assertEquals(JsonToken.START_ARRAY, jp.nextToken());\n+        assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());\n+        assertEquals(3, jp.getIntValue());\n+        assertEquals(JsonToken.END_ARRAY, jp.nextToken());\n+        assertEquals(JsonToken.END_OBJECT, jp.nextToken());\n+        assertNull(jp.nextToken());\n+        jp.close();\n+    }\n+\n     /*\n     /**********************************************************\n     /* Helper methods", "timestamp": 1379614151, "metainfo": ""}