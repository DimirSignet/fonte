{"sha": "fde213324199fedadd52651c779f5bef139a18a4", "log": "Add a (failing) unit test for #148", "commit": "\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java\n+package com.fasterxml.jackson.core.failing;\n+\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;\n+import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;\n+\n+@SuppressWarnings(\"serial\")\n+public class TestJsonParserSymbols\n+    extends com.fasterxml.jackson.test.BaseTest\n+{\n+    public void testSymbolsWithNullBytes() throws Exception {\n+        _testSymbolsWithNull(true);\n+    }\n+\n+    public void testSymbolsWithNullChars() throws Exception {\n+        _testSymbolsWithNull(false);\n+    }\n+    \n+    private void _testSymbolsWithNull(boolean useBytes) throws Exception\n+    {\n+        final JsonFactory f = new JsonFactory();\n+        final String INPUT = \"{\\\"\\\\u0000abc\\\" : 1, \\\"abc\\\" : 2}\";\n+        JsonParser parser = useBytes ? f.createParser(INPUT.getBytes(\"UTF-8\"))\n+                : f.createParser(INPUT);\n+\n+        assertToken(JsonToken.START_OBJECT, parser.nextToken());\n+\n+        assertToken(JsonToken.FIELD_NAME, parser.nextToken());\n+        assertEquals(\"\\u0000abc\", parser.getCurrentName());\n+        assertToken(JsonToken.VALUE_NUMBER_INT, parser.nextToken());\n+        assertEquals(1, parser.getIntValue());\n+\n+        assertToken(JsonToken.FIELD_NAME, parser.nextToken());\n+        assertEquals(\"abc\", parser.getCurrentName());\n+        assertToken(JsonToken.VALUE_NUMBER_INT, parser.nextToken());\n+        assertEquals(2, parser.getIntValue());\n+        \n+        assertToken(JsonToken.END_OBJECT, parser.nextToken());\n+        parser.close();\n+    }\n+}", "timestamp": 1407820054, "metainfo": ""}