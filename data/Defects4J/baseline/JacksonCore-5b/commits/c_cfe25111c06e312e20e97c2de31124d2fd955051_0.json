{"sha": "cfe25111c06e312e20e97c2de31124d2fd955051", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n         final int len = matchStr.length();\n     \n         do {\n-            if (_inputPtr >= _inputEnd) {\n-                if (!loadMore()) {\n-                    _reportInvalidToken(matchStr.substring(0, i));\n-                }\n-            }\n-            if (_inputBuffer[_inputPtr] != matchStr.charAt(i)) {\n+            if (((_inputPtr >= _inputEnd) && !loadMore())\n+                ||  (_inputBuffer[_inputPtr] != matchStr.charAt(i))) {\n                 _reportInvalidToken(matchStr.substring(0, i));\n             }\n             ++_inputPtr;\n         } while (++i < len);\n     \n         // but let's also ensure we either get EOF, or non-alphanum char...\n-        if (_inputPtr >= _inputEnd) {\n-            if (!loadMore()) {\n-                return;\n-            }\n+        if (_inputPtr >= _inputEnd && !loadMore()) {\n+            return;\n         }\n         int ch = _inputBuffer[_inputPtr] & 0xFF;\n         if (ch < '0' || ch == ']' || ch == '}') { // expected/allowed chars\n     }\n \n     protected void _reportInvalidToken(String matchedPart)\n-            throws IOException, JsonParseException\n+       throws IOException, JsonParseException\n     {\n         _reportInvalidToken(matchedPart, \"'null', 'true', 'false' or NaN\");\n     }", "timestamp": 1365356956, "metainfo": ""}