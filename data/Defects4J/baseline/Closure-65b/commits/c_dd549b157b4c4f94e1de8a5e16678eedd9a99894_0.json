{"sha": "dd549b157b4c4f94e1de8a5e16678eedd9a99894", "log": "Change record types to print consistently with anonymous object types  R=jschorr DELTA=5  (0 added, 0 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1966   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/RecordType.java\n+++ b/src/com/google/javascript/rhino/jstype/RecordType.java\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n-    sb.append(\"{ \");\n+    sb.append(\"{\");\n \n     int i = 0;\n \n       }\n \n       sb.append(property);\n-      sb.append(\" : \");\n+      sb.append(\": \");\n       sb.append(properties.get(property).toString());\n \n       ++i;\n     }\n \n-    sb.append(\" }\");\n+    sb.append(\"}\");\n     return sb.toString();\n   }\n \n--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n     assertEquals(\"number\", globalScope.getVar(\"a.name\").getType().toString());\n \n     ObjectType a = (ObjectType) (globalScope.getVar(\"a\").getType());\n-    assertEquals(\"{ foo : number }\", a.toString());\n+    assertEquals(\"{foo: number}\", a.toString());\n     assertFalse(a.hasProperty(\"name\"));\n   }\n \n--- a/test/com/google/javascript/rhino/jstype/JSTypeTest.java\n+++ b/test/com/google/javascript/rhino/jstype/JSTypeTest.java\n     properties.put(\"hello\", new RecordProperty(NUMBER_TYPE, null));\n \n     JSType recordType = registry.createRecordType(properties);\n-    assertEquals(\"{ hello : number }\", recordType.toString());\n+    assertEquals(\"{hello: number}\", recordType.toString());\n   }\n \n   /**", "timestamp": 1305932424, "metainfo": ""}