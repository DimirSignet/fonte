{"sha": "6bae902bd35ed4f57e7a5d612b7ad9b72f4559bc", "log": "Fix broken Rhino tests   Revision created by MOE tool push_codebase. MOE_MIGRATION=763   ", "commit": "\n--- a/test/com/google/javascript/rhino/NodeTest.java\n+++ b/test/com/google/javascript/rhino/NodeTest.java\n \n   public void testCheckTreeEqualsBooleanSame() {\n     Node node1 = new Node(1);\n-    assertEquals(true, node1.checkTreeEqualsSilent(node1));\n+    assertEquals(true, node1.isEquivalentTo(node1));\n   }\n \n   public void testCheckTreeEqualsBooleanDifferent() {\n     Node node1 = new Node(1);\n     Node node2 = new Node(2);\n-    assertEquals(false, node1.checkTreeEqualsSilent(node2));\n+    assertEquals(false, node1.isEquivalentTo(node2));\n   }\n \n   public void testCheckTreeEqualsImplDifferentIncProp() {\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsSameNull() {\n     JSTypeRegistry registry = new JSTypeRegistry(testErrorReporter);\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferent() {\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.STRING_TYPE));\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferentNull() {\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testVarArgs1() {", "timestamp": 1299261827, "metainfo": ""}