{"sha": "e609670bb56e0c7216c9476a5f6a5594e7f1acdb", "log": "- Fix issue #19 - attach jsdoc comments without annotations to nodes    ", "commit": "\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n       if (type == Type.OTHER || globalSets != 1 || localSets != 0) {\n         return false;\n       }\n+\n+      // Don't try to collapse if the one global set is a twin reference.\n+      // We could theoretically handle this case in CollapseProperties, but\n+      // it's probably not worth the effort.\n+      Preconditions.checkNotNull(declaration);\n+      if (declaration.getTwin() != null) {\n+        return false;\n+      }\n+\n       if (isClassOrEnum) {\n         return true;\n       }\n--- a/src/com/google/javascript/rhino/JSDocInfoBuilder.java\n+++ b/src/com/google/javascript/rhino/JSDocInfoBuilder.java\n    * @return {@code true} if the description was recorded.\n    */\n   public boolean recordBlockDescription(String description) {\n-    if (parseDocumentation) {\n-      populated = true;\n-    }\n+    populated = true;\n     return currentInfo.documentBlock(description);\n   }\n \n--- a/test/com/google/javascript/jscomp/CheckSideEffectsTest.java\n+++ b/test/com/google/javascript/jscomp/CheckSideEffectsTest.java\n     test(\"function A() { this.foo; }\", e);\n     test(\"function A() { /** @type Number */ this.foo; }\", ok);\n   }\n+\n+  public void testJSDocComments() {\n+    test(\"function A() { /** This is a jsdoc comment */ this.foo; }\", ok);\n+    test(\"function A() { /* This is a normal comment */ this.foo; }\", e);\n+  }\n }\n--- a/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n+++ b/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n          \"var a$b = CreateClass({c: function() {}});\" +\n          \"var a$d = CreateClass({c: a$b.prototype.c});\");\n   }\n+\n+  public void testCrashInCommaOperator() {\n+    test(\"var a = {}; a.b = function() {},a.b();\",\n+         \"var a$b; a$b=function() {},a$b();\");\n+  }\n+\n+  public void testCrashInNestedAssign() {\n+    test(\"var a = {}; if (a.b = function() {}) a.b();\",\n+         \"var a$b; if (a$b=function() {}) { a$b(); }\");\n+  }\n+\n+  public void testTwinReferenceCancelsChildCollapsing() {\n+    test(\"var a = {}; if (a.b = function() {}) { a.b.c = 3; a.b(a.b.c); }\",\n+         \"var a$b; if (a$b = function() {}) { a$b.c = 3; a$b(a$b.c); }\");\n+  }\n }", "timestamp": 1258056126, "metainfo": ""}