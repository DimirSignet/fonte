{"sha": "180789a3c3f698c475f26fd408974eabd3671117", "log": "Enable checking of resources/archives folder  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n package org.apache.commons.compress;\n \n import java.io.BufferedInputStream;\n+import java.io.BufferedReader;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n+import java.io.FileReader;\n import java.net.URL;\n import java.util.ArrayList;\n \n                        new File(rsc.getFile()))));\n     }\n     \n+    // TODO move into separate class and create suite with one file per test\n     // Scan list of archives in resources/archives directory\n-    public void notyettestArchives() throws Exception{\n+    public void testArchives() throws Exception{\n         File arcdir =new File(classLoader.getResource(\"archives\").getFile());\n         assertTrue(arcdir.exists());\n+        File listing= new File(arcdir,\"files.txt\");\n+        assertTrue(\"files.txt is readable\",listing.canRead());\n+        BufferedReader br = new BufferedReader(new FileReader(listing));\n+        final ArrayList fileList = new ArrayList();\n+        String line;\n+        while ((line=br.readLine())!=null){\n+            if (line.startsWith(\"#\")){\n+                continue;\n+            }\n+            String []fields = line.split(\" \");\n+            fileList.add(fields[1]);\n+        }\n+        br.close();\n         File[]files=arcdir.listFiles();\n         for (int i=0; i<files.length; i++){\n             final File file = files[i];\n             if (file.getName().endsWith(\".txt\")){\n                 continue;\n             }\n-           try {\n-               // TODO - how to determine expected file contents\n-               final ArrayList expected = new ArrayList();\n+            // Cannot handle these tar files yet \n+            if (file.getName().equals(\"SunOS_cAEf.tar\")\n+             || file.getName().equals(\"FreeBSD_pax.tar\")\n+             || file.getName().equals(\"SunOS_cEf.tar\")){\n+                continue;\n+            }\n+            ArrayList expected=(ArrayList) fileList.clone();\n+            try {\n                checkArchiveContent(file, expected);\n             } catch (ArchiveException e) {\n                 fail(\"Problem checking \"+file);", "timestamp": 1238547242, "metainfo": ""}