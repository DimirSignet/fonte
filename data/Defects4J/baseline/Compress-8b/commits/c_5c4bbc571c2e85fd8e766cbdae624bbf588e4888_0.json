{"sha": "5c4bbc571c2e85fd8e766cbdae624bbf588e4888", "log": "separate unicode tests with and without EFS flag  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java\n     private static final String OIL_BARREL_TXT = \"\\u00D6lf\\u00E4sser.txt\";\n \n     public void testUtf8FileRoundtrip() throws IOException {\n-        testFileRoundtrip(UTF_8);\n+        testFileRoundtrip(UTF_8, true);\n     }\n \n+    public void testUtf8FileRoundtripNoEFS() throws IOException {\n+        testFileRoundtrip(UTF_8, false);\n+    }\n \n     public void testCP437FileRoundtrip() throws IOException {\n-        testFileRoundtrip(CP437);\n+        testFileRoundtrip(CP437, false);\n     }\n \n     public void testASCIIFileRoundtrip() throws IOException {\n-        testFileRoundtrip(US_ASCII);\n+        testFileRoundtrip(US_ASCII, false);\n     }\n \n-    private static void testFileRoundtrip(String encoding)\n+    private static void testFileRoundtrip(String encoding, boolean withEFS)\n         throws IOException {\n \n         try {\n \n         File file = File.createTempFile(encoding + \"-test\", \".zip\");\n         try {\n-            createTestFile(file, encoding);\n+            createTestFile(file, encoding, withEFS);\n             testFile(file, encoding);\n         } finally {\n             if (file.exists()) {\n         }\n     }\n \n-    private static void createTestFile(File file, String encoding)\n+    private static void createTestFile(File file, String encoding,\n+                                       boolean withEFS)\n         throws UnsupportedEncodingException, IOException {\n \n         ZipArchiveOutputStream zos = null;\n         try {\n             zos = new ZipArchiveOutputStream(file);\n             zos.setEncoding(encoding);\n+            zos.setUseEFS(withEFS);\n \n             ZipArchiveEntry ze = new ZipArchiveEntry(OIL_BARREL_TXT);\n             if (!ZipEncodingHelper.canEncodeName(ze.getName(),", "timestamp": 1235148397, "metainfo": ""}