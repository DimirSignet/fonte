{"sha": "26d12c5255694810aa8a21381ffc5381229f5df3", "log": "Reject illegal sizes  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n      * Set this entry's file size.\n      *\n      * @param size This entry's new file size.\n+     * @throws IllegalArgumentException if the size is < 0\n+     * or > {@link TarConstants#MAXSIZE} (077777777777L).\n      */\n     public void setSize(long size) {\n+        if (size > MAXSIZE || size < 0){\n+            throw new IllegalArgumentException(\"Size is out of range: \"+size);\n+        }\n         this.size = size;\n     }\n \n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n             }\n         }\n     }\n+    \n+    public void testMaxFileSize(){\n+        TarArchiveEntry t = new TarArchiveEntry(\"\");\n+        t.setSize(0);\n+        t.setSize(1);\n+        try {\n+            t.setSize(-1);\n+            fail(\"Should have generated IllegalArgumentException\");\n+        } catch (IllegalArgumentException expected) {\n+        }\n+        t.setSize(077777777777L);\n+        try {\n+            t.setSize(0100000000000L);\n+            fail(\"Should have generated IllegalArgumentException\");\n+        } catch (IllegalArgumentException expected) {\n+        }\n+    }\n }", "timestamp": 1238525114, "metainfo": ""}