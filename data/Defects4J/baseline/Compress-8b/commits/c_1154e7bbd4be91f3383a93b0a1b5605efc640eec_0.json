{"sha": "1154e7bbd4be91f3383a93b0a1b5605efc640eec", "log": "actually read content of data descriptor  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n         }\n \n         if (hasDataDescriptor) {\n-            byte[] sig = new byte[WORD];\n-            readFully(sig);\n-            if (ZipLong.DD_SIG.equals(new ZipLong(sig))) {\n-                readFully(new byte[3 * WORD]);\n-            } else {\n-                // data descriptor without signature, we've already\n-                // read the CRC\n-                readFully(new byte[2 * WORD]);\n-            }\n+            readDataDescriptor();\n         }\n \n         inf.reset();\n             count(x);\n         }\n     }\n+\n+    private void readDataDescriptor() throws IOException {\n+        byte[] b = new byte[WORD];\n+        readFully(b);\n+        ZipLong val = new ZipLong(b);\n+        if (ZipLong.DD_SIG.equals(val)) {\n+            // data descriptor with signature, skip sig\n+            readFully(b);\n+            val = new ZipLong(b);\n+        }\n+        current.setCrc(val.getValue());\n+        readFully(b);\n+        current.setCompressedSize(new ZipLong(b).getValue());\n+        readFully(b);\n+        current.setSize(new ZipLong(b).getValue());\n+    }\n+\n }", "timestamp": 1268840877, "metainfo": ""}