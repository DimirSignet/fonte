{"sha": "52fcfa0f254c3da087c408b20b9877677ae6e626", "log": "Initial Javadoc Implement common write(byte) method  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n import java.io.IOException;\n import java.io.OutputStream;\n \n+/**\n+ * Archive output stream implementations are expected to override the\n+ * {@link #write(byte[], int, int)} method to improve performance.\n+ * They should also override {@link #close()} to ensure that any necessary\n+ * trailers are added.\n+ * <p>\n+ * Example usage:<br/>\n+ * TBA\n+ */\n public abstract class ArchiveOutputStream extends OutputStream {\n+    \n+    /** Temporary buffer used for the {@link #write(int)} method */\n+    private final byte[] oneByte = new byte[1];\n+    static final int BYTE_MASK = 0xFF;\n \n     public abstract void putArchiveEntry(ArchiveEntry entry) throws IOException;\n \n+    /**\n+     * Closes the archive entry, writing any trailer information that may\n+     * be required.\n+     * @throws IOException\n+     */\n     public abstract void closeArchiveEntry() throws IOException;\n+\n+    // Generic implementations of OutputStream methods that may be useful to sub-classes\n+    \n+    /**\n+     * Writes a byte to the current archive entry.\n+     *\n+     * This method simply calls write( byte[], 0, 1 ).\n+     *\n+     * MUST be overridden if the {@link #write(byte[], int, int)} method\n+     * is not overridden; may be overridden otherwise.\n+     * \n+     * @param b The byte to be written.\n+     * @throws IOException on error\n+     */\n+    public void write(int b) throws IOException {\n+        oneByte[0] = (byte) (b & BYTE_MASK);\n+        write(oneByte, 0, 1);\n+    }\n+\n }", "timestamp": 1238433478, "metainfo": ""}