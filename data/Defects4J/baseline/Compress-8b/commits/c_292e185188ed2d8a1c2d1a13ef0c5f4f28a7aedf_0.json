{"sha": "292e185188ed2d8a1c2d1a13ef0c5f4f28a7aedf", "log": "make archive/compressor name constants public.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n  * \n  * <pre>\n  * final OutputStream out = new FileOutputStream(output); \n- * ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(\"zip\", out);\n+ * ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.ZIP, out);\n  * \n  * os.putArchiveEntry(new ZipArchiveEntry(\"testdata/test1.xml\"));\n  * IOUtils.copy(new FileInputStream(file1), os);\n  * \n  * <pre>\n  * final InputStream is = new FileInputStream(input); \n- * ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"zip\", is);\n+ * ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(ArchiveStreamFactory.ZIP, is);\n  * ZipArchiveEntry entry = (ZipArchiveEntry)in.getNextEntry();\n  * OutputStream out = new FileOutputStream(new File(dir, entry.getName()));\n  * IOUtils.copy(in, out);\n  */\n public class ArchiveStreamFactory {\n \n-    private static final String AR = \"ar\";\n-    private static final String CPIO = \"cpio\";\n-    private static final String JAR = \"jar\";\n-    private static final String TAR = \"tar\";\n-    private static final String ZIP = \"zip\";\n+    /**\n+     * Constant used to identify the AR archive format.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String AR = \"ar\";\n+    /**\n+     * Constant used to identify the CPIO archive format.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String CPIO = \"cpio\";\n+    /**\n+     * Constant used to identify the JAR archive format.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String JAR = \"jar\";\n+    /**\n+     * Constant used to identify the TAR archive format.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String TAR = \"tar\";\n+    /**\n+     * Constant used to identify the ZIP archive format.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String ZIP = \"zip\";\n \n     /**\n      * Create an archive input stream from an archiver name and an input stream.\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n  * <pre>\n  * final OutputStream out = new FileOutputStream(output); \n  * CompressorOutputStream cos = \n- *      new CompressorStreamFactory().createCompressorOutputStream(\"bzip2\", out);\n+ *      new CompressorStreamFactory().createCompressorOutputStream(CompressorStreamFactory.BZIP2, out);\n  * IOUtils.copy(new FileInputStream(input), cos);\n  * cos.close();\n  * </pre>    \n  * <pre>\n  * final InputStream is = new FileInputStream(input); \n  * CompressorInputStream in = \n- *      new CompressorStreamFactory().createCompressorInputStream(\"bzip2\", is);\n+ *      new CompressorStreamFactory().createCompressorInputStream(CompressorStreamFactory.BZIP2, is);\n  * IOUtils.copy(in, new FileOutputStream(output));\n  * in.close();\n  * </pre>\n  */\n public class CompressorStreamFactory {\n \n-    private static final String BZ = \"bzip2\";\n-    private static final String GZ = \"gz\";\n+    /**\n+     * Constant used to identify the BZIP2 compression algorithm.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String BZIP2 = \"bzip2\";\n+    /**\n+     * Constant used to identify the GZIP compression algorithm.\n+     * @since Commons Compress 1.1\n+     */\n+    public static final String GZIP = \"gz\";\n \n     /**\n      * Create an compressor input stream from an input stream, autodetecting\n      * @return the compressor input stream\n      * @throws CompressorException if the compressor name is not known\n      * @throws IllegalArgumentException if the stream is null or does not support mark\n+     * @since Commons Compress 1.1\n      */\n     public CompressorInputStream createCompressorInputStream(final InputStream in)\n             throws CompressorException {\n \n         try {\n             \n-            if (GZ.equalsIgnoreCase(name)) {\n+            if (GZIP.equalsIgnoreCase(name)) {\n                 return new GzipCompressorInputStream(in);\n             }\n             \n-            if (BZ.equalsIgnoreCase(name)) {\n+            if (BZIP2.equalsIgnoreCase(name)) {\n                 return new BZip2CompressorInputStream(in);\n             }\n             \n \n         try {\n \n-            if (GZ.equalsIgnoreCase(name)) {\n+            if (GZIP.equalsIgnoreCase(name)) {\n                 return new GzipCompressorOutputStream(out);\n             }\n             \n-            if (BZ.equalsIgnoreCase(name)) {\n+            if (BZIP2.equalsIgnoreCase(name)) {\n                 return new BZip2CompressorOutputStream(out);\n             }\n         ", "timestamp": 1267718049, "metainfo": ""}