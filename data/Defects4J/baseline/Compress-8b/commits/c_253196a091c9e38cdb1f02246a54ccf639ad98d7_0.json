{"sha": "253196a091c9e38cdb1f02246a54ccf639ad98d7", "log": "Implement generic read() Update Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java\n import java.io.InputStream;\n \n /**\n- * Archive input streams are expected to override the<br/>\n- * {@link #read()} and {@link #read(byte[] b, int off, int len)} <br/>\n- * methods so that reading from the stream generates EOF for the end of\n- * data in each entry as well as at the end of the file proper. The\n- * {@link #getNextEntry()} method is used to reset the input stream\n+ * Archive input streams <b>MUST</b> override the \n+ * {@link #read(byte[], int, int)} - or {@link #read()} -\n+ * method so that reading from the stream generates EOF for the end of\n+ * data in each entry as well as at the end of the file proper.\n+ * <p>\n+ * The {@link #getNextEntry()} method is used to reset the input stream\n  * ready for reading the data from the next entry.\n  * <p>\n  * The input stream classes must also implement a method with the signature:\n  */\n public abstract class ArchiveInputStream extends InputStream {\n \n+    private byte[] SINGLE = new byte[1];\n+    private static final int BYTE_MASK = 0xFF;\n+\n     /**\n      * Returns the next Archive Entry in this Stream.\n      * @return the next entry\n      */\n     public abstract ArchiveEntry getNextEntry() throws IOException;\n \n+    /*\n+     * Note that subclasses also implement specific get() methods which\n+     * return the appropriate class without need for a cast.\n+     * See SVN revision r743259\n+     * @return\n+     * @throws IOException\n+     */\n+    // public abstract XXXArchiveEntry getNextXXXEntry() throws IOException;\n+\n+\n+    /**\n+     * Reads a byte of data. This method will block until enough input is\n+     * available.\n+     * \n+     * Simply calls the {@link #read(byte[], int, int)} method.\n+     * \n+     * MUST be overridden if the {@link #read(byte[], int, int)} method\n+     * is not overridden; may be overridden otherwise.\n+     * \n+     * @return the byte read, or -1 if end of input is reached\n+     * @throws IOException\n+     *             if an I/O error has occurred or if a CPIO file error has\n+     *             occurred\n+     */\n+    public int read() throws IOException {\n+        int num = read(SINGLE, 0, 1);\n+        return num == -1 ? -1 : SINGLE[0] & BYTE_MASK;\n+    }\n }", "timestamp": 1238436645, "metainfo": ""}