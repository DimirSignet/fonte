{"sha": "bfadd034ba782868fc7ab91b7565582d6fd4848a", "log": "Fixed some variable and exception names in the javadoc  ", "commit": "\n--- a/src/java/org/apache/commons/compress/Archive.java\n+++ b/src/java/org/apache/commons/compress/Archive.java\n \t/**\n \t * Sets an Archive for manipulating. An archive is set if someone\n \t * saves an Archive or calls getInstance(...) with an archive.\n-\t * @param archive file to manipulate\n+\t * @param file the file to manipulate\n \t */\n \tvoid setArchive(File file);\n \t\n \n \t/**\n \t * Unpacks to the specified directory \n-\t * @param dir to unpack\n+\t * @param destinationDir to unpack\n \t * @throws UnpackException if an unpack error occurs\n \t */\n \tpublic void unpack(File destinationDir) throws UnpackException;\n--- a/src/java/org/apache/commons/compress/CompressUtils.java\n+++ b/src/java/org/apache/commons/compress/CompressUtils.java\n             output.write( buffer, 0, n );\n         }\n     }\n-    \n+\n     /**\n      * Compares one byte array to another\n-\t * @param source- the array to compare to \n-\t * @param headerBytes - the bytearray match\n-\t */\n+     * @param source the array to compare to\n+     * @param match  the bytearray match\n+     */\n \tpublic static boolean compareByteArrays(byte[] source, byte[] match) {\n \t\tint i = 0;\n \t\twhile(source.length < i || i < match.length ) {\n--- a/src/java/org/apache/commons/compress/Compressor.java\n+++ b/src/java/org/apache/commons/compress/Compressor.java\n \t * @param input inputstream to decompress\n \t * @return the decompressed InputStream\n \t */\n-\tpublic InputStream decompress(InputStream inputStream) throws CompressException;;\n+\tpublic InputStream decompress(InputStream input) throws CompressException;;\n \t\n \t/**\n \t * Decompresses this file and writes the decompressed byte to the output file\n \t * @param input File to decompress\n \t * @param output File to write the decompressed bytes to\n-\t * @throws DecompressException if the Compressor reports an error\n+\t * @throws CompressException if the Compressor reports an error\n \t */\n \tpublic void decompressTo(File input, File output) throws CompressException;\n \t\n \t * Decompresses this file and writes the decompressed file to the output-stream\n \t * @param input Stream to decompress\n \t * @param output Stream to write the decompressed bytes to\n-\t * @throws DecompressException if the Compressor reports an error\n+\t * @throws CompressException if the Compressor reports an error\n \t */\n \tpublic void decompressTo(InputStream input, OutputStream output) throws CompressException;\n }\n--- a/src/java/org/apache/commons/compress/compressors/bzip2/BZip2Compressor.java\n+++ b/src/java/org/apache/commons/compress/compressors/bzip2/BZip2Compressor.java\n \t * BZip2OutputStream object ready for use, as required by the\n \t * BZip2OutputStream class.\n \t * \n-\t * @param output {@link Output} stream to add a header to\n+\t * @param output {@link OutputStream} to add a header to\n \t * @return {@link BZip2OutputStream} ready to write to\n \t * @throws IOException if an IO error occurs\n \t */", "timestamp": 1213722588, "metainfo": ""}