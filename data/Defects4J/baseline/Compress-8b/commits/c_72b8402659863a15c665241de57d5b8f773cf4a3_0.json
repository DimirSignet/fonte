{"sha": "72b8402659863a15c665241de57d5b8f773cf4a3", "log": "applied patch from Christian Grobmeier  always have the full offest https://issues.apache.org/jira/browse/SANDBOX-274    ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n \t\tif (offset == 0) {\n \t\t\tfinal byte[] expected = \"!<arch>\\n\".getBytes();\t\t\t\n \t\t\tfinal byte[] realized = new byte[expected.length]; \n-\t\t\tfinal int read = input.read(realized);\n+\t\t\tfinal int read = read(realized);\n \t\t\tif (read != expected.length) {\n \t\t\t\tthrow new IOException(\"failed to read header\");\n \t\t\t}\n \t\t{\n \t\t\tfinal byte[] expected = \"`\\012\".getBytes();\t\t\t\n \t\t\tfinal byte[] realized = new byte[expected.length]; \n-\t\t\tfinal int read = input.read(realized);\n+\t\t\tfinal int read = read(realized);\n \t\t\tif (read != expected.length) {\n \t\t\t\tthrow new IOException(\"failed to read entry header\");\n \t\t\t}\n \t\toffset++;\n \t\treturn ret;\n \t}\n+\t\n+\tpublic int read(byte b[]) throws IOException {\n+\t\tfinal int ret = read(b, 0, b.length);\n+\t\toffset = offset + b.length;\n+\t\treturn ret;\n+\t}\n \n \tpublic int read(byte[] b, int off, int len) throws IOException {\n-\t\treturn this.input.read(b, off, len);\n+\t\tfinal int ret = this.input.read(b, off, len);\n+\t\toffset = offset + off;\n+\t\treturn ret;\n \t}\n \t\n \tpublic static boolean matches( byte[] signature ) {", "timestamp": 1231493462, "metainfo": ""}