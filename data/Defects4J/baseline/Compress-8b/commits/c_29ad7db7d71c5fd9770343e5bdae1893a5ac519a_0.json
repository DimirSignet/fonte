{"sha": "29ad7db7d71c5fd9770343e5bdae1893a5ac519a", "log": "nitpicking, removed duplicate code    ", "commit": "\n--- a/src/java/org/apache/commons/compress/ArchiverFactory.java\n+++ b/src/java/org/apache/commons/compress/ArchiverFactory.java\n \n import org.apache.commons.compress.archivers.tar.TarArchive;\n import org.apache.commons.compress.archivers.zip.ZipArchive;\n+\n+\n /**\n  * Provides implementations for all ArchiverFactory methods.\n  */\n \t\t}\n \t}\n \t\n-\t/**\n-\t * Constructor.\n-\t * @param name name of the implementation\n-\t */\n \tprivate ArchiverFactory() { \n \t}\n \n--- a/src/java/org/apache/commons/compress/CompressUtils.java\n+++ b/src/java/org/apache/commons/compress/CompressUtils.java\n  * Utils for Compress.\n  */\n public class CompressUtils {\n+\n \t/*\n \t * This class should not be constructed\n \t */\n \t/**\n      * Copy bytes from an <code>InputStream</code> to an <code>OutputStream</code>.\n      */\n-    public static void copy( final InputStream input,\n-                              final OutputStream output )\n+    public static void copy( final InputStream input, final OutputStream output )\n         throws IOException {\n         final byte[] buffer = new byte[ 8024 ];\n         int n = 0;", "timestamp": 1168341588, "metainfo": ""}