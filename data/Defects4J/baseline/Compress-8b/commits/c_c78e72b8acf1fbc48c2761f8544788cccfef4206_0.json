{"sha": "c78e72b8acf1fbc48c2761f8544788cccfef4206", "log": "Add some TODOs and implementation notes Rename pad => skip as that is what it does.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n         return this.entry;\n     }\n \n-    private long pad(final long count, final int border) throws IOException {\n+    private long skip(final long count, final int border) throws IOException {\n         long skip = count % border;\n         if (skip > 0) {\n             skip = this.in.skip(border - skip);\n+            // TODO - what if not enough bytes are skipped?\n         }\n         return skip;\n     }\n         if (this.entry == null || this.entryEOF) {\n             return -1;\n         }\n+        // N.B. These checks assume format is not 0 - otherwise condition is always true\n         if (this.entryBytesRead == this.entry.getSize()) {\n             if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n-                pad(this.entry.getSize(), 4);\n+                skip(this.entry.getSize(), 4);\n             } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n-                pad(this.entry.getSize(), 2);\n-            }\n+                skip(this.entry.getSize(), 2);\n+            } // No need to skip for FORMAT_OLD_ASCII\n             this.entryEOF = true;\n             if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                 if (this.crc != this.entry.getChksum()) {\n         }\n \n         int tmpread = this.in.read(b, off, tmplength);\n+        // TODO - what about EOF or short reads?\n         if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n             for (int pos = 0; pos < tmpread; pos++) {\n                 this.crc += b[pos] & 0xFF;\n             // TODO - change this to throw\n             new IOException(\"Mode 0 only allowed in the trailer. Found: \"+name).printStackTrace();\n         }\n-        pad(ret.getHeaderSize() + namesize, 4);\n+        skip(ret.getHeaderSize() + namesize, 4);\n \n         return ret;\n     }\n         long namesize = readBinaryLong(2, swapHalfWord);\n         ret.setSize(readBinaryLong(4, swapHalfWord));\n         ret.setName(readCString((int) namesize));\n-        pad(ret.getHeaderSize() + namesize, 2);\n+        skip(ret.getHeaderSize() + namesize, 2);\n \n         return ret;\n     }\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n                     + this.cpioEntry.getSize() + \" but got \" + this.written\n                     + \" bytes)\");\n         }\n+        // N.B. These checks assume format is not 0\n         if ((this.cpioEntry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n             pad(this.cpioEntry.getSize(), 4);\n         } else if ((this.cpioEntry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n             pad(this.cpioEntry.getSize(), 2);\n-        }\n+        } // No need to pad for FORMAT_OLD_ASCII\n         if ((this.cpioEntry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n             if (this.crc != this.cpioEntry.getChksum()) {\n                 throw new IOException(\"CRC Error\");\n         }\n         out.write(b, off, len);\n         this.written += len;\n+        // format is assumed non-zero here, otherwise the condition is always true\n         if ((this.cpioEntry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n             for (int pos = 0; pos < len; pos++) {\n                 this.crc += b[pos] & 0xFF;\n     }\n \n     private void pad(final long count, final int border) throws IOException {\n-        long skip = count % border;\n-        if (skip > 0) {\n-            byte tmp[] = new byte[(int) (border - skip)];\n+        long pad = count % border;\n+        if (pad > 0) {\n+            byte tmp[] = new byte[(int) (border - pad)];\n             out.write(tmp);\n         }\n     }", "timestamp": 1238118087, "metainfo": ""}