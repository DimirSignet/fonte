{"sha": "d6612b69f3e0e933252c24eba43b698c8b165e92", "log": "applied patches from Tim Pinet  https://issues.apache.org/jira/browse/SANDBOX-259 https://issues.apache.org/jira/browse/SANDBOX-258    ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n \tpublic String getName();\n \t\n \tpublic long getSize();\n+\t\n+\tpublic boolean isDirectory();\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n \tpublic long getLength() {\n \t\treturn length;\n \t}\n+\n+\tpublic boolean isDirectory() {\n+\t\treturn false;\n+\t}\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n \t}\n \t\n \tpublic ArchiveEntry getNextEntry() throws IOException {\n-\t\treturn (ArchiveEntry)new JarArchiveEntry((ZipArchiveEntry)super.getNextEntry());\n+\t\tZipArchiveEntry entry = (ZipArchiveEntry)super.getNextEntry();\n+\t\tif(entry == null){\n+\t\t\treturn null;\n+\t\t}else{\n+\t\t\treturn (ArchiveEntry)new JarArchiveEntry(entry);\n+\t\t}\n \t}\n \t\n \tpublic static boolean matches( byte[] signature ) {\n--- a/src/test/java/org/apache/commons/compress/archivers/JarTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/JarTestCase.java\n         \n         in.close();\n     }\n+\t\n+\tpublic void testJarUnarchiveAll() throws Exception {\n+\t\tfinal File input = new File(getClass().getClassLoader().getResource(\"bla.jar\").getFile());\n+        final InputStream is = new FileInputStream(input);\n+        final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"jar\", is);\n+        \n+        ArchiveEntry entry = in.getNextEntry();\n+\t\twhile (entry != null) {\n+\t\t\tFile archiveEntry = new File(dir, entry.getName());\n+\t\t\tarchiveEntry.getParentFile().mkdirs();\n+\t\t\tif(entry.isDirectory()){\n+\t\t\t\tarchiveEntry.mkdir();\n+\t\t\t\tentry = in.getNextEntry();\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tOutputStream out = new FileOutputStream(archiveEntry);\n+\t\t\tIOUtils.copy(in, out);\n+\t\t\tout.close();\n+\t\t\tentry = in.getNextEntry();\n+\t\t}\n+\t\t\n+\t\tin.close();\n+\t}\n \n }\n--- a/src/test/java/org/apache/commons/compress/archivers/TarTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/TarTestCase.java\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n-\n-import junit.framework.TestCase;\n \n import org.apache.commons.compress.AbstractTestCase;\n import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n--- a/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n \t\treturn 0;\n \t}\n \n+\tpublic boolean isDirectory() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn false;\n+\t}\n+\n }", "timestamp": 1231336122, "metainfo": ""}