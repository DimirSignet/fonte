{"sha": "673fd9bbb3d75b7c159128505e10eee3608eb109", "log": "document default encoding in ASi extra field  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n  * <p>Short is two bytes and Long is four bytes in big endian byte and\n  * word order, device numbers are currently not supported.</p>\n  * @NotThreadSafe\n+ *\n+ * <p>Since the documentation this class is based upon doesn't mention\n+ * the character encoding of the file name at all, it is assumed that\n+ * it uses the current platform's default encoding.</p>\n  */\n public class AsiExtraField implements ZipExtraField, UnixStat, Cloneable {\n \n                           + WORD         // SizDev\n                           + 2         // UID\n                           + 2         // GID\n-                          + getLinkedFile().getBytes().length); // TODO is it correct to use the default charset here?\n+                          + getLinkedFile().getBytes().length);\n     }\n \n     /**\n         byte[] data = new byte[getLocalFileDataLength().getValue() - WORD];\n         System.arraycopy(ZipShort.getBytes(getMode()), 0, data, 0, 2);\n \n-        byte[] linkArray = getLinkedFile().getBytes(); // TODO is it correct to use the default charset here?\n+        byte[] linkArray = getLinkedFile().getBytes();\n         // CheckStyle:MagicNumber OFF\n         System.arraycopy(ZipLong.getBytes(linkArray.length),\n                          0, data, 2, WORD);\n             link = \"\";\n         } else {\n             System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n-            link = new String(linkArray); // TODO is it correct to use the default charset here?\n+            link = new String(linkArray);\n         }\n         // CheckStyle:MagicNumber ON\n         setDirectory((newMode & DIR_FLAG) != 0);", "timestamp": 1239788327, "metainfo": ""}