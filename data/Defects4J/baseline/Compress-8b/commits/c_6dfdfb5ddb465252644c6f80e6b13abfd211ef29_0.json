{"sha": "6dfdfb5ddb465252644c6f80e6b13abfd211ef29", "log": "COMPRESS-64: added finish() as abstract method and implemented it empty for Ar-Archiver. Added Javadocs  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java\n  * {@link #write(byte[], int, int)} method to improve performance.\n  * They should also override {@link #close()} to ensure that any necessary\n  * trailers are added.\n+ * \n+ * <p>\n+ * The normal sequence of calls for working with ArchiveOutputStreams is:\n+ * + create ArchiveOutputStream object\n+ * + write SFX header (optional, Zip only)\n+ * + repeat as needed:\n+ *      - putArchiveEntry() (writes entry header)\n+ *      - write() (writes entry data)\n+ *      - closeArchiveEntry() (closes entry)\n+ * + finish() (ends the addition of entries)\n+ * + write additional data if format supports it (optional)\n+ * + close()\n+ * </p>\n+ * \n  * <p>\n  * Example usage:<br/>\n  * TBA\n+ * </p>\n  */\n public abstract class ArchiveOutputStream extends OutputStream {\n     \n      * @throws IOException\n      */\n     public abstract void closeArchiveEntry() throws IOException;\n+    \n+    /**\n+     * Finishes the addition of entries to this stream, without closing it.\n+     * Additional data can be written, if the format supports it.\n+     * @throws IOException\n+     */\n+    public abstract void finish() throws IOException;\n \n     /**\n      * Create an archive entry using the inputFile and entryName provided.\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n         return new ArArchiveEntry(inputFile, entryName);\n     }\n \n+    /* (non-Javadoc)\n+     * @see org.apache.commons.compress.archivers.ArchiveOutputStream#finish()\n+     */\n+    public void finish() throws IOException {\n+        // Nothing to do\n+    }\n }", "timestamp": 1240377598, "metainfo": ""}