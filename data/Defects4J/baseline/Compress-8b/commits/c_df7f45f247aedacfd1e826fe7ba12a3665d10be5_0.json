{"sha": "df7f45f247aedacfd1e826fe7ba12a3665d10be5", "log": "Constants should be uppercase  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n         Data(int blockSize100k) {\n             super();\n \n-            this.ll8 = new byte[blockSize100k * BZip2Constants.baseBlockSize];\n+            this.ll8 = new byte[blockSize100k * BZip2Constants.BASEBLOCKSIZE];\n         }\n \n         /**\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n         }\n \n         /* 20 is just a paranoia constant */\n-        this.allowableBlockSize = (this.blockSize100k * BZip2Constants.baseBlockSize) - 20;\n+        this.allowableBlockSize = (this.blockSize100k * BZip2Constants.BASEBLOCKSIZE) - 20;\n     }\n \n     private void endBlock() throws IOException {\n         Data(int blockSize100k) {\n             super();\n \n-            final int n = blockSize100k * BZip2Constants.baseBlockSize;\n+            final int n = blockSize100k * BZip2Constants.BASEBLOCKSIZE;\n             this.block = new byte[(n + 1 + NUM_OVERSHOOT_BYTES)];\n             this.fmap = new int[n];\n             this.sfmap = new char[2 * n];\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java\n  */\n interface BZip2Constants {\n \n-    int baseBlockSize = 100000;\n+    int BASEBLOCKSIZE = 100000;\n     int MAX_ALPHA_SIZE = 258;\n     int MAX_CODE_LEN = 23;\n     int RUNA = 0;", "timestamp": 1239755582, "metainfo": ""}