{"sha": "0123fd5303c85d0d26add64aa2e19fee33f73aaa", "log": "Fix inlining bug in https://code.google.com/p/closure-compiler/issues/detail?id=1053 Attempt 2 Fixes issue 1053 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50800167", "commit": "\n--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java\n       for (BasicBlock block = ref.getBasicBlock();\n            block != null; block = block.getParent()) {\n         if (block.isFunction) {\n+          if (ref.getSymbol().getScope() != ref.scope) {\n+            return false;\n+          }\n           break;\n         } else if (block.isLoop) {\n           return false;\n--- a/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java\n     test(\"var AA; if (false) AA=1; AA;\", \"if (false) 1; 1;\");\n     testSame(\"var AA; if (false) AA=1; else AA=2; AA;\");\n \n-    test(\"var AA;(function () {AA=1})()\",\n-         \"(function () {1})()\");\n-\n     // Make sure that nothing explodes if there are undeclared variables.\n     testSame(\"var x = AA;\");\n \n     test(\"/** @const */var a_a=10; a_a + a_a;\", \"10+10\");\n     test(\"/** @const */var aa=1;\", \"\");\n     test(\"/** @const */var aa; aa=1;\", \"1\");\n-    test(\"/** @const */var aa;(function () {aa=1})()\", \"(function () {1})()\");\n-    test(\"/** @const */var aa;(function () {aa=1})(); var z=aa\",\n-         \"(function () {1})(); var z=1\");\n     testSame(\"/** @const */var aa;(function () {var y; aa=y})(); var z=aa\");\n \n     // Don't inline if it will make the output larger.\n--- a/test/com/google/javascript/jscomp/InlineVariablesTest.java\n+++ b/test/com/google/javascript/jscomp/InlineVariablesTest.java\n         \"F.prototype.inc = function() { this.a++; return 10; };\" +\n         \"F.prototype.bar = function() { var x = this.inc(); this.a += x; };\");\n   }\n+\n+  public void testExternalIssue1053() {\n+    testSame(\n+        \"var u; function f() { u = Random(); var x = u; f(); alert(x===u)}\");\n+  }\n }", "timestamp": 1376443700, "metainfo": ""}