{"sha": "891002d233422a1f2e83f0a202e892bb0ace9f4e", "log": "Bring goog.defineClass handling up-to-date: - recognise the \"labs\" version. - remove \"modifiers\" support - allow \"statics\" to be a function  R=pappy DELTA=131  (52 added, 43 deleted, 36 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5634   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ClosureRewriteClass.java\n+++ b/src/com/google/javascript/jscomp/ClosureRewriteClass.java\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n \n-import java.util.Collections;\n import java.util.List;\n \n /**\n   // Errors\n   static final DiagnosticType GOOG_CLASS_TARGET_INVALID = DiagnosticType.error(\n       \"JSC_GOOG_CLASS_TARGET_INVALID\",\n-      \"Unsupported goog.defineClass expression.\");\n+      \"Unsupported class definition expression.\");\n \n   static final DiagnosticType GOOG_CLASS_SUPER_CLASS_NOT_VALID = DiagnosticType.error(\n       \"JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID\",\n       \"JSC_GOOG_CLASS_CONSTRUCTOR_MISING\",\n       \"The constructor expression is missing for the class descriptor\");\n \n-  static final DiagnosticType GOOG_CLASS_MODIFIERS_NOT_VALID = DiagnosticType.error(\n-      \"JSC_CLASS_MODIFIERS_NOT_VALID\",\n-      \"The class modifier list must be an array literal\");\n-\n   static final DiagnosticType GOOG_CLASS_STATICS_NOT_VALID = DiagnosticType.error(\n       \"JSC_GOOG_CLASS_STATICS_NOT_VALID\",\n-      \"The class statics descriptor must be an object literal\");\n+      \"The class statics descriptor must be an object or function literal\");\n \n   static final DiagnosticType GOOG_CLASS_UNEXPECTED_PARAMS = DiagnosticType.error(\n       \"JSC_GOOG_CLASS_UNEXPECTED_PARAMS\",\n-      \"The call to goog.defineClass has too many arguments.\");\n+      \"The class definition has too many arguments.\");\n \n   private final AbstractCompiler compiler;\n \n \n   private boolean validateUsage(Node n) {\n     // There are only three valid usage patterns for of goog.defineClass\n-    //   var x = googDefineClass\n-    //   ... = googDefineClass\n+    //   var ClassName = googDefineClass\n+    //   namespace.ClassName = googDefineClass\n     //   and within an objectlit, used by the goog.defineClass.\n     Node parent = n.getParent();\n     switch (parent.getType()) {\n     final MemberDefinition constructor;\n     final List<MemberDefinition> staticProps;\n     final List<MemberDefinition> props;\n-    final List<Node>  modifiers;\n+    final Node classModifier;\n \n     ClassDefinition(\n         Node name,\n         MemberDefinition constructor,\n         List<MemberDefinition> staticProps,\n         List<MemberDefinition> props,\n-        List<Node> modifiers) {\n+        Node classModifier) {\n       this.name = name;\n       this.superClass = superClass;\n       this.constructor = constructor;\n       this.staticProps = staticProps;\n       this.props = props;\n-      this.modifiers = modifiers;\n+      this.classModifier = classModifier;\n     }\n   }\n \n     }\n \n     int paramCount = callNode.getChildCount() -1;\n-    if (paramCount > 3) {\n+    if (paramCount > 2) {\n       compiler.report(JSError.make(callNode, GOOG_CLASS_UNEXPECTED_PARAMS));\n       return null;\n     }\n     }\n     JSDocInfo info = NodeUtil.getBestJSDocInfo(constructor);\n \n-    Node statics = extractProperty(description, \"statics\");\n-    if (statics != null\n-        && !(statics.isObjectLit() && validateObjLit(statics))) {\n-      compiler.report(JSError.make(statics, GOOG_CLASS_STATICS_NOT_VALID));\n-      return null;\n-    }\n+    Node classModifier = null;\n+    Node statics = null;\n+    Node staticsProp = extractProperty(description, \"statics\");\n+    if (staticsProp != null) {\n+      if (staticsProp.isObjectLit() && validateObjLit(staticsProp)) {\n+        statics = staticsProp;\n+      } else if (staticsProp.isFunction()) {\n+        classModifier = staticsProp;\n+      } else {\n+        compiler.report(\n+            JSError.make(staticsProp, GOOG_CLASS_STATICS_NOT_VALID));\n+        return null;\n+      }\n+    }\n+\n     if (statics == null) {\n       statics = IR.objectlit();\n     }\n \n-    Node modifiers = NodeUtil.getArgumentForCallOrNew(callNode, 2);\n-    if (modifiers != null && !modifiers.isArrayLit()) {\n-      compiler.report(JSError.make(modifiers, GOOG_CLASS_MODIFIERS_NOT_VALID));\n-      return null;\n-    }\n-    if (modifiers == null) {\n-      modifiers = IR.arraylit();\n-    }\n-\n     // Ok, now rip apart the definition into its component pieces.\n-    maybeDetach(constructor.getParent());  // remove the property node.\n+    // Remove the \"special\" property key nodes.\n+    maybeDetach(constructor.getParent());\n     maybeDetach(statics.getParent());\n+    if (classModifier != null) {\n+      maybeDetach(classModifier.getParent());\n+    }\n     ClassDefinition def = new ClassDefinition(\n         targetName,\n         maybeDetach(superClass),\n         new MemberDefinition(info, null, maybeDetach(constructor)),\n         objectLitToList(maybeDetach(statics)),\n         objectLitToList(description),\n-        arrayNodeToList(modifiers));\n+        maybeDetach(classModifier));\n     return def;\n   }\n \n     }\n     objlit.detachChildren();\n     return result;\n-  }\n-\n-  private List<Node> arrayNodeToList(Node arr) {\n-    Preconditions.checkState(arr == null || arr.isArrayLit());\n-\n-    if (arr == null) {\n-      return Collections.<Node>emptyList();\n-    } else {\n-      List<Node> result = Lists.newArrayList(arr.children());\n-      arr.detachChildren();\n-      return result;\n-    }\n   }\n \n   private void rewriteGoogDefineClass(Node exprRoot, ClassDefinition cls) {\n       maybeRewriteClassDefinition(block.getLastChild());\n     }\n \n-    for (Node modifier : cls.modifiers) {\n+    if (cls.classModifier != null) {\n       // example: modifier(ctr)\n       block.addChildToBack(\n           IR.exprResult(\n-              fixupFreeCall(IR.call(\n-                  modifier,\n-                  cls.name.cloneTree())\n-                  .srcref(modifier)))\n-              .srcref(modifier));\n-\n+              fixupFreeCall(\n+                  IR.call(\n+                      cls.classModifier,\n+                      cls.name.cloneTree())\n+                      .srcref(cls.classModifier)))\n+              .srcref(cls.classModifier));\n     }\n \n     exprRoot.getParent().replaceChild(exprRoot, block);\n   }\n \n   private Node fixupFreeCall(Node call) {\n-    if (call.getFirstChild().isName()) {\n-      call.putBooleanProp(Node.FREE_CALL, true);\n-    }\n+    Preconditions.checkState(call.isCall());\n+    call.putBooleanProp(Node.FREE_CALL, true);\n     return call;\n   }\n \n    * @return Whether the call represents a class definition.\n    */\n   private boolean isGoogDefineClass(Node value) {\n-    return value != null && value.isCall()\n-        && \"goog.defineClass\".equals(value.getFirstChild().getQualifiedName());\n+    if (value != null && value.isCall()) {\n+      String targetName = value.getFirstChild().getQualifiedName();\n+      return (\"goog.defineClass\".equals(targetName) ||\n+              \"goog.labs.classdef.defineClass\".equals(targetName));\n+    }\n+    return false;\n   }\n }\n--- a/test/com/google/javascript/jscomp/ClosureRewriteClassTest.java\n+++ b/test/com/google/javascript/jscomp/ClosureRewriteClassTest.java\n \n import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_CONSTRUCTOR_MISING;\n import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_DESCRIPTOR_NOT_VALID;\n-import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_MODIFIERS_NOT_VALID;\n import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_STATICS_NOT_VALID;\n import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_SUPER_CLASS_NOT_VALID;\n import static com.google.javascript.jscomp.ClosureRewriteClass.GOOG_CLASS_TARGET_INVALID;\n \n         \"var x = {};\" +\n         \"{x.y = function() {};}\");\n+  }\n+\n+  public void testBasic3() {\n+    test(\n+        \"var x = goog.labs.classdef.defineClass(null, {\\n\" +\n+        \"  constructor: function(){}\\n\" +\n+        \"});\",\n+\n+        \"{var x = function() {};}\");\n   }\n \n   public void testInnerClass1() {\n         \"  },\\n\" +\n         \"  anotherProp: 1,\\n\" +\n         \"  aMethod: function() {}\\n\" +\n-        \"}, [goog.addSingletonGetter, seal]);\",\n+        \"});\",\n \n         \"{\" +\n         \"var x=function(){this.foo=1};\" +\n         \"x.PROP2=2;\" +\n         \"x.prototype.anotherProp=1;\" +\n         \"x.prototype.aMethod=function(){};\" +\n-        \"goog.addSingletonGetter(x);\" +\n-        \"seal(x);\" +\n         \"}\");\n   }\n \n         \"  },\\n\" +\n         \"  anotherProp: 1,\\n\" +\n         \"  aMethod: function() {}\\n\" +\n-        \"}, [goog.addSingletonGetter, seal]);\",\n+        \"});\",\n \n         \"{\\n\" +\n         \"/** @constructor */\\n\" +\n         \"x.y.PROP2=2;\\n\" +\n         \"x.y.prototype.anotherProp=1;\" +\n         \"x.y.prototype.aMethod=function(){};\" +\n-        \"goog.addSingletonGetter(x.y);\" +\n-        \"seal(x.y);\" +\n-        \"}\");\n-  }\n-\n+        \"}\");\n+  }\n+\n+  public void testClassWithStaticInitFn() {\n+    test(\n+        \"x.y = goog.defineClass(some.Super, {\\n\" +\n+        \"  constructor: function(){\\n\" +\n+        \"    this.foo = 1;\\n\" +\n+        \"  },\\n\" +\n+        \"  statics: function(cls) {\\n\" +\n+        \"    cls.prop1 = 1;\\n\" +\n+        \"    /** @const */\\n\" +\n+        \"    cls.PROP2 = 2;\\n\" +\n+        \"  },\\n\" +\n+        \"  anotherProp: 1,\\n\" +\n+        \"  aMethod: function() {}\\n\" +\n+        \"});\",\n+\n+        \"{\\n\" +\n+        \"/** @constructor */\\n\" +\n+        \"x.y=function(){this.foo=1};\\n\" +\n+        \"goog.inherits(x.y,some.Super);\" +\n+        \"x.y.prototype.anotherProp=1;\" +\n+        \"x.y.prototype.aMethod=function(){};\" +\n+        \"(function(cls) {\" +\n+        \"  cls.prop1=1;\\n\" +\n+        \"  /** @const */\\n\" +\n+        \"  cls.PROP2=2;\" +\n+        \"})(x.y);\\n\" +\n+        \"}\");\n+  }\n \n   public void testInvalid1() {\n     testSame(\n         \"var x = goog.defineClass(null, {\" +\n         \"  constructor: function(){}\" +\n         \"}, null);\",\n-        GOOG_CLASS_MODIFIERS_NOT_VALID, true);\n-    testSame(\n-        \"var x = goog.defineClass(null, {\" +\n-        \"  constructor: function(){}\" +\n-        \"}, foo);\",\n-        GOOG_CLASS_MODIFIERS_NOT_VALID, true);\n+        GOOG_CLASS_UNEXPECTED_PARAMS, true);\n   }\n \n   public void testInvalid6() {\n-    testSame(\n-        \"var x = goog.defineClass(null, {\" +\n-        \"  constructor: function(){}\" +\n-        \"}, [], null);\",\n-        GOOG_CLASS_UNEXPECTED_PARAMS, true);\n-  }\n-\n-  public void testInvalid7() {\n     testSame(\n         \"goog.defineClass();\",\n         GOOG_CLASS_TARGET_INVALID, true);", "timestamp": 1349990211, "metainfo": ""}