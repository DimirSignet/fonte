{"sha": "e98c4b910440d3bf9028686fa86b41710aca924c", "log": "Verify some tests that have been fixed by rhino changes. Fixes issue 380 Fixes issue 428  R=johnlenz DELTA=30  (30 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1623   ", "commit": "\n--- a/test/com/google/javascript/jscomp/ControlStructureCheckTest.java\n+++ b/test/com/google/javascript/jscomp/ControlStructureCheckTest.java\n              \"with(a){}\");\n   }\n \n+  public void testUseOfWith3() {\n+    testSame(\n+        \"function f(expr, context) {\\n\" +\n+        \"  try {\\n\" +\n+        \"    /** @suppress{with} */ with (context) {\\n\" +\n+        \"      return eval('[' + expr + '][0]');\\n\" +\n+        \"    }\\n\" +\n+        \"  } catch (e) {\\n\" +\n+        \"    return null;\\n\" +\n+        \"  }\\n\" +\n+        \"};\\n\");\n+  }\n+\n   private void assertNoError(String js) {\n     testSame(js);\n   }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"var s = 'hello';\" +\n         \"alert(s.toLowerCase.indexOf('1'));\",\n         \"Property indexOf never defined on String.prototype.toLowerCase\");\n+  }\n+\n+  public void testIssue380() throws Exception {\n+    testTypes(\n+        \"/** @type { function(string): {innerHTML: string} } */\" +\n+        \"document.getElementById;\" +\n+        \"var list = /** @type {!Array.<string>} */ ['hello', 'you'];\\n\" +\n+        \"list.push('?');\\n\" +\n+        \"document.getElementById('node').innerHTML = list.toString();\");\n   }\n \n   /**\n--- a/test/com/google/javascript/jscomp/parsing/ParserTest.java\n+++ b/test/com/google/javascript/jscomp/parsing/ParserTest.java\n   public void testJSDocAttachment15() {\n     Node varNode = parse(\"/** \\n * \\n */ var a;\").getFirstChild();\n     assertNull(varNode.getJSDocInfo());\n+  }\n+\n+  public void testJSDocAttachment16() {\n+    Node exprCall =\n+        parse(\"/** @private */ x(); function f() {};\").getFirstChild();\n+    assertEquals(Token.EXPR_RESULT, exprCall.getType());\n+    assertNull(exprCall.getNext().getJSDocInfo());\n+    assertNotNull(exprCall.getFirstChild().getJSDocInfo());\n   }\n \n   public void testIncorrectJSDocDoesNotAlterJSParsing1() throws Exception {", "timestamp": 1303838690, "metainfo": ""}