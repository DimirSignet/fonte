{"sha": "05f5aa1184d5796c0afe11a66c92a72bdfd10864", "log": "cl/18393279 was a bit too conservative. I checked a few binaries, and old versions of jscompiler used to collapse this correctly, so we should continue to optimize this.   R=acleung DELTA=25  (14 added, 9 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=221   ", "commit": "\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n      *     declaration\n      */\n     private boolean isConstructorOrEnumDeclaration(Node n, Node parent) {\n-      // NOTE(nicksantos): This does not handle named constructors\n-      // function a() {}\n-      // For legacy reasons, we should not fix this, because we do not\n-      // know who's depending on the current behavior.\n-\n       JSDocInfo info;\n       int valueNodeType;\n       switch (parent.getType()) {\n           valueNodeType = valueNode != null ? valueNode.getType() : Token.VOID;\n           break;\n         default:\n+          if (NodeUtil.isFunctionDeclaration(parent)) {\n+            info = parent.getJSDocInfo();\n+            valueNodeType = Token.FUNCTION;\n+            break;\n+          }\n           return false;\n       }\n       // Heed the annotations only if they're sensibly used.\n--- a/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n+++ b/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n   }\n \n   public void testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1() {\n-    // This technically should be collapsed, according to the rules.\n-    // We don't collapse named constructors for legacy reasons\n-    // (this pass has been around too long, and we don't know who's\n-    // depending on this behavior).\n     testSame(\n-          \"/** @constructor */ function a() {} var c = a; \" +\n-          \"(function() {a.b = 0;})(); a.b;\");\n+          \"/** @constructor */ function a() {} var a$b; var c = a; \" +\n+          \"(function() {a$b = 0;})(); a$b;\");\n   }\n \n   public void testAddPropertyToUncollapsibleCtorInLocalScopeDepth1() {\n   public void testConstKey() {\n     test(\"var foo = {A: 3};\", \"var foo$A = 3;\");\n   }\n+\n+  public void testPropertyOnGlobalCtor() {\n+    test(\"/** @constructor */ function Map() {} Map.foo = 3; Map;\",\n+         \"function Map() {} var Map$foo = 3; Map;\");\n+  }\n+\n+  public void testPropertyOnGlobalFunction() {\n+    testSame(\"function Map() {} Map.foo = 3; Map;\");\n+  }\n }", "timestamp": 1294415584, "metainfo": ""}