{"sha": "4a024e7be9c5d7716e51994c25ab72ff34ffd74f", "log": "Add goog.asserts.assertElement() to JS Compiler assertion functions so we get code removal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52527693", "commit": "\n--- a/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n+++ b/src/com/google/javascript/jscomp/ClosureCodingConvention.java\n             JSTypeNative.OBJECT_TYPE),\n         new AssertionFunctionSpec(\"goog.asserts.assertArray\",\n             JSTypeNative.ARRAY_TYPE),\n+        new AssertFunctionByTypeName(\"goog.asserts.assertElement\", \"Element\"),\n         new AssertInstanceofSpec(\"goog.asserts.assertInstanceof\")\n     );\n   }\n     }\n   }\n \n+  /**\n+   * A function that will throw an exception when the value is not an\n+   * instanceof the given type name, for instance \"Element\".\n+   */\n+  public static class AssertFunctionByTypeName extends AssertionFunctionSpec {\n+    private final String typeName;\n+\n+    public AssertFunctionByTypeName(String functionName, String typeName) {\n+      super(functionName);\n+      this.typeName = typeName;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public JSType getAssertedType(Node call, JSTypeRegistry registry) {\n+      return registry.getType(typeName);\n+    }\n+  }\n \n }\n--- a/src/com/google/javascript/jscomp/TypeInferencePass.java\n+++ b/src/com/google/javascript/jscomp/TypeInferencePass.java\n     this.scopeCreator = scopeCreator;\n \n     assertionFunctionsMap = Maps.newHashMap();\n-    for (AssertionFunctionSpec assertionFucntion :\n+    for (AssertionFunctionSpec assertionFunction :\n         compiler.getCodingConvention().getAssertionFunctions()) {\n-      assertionFunctionsMap.put(assertionFucntion.getFunctionName(),\n-          assertionFucntion);\n+      assertionFunctionsMap.put(assertionFunction.getFunctionName(),\n+          assertionFunction);\n     }\n   }\n \n--- a/test/com/google/javascript/jscomp/TypeInferenceTest.java\n+++ b/test/com/google/javascript/jscomp/TypeInferenceTest.java\n     verifySubtypeOf(\"out2\", OBJECT_TYPE);\n   }\n \n+  public void testAssertElement() {\n+    JSType elementType = registry.createObjectType(\"Element\", null,\n+        registry.getNativeObjectType(OBJECT_TYPE));\n+    assuming(\"x\", elementType);\n+    inFunction(\"out1 = x; goog.asserts.assertElement(x); out2 = x;\");\n+    verify(\"out1\", elementType);\n+  }\n+\n   public void testAssertObject2() {\n     JSType startType = createNullableType(ARRAY_TYPE);\n     assuming(\"x\", startType);", "timestamp": 1379613210, "metainfo": ""}