{"sha": "4a9d8d535ff24cf64f5ff8b941c4f80047d49eec", "log": "Create a less hacky mechanism to prevent renaming to a given name.  R=johnlenz DELTA=18 (17 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5991   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n import com.google.javascript.jscomp.CompilerOptions.LanguageMode;\n import com.google.javascript.jscomp.ExtractPrototypeMemberDeclarations.Pattern;\n import com.google.javascript.jscomp.NodeTraversal.Callback;\n+import com.google.javascript.jscomp.parsing.ParserRunner;\n import com.google.javascript.rhino.IR;\n import com.google.javascript.rhino.Node;\n \n         options.anonymousFunctionNaming.getReservedCharacters();\n     boolean preserveAnonymousFunctionNames =\n         options.anonymousFunctionNaming != AnonymousFunctionNamingPolicy.OFF;\n+    Set<String> reservedNames = Sets.newHashSet();\n+    if (exportedNames != null) {\n+      reservedNames.addAll(exportedNames);\n+    }\n+    reservedNames.addAll(ParserRunner.getReservedVars());\n     RenameVars rn = new RenameVars(\n         compiler,\n         options.renamePrefix,\n         options.shadowVariables,\n         prevVariableMap,\n         reservedChars,\n-        exportedNames);\n+        reservedNames);\n     rn.process(externs, root);\n     return rn.getVariableMap();\n   }\n--- a/src/com/google/javascript/jscomp/parsing/ParserRunner.java\n+++ b/src/com/google/javascript/jscomp/parsing/ParserRunner.java\n   private static Set<String> annotationNames = null;\n \n   private static Set<String> suppressionNames = null;\n+  private static Set<String> reservedVars = null;\n \n   // Should never need to instantiate class of static methods.\n   private ParserRunner() {}\n         isIdeMode, languageMode, acceptConstKeyword);\n   }\n \n+  public static Set<String> getReservedVars() {\n+    initResourceConfig();\n+    return reservedVars;\n+  }\n+\n   private static synchronized void initResourceConfig() {\n     if (annotationNames != null) {\n       return;\n     ResourceBundle config = ResourceBundle.getBundle(configResource);\n     annotationNames = extractList(config.getString(\"jsdoc.annotations\"));\n     suppressionNames = extractList(config.getString(\"jsdoc.suppressions\"));\n+    reservedVars = extractList(config.getString(\"compiler.reserved.vars\"));\n   }\n \n   private static Set<String> extractList(String configProp) {", "timestamp": 1355784264, "metainfo": ""}