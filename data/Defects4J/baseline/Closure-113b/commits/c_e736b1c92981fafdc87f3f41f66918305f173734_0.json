{"sha": "e736b1c92981fafdc87f3f41f66918305f173734", "log": "Fix goog.isFunction, typeof x == 'function', and similiar type inference. Fixes issue 841.  R=nicksantos DELTA=50  (49 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5666   ", "commit": "\n--- a/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java\n     public JSType caseObjectType(ObjectType type) {\n       if (value.equals(\"function\")) {\n         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);\n-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;\n+        if (resultEqualsValue) {\n+          // Objects are restricted to \"Function\", subtypes are left\n+          return ctorType.getGreatestSubtype(type);\n+        } else {\n+          // Only filter out subtypes of \"function\"\n+          return type.isSubtype(ctorType) ? null : type;\n+        }\n       }\n       return matchesExpectation(\"object\") ? type : null;\n     }\n--- a/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java\n+++ b/test/com/google/javascript/jscomp/ClosureReverseAbstractInterpreterTest.java\n         NULL_TYPE);\n   }\n \n+  public void testGoogIsFunction2() throws Exception {\n+    testClosureFunction(\"goog.isFunction\",\n+        OBJECT_NUMBER_STRING_BOOLEAN,\n+        U2U_CONSTRUCTOR_TYPE,\n+        OBJECT_NUMBER_STRING_BOOLEAN);\n+  }\n+\n+  public void testGoogIsFunction3() throws Exception {\n+    testClosureFunction(\"goog.isFunction\",\n+        createUnionType(U2U_CONSTRUCTOR_TYPE,NUMBER_STRING_BOOLEAN),\n+        U2U_CONSTRUCTOR_TYPE,\n+        NUMBER_STRING_BOOLEAN);\n+  }\n+\n   public void testGoogIsArray() throws Exception {\n     testClosureFunction(\"goog.isArray\",\n         OBJECT_TYPE,\n--- a/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java\n+++ b/test/com/google/javascript/jscomp/SemanticReverseAbstractInterpreterTest.java\n   }\n \n   @SuppressWarnings(\"unchecked\")\n+  public void testTypeof3() {\n+    FlowScope blind = newScope();\n+    testBinop(blind,\n+        Token.EQ,\n+        new Node(Token.TYPEOF, createVar(\n+            blind, \"a\", OBJECT_NUMBER_STRING_BOOLEAN)),\n+        Node.newString(\"function\"),\n+        Sets.newHashSet(\n+            new TypedName(\"a\", U2U_CONSTRUCTOR_TYPE)),\n+        Sets.newHashSet(\n+            new TypedName(\"a\", OBJECT_NUMBER_STRING_BOOLEAN)));\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public void testTypeof4() {\n+    FlowScope blind = newScope();\n+    testBinop(blind,\n+        Token.EQ,\n+        new Node(Token.TYPEOF, createVar(\n+            blind, \"a\", createUnionType(\n+                U2U_CONSTRUCTOR_TYPE,NUMBER_STRING_BOOLEAN))),\n+        Node.newString(\"function\"),\n+        Sets.newHashSet(\n+            new TypedName(\"a\", U2U_CONSTRUCTOR_TYPE)),\n+        Sets.newHashSet(\n+            new TypedName(\"a\", NUMBER_STRING_BOOLEAN)));\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n   public void testInstanceOf() {\n     FlowScope blind = newScope();\n     testBinop(blind,", "timestamp": 1350489239, "metainfo": ""}