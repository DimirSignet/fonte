{"sha": "99797b3e2ee9e050fe338d3ccb9b9a9543a24c9f", "log": "Make Mark's life easier, protect properties referenced on 'top' as well.  R=mwr DELTA=14  (11 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4331   ", "commit": "\n--- a/src/com/google/javascript/jscomp/GatherRawExports.java\n+++ b/src/com/google/javascript/jscomp/GatherRawExports.java\n \n   private final AbstractCompiler compiler;\n \n-  private static final String GLOBAL_THIS_NAME = \"window\";\n+  private static final String GLOBAL_THIS_NAMES[] = { \"window\", \"top\" };\n \n   private final Set<String> exportedVariables = Sets.newHashSet();\n \n       return t.inGlobalScope();\n     } else if (n.isName()) {\n       String varName = n.getString();\n-      if (varName.equals(GLOBAL_THIS_NAME)) {\n-        return true;\n+      int items = GLOBAL_THIS_NAMES.length;\n+      for (int i = 0; i < items; i++) {\n+        if (varName.equals(GLOBAL_THIS_NAMES[i])) {\n+          return true;\n+        }\n       }\n     }\n     return false;\n--- a/test/com/google/javascript/jscomp/GatherRawExportsTest.java\n+++ b/test/com/google/javascript/jscomp/GatherRawExportsTest.java\n     assertExported(\"var a = window; a['b']\");\n   }\n \n+  public void testExportOnTopFound1() {\n+    assertExported(\"top['a']\", \"a\");\n+  }\n+\n+  public void testExportOntopFound2() {\n+    assertExported(\"top.a\", \"a\");\n+  }\n+\n   private void assertExported(String js, String ... names) {\n     Set<String> setNames = Sets.newHashSet(names);\n     testSame(js);", "timestamp": 1331072621, "metainfo": ""}