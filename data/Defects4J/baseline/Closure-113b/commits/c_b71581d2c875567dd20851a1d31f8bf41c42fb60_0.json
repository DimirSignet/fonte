{"sha": "b71581d2c875567dd20851a1d31f8bf41c42fb60", "log": "add a more robust failsafe mode  R=acleung DELTA=29  (6 added, 14 deleted, 9 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4358   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ComposeWarningsGuard.java\n+++ b/src/com/google/javascript/jscomp/ComposeWarningsGuard.java\n \n   private final Comparator<WarningsGuard> guardComparator =\n       new GuardComparator(orderOfAddition);\n+  private boolean demoteErrors = false;\n \n   private static class GuardComparator\n       implements Comparator<WarningsGuard>, Serializable {\n     for (WarningsGuard guard : guards) {\n       CheckLevel newLevel = guard.level(error);\n       if (newLevel != null) {\n+        if (demoteErrors && newLevel == CheckLevel.ERROR) {\n+          return CheckLevel.WARNING;\n+        }\n         return newLevel;\n       }\n     }\n    */\n   ComposeWarningsGuard makeEmergencyFailSafeGuard() {\n     ComposeWarningsGuard safeGuard = new ComposeWarningsGuard();\n+    safeGuard.demoteErrors = true;\n     for (WarningsGuard guard : guards.descendingSet()) {\n-      if (guard instanceof StrictWarningsGuard) {\n-        continue;\n-      } else if (guard instanceof DiagnosticGroupWarningsGuard) {\n-        DiagnosticGroupWarningsGuard dgGuard =\n-            (DiagnosticGroupWarningsGuard) guard;\n-        if (dgGuard.level == CheckLevel.ERROR) {\n-          safeGuard.addGuard(\n-              new DiagnosticGroupWarningsGuard(\n-                  dgGuard.group, CheckLevel.WARNING));\n-        } else {\n-        safeGuard.addGuard(guard);\n-        }\n-      } else {\n-        safeGuard.addGuard(guard);\n-      }\n+      safeGuard.addGuard(guard);\n     }\n     return safeGuard;\n   }", "timestamp": 1331656351, "metainfo": ""}