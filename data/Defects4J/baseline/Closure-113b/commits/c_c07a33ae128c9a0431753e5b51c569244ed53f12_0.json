{"sha": "c07a33ae128c9a0431753e5b51c569244ed53f12", "log": "Fix the invalid naming map created for \"mapped\" id generators. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45467918", "commit": "\n--- a/src/com/google/javascript/jscomp/ReplaceIdGenerators.java\n+++ b/src/com/google/javascript/jscomp/ReplaceIdGenerators.java\n       String rename = null;\n       Map<String, String> idGeneratorMap = idGeneratorMaps.get(callName);\n       String instanceId = getIdForGeneratorNode(\n-          nameGenerator.getRenameStrategy() == RenameStrategy.CONSISTENT, id);\n+          nameGenerator.getRenameStrategy() != RenameStrategy.INCONSISTENT, id);\n       if (nameGenerator.getRenameStrategy() == RenameStrategy.CONSISTENT) {\n         Map<String, String> entry = consistNameMap.get(callName);\n         rename = entry.get(instanceId);\n--- a/test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java\n+++ b/test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java\n         \"foo.bar = ':foo:';\");\n   }\n \n+  public void testMappedMap() {\n+    testMap(\"/** @idGenerator {mapped}*/ xid = function() {};\" +\n+        \"foo.bar = xid('foo');\" +\n+        \"foo.bar = xid('foo');\",\n+\n+        \"xid = function() {};\" +\n+        \"foo.bar = ':foo:';\" +\n+        \"foo.bar = ':foo:';\",\n+\n+        \"[xid]\\n\" +\n+        \"\\n\" +\n+        \":foo::foo\\n\" +\n+        \"\\n\");\n+  }\n+\n   public void testMapped2() {\n     test(\"/** @idGenerator {mapped}*/ xid = function() {};\" +\n         \"foo.bar = function() { return xid('foo'); };\",", "timestamp": 1366327198, "metainfo": ""}