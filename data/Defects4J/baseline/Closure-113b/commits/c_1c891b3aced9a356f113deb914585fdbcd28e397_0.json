{"sha": "1c891b3aced9a356f113deb914585fdbcd28e397", "log": "Don't print exact sizes to the console.  This is best computed outside PerformanceTracker, which is where all the other statistic printing takes place. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47813509", "commit": "\n--- a/src/com/google/javascript/jscomp/PerformanceTracker.java\n+++ b/src/com/google/javascript/jscomp/PerformanceTracker.java\n   private int changes = 0;\n   private int loopRuns = 0;\n   private int loopChanges = 0;\n+\n+  // The following fields for tracking size changes are just estimates.\n+  // They do not take into account preserved license blocks, newline padding,\n+  // or pretty printing (if enabled), since they don't use CodePrinter.\n+  // To get exact sizes, call compiler.toSource() for the final generated code.\n   private int codeSize = -1;  // estimate\n   private int gzCodeSize = -1;  // estimate\n   private int diff = 0;  // estimate\n   private int gzDiff = 0;  // estimate\n-  private long finalCodeSize = -1;  // exact\n-  private long finalGzSize = -1;  // exact\n-\n-  private Deque<Stats> currentPass = new ArrayDeque<Stats>();\n+\n+  private final Deque<Stats> currentPass = new ArrayDeque<Stats>();\n \n   /** Summary stats by pass name. */\n   private final Map<String, Stats> summary = Maps.newHashMap();\n   public ImmutableMap<String, Stats> getStats() {\n     calcTotalStats();\n     return summaryCopy;\n-  }\n-\n-  public void setFinalSizes(long finalCodeSize, long finalGzSize) {\n-    this.finalCodeSize = finalCodeSize;\n-    this.finalGzSize = finalGzSize;\n   }\n \n   class CmpEntries implements Comparator<Entry<String, Stats>> {\n           \"\\nEstimated GzReduction(bytes): \" + String.valueOf(gzDiff) +\n           \"\\nEstimated Size(bytes): \" + String.valueOf(codeSize) +\n           \"\\nEstimated GzSize(bytes): \" + String.valueOf(gzCodeSize) +\n-          \"\\nTotal Size(bytes): \" + String.valueOf(finalCodeSize) +\n-          \"\\nTotal GzSize(bytes): \" + String.valueOf(finalGzSize) +\n           \"\\n\\n\");\n \n       output.write(\"Log:\\n\" +\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n         \"\\nEstimated GzReduction\\\\(bytes\\\\): [0-9]+\" +\n         \"\\nEstimated Size\\\\(bytes\\\\): [0-9]+\" +\n         \"\\nEstimated GzSize\\\\(bytes\\\\): [0-9]+\" +\n-        \"\\nTotal Size\\\\(bytes\\\\): -?[0-9]+\" +\n-        \"\\nTotal GzSize\\\\(bytes\\\\): -?[0-9]+\" +\n         \"\\n\\nLog:\\n\" +\n         \"pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize.*\",\n         Pattern.DOTALL);", "timestamp": 1370906730, "metainfo": ""}