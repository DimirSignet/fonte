{"sha": "e9c15465c000c19ef4e0b8f68a680589ae4111d7", "log": "counter DOS shell file name normalization fixes issue 824  R=malteubl DELTA=11  (9 added, 1 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5559   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n   }\n \n   private String normalizeSourceName(String filename) {\n+    // The DOS command shell will normalize \"/\" to \"\\\", so we have to\n+    // wrestle it back.\n+    filename = filename.replace(\"\\\\\", \"/\");\n+\n     if (filename.indexOf(filenamePrefix) == 0) {\n       filename = filename.substring(filenamePrefix.length());\n     }\n+\n     return filename;\n   }\n \n       Preconditions.checkArgument(scriptNodeCount == 1,\n           \"ProcessCommonJSModules supports only one invocation per \" +\n           \"CompilerInput / script node\");\n-      String moduleName = guessCJSModuleName(normalizeSourceName(script\n-          .getSourceFileName()));\n+      String moduleName = guessCJSModuleName(script.getSourceFileName());\n       script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit())\n           .copyInformationFromForTree(script));\n       if (reportDependencies) {\n--- a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n+++ b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n     ProcessCommonJSModules pass = new ProcessCommonJSModules(null, \"foo\");\n     assertEquals(\"module$baz\",\n         pass.guessCJSModuleName(\"foo/baz.js\"));\n+    assertEquals(\"module$baz\",\n+        pass.guessCJSModuleName(\"foo\\\\baz.js\"));\n+    assertEquals(\"module$bar$baz\",\n+        pass.guessCJSModuleName(\"foo\\\\bar\\\\baz.js\"));\n   }\n }", "timestamp": 1348773538, "metainfo": ""}