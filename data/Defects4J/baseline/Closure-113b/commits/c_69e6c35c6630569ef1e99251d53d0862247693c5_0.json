{"sha": "69e6c35c6630569ef1e99251d53d0862247693c5", "log": "Some cleanup of the rhino_ast ErrorReporter  R=nicksantos DELTA=49  (0 added, 48 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3653   ", "commit": "\n--- a/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n+++ b/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n \n import com.google.common.collect.ImmutableMap;\n import com.google.javascript.rhino.ErrorReporter;\n-import com.google.javascript.rhino.EvaluatorException;\n import com.google.javascript.rhino.ScriptRuntime;\n import com.google.javascript.jscomp.CheckLevel;\n \n     private OldRhinoErrorReporter(AbstractCompiler compiler) {\n       super(compiler);\n     }\n-\n-    @Override\n-    public EvaluatorException runtimeError(String message, String sourceName,\n-        int line, String lineSource, int lineOffset) {\n-      return new EvaluatorException(message, sourceName, line, lineSource,\n-          lineOffset);\n-    }\n   }\n \n   private static class NewRhinoErrorReporter extends RhinoErrorReporter\n--- a/src/com/google/javascript/jscomp/parsing/NullErrorReporter.java\n+++ b/src/com/google/javascript/jscomp/parsing/NullErrorReporter.java\n package com.google.javascript.jscomp.parsing;\n \n import com.google.javascript.rhino.ErrorReporter;\n-import com.google.javascript.rhino.EvaluatorException;\n \n /**\n  * An error reporter which consumes all calls and performs no actions.\n \n   private static class OldRhinoNullReporter extends NullErrorReporter\n       implements ErrorReporter {\n-    @Override\n-    public EvaluatorException runtimeError(String message, String sourceName,\n-                                           int line, String lineSource,\n-                                           int lineOffset) {\n-      return new EvaluatorException(message);\n-    }\n   }\n }\n--- a/src/com/google/javascript/rhino/ErrorReporter.java\n+++ b/src/com/google/javascript/rhino/ErrorReporter.java\n     void error(String message, String sourceName, int line,\n                String lineSource, int lineOffset);\n \n-    /**\n-     * Creates an EvaluatorException that may be thrown.\n-     *\n-     * runtimeErrors, unlike errors, will always terminate the\n-     * current script.\n-     *\n-     * @param message a String describing the error\n-     * @param sourceName a String describing the JavaScript source\n-     * where the error occured; typically a filename or URL\n-     * @param line the line number associated with the error\n-     * @param lineSource the text of the line (may be null)\n-     * @param lineOffset the offset into lineSource where problem was detected\n-     * @return an EvaluatorException that will be thrown.\n-     */\n-    EvaluatorException runtimeError(String message, String sourceName,\n-                                    int line, String lineSource,\n-                                    int lineOffset);\n }\n--- a/src/com/google/javascript/rhino/EvaluatorException.java\n+++ b/src/com/google/javascript/rhino/EvaluatorException.java\n package com.google.javascript.rhino;\n \n /**\n- * The class of exceptions thrown by the JavaScript engine.\n+ * This class is only used by legacy clients.\n  */\n public class EvaluatorException extends RhinoException {\n     static final long serialVersionUID = -8743165779676009808L;\n--- a/src/com/google/javascript/rhino/SimpleErrorReporter.java\n+++ b/src/com/google/javascript/rhino/SimpleErrorReporter.java\n             message, sourceName, line, lineSource, lineOffset));\n     }\n \n-    @Override\n-    public EvaluatorException runtimeError(\n-        String message, String sourceName, int line, String lineSource,\n-        int lineOffset) {\n-        return new EvaluatorException(\n-            message, sourceName, line, lineSource, lineOffset);\n-    }\n-\n     /**\n      * Returns the list of errors, or {@code null} if there were none.\n      */\n--- a/src/com/google/javascript/rhino/testing/TestErrorReporter.java\n+++ b/src/com/google/javascript/rhino/testing/TestErrorReporter.java\n package com.google.javascript.rhino.testing;\n \n import com.google.javascript.rhino.ErrorReporter;\n-import com.google.javascript.rhino.EvaluatorException;\n-\n import junit.framework.Assert;\n \n /**\n     }\n   }\n \n-  @Override\n-  public EvaluatorException runtimeError(String message, String sourceName,\n-      int line, String lineSource, int lineOffset) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n   /**\n    * Returns whether all warnings were reported to this reporter.\n    */", "timestamp": 1320781497, "metainfo": ""}