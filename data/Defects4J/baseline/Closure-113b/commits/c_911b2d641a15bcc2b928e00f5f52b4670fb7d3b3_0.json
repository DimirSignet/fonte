{"sha": "911b2d641a15bcc2b928e00f5f52b4670fb7d3b3", "log": "ReplaceMessagesForChrome: Don't include the same placeholder twice in the array passed to chrome.i18n.getMessage. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53406080", "commit": "\n--- a/src/com/google/javascript/jscomp/ReplaceMessagesForChrome.java\n+++ b/src/com/google/javascript/jscomp/ReplaceMessagesForChrome.java\n package com.google.javascript.jscomp;\n \n import com.google.common.collect.Lists;\n-import com.google.javascript.jscomp.JsMessage.PlaceholderReference;\n import com.google.javascript.rhino.IR;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n  * Replaces user-visible messages with appropriate calls to\n  * chrome.i18n.getMessage. The first argument to getMessage is the id of the\n  * message, as a string. If the message contains placeholders, the second\n- * argument is an array of the values being used for the placeholders, in the\n- * order they appear in the source code.\n+ * argument is an array of the values being used for the placeholders, sorted\n+ * by placeholder name.\n  *\n  * @author tbreisacher@google.com (Tyler Breisacher)\n  */\n \n       // Output the placeholders, sorted alphabetically by placeholder name,\n       // regardless of what order they appear in the original message.\n-      List<String> placeholderNames = Lists.newArrayList();\n-      for (CharSequence cs : message.parts()) {\n-        if (cs instanceof PlaceholderReference) {\n-          String placeholderName = ((PlaceholderReference) cs).getName();\n-          placeholderNames.add(placeholderName);\n-        }\n-      }\n+      List<String> placeholderNames = Lists.newArrayList(message.placeholders());\n       Collections.sort(placeholderNames);\n \n       Node placeholderValueArray = IR.arraylit();\n--- a/test/com/google/javascript/jscomp/ReplaceMessagesForChromeTest.java\n+++ b/test/com/google/javascript/jscomp/ReplaceMessagesForChromeTest.java\n          \"var MSG_EXTERNAL_1357902468 = goog.getMsg('Hello world');\",\n          \"var MSG_EXTERNAL_1357902468 = chrome.i18n.getMessage('1357902468');\");\n   }\n+\n+  /**\n+   * Test that messages are handled correctly if they contain the same\n+   * placeholder twice.\n+   */\n+  public void testReplaceMessageWithDuplicatePlaceholders() {\n+    String original = \"\" +\n+        \"/** @desc A message that contains two instances of the same placeholder. */\\n\" +\n+        \"var MSG_EXTERNAL_987654321 = goog.getMsg(\" +\n+        \"'{$startDiv_1}You are signed in as{$endDiv}{$img}{$startDiv_2}{$name}{$endDiv}',\" +\n+        \"{'startDiv_1': '<div>',\" +\n+        \"'endDiv': '</div>',\" +\n+        \"'img': '<img src=\\\"http://example.com/photo.png\\\">',\" +\n+        \"'startDiv_2': '<div class=\\\"name\\\">',\" +\n+        \"'name': name});\";\n+\n+    String compiled = \"\" +\n+        \"var MSG_EXTERNAL_987654321 = chrome.i18n.getMessage('987654321', \" +\n+        \"[\" +\n+        \"'</div>', \" +  // endDiv, only included once, even though it appears twice in the message.\n+        \"'<img src=\\\"http://example.com/photo.png\\\">', \" +  // img\n+        \"name, \" +  // name\n+        \"'<div>', \" +  // startDiv_1\n+        \"'<div class=\\\"name\\\">'\" +  // startDiv_2\n+        \"]);\";\n+\n+    test(original, compiled);\n+  }\n }", "timestamp": 1380558795, "metainfo": ""}