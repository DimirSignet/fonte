{"sha": "f9a5b61f2484acccd65a2a6ed99e31b7ac58aeb7", "log": "Bugfix to register prototype properties on structs correctly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45218295", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n         return;\n       }\n       // Prop created outside ctor, check that it's a static prop\n-      Node assgnStm = lvalue.getParent().getParent();\n+      Node assgnExp = lvalue.getParent();\n+      Node assgnStm = assgnExp.getParent();\n       if (objType instanceof ObjectType &&\n           s.isGlobal() &&\n           NodeUtil.isPrototypePropertyDeclaration(assgnStm)) {\n         String file = lvalue.getSourceFileName();\n         Node ctor = instance.getConstructor().getSource();\n         if (ctor != null && ctor.getSourceFileName().equals(file)) {\n+          JSType rvalueType = assgnExp.getLastChild().getJSType();\n+          instance.defineInferredProperty(pname, rvalueType, lvalue);\n           return;\n         }\n       }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n               \" */\\n\" +\n               \"function Foo() {}\\n\" +\n               \"Foo.someprop = 123;\");\n+  }\n+\n+  public void testSetprop13() throws Exception {\n+    // Create static property on struct\n+    testTypes(\"/**\\n\" +\n+              \" * @constructor\\n\" +\n+              \" * @struct\\n\" +\n+              \" */\\n\" +\n+              \"function Parent() {}\\n\" +\n+              \"/**\\n\" +\n+              \" * @constructor\\n\" +\n+              \" * @extends {Parent}\\n\" +\n+              \" */\\n\" +\n+              \"function Kid() {}\\n\" +\n+              \"Kid.prototype.foo = 123;\\n\" +\n+              \"var x = (new Kid()).foo;\");\n+  }\n+\n+  public void testSetprop14() throws Exception {\n+    // Create static property on struct\n+    testTypes(\"/**\\n\" +\n+              \" * @constructor\\n\" +\n+              \" * @struct\\n\" +\n+              \" */\\n\" +\n+              \"function Top() {}\\n\" +\n+              \"/**\\n\" +\n+              \" * @constructor\\n\" +\n+              \" * @extends {Top}\\n\" +\n+              \" */\\n\" +\n+              \"function Mid() {}\\n\" +\n+              \"/** blah blah */\\n\" +\n+              \"Mid.prototype.foo = function() { return 1; };\\n\" +\n+              \"/**\\n\" +\n+              \" * @constructor\\n\" +\n+              \" * @struct\\n\" +\n+              \" * @extends {Mid}\\n\" +\n+              \" */\\n\" +\n+              \"function Bottom() {}\\n\" +\n+              \"/** @override */\\n\" +\n+              \"Bottom.prototype.foo = function() { return 3; };\");\n   }\n \n   public void testGetpropDict1() throws Exception {", "timestamp": 1366234981, "metainfo": ""}