{"sha": "8cf08115c6b252f8c6b54348a4089dccc45a01fb", "log": "Negative zero is a special case, and needs to be handled differently to prevent it from getting confused with decrement fixes issue 657  R=johnlenz DELTA=9  (7 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4211   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CodeConsumer.java\n+++ b/src/com/google/javascript/jscomp/CodeConsumer.java\n     // This is not pretty printing. This is to prevent misparsing of x- -4 as\n     // x--4 (which is a syntax error).\n     char prev = getLastChar();\n-    if (x < 0 && prev == '-') {\n+    boolean negativeZero = isNegativeZero(x);\n+    if ((x < 0 || negativeZero) && prev == '-') {\n       add(\" \");\n     }\n \n-    if ((long) x == x && !isNegativeZero(x)) {\n+    if ((long) x == x && !negativeZero) {\n       long value = (long) x;\n       long mantissa = value;\n       int exp = 0;\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n     String actual = printNode(current).replace(\"\\n\", \"\");\n     assertEquals(expected, actual);\n   }\n+\n+  public void testMinusNegativeZero() {\n+    // Negative zero is weird, because we have to be able to distinguish\n+    // it from positive zero (there are some subtle differences in behavior).\n+    assertPrint(\"x- -0\", \"x- -0.0\");\n+  }\n }", "timestamp": 1329149272, "metainfo": ""}