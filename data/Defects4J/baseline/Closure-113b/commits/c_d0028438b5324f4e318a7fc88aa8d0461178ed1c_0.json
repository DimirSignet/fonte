{"sha": "d0028438b5324f4e318a7fc88aa8d0461178ed1c", "log": "Stop fusion around synthetic blocks ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47545559", "commit": "\n--- a/src/com/google/javascript/jscomp/StatementFusion.java\n+++ b/src/com/google/javascript/jscomp/StatementFusion.java\n       case Token.LABEL:\n         return isFusableControlStatement(n.getLastChild());\n       case Token.BLOCK:\n-        return isFusableControlStatement(n.getFirstChild());\n+        return !n.isSyntheticBlock() &&\n+            isFusableControlStatement(n.getFirstChild());\n     }\n     return false;\n   }\n    * @param last The last statement to fuse (exclusive)\n    * @return A single statement that contains all the fused statement as one.\n    */\n-  private Node fuseIntoOneStatement(Node parent, Node first, Node last) {\n+  private static Node fuseIntoOneStatement(Node parent, Node first, Node last) {\n     // Nothing to fuse if there is only one statement.\n     if (first.getNext() == last) {\n       return first;\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n     options.syntheticBlockStartMarker = \"START\";\n     options.syntheticBlockEndMarker = \"END\";\n     test(options, \"START();END()\", \"{START();{}END()}\");\n+  }\n+\n+  public void testNoFuseIntoSyntheticBlock() {\n+    CompilerOptions options = createCompilerOptions();\n+    options.foldConstants = true;\n+    options.syntheticBlockStartMarker = \"START\";\n+    options.syntheticBlockEndMarker = \"END\";\n+    testSame(options, \"for(;;) { x = 1; {START(); {y = 1} END()} }\");\n   }\n \n   public void testBug5786871() {", "timestamp": 1370389600, "metainfo": ""}