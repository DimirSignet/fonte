{"sha": "211dc0161ae737f59cac22f30b048d56a059d14b", "log": "Fix tests and code in UCE that do unsound optimizations in finally blocks.  Fixes issue 936 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44335607", "commit": "\n--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\n+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n+            if (nextCfgNode == fallThrough && !inFinally(n.getParent(), n)) {\n               removeNode(n);\n             }\n           }\n+      }\n+    }\n+\n+    private boolean inFinally(Node parent, Node child) {\n+      if (parent == null || parent.isFunction()) {\n+        return false;\n+      } else if (NodeUtil.isTryFinallyNode(parent, child)) {\n+        return true;\n+      } else {\n+        return inFinally(parent.getParent(), parent);\n       }\n     }\n \n--- a/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java\n+++ b/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java\n   }\n \n   public void testIssue4177428a() {\n-    test(\n+    testSame(\n         \"f = function() {\\n\" +\n         \"  var action;\\n\" +\n         \"  a: {\\n\" +\n         \"      proto = new Proto\\n\" +\n         \"    } finally {\\n\" +\n         \"      action = proto;\\n\" +\n-        \"      break a\\n\" +  // Remove this...\n+        \"      break a\\n\" +  // Keep this...\n         \"    }\\n\" +\n         \"  }\\n\" +\n-        \"  alert(action)\\n\" + // but not this.\n-        \"};\",\n+        \"  alert(action)\\n\" + // and this.\n+        \"};\");\n+  }\n+\n+  public void testIssue4177428b() {\n+    testSame(\n         \"f = function() {\\n\" +\n         \"  var action;\\n\" +\n         \"  a: {\\n\" +\n         \"    var proto = null;\\n\" +\n         \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n+        \"    try {\\n\" +\n+        \"      proto = new Proto\\n\" +\n+        \"    } finally {\\n\" +\n+        \"      action = proto;\\n\" +\n+        \"      break a\\n\" +  // Keep this...\n+        \"    }\\n\" +\n+        \"    } finally {\\n\" +\n         \"    }\\n\" +\n         \"  }\\n\" +\n-        \"  alert(action)\\n\" +  // but not this.\n-        \"};\"\n-        );\n-  }\n-\n-  public void testIssue4177428b() {\n-    test(\n+        \"  alert(action)\\n\" + // and this.\n+        \"};\");\n+  }\n+\n+  public void testIssue4177428c() {\n+    testSame(\n         \"f = function() {\\n\" +\n         \"  var action;\\n\" +\n         \"  a: {\\n\" +\n         \"    var proto = null;\\n\" +\n         \"    try {\\n\" +\n-        \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n-        \"      break a\\n\" +  // Remove this...\n-        \"    }\\n\" +\n-        \"    } finally {\\n\" +\n+        \"    } finally {\\n\" +\n+        \"    try {\\n\" +\n+        \"      proto = new Proto\\n\" +\n+        \"    } finally {\\n\" +\n+        \"      action = proto;\\n\" +\n+        \"      break a\\n\" +  // Keep this...\n+        \"    }\\n\" +\n         \"    }\\n\" +\n         \"  }\\n\" +\n-        \"  alert(action)\\n\" + // but not this.\n-        \"};\",\n-        \"f = function() {\\n\" +\n-        \"  var action;\\n\" +\n-        \"  a: {\\n\" +\n-        \"    var proto = null;\\n\" +\n-        \"    try {\\n\" +\n-        \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n-        \"      break a\\n\" +  // Remove this...\n-        \"    }\\n\" +\n-        \"    } finally {\\n\" +\n-        \"    }\\n\" +\n-        \"  }\\n\" +\n-        \"  alert(action)\\n\" +  // but not this.\n-        \"};\"\n-        );\n-  }\n-\n-  public void testIssue4177428c() {\n-    test(\n-        \"f = function() {\\n\" +\n-        \"  var action;\\n\" +\n-        \"  a: {\\n\" +\n-        \"    var proto = null;\\n\" +\n-        \"    try {\\n\" +\n-        \"    } finally {\\n\" +\n-        \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n-        \"      break a\\n\" +  // Remove this...\n-        \"    }\\n\" +\n-        \"    }\\n\" +\n-        \"  }\\n\" +\n-        \"  alert(action)\\n\" + // but not this.\n-        \"};\",\n-        \"f = function() {\\n\" +\n-        \"  var action;\\n\" +\n-        \"  a: {\\n\" +\n-        \"    var proto = null;\\n\" +\n-        \"    try {\\n\" +\n-        \"    } finally {\\n\" +\n-        \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n-        \"    }\\n\" +\n-        \"    }\\n\" +\n-        \"  }\\n\" +\n-        \"  alert(action)\\n\" +  // but not this.\n-        \"};\"\n-        );\n+        \"  alert(action)\\n\" + // and this.\n+        \"};\");\n   }\n \n   public void testIssue4177428_continue() {\n-    test(\n+    testSame(\n         \"f = function() {\\n\" +\n         \"  var action;\\n\" +\n         \"  a: do {\\n\" +\n         \"      proto = new Proto\\n\" +\n         \"    } finally {\\n\" +\n         \"      action = proto;\\n\" +\n-        \"      continue a\\n\" +  // Remove this...\n+        \"      continue a\\n\" +  // Keep this...\n         \"    }\\n\" +\n         \"  } while(false)\\n\" +\n-        \"  alert(action)\\n\" + // but not this.\n-        \"};\",\n-        \"f = function() {\\n\" +\n-        \"  var action;\\n\" +\n-        \"  a: do {\\n\" +\n-        \"    var proto = null;\\n\" +\n-        \"    try {\\n\" +\n-        \"      proto = new Proto\\n\" +\n-        \"    } finally {\\n\" +\n-        \"      action = proto;\\n\" +\n-        \"    }\\n\" +\n-        \"  } while (false)\\n\" +\n-        \"  alert(action)\\n\" +\n-        \"};\"\n-        );\n+        \"  alert(action)\\n\" + // and this.\n+        \"};\");\n   }\n \n   public void testIssue4177428_return() {\n         \"      proto = new Proto\\n\" +\n         \"    } finally {\\n\" +\n         \"      action = proto;\\n\" +\n-        \"      return\\n\" +  // Remove this...\n+        \"      return\\n\" +  // Keep this...\n         \"    }\\n\" +\n         \"  }\\n\" +\n-        \"  alert(action)\\n\" + // and this.\n+        \"  alert(action)\\n\" + // and remove this.\n         \"};\",\n         \"f = function() {\\n\" +\n         \"  var action;\\n\" +\n         \"      proto = new Proto\\n\" +\n         \"    } finally {\\n\" +\n         \"      action = proto;\\n\" +\n+        \"      return\\n\" +\n         \"    }\\n\" +\n         \"  }\\n\" +\n         \"};\"\n   public void testForInLoop() {\n     testSame(\"for(var x in y) {}\");\n   }\n+\n+  public void testDontRemoveBreakInTryFinally() throws Exception {\n+    testSame(\"function f() {b:try{throw 9} finally {break b} return 1;}\");\n+  }\n+\n+  public void testDontRemoveBreakInTryFinallySwitch() throws Exception {\n+    testSame(\"function f() {b:try{throw 9} finally {switch(x) {case 1: break b} } return 1;}\");\n+  }\n }", "timestamp": 1364000147, "metainfo": ""}