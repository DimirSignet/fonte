{"sha": "2077c6c5f981f97202097648872a16cefed56baf", "log": "Update to protect against NPEs Tidy up Java version code Add Java version int to supplement float   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Michael Becke\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.10 2003/05/22 21:51:26 scolebourne Exp $\n+ * @version $Id: SystemUtils.java,v 1.11 2003/05/24 12:06:37 scolebourne Exp $\n  */\n public class SystemUtils {\n     \n     public SystemUtils() {\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * The <code>file.separator</code> System Property.\n      * File separator (\"/\" on UNIX).\n      * security access to read this property.\n      */\n     public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");\n-    \n \n     /**\n      * The <code>java.class.path</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");\n-    \n \n     /**\n      * The <code>java.class.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");\n-    \n \n     /**\n      * The <code>java.compiler</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");\n-    \n \n     /**\n      * The <code>java.ext.dirs</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");\n-    \n \n     /**\n      * The <code>java.home</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_HOME = getSystemProperty(\"java.home\");\n-    \n \n     /**\n      * The <code>java.io.tmpdir</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_IO_TMPDIR = getSystemProperty(\"java.io.tmpdir\");\n-    \n \n     /**\n      * The <code>java.library.path</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");\n-    \n \n     /**\n      * The <code>java.specification.name</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");\n-    \n \n     /**\n      * The <code>java.specification.vendor</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.specification.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");\n-    \n \n     /**\n      * The <code>java.vendor</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");\n-    \n \n     /**\n      * The <code>java.vendor.url</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");\n-    \n \n     /**\n      * The <code>java.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VERSION = getSystemProperty(\"java.version\");\n-    \n \n     /**\n      * The <code>java.vm.name</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.name</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.vendor</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.specification.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");\n-    \n \n     /**\n      * The <code>java.vm.vendor</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");\n-    \n \n     /**\n      * The <code>line.separator</code> System Property.\n      * security access to read this property.\n      */\n     public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");\n-    \n \n     /**\n      * The <code>os.arch</code> System Property.\n      * security access to read this property.\n      */\n     public static final String OS_ARCH = getSystemProperty(\"os.arch\");\n-    \n \n     /**\n      * The <code>os.name</code> System Property.\n      * security access to read this property.\n      */\n     public static final String OS_NAME = getSystemProperty(\"os.name\");\n-    \n \n     /**\n      * The <code>os.version</code> System Property.\n      * security access to read this property.\n      */\n     public static final String OS_VERSION = getSystemProperty(\"os.version\");\n-    \n \n     /**\n      * The <code>path.separator</code> System Property.\n      * security access to read this property.\n      */\n     public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");\n-    \n \n     /**\n      * The <code>user.dir</code> System Property.\n      * security access to read this property.\n      */\n     public static final String USER_DIR = getSystemProperty(\"user.dir\");\n-    \n \n     /**\n      * The <code>user.home</code> System Property.\n      * security access to read this property.\n      */\n     public static final String USER_HOME = getSystemProperty(\"user.home\");\n-    \n \n     /**\n      * The <code>user.name</code> System Property.\n      * security access to read this property.\n      */\n     public static final String USER_NAME = getSystemProperty(\"user.name\");\n-    \n-    \n-    /** \n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Is <code>true</code> if this is Java version 1.1 (also 1.1.x versions).\n-     */\n-    public static final boolean IS_JAVA_1_1 = JAVA_VERSION.startsWith(\"1.1.\");\n-\n-    /** \n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");\n+\n+    /**\n      * Is <code>true</code> if this is Java version 1.2 (also 1.2.x versions).\n-     */\n-    public static final boolean IS_JAVA_1_2 = JAVA_VERSION.startsWith(\"1.2.\");\n-\n-    /** \n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");\n+\n+    /**\n      * Is <code>true</code> if this is Java version 1.3 (also 1.3.x versions).\n-     */\n-    public static final boolean IS_JAVA_1_3 = JAVA_VERSION.startsWith(\"1.3.\");\n-\n-    /** \n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");\n+\n+    /**\n      * Is <code>true</code> if this is Java version 1.4 (also 1.4.x versions).\n-     */\n-    public static final boolean IS_JAVA_1_4 = JAVA_VERSION.startsWith(\"1.4.\");\n-\n-    /** \n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");\n+\n+    /**\n      * Is <code>true</code> if this is Java version 1.5 (also 1.5.x versions).\n-     */\n-    public static final boolean IS_JAVA_1_5 = JAVA_VERSION.startsWith(\"1.5.\");\n-\n-\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the Java version as a <code>float</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();\n+\n+    /**\n+     * Gets the Java version as an <code>int</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();\n+\n+    //-----------------------------------------------------------------------\n     /**\n      * Gets a System property, defaulting to the given value if the property \n      * cannot be read.\n             \n         } catch (SecurityException ex) {\n             // we are not allowed to look at this property\n+            System.err.println(\n+                \"SecurityException thrown when reading system property '\" + property \n+                + \"' - property value will default to null\"\n+            );\n             return null;\n         }\n     }    \n \n+    /**\n+     * Decides if the java version matches.\n+     * \n+     * @param versionPrefix  the prefix for the java version\n+     * @return true if matches, or false if not or can't determine\n+     */\n+    private static boolean getJavaVersionMatches(String versionPrefix) {\n+        if (JAVA_VERSION == null) {\n+            return false;\n+        }\n+        return JAVA_VERSION.startsWith(versionPrefix);\n+    }    \n+\n+    /**\n+     * <p>Get the Java version number as a <code>float</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 1.31f for JDK 1.3.1\n+     */\n+    private static float getJavaVersionAsFloat() {\n+        if (JAVA_VERSION == null) {\n+            return 0f;\n+        }\n+        String str = JAVA_VERSION.substring(0, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        }\n+        return Float.parseFloat(str);\n+    }\n+    \n+    /**\n+     * <p>Get the Java version number as an <code>int</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 131 for JDK 1.3.1\n+     */\n+    private static int getJavaVersionAsInt() {\n+        if (JAVA_VERSION == null) {\n+            return 0;\n+        }\n+        String str = JAVA_VERSION.substring(0, 1);\n+        str = str + JAVA_VERSION.substring(2, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        } else {\n+            str = str + \"0\";\n+        }\n+        return Integer.parseInt(str);\n+    }\n+    \n+    //-----------------------------------------------------------------------    \n     // Parsing operating system may stay here, or it may be moved somewhere else entirely\n //    /** True iff this is running on Windows */\n //    public static final boolean IS_WINDOWS;\n //        }\n //    }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Get the Java version number as a <code>float</code>.</p>\n      *\n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * \n+     * @deprecated Use JAVA_VERSION_FLOAT instead.\n+     *             Will be removed in Commons Lang 3.0.\n      * @return the version, for example 1.31f for JDK 1.3.1\n      */\n     public static float getJavaVersion() {\n-        String str = JAVA_VERSION.substring(0, 3);\n-        if (JAVA_VERSION.length() >= 5) {\n-            str = str + JAVA_VERSION.substring(4, 5);\n-        }\n-        return Float.parseFloat(str);\n+        return JAVA_VERSION_FLOAT;\n     }\n     \n     /**\n-     * <p>Is the Java version at the the requested version.</p>\n+     * <p>Is the Java version at least the requested version.</p>\n      *\n      * <p>Example input:</p>\n      * <ul>\n-     *  <li><code>1.2f</code> for JDK 1.2\n-     *  <li><code>1.31f</code> for JDK 1.3.1\n+     *  <li><code>1.2f</code> to test for JDK 1.2\n+     *  <li><code>1.31f</code> to test for JDK 1.3.1\n      * </ul>\n      * \n      * @param requiredVersion  the required version, for example 1.31f\n      *  than the required version\n      */\n     public static boolean isJavaVersionAtLeast(float requiredVersion) {\n-        return (getJavaVersion() >= requiredVersion);\n+        return (JAVA_VERSION_FLOAT >= requiredVersion);\n+    }\n+    \n+    /**\n+     * <p>Is the Java version at least the requested version.</p>\n+     *\n+     * <p>Example input:</p>\n+     * <ul>\n+     *  <li><code>120</code> to test for JDK 1.2 or greater\n+     *  <li><code>131</code> to test for JDK 1.3.1 or greater\n+     * </ul>\n+     * \n+     * @param requiredVersion  the required version, for example 131\n+     * @return <code>true</code> if the actual version is equal or greater\n+     *  than the required version\n+     */\n+    public static boolean isJavaVersionAtLeast(int requiredVersion) {\n+        return (JAVA_VERSION_INT >= requiredVersion);\n     }\n     \n }", "timestamp": 1053777997, "metainfo": ""}