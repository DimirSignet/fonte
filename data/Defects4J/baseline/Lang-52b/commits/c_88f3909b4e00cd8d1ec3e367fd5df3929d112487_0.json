{"sha": "88f3909b4e00cd8d1ec3e367fd5df3929d112487", "log": "added tests for rounding and truncating to AM_PM; added additional test of rounding to SEMI_MONTH   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n     DateFormat dateParser = null;\n     DateFormat dateTimeParser = null;\n     DateFormat timeZoneDateParser = null;\n+    Date dateAmPm1 = null;\n+    Date dateAmPm2 = null;\n+    Date dateAmPm3 = null;\n+    Date dateAmPm4 = null;\n+    Date date0 = null;\n     Date date1 = null;\n     Date date2 = null;\n     Date date3 = null;\n     Date date6 = null;\n     Date date7 = null;\n     Date date8 = null;\n+    Calendar calAmPm1 = null;\n+    Calendar calAmPm2 = null;\n+    Calendar calAmPm3 = null;\n+    Calendar calAmPm4 = null;\n     Calendar cal1 = null;\n     Calendar cal2 = null;\n     Calendar cal3 = null;\n         dateParser = new SimpleDateFormat(\"MMM dd, yyyy\", Locale.ENGLISH);\n         dateTimeParser = new SimpleDateFormat(\"MMM dd, yyyy H:mm:ss.SSS\", Locale.ENGLISH);\n \n+        dateAmPm1 = dateTimeParser.parse(\"February 3, 2002 01:10:00.000\");\n+        dateAmPm2 = dateTimeParser.parse(\"February 3, 2002 11:10:00.000\");\n+        dateAmPm3 = dateTimeParser.parse(\"February 3, 2002 13:10:00.000\");\n+        dateAmPm4 = dateTimeParser.parse(\"February 3, 2002 19:10:00.000\");\n+        date0 = dateTimeParser.parse(\"February 3, 2002 12:34:56.789\");\n         date1 = dateTimeParser.parse(\"February 12, 2002 12:34:56.789\");\n         date2 = dateTimeParser.parse(\"November 18, 2001 1:23:11.321\");\n         defaultZone = TimeZone.getDefault();\n         date8 = dateTimeParser.parse(\"October 26, 2003 05:30:45.000\");\n         dateTimeParser.setTimeZone(defaultZone);\n         TimeZone.setDefault(defaultZone);\n+        calAmPm1 = Calendar.getInstance();\n+        calAmPm1.setTime(dateAmPm1);\n+        calAmPm2 = Calendar.getInstance();\n+        calAmPm2.setTime(dateAmPm2);\n+        calAmPm3 = Calendar.getInstance();\n+        calAmPm3.setTime(dateAmPm3);\n+        calAmPm4 = Calendar.getInstance();\n+        calAmPm4.setTime(dateAmPm4);\n         cal1 = Calendar.getInstance();\n         cal1.setTime(date1);\n         cal2 = Calendar.getInstance();\n         assertEquals(\"round month-2 failed\",\n                 dateParser.parse(\"December 1, 2001\"),\n                 DateUtils.round(date2, Calendar.MONTH));\n+        assertEquals(\"round semimonth-0 failed\",\n+                dateParser.parse(\"February 1, 2002\"),\n+                DateUtils.round(date0, DateUtils.SEMI_MONTH));\n         assertEquals(\"round semimonth-1 failed\",\n                 dateParser.parse(\"February 16, 2002\"),\n                 DateUtils.round(date1, DateUtils.SEMI_MONTH));\n         assertEquals(\"round second-2 failed\",\n                 dateTimeParser.parse(\"November 18, 2001 1:23:11.000\"),\n                 DateUtils.round(date2, Calendar.SECOND));\n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.round(dateAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 00:00:00.000\"),\n+                DateUtils.round(dateAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.round(dateAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 12:00:00.000\"),\n+                DateUtils.round(dateAmPm4, Calendar.AM_PM));\n \n         // tests for public static Date round(Object date, int field)\n         assertEquals(\"round year-1 failed\",\n         assertEquals(\"round calendar second-2 failed\",\n                 dateTimeParser.parse(\"November 18, 2001 1:23:11.000\"),\n                 DateUtils.round((Object) cal2, Calendar.SECOND));\n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.round((Object) dateAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 00:00:00.000\"),\n+                DateUtils.round((Object) dateAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.round((Object) dateAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 12:00:00.000\"),\n+                DateUtils.round((Object) dateAmPm4, Calendar.AM_PM));\n \n         try {\n             DateUtils.round((Date) null, Calendar.SECOND);\n             DateUtils.round(date1, -9999);\n             fail();\n         } catch(IllegalArgumentException ex) {}\n+\n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.round((Object) calAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 00:00:00.000\"),\n+                DateUtils.round((Object) calAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.round((Object) calAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 4, 2002 12:00:00.000\"),\n+                DateUtils.round((Object) calAmPm4, Calendar.AM_PM));\n         \n         // Fix for http://issues.apache.org/bugzilla/show_bug.cgi?id=25560\n         // Test rounding across the beginning of daylight saving time\n         assertEquals(\"truncate second-2 failed\",\n                 dateTimeParser.parse(\"November 18, 2001 1:23:11.000\"),\n                 DateUtils.truncate(date2, Calendar.SECOND));\n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate(dateAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate(dateAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate(dateAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate(dateAmPm4, Calendar.AM_PM));\n \n         // tests public static Date truncate(Object date, int field)\n         assertEquals(\"truncate year-1 failed\",\n         assertEquals(\"truncate second-2 failed\",\n                 dateTimeParser.parse(\"November 18, 2001 1:23:11.000\"),\n                 DateUtils.truncate((Object) date2, Calendar.SECOND));\n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate((Object) dateAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate((Object) dateAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate((Object) dateAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate((Object) dateAmPm4, Calendar.AM_PM));\n         \n         assertEquals(\"truncate calendar second-1 failed\",\n                 dateTimeParser.parse(\"February 12, 2002 12:34:56.000\"),\n         assertEquals(\"truncate calendar second-2 failed\",\n                 dateTimeParser.parse(\"November 18, 2001 1:23:11.000\"),\n                 DateUtils.truncate((Object) cal2, Calendar.SECOND));\n+        \n+        assertEquals(\"truncate ampm-1 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate((Object) calAmPm1, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-2 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 00:00:00.000\"),\n+                DateUtils.truncate((Object) calAmPm2, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-3 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate((Object) calAmPm3, Calendar.AM_PM));\n+        assertEquals(\"truncate ampm-4 failed\",\n+                dateTimeParser.parse(\"February 3, 2002 12:00:00.000\"),\n+                DateUtils.truncate((Object) calAmPm4, Calendar.AM_PM));\n         \n         try {\n             DateUtils.truncate((Date) null, Calendar.SECOND);", "timestamp": 1089590931, "metainfo": ""}