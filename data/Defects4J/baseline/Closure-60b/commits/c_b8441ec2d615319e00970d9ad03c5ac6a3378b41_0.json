{"sha": "b8441ec2d615319e00970d9ad03c5ac6a3378b41", "log": "Automated g4 rollback.  *** Reason for rollback ***  gmail is complaining  *** Original change description ***  Namespaces created by jscompiler should be @const. This helps type-checking a lot, because it doesn't have to worry about someone re-assigning the namespace. If you want a namespace to be non-const, you can just declare it explicitly.   Revision created by MOE tool push_codebase. MOE_MIGRATION=1842   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n           compiler.getCodingConvention(),\n           alias, ref.node.getAncestor(2), n.fullName());\n \n-      JSDocInfo info = ref.node.getParent().getJSDocInfo();\n-      if (ref.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME) ||\n-          (info != null && info.isConstant())) {\n+      if (ref.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)) {\n         nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n       }\n \n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n import com.google.common.collect.Sets;\n import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;\n import com.google.javascript.rhino.JSDocInfo;\n-import com.google.javascript.rhino.JSDocInfoBuilder;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n \n       if (compiler.getCodingConvention().isConstant(namespace)) {\n         name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n       }\n-      name.setJSDocInfo(createConstantJsDoc());\n \n       Preconditions.checkState(isNamespacePlaceholder(decl));\n       setSourceInfo(decl);\n                   namespace),\n               createNamespaceLiteral()));\n       decl.putBooleanProp(Node.IS_NAMESPACE, true);\n-      decl.getFirstChild().setJSDocInfo(createConstantJsDoc());\n       Preconditions.checkState(isNamespacePlaceholder(decl));\n       setSourceInfo(decl);\n       return decl;\n-    }\n-\n-    private JSDocInfo createConstantJsDoc() {\n-      JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-      builder.recordConstancy();\n-      return builder.build(null);\n     }\n \n     /**", "timestamp": 1305144270, "metainfo": ""}