{"sha": "f122fa66907a01be53fde906440487ebd6199743", "log": "BEANUTILS-381 getMatchingAccessibleMethod does not correctly handle inheritance and method overloading - thanks to Todd Nine for the patch  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java\n             return getPrimitivePromotionCost(srcClass, destClass);\n         }\n         float cost = 0.0f;\n-        while (destClass != null && !destClass.equals(srcClass)) {\n+        while (srcClass != null && !destClass.equals(srcClass)) {\n             if (destClass.isInterface() && ClassUtils.isAssignable(srcClass, destClass)) {\n                 // slight penalty for interface match.\n                 // we still want an exact match to override an interface match,\n                 break;\n             }\n             cost++;\n-            destClass = destClass.getSuperclass();\n+            srcClass = srcClass.getSuperclass();\n         }\n         /*\n          * If the destination class is null, we've travelled all the way up to\n          * an Object match. We'll penalize this by adding 1.5 to the cost.\n          */\n-        if (destClass == null) {\n+        if (srcClass == null) {\n             cost += 1.5f;\n         }\n         return cost;\n--- a/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java\n                 singletonArray(Double.class), singletonArray(Double.TYPE));\n         expectMatchingAccessibleMethodParameterTypes(TestBean.class, \"foo\",\n                 singletonArray(Double.TYPE), singletonArray(Double.TYPE));\n+        expectMatchingAccessibleMethodParameterTypes(TestBean.class, \"foo\",\n+                singletonArray(Double.TYPE), singletonArray(Double.TYPE));\n+        expectMatchingAccessibleMethodParameterTypes(InheritanceBean.class, \"testOne\",\n+                singletonArray(ParentObject.class), singletonArray(ParentObject.class));\n+        expectMatchingAccessibleMethodParameterTypes(InheritanceBean.class, \"testOne\",\n+                singletonArray(ChildObject.class), singletonArray(ParentObject.class));\n+        expectMatchingAccessibleMethodParameterTypes(InheritanceBean.class, \"testTwo\",\n+                singletonArray(ParentObject.class), singletonArray(GrandParentObject.class));\n+        expectMatchingAccessibleMethodParameterTypes(InheritanceBean.class, \"testTwo\",\n+                singletonArray(ChildObject.class), singletonArray(ChildInterface.class));\n     }\n \n     private void expectMatchingAccessibleMethodParameterTypes(Class<?> cls,\n         return result;\n     }\n \n+    public static class InheritanceBean {\n+        public void testOne(Object obj) {}\n+        public void testOne(GrandParentObject obj) {}\n+        public void testOne(ParentObject obj) {}\n+        public void testTwo(Object obj) {}\n+        public void testTwo(GrandParentObject obj) {}\n+        public void testTwo(ChildInterface obj) {}\n+    }\n+    interface ChildInterface {}\n+    public static class GrandParentObject {}\n+    public static class ParentObject extends GrandParentObject {}\n+    public static class ChildObject extends ParentObject implements ChildInterface {}\n+    \n }", "timestamp": 1290377344, "metainfo": ""}