{"sha": "8da5fb28a764eee26c76a5018c293f224017887b", "log": "Escaping supplementary chars seems good for NumericEntityEscaper. LANG-617  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java\n             }\n         }\n \n-        // TODO: if (codepoint > 0xffff) ?\n         out.write(\"&#\");\n         out.write(Integer.toString(codepoint, 10));\n         out.write(';');\n--- a/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityEscaperTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityEscaperTest.java\n         String result = nee.translate(input);\n         assertEquals(\"Failed to escape numeric entities via the above method\", \"ADF&#71;&#90;\", result);\n     }\n+\n+    // See LANG-617\n+    public void testSupplementary() {\n+        NumericEntityEscaper nee = new NumericEntityEscaper();\n+        String input = \"\\uD803\\uDC22\";\n+        String expected = \"&#68642;\";\n+\n+        String result = nee.translate(input);\n+        assertEquals(\"Failed to escape numeric entities supplementary characters\", expected, result);\n+\n+    }\n+\n }", "timestamp": 1277187569, "metainfo": ""}