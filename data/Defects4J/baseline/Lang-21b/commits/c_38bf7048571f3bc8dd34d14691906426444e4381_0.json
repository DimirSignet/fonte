{"sha": "38bf7048571f3bc8dd34d14691906426444e4381", "log": "https://issues.apache.org/jira/browse/LANG-607 StringUtils.containsAny methods incorrectly matches Unicode 2.0+ supplementary characters.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n-        if (cs == null || cs.length() == 0 || searchChars == null || searchChars.length == 0) {\n-            return false;\n-        }\n-        for (int i = 0; i < cs.length(); i++) {\n-            char ch = cs.charAt(i);\n-            for (int j = 0; j < searchChars.length; j++) {\n-                if (searchChars[j] == ch) {\n-                    return true;\n-                }\n-            }\n-        }\n-        return false;\n-    }\n+\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n+\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tint csLength = cs.length();\n+\t\tint searchLength = searchChars.length;\n+\t\tint csLastIndex = csLength - 1;\n+\t\tint searchLastIndex = searchLength - 1;\n+\t\tfor (int i = 0; i < csLength; i++) {\n+\t\t\tchar ch = cs.charAt(i);\n+\t\t\tfor (int j = 0; j < searchLength; j++) {\n+\t\t\t\tif (searchChars[j] == ch) {\n+\t\t\t\t\tif (i < csLastIndex && j < searchLastIndex && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n+\t\t\t\t\t\t// ch is a supplementary character\n+\t\t\t\t\t\tif (searchChars[j + 1] == cs.charAt(i + 1)) {\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n \n     /**\n      * <p>\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java\n     private static final String BAR = \"bar\";\n     private static final String FOOBAR = \"foobar\";\n     private static final String[] FOOBAR_SUB_ARRAY = new String[] {\"ob\", \"ba\"};\n-\n+\t\n+    /**\n+\t * Supplementary character U+20000\n+\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n+\t */\n+\tprivate static final String CharU20000 = \"\\uD840\\uDC00\";\n+\n+\t/**\n+\t * Supplementary character U+20001\n+\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n+\t */\n+\tprivate static final String CharU20001 = \"\\uD840\\uDC01\";\n+\t\n     public StringUtilsEqualsIndexOfTest(String name) {\n         super(name);\n     }\n         assertEquals(true, StringUtils.containsNone(str3, chars3));\n     }\n \n+\t/**\n+\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n+\t */\n+\tpublic void testContainsStringWithSupplementaryChars() {\n+\t\tassertEquals(true, StringUtils.contains(CharU20000 + CharU20001, CharU20000));\n+\t\tassertEquals(true, StringUtils.contains(CharU20000 + CharU20001, CharU20001));\n+\t\tassertEquals(true, StringUtils.contains(CharU20000, CharU20000));\n+\t\tassertEquals(false, StringUtils.contains(CharU20000, CharU20001));\n+\t}\n+\n+\t/**\n+\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n+\t */\n+\tpublic void testContainsAnyStringWithSupplementaryChars() {\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000));\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001));\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000));\n+\t\t// Sanity check:\n+\t\tassertEquals(-1, CharU20000.indexOf(CharU20001));\n+\t\tassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n+\t\tassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n+\t\t// Test:\n+\t\tassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001));\n+\t\tassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000));\n+\t}\n+\t\n+\t/**\n+\t * See http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\n+\t */\n+\tpublic void testContainsAnyCharArrayWithSupplementaryChars() {\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000.toCharArray()));\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001.toCharArray()));\n+\t\tassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000.toCharArray()));\n+\t\t// Sanity check:\n+\t\tassertEquals(-1, CharU20000.indexOf(CharU20001));\n+\t\tassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\n+\t\tassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n+\t\t// Test:\n+\t\tassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001.toCharArray()));\n+\t\tassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000.toCharArray()));\n+\t}\n }", "timestamp": 1268528043, "metainfo": ""}