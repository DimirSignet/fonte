{"sha": "a605843ce6aa0df44a28130ef543c6c0a5baa663", "log": "Adding NumberUtils.max(byte[]) and NumberUtils.min(byte[]) as noted in LANG-289  ", "commit": "\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n         return min;\n     }\n \n+    /**\n+     * <p>Returns the minimum value in an array.</p>\n+     * \n+     * @param array  an array, must not be null or empty\n+     * @return the minimum value in the array\n+     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n+     * @throws IllegalArgumentException if <code>array</code> is empty\n+     */\n+    public static byte min(byte[] array) {\n+        // Validates input\n+        if (array == null) {\n+            throw new IllegalArgumentException(\"The Array must not be null\");\n+        } else if (array.length == 0) {\n+            throw new IllegalArgumentException(\"Array cannot be empty.\");\n+        }\n+    \n+        // Finds and returns min\n+        byte min = array[0];\n+        for (int i = 1; i < array.length; i++) {\n+            if (array[i] < min) {\n+                min = array[i];\n+            }\n+        }\n+    \n+        return min;\n+    }\n+\n      /**\n      * <p>Returns the minimum value in an array.</p>\n      * \n     \n         // Finds and returns max\n         short max = array[0];\n+        for (int i = 1; i < array.length; i++) {\n+            if (array[i] > max) {\n+                max = array[i];\n+            }\n+        }\n+    \n+        return max;\n+    }\n+\n+    /**\n+     * <p>Returns the maximum value in an array.</p>\n+     * \n+     * @param array  an array, must not be null or empty\n+     * @return the minimum value in the array\n+     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n+     * @throws IllegalArgumentException if <code>array</code> is empty\n+     */\n+    public static byte max(byte[] array) {\n+        // Validates input\n+        if (array == null) {\n+            throw new IllegalArgumentException(\"The Array must not be null\");\n+        } else if (array.length == 0) {\n+            throw new IllegalArgumentException(\"Array cannot be empty.\");\n+        }\n+    \n+        // Finds and returns max\n+        byte max = array[0];\n         for (int i = 1; i < array.length; i++) {\n             if (array[i] > max) {\n                 max = array[i];\n--- a/src/test/org/apache/commons/lang/math/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/math/NumberUtilsTest.java\n         assertEquals(-10, NumberUtils.min(new short[] { -5, 0, -10, 5, 10 }));\n     }\n \n+    public void testMinByte() {\n+        final byte[] b = null;\n+        try {\n+            NumberUtils.min(b);\n+            fail(\"No exception was thrown for null input.\");\n+        } catch (IllegalArgumentException ex) {}\n+\n+        try {\n+            NumberUtils.min(new byte[0]);\n+            fail(\"No exception was thrown for empty input.\");\n+        } catch (IllegalArgumentException ex) {}\n+\n+        assertEquals(\n+            \"min(byte[]) failed for array length 1\",\n+            5,\n+            NumberUtils.min(new byte[] { 5 }));\n+\n+        assertEquals(\n+            \"min(byte[]) failed for array length 2\",\n+            6,\n+            NumberUtils.min(new byte[] { 6, 9 }));\n+\n+        assertEquals(-10, NumberUtils.min(new byte[] { -10, -5, 0, 5, 10 }));\n+        assertEquals(-10, NumberUtils.min(new byte[] { -5, 0, -10, 5, 10 }));\n+    }\n+\n     public void testMinDouble() {\n         final double[] d = null;\n         try {\n             NumberUtils.max(new short[] { -10, -5, 0, 5, 10 }));\n         assertEquals(10, NumberUtils.max(new short[] { -10, -5, 0, 5, 10 }));\n         assertEquals(10, NumberUtils.max(new short[] { -5, 0, 10, 5, -10 }));\n+    }\n+\n+    public void testMaxByte() {\n+        final byte[] b = null;\n+        try {\n+            NumberUtils.max(b);\n+            fail(\"No exception was thrown for null input.\");\n+        } catch (IllegalArgumentException ex) {}\n+\n+        try {\n+            NumberUtils.max(new byte[0]);\n+            fail(\"No exception was thrown for empty input.\");\n+        } catch (IllegalArgumentException ex) {}\n+\n+        assertEquals(\n+            \"max(byte[]) failed for array length 1\",\n+            5,\n+            NumberUtils.max(new byte[] { 5 }));\n+\n+        assertEquals(\n+            \"max(byte[]) failed for array length 2\",\n+            9,\n+            NumberUtils.max(new byte[] { 6, 9 }));\n+\n+        assertEquals(\n+            \"max(byte[]) failed for array length 5\",\n+            10,\n+            NumberUtils.max(new byte[] { -10, -5, 0, 5, 10 }));\n+        assertEquals(10, NumberUtils.max(new byte[] { -10, -5, 0, 5, 10 }));\n+        assertEquals(10, NumberUtils.max(new byte[] { -5, 0, 10, 5, -10 }));\n     }\n \n     public void testMaxDouble() {", "timestamp": 1161723068, "metainfo": ""}