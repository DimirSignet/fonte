{"sha": "14cbf3e77752655d91400faa0413baaf839a936a", "log": "Added javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java\n \n     public static enum OPTION { escapePlus }\n \n-    // TODO: Create an OptionsSet class to hide some of the conditional logic below\n+    // TODO?: Create an OptionsSet class to hide some of the conditional logic below\n     private final EnumSet<OPTION> options;\n \n+    /**\n+     * Create a UnicodeUnescaper.\n+     *\n+     * The constructor takes a list of options, only one of which is currently \n+     * available (whether to expect a plus sign after the 'u'). \n+     *\n+     * For example, to handle \"\\\\u+0047\":\n+     *    new UnicodeUnescaper(UnicodeUnescaper.OPTION.escapePlus)\n+     *\n+     * @param OPTION... options to apply to this unescaper\n+     */\n     public UnicodeUnescaper(OPTION... options) {\n         if(options.length > 0) {\n             this.options = EnumSet.copyOf(Arrays.asList(options));\n         }\n     }\n \n-    public boolean isSet(OPTION opt) { \n+    /**\n+     * Whether the passed in option is currently set.\n+     *\n+     * @param OPTION option to check state of\n+     * @return whether the option is set\n+     */\n+    public boolean isSet(OPTION option) { \n         return (options == null) ? false : options.contains(opt);\n     }\n ", "timestamp": 1296374922, "metainfo": ""}