{"sha": "d23063145ca1cefd48d56d1997b30f877cd99ee5", "log": "add a meatier test  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n  * The ASF licenses this file to You under the Apache License, Version 2.0\n  * (the \"License\"); you may not use this file except in compliance with\n  * the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         assertTrue(AnnotationUtils.equals(generated2, generated));\n     }\n \n-    @Test(timeout = 666)\n+    @Test(timeout = 666000)\n     public void testHashCode() throws Exception {\n-        final Test testAnno = getClass().getDeclaredMethod(\"testHashCode\")\n-                .getAnnotation(Test.class);\n-        assertEquals(testAnno.hashCode(), AnnotationUtils.hashCode(testAnno));\n-    }\n-\n-    @Test(timeout = 666)\n+        final Test test = getClass().getDeclaredMethod(\"testHashCode\").getAnnotation(Test.class);\n+        assertEquals(test.hashCode(), AnnotationUtils.hashCode(test));\n+        final TestAnnotation testAnnotation = field1.getAnnotation(TestAnnotation.class);\n+        assertEquals(testAnnotation.hashCode(), AnnotationUtils.hashCode(testAnnotation));\n+    }\n+\n+    @Test(timeout = 666000)\n     public void testToString() throws Exception {\n         final Test testAnno = getClass().getDeclaredMethod(\"testToString\")\n                 .getAnnotation(Test.class);\n         assertTrue(toString.startsWith(\"@org.junit.Test(\"));\n         assertTrue(toString.endsWith(\")\"));\n         assertTrue(toString.contains(\"expected=class org.junit.Test$None\"));\n-        assertTrue(toString.contains(\"timeout=666\"));\n+        assertTrue(toString.contains(\"timeout=666000\"));\n         assertTrue(toString.contains(\", \"));\n     }\n }", "timestamp": 1285081054, "metainfo": ""}