{"sha": "6ab2432526883ad51deee354c87ed7fda07e0c37", "log": "add reverse equality test assertions  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n     @Test\n     public void testEquivalence() {\n         assertTrue(AnnotationUtils.equals(field1.getAnnotation(TestAnnotation.class), field2.getAnnotation(TestAnnotation.class)));\n+        assertTrue(AnnotationUtils.equals(field2.getAnnotation(TestAnnotation.class), field1.getAnnotation(TestAnnotation.class)));\n     }\n \n     @Test\n     @Test\n     public void testNonEquivalentAnnotationsOfSameType() {\n         assertFalse(AnnotationUtils.equals(field1.getAnnotation(TestAnnotation.class), field3.getAnnotation(TestAnnotation.class)));\n+        assertFalse(AnnotationUtils.equals(field3.getAnnotation(TestAnnotation.class), field1.getAnnotation(TestAnnotation.class)));\n     }\n \n     @Test\n     public void testAnnotationsOfDifferingTypes() {\n         assertFalse(AnnotationUtils.equals(field1.getAnnotation(TestAnnotation.class), field4.getAnnotation(NestAnnotation.class)));\n+        assertFalse(AnnotationUtils.equals(field4.getAnnotation(NestAnnotation.class), field1.getAnnotation(TestAnnotation.class)));\n     }\n \n     @Test\n     public void testOneArgNull() {\n         assertFalse(AnnotationUtils.equals(field1.getAnnotation(TestAnnotation.class), null));\n+        assertFalse(AnnotationUtils.equals(null, field1.getAnnotation(TestAnnotation.class)));\n     }\n \n     @Test", "timestamp": 1284416403, "metainfo": ""}