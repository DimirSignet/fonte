{"sha": "9645e06f54dd5141eee6529a9c04da4a6792ce5b", "log": "Adding javadoc for HTML3 methods  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringEscapeUtils.java\n         private static final char CSV_DELIMITER = ',';\n         private static final char CSV_QUOTE = '\"';\n         private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);\n-        private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};\n+        private static final char[] CSV_SEARCH_CHARS = \n+            new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};\n \n         // TODO: Replace with a RegexTranslator. That should consume the number of characters the regex uses up?\n         @Override\n         private static final char CSV_DELIMITER = ',';\n         private static final char CSV_QUOTE = '\"';\n         private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);\n-        private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};\n+        private static final char[] CSV_SEARCH_CHARS = \n+            new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};\n \n         // TODO: Replace with a RegexTranslator. That should consume the number of characters the regex uses up?\n         @Override\n         return ESCAPE_HTML4.translate(input);\n     }\n \n+    /**\n+     * <p>Escapes the characters in a <code>String</code> using HTML entities.</p>\n+     * <p>Supports only the HTML 3.0 entities. </p>\n+     *\n+     * @param input  the <code>String</code> to escape, may be null\n+     * @return a new escaped <code>String</code>, <code>null</code> if null string input\n+     * \n+     */\n     public static final String escapeHtml3(String input) {\n         return ESCAPE_HTML3.translate(input);\n     }\n         return UNESCAPE_HTML4.translate(input);\n     }\n \n+    /**\n+     * <p>Unescapes a string containing entity escapes to a string\n+     * containing the actual Unicode characters corresponding to the\n+     * escapes. Supports only HTML 3.0 entities.</p>\n+     *\n+     * @param input  the <code>String</code> to unescape, may be null\n+     * @return a new unescaped <code>String</code>, <code>null</code> if null string input\n+     */\n     public static final String unescapeHtml3(String input) {\n         return UNESCAPE_HTML3.translate(input);\n     }", "timestamp": 1296373116, "metainfo": ""}