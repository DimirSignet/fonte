{"sha": "d624f175e139df8fbd85603efb6b73dc9b77a714", "log": "[Bug 36059] [lang] Wrong length check in StrTokenizer.StringMatcher. From Oliver Heger <oliver.heger@t-online.de>.    ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrTokenizer.java\n+++ b/src/java/org/apache/commons/lang/text/StrTokenizer.java\n          */\n         public int isMatch(char[] text, int textLen, int pos) {\n             int len = chars.length;\n-            if (pos + len >= textLen) {\n+            if (pos + len > textLen) {\n                 return 0;\n             }\n             for (int i = 0; i < chars.length; i++, pos++) {\n--- a/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n         tok.reset(\"f g\".toCharArray());\n         assertEquals(\"f\", tok.next());\n         assertEquals(\"g\", tok.next());\n+    }\n+    \n+    public void testStringMatcher() {\n+        // build test fixture\n+        char[] data = new char[26];\n+        for(int i = 0; i < data.length; i++) {\n+            data[i] = (char) (i + 'a');\n+        }        \n+        // perform tests\n+        StrTokenizer.Matcher matcher = new StrTokenizer.StringMatcher(\"z\");\n+        for(int i = 0; i < data.length - 1; i++) {\n+            assertEquals(0, matcher.isMatch(data, data.length, i));\n+        }\n+        assertEquals(1, matcher.isMatch(data, data.length, data.length - 1));\n+        // test bad pos argument.\n+        assertEquals(0, matcher.isMatch(data, data.length, data.length +100));\n     }\n \n     public void testTSV() {", "timestamp": 1123354437, "metainfo": ""}