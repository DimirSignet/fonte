{"sha": "eb3e2ae1f3734986a9f0225c661888baac3cb13b", "log": "Fix for LANG-477 OutOfMemory with custom format registry and a pattern containing single quotes - thanks to Duncan Eley  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {\n+            next(pos);\n             return appendTo == null ? null : appendTo.append(QUOTE);\n         }\n         int lastHold = start;\n--- a/src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java\n+++ b/src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java\n         assertEquals(\"Lower: foo Upper: BAR\", emf.format(new Object[] {\"FOO\", \"BAR\"}));\n         assertEquals(\"Lower: foo Upper: BAR\", emf.format(new Object[] {\"FOO\", \"bar\"}));\n         assertEquals(\"Lower: foo Upper: BAR\", emf.format(new Object[] {\"foo\", \"BAR\"}));\n+    }\n+\n+    /**\n+     * Test Bug LANG-477 - out of memory error with escaped quote\n+     */\n+    public void testEscapedQuote_LANG_477() {\n+        String pattern = \"it''s a {0,lower} 'test'!\";\n+        ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);\n+        assertEquals(\"it's a dummy test!\", emf.format(new Object[] {\"DUMMY\"}));\n     }\n \n     /**", "timestamp": 1231538714, "metainfo": ""}