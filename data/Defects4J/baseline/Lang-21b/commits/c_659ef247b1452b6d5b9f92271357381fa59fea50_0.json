{"sha": "659ef247b1452b6d5b9f92271357381fa59fea50", "log": "Applying Sebb's test and fix from LANG-368 - fixing it so that FastDateFormat getDateInstance and getDateTimeInstance continue to work if Locale.getDefault() changes  ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java\n         if (timeZone != null) {\n             key = new Pair(key, timeZone);\n         }\n-        if (locale != null) {\n-            key = new Pair(key, locale);\n-        }\n+\n+        if (locale == null) {\n+            locale = Locale.getDefault();\n+        }\n+\n+        key = new Pair(key, locale);\n \n         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);\n         if (format == null) {\n-            if (locale == null) {\n-                locale = Locale.getDefault();\n-            }\n-\n             try {\n                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);\n                 String pattern = formatter.toPattern();\n         if (timeZone != null) {\n             key = new Pair(key, timeZone);\n         }\n-        if (locale != null) {\n-            key = new Pair(key, locale);\n-        }\n+        if (locale == null) {\n+            locale = Locale.getDefault();\n+        }\n+        key = new Pair(key, locale);\n \n         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);\n         if (format == null) {\n-            if (locale == null) {\n-                locale = Locale.getDefault();\n-            }\n-\n             try {\n                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,\n                         locale);\n--- a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java\n+++ b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java\n         }\n     }\n \n+    public void test_changeDefault_Locale_DateInstance() {\n+        Locale realDefaultLocale = Locale.getDefault();\n+        try {\n+            Locale.setDefault(Locale.US);\n+            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n+            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n+            Locale.setDefault(Locale.GERMANY);\n+            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n+\n+            assertSame(Locale.GERMANY, format1.getLocale());\n+            assertSame(Locale.US, format2.getLocale());\n+            assertSame(Locale.GERMANY, format3.getLocale());\n+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);\n+            assertTrue(format2 != format3);\n+\n+        } finally {\n+            Locale.setDefault(realDefaultLocale);\n+        }\n+    }\n+\n+    public void test_changeDefault_Locale_DateTimeInstance() {\n+        Locale realDefaultLocale = Locale.getDefault();\n+        try {\n+            Locale.setDefault(Locale.US);\n+            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n+            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n+            Locale.setDefault(Locale.GERMANY);\n+            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n+\n+            assertSame(Locale.GERMANY, format1.getLocale());\n+            assertSame(Locale.US, format2.getLocale());\n+            assertSame(Locale.GERMANY, format3.getLocale());\n+            assertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);\n+            assertTrue(format2 != format3);\n+\n+        } finally {\n+            Locale.setDefault(realDefaultLocale);\n+        }\n+    }\n+\n     public void test_getInstance_String_TimeZone_Locale() {\n         Locale realDefaultLocale = Locale.getDefault();\n         TimeZone realDefaultZone = TimeZone.getDefault();", "timestamp": 1193803132, "metainfo": ""}