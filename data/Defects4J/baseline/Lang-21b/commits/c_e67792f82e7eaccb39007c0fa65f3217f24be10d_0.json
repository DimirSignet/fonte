{"sha": "e67792f82e7eaccb39007c0fa65f3217f24be10d", "log": "Adding Ulrich + Tomas' patch to LANG-596 adding a replace(String, Properties) variant to StrSubstitutor  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java\n+++ b/src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java\n package org.apache.commons.lang3.text;\n \n import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Properties;\n \n /**\n  * Substitutes variables within a string by values.\n         return new StrSubstitutor(valueMap, prefix, suffix).replace(source);\n     }\n \n+    /**\n+     * Replaces all the occurrences of variables in the given source object with their matching\n+     * values from the properties.\n+     * \n+     * @param source the source text containing the variables to substitute, null returns null\n+     * @param properties the properties with values, may be null\n+     * @return the result of the replace operation\n+     */\n+    public static String replace(Object source, Properties valueProperties)\n+    {\n+        if (valueProperties == null) {\n+            return source.toString();\n+        }\n+        Map<String,String> valueMap = new HashMap<String,String>();\n+        Enumeration<?> propNames = valueProperties.propertyNames();\n+        while (propNames.hasMoreElements())\n+        {\n+            String propName = (String)propNames.nextElement();\n+            String propValue = valueProperties.getProperty(propName);\n+            valueMap.put(propName, propValue);\n+        }\n+        return StrSubstitutor.replace(source, valueMap);\n+    }\n+    \n     /**\n      * Replaces all the occurrences of variables in the given source object with\n      * their matching values from the system properties.\n--- a/src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java\n \n import java.util.HashMap;\n import java.util.Map;\n+import java.util.Properties;\n \n import junit.framework.TestCase;\n \n         assertEquals(buf.toString(), StrSubstitutor.replaceSystemProperties(\"Hi ${user.name}, you are \"\n             + \"working with ${os.name}, your home \"\n             + \"directory is ${user.home}.\"));\n+    }\n+    \n+    /**\n+     * Test the replace of a properties object\n+     */\n+    public void testSubstitutetDefaultProperties(){\n+    \tString org = \"${doesnotwork}\";\n+        System.setProperty(\"doesnotwork\", \"It work's!\");\n+\n+        // create a new Properties object with the System.getProperties as default\n+        Properties props = new Properties(System.getProperties());\n+\n+        assertEquals(\"It work's!\",StrSubstitutor.replace(org, props));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1283122422, "metainfo": ""}