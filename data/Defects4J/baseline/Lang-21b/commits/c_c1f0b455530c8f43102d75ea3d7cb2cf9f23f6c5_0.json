{"sha": "c1f0b455530c8f43102d75ea3d7cb2cf9f23f6c5", "log": "Improving Javadoc  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java\n \n     /**\n      * Specify the translators to be used at creation time. \n+     *\n+     * @param translators CharSequenceTranslator array to aggregate\n      */\n     public AggregateTranslator(CharSequenceTranslator... translators) {\n         this.translators = translators;\n--- a/src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java\n      * @param index int representing the current point of translation\n      * @param out Writer to translate the text to\n      * @return int count of codepoints consumed\n+     * @throws IOException if and only if the Writer produces an IOException\n      */\n     public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\n \n     /**\n      * Helper method to create a merger of this translator with another set of \n      * translators. Useful in customizing the standard functionality.\n+     *\n+     * @param translators CharSequenceTranslator array of translators to merge with this one\n+     * @return CharSequenceTranslator merging this translator with the others\n      */\n     public final CharSequenceTranslator with(CharSequenceTranslator... translators) {\n         CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];\n--- a/src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java\n      * @param codepoint int character input to translate\n      * @param out Writer to optionally push the translated output to\n      * @return boolean as to whether translation occurred or not\n+     * @throws IOException if and only if the Writer produces an IOException\n      */\n     public abstract boolean translate(int codepoint, Writer out) throws IOException;\n \n--- a/src/java/org/apache/commons/lang/text/translate/LookupTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/LookupTranslator.java\n     /**\n      * Define the lookup table to be used in translation\n      *\n-     * @param CharSequence[][] Lookup table of size [*][2]\n+     * @param lookup CharSequence[][] table of size [*][2]\n      */\n     public LookupTranslator(CharSequence[][] lookup) {\n         lookupMap = new HashMap<CharSequence, CharSequence>();", "timestamp": 1248106355, "metainfo": ""}