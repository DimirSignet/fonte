{"sha": "e9769e8c2434edf0b78431cf9df558e5a258ddba", "log": "increase NotImplementedException test coverage as reported by clover  ", "commit": "\n--- a/src/test/org/apache/commons/lang/NotImplementedExceptionTest.java\n+++ b/src/test/org/apache/commons/lang/NotImplementedExceptionTest.java\n  * limitations under the License.\n  */\n package org.apache.commons.lang;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.PrintStream;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import org.apache.commons.lang.exception.NestableException;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n         NotImplementedException ex = new NotImplementedException();\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }\n \n     public void testConstructor_String1() {\n         NotImplementedException ex = new NotImplementedException((String) null);\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }        \n     public void testConstructor_String2() {\n         NotImplementedException ex = new NotImplementedException(\"msg\");\n         assertEquals(\"msg\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"msg\", ex.getMessage());\n     }\n \n     public void testConstructor_Throwable1() {\n         NotImplementedException ex = new NotImplementedException((Throwable) null);\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }        \n     public void testConstructor_Throwable2() {\n         Exception npe = new NullPointerException();\n         NotImplementedException ex = new NotImplementedException(npe);\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertSame(npe, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }\n \n     public void testConstructor_StringThrowable1() {\n         NotImplementedException ex = new NotImplementedException((String) null, (Throwable) null);\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }\n     public void testConstructor_StringThrowable2() {\n         Exception npe = new NullPointerException();\n         NotImplementedException ex = new NotImplementedException(\"msg\", npe);\n         assertEquals(\"msg\", ex.getMessage());\n         assertSame(npe, ex.getCause());\n+        assertEquals(\"msg\", ex.getMessage());\n     }\n \n     public void testConstructor_Class1() {\n         NotImplementedException ex = new NotImplementedException((Class) null);\n         assertEquals(\"Code is not implemented\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n     }\n     public void testConstructor_Class2() {\n         NotImplementedException ex = new NotImplementedException(String.class);\n         assertEquals(\"Code is not implemented in class java.lang.String\", ex.getMessage());\n         assertEquals(null, ex.getCause());\n+        assertEquals(\"Code is not implemented in class java.lang.String\", ex.getMessage());\n     }\n \n+    public void testGetMessage_Indexed() {\n+        NotImplementedException ex = new NotImplementedException(new Exception(\"nested 1\", new Exception(\"nested 2\")));\n+        assertEquals(\"Code is not implemented\", ex.getMessage());\n+        assertEquals(\"Code is not implemented\", ex.getMessage(0));\n+        assertEquals(\"nested 1\", ex.getMessage(1));\n+        assertEquals(\"nested 2\", ex.getMessage(2));\n+        \n+        String[] messages = ex.getMessages();\n+        assertEquals(3, messages.length);\n+        assertEquals(\"Code is not implemented\", messages[0]);\n+        assertEquals(\"nested 1\", messages[1]);\n+        assertEquals(\"nested 2\", messages[2]);\n+    }\n+    \n+    public void testGetThrowable() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        \n+        assertEquals(3, ex.getThrowableCount());\n+        \n+        assertEquals(NotImplementedException.class, ex.getThrowable(0).getClass());\n+        assertEquals(\"Code is not implemented\", ex.getThrowable(0).getMessage());\n+        assertEquals(NestableException.class, ex.getThrowable(1).getClass());\n+        assertEquals(\"nested 1\", ex.getThrowable(1).getMessage());\n+        assertEquals(NestableException.class, ex.getThrowable(2).getClass());\n+        assertEquals(\"nested 2\", ex.getThrowable(2).getMessage());\n+        \n+        assertEquals(3, ex.getThrowables().length);\n+        assertEquals(NotImplementedException.class, ex.getThrowables()[0].getClass());\n+        assertEquals(\"Code is not implemented\", ex.getThrowables()[0].getMessage());\n+        assertEquals(NestableException.class, ex.getThrowables()[1].getClass());\n+        assertEquals(\"nested 1\", ex.getThrowables()[1].getMessage());\n+        assertEquals(NestableException.class, ex.getThrowables()[2].getClass());\n+        assertEquals(\"nested 2\", ex.getThrowables()[2].getMessage());\n+    }\n+    \n+    public void testIndexOfThrowable() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        assertEquals(0, ex.indexOfThrowable(NotImplementedException.class));\n+        assertEquals(1, ex.indexOfThrowable(NestableException.class));\n+    }\n+    \n+    public void testIndexOfThrowable_Index() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        assertEquals(1, ex.indexOfThrowable(NestableException.class, 1));\n+    }\n+    \n+    public void testPrintStackTrace() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        PrintStream errStream = System.err;\n+        System.setErr(ps);\n+        ex.printStackTrace();\n+        System.setErr(errStream);\n+        assertTrue(baos.toString().length() > 0);\n+    }\n+    \n+    public void testPrintStackTrace_Stream() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        ex.printStackTrace(ps);\n+        assertTrue(baos.toString().length() > 0);\n+    }\n+    \n+    public void testPrintStackTrace_Writer() {\n+        NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+        StringWriter stringWriter = new StringWriter();\n+        PrintWriter writer = new PrintWriter(stringWriter);\n+        ex.printStackTrace(writer);\n+        assertTrue(stringWriter.toString().length() > 0);\n+    }\n+    \n+    public void testPrintPartialStackTrace_Writer() {\n+      NotImplementedException ex = new NotImplementedException(new NestableException(\"nested 1\", new NestableException(\"nested 2\")));\n+      StringWriter stringWriter = new StringWriter();\n+      PrintWriter writer = new PrintWriter(stringWriter);\n+      ex.printPartialStackTrace(writer);\n+      assertTrue(stringWriter.toString().length() > 0);\n+  }\n }", "timestamp": 1124671988, "metainfo": ""}