{"sha": "2e41620b8afaef459919633521fa0e7d77148b7e", "log": "Removing the selfCause tests. This is not a legal state for JDK Throwable cause properties, and I'm going to drop the support for people creating methods named 'setCause'. I can't find a lot of examples of this method naming in search engines. LANG-491  ", "commit": "\n--- a/src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java\n+++ b/src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java\n     private Throwable withCause;\n     private Throwable withoutCause;\n     private Throwable jdkNoCause;\n-    private ExceptionWithCause selfCause;\n     private ExceptionWithCause cyclicCause;\n \n     public ExceptionUtilsTest(String name) {\n         nested = new NestableException(withoutCause);\n         withCause = new ExceptionWithCause(nested);\n         jdkNoCause = new NullPointerException();\n-        selfCause = new ExceptionWithCause(null);\n-        selfCause.setCause(selfCause);\n         ExceptionWithCause a = new ExceptionWithCause(null);\n         ExceptionWithCause b = new ExceptionWithCause(a);\n         a.setCause(b);\n         nested = null;\n         withCause = null;\n         jdkNoCause = null;\n-        selfCause = null;\n         cyclicCause = null;\n     }\n \n         assertSame(withoutCause, ExceptionUtils.getCause(nested));\n         assertSame(nested, ExceptionUtils.getCause(withCause));\n         assertSame(null, ExceptionUtils.getCause(jdkNoCause));\n-        assertSame(selfCause, ExceptionUtils.getCause(selfCause));\n         assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(cyclicCause));\n         assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getCause(cyclicCause.getCause()));\n         assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(((ExceptionWithCause) cyclicCause.getCause()).getCause()));\n         assertSame(withoutCause, ExceptionUtils.getRootCause(nested));\n         assertSame(withoutCause, ExceptionUtils.getRootCause(withCause));\n         assertSame(null, ExceptionUtils.getRootCause(jdkNoCause));\n-        assertSame(null, ExceptionUtils.getRootCause(selfCause));\n         assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getRootCause(cyclicCause));\n     }\n \n         assertEquals(2, ExceptionUtils.getThrowableCount(nested));\n         assertEquals(3, ExceptionUtils.getThrowableCount(withCause));\n         assertEquals(1, ExceptionUtils.getThrowableCount(jdkNoCause));\n-        assertEquals(1, ExceptionUtils.getThrowableCount(selfCause));\n         assertEquals(3, ExceptionUtils.getThrowableCount(cyclicCause));\n     }\n \n         assertSame(jdkNoCause, throwables[0]);\n     }\n \n-    public void testGetThrowables_Throwable_selfCause() {\n-        Throwable[] throwables = ExceptionUtils.getThrowables(selfCause);\n-        assertEquals(1, throwables.length);\n-        assertSame(selfCause, throwables[0]);\n-    }\n-\n     public void testGetThrowables_Throwable_recursiveCause() {\n         Throwable[] throwables = ExceptionUtils.getThrowables(cyclicCause);\n         assertEquals(3, throwables.length);\n         List<?> throwables = ExceptionUtils.getThrowableList(jdkNoCause);\n         assertEquals(1, throwables.size());\n         assertSame(jdkNoCause, throwables.get(0));\n-    }\n-\n-    public void testGetThrowableList_Throwable_selfCause() {\n-        List<?> throwables = ExceptionUtils.getThrowableList(selfCause);\n-        assertEquals(1, throwables.size());\n-        assertSame(selfCause, throwables.get(0));\n     }\n \n     public void testGetThrowableList_Throwable_recursiveCause() {", "timestamp": 1262409305, "metainfo": ""}