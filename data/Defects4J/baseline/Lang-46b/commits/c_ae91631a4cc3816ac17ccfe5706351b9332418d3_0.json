{"sha": "ae91631a4cc3816ac17ccfe5706351b9332418d3", "log": "Javadoc fixes, from Fredrik Westermarck   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n  *\n  * @author <a href=\"mailto:scolebourne@apache.org\">Stephen Colebourne</a>\n  * @author Moritz Petersen\n- * @version $Id: ArrayUtils.java,v 1.2 2002/11/14 22:29:25 scolebourne Exp $\n+ * @author <a href=\"mailto:fredrik@westermarck.com\">Fredrik Westermarck</a>\n+ * @version $Id: ArrayUtils.java,v 1.3 2002/11/15 00:25:45 scolebourne Exp $\n  */\n public class ArrayUtils {\n \n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n      */    \n     public static boolean isSameLength(Object[] array1, Object[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(long[] array1, long[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(int[] array1, int[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(short[] array1, short[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(byte[] array1, byte[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(double[] array1, double[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(float[] array1, float[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, may be <code>null</code>\n      * @param array2 the second array, may be <code>null</code>\n-     * @param true if length of arrays matches, treating <code>null</code> as an empty array\n-     */    \n+     * @return <code>true</code> if length of arrays matches, treating\n+     *  <code>null</code> as an empty array\n+     */\n     public static boolean isSameLength(boolean[] array1, boolean[] array2) {\n         if ((array1 == null && array2 != null && array2.length > 0) ||\n             (array2 == null && array1 != null && array1.length > 0) ||\n      * \n      * @param array1 the first array, must not be <code>null</code>\n      * @param array2 the second array, must not be <code>null</code>\n-     * @param true if type of arrays matches\n+     * @return <code>true</code> if type of arrays matches\n      * @throws IllegalArgumentException if either array is <code>null</code>\n      */    \n     public static boolean isSameType(Object array1, Object array2) {\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:fredrik@westermarck.com\">Fredrik Westermarck</a>\n- * @version $Id: StringUtils.java,v 1.23 2002/11/15 00:06:40 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.24 2002/11/15 00:25:45 scolebourne Exp $\n  */\n public class StringUtils {\n \n      * Returns either the passed in Object as a String, or,\n      * if the Object is <code>null</code>, an empty String.\n      * \n-     * @param str the Object to check\n+     * @param obj the Object to check\n      * @return the passed in Object's toString, or blank if it was null\n      */\n     public static String defaultString(Object obj) {", "timestamp": 1037319945, "metainfo": ""}