{"sha": "14ac91c4a6d86052f0b10922f7e5d312e6e045bf", "log": "Committing fix for LANG-140. By reversing the order of field calculation, Yu Peng's bug goes away  ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\n+++ b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\n         end.setTime(new Date(endMillis));\n \n         // initial estimates\n+        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n+        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n+        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n+        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n+        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n+        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);\n-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);\n+\n         // each initial estimate is adjusted in case it is under 0\n+        while (milliseconds < 0) {\n+            milliseconds += 1000;\n+            seconds -= 1;\n+        }\n+        while (seconds < 0) {\n+            seconds += 60;\n+            minutes -= 1;\n+        }\n+        while (minutes < 0) {\n+            minutes += 60;\n+            hours -= 1;\n+        }\n+        while (hours < 0) {\n+            hours += 24;\n+            days -= 1;\n+        }\n+        while (days < 0) {\n+            days += 31; // such overshooting is taken care of later on\n+            months -= 1;\n+        }\n         while (months < 0) {\n             months += 12;\n             years -= 1;\n-        }\n-        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);\n-        while (days < 0) {\n-            days += 31; // such overshooting is taken care of later on\n-            months -= 1;\n-        }\n-        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);\n-        while (hours < 0) {\n-            hours += 24;\n-            days -= 1;\n-        }\n-        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);\n-        while (minutes < 0) {\n-            minutes += 60;\n-            hours -= 1;\n-        }\n-        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);\n-        while (seconds < 0) {\n-            seconds += 60;\n-            minutes -= 1;\n-        }\n-        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);\n-        while (milliseconds < 0) {\n-            milliseconds += 1000;\n-            seconds -= 1;\n         }\n \n         // take estimates off of end to see if we can equal start, when it overshoots recalculate", "timestamp": 1150721288, "metainfo": ""}