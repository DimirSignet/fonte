{"sha": "2c82cb710b1a487e831d35b3c184bac3d950366b", "log": "Applying Cedrik Lime's patch to LANG-413; improving the memory footprint of getLevenshteinDistance  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n             return n;\n         }\n \n+        if (n > m) {\n+            // swap the input strings to consume less memory\n+            String tmp = s;\n+            s = t;\n+            t = tmp;\n+            n = m;\n+            m = t.length();\n+        }\n+\n         int p[] = new int[n+1]; //'previous' cost array, horizontally\n         int d[] = new int[n+1]; // cost array, horizontally\n         int _d[]; //placeholder to assist in swapping p and d", "timestamp": 1203824029, "metainfo": ""}