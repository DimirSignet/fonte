{"sha": "b279006d0a5474d052b8c4cc3fdcf0139493b490", "log": "various tests which helped find the last two bugs   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n         assertEquals(\"P1Y2M3DT10H30M0.0S\", text);\n         // want a way to say 'don't print the seconds in format()' or other fields for that matter:\n         //assertEquals(\"P1Y2M3DT10H30M\", text);\n+    }\n+\n+    public void testFormat() {\n+        long time = 0;\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"y\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"M\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"d\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"H\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"m\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"s\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"S\") );\n+        assertEquals( \"0000\", DurationFormatUtils.format(time, \"SSSS\") );\n+        assertEquals( \"0000\", DurationFormatUtils.format(time, \"yyyy\") );\n+        assertEquals( \"0000\", DurationFormatUtils.format(time, \"yyMM\") );\n+\n+        time = 60 * 1000;\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"y\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"M\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"d\") );\n+        assertEquals( \"0\", DurationFormatUtils.format(time, \"H\") );\n+        assertEquals( \"1\", DurationFormatUtils.format(time, \"m\") );\n+        assertEquals( \"60\", DurationFormatUtils.format(time, \"s\") );\n+        assertEquals( \"60000\", DurationFormatUtils.format(time, \"S\") );\n+        assertEquals( \"01:00\", DurationFormatUtils.format(time, \"mm:ss\") );\n+\n+        time = 3 * DateUtils.MILLIS_PER_YEAR + 7 * DateUtils.MILLIS_PER_MONTH;\n+        assertEquals( \"37\", DurationFormatUtils.format(time, \"yM\") );\n+        assertEquals( \"3 years 7 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n+        assertEquals( \"03/07\", DurationFormatUtils.format(time, \"yy/MM\") );\n+\n+        time = 3 * DateUtils.MILLIS_PER_YEAR + 11 * DateUtils.MILLIS_PER_MONTH;\n+        assertEquals( \"311\", DurationFormatUtils.format(time, \"yM\") );\n+        assertEquals( \"3 years 11 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n+        assertEquals( \"03/11\", DurationFormatUtils.format(time, \"yy/MM\") );\n+\n+        time = 3 * DateUtils.MILLIS_PER_YEAR + 12 * DateUtils.MILLIS_PER_MONTH;\n+        assertEquals( \"40\", DurationFormatUtils.format(time, \"yM\") );\n+        assertEquals( \"4 years 0 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n+        assertEquals( \"04/00\", DurationFormatUtils.format(time, \"yy/MM\") );\n+        assertEquals( \"48\", DurationFormatUtils.format(time, \"M\") );\n+        assertEquals( \"48\", DurationFormatUtils.format(time, \"MM\") );\n+        assertEquals( \"048\", DurationFormatUtils.format(time, \"MMM\") );\n+\n     }\n \n     public void testLexx() {", "timestamp": 1093751062, "metainfo": ""}