{"sha": "bbf3ed85e0f668331edb269329bf577fe27932a8", "log": "Optimize modulo like other operators. Contributed by timwintle Fixes issue 267  Revision created by MOE tool push_codebase.  R=johnlenz DELTA=11  (11 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=716028   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n       case Token.SUB:\n       case Token.MUL:\n       case Token.DIV:\n+      case Token.MOD:\n         return tryFoldArithmetic(subtree, left, right);\n \n       case Token.LT:\n           break;\n         case Token.MUL:\n           result = lval * rval;\n+          break;\n+        case Token.MOD:\n+          if (rval == 0) {\n+            error(DIVIDE_BY_0_ERROR, right);\n+            return n;\n+          }\n+          result = lval % rval;\n           break;\n         case Token.DIV:\n           if (rval == 0) {\n--- a/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java\n     fold(\"z = x * y\", \"z = x * y\");\n     fold(\"x = y * 5\", \"x = y * 5\");\n     fold(\"x = 1 / 0\", \"\", PeepholeFoldConstants.DIVIDE_BY_0_ERROR);\n+    fold(\"x = 3 % 2\", \"x = 1\");\n+    fold(\"x = 3 % -2\", \"x = 1\");\n+    fold(\"x = 1 % 0\", \"\", PeepholeFoldConstants.DIVIDE_BY_0_ERROR);\n   }\n \n   public void testFoldArithmeticStringComp() {", "timestamp": 1288027352, "metainfo": ""}