{"sha": "6b57a1d88764b25c247d7ad0da9dec465b2f4893", "log": "Don't reuse prop ids.  R=nicksantos DELTA=24  (0 added, 1 deleted, 23 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1619   ", "commit": "\n--- a/src/com/google/javascript/rhino/Node.java\n+++ b/src/com/google/javascript/rhino/Node.java\n       SPECIALCALL_PROP  = 27,\n       DEBUGSOURCE_PROP  = 28,\n       JSDOC_INFO_PROP   = 29,     // contains a TokenStream.JSDocInfo object\n-      VAR_ARGS_NAME     = 29,     // the name node is a variable length\n-                                  // argument placeholder. It can never be\n-                                  // used in conjunction with JSDOC_INFO_PROP.\n-      SKIP_INDEXES_PROP  = 30,    // array of skipped indexes of array literal\n-      INCRDECR_PROP      = 31,    // pre or post type of increment/decrement\n-      MEMBER_TYPE_PROP   = 32,    // type of element access operation\n-      NAME_PROP          = 33,    // property name\n-      PARENTHESIZED_PROP = 34,    // expression is parenthesized\n-      QUOTED_PROP        = 35,    // set to indicate a quoted object lit key\n-      OPT_ARG_NAME       = 36,    // The name node is an optional argument.\n-      SYNTHETIC_BLOCK_PROP = 37,  // A synthetic block. Used to make\n+      VAR_ARGS_NAME     = 30,     // the name node is a variable length\n+                                  // argument placeholder.\n+      SKIP_INDEXES_PROP  = 31,    // array of skipped indexes of array literal\n+      INCRDECR_PROP      = 32,    // pre or post type of increment/decrement\n+      MEMBER_TYPE_PROP   = 33,    // type of element access operation\n+      NAME_PROP          = 34,    // property name\n+      PARENTHESIZED_PROP = 35,    // expression is parenthesized\n+      QUOTED_PROP        = 36,    // set to indicate a quoted object lit key\n+      OPT_ARG_NAME       = 37,    // The name node is an optional argument.\n+      SYNTHETIC_BLOCK_PROP = 38,  // A synthetic block. Used to make\n                                   // processing simpler, and does not\n                                   // represent a real block in the source.\n-      EMPTY_BLOCK        = 38,    // Used to indicate BLOCK that replaced\n+      EMPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced\n                                   // EMPTY nodes.\n-      ORIGINALNAME_PROP  = 39,    // The original name of the node, before\n+      ORIGINALNAME_PROP  = 40,    // The original name of the node, before\n                                   // renaming.\n-      BRACELESS_TYPE     = 40,    // The type syntax without curly braces.\n-      SIDE_EFFECT_FLAGS  = 41,    // Function or constructor call side effect\n+      BRACELESS_TYPE     = 41,    // The type syntax without curly braces.\n+      SIDE_EFFECT_FLAGS  = 42,    // Function or constructor call side effect\n                                   // flags\n       // Coding convention props\n-      IS_CONSTANT_NAME   = 42,    // The variable or property is constant.\n-      IS_OPTIONAL_PARAM  = 43,    // The parameter is optional.\n-      IS_VAR_ARGS_PARAM  = 44,    // The parameter is a var_args.\n-      IS_NAMESPACE       = 45,    // The variable creates a namespace.\n-      IS_DISPATCHER      = 46,    // The function is a dispatcher function,\n+      IS_CONSTANT_NAME   = 43,    // The variable or property is constant.\n+      IS_OPTIONAL_PARAM  = 44,    // The parameter is optional.\n+      IS_VAR_ARGS_PARAM  = 45,    // The parameter is a var_args.\n+      IS_NAMESPACE       = 46,    // The variable creates a namespace.\n+      IS_DISPATCHER      = 47,    // The function is a dispatcher function,\n                                   // probably generated from Java code, and\n                                   // should be resolved to the proper\n                                   // overload if possible.\n-      DIRECTIVES         = 47,    // The ES5 directives on this node.\n-      DIRECT_EVAL        = 48,    // ES5 distinguishes between direct and\n+      DIRECTIVES         = 48,    // The ES5 directives on this node.\n+      DIRECT_EVAL        = 49,    // ES5 distinguishes between direct and\n                                   // indirect calls to eval.\n-      FREE_CALL          = 49,    // A CALL without an explicit \"this\" value.\n-      LAST_PROP          = 49;\n+      FREE_CALL          = 50,    // A CALL without an explicit \"this\" value.\n+      LAST_PROP          = 50;\n \n   // values of ISNUMBER_PROP to specify\n   // which of the children are Number types", "timestamp": 1303763231, "metainfo": ""}