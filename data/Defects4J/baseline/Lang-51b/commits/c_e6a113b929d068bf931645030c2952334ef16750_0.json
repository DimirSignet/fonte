{"sha": "e6a113b929d068bf931645030c2952334ef16750", "log": "Refactor \"Windows\" into private static final String OS_NAME_WINDOWS_PREFIX = \"Windows\";   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n  * @author Tetsuya Kaneuchi\n  * @author Rafal Krupinski\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.33 2004/02/25 00:25:29 ggregory Exp $\n+ * @version $Id: SystemUtils.java,v 1.34 2004/08/30 21:19:52 ggregory Exp $\n  */\n public class SystemUtils {\n \n+    /**\n+     * The prefix String for all Windows OS.\n+     */\n+    private static final String OS_NAME_WINDOWS_PREFIX = \"Windows\";\n+    \n     // System property constants\n     //-----------------------------------------------------------------------\n     // These MUST be declared first. Other constants depend on this.\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS = getOSMatches(\"Windows\");\n+    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);\n \n     /**\n      * <p>Is <code>true</code> if this is Windows 2000.</p>\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(\"Windows\", \"5.0\");\n+    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.0\");\n \n     /**\n      * <p>Is <code>true</code> if this is Windows 95.</p>\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(\"Windows 9\", \"4.0\");\n+    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.0\");\n     // JDK 1.2 running on Windows98 returns 'Windows 95', hence the above\n \n     /**\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(\"Windows 9\", \"4.1\");\n+    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" 9\", \"4.1\");\n     // JDK 1.2 running on Windows98 returns 'Windows 95', hence the above\n \n     /**\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(\"Windows\", \"4.9\");\n+    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"4.9\");\n     // JDK 1.2 running on WindowsME may return 'Windows 95', hence the above\n \n     /**\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(\"Windows NT\");\n+    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + \" NT\");\n     // Windows 2000 returns 'Windows 2000' but may suffer from same JDK1.2 problem\n \n     /**\n      * \n      * @since 2.0\n      */\n-    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(\"Windows\", \"5.1\");\n+    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, \"5.1\");\n     // Windows XP returns 'Windows 2000' just for fun...\n \n     //-----------------------------------------------------------------------    ", "timestamp": 1093900792, "metainfo": ""}