{"sha": "122227ce48f82b636b7437afea30cfdee980afaf", "log": "Add extra factory methods for convenience bug 23590, from Nikolay Metchev   ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java\n  * @author Sean Schofield\n  * @author Gary Gregory\n  * @author Stephen Colebourne\n+ * @author Nikolay Metchev\n  * @since 2.0\n- * @version $Id: FastDateFormat.java,v 1.16 2003/09/07 14:32:35 psteitz Exp $\n+ * @version $Id: FastDateFormat.java,v 1.17 2003/11/29 13:52:34 scolebourne Exp $\n  */\n public class FastDateFormat extends Format {\n     // A lot of the speed in this class comes from caching, but some comes\n         return format;\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Gets a date formatter instance using the specified style in the\n+     * default time zone and locale.</p>\n+     * \n+     * @param style  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @return a localized standard date formatter\n+     * @throws IllegalArgumentException if the Locale has no date\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateInstance(int style) {\n+        return getDateInstance(style, null, null);\n+    }\n+\n+    /**\n+     * <p>Gets a date formatter instance using the specified style and\n+     * locale in the default time zone.</p>\n+     * \n+     * @param style  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @param locale  optional locale, overrides system locale\n+     * @return a localized standard date formatter\n+     * @throws IllegalArgumentException if the Locale has no date\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateInstance(int style, Locale locale) {\n+        return getDateInstance(style, null, locale);\n+    }\n+\n+    /**\n+     * <p>Gets a date formatter instance using the specified style and\n+     * time zone in the default locale.</p>\n+     * \n+     * @param style  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeZone  optional time zone, overrides time zone of\n+     *  formatted date\n+     * @return a localized standard date formatter\n+     * @throws IllegalArgumentException if the Locale has no date\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateInstance(int style, TimeZone timeZone) {\n+        return getDateInstance(style, timeZone, null);\n+    }\n     /**\n      * <p>Gets a date formatter instance using the specified style, time\n      * zone and locale.</p>\n         return format;\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Gets a time formatter instance using the specified style in the\n+     * default time zone and locale.</p>\n+     * \n+     * @param style  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @return a localized standard time formatter\n+     * @throws IllegalArgumentException if the Locale has no time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getTimeInstance(int style) {\n+        return getTimeInstance(style, null, null);\n+    }\n+\n+    /**\n+     * <p>Gets a time formatter instance using the specified style and\n+     * locale in the default time zone.</p>\n+     * \n+     * @param style  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @param locale  optional locale, overrides system locale\n+     * @return a localized standard time formatter\n+     * @throws IllegalArgumentException if the Locale has no time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getTimeInstance(int style, Locale locale) {\n+        return getTimeInstance(style, null, locale);\n+    }\n+    \n+    /**\n+     * <p>Gets a time formatter instance using the specified style and\n+     * time zone in the default locale.</p>\n+     * \n+     * @param style  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeZone  optional time zone, overrides time zone of\n+     *  formatted time\n+     * @return a localized standard time formatter\n+     * @throws IllegalArgumentException if the Locale has no time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getTimeInstance(int style, TimeZone timeZone) {\n+        return getTimeInstance(style, timeZone, null);\n+    }\n+    \n     /**\n      * <p>Gets a time formatter instance using the specified style, time\n      * zone and locale.</p>\n         return format;\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Gets a date/time formatter instance using the specified style\n+     * in the default time zone and locale.</p>\n+     * \n+     * @param dateStyle  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeStyle  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @return a localized standard date/time formatter\n+     * @throws IllegalArgumentException if the Locale has no date/time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateTimeInstance(\n+            int dateStyle, int timeStyle) {\n+        return getDateTimeInstance(dateStyle, timeStyle, null, null);\n+    }\n+    \n+    /**\n+     * <p>Gets a date/time formatter instance using the specified style and\n+     * locale in the default time zone.</p>\n+     * \n+     * @param dateStyle  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeStyle  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @param locale  optional locale, overrides system locale\n+     * @return a localized standard date/time formatter\n+     * @throws IllegalArgumentException if the Locale has no date/time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateTimeInstance(\n+            int dateStyle, int timeStyle, Locale locale) {\n+        return getDateTimeInstance(dateStyle, timeStyle, null, locale);\n+    }\n+    \n+    /**\n+     * <p>Gets a date/time formatter instance using the specified style and\n+     * time zone in the default locale.</p>\n+     * \n+     * @param dateStyle  date style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeStyle  time style: FULL, LONG, MEDIUM, or SHORT\n+     * @param timeZone  optional time zone, overrides time zone of\n+     *  formatted date\n+     * @return a localized standard date/time formatter\n+     * @throws IllegalArgumentException if the Locale has no date/time\n+     *  pattern defined\n+     */\n+    public static FastDateFormat getDateTimeInstance(\n+            int dateStyle, int timeStyle, TimeZone timeZone) {\n+        return getDateTimeInstance(dateStyle, timeStyle, timeZone, null);\n+    }    \n     /**\n      * <p>Gets a date/time formatter instance using the specified style,\n      * time zone and locale.</p>", "timestamp": 1070113954, "metainfo": ""}