{"sha": "0594829d67a2bbd3f2e098ae65c44a2155376c71", "log": "Add Date equivalent of isSameDay method   ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/DateUtils.java\n+++ b/src/java/org/apache/commons/lang/time/DateUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Phil Steitz\n  * @since 2.0\n- * @version $Id: DateUtils.java,v 1.31 2004/10/08 00:09:01 scolebourne Exp $\n+ * @version $Id: DateUtils.java,v 1.32 2004/10/13 21:48:00 scolebourne Exp $\n  */\n public class DateUtils {\n     \n      * instance to operate.</p>\n      */\n     public DateUtils() {\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Checks if two date objects are on the same day ignoring time.</p>\n+     *\n+     * <p>28 Mar 2002 13:45 and 28 Mar 2002 06:01 would return true.\n+     * 28 Mar 2002 13:45 and 12 Mar 2002 13:45 would return false.\n+     * </p>\n+     * \n+     * @param date1  the first date, not null\n+     * @param date2  the second date, not null\n+     * @return true if they represent the same day\n+     * @throws IllegalArgumentException if either date is <code>null</code>\n+     * @since 2.1\n+     */\n+    public static boolean isSameDay(Date date1, Date date2) {\n+        if (date1 == null || date2 == null) {\n+            throw new IllegalArgumentException(\"The date must not be null\");\n+        }\n+        Calendar cal1 = Calendar.getInstance();\n+        cal1.setTime(date1);\n+        Calendar cal2 = Calendar.getInstance();\n+        cal2.setTime(date2);\n+        return isSameDay(cal1, cal2);\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testIsSameDay() {\n+    public void testIsSameDay_Date() {\n+        Date date1 = new GregorianCalendar(2004, 6, 9, 13, 45).getTime();\n+        Date date2 = new GregorianCalendar(2004, 6, 9, 13, 45).getTime();\n+        assertEquals(true, DateUtils.isSameDay(date1, date2));\n+        date2 = new GregorianCalendar(2004, 6, 10, 13, 45).getTime();\n+        assertEquals(false, DateUtils.isSameDay(date1, date2));\n+        date1 = new GregorianCalendar(2004, 6, 10, 13, 45).getTime();\n+        assertEquals(true, DateUtils.isSameDay(date1, date2));\n+        date2 = new GregorianCalendar(2005, 6, 10, 13, 45).getTime();\n+        assertEquals(false, DateUtils.isSameDay(date1, date2));\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testIsSameDay_Cal() {\n         GregorianCalendar cal1 = new GregorianCalendar(2004, 6, 9, 13, 45);\n         GregorianCalendar cal2 = new GregorianCalendar(2004, 6, 9, 13, 45);\n         assertEquals(true, DateUtils.isSameDay(cal1, cal2));", "timestamp": 1097704080, "metainfo": ""}