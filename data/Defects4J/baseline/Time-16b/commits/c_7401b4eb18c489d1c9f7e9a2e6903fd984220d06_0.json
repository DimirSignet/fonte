{"sha": "7401b4eb18c489d1c9f7e9a2e6903fd984220d06", "log": "Simplify implementation of ReadableInstant comparison   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java\n+++ b/JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java\n  * Joda Software License, Version 1.0\n  *\n  *\n- * Copyright (c) 2001-2004 Stephen Colebourne.  \n+ * Copyright (c) 2001-2005 Stephen Colebourne.  \n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n \n import java.util.Locale;\n \n-import org.joda.time.Chronology;\n import org.joda.time.DateTimeField;\n import org.joda.time.DateTimeFieldType;\n-import org.joda.time.DateTimeUtils;\n import org.joda.time.DurationField;\n import org.joda.time.ReadableInstant;\n import org.joda.time.ReadablePartial;\n             throw new IllegalArgumentException(\"The instant must not be null\");\n         }\n         int thisValue = get();\n-        Chronology chrono = DateTimeUtils.getChronology(instant.getChronology());\n-        int otherValue = getFieldType().getField(chrono).get(instant.getMillis());\n+        int otherValue = instant.get(getFieldType());\n         if (thisValue < otherValue) {\n             return -1;\n         } else if (thisValue > otherValue) {\n--- a/JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java\n+++ b/JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java\n  * Joda Software License, Version 1.0\n  *\n  *\n- * Copyright (c) 2001-2004 Stephen Colebourne.  \n+ * Copyright (c) 2001-2005 Stephen Colebourne.  \n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n import java.io.Serializable;\n import java.util.Locale;\n \n-import org.joda.time.Chronology;\n import org.joda.time.DateTimeField;\n import org.joda.time.DateTimeFieldType;\n import org.joda.time.DateTimeUtils;\n             throw new IllegalArgumentException(\"The instant must not be null\");\n         }\n         int thisValue = get();\n-        Chronology chrono = DateTimeUtils.getChronology(instant.getChronology());\n-        int otherValue = getFieldType().getField(chrono).get(instant.getMillis());\n+        int otherValue = instant.get(getFieldType());\n         if (thisValue < otherValue) {\n             return -1;\n         } else if (thisValue > otherValue) {", "timestamp": 1104709965, "metainfo": ""}