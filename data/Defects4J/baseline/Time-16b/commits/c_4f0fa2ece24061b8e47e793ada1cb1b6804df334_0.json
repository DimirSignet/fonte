{"sha": "4f0fa2ece24061b8e47e793ada1cb1b6804df334", "log": "Handle null intervals stored in database [2111763]  ", "commit": "\n--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java\n+++ b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentInterval.java\n         PersistentDateTime pst = new PersistentDateTime();\n         DateTime start = (DateTime) pst.nullSafeGet(resultSet, names[0]);\n         DateTime end = (DateTime) pst.nullSafeGet(resultSet, names[1]);\n+        if (start == null || end == null) {\n+            return null;\n+        }\n         return new Interval(start, end);\n     }\n \n--- /dev/null\n+++ b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentIntervalNull.java\n+/*\n+ *  Copyright 2001-2008 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.hibernate;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.Transaction;\n+import org.hibernate.cfg.Configuration;\n+import org.joda.time.Interval;\n+\n+public class TestPersistentIntervalNull extends HibernateTestCase\n+{\n+    private SessionFactory factory;\n+    private Session session;\n+    private Transaction transaction;\n+    \n+    protected void setUp() throws SQLException\n+    {\n+        factory = getSessionFactory();\n+        store();\n+    }\n+    \n+    private void store() throws SQLException\n+    {\n+        openAndBegin();\n+        \n+        Plan plan = new Plan(1);\n+        plan.setPeriod(null);\n+        \n+        session.save(plan);\n+        session.flush();\n+        \n+        commitAndClose();\n+    }\n+\n+    private void openAndBegin()\n+    {\n+        session = factory.openSession();\n+        transaction = session.beginTransaction();\n+    }\n+    \n+    private void commitAndClose()\n+    {\n+        transaction.commit();\n+        session.close();\n+    }\n+    \n+    public void testQueryById() throws SQLException\n+    {\n+        openAndBegin();\n+        Interval persistedPeriod = queryPlan().getPeriod();\n+        commitAndClose();\n+        assertPlanPeriod(persistedPeriod);\n+    }\n+\n+    private void assertPlanPeriod(Interval period)\n+    {\n+        assertNull(period);\n+    }\n+\n+    private Plan queryPlan()\n+    {\n+        return (Plan) session.get(Plan.class, new Integer(1));\n+    }\n+    \n+    protected void setupConfiguration(Configuration cfg)\n+    {\n+        cfg.addFile(new File(\"src/test/org/joda/time/contrib/hibernate/plan.hbm.xml\"));\n+    }\n+    \n+    protected void tearDown() throws Exception\n+    {\n+        remove();\n+        super.tearDown();\n+    }\n+\n+    private void remove()\n+    {\n+        openAndBegin();\n+        session.delete(queryPlan());\n+        commitAndClose();\n+    }\n+}", "timestamp": 1223725232, "metainfo": ""}