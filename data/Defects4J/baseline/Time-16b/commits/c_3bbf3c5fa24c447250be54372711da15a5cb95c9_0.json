{"sha": "3bbf3c5fa24c447250be54372711da15a5cb95c9", "log": "Javadoc tag fixes   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTime.java\n+++ b/JodaTime/src/java/org/joda/time/DateTime.java\n      * DateTime added = dt.hourOfDay().addToCopy(6);\n      * </pre>\n      * \n-     * @param durationToAdd  the duration to add to this one, null means zero\n+     * @param periodToAdd  the period to add to this one, null means zero\n      * @param scalar  the amount of times to add, such as -1 to subtract once\n      * @return a copy of this datetime with the period added\n      * @throws ArithmeticException if the new datetime exceeds the capacity of a long\n--- a/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeUtils.java\n      * If the zone is <code>null</code>, {@link DateTimeZone#getDefault()}\n      * will be returned. Otherwise, the chronology is returned.\n      * \n-     * @param chrono  the chronology to use, null means the default zone\n-     * @return the chronology, or default if null\n+     * @param zone  the time zone to use, null means the default zone\n+     * @return the time zone, or default if null\n      */\n     public static final DateTimeZone getZone(DateTimeZone zone) {\n         if (zone == null) {\n--- a/JodaTime/src/java/org/joda/time/base/AbstractDateTime.java\n+++ b/JodaTime/src/java/org/joda/time/base/AbstractDateTime.java\n     /**\n      * Get the day of month field value.\n      * <p>\n-     * The values for the day of month are defined in {@link DateTimeConstants}.\n+     * The values for the day of month are defined in {@link org.joda.time.DateTimeConstants}.\n      * \n      * @return the day of month\n      */\n     /**\n      * Get the day of week field value.\n      * <p>\n-     * The values for the day of week are defined in {@link DateTimeConstants}.\n+     * The values for the day of week are defined in {@link org.joda.time.DateTimeConstants}.\n      * \n      * @return the day of week\n      */\n--- a/JodaTime/src/java/org/joda/time/base/AbstractDuration.java\n+++ b/JodaTime/src/java/org/joda/time/base/AbstractDuration.java\n      * <p>\n      * For more control over the conversion process, you have two options:\n      * <ul>\n-     * <li>convert the duration to an {@link Interval}, and from there obtain the period\n-     * <li>specify a period type that contains precise definitions of the day and larger\n-     * fields, such as the UTC or precise types.\n+     * <li>convert the duration to an {@link org.joda.time.Interval}, and from\n+     * there obtain the period\n+     * <li>specify a period type that contains precise definitions of the day\n+     * and larger fields, such as the UTC or precise types.\n      * </ul>\n      * \n      * @return a Period created using the millisecond duration from this instance", "timestamp": 1093061837, "metainfo": ""}