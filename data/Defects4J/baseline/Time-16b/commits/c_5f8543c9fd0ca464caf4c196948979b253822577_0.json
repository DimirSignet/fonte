{"sha": "5f8543c9fd0ca464caf4c196948979b253822577", "log": "Add some comments   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java\n         if (text == null) {\n             throw new IllegalArgumentException();\n         }\n-        return appendPrefix(new SingularAffix(text));\n+        return appendPrefix(new SimpleAffix(text));\n     }\n \n     /**\n         if (text == null) {\n             throw new IllegalArgumentException();\n         }\n-        return appendSuffix(new SingularAffix(text));\n+        return appendSuffix(new SimpleAffix(text));\n     }\n \n     /**\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * Defines a formatted field's prefix or suffix text.\n+     * This can be used for fields such as 'n hours' or 'nH' or 'Hour:n'.\n      */\n     private static interface DurationFieldAffix {\n         int calculatePrintedLength(int value);\n         int scan(String durationStr, int position);\n     }\n \n-    private static final class SingularAffix implements DurationFieldAffix {\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Implements an affix where the text does not vary by the amount.\n+     */\n+    private static final class SimpleAffix implements DurationFieldAffix {\n         private final String iText;\n \n-        SingularAffix(String text) {\n+        SimpleAffix(String text) {\n             iText = text;\n         }\n \n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Implements an affix where the text varies by the amount of the field.\n+     * Only singular (1) and plural (not 1) are supported.\n+     */\n     private static final class PluralAffix implements DurationFieldAffix {\n         private final String iSingularText;\n         private final String iPluralText;\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Builds a composite affix by merging two other affix implementations.\n+     */\n     private static final class CompositeAffix implements DurationFieldAffix {\n         private final DurationFieldAffix iLeft;\n         private final DurationFieldAffix iRight;\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Formats the numeric value of a field, potentially with prefix/suffix.\n+     */\n     private static final class FieldFormatter extends AbstractPeriodFormatter\n         implements PeriodFormatter\n     {\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Handles a simple literal piece of text.\n+     */\n     private static final class Literal extends AbstractPeriodFormatter\n         implements PeriodFormatter\n     {\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Handles a separator, that splits the fields into multiple parts.\n+     * For example, the 'T' in the ISO8601 standard.\n+     */\n     private static final class Separator extends AbstractPeriodFormatter\n         implements PeriodFormatter\n     {\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Composite implementation that merges other fields to create a full pattern.\n+     */\n     private static final class Composite extends AbstractPeriodFormatter\n         implements PeriodFormatter\n     {\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Selects between a number of choices based on which matches best.\n+     */\n     private static final class AlternateSelector extends AbstractPeriodFormatter\n         implements PeriodFormatter\n     {", "timestamp": 1093378974, "metainfo": ""}