{"sha": "ee579e2d81aff7cee5e8ad86fe69b39de4948fa6", "log": "Add long values safely   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/AbstractDuration.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractDuration.java\n \n import org.joda.time.convert.DurationConverter;\n import org.joda.time.convert.ConverterManager;\n+import org.joda.time.field.FieldUtils;\n import org.joda.time.format.ISODurationFormat;\n \n /**\n      */\n     public final long addTo(long instant, int scalar, Chronology chrono) {\n         if (isPrecise()) {\n-            return instant += getTotalMillis() * scalar;\n-        }\n-\n+            return FieldUtils.safeAdd(instant, getTotalMillis() * scalar);\n+        }\n+        \n         DurationType type = iType;\n         if (chrono != null) {\n             type = type.withChronology(chrono);\n         }\n-\n+        \n         long value; // used to lock fields against threading issues\n         value = scaleValue(iYears, scalar);\n         if (value != 0) {", "timestamp": 1090781716, "metainfo": ""}