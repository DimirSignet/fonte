{"sha": "79ce64e7ea3ef567fb832974943e20317e2f3baf", "log": "Remove system.out and formatting  ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java\n+++ b/JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java\n \n import java.util.Locale;\n \n-import org.joda.time.Chronology;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n import org.joda.time.DateTimeField;\n import org.joda.time.DateTimeFieldType;\n-import org.joda.time.DateTimeZone;\n import org.joda.time.DurationFieldType;\n import org.joda.time.LocalTime;\n import org.joda.time.ReadablePartial;\n-import org.joda.time.chrono.GregorianChronology;\n-import org.joda.time.chrono.IslamicChronology;\n-\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n \n /**\n  * This class is a JUnit test to test only the UnsupportedDateTimeField class.\n             assertTrue(true);\n         }\n         try {\n-                long currentTime = System.currentTimeMillis();\n+            long currentTime = System.currentTimeMillis();\n             long firstComputation = hoursDuration.add(currentTime, 100);\n             long secondComputation = fieldTwo.add(currentTime,\n                     100);\n-            System.out.println(firstComputation);\n-            System.out.println(secondComputation);\n             assertEquals(firstComputation,secondComputation);\n         } catch (UnsupportedOperationException e) {\n             assertTrue(false);\n         }\n \n         try {\n-                long currentTime = System.currentTimeMillis();\n+            long currentTime = System.currentTimeMillis();\n             long firstComputation = hoursDuration.add(currentTime, 1000L);\n             long secondComputation = fieldTwo.add(currentTime,\n                     1000L);\n         // not support the operation, otherwise return the result from the\n         // delegated call.\n         try {\n-\n             fieldOne.getDifference(100000L, 1000L);\n             assertTrue(false);\n         } catch (UnsupportedOperationException e) {\n         // not support the operation, otherwise return the result from the\n         // delegated call.\n         try {\n-\n             fieldOne.getDifferenceAsLong(100000L, 1000L);\n             assertTrue(false);\n         } catch (UnsupportedOperationException e) {", "timestamp": 1180186136, "metainfo": ""}