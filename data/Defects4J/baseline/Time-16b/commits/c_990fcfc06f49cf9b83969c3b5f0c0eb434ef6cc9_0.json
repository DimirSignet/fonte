{"sha": "990fcfc06f49cf9b83969c3b5f0c0eb434ef6cc9", "log": "Improve Javadoc on Object constructors suggested by Gili Tzabari  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Interval.java\n+++ b/JodaTime/src/java/org/joda/time/Interval.java\n \n import org.joda.time.base.BaseInterval;\n import org.joda.time.chrono.ISOChronology;\n+import org.joda.time.format.ISODateTimeFormat;\n+import org.joda.time.format.ISOPeriodFormat;\n \n /**\n  * Interval is the standard implementation of an immutable time interval.\n \n     /**\n      * Constructs a time interval by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadableInterval and String.\n+     * The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}\n+     * and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',\n+     * 'datetime/period' or 'period/datetime'.\n      * \n      * @param interval  the time interval to copy\n      * @throws IllegalArgumentException if the interval is invalid\n     /**\n      * Constructs a time interval by converting or copying from another object,\n      * overriding the chronology.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadableInterval and String.\n+     * The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}\n+     * and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',\n+     * 'datetime/period' or 'period/datetime'.\n      * \n      * @param interval  the time interval to copy\n      * @param chronology  the chronology to use, null means ISO default\n--- a/JodaTime/src/java/org/joda/time/MutableInterval.java\n+++ b/JodaTime/src/java/org/joda/time/MutableInterval.java\n \n import org.joda.time.base.BaseInterval;\n import org.joda.time.field.FieldUtils;\n+import org.joda.time.format.ISODateTimeFormat;\n+import org.joda.time.format.ISOPeriodFormat;\n \n /**\n  * MutableInterval is the standard implementation of a mutable time interval.\n \n     /**\n      * Constructs a time interval by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadableInterval and String.\n+     * The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}\n+     * and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',\n+     * 'datetime/period' or 'period/datetime'.\n      * \n      * @param interval  the time interval to copy\n      * @throws IllegalArgumentException if the interval is invalid\n     /**\n      * Constructs a time interval by converting or copying from another object,\n      * overriding the chronology.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadableInterval and String.\n+     * The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}\n+     * and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',\n+     * 'datetime/period' or 'period/datetime'.\n      * \n      * @param interval  the time interval to copy\n      * @param chronology  the chronology to use, null means ISO default\n--- a/JodaTime/src/java/org/joda/time/MutablePeriod.java\n+++ b/JodaTime/src/java/org/joda/time/MutablePeriod.java\n \n import org.joda.time.base.BasePeriod;\n import org.joda.time.field.FieldUtils;\n+import org.joda.time.format.ISOPeriodFormat;\n \n /**\n  * Standard mutable time period implementation.\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @throws IllegalArgumentException if period is invalid\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param type  which set of fields this period supports, null means use converter\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param chrono  the chronology to use, null means ISO in default zone\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param type  which set of fields this period supports, null means use converter\n--- a/JodaTime/src/java/org/joda/time/Period.java\n+++ b/JodaTime/src/java/org/joda/time/Period.java\n import org.joda.time.base.BasePeriod;\n import org.joda.time.chrono.ISOChronology;\n import org.joda.time.field.FieldUtils;\n+import org.joda.time.format.ISOPeriodFormat;\n \n /**\n  * An immutable time period specifying a set of duration field values.\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @throws IllegalArgumentException if period is invalid\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param type  which set of fields this period supports, null means use converter\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param chrono  the chronology to use, null means ISO in default zone\n     }\n \n     /**\n-     * Creates a period from the specified object using the\n-     * {@link org.joda.time.convert.ConverterManager ConverterManager}.\n+     * Creates a period by converting or copying from another object.\n+     * <p>\n+     * The recognised object types are defined in\n+     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n+     * include ReadablePeriod, ReadableInterval and String.\n+     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n      *\n      * @param period  period to convert\n      * @param type  which set of fields this period supports, null means use converter", "timestamp": 1197814264, "metainfo": ""}