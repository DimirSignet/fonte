{"sha": "78518374ee54d9816d7147099a6ef3aedbded479", "log": "Remove System.out   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java\n             DateTime dt = new DateTime(1970, 1, 1, 2, 30, 0, 0, PARIS);\n             Date date = new Date(70, 0, 1, 2, 30, 0);  // same field values\n             \n-            System.out.println(dt.getMillis());\n-            System.out.println(date.getTime());\n-            \n             assertEquals(date.getTime(), PARIS.getMillisJDKKeepLocal(dt.getMillis()));\n             assertEquals(date.getTime(), PARIS.getMillisJDKKeepLocal(PARIS.toTimeZone(), dt.getMillis()));\n             assertEquals(date.getTime(), PARIS.getMillisJDKKeepLocal(null, dt.getMillis()));\n             TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/London\"));\n             dt = new DateTime(1970, 1, 1, 2, 30, 0, 0, LONDON);\n             date = new Date(70, 0, 1, 2, 30, 0);  // same field values\n-            \n-            System.out.println(dt.getMillis());\n-            System.out.println(date.getTime());\n             \n             assertEquals(date.getTime(), LONDON.getMillisJDKKeepLocal(dt.getMillis()));\n             assertEquals(date.getTime(), LONDON.getMillisJDKKeepLocal(LONDON.toTimeZone(), dt.getMillis()));", "timestamp": 1133733442, "metainfo": ""}