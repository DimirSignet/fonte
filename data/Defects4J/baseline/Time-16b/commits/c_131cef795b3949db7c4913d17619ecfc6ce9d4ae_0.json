{"sha": "131cef795b3949db7c4913d17619ecfc6ce9d4ae", "log": "Revert change to handle time zones as it still has issues   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java\n+++ b/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java\n         Date date = new Date(TEST_TIME1);\n         TimeOfDay test = new TimeOfDay(date);\n         assertEquals(ISO_UTC, test.getChronology());\n-        // JDK1.3 has no historical time zone, so hour differs from JDK1.4\n-        // This method is now defined to copy the fields from the Date\n-        assertEquals(date.getHours(), test.getHourOfDay());\n+        assertEquals(1 + OFFSET, test.getHourOfDay());\n         assertEquals(2, test.getMinuteOfHour());\n         assertEquals(3, test.getSecondOfMinute());\n         assertEquals(4, test.getMillisOfSecond());\n         cal.setTime(new Date(TEST_TIME1));\n         TimeOfDay test = new TimeOfDay(cal);\n         assertEquals(GJChronology.getInstanceUTC(), test.getChronology());\n-        // JDK1.3 has no historical time zone, so hour differs from JDK1.4\n-        // This method is now defined to copy the fields from the Date\n-        assertEquals(cal.get(Calendar.HOUR_OF_DAY), test.getHourOfDay());\n+        assertEquals(1 + OFFSET, test.getHourOfDay());\n         assertEquals(2, test.getMinuteOfHour());\n         assertEquals(3, test.getSecondOfMinute());\n         assertEquals(4, test.getMillisOfSecond());\n         Date date = new Date(TEST_TIME1);\n         TimeOfDay test = new TimeOfDay(date, JulianChronology.getInstance());\n         assertEquals(JulianChronology.getInstanceUTC(), test.getChronology());\n-        // JDK1.3 has no historical time zone, so hour differs from JDK1.4\n-        // This method is now defined to copy the fields from the Date\n-        assertEquals(date.getHours(), test.getHourOfDay());\n+        assertEquals(1 + OFFSET, test.getHourOfDay());\n         assertEquals(2, test.getMinuteOfHour());\n         assertEquals(3, test.getSecondOfMinute());\n         assertEquals(4, test.getMillisOfSecond());\n         Date date = new Date(TEST_TIME1);\n         TimeOfDay test = new TimeOfDay(date, null);\n         assertEquals(ISO_UTC, test.getChronology());\n-        // JDK1.3 has no historical time zone, so hour differs from JDK1.4\n-        // This method is now defined to copy the fields from the Date\n-        assertEquals(date.getHours(), test.getHourOfDay());\n+        assertEquals(1 + OFFSET, test.getHourOfDay());\n         assertEquals(2, test.getMinuteOfHour());\n         assertEquals(3, test.getSecondOfMinute());\n         assertEquals(4, test.getMillisOfSecond());", "timestamp": 1133733422, "metainfo": ""}