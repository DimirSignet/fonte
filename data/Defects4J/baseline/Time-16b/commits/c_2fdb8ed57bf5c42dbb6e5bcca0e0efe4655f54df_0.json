{"sha": "2fdb8ed57bf5c42dbb6e5bcca0e0efe4655f54df", "log": "Remove references to Chronology factory methods   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/Instant.java\n+++ b/JodaTime/src/java/org/joda/time/Instant.java\n     public Instant(Object instant) {\n         super();\n         InstantConverter converter = ConverterManager.getInstance().getInstantConverter(instant);\n-        iMillis = converter.getInstantMillis(instant, Chronology.getISOUTC());\n+        iMillis = converter.getInstantMillis(instant, ChronologyType.iso().getChronologyUTC());\n     }\n \n     //-----------------------------------------------------------------------\n      * @return ISO in the UTC zone\n      */\n     public Chronology getChronology() {\n-        return Chronology.getISOUTC();\n+        return ChronologyType.iso().getChronologyUTC();\n     }\n \n }\n--- a/JodaTime/src/java/org/joda/time/TimeOfDay.java\n+++ b/JodaTime/src/java/org/joda/time/TimeOfDay.java\n      * @since 1.1\n      */\n     public TimeOfDay(DateTimeZone zone) {\n-        super(Chronology.getISO(zone));\n+        super(ChronologyType.iso().getChronology(zone));\n     }\n \n     /**\n--- a/JodaTime/src/java/org/joda/time/YearMonthDay.java\n+++ b/JodaTime/src/java/org/joda/time/YearMonthDay.java\n      * @since 1.1\n      */\n     public YearMonthDay(DateTimeZone zone) {\n-        super(Chronology.getISO(zone));\n+        super(ChronologyType.iso().getChronology(zone));\n     }\n \n     /**\n--- a/JodaTime/src/java/org/joda/time/base/BaseInterval.java\n+++ b/JodaTime/src/java/org/joda/time/base/BaseInterval.java\n import java.io.Serializable;\n \n import org.joda.time.Chronology;\n+import org.joda.time.ChronologyType;\n import org.joda.time.DateTimeUtils;\n import org.joda.time.MutableInterval;\n import org.joda.time.ReadWritableInterval;\n         super();\n         if (start == null && end == null) {\n             iStartMillis = iEndMillis = DateTimeUtils.currentTimeMillis();\n-            iChronology = Chronology.getISO();\n+            iChronology = ChronologyType.iso().getChronology();\n         } else {\n             iChronology = DateTimeUtils.getInstantChronology(start);\n             iStartMillis = DateTimeUtils.getInstantMillis(start);\n--- a/JodaTime/src/java/org/joda/time/convert/AbstractConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/AbstractConverter.java\n package org.joda.time.convert;\n \n import org.joda.time.Chronology;\n+import org.joda.time.ChronologyType;\n import org.joda.time.DateTimeUtils;\n import org.joda.time.DateTimeZone;\n import org.joda.time.PeriodType;\n      * @return the chronology, never null\n      */\n     public Chronology getChronology(Object object, DateTimeZone zone) {\n-        return Chronology.getISO(zone);\n+        return ChronologyType.iso().getChronology(zone);\n     }\n \n     /**\n--- a/JodaTime/src/java/org/joda/time/convert/CalendarConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/CalendarConverter.java\n import java.util.GregorianCalendar;\n \n import org.joda.time.Chronology;\n+import org.joda.time.ChronologyType;\n import org.joda.time.DateTimeZone;\n import org.joda.time.chrono.BuddhistChronology;\n import org.joda.time.chrono.GJChronology;\n+import org.joda.time.chrono.GregorianChronology;\n+import org.joda.time.chrono.JulianChronology;\n \n /**\n  * CalendarConverter converts a java util Calendar to an instant or partial.\n             GregorianCalendar gc = (GregorianCalendar) object;\n             long cutover = gc.getGregorianChange().getTime();\n             if (cutover == Long.MIN_VALUE) {\n-                return Chronology.getGregorian(zone);\n+                return GregorianChronology.getInstance(zone);\n             } else if (cutover == Long.MAX_VALUE) {\n-                return Chronology.getJulian(zone);\n+                return JulianChronology.getInstance(zone);\n             } else {\n                 return GJChronology.getInstance(zone, cutover, 4);\n             }\n         } else {\n-            return Chronology.getISO(zone);\n+            return ChronologyType.iso().getChronology(zone);\n         }\n     }\n ", "timestamp": 1125865210, "metainfo": ""}