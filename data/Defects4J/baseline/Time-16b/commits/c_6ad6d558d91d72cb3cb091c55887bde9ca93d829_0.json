{"sha": "6ad6d558d91d72cb3cb091c55887bde9ca93d829", "log": "Added withDateTimeZone method.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/AbstractInstant.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractInstant.java\n         return field.get(getMillis());\n     }\n \n+    /**\n+     * Gets a copy of this instant with a different time zone.\n+     * <p>\n+     * The returned object will be a new instance of the same implementation\n+     * type. Only the time zone of the chronology will change, the millis are\n+     * kept. Immutable subclasses may return <code>this</code> if appropriate.\n+     *\n+     * @param newDateTimeZone  the new time zone\n+     * @return a copy of this instant with a different time zone\n+     */\n+    public ReadableInstant withDateTimeZone(DateTimeZone newDateTimeZone) {\n+        Chronology newChronology = getChronology();\n+        newChronology = newChronology == null ? ISOChronology.getInstance(newDateTimeZone)\n+            : newChronology.withDateTimeZone(newDateTimeZone);\n+        return withChronology(newChronology);\n+    }\n+\n     // Conversion\n     //-----------------------------------------------------------------------\n     /**", "timestamp": 1073706466, "metainfo": ""}