{"sha": "a7416aad902ed34ca44f03b1edd3d6ea6f9c721f", "log": "DateTimeZone.forID(String) now case-sensitive Use ConcurrentHashMap instead of synchronized  ", "commit": "\n--- a/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java\n+++ b/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java\n import java.lang.ref.SoftReference;\n import java.util.Map;\n import java.util.Set;\n-import java.util.TreeMap;\n import java.util.TreeSet;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.joda.time.DateTimeZone;\n \n      * @param id  the id to load\n      * @return the loaded zone\n      */\n-    public synchronized DateTimeZone getZone(String id) {\n+    public DateTimeZone getZone(String id) {\n         if (id == null) {\n             return null;\n         }\n      * \n      * @return the zone ids\n      */\n-    public synchronized Set<String> getAvailableIDs() {\n+    public Set<String> getAvailableIDs() {\n         // Return a copy of the keys rather than an umodifiable collection.\n         // This prevents ConcurrentModificationExceptions from being thrown by\n         // some JVMs if zones are opened while this set is iterated over.\n      * @return the map\n      */\n     private static Map<String, Object> loadZoneInfoMap(InputStream in) throws IOException {\n-        Map<String, Object> map = new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER);\n+        Map<String, Object> map = new ConcurrentHashMap<String, Object>();\n         DataInputStream din = new DataInputStream(in);\n         try {\n             readZoneInfoMap(din, map);\n--- a/JodaTime/src/test/java/org/joda/time/TestDateTimeZone.java\n+++ b/JodaTime/src/test/java/org/joda/time/TestDateTimeZone.java\n         \n         try {\n             DateTimeZone.forID(\"SST\");\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            DateTimeZone.forID(\"europe/london\");\n             fail();\n         } catch (IllegalArgumentException ex) {}\n         try {", "timestamp": 1288212084, "metainfo": ""}