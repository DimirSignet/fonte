{"sha": "3b008e5106799fc098c3bb25035673e72025e781", "log": "http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25454 StringUtils.replaceChars(String,String,String).   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Phil Steitz\n  * @author Al Chou\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.120 2003/11/29 13:24:33 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.121 2003/12/15 01:51:36 ggregory Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * @since 2.0\n      */\n     public static String replaceChars(String str, String searchChars, String replaceChars) {\n-        if (str == null || str.length() == 0 || searchChars == null || searchChars.length() == 0) {\n+        if (StringUtils.isEmpty(str) || StringUtils.isEmpty(searchChars)) {\n             return str;\n         }\n-        char[] chars = str.toCharArray();\n-        int len = chars.length;\n-        boolean modified = false;\n-        for (int i = 0, isize = searchChars.length(); i < isize; i++) {\n-            char searchChar = searchChars.charAt(i);\n-            if (replaceChars == null || i >= replaceChars.length()) {\n-                // delete\n-                int pos = 0;\n-                for (int j = 0; j < len; j++) {\n-                    if (chars[j] != searchChar) {\n-                        chars[pos++] = chars[j];\n-                    } else {\n-                        modified = true;\n-                    }\n+        if (replaceChars == null) {\n+            replaceChars = \"\";\n+        }\n+        StringBuffer buffer = new StringBuffer(str.length());\n+        for (int i = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n+            int index = searchChars.indexOf(ch);\n+            if (index >= 0) {\n+                if (index < replaceChars.length()) {\n+                    buffer.append(replaceChars.charAt(index));\n                 }\n-                len = pos;\n             } else {\n-                // replace\n-                for (int j = 0; j < len; j++) {\n-                    if (chars[j] == searchChar) {\n-                        chars[j] = replaceChars.charAt(i);\n-                        modified = true;\n-                    }\n-                }\n-            }\n-        }\n-        if (modified == false) {\n-            return str;\n-        }\n-        return new String(chars, 0, len);\n+                buffer.append(ch);\n+            }\n+        }\n+        return buffer.toString();\n     }\n \n     // Overlay\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author Phil Steitz\n- * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @author Gary D. Gregory\n  * @author Al Chou\n- * @version $Id: StringUtilsTest.java,v 1.56 2003/11/23 20:44:39 psteitz Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.57 2003/12/15 01:52:32 ggregory Exp $\n  */\n public class StringUtilsTest extends TestCase {\n     \n         assertEquals(\"\", StringUtils.replace(\"foofoofoo\", \"foo\", \"\"));\n         assertEquals(\"barbarbar\", StringUtils.replace(\"foofoofoo\", \"foo\", \"bar\"));\n         assertEquals(\"farfarfar\", StringUtils.replace(\"foofoofoo\", \"oo\", \"ar\"));\n-    }\n+       }\n     \n     public void testReplace_StringStringStringInt() {\n         assertEquals(null, StringUtils.replace(null, null, null, 2));\n     }\n     \n     public void testReplaceChars_StringStringString() {\n-        assertEquals(\"jelly\", StringUtils.replaceChars(\"hello\", \"ho\", \"jy\"));\n-\n         assertEquals(null, StringUtils.replaceChars(null, null, null));\n         assertEquals(null, StringUtils.replaceChars(null, \"\", null));\n         assertEquals(null, StringUtils.replaceChars(null, \"a\", null));\n         assertEquals(\"ayya\", StringUtils.replaceChars(\"abcba\", \"bc\", \"y\"));\n         assertEquals(\"ayzya\", StringUtils.replaceChars(\"abcba\", \"bc\", \"yzx\"));\n         \n-        assertSame(\"abcba\", StringUtils.replaceChars(\"abcba\", \"z\", \"w\"));\n+        assertEquals(\"abcba\", StringUtils.replaceChars(\"abcba\", \"z\", \"w\"));\n+        // Comment out for now, delete later when discussion completes [Gary Gregory, Dec 14 2003]\n+        //assertSame(\"abcba\", StringUtils.replaceChars(\"abcba\", \"z\", \"w\"));\n+        \n+        // Javadoc examples:\n+        assertEquals(\"jelly\", StringUtils.replaceChars(\"hello\", \"ho\", \"jy\"));\n+        assertEquals(\"ayzya\", StringUtils.replaceChars(\"abcba\", \"bc\", \"yz\"));\n+        assertEquals(\"ayya\", StringUtils.replaceChars(\"abcba\", \"bc\", \"y\"));\n+        assertEquals(\"ayzya\", StringUtils.replaceChars(\"abcba\", \"bc\", \"yzx\"));\n+        \n+        // From http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25454\n+        assertEquals(\"bcc\", StringUtils.replaceChars(\"abc\", \"ab\", \"bc\"));\n+        assertEquals(\"q651.506bera\", StringUtils.replaceChars(\"d216.102oren\", \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\",\n+                \"nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM567891234\"));\n     }\n     \n     public void testOverlayString_StringStringIntInt() {", "timestamp": 1071453152, "metainfo": ""}