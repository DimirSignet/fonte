{"sha": "9d04c1fc837aec59bf42cbf09d727468726f04ed", "log": "Remove dead code   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n+++ b/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n  * @author Gary Gregory\n  * @author Pete Gieser\n  * @since 1.0\n- * @version $Id: ToStringStyle.java,v 1.33 2004/10/08 00:07:59 scolebourne Exp $\n+ * @version $Id: ToStringStyle.java,v 1.34 2004/10/16 18:13:34 scolebourne Exp $\n  */\n public abstract class ToStringStyle implements Serializable {\n \n \n     }\n \n-    //----------------------------------------------------------------------------\n-\n-// Removed, as the XML style needs more work for escaping characters, arrays,\n-// collections, maps and embedded beans.\n-//    /**\n-//     * ToStringStyle that outputs in XML style\n-//     */\n-//    private static class XMLToStringStyle extends ToStringStyle {\n-//        \n-//        /**\n-//         * Constructor - use the static constant rather than instantiating.\n-//         */\n-//        private XMLToStringStyle() {\n-//            super();\n-//            nullText = \"null\";\n-//            sizeStartText = \"size=\";\n-//            sizeEndText = \"\";\n-//        }\n-//        \n-//        /**\n-//         * @see ToStringStyle#appendStart(StringBuffer, Object)\n-//         */\n-//        public void appendStart(StringBuffer buffer, Object object) {\n-//            buffer.append('<');\n-//            buffer.append(getShortClassName(object.getClass()));\n-//            buffer.append(\" class=\\\"\");\n-//            appendClassName(buffer, object);\n-//            buffer.append(\"\\\" hashCode=\\\"\");\n-//            appendIdentityHashCode(buffer, object);\n-//            buffer.append(\"\\\">\");\n-//            buffer.append(SystemUtils.LINE_SEPARATOR);\n-//            buffer.append(\"  \");\n-//        }\n-//\n-//        /**\n-//         * @see ToStringStyle#appendFieldStart(StringBuffer, String)\n-//         */\n-//        protected void appendFieldStart(StringBuffer buffer, String fieldName) {\n-//            buffer.append('<');\n-//            buffer.append(fieldName);\n-//            buffer.append('>');\n-//        }\n-//\n-//        /**\n-//         * @see ToStringStyle#appendFieldEnd(StringBuffer, String)\n-//         */\n-//        protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\n-//            buffer.append(\"</\");\n-//            buffer.append(fieldName);\n-//            buffer.append('>');\n-//            buffer.append(SystemUtils.LINE_SEPARATOR);\n-//            buffer.append(\"  \");\n-//        }\n-//\n-//        /**\n-//         * @see ToStringStyle#appendEnd(StringBuffer, Object)\n-//         */\n-//        public void appendEnd(StringBuffer buffer, Object object) {\n-//            int len = buffer.length();\n-//            if (len > 2 && buffer.charAt(len - 1) == ' ' && buffer.charAt(len - 2) == ' ') {\n-//                buffer.setLength(len - 2);\n-//            }\n-//            buffer.append(\"</\");\n-//            buffer.append(getShortClassName(object.getClass()));\n-//            buffer.append(\"\\\">\");\n-//        }\n-//\n-//    }\n-\n }", "timestamp": 1097950414, "metainfo": ""}