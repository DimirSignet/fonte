{"sha": "8980b60033b1c6853cbca593ec89d3d332adf7dc", "log": "Fix bug with implicit namespaces across modules. Contributed by bolinfest Fixes issue 261  Revision created by MOE tool push_codebase.  R=johnlenz DELTA=17  (15 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=337977   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n         } else {\n           // In this case, the name was implicitly provided by two independent\n           // modules. We need to move this code up to a common module.\n-          int indexOfDot = namespace.indexOf('.');\n+          int indexOfDot = namespace.lastIndexOf('.');\n           if (indexOfDot == -1) {\n             // Any old place is fine.\n             compiler.getNodeForCodeInsertion(minimumModule)\n--- a/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java\n+++ b/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java\n         });\n   }\n \n+  public void testProvideInIndependentModules4() {\n+    // Regression test for bug 261:\n+    // http://code.google.com/p/closure-compiler/issues/detail?id=261\n+    test(\n+        createModuleStar(\n+            \"goog.provide('apps');\",\n+            \"goog.provide('apps.foo.bar.B');\",\n+            \"goog.provide('apps.foo.bar.C');\"),\n+        new String[] {\n+            \"var apps = {};apps.foo = {};apps.foo.bar = {}\",\n+            \"apps.foo.bar.B = {};\",\n+            \"apps.foo.bar.C = {};\",\n+        });\n+  }\n+\n   public void testRequireOfBaseGoog() {\n     test(\"goog.require('goog');\",\n          \"\", MISSING_PROVIDE_ERROR);", "timestamp": 1287165105, "metainfo": ""}