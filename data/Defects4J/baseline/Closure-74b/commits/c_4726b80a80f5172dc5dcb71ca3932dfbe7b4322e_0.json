{"sha": "4726b80a80f5172dc5dcb71ca3932dfbe7b4322e", "log": "Fix the for...in edge case in RemoveUnusedVars.  R=johnlenz DELTA=12  (10 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=173010   ", "commit": "\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n           boolean assignedToUnknownValue = false;\n           boolean hasPropertyAssign = false;\n \n-          if (var.getParentNode().getType() == Token.VAR) {\n+          if (var.getParentNode().getType() == Token.VAR &&\n+              !NodeUtil.isForIn(var.getParentNode().getParent())) {\n             Node value = var.getInitialValue();\n             assignedToUnknownValue = value != null &&\n                 !NodeUtil.isLiteralValue(value, true);\n           } else {\n-            // This was initialized to a function arg or a catch param.\n+            // This was initialized to a function arg or a catch param\n+            // or a for...in variable.\n             assignedToUnknownValue = true;\n           }\n \n--- a/test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java\n+++ b/test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java\n          \"var x=newNodeInDom(doc);x.innerHTML=\\\"new text\\\"\");\n   }\n \n+  public void testUsedPropAssign7() {\n+    testSame(\"var x = {}; for (x in alert()) { x.foo = 3; }\");\n+  }\n+\n+  public void testUsedPropAssign8() {\n+    testSame(\"for (var x in alert()) { x.foo = 3; }\");\n+  }\n+\n   public void testDependencies1() {\n     test(\"var a = 3; var b = function() { alert(a); };\", \"\");\n   }", "timestamp": 1282233495, "metainfo": ""}