{"sha": "6a6e135c75df2ee2d8a03c010d045000b23007f0", "log": "Cache expensive hashcode calculations. (John)  Revision created by MOE tool push_codebase. MOE_MIGRATION=   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n \n import static com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;\n \n+import com.google.common.base.Preconditions;\n import com.google.common.collect.ImmutableSet;\n import com.google.javascript.rhino.ErrorReporter;\n \n   private static final long serialVersionUID = 1L;\n \n   Set<JSType> alternates;\n+  private final int hashcode;\n \n   /**\n    * Creates a union type.\n   UnionType(JSTypeRegistry registry, Set<JSType> alternates) {\n     super(registry);\n     this.alternates = alternates;\n+    this.hashcode = this.alternates.hashCode();\n   }\n \n   /**\n \n   @Override\n   public int hashCode() {\n-    return alternates.hashCode();\n+    return this.hashcode;\n   }\n \n   @Override\n       resolvedTypes.add(alternate);\n     }\n     if (changed) {\n-      alternates = resolvedTypes.build();\n+      Set<JSType> newAlternates = resolvedTypes.build();\n+      Preconditions.checkState(newAlternates.hashCode() == this.hashcode);\n+      alternates = newAlternates;\n     }\n     return this;\n   }", "timestamp": 1268438949, "metainfo": ""}