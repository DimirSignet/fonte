{"sha": "8cef00180a5cf67d047919c89668a6405030dbab", "log": "Skip checks if constructor has no instance type.  Fixes issue 1002 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47053164", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n    * Returns true if any type in the chain has an implicitCast annotation for\n    * the given property.\n    */\n-  private boolean propertyIsImplicitCast(ObjectType type, String prop) {\n+  private static boolean propertyIsImplicitCast(ObjectType type, String prop) {\n     for (; type != null; type = type.getImplicitPrototype()) {\n       JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);\n       if (docInfo != null && docInfo.isImplicitCast()) {\n     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();\n     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {\n       FunctionType fnType = type.toMaybeFunctionType();\n-      if (fnType != null) {\n+      if (fnType != null && fnType.hasInstanceType()) {\n         visitParameterList(t, n, fnType);\n         ensureTyped(t, n, fnType.getInstanceType());\n       } else {\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"Property unknownProp never defined on obj\");\n   }\n \n+  public void testIssue1002() throws Exception {\n+    testTypes(\n+        \"/** @interface */\" +\n+        \"var I = function() {};\" +\n+        \"/** @constructor @implements {I} */\" +\n+        \"var A = function() {};\" +\n+        \"/** @constructor @implements {I} */\" +\n+        \"var B = function() {};\" +\n+        \"var f = function() {\" +\n+        \"  if (A === B) {\" +\n+        \"    new B();\" +\n+        \"  }\" +\n+        \"};\");\n+  }\n+\n   /**\n    * Tests that the || operator is type checked correctly, that is of\n    * the type of the first argument or of the second argument. See\n     return t.getTypedPercent();\n   }\n \n-  private ObjectType getInstanceType(Node js1Node) {\n+  private static ObjectType getInstanceType(Node js1Node) {\n     JSType type = js1Node.getFirstChild().getJSType();\n     assertNotNull(type);\n     assertTrue(type instanceof FunctionType);", "timestamp": 1369360189, "metainfo": ""}