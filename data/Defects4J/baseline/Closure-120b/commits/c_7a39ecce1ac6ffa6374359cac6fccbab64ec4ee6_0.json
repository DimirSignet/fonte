{"sha": "7a39ecce1ac6ffa6374359cac6fccbab64ec4ee6", "log": "Fixes to graph package ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49968582", "commit": "\n--- a/src/com/google/javascript/jscomp/graph/AdjacencyGraph.java\n+++ b/src/com/google/javascript/jscomp/graph/AdjacencyGraph.java\n  */\n public interface AdjacencyGraph<N, E> {\n   /** Gets an immutable list of all nodes. */\n-  Collection<GraphNode<N, E>> getNodes();\n+  Collection<? extends GraphNode<N, E>> getNodes();\n \n   /**\n    * Gets a node from the graph given a value. Values equality are compared\n--- a/src/com/google/javascript/jscomp/graph/Graph.java\n+++ b/src/com/google/javascript/jscomp/graph/Graph.java\n \n   /** Gets an immutable list of all nodes. */\n   @Override\n-  public abstract Collection<GraphNode<N, E>> getNodes();\n+  public abstract Collection<? extends GraphNode<N, E>> getNodes();\n \n   /** Gets an immutable list of all edges. */\n   public abstract List<? extends GraphEdge<N, E>> getEdges();\n--- a/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java\n+++ b/src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java\n   }\n \n   @Override\n-  public Collection<GraphNode<N, E>> getNodes() {\n-    return Collections.<GraphNode<N, E>>unmodifiableCollection(nodes.values());\n+  public Collection<DiGraphNode<N, E>> getNodes() {\n+    return Collections.<DiGraphNode<N, E>>unmodifiableCollection(nodes.values());\n   }\n \n   @Override", "timestamp": 1375753448, "metainfo": ""}