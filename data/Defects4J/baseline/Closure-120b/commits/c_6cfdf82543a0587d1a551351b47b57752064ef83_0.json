{"sha": "6cfdf82543a0587d1a551351b47b57752064ef83", "log": "Add option to test pass before type check. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46876900", "commit": "\n--- a/test/com/google/javascript/jscomp/CompilerTestCase.java\n+++ b/test/com/google/javascript/jscomp/CompilerTestCase.java\n   /** Error level reported by type checker. */\n   private CheckLevel typeCheckLevel;\n \n+  /** Whether to the test compiler pass before the type check. */\n+  protected boolean runTypeCheckAfterProcessing = false;\n+\n   /** Whether the Normalize pass runs before pass being tested. */\n   private boolean normalizeEnabled = false;\n \n         // Running it twice can cause unpredictable behavior because duplicate\n         // objects for the same type are created, and the type system\n         // uses reference equality to compare many types.\n-        if (typeCheckEnabled && i == 0) {\n+        if (!runTypeCheckAfterProcessing && typeCheckEnabled && i == 0) {\n           TypeCheck check = createTypeCheck(compiler, typeCheckLevel);\n           check.processForTesting(externsRoot, mainRoot);\n         }\n         }\n         if (checkLineNumbers) {\n           (new LineNumberCheck(compiler)).process(externsRoot, mainRoot);\n+        }\n+\n+        if (runTypeCheckAfterProcessing && typeCheckEnabled && i == 0) {\n+          TypeCheck check = createTypeCheck(compiler, typeCheckLevel);\n+          check.processForTesting(externsRoot, mainRoot);\n         }\n \n         hasCodeChanged = hasCodeChanged || recentChange.hasCodeChanged();", "timestamp": 1369092122, "metainfo": ""}