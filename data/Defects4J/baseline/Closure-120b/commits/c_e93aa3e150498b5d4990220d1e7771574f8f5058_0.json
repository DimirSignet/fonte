{"sha": "e93aa3e150498b5d4990220d1e7771574f8f5058", "log": "Add source map support to the ant task. Fixes issue 922 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42923944", "commit": "\n--- a/src/com/google/javascript/jscomp/ant/CompileTask.java\n+++ b/src/com/google/javascript/jscomp/ant/CompileTask.java\n \n package com.google.javascript.jscomp.ant;\n \n+import com.google.common.base.Strings;\n import com.google.common.collect.Lists;\n import com.google.javascript.jscomp.CheckLevel;\n import com.google.javascript.jscomp.CommandLineRunner;\n import com.google.javascript.jscomp.CompilerOptions;\n import com.google.javascript.jscomp.DiagnosticGroup;\n import com.google.javascript.jscomp.DiagnosticGroups;\n-import com.google.javascript.jscomp.SourceFile;\n import com.google.javascript.jscomp.MessageFormatter;\n import com.google.javascript.jscomp.Result;\n+import com.google.javascript.jscomp.SourceFile;\n+import com.google.javascript.jscomp.SourceMap;\n+import com.google.javascript.jscomp.SourceMap.Format;\n import com.google.javascript.jscomp.WarningLevel;\n \n import org.apache.tools.ant.BuildException;\n \n import java.io.File;\n import java.io.FileOutputStream;\n+import java.io.FileWriter;\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.nio.charset.Charset;\n   private final List<FileList> sourceFileLists;\n   private final List<Path> sourcePaths;\n   private final List<Warning> warnings;\n+  private String sourceMapFormat;\n+  private File sourceMapOutputFile;\n \n   public CompileTask() {\n     this.languageIn = CompilerOptions.LanguageMode.ECMASCRIPT3;\n \n       Result result = compiler.compile(externs, sources, options);\n       if (result.success) {\n-        writeResult(compiler.toSource());\n+        StringBuilder source = new StringBuilder(compiler.toSource());\n+        if (result.sourceMap != null) {\n+          flushSourceMap(result.sourceMap);\n+          source.append(System.getProperty(\"line.separator\"));\n+          source.append(\"//@ sourceMappingURL=\" + sourceMapOutputFile.getName());\n+        }\n+        writeResult(source.toString());\n       } else {\n         throw new BuildException(\"Compilation failed.\");\n       }\n     } else {\n       log(\"None of the files changed. Compilation skipped.\");\n+    }\n+  }\n+\n+  private void flushSourceMap(SourceMap sourceMap) {\n+    try {\n+      FileWriter out = new FileWriter(sourceMapOutputFile);\n+      sourceMap.appendTo(out, sourceMapOutputFile.getName());\n+      out.close();\n+    } catch (IOException e) {\n+      throw new BuildException(\"Cannot write sourcemap to file.\", e);\n     }\n   }\n \n       options.setWarningLevel(group, level);\n     }\n \n+    if (!Strings.isNullOrEmpty(sourceMapFormat)) {\n+      options.sourceMapFormat = Format.valueOf(sourceMapFormat);\n+    }\n+\n+    if (sourceMapOutputFile != null) {\n+      File parentFile = sourceMapOutputFile.getParentFile();\n+      if (parentFile.mkdirs()) {\n+        log(\"Created missing parent directory \" + parentFile, Project.MSG_DEBUG);\n+      }\n+      options.sourceMapOutputPath = parentFile.getAbsolutePath();\n+    }\n     return options;\n   }\n \n     }\n     return fileLastModified;\n   }\n+\n+  public void setSourceMapFormat(String format) {\n+    this.sourceMapFormat = format;\n+  }\n+\n+  public void setSourceMapOutputFile(File sourceMapOutputFile) {\n+    this.sourceMapOutputFile = sourceMapOutputFile;\n+  }\n }", "timestamp": 1361568629, "metainfo": ""}