{"sha": "c905820b3657eedd5a92b184c04a43222bfa9027", "log": "Workaround failure with the upcoming compiler release. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44810836", "commit": "\n--- a/src/com/google/javascript/jscomp/ReplaceIdGenerators.java\n+++ b/src/com/google/javascript/jscomp/ReplaceIdGenerators.java\n \n   private final boolean generatePseudoNames;\n \n-  public static final RenamingMap UNIQUE = new RenamingMap() {\n-    @Override public String get(String value) { return null; }};\n+  public static final RenamingMap UNIQUE = new UniqueRenamingToken();\n+\n+  private static class UniqueRenamingToken implements RenamingMap {\n+    @Override public String get(String value) { return null; }\n+  }\n \n   public ReplaceIdGenerators(\n       AbstractCompiler compiler, Map<String, RenamingMap> idGens,\n       for (Entry<String, RenamingMap> gen : idGens.entrySet()) {\n         String name = gen.getKey();\n         RenamingMap map = gen.getValue();\n-        if (map == ReplaceIdGenerators.UNIQUE) {\n+        if (map instanceof UniqueRenamingToken) {\n           nameGenerators.put(name,\n               createNameSupplier(\n                   RenameStrategy.INCONSISTENT, previousMap.get(name)));", "timestamp": 1365034909, "metainfo": ""}