{"sha": "e9dd4160386621810c60a657b81ee40cc4c0a915", "log": "Automated g4 rollback  *** Reason for rollback ***  Fixed builds  *** Original change description ***  Automated g4 rollback  *** Reason for rollback ***  Breaks builds  *** Original change description ***  Report an error if a function declaration is not compatible with strict mode.  R=nicksantos   Revision created by MOE tool push_codebase. MOE_MIGRATION=6076   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DiagnosticGroups.java\n+++ b/src/com/google/javascript/jscomp/DiagnosticGroups.java\n           StrictModeCheck.ARGUMENTS_DECLARATION,\n           StrictModeCheck.ARGUMENTS_ASSIGNMENT,\n           StrictModeCheck.DELETE_VARIABLE,\n-          StrictModeCheck.DUPLICATE_OBJECT_KEY);\n+          StrictModeCheck.DUPLICATE_OBJECT_KEY,\n+          StrictModeCheck.BAD_FUNCTION_DECLARATION);\n \n   public static final DiagnosticGroup CHECK_PROVIDES =\n       DiagnosticGroups.registerGroup(\"checkProvides\",\n--- a/src/com/google/javascript/jscomp/StrictModeCheck.java\n+++ b/src/com/google/javascript/jscomp/StrictModeCheck.java\n       \"JSC_DUPLICATE_OBJECT_KEY\",\n       \"object literals cannot contain duplicate keys in ES5 strict mode\");\n \n+  static final DiagnosticType BAD_FUNCTION_DECLARATION = DiagnosticType.error(\n+      \"JSC_BAD_FUNCTION_DECLARATION\",\n+      \"functions can only be declared at top level or immediately within \" +\n+      \"another function in ES5 strict mode\");\n+\n   private final AbstractCompiler compiler;\n   private final boolean noVarCheck;\n   private final boolean noCajaChecks;\n   }\n \n   @Override public void visit(NodeTraversal t, Node n, Node parent) {\n-    if (n.isName()) {\n+    if (n.isFunction()) {\n+      checkFunctionUse(t, n);\n+    } else if (n.isName()) {\n       if (!isDeclaration(n)) {\n         checkNameUse(t, n);\n       }\n       checkObjectLiteral(t, n);\n     } else if (n.isLabel()) {\n       checkLabel(t, n);\n+    }\n+  }\n+\n+  /** Checks that the function is used legally. */\n+  private void checkFunctionUse(NodeTraversal t, Node n) {\n+    if (NodeUtil.isFunctionDeclaration(n) && !NodeUtil.isHoistedFunctionDeclaration(n)) {\n+      t.report(n, BAD_FUNCTION_DECLARATION);\n     }\n   }\n \n--- a/test/com/google/javascript/jscomp/StrictModeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/StrictModeCheckTest.java\n         \"  set appData(data) { this.appData_ = data; }\\n\" +\n         \"};\");\n   }\n+\n+  public void testFunctionDecl() {\n+    testSame(\"function g() {}\");\n+    testSame(\"var g = function() {};\");\n+    testSame(\"(function() {})();\");\n+    testSame(\"(function() {});\");\n+    testSame(inFn(\"function g() {}\"));\n+    testSame(inFn(\"var g = function() {};\"));\n+    testSame(inFn(\"(function() {})();\"));\n+    testSame(inFn(\"(function() {});\"));\n+\n+    test(\"{function g() {}}\", null, StrictModeCheck.BAD_FUNCTION_DECLARATION);\n+    testSame(\"{var g = function () {}}\");\n+    testSame(\"{(function g() {})()}\");\n+\n+    test(\"var x;if (x) { function g(){} }\", null,\n+        StrictModeCheck.BAD_FUNCTION_DECLARATION);\n+    testSame(\"var x;if (x) {var g = function () {}}\");\n+    testSame(\"var x;if (x) {(function g() {})()}\");\n+  }\n+\n+  public void testFunctionDecl2() {\n+    test(\"{function g() {}}\", null, StrictModeCheck.BAD_FUNCTION_DECLARATION);\n+  }\n+\n+  private String inFn(String body) {\n+    return \"function func() {\" + body + \"}\";\n+  }\n }", "timestamp": 1357266719, "metainfo": ""}