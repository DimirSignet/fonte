{"sha": "c0319a67683315956ce33bdeba995ac4d9dffde3", "log": "Tighten the suspicious-comment check to avoid false positives. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49503714", "commit": "\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n    * Check to see if the given block comment looks like it should be JSDoc.\n    */\n   private void handleBlockComment(Comment comment) {\n-    Pattern p = Pattern.compile(\"(/|(\\n[ \\t]*))\\\\*[ \\t]*@[a-zA-Z]\");\n+    Pattern p = Pattern.compile(\"(/|(\\n[ \\t]*))\\\\*[ \\t]*@[a-zA-Z]+[ \\t\\n{]\");\n     if (p.matcher(comment.getValue()).find()) {\n       errorReporter.warning(\n           SUSPICIOUS_COMMENT_WARNING,\n--- a/test/com/google/javascript/jscomp/parsing/ParserTest.java\n+++ b/test/com/google/javascript/jscomp/parsing/ParserTest.java\n \n   public void testSuspiciousBlockCommentWarning6() {\n     parse(\"/* @type{number} */ var x = 3;\", SUSPICIOUS_COMMENT_WARNING);\n+  }\n+\n+  public void testSuspiciousBlockCommentWarning7() {\n+    // jsdoc tags contain letters only, no underscores etc.\n+    parse(\"/* @cc_on */ var x = 3;\");\n+  }\n+\n+  public void testSuspiciousBlockCommentWarning8() {\n+    // a jsdoc tag can't be immediately followed by a paren\n+    parse(\"/* @TODO(username) */ var x = 3;\");\n   }\n \n   public void testCatchClauseForbidden() {", "timestamp": 1374100015, "metainfo": ""}