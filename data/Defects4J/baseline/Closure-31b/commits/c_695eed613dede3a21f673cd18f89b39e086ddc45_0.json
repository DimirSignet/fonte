{"sha": "695eed613dede3a21f673cd18f89b39e086ddc45", "log": "Fix $super in variable name shadowing.  R=johnlenz DELTA=17  (14 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=912   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ShadowVariables.java\n+++ b/src/com/google/javascript/jscomp/ShadowVariables.java\n           continue;\n         }\n \n+        // Don't shadow an exported local.\n+        if (compiler.getCodingConvention().isExported(var.name, s.isLocal())) {\n+          continue;\n+        }\n+\n         // Try to look for the best shadow for the current candidate.\n         Assignment bestShadow = findBestShadow(s, var);\n         if (bestShadow == null) {\n      */\n     private Assignment findBestShadow(Scope curScope, Var candidate) {\n       // Search for the candidate starting from the most used local.\n-      TARGET: for (Assignment assignment : varsByFrequency) {\n+      for (Assignment assignment : varsByFrequency) {\n         if (assignment.oldName.startsWith(RenameVars.LOCAL_VAR_PREFIX)) {\n           if (!scopeUpRefMap.get(curScope.getRootNode()).contains(\n               assignment.oldName)) {\n--- a/test/com/google/javascript/jscomp/ShadowVariablesTest.java\n+++ b/test/com/google/javascript/jscomp/ShadowVariablesTest.java\n package com.google.javascript.jscomp;\n \n /**\n- * Unit tests for {@link ShadowVariableTest}.\n+ * Unit tests for {@link ShadowVariables}.\n  *\n  *\n  */\n          \"function c() {var d=function a(){a()}; var e=function b(){b()}}\");\n     test(\"function f(x) { return x ? function(y){} : function(z) {} }\",\n          \"function b(a) { return a ? function(a){} : function(a) {} }\");\n-\n+  }\n+\n+  public void testExportedLocal1() {\n+    test(\"function f(a) { a();a();a(); return function($super){} }\",\n+         \"function b(a) { a();a();a(); return function($super){} }\");\n+  }\n+\n+  public void testExportedLocal2() {\n+    test(\"function f($super) { $super();$super(); return function(a){} }\",\n+         \"function a($super) { $super();$super(); return function(b){} }\");\n   }\n }", "timestamp": 1300304731, "metainfo": ""}