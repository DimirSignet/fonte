{"sha": "961dbbed303010d08ffef7fad4ee0efcfd50bb55", "log": "rollback of r1694 with test cases demonstrating how Java's implementation of split() is different than javascript's  R=acleung,johnlenz DELTA=23  (23 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4016   ", "commit": "\n--- a/test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java\n  */\n public class PeepholeReplaceKnownMethodsTest extends CompilerTestCase {\n \n+  private boolean late = true;\n+\n   public PeepholeReplaceKnownMethodsTest() {\n     super(\"\");\n   }\n     fold(\"x = '\\\\ud834\\udd1e'.charCodeAt(1)\", \"x = 56606\");\n   }\n \n+  public void testFoldStringSplit() {\n+    // NOTE(nicksantos): These are cases that will have to be resolved\n+    // properly if we want to implement split()\n+    late = false;\n+    foldSame(\"x = 'abcde'.split()\");\n+    foldSame(\"x = 'abcde'.split(null)\");\n+    foldSame(\"x = 'a b c d e'.split(' ')\");\n+    foldSame(\"x = 'a b c d e'.split(' ', 0)\");\n+    foldSame(\"x = 'abcde'.split('cd')\");\n+    foldSame(\"x = 'a b c d e'.split(' ', 1)\");\n+    foldSame(\"x = 'a b c d e'.split(' ', 3)\");\n+    foldSame(\"x = 'a b c d e'.split(null, 1)\");\n+    foldSame(\"x = 'abcde'.split(/ /)\");\n+    foldSame(\"x = 'abcde'.split(' ', -1)\");\n+    foldSame(\"x = 'abcde'.split('')\");\n+    foldSame(\"x = 'aaaaa'.split('a')\");\n+\n+    late = true;\n+    foldSame(\"x = 'a b c d e'.split(' ')\");\n+  }\n+\n   public void testJoinBug() {\n     fold(\"var x = [].join();\", \"var x = '';\");\n     fold(\"var x = [x].join();\", \"var x = '' + x;\");", "timestamp": 1324515156, "metainfo": ""}