{"sha": "f2c0cb1f67ecb3315c0cb11326c9cb04db07ee8a", "log": "Don't attempt to rewrite object literal get/set definitions. Fixes issue 538.  R=acleung DELTA=26  (22 added, 0 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3104   ", "commit": "\n--- a/src/com/google/javascript/jscomp/FunctionRewriter.java\n+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java\n     Node root = compiler.parseSyntheticCode(\n         reducer.getClass().toString() + \":helper\", reducer.getHelperSource());\n     return (root != null) ? root.removeFirstChild() : null;\n+  }\n+\n+  private static boolean isReduceableFunctionExpression(Node n) {\n+    return NodeUtil.isFunctionExpression(n)\n+        && !NodeUtil.isGetOrSetKey(n.getParent());\n   }\n \n   /**\n \n     @Override\n     public Node reduce(Node node) {\n-      if (!NodeUtil.isFunctionExpression(node)) {\n+      if (!isReduceableFunctionExpression(node)) {\n         return node;\n       }\n \n \n     @Override\n     public Node reduce(Node node) {\n-      if (!NodeUtil.isFunctionExpression(node)) {\n+      if (!isReduceableFunctionExpression(node)) {\n         return node;\n       }\n \n \n     @Override\n     public Node reduce(Node node) {\n-      if (!NodeUtil.isFunctionExpression(node)) {\n+      if (!isReduceableFunctionExpression(node)) {\n         return node;\n       }\n \n \n     @Override\n     public Node reduce(Node node) {\n-      if (!NodeUtil.isFunctionExpression(node)) {\n+      if (!isReduceableFunctionExpression(node)) {\n         return node;\n       }\n \n--- a/test/com/google/javascript/jscomp/FunctionRewriterTest.java\n+++ b/test/com/google/javascript/jscomp/FunctionRewriterTest.java\n     checkCompilesToSame(\"a.prototype.foo = function(a) {return a + 1}\", 10);\n   }\n \n+  public void testIssue538() {\n+    checkCompilesToSame(      \"/** @constructor */\\n\" +\n+        \"WebInspector.Setting = function() {}\\n\" +\n+        \"WebInspector.Setting.prototype = {\\n\" +\n+        \"    get name0(){return this._name;},\\n\" +\n+        \"    get name1(){return this._name;},\\n\" +\n+        \"    get name2(){return this._name;},\\n\" +\n+        \"    get name3(){return this._name;},\\n\" +\n+        \"    get name4(){return this._name;},\\n\" +\n+        \"    get name5(){return this._name;},\\n\" +\n+        \"    get name6(){return this._name;},\\n\" +\n+        \"    get name7(){return this._name;},\\n\" +\n+        \"    get name8(){return this._name;},\\n\" +\n+        \"    get name9(){return this._name;},\\n\" +\n+        \"}\", 1);\n+  }\n+\n   private void checkCompilesTo(String src,\n                                String expectedHdr,\n                                String expectedBody,", "timestamp": 1314137609, "metainfo": ""}