{"sha": "92c4697300e8ddf06152bc0838c738d50673c1d2", "log": "MATH-1005 Array of length 1 must be handled as a special case.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/util/MathArrays.java\n+++ b/src/main/java/org/apache/commons/math3/util/MathArrays.java\n         final int len = a.length;\n         if (len != b.length) {\n             throw new DimensionMismatchException(len, b.length);\n+        }\n+\n+        if (len == 1) {\n+            // Revert to scalar multiplication.\n+            return a[0] * b[0];\n         }\n \n         final double[] prodHigh = new double[len];\n--- a/src/test/java/org/apache/commons/math3/util/MathArraysTest.java\n+++ b/src/test/java/org/apache/commons/math3/util/MathArraysTest.java\n         }\n     }\n \n+    // MATH-1005\n+    @Test\n+    public void testLinearCombinationWithSingleElementArray() {\n+        final double[] a = { 1.23456789 };\n+        final double[] b = { 98765432.1 };\n+\n+        Assert.assertEquals(a[0] * b[0], MathArrays.linearCombination(a, b), 0d);\n+    }\n+\n     @Test\n     public void testLinearCombination1() {\n         final double[] a = new double[] {", "timestamp": 1373628552, "metainfo": ""}