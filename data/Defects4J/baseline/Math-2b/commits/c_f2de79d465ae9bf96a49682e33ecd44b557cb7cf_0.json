{"sha": "f2de79d465ae9bf96a49682e33ecd44b557cb7cf", "log": "Make test reproducible.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java\n+++ b/src/test/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java\n             = new BicubicSplineInterpolatingFunction(xval, yval, zval,\n                                                      dZdX, dZdY, dZdXdY);\n         double x, y;\n-        double expected, result;\n \n         final RandomGenerator rng = new Well19937c(1234567L); // \"tol\" depends on the seed.\n         final UniformRealDistribution distX\n-            = new UniformRealDistribution(xval[0], xval[xval.length - 1]);\n+            = new UniformRealDistribution(rng, xval[0], xval[xval.length - 1]);\n         final UniformRealDistribution distY\n-            = new UniformRealDistribution(yval[0], yval[yval.length - 1]);\n+            = new UniformRealDistribution(rng, yval[0], yval[yval.length - 1]);\n \n         final int numSamples = 50;\n         final double tol = 6;\n         BivariateFunction bcf = new BicubicSplineInterpolatingFunction(xval, yval, zval,\n                                                                        dZdX, dZdY, dZdXdY);\n         double x, y;\n-        double expected, result;\n \n         final RandomGenerator rng = new Well19937c(1234567L); // \"tol\" depends on the seed.\n         final UniformRealDistribution distX", "timestamp": 1370038928, "metainfo": ""}