{"sha": "22362f49c9a8d772707a821f48654a3655ff4f13", "log": "Use erfinv in the normal distribution.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java\n \n import org.apache.commons.math3.exception.NotStrictlyPositiveException;\n import org.apache.commons.math3.exception.NumberIsTooLargeException;\n+import org.apache.commons.math3.exception.OutOfRangeException;\n import org.apache.commons.math3.exception.util.LocalizedFormats;\n import org.apache.commons.math3.special.Erf;\n import org.apache.commons.math3.util.FastMath;\n         return 0.5 * (1 + Erf.erf(dev / (standardDeviation * SQRT2)));\n     }\n \n+    /** {@inheritDoc} */\n+    @Override\n+    public double inverseCumulativeProbability(final double p) throws OutOfRangeException {\n+        if (p < 0.0 || p > 1.0) {\n+            throw new OutOfRangeException(p, 0, 1);\n+        }\n+        return mean + standardDeviation * SQRT2 * Erf.erfInv(2 * p - 1);\n+    }\n+\n     /**\n      * {@inheritDoc}\n      *", "timestamp": 1363347503, "metainfo": ""}