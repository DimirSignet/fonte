{"sha": "55b69a5a21f62c6f41cb9750c6af78647474821d", "log": "Multiple computations of the same value.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java\n                          double previousStageResult)\n         throws TooManyEvaluationsException {\n \n-        final double max = getMax();\n         final double min = getMin();\n+        final double diff = getMax() - min;\n \n         if (n == 0) {\n-            final double midPoint = 0.5 * (max - min);\n-            return (max - min) * computeObjectiveValue(midPoint);\n+            final double midPoint = 0.5 * diff;\n+            return diff * computeObjectiveValue(midPoint);\n         } else {\n             final long np = 1L << (n - 1);           // number of new points in this stage\n             double sum = 0;\n             // spacing between adjacent new points\n-            final double spacing = (max - min) / np;\n+            final double spacing = diff / np;\n             double x = min + 0.5 * spacing;    // the first new point\n             for (long i = 0; i < np; i++) {\n                 sum += computeObjectiveValue(x);", "timestamp": 1370252860, "metainfo": ""}