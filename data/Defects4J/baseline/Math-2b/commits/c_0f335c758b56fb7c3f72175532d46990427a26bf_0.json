{"sha": "0f335c758b56fb7c3f72175532d46990427a26bf", "log": "Simplify: no need to unbox the Integers just to compare values  ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/genetics/OnePointCrossoverTest.java\n+++ b/src/test/java/org/apache/commons/math3/genetics/OnePointCrossoverTest.java\n \n     @Test\n     public void testCrossover() {\n+        @SuppressWarnings(\"boxing\")\n         Integer[] p1 = new Integer[] {1,0,1,0,0,1,0,1,1};\n+        @SuppressWarnings(\"boxing\")\n         Integer[] p2 = new Integer[] {0,1,1,0,1,0,1,1,1};\n \n         BinaryChromosome p1c = new DummyBinaryChromosome(p1);\n             c2 = ((BinaryChromosome) pair.getSecond()).getRepresentation().toArray(c2);\n \n             // first and last values will be the same\n-            Assert.assertEquals((int) p1[0], (int) c1[0]);\n-            Assert.assertEquals((int) p2[0], (int) c2[0]);\n-            Assert.assertEquals((int) p1[p1.length-1], (int) c1[c1.length-1]);\n-            Assert.assertEquals((int) p2[p2.length-1], (int) c2[c2.length-1]);\n+            Assert.assertEquals(p1[0],  c1[0]);\n+            Assert.assertEquals(p2[0], c2[0]);\n+            Assert.assertEquals(p1[p1.length-1], c1[c1.length-1]);\n+            Assert.assertEquals(p2[p2.length-1], c2[c2.length-1]);\n             // moreover, in the above setting, the 2nd, 3rd and 7th values will be the same\n-            Assert.assertEquals((int) p1[2], (int) c1[2]);\n-            Assert.assertEquals((int) p2[2], (int) c2[2]);\n-            Assert.assertEquals((int) p1[3], (int) c1[3]);\n-            Assert.assertEquals((int) p2[3], (int) c2[3]);\n-            Assert.assertEquals((int) p1[7], (int) c1[7]);\n-            Assert.assertEquals((int) p2[7], (int) c2[7]);\n+            Assert.assertEquals(p1[2], c1[2]);\n+            Assert.assertEquals(p2[2], c2[2]);\n+            Assert.assertEquals(p1[3], c1[3]);\n+            Assert.assertEquals(p2[3], c2[3]);\n+            Assert.assertEquals(p1[7], c1[7]);\n+            Assert.assertEquals(p2[7], c2[7]);\n         }\n     }\n ", "timestamp": 1374185793, "metainfo": ""}