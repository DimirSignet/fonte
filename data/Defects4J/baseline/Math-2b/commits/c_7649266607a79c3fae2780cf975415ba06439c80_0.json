{"sha": "7649266607a79c3fae2780cf975415ba06439c80", "log": "MATH-995 Unit test.   ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java\n+++ b/src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java\n import org.apache.commons.math3.analysis.QuinticFunction;\n import org.apache.commons.math3.analysis.UnivariateFunction;\n import org.apache.commons.math3.analysis.function.Sin;\n+import org.apache.commons.math3.analysis.function.Gaussian;\n import org.apache.commons.math3.analysis.polynomials.PolynomialFunction;\n import org.apache.commons.math3.exception.TooManyEvaluationsException;\n import org.apache.commons.math3.util.FastMath;\n         }\n     }\n \n+    // Cf. MATH-995\n+    @Test\n+    public void testNormalDistributionWithLargeSigma() {\n+        final double sigma = 1000;\n+        final double mean = 0;\n+        final double factor = 1 / (sigma * FastMath.sqrt(2 * FastMath.PI));\n+        final UnivariateFunction normal = new Gaussian(factor, mean, sigma);\n+\n+        final double tol = 1e-2;\n+        final IterativeLegendreGaussIntegrator integrator =\n+            new IterativeLegendreGaussIntegrator(5, tol, tol);\n+\n+        final double a = -5000;\n+        final double b = 5000;\n+        final double s = integrator.integrate(50, normal, a, b);\n+        Assert.assertEquals(1, s, 1e-5);\n+    }\n+\n     @Test\n     public void testIssue464() {\n         final double value = 0.2;", "timestamp": 1372449965, "metainfo": ""}