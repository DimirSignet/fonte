{"sha": "ac5b0fc02ebdfb7eab8246fb063a486b33b15384", "log": "Javadoc clarifications  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/stat/Frequency.java\n+++ b/src/main/java/org/apache/commons/math3/stat/Frequency.java\n  * to combine integral types with chars in a frequency distribution will fail.\n  * </p>\n  * <p>\n+ * Float is not coerced to Double.\n+ * Since they are not Comparable with each other the user must do any necessary coercion.\n+ * Float.NaN and Double.NaN are not treated specially; they may occur in input and will\n+ * occur in output if appropriate.\n+ * </b>\n+ * <p>\n  * The values are ordered using the default (natural order), unless a\n  * <code>Comparator</code> is supplied in the constructor.</p>\n  *\n      * Returns the percentage of values that are equal to v\n      * (as a proportion between 0 and 1).\n      * <p>\n-     * Returns <code>Double.NaN</code> if no values have been added.</p>\n+     * Returns <code>Double.NaN</code> if no values have been added.\n+     * Returns 0 if at least one value has been added, but v is not comparable\n+     * to the values set.</p>\n      *\n      * @param v the value to lookup\n      * @return the proportion of values equal to v", "timestamp": 1373967354, "metainfo": ""}