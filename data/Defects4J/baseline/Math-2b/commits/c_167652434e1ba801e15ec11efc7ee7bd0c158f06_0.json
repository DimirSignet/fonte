{"sha": "167652434e1ba801e15ec11efc7ee7bd0c158f06", "log": "Small improvements to the examples.  ", "commit": "\n--- a/src/test/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java\n+++ b/src/test/java/org/apache/commons/math3/userguide/ClusterAlgorithmComparison.java\n import java.util.List;\n \n import javax.swing.JComponent;\n-import javax.swing.JFrame;\n import javax.swing.JLabel;\n \n import org.apache.commons.math3.distribution.NormalDistribution;\n import org.apache.commons.math3.random.RandomGenerator;\n import org.apache.commons.math3.random.SobolSequenceGenerator;\n import org.apache.commons.math3.random.Well19937c;\n+import org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame;\n import org.apache.commons.math3.util.FastMath;\n import org.apache.commons.math3.util.Pair;\n \n     }\n     \n     @SuppressWarnings(\"serial\")\n-    public static class Display extends JFrame {\n+    public static class Display extends ExampleFrame {\n         \n         public Display() {\n-            setTitle(\"Clustering examples\");\n+            setTitle(\"Commons-Math: Cluster algorithm comparison\");\n             setSize(800, 800);\n             \n             setLayout(new GridBagLayout());\n                 c.gridy++;\n             }            \n         }\n+\n     }\n \n     @SuppressWarnings(\"serial\")\n--- a/src/test/java/org/apache/commons/math3/userguide/ExampleUtils.java\n+++ b/src/test/java/org/apache/commons/math3/userguide/ExampleUtils.java\n \n public class ExampleUtils {\n \n-    public static void showExampleFrame(final JFrame frame) {\n+    @SuppressWarnings(\"serial\")\n+    public static class ExampleFrame extends JFrame {\n+        \n+        /**\n+         * Returns the main panel which should be printed by the screenshot action.\n+         * <p>\n+         * By default, it returns the content pane of this frame, but can be overriden\n+         * in case the frame has a global scroll pane which would cut off any offscreen content. \n+         *\n+         * @return the main panel to print\n+         */\n+        public Component getMainPanel() {\n+            return getContentPane();\n+        }\n+    }\n+\n+    public static void showExampleFrame(final ExampleFrame frame) {\n         Runnable r = new Runnable() {\n             public void run() {\n                 JMenuItem screenshot = new JMenuItem(\"Screenshot (png)\");\n                         JFileChooser fileChooser = new JFileChooser(System.getProperty(\"user.dir\"));\n                         if (fileChooser.showSaveDialog(frame) == JFileChooser.APPROVE_OPTION) {\n                           File file = fileChooser.getSelectedFile();\n-                          BufferedImage img = getScreenShot(frame.getContentPane());\n+                          BufferedImage img = getScreenShot(frame.getMainPanel());\n                           try {\n                               // write the image as a PNG\n                               ImageIO.write(img, \"png\", file);\n                         }\n                     }\n                 });\n+                \n+                JMenuItem exit = new JMenuItem(\"Exit\");\n+                exit.addActionListener(new ActionListener() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        System.exit(0);\n+                    }\n+                });\n+                \n                 JMenu menu = new JMenu(\"File\");\n                 menu.add(screenshot);\n+                menu.add(exit);\n                 JMenuBar mb = new JMenuBar();\n                 mb.add(menu);\n                 frame.setJMenuBar(mb);\n--- a/src/test/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java\n+++ b/src/test/java/org/apache/commons/math3/userguide/LowDiscrepancyGeneratorComparison.java\n import java.util.List;\n \n import javax.swing.JComponent;\n-import javax.swing.JFrame;\n import javax.swing.JLabel;\n import javax.swing.JTextArea;\n \n import org.apache.commons.math3.random.SobolSequenceGenerator;\n import org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator;\n import org.apache.commons.math3.random.UniformRandomGenerator;\n+import org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame;\n import org.apache.commons.math3.util.FastMath;\n import org.apache.commons.math3.util.Pair;\n \n     }\n     \n     @SuppressWarnings(\"serial\")\n-    public static class Display extends JFrame {\n+    public static class Display extends ExampleFrame {\n         \n         public Display() {\n-            setTitle(\"Pseudo/Quasi-random examples\");\n+            setTitle(\"Commons-Math: Pseudo/Quasi-random examples\");\n             setSize(800, 800);\n             \n             setLayout(new GridBagLayout());", "timestamp": 1370290340, "metainfo": ""}