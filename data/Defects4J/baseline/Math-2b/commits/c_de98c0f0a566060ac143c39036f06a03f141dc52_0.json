{"sha": "de98c0f0a566060ac143c39036f06a03f141dc52", "log": "Fixed accuracy of 3D Line.revert().  JIRA: MATH-938  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java\n      * @return a new instance, with reversed direction\n      */\n     public Line revert() {\n-        return new Line(zero, zero.subtract(direction));\n+        final Line reverted = new Line(this);\n+        reverted.direction = reverted.direction.negate();\n+        return reverted;\n     }\n \n     /** Get the normalized direction vector.\n--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java\n+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java\n         Assert.assertNull(l.intersection(new Line(new Vector3D(0, -4, 0), new Vector3D(1, -4, 0))));\n     }\n \n+    @Test\n+    public void testRevert() {\n+        \n+        // setup\n+        Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),\n+                             new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));\n+        Vector3D expected = line.getDirection().negate();\n+\n+        // action\n+        Line reverted = line.revert();\n+\n+        // verify\n+        Assert.assertArrayEquals(expected.toArray(), reverted.getDirection().toArray(), 0);\n+\n+    }\n+\n }", "timestamp": 1362560008, "metainfo": ""}