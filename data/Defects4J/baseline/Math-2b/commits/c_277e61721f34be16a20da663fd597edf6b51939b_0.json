{"sha": "277e61721f34be16a20da663fd597edf6b51939b", "log": "Fixed NullPointerException in 2D and 3D sub-line intersections.  Patch contributed by Andeas Huber.  JIRA: MATH-988  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java\n \n         // compute the intersection on infinite line\n         Vector3D v1D = line.intersection(subLine.line);\n+        if (v1D == null) {\n+            return null;\n+        }\n \n         // check location of point with respect to first sub-line\n         Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));\n--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java\n+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java\n \n         // compute the intersection on infinite line\n         Vector2D v2D = line1.intersection(line2);\n+        if (v2D == null) {\n+            return null;\n+        }\n \n         // check location of point with respect to first sub-line\n         Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));\n--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java\n+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java\n         Assert.assertNull(sub1.intersection(sub2, true));\n         Assert.assertNull(sub1.intersection(sub2, false));\n     }\n+    \n+    @Test\n+    public void testIntersectionNotIntersecting() throws MathIllegalArgumentException {\n+        SubLine sub1 = new SubLine(new Vector3D(1, 1, 1), new Vector3D(1.5, 1, 1));\n+        SubLine sub2 = new SubLine(new Vector3D(2, 3, 0), new Vector3D(2, 3, 0.5));\n+        Assert.assertNull(sub1.intersection(sub2, true));\n+        Assert.assertNull(sub1.intersection(sub2, false));\n+    }\n \n }\n--- a/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java\n+++ b/src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java\n         Assert.assertNull(sub1.intersection(sub2, false));\n     }\n \n+    @Test\n+    public void testIntersectionParallel() {\n+        final SubLine sub1 = new SubLine(new Vector2D(0, 1), new Vector2D(0, 2));\n+        final SubLine sub2 = new SubLine(new Vector2D(66, 3), new Vector2D(66, 4));\n+        Assert.assertNull(sub1.intersection(sub2, true));\n+        Assert.assertNull(sub1.intersection(sub2, false));\n+    }\n+\n }", "timestamp": 1370243700, "metainfo": ""}