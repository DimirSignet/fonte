{"sha": "493b86584905df3d1f0b1ab0d7cfc0de1291de5b", "log": "Removed the log10 declaration in RealFieldElement interface.  This method introduced a binary incompatibility as one implementing class (Dfp) did not have the proper return type and had to be changed. The method will be added back in the interface for 4.0, when it will be allowed to change the return type for Dfp.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/RealFieldElement.java\n+++ b/src/main/java/org/apache/commons/math3/RealFieldElement.java\n      */\n     T log1p();\n \n-    /** Base 10 logarithm.\n-     * @return base 10 logarithm of the instance\n-     */\n-    T log10();\n+//    TODO: add this method in 4.0, as it is not possible to do it in 3.2\n+//          due to incompatibility of the return type in the Dfp class\n+//    /** Base 10 logarithm.\n+//     * @return base 10 logarithm of the instance\n+//     */\n+//    T log10();\n \n     /** Cosine operation.\n      * @return cos(this)\n--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java\n         return result;\n     }\n \n-    /** {@inheritDoc} */\n+    /** Base 10 logarithm.\n+     * @return base 10 logarithm of the instance\n+     */\n     public DerivativeStructure log10() {\n         final DerivativeStructure result = new DerivativeStructure(compiler);\n         compiler.log10(data, 0, result.data, 0);\n--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java\n+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java\n         return DfpMath.log(this.add(getOne()));\n     }\n \n-    /** {@inheritDoc}\n-     * @since 3.2\n-     */\n-    public Dfp log10() {\n-        return DfpMath.log(this).divide(DfpMath.log(newInstance(10)));\n-    }\n+//  TODO: deactivate this implementation (and return type) in 4.0\n+    /** Get the exponent of the greatest power of 10 that is less than or equal to abs(this).\n+     *  @return integer base 10 logarithm\n+     *  @deprecated as of 3.2, replaced by {@link #intLog10()}, in 4.0 the return type\n+     *  will be changed to Dfp\n+     */\n+    @Deprecated\n+    public int log10()  {\n+        return intLog10();\n+    }\n+\n+//    TODO: activate this implementation (and return type) in 4.0\n+//    /** {@inheritDoc}\n+//     * @since 3.2\n+//     */\n+//    public Dfp log10() {\n+//        return DfpMath.log(this).divide(DfpMath.log(newInstance(10)));\n+//    }\n \n     /** {@inheritDoc}\n      * @since 3.2\n--- a/src/main/java/org/apache/commons/math3/util/Decimal64.java\n+++ b/src/main/java/org/apache/commons/math3/util/Decimal64.java\n         return new Decimal64(FastMath.log1p(value));\n     }\n \n-    /** {@inheritDoc} */\n+    /** Base 10 logarithm.\n+     * @return base 10 logarithm of the instance\n+     */\n     public Decimal64 log10() {\n         return new Decimal64(FastMath.log10(value));\n     }\n--- a/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java\n+++ b/src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java\n         }\n     }\n \n-    @Test\n-    public void testLog10() {\n-        for (double x = -0.9; x < 0.9; x += 0.05) {\n-            checkRelative(FastMath.log10(x), build(x).log10());\n-        }\n-    }\n+//  TODO: add this test in 4.0, as it is not possible to do it in 3.2\n+//  due to incompatibility of the return type in the Dfp class\n+//    @Test\n+//    public void testLog10() {\n+//        for (double x = -0.9; x < 0.9; x += 0.05) {\n+//            checkRelative(FastMath.log10(x), build(x).log10());\n+//        }\n+//    }\n \n     @Test\n     public void testAbs() {", "timestamp": 1362991032, "metainfo": ""}