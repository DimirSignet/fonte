{"sha": "6d7fe5d117da73a743e4b799d364cfea05a3f026", "log": "Revert fix for MATH-862: it created test regressions.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java\n+++ b/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java\n                                                        rowsCount, columnsCount);\n         }\n \n-        for (int i = 1; i < rowsCount; i++) {\n-            if (destination[i].length != columnsCount) {\n-                throw new MatrixDimensionMismatchException(destination.length, destination[i].length,\n-                                                           rowsCount, columnsCount);\n-            }\n-        }\n-\n         walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor() {\n \n             /** Initial row index. */\n         throws OutOfRangeException, NullArgumentException, NoDataException,\n         MatrixDimensionMismatchException {\n         MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);\n-        final int nCols = selectedColumns.length;\n         if ((destination.length < selectedRows.length) ||\n-            (destination[0].length < nCols)) {\n+            (destination[0].length < selectedColumns.length)) {\n             throw new MatrixDimensionMismatchException(destination.length, destination[0].length,\n                                                        selectedRows.length, selectedColumns.length);\n         }\n \n         for (int i = 0; i < selectedRows.length; i++) {\n             final double[] destinationI = destination[i];\n-            if (destinationI.length != nCols) {\n-                throw new MatrixDimensionMismatchException(destination.length, destinationI.length,\n-                                                           selectedRows.length, selectedColumns.length);\n-            }\n             for (int j = 0; j < selectedColumns.length; j++) {\n                 destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);\n             }\n--- a/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java\n+++ b/src/test/java/org/apache/commons/math3/linear/Array2DRowRealMatrixTest.java\n         checkCopy(m, null,  1, 0, 2, 4, true);\n         checkCopy(m, null, new int[] {},    new int[] { 0 }, true);\n         checkCopy(m, null, new int[] { 0 }, new int[] { 4 }, true);\n-        \n-        // rectangular check\n-        double[][] copy = new double[][] { { 0, 0, 0 }, { 0, 0 } };\n-        checkCopy(m, copy, 0, 1, 0, 2, true);\n-        checkCopy(m, copy, new int[] { 0, 1 }, new int[] { 0, 2 }, true);\n     }\n \n     private void checkCopy(RealMatrix m, double[][] reference,", "timestamp": 1363850132, "metainfo": ""}