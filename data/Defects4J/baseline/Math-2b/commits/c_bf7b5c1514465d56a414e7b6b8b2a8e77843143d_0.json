{"sha": "bf7b5c1514465d56a414e7b6b8b2a8e77843143d", "log": "Formatting und removal of unused import.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java\n+++ b/src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n-import org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution;\n import org.apache.commons.math3.distribution.MultivariateNormalDistribution;\n import org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution;\n import org.apache.commons.math3.exception.ConvergenceException;\n  * multivariate normal mixture model distributions.\n  *\n  * This implementation is based on\n- * <a href=\"http://cran.r-project.org/web/packages/mixtools/index.html\">\n- *  CRAN Mixtools</a>\n+ * <a href=\"http://cran.r-project.org/web/packages/mixtools/index.html\">CRAN Mixtools</a>\n  *\n  * @version $Id$\n  * @since 3.2\n                 sumLogLikelihood += Math.log(rowDensity);\n \n                 for (int j = 0; j < k; j++) {\n-                    gamma[i][j] = weights[j] * mvns[j].density(data[i])\n-                            / rowDensity;\n-\n+                    gamma[i][j] = weights[j] * mvns[j].density(data[i]) / rowDensity;\n                     gammaSums[j] += gamma[i][j];\n \n                     for (int col = 0; col < numCols; col++) {", "timestamp": 1363904312, "metainfo": ""}