{"sha": "2a89064330326f4974668a897c7e8210d72db7b3", "log": "typos  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java\n+++ b/src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java\n      * <p>Beware that all arrays <em>must</em> be references to integrator\n      * arrays, in order to ensure proper update without copy.</p>\n      * @param time time at which all arrays are defined\n-     * @param stepSize step size used in the scaled and nordsieck arrays\n+     * @param stepSize step size used in the scaled and Nordsieck arrays\n      * @param scaledDerivative reference to the integrator array holding the first\n      * scaled derivative\n      * @param nordsieckVector reference to the integrator matrix holding the\n-     * nordsieck vector\n+     * Nordsieck vector\n      */\n     public void reinitialize(final double time, final double stepSize,\n                              final double[] scaledDerivative,\n     }\n \n     /** Rescale the instance.\n-     * <p>Since the scaled and Nordiseck arrays are shared with the caller,\n+     * <p>Since the scaled and Nordsieck arrays are shared with the caller,\n      * this method has the side effect of rescaling this arrays in the caller too.</p>\n-     * @param stepSize new step size to use in the scaled and nordsieck arrays\n+     * @param stepSize new step size to use in the scaled and Nordsieck arrays\n      */\n     public void rescale(final double stepSize) {\n ", "timestamp": 1373981719, "metainfo": ""}