{"sha": "a2500c675423b4a3521c66969f41fccf5bc9720f", "log": "Typos.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/SymmLQ.java\n+++ b/src/main/java/org/apache/commons/math3/linear/SymmLQ.java\n         /**\n          * Returns {@code true} if the default stopping criterion is fulfilled.\n          *\n-         * @return {@code true} if convergence of the iterations has occured\n+         * @return {@code true} if convergence of the iterations has occurred\n          */\n         boolean hasConverged() {\n             return hasConverged;\n--- a/src/main/java/org/apache/commons/math3/util/BigReal.java\n+++ b/src/main/java/org/apache/commons/math3/util/BigReal.java\n         try {\n             return new BigReal(d.divide(a.d, scale, roundingMode));\n         } catch (ArithmeticException e) {\n-            // Division by zero has occured\n+            // Division by zero has occurred\n             throw new MathArithmeticException(LocalizedFormats.ZERO_NOT_ALLOWED);\n         }\n     }\n         try {\n             return new BigReal(BigDecimal.ONE.divide(d, scale, roundingMode));\n         } catch (ArithmeticException e) {\n-            // Division by zero has occured\n+            // Division by zero has occurred\n             throw new MathArithmeticException(LocalizedFormats.ZERO_NOT_ALLOWED);\n         }\n     }\n--- a/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java\n+++ b/src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/StatisticalReferenceDatasetFactory.java\n      *\n      * @param name the name of the resource\n      * @return a buffered reader\n-     * @throws IOException if an I/O error occured\n+     * @throws IOException if an I/O error occurred\n      */\n     public static BufferedReader createBufferedReaderFromResource(final String name)\n         throws IOException {\n--- a/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java\n+++ b/src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java\n      *\n      * @param name the name of the resource\n      * @return a buffered reader\n-     * @throws IOException if an I/O error occured\n+     * @throws IOException if an I/O error occurred\n      */\n     public static BufferedReader createBufferedReaderFromResource(final String name)\n         throws IOException {", "timestamp": 1374569410, "metainfo": ""}