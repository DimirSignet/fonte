{"sha": "5ee79e59781b4a764f4e2fc5256fb442fbd904f8", "log": "Fix some findbugs warnings wrt input streams.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java\n+++ b/src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n+import java.nio.charset.Charset;\n import java.util.Arrays;\n import java.util.NoSuchElementException;\n import java.util.StringTokenizer;\n     /** The resource containing the direction numbers. */\n     private static final String RESOURCE_NAME = \"/assets/org/apache/commons/math3/random/new-joe-kuo-6.1000\";\n \n+    /** Character set for file input. */\n+    private static final String FILE_CHARSET = \"US-ASCII\";\n+\n     /** Space dimension. */\n     private final int dimension;\n \n         } catch (MathParseException e) {\n             // the internal resource file could not be parsed -> should not happen\n             throw new MathInternalError();\n+        } finally {\n+            try {\n+                is.close();\n+            } catch (IOException e) { // NOPMD\n+                // ignore\n+            }\n         }\n     }\n \n      * 2       1       0       1\n      * 3       2       1       1 3\n      * </pre>\n+     * <p>\n+     * The input stream <i>must</i> be an ASCII text containing one valid direction vector per line.\n      *\n      * @param dimension the space dimension\n      * @param is the stream to read the direction vectors from\n \n     /**\n      * Load the direction vector for each dimension from the given stream.\n+     * <p>\n+     * The input stream <i>must</i> be an ASCII text containing one\n+     * valid direction vector per line.\n      *\n      * @param is the input stream to read the direction vector from\n      * @return the last dimension that has been read from the input stream\n             direction[0][i] = 1l << (BITS - i);\n         }\n \n-        final BufferedReader reader = new BufferedReader(new InputStreamReader(is));\n+        final Charset charset = Charset.forName(FILE_CHARSET);\n+        final BufferedReader reader = new BufferedReader(new InputStreamReader(is, charset));\n         int dim = -1;\n \n         try {", "timestamp": 1369754585, "metainfo": ""}