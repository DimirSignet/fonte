{"sha": "2732c85c24d6ea5ae97f730191246cc07b355a25", "log": "Hard-coded number.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java\n+++ b/src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java\n  */\n public class BicubicSplineInterpolatingFunction\n     implements BivariateFunction {\n+    /** Number of coefficients. */\n+    private static final int NUM_COEFF = 16;\n     /**\n      * Matrix to compute the spline coefficients from the function values\n      * and function derivatives values\n      * @return the spline coefficients.\n      */\n     private double[] computeSplineCoefficients(double[] beta) {\n-        final double[] a = new double[16];\n-\n-        for (int i = 0; i < 16; i++) {\n+        final double[] a = new double[NUM_COEFF];\n+\n+        for (int i = 0; i < NUM_COEFF; i++) {\n             double result = 0;\n             final double[] row = AINV[i];\n-            for (int j = 0; j < 16; j++) {\n+            for (int j = 0; j < NUM_COEFF; j++) {\n                 result += row[j] * beta[j];\n             }\n             a[i] = result;", "timestamp": 1369948965, "metainfo": ""}