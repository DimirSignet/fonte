{"sha": "6ba5a58c844f55701e9816175265584aad6168c1", "log": "FastMath.abs() without branching for float and double primitive types.  JIRA: MATH-954  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math3/util/FastMath.java\n      * @return abs(x)\n      */\n     public static float abs(final float x) {\n-        if ((Float.floatToRawIntBits(x) & Integer.MIN_VALUE) == 0) {\n-            return x;\n-        }\n-        return -x;\n+        return Float.intBitsToFloat(Integer.MAX_VALUE & Float.floatToRawIntBits(x));\n     }\n \n     /**\n      * @return abs(x)\n      */\n     public static double abs(double x) {\n-        if ((Double.doubleToRawLongBits(x) & Long.MIN_VALUE) == 0) {\n-            return x;\n-        }\n-        return -x;\n+        return Double.longBitsToDouble(Long.MAX_VALUE & Double.doubleToRawLongBits(x));\n     }\n \n     /**", "timestamp": 1364309761, "metainfo": ""}