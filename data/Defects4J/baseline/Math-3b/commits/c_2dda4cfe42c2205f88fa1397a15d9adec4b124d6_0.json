{"sha": "2dda4cfe42c2205f88fa1397a15d9adec4b124d6", "log": "Fixed CLIRR error, by putting back protected methods.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java\n+++ b/src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java\n         return d[0].getField();\n     }\n \n+    /** Build an array of elements.\n+     * <p>\n+     * Complete arrays are filled with field.getZero()\n+     * </p>\n+     * @param <T> Type of the field elements\n+     * @param field field to which array elements belong\n+     * @param rows number of rows\n+     * @param columns number of columns (may be negative to build partial\n+     * arrays in the same way <code>new Field[rows][]</code> works)\n+     * @return a new array\n+     * @deprecated as of 3.2, replaced by {@link MathArrays#buildArray(Field, int, int)}\n+     */\n+    @Deprecated\n+    protected static <T extends FieldElement<T>> T[][] buildArray(final Field<T> field,\n+                                                                  final int rows,\n+                                                                  final int columns) {\n+        return MathArrays.buildArray(field, rows, columns);\n+    }\n+\n+    /** Build an array of elements.\n+     * <p>\n+     * Arrays are filled with field.getZero()\n+     * </p>\n+     * @param <T> the type of the field elements\n+     * @param field field to which array elements belong\n+     * @param length of the array\n+     * @return a new array\n+     * @deprecated as of 3.2, replaced by {@link MathArrays#buildArray(Field, int)}\n+     */\n+    @Deprecated\n+    protected static <T extends FieldElement<T>> T[] buildArray(final Field<T> field,\n+                                                                final int length) {\n+        return MathArrays.buildArray(field, length);\n+    }\n+\n     /** {@inheritDoc} */\n     public Field<T> getField() {\n         return field;", "timestamp": 1362933668, "metainfo": ""}