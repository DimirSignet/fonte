{"sha": "d1c1405ab39e4f4ba1b41249397812edd9cb526a", "log": "[MATH-917] deprecated old stat.clustering package.  ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/Cluster.java\n  * @param <T> the type of points that can be clustered\n  * @version $Id$\n  * @since 2.0\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.Cluster} instead\n  */\n+@Deprecated\n public class Cluster<T extends Clusterable<T>> implements Serializable {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/Clusterable.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/Clusterable.java\n  * @param <T> the type of point that can be clustered\n  * @version $Id$\n  * @since 2.0\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.Clusterable} instead\n  */\n+@Deprecated\n public interface Clusterable<T> {\n \n     /**\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/DBSCANClusterer.java\n  * A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise</a>\n  * @version $Id$\n  * @since 3.1\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.DBSCANClusterer} instead\n  */\n+@Deprecated\n public class DBSCANClusterer<T extends Clusterable<T>> {\n \n     /** Maximum radius of the neighborhood to be considered. */\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java\n  * A simple implementation of {@link Clusterable} for points with double coordinates.\n  * @version $Id$\n  * @since 3.1\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.DoublePoint} instead\n  */\n+@Deprecated\n public class EuclideanDoublePoint implements Clusterable<EuclideanDoublePoint>, Serializable {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java\n  * A simple implementation of {@link Clusterable} for points with integer coordinates.\n  * @version $Id$\n  * @since 2.0\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.DoublePoint} instead\n  */\n+@Deprecated\n public class EuclideanIntegerPoint implements Clusterable<EuclideanIntegerPoint>, Serializable {\n \n     /** Serializable version identifier. */\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java\n  * @see <a href=\"http://en.wikipedia.org/wiki/K-means%2B%2B\">K-means++ (wikipedia)</a>\n  * @version $Id$\n  * @since 2.0\n+ * @deprecated As of 3.2 (to be removed in 4.0),\n+ * use {@link org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer} instead\n  */\n+@Deprecated\n public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {\n \n     /** Strategies to use for replacing an empty cluster. */\n--- a/src/main/java/org/apache/commons/math3/stat/clustering/package-info.java\n+++ b/src/main/java/org/apache/commons/math3/stat/clustering/package-info.java\n  * limitations under the License.\n  */\n /**\n- * Clustering algorithms\n+ * <h2>All classes and sub-packages of this package are deprecated.</h2>\n+ * <h3>Please use their replacements, to be found under\n+ *  <ul>\n+ *   <li>{@link org.apache.commons.math3.ml.clustering}</li>\n+ *  </ul>\n+ * </h3>\n+ *\n+ * <p>\n+ * Clustering algorithms.\n+ * </p>\n  */\n package org.apache.commons.math3.stat.clustering;", "timestamp": 1364421685, "metainfo": ""}