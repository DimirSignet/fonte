{"sha": "80384c483058df4ecb84fd0e48971af33c017dca", "log": "MATH-993 Moved convergence check block to allow returning before an exception would be raised.   ", "commit": "\n--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java\n                 }\n             }\n \n+            // Check convergence.\n+            if (previous != null) {\n+                converged = checker.converged(getIterations(), previous, current);\n+                if (converged) {\n+                    setCost(computeCost(currentResiduals));\n+                    return current;\n+                }\n+            }\n+\n             try {\n                 // solve the linearized least squares problem\n                 RealMatrix mA = new BlockRealMatrix(a);\n                 }\n             } catch (SingularMatrixException e) {\n                 throw new ConvergenceException(LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM);\n-            }\n-\n-            // Check convergence.\n-            if (previous != null) {\n-                converged = checker.converged(getIterations(), previous, current);\n-                if (converged) {\n-                    setCost(computeCost(currentResiduals));\n-                    return current;\n-                }\n             }\n         }\n         // Must never happen.", "timestamp": 1372414821, "metainfo": ""}