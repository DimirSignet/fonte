{"sha": "24f9c9bea0ecb5870c24a21c71ed3c53f0d052be", "log": "Update Javadoc Rationalise MAGIC names  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n  * The C structure for a Tar Entry's header is:\n  * <pre>\n  * struct header {\n- * char name[NAMSIZ];\n- * char mode[8];\n- * char uid[8];\n- * char gid[8];\n- * char size[12];\n- * char mtime[12];\n- * char chksum[8];\n- * char linkflag;\n- * char linkname[NAMSIZ];\n- * char magic[8];\n- * char uname[TUNMLEN];\n- * char gname[TGNMLEN];\n- * char devmajor[8];\n- * char devminor[8];\n+ * char name[100];     // TarConstants.NAMELEN\n+ * char mode[8];       // TarConstants.MODELEN\n+ * char uid[8];        // TarConstants.UIDLEN\n+ * char gid[8];        // TarConstants.GIDLEN\n+ * char size[12];      // TarConstants.SIZELEN\n+ * char mtime[12];     // TarConstants.MODTIMELEN\n+ * char chksum[8];     // TarConstants.CHKSUMLEN\n+ * char linkflag[1];\n+ * char linkname[100]; // TarConstants.NAMELEN\n+ * The following fields are only present in new-style POSIX tar archives:\n+ * char magic[8];      // TarConstants.MAGICLEN\n+ * TODO: Posix/GNU split this into magic[6] and char version[2];\n+ * char uname[32];     // TarConstants.UNAMELEN\n+ * char gname[32];     // TarConstants.GNAMELEN\n+ * char devmajor[8];   // TarConstants.DEVLEN\n+ * char devminor[8];   // TarConstants.DEVLEN\n+ * char prefix[155];   // Used if \"name\" field is not long enough to hold the path\n+ * char pad[12];       // NULs\n  * } header;\n+ * All unused bytes are set to null.\n+ * New-style GNU tar files are slightly different from the above.\n  * </pre>\n  * \n  * @NotThreadSafe\n      * Construct an empty entry and prepares the header values.\n      */\n     private TarArchiveEntry () {\n-        this.magic = new StringBuffer(TMAGIC);\n+        this.magic = new StringBuffer(MAGIC_POSIX);\n         this.name = new StringBuffer();\n         this.linkName = new StringBuffer();\n \n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java\n     /**\n      * The length of the magic field in a header buffer.\n      */\n-    int    MAGICLEN = 8;\n+    int    MAGICLEN = 8; // TODO split this into MAGICLEN=6 and VERSIONLEN=2\n \n     /**\n      * The length of the modification time field in a header buffer.\n     int    GNAMELEN = 32;\n \n     /**\n-     * The length of the devices field in a header buffer.\n+     * The length of each of the device fields (major and minor) in a header buffer.\n      */\n     int    DEVLEN = 8;\n \n     /**\n      * The magic tag representing a POSIX tar archive.\n      */\n-    String TMAGIC = \"ustar\";\n+    String MAGIC_POSIX = \"ustar\"; // TODO this should be NUL-terminated\n \n     /**\n      * The magic tag representing a GNU tar archive.\n      */\n-    String GNU_TMAGIC = \"ustar  \";\n+    String MAGIC_GNU = \"ustar  \"; // TODO this should have single space terminator\n \n     /**\n-     * The namr of the GNU tar entry which contains a long name.\n+     * The name of the GNU tar entry which contains a long name.\n      */\n-    String GNU_LONGLINK = \"././@LongLink\";\n+    String GNU_LONGLINK = \"././@LongLink\"; // TODO rename as LONGLINK_GNU ?\n \n     /**\n      * Identifies the *next* file on the tape as having a long name.", "timestamp": 1238685557, "metainfo": ""}