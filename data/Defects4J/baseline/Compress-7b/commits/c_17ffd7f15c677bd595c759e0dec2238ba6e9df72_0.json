{"sha": "17ffd7f15c677bd595c759e0dec2238ba6e9df72", "log": "add getLastModifiedDate to ArchiveEntry - implement it assuming cpio and ar use seconds since epoch for their time values  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n  */\n package org.apache.commons.compress.archivers;\n \n+import java.util.Date;\n+\n /**\n  * Represents an entry of an archive.\n  */\n \t\n \t/** True if the entry refers to a directory */\n \tpublic boolean isDirectory();\n+\n+    /** The last modified date of the entry */\n+    public Date getLastModifiedDate();\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n package org.apache.commons.compress.archivers.ar;\n \n import java.io.File;\n+import java.util.Date;\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n \n \t\treturn lastModified;\n \t}\n \t\n+    /** {@inheritDocs} */\n+    public Date getLastModifiedDate() {\n+        return new Date(1000 * getLastModified());\n+    }\n+\n \tpublic long getLength() {\n \t\treturn length;\n \t}\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n package org.apache.commons.compress.archivers.cpio;\n \n import java.io.File;\n+import java.util.Date;\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n \n         return this.mtime;\n     }\n \n+    /** {@inheritDocs} */\n+    public Date getLastModifiedDate() {\n+        return new Date(1000 * getTime());\n+    }\n+\n     /**\n      * Get the user id.\n      * \n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n         return new Date(modTime * MILLIS_PER_SECOND);\n     }\n \n+    /** {@inheritDocs} */\n+    public Date getLastModifiedDate() {\n+        return getModTime();\n+    }\n+\n     /**\n      * Get this entry's file.\n      *\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n package org.apache.commons.compress.archivers.zip;\n \n import java.io.File;\n+import java.util.Date;\n import java.util.LinkedHashMap;\n import java.util.zip.ZipException;\n import org.apache.commons.compress.archivers.ArchiveEntry;\n         }\n     }\n \n+    /** {@inheritDocs} */\n+    public Date getLastModifiedDate() {\n+        return new Date(getTime());\n+    }\n+\n     /* (non-Javadoc)\n      * @see java.lang.Object#equals(java.lang.Object)\n      */\n--- a/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n  */\n package org.apache.commons.compress.archivers.memory;\n \n+import java.util.Date;\n import org.apache.commons.compress.archivers.ArchiveEntry;\n \n public final class MemoryArchiveEntry implements ArchiveEntry {\n \t\treturn false;\n \t}\n \n+    /** {@inheritDocs} */\n+    public Date getLastModifiedDate() {\n+        return new Date();\n+    }\n }", "timestamp": 1249138335, "metainfo": ""}