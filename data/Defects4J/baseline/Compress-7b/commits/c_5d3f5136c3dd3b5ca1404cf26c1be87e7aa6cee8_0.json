{"sha": "5d3f5136c3dd3b5ca1404cf26c1be87e7aa6cee8", "log": "Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java\n import java.io.IOException;\n import java.io.InputStream;\n \n+/**\n+ * Archive input streams are expected to override the<br/>\n+ * {@link #read()} and {@link #read(byte[] b, int off, int len)} <br/>\n+ * methods so that reading from the stream generates EOF for the end of\n+ * data in each entry as well as at the end of the file proper. The\n+ * {@link #getNextEntry()} method is used to reset the input stream\n+ * ready for reading the data from the next entry.\n+ * <p>\n+ * The input stream classes must also implement a method with the signature:\n+ * <pre>\n+ * public static boolean matches(byte[] signature, int length)\n+ * </pre>\n+ * which is used by the {@link ArchiveStreamFactory} to autodetect\n+ * the archive type from the first few bytes of a stream. \n+ */\n public abstract class ArchiveInputStream extends InputStream {\n \n     /**", "timestamp": 1238211102, "metainfo": ""}