{"sha": "f1d63a6313f73268876bc3069a33cec15954398e", "log": "DOcument and simplify  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n                     throw new IOException(\"CRC Error\");\n                 }\n             }\n-            return -1;\n+            return -1; // EOF for this entry\n         }\n         int tmplength = (int) Math.min(len, this.entry.getSize()\n                 - this.entryBytesRead);\n \n         int tmpread = this.in.read(b, off, tmplength);\n         // TODO - what about EOF or short reads?\n-        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n+        if (this.entry.getFormat() == FORMAT_NEW_CRC) {\n             for (int pos = 0; pos < tmpread; pos++) {\n                 this.crc += b[pos] & 0xFF;\n             }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n \n     private final long value;\n \n+    /** Central File Header Signature */\n     public static final ZipLong CFH_SIG = new ZipLong(0X02014B50L);\n+\n+    /** Local File Header Signature */\n     public static final ZipLong LFH_SIG = new ZipLong(0X04034B50L);\n \n     /**", "timestamp": 1238210322, "metainfo": ""}