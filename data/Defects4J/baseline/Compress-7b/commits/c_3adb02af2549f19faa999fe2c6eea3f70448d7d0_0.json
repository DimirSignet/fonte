{"sha": "3adb02af2549f19faa999fe2c6eea3f70448d7d0", "log": "Fix malicious code / thread-safety bug  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n import java.util.Date;\n import java.util.zip.CRC32;\n \n+/**\n+ * Utility class for handling DOS and Java time conversions.\n+ * @Immutable\n+ */\n public abstract class ZipUtil {\n     /**\n      * Smallest date/time ZIP can handle.\n         //                                   here will improve the readablity\n         int year = time.getYear() + 1900;\n         if (year < 1980) {\n-            return DOS_TIME_MIN;\n+            return (byte[]) DOS_TIME_MIN.clone(); // stop callers from changing the array\n         }\n         int month = time.getMonth() + 1;\n         long value =  ((year - 1980) << 25)\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java\n                      ZipUtil.adjustToLong(2 * Integer.MAX_VALUE));\n     }\n \n+    public void testMinTime(){\n+        byte[] b1 = ZipUtil.toDosTime(0);\n+        byte b10 = b1[0]; // Save the first byte\n+        b1[0]++; // change it\n+        byte[] b2 = ZipUtil.toDosTime(0); // get the same time\n+        assertEquals(b10,b2[0]); // first byte should still be the same\n+    }\n }", "timestamp": 1238191340, "metainfo": ""}