{"sha": "eadbe116f9d59b38acf2aec9c4de43e5c5f68d49", "log": "correct signature detection of ZIP archives.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java\n     }\n \n     public static boolean matches(byte[] signature, int length ) {\n-        // 4b50 0403 0014 0008\n-\n-        if (length < 8) {\n-            return false;\n-        }\n-\n-        if (signature[0] != 0x50) {\n-            return false;\n-        }\n-        if (signature[1] != 0x4b) {\n-            return false;\n-        }\n-        if (signature[2] != 0x03) {\n-            return false;\n-        }\n-        if (signature[3] != 0x04) {\n-            return false;\n-        }\n-        if (signature[4] != 0x14) {\n-            return false;\n-        }\n-        if (signature[5] != 0x00) {\n-            return false;\n-        }\n-        if (signature[6] != 0x08) {\n-            return false;\n-        }\n-        if (signature[7] != 0x00) {\n-            return false;\n-        }\n-\n-        return true;\n+        return ZipArchiveInputStream.matches(signature, length);\n     }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n     }\n \n \n-    public static boolean matches( byte[] signature, int length ) {\n-        // 4b50 0403 0014 0000\n-\n-        if (length < 8) {\n+    public static boolean matches(byte[] signature, int length) {\n+        if (length < ZipArchiveOutputStream.LFH_SIG.length) {\n             return false;\n         }\n \n-        if (signature[0] != 0x50) {\n-            return false;\n-        }\n-        if (signature[1] != 0x4b) {\n-            return false;\n-        }\n-        if (signature[2] != 0x03) {\n-            return false;\n-        }\n-        if (signature[3] != 0x04) {\n-            return false;\n-        }\n-        if (signature[4] != 0x14) {\n-            return false;\n-        }\n-        if (signature[5] != 0x00) {\n-            return false;\n-        }\n-        if (signature[6] != 0x00) {\n-            return false;\n-        }\n-        if (signature[7] != 0x00) {\n-            return false;\n+        for (int i = 0; i < ZipArchiveOutputStream.LFH_SIG.length; i++) {\n+            if (signature[i] != ZipArchiveOutputStream.LFH_SIG[i]) {\n+                return false;\n+            }\n         }\n \n         return true;\n--- a/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n                                                                         new BufferedInputStream(new FileInputStream(\n                                                                                                                     new File(getClass().getClassLoader().getResource(\"bla.jar\").getFile()))));\n         assertNotNull(jar);\n-        assertTrue(jar instanceof JarArchiveInputStream);\n+        assertTrue(jar instanceof ZipArchiveInputStream);\n \n         final ArchiveInputStream cpio = factory.createArchiveInputStream(\n                                                                          new BufferedInputStream(new FileInputStream(", "timestamp": 1235640703, "metainfo": ""}