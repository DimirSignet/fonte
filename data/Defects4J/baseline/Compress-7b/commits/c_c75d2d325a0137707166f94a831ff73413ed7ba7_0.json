{"sha": "c75d2d325a0137707166f94a831ff73413ed7ba7", "log": "added javadocs. Moved CompressorException out of try/catch to avoid catching the newly thrown exception  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n             } else if (\"bzip2\".equalsIgnoreCase(name)) {\n                 return new BZip2CompressorInputStream(in);\n             }\n-            throw new CompressorException(\"Compressor: \" + name + \" not found.\");\n         } catch (IOException e) {\n             throw new CompressorException(\n                     \"Could not create CompressorInputStream\", e);\n         }\n+        throw new CompressorException(\"Compressor: \" + name + \" not found.\");\n     }\n \n+    /**\n+     * Create an compressor output stream from an compressor name and an input stream.\n+     * \n+     * @param name the compressor name, i.e. \"gz\" or \"bzip2\"\n+     * @param out the output stream\n+     * @return the compressor output stream\n+     * @throws CompressorException if the archiver name is not known\n+     * @throws IllegalArgumentException if the archiver name or stream is null\n+     */\n     public CompressorOutputStream createCompressorOutputStream(\n             final String name, final OutputStream out)\n             throws CompressorException {\n             } else if (\"bzip2\".equalsIgnoreCase(name)) {\n                 return new BZip2CompressorOutputStream(out);\n             }\n-            throw new CompressorException(\"Compressor: \" + name + \" not found.\");\n         } catch (IOException e) {\n             throw new CompressorException(\n                     \"Could not create CompressorOutputStream\", e);\n         }\n+        throw new CompressorException(\"Compressor: \" + name + \" not found.\");\n     }\n }", "timestamp": 1239684409, "metainfo": ""}