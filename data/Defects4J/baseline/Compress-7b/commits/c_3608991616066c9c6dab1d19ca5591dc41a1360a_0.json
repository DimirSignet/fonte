{"sha": "3608991616066c9c6dab1d19ca5591dc41a1360a", "log": "added javadocs counts read bytes  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java\n \n import org.apache.commons.compress.compressors.CompressorInputStream;\n \n+/**\n+ * Implements the \"gz\" compression format as an input stream.\n+ * This classes wraps the standard java classes for working with gz. \n+ */\n public class GzipCompressorInputStream extends CompressorInputStream {\n-\n+    /* reference to the compressed stream */\n     private final GZIPInputStream in; \n \n+    /**\n+     * Constructs a new GZip compressed input stream by the referenced\n+     * InputStream.\n+     * \n+     * @param inputStream the InputStream from which this object should be created of\n+     * @throws IOException if the stream could not be created\n+     */\n     public GzipCompressorInputStream(InputStream inputStream) throws IOException {\n         in = new GZIPInputStream(inputStream);\n     }\n \n+    /* (non-Javadoc)\n+     * @see java.io.InputStream#read()\n+     */\n     public int read() throws IOException {\n+        this.count(1);\n         return in.read();\n     }\n-\n }", "timestamp": 1240376610, "metainfo": ""}