{"sha": "7eb2d84de101a125d41d3a1157f4eed789ca4a0d", "log": "don't emit unsafe global this warnings when the @lends annotation is used correctly. fixes issue 248  R=acleung DELTA=28  (28 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=636002   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n             pType == Token.STRING ||\n             pType == Token.NUMBER)) {\n         return false;\n+      }\n+\n+      // Don't traverse functions that are getting lent to a prototype.\n+      Node gramps = parent.getParent();\n+      if (NodeUtil.isObjectLitKey(parent, gramps)) {\n+        JSDocInfo maybeLends = gramps.getJSDocInfo();\n+        if (maybeLends != null &&\n+            maybeLends.getLendsName() != null &&\n+            maybeLends.getLendsName().endsWith(\".prototype\")) {\n+          return false;\n+        }\n       }\n     }\n \n--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n     testSame(\"function Foo() {} \" +\n         \"Foo.prototype = {write: function() { this.foo = 3; }};\");\n   }\n+\n+  public void testLendsAnnotation1() {\n+    testFailure(\"/** @constructor */ function F() {}\" +\n+        \"dojo.declare(F, {foo: function() { return this.foo; }});\");\n+  }\n+\n+  public void testLendsAnnotation2() {\n+    testFailure(\"/** @constructor */ function F() {}\" +\n+        \"dojo.declare(F, /** @lends {F.bar} */ (\" +\n+        \"    {foo: function() { return this.foo; }}));\");\n+  }\n+\n+  public void testLendsAnnotation3() {\n+    testSame(\"/** @constructor */ function F() {}\" +\n+        \"dojo.declare(F, /** @lends {F.prototype} */ (\" +\n+        \"    {foo: function() { return this.foo; }}));\");\n+  }\n }", "timestamp": 1287786121, "metainfo": ""}