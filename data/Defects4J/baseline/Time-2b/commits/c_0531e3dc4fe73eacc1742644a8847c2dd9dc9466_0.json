{"sha": "0531e3dc4fe73eacc1742644a8847c2dd9dc9466", "log": "Remove unused code   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java\n             if (offset == 0L) {\n                 return DateTimeZone.UTC;\n             } else {\n-                StringBuffer buf = new StringBuffer();\n                 id = printOffset(offset);\n                 return fixedOffsetZone(id, offset);\n             }\n--- a/JodaTime/src/java/org/joda/time/PeriodType.java\n+++ b/JodaTime/src/java/org/joda/time/PeriodType.java\n      * @return a string\n      */\n     public String toString() {\n-        String name = getName();\n         return \"PeriodType[\" + getName() + \"]\";\n     }\n \n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java\n \n import org.joda.time.Chronology;\n import org.joda.time.DateTime;\n-import org.joda.time.DateTimeFieldType;\n import org.joda.time.DateTimeZone;\n import org.joda.time.ReadablePartial;\n \n                     }\n \n                     // Use pivots which are compatible with SimpleDateFormat.\n-                    DateTimeFieldType type;\n                     switch (c) {\n                     case 'x':\n                         builder.appendTwoDigitWeekyear\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n             }\n         }\n \n-        private Composite(Composite base, DateTimePrinter[] printers) {\n-            iPrinters = printers;\n-            iParsers = base.iParsers;\n-            iPrintedLengthEstimate = base.iPrintedLengthEstimate;\n-            iParsedLengthEstimate = base.iParsedLengthEstimate;\n-        }\n-\n         public int estimatePrintedLength() {\n             return iPrintedLengthEstimate;\n         }", "timestamp": 1123106854, "metainfo": ""}