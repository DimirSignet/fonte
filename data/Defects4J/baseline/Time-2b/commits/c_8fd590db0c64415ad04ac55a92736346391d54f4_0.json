{"sha": "8fd590db0c64415ad04ac55a92736346391d54f4", "log": "Switch from getReadableInstant to protected getMillis in Property   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java\n         assertSame(test.getChronology().era(), test.era().getField());\n         assertEquals(\"era\", test.era().getName());\n         assertEquals(\"Property[era]\", test.era().toString());\n-        assertSame(test, test.era().getReadableInstant());\n         assertSame(test, test.era().getDateMidnight());\n         assertEquals(1, test.era().get());\n         assertEquals(\"AD\", test.era().getAsText());\n         assertSame(test.getChronology().yearOfEra(), test.yearOfEra().getField());\n         assertEquals(\"yearOfEra\", test.yearOfEra().getName());\n         assertEquals(\"Property[yearOfEra]\", test.yearOfEra().toString());\n-        assertSame(test, test.yearOfEra().getReadableInstant());\n         assertSame(test, test.yearOfEra().getDateMidnight());\n         assertEquals(2004, test.yearOfEra().get());\n         assertEquals(\"2004\", test.yearOfEra().getAsText());\n         assertSame(test.getChronology().centuryOfEra(), test.centuryOfEra().getField());\n         assertEquals(\"centuryOfEra\", test.centuryOfEra().getName());\n         assertEquals(\"Property[centuryOfEra]\", test.centuryOfEra().toString());\n-        assertSame(test, test.centuryOfEra().getReadableInstant());\n         assertSame(test, test.centuryOfEra().getDateMidnight());\n         assertEquals(20, test.centuryOfEra().get());\n         assertEquals(\"20\", test.centuryOfEra().getAsText());\n         assertSame(test.getChronology().yearOfCentury(), test.yearOfCentury().getField());\n         assertEquals(\"yearOfCentury\", test.yearOfCentury().getName());\n         assertEquals(\"Property[yearOfCentury]\", test.yearOfCentury().toString());\n-        assertSame(test, test.yearOfCentury().getReadableInstant());\n         assertSame(test, test.yearOfCentury().getDateMidnight());\n         assertEquals(4, test.yearOfCentury().get());\n         assertEquals(\"4\", test.yearOfCentury().getAsText());\n         assertSame(test.getChronology().weekyear(), test.weekyear().getField());\n         assertEquals(\"weekyear\", test.weekyear().getName());\n         assertEquals(\"Property[weekyear]\", test.weekyear().toString());\n-        assertSame(test, test.weekyear().getReadableInstant());\n         assertSame(test, test.weekyear().getDateMidnight());\n         assertEquals(2004, test.weekyear().get());\n         assertEquals(\"2004\", test.weekyear().getAsText());\n         assertSame(test.getChronology().year(), test.year().getField());\n         assertEquals(\"year\", test.year().getName());\n         assertEquals(\"Property[year]\", test.year().toString());\n-        assertSame(test, test.year().getReadableInstant());\n         assertSame(test, test.year().getDateMidnight());\n         assertEquals(2004, test.year().get());\n         assertEquals(\"2004\", test.year().getAsText());\n         assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());\n         assertEquals(\"monthOfYear\", test.monthOfYear().getName());\n         assertEquals(\"Property[monthOfYear]\", test.monthOfYear().toString());\n-        assertSame(test, test.monthOfYear().getReadableInstant());\n         assertSame(test, test.monthOfYear().getDateMidnight());\n         assertEquals(6, test.monthOfYear().get());\n         assertEquals(\"June\", test.monthOfYear().getAsText());\n         assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());\n         assertEquals(\"dayOfMonth\", test.dayOfMonth().getName());\n         assertEquals(\"Property[dayOfMonth]\", test.dayOfMonth().toString());\n-        assertSame(test, test.dayOfMonth().getReadableInstant());\n         assertSame(test, test.dayOfMonth().getDateMidnight());\n         assertEquals(9, test.dayOfMonth().get());\n         assertEquals(\"9\", test.dayOfMonth().getAsText());\n         assertSame(test.getChronology().dayOfYear(), test.dayOfYear().getField());\n         assertEquals(\"dayOfYear\", test.dayOfYear().getName());\n         assertEquals(\"Property[dayOfYear]\", test.dayOfYear().toString());\n-        assertSame(test, test.dayOfYear().getReadableInstant());\n         assertSame(test, test.dayOfYear().getDateMidnight());\n         assertEquals(161, test.dayOfYear().get());\n         assertEquals(\"161\", test.dayOfYear().getAsText());\n         assertSame(test.getChronology().weekOfWeekyear(), test.weekOfWeekyear().getField());\n         assertEquals(\"weekOfWeekyear\", test.weekOfWeekyear().getName());\n         assertEquals(\"Property[weekOfWeekyear]\", test.weekOfWeekyear().toString());\n-        assertSame(test, test.weekOfWeekyear().getReadableInstant());\n         assertSame(test, test.weekOfWeekyear().getDateMidnight());\n         assertEquals(24, test.weekOfWeekyear().get());\n         assertEquals(\"24\", test.weekOfWeekyear().getAsText());\n         assertSame(test.getChronology().dayOfWeek(), test.dayOfWeek().getField());\n         assertEquals(\"dayOfWeek\", test.dayOfWeek().getName());\n         assertEquals(\"Property[dayOfWeek]\", test.dayOfWeek().toString());\n-        assertSame(test, test.dayOfWeek().getReadableInstant());\n         assertSame(test, test.dayOfWeek().getDateMidnight());\n         assertEquals(3, test.dayOfWeek().get());\n         assertEquals(\"Wednesday\", test.dayOfWeek().getAsText());\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n         assertEquals(\"2002-06-09T01:00:00.000+01:00\", test.toString(null));\n     }\n \n-    public void testToString_String_String() {\n+    public void testToString_String_Locale() {\n         DateTime test = new DateTime(TEST_TIME_NOW);\n         assertEquals(\"Sun 9/6\", test.toString(\"EEE d/M\", Locale.ENGLISH));\n         assertEquals(\"dim. 9/6\", test.toString(\"EEE d/M\", Locale.FRENCH));\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n         assertSame(test.getChronology().era(), test.era().getField());\n         assertEquals(\"era\", test.era().getName());\n         assertEquals(\"Property[era]\", test.era().toString());\n-        assertSame(test, test.era().getReadableInstant());\n         assertSame(test, test.era().getDateTime());\n         assertEquals(1, test.era().get());\n         assertEquals(\"AD\", test.era().getAsText());\n         assertSame(test.getChronology().yearOfEra(), test.yearOfEra().getField());\n         assertEquals(\"yearOfEra\", test.yearOfEra().getName());\n         assertEquals(\"Property[yearOfEra]\", test.yearOfEra().toString());\n-        assertSame(test, test.yearOfEra().getReadableInstant());\n         assertSame(test, test.yearOfEra().getDateTime());\n         assertEquals(2004, test.yearOfEra().get());\n         assertEquals(\"2004\", test.yearOfEra().getAsText());\n         assertSame(test.getChronology().centuryOfEra(), test.centuryOfEra().getField());\n         assertEquals(\"centuryOfEra\", test.centuryOfEra().getName());\n         assertEquals(\"Property[centuryOfEra]\", test.centuryOfEra().toString());\n-        assertSame(test, test.centuryOfEra().getReadableInstant());\n         assertSame(test, test.centuryOfEra().getDateTime());\n         assertEquals(20, test.centuryOfEra().get());\n         assertEquals(\"20\", test.centuryOfEra().getAsText());\n         assertSame(test.getChronology().yearOfCentury(), test.yearOfCentury().getField());\n         assertEquals(\"yearOfCentury\", test.yearOfCentury().getName());\n         assertEquals(\"Property[yearOfCentury]\", test.yearOfCentury().toString());\n-        assertSame(test, test.yearOfCentury().getReadableInstant());\n         assertSame(test, test.yearOfCentury().getDateTime());\n         assertEquals(4, test.yearOfCentury().get());\n         assertEquals(\"4\", test.yearOfCentury().getAsText());\n         assertSame(test.getChronology().weekyear(), test.weekyear().getField());\n         assertEquals(\"weekyear\", test.weekyear().getName());\n         assertEquals(\"Property[weekyear]\", test.weekyear().toString());\n-        assertSame(test, test.weekyear().getReadableInstant());\n         assertSame(test, test.weekyear().getDateTime());\n         assertEquals(2004, test.weekyear().get());\n         assertEquals(\"2004\", test.weekyear().getAsText());\n         assertSame(test.getChronology().year(), test.year().getField());\n         assertEquals(\"year\", test.year().getName());\n         assertEquals(\"Property[year]\", test.year().toString());\n-        assertSame(test, test.year().getReadableInstant());\n         assertSame(test, test.year().getDateTime());\n         assertEquals(2004, test.year().get());\n         assertEquals(\"2004\", test.year().getAsText());\n         assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());\n         assertEquals(\"monthOfYear\", test.monthOfYear().getName());\n         assertEquals(\"Property[monthOfYear]\", test.monthOfYear().toString());\n-        assertSame(test, test.monthOfYear().getReadableInstant());\n         assertSame(test, test.monthOfYear().getDateTime());\n         assertEquals(6, test.monthOfYear().get());\n         assertEquals(\"June\", test.monthOfYear().getAsText());\n         assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());\n         assertEquals(\"dayOfMonth\", test.dayOfMonth().getName());\n         assertEquals(\"Property[dayOfMonth]\", test.dayOfMonth().toString());\n-        assertSame(test, test.dayOfMonth().getReadableInstant());\n         assertSame(test, test.dayOfMonth().getDateTime());\n         assertEquals(9, test.dayOfMonth().get());\n         assertEquals(\"9\", test.dayOfMonth().getAsText());\n         assertSame(test.getChronology().dayOfYear(), test.dayOfYear().getField());\n         assertEquals(\"dayOfYear\", test.dayOfYear().getName());\n         assertEquals(\"Property[dayOfYear]\", test.dayOfYear().toString());\n-        assertSame(test, test.dayOfYear().getReadableInstant());\n         assertSame(test, test.dayOfYear().getDateTime());\n         assertEquals(161, test.dayOfYear().get());\n         assertEquals(\"161\", test.dayOfYear().getAsText());\n         assertSame(test.getChronology().weekOfWeekyear(), test.weekOfWeekyear().getField());\n         assertEquals(\"weekOfWeekyear\", test.weekOfWeekyear().getName());\n         assertEquals(\"Property[weekOfWeekyear]\", test.weekOfWeekyear().toString());\n-        assertSame(test, test.weekOfWeekyear().getReadableInstant());\n         assertSame(test, test.weekOfWeekyear().getDateTime());\n         assertEquals(24, test.weekOfWeekyear().get());\n         assertEquals(\"24\", test.weekOfWeekyear().getAsText());\n         assertSame(test.getChronology().dayOfWeek(), test.dayOfWeek().getField());\n         assertEquals(\"dayOfWeek\", test.dayOfWeek().getName());\n         assertEquals(\"Property[dayOfWeek]\", test.dayOfWeek().toString());\n-        assertSame(test, test.dayOfWeek().getReadableInstant());\n         assertSame(test, test.dayOfWeek().getDateTime());\n         assertEquals(3, test.dayOfWeek().get());\n         assertEquals(\"Wednesday\", test.dayOfWeek().getAsText());\n         assertSame(test.getChronology().hourOfDay(), test.hourOfDay().getField());\n         assertEquals(\"hourOfDay\", test.hourOfDay().getName());\n         assertEquals(\"Property[hourOfDay]\", test.hourOfDay().toString());\n-        assertSame(test, test.hourOfDay().getReadableInstant());\n         assertSame(test, test.hourOfDay().getDateTime());\n         assertEquals(13, test.hourOfDay().get());\n         assertEquals(\"13\", test.hourOfDay().getAsText());\n         assertSame(test.getChronology().minuteOfHour(), test.minuteOfHour().getField());\n         assertEquals(\"minuteOfHour\", test.minuteOfHour().getName());\n         assertEquals(\"Property[minuteOfHour]\", test.minuteOfHour().toString());\n-        assertSame(test, test.minuteOfHour().getReadableInstant());\n         assertSame(test, test.minuteOfHour().getDateTime());\n         assertEquals(23, test.minuteOfHour().get());\n         assertEquals(\"23\", test.minuteOfHour().getAsText());\n         assertSame(test.getChronology().minuteOfDay(), test.minuteOfDay().getField());\n         assertEquals(\"minuteOfDay\", test.minuteOfDay().getName());\n         assertEquals(\"Property[minuteOfDay]\", test.minuteOfDay().toString());\n-        assertSame(test, test.minuteOfDay().getReadableInstant());\n         assertSame(test, test.minuteOfDay().getDateTime());\n         assertEquals(803, test.minuteOfDay().get());\n         assertEquals(\"803\", test.minuteOfDay().getAsText());\n         assertSame(test.getChronology().secondOfMinute(), test.secondOfMinute().getField());\n         assertEquals(\"secondOfMinute\", test.secondOfMinute().getName());\n         assertEquals(\"Property[secondOfMinute]\", test.secondOfMinute().toString());\n-        assertSame(test, test.secondOfMinute().getReadableInstant());\n         assertSame(test, test.secondOfMinute().getDateTime());\n         assertEquals(43, test.secondOfMinute().get());\n         assertEquals(\"43\", test.secondOfMinute().getAsText());\n         assertSame(test.getChronology().secondOfDay(), test.secondOfDay().getField());\n         assertEquals(\"secondOfDay\", test.secondOfDay().getName());\n         assertEquals(\"Property[secondOfDay]\", test.secondOfDay().toString());\n-        assertSame(test, test.secondOfDay().getReadableInstant());\n         assertSame(test, test.secondOfDay().getDateTime());\n         assertEquals(48223, test.secondOfDay().get());\n         assertEquals(\"48223\", test.secondOfDay().getAsText());\n         assertSame(test.getChronology().millisOfSecond(), test.millisOfSecond().getField());\n         assertEquals(\"millisOfSecond\", test.millisOfSecond().getName());\n         assertEquals(\"Property[millisOfSecond]\", test.millisOfSecond().toString());\n-        assertSame(test, test.millisOfSecond().getReadableInstant());\n         assertSame(test, test.millisOfSecond().getDateTime());\n         assertEquals(53, test.millisOfSecond().get());\n         assertEquals(\"53\", test.millisOfSecond().getAsText());\n         assertSame(test.getChronology().millisOfDay(), test.millisOfDay().getField());\n         assertEquals(\"millisOfDay\", test.millisOfDay().getName());\n         assertEquals(\"Property[millisOfDay]\", test.millisOfDay().toString());\n-        assertSame(test, test.millisOfDay().getReadableInstant());\n         assertSame(test, test.millisOfDay().getDateTime());\n         assertEquals(48223053, test.millisOfDay().get());\n         assertEquals(\"48223053\", test.millisOfDay().getAsText());", "timestamp": 1106498104, "metainfo": ""}