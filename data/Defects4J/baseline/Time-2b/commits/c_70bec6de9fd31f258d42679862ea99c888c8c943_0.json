{"sha": "70bec6de9fd31f258d42679862ea99c888c8c943", "log": "Use plus/minus method names   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n     }\n \n     //-----------------------------------------------------------------------\n-    public void testWithDurationAdded_long() {\n-        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n-        DateTime result = test.withDurationAdded(123456789L);\n-        DateTime expected = new DateTime(TEST_TIME1 + 123456789L, BuddhistChronology.getInstance());\n-        assertEquals(expected, result);\n-    }\n-    \n     public void testWithDurationAdded_long_int() {\n         DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n         DateTime result = test.withDurationAdded(123456789L, 1);\n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testWithDurationAdded_RD() {\n-        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n-        DateTime result = test.withDurationAdded(new Duration(123456789L));\n-        DateTime expected = new DateTime(TEST_TIME1 + 123456789L, BuddhistChronology.getInstance());\n-        assertEquals(expected, result);\n-        \n-        result = test.withDurationAdded(null);\n-        assertSame(test, result);\n-    }\n-    \n     public void testWithDurationAdded_RD_int() {\n         DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n         DateTime result = test.withDurationAdded(new Duration(123456789L), 1);\n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testWithPeriodAdded_RP() {\n-        DateTime test = new DateTime(2002, 5, 3, 1, 2, 3, 4, BuddhistChronology.getInstance());\n-        DateTime result = test.withPeriodAdded(new Period(1, 2, 3, 4, 5, 6, 7, 8));\n-        DateTime expected = new DateTime(2003, 7, 28, 6, 8, 10, 12, BuddhistChronology.getInstance());\n-        assertEquals(expected, result);\n-        \n-        result = test.withPeriodAdded(null);\n-        assertSame(test, result);\n-    }\n-    \n     public void testWithDurationAdded_RP_int() {\n         DateTime test = new DateTime(2002, 5, 3, 1, 2, 3, 4, BuddhistChronology.getInstance());\n         DateTime result = test.withPeriodAdded(new Period(1, 2, 3, 4, 5, 6, 7, 8), 1);\n         expected = new DateTime(2001, 3, 2, 0, 0, 0, 0, BuddhistChronology.getInstance());\n         assertEquals(expected, result);\n     }\n+\n+    //-----------------------------------------------------------------------    \n+    public void testPlus_long() {\n+        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n+        DateTime result = test.plus(123456789L);\n+        DateTime expected = new DateTime(TEST_TIME1 + 123456789L, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+    \n+    public void testPlus_RD() {\n+        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n+        DateTime result = test.plus(new Duration(123456789L));\n+        DateTime expected = new DateTime(TEST_TIME1 + 123456789L, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+        \n+        result = test.plus((ReadableDuration) null);\n+        assertSame(test, result);\n+    }\n+    \n+    public void testPlus_RP() {\n+        DateTime test = new DateTime(2002, 5, 3, 1, 2, 3, 4, BuddhistChronology.getInstance());\n+        DateTime result = test.plus(new Period(1, 2, 3, 4, 5, 6, 7, 8));\n+        DateTime expected = new DateTime(2003, 7, 28, 6, 8, 10, 12, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+        \n+        result = test.plus((ReadablePeriod) null);\n+        assertSame(test, result);\n+    }\n+    \n+    //-----------------------------------------------------------------------    \n+    public void testMinus_long() {\n+        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n+        DateTime result = test.minus(123456789L);\n+        DateTime expected = new DateTime(TEST_TIME1 - 123456789L, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+    }\n+    \n+    public void testMinus_RD() {\n+        DateTime test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());\n+        DateTime result = test.minus(new Duration(123456789L));\n+        DateTime expected = new DateTime(TEST_TIME1 - 123456789L, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+        \n+        result = test.minus((ReadableDuration) null);\n+        assertSame(test, result);\n+    }\n+    \n+    public void testMinus_RP() {\n+        DateTime test = new DateTime(2002, 5, 3, 1, 2, 3, 4, BuddhistChronology.getInstance());\n+        DateTime result = test.minus(new Period(1, 1, 1, 1, 1, 1, 1, 1));\n+        DateTime expected = new DateTime(2001, 3, 26, 0, 1, 2, 3, BuddhistChronology.getInstance());\n+        assertEquals(expected, result);\n+        \n+        result = test.minus((ReadablePeriod) null);\n+        assertSame(test, result);\n+    }\n     \n }", "timestamp": 1094679780, "metainfo": ""}