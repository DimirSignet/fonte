{"sha": "7b5032a43880b77549b3c2bedf5172b9248d4580", "log": "Better hash code distribution  Proposed by Greg Inozemtsev", "commit": "\n--- a/src/main/java/org/joda/time/DateTimeFieldType.java\n+++ b/src/main/java/org/joda/time/DateTimeFieldType.java\n         /** @inheritdoc */\n         @Override\n         public int hashCode() {\n-            return iOrdinal;\n+            return (1 << iOrdinal);\n         }\n \n         /** @inheritdoc */\n--- a/src/main/java/org/joda/time/DurationFieldType.java\n+++ b/src/main/java/org/joda/time/DurationFieldType.java\n         /** @inheritdoc */\n         @Override\n         public int hashCode() {\n-            return iOrdinal;\n+            return (1 << iOrdinal);\n         }\n \n         public DurationField getField(Chronology chronology) {\n--- a/src/test/java/org/joda/time/TestPeriodType.java\n+++ b/src/test/java/org/joda/time/TestPeriodType.java\n         }\n     }\n \n+    // ensure hash key distribution\n+    public void testForFields7() throws Exception {\n+        DurationFieldType[] types = new DurationFieldType[] {\n+            DurationFieldType.weeks(),\n+            DurationFieldType.months(),\n+        };\n+        DurationFieldType[] types2 = new DurationFieldType[] {\n+            DurationFieldType.seconds(),\n+        };\n+        PeriodType type = PeriodType.forFields(types);\n+        PeriodType type2 = PeriodType.forFields(types2);\n+        assertEquals(false, type == type2);\n+        assertEquals(false, type.equals(type2));\n+        assertEquals(false, type.hashCode() == type2.hashCode());\n+    }\n+\n     //-----------------------------------------------------------------------\n     public void testMaskYears() throws Exception {\n         PeriodType type = PeriodType.standard().withYearsRemoved();", "timestamp": 1323176695, "metainfo": ""}