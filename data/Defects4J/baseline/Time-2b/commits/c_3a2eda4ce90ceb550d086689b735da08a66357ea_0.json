{"sha": "3a2eda4ce90ceb550d086689b735da08a66357ea", "log": "Fix tests   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZone.java\n         \n         assertEquals(millisParis, LONDON.getMillisKeepLocal(PARIS, millisLondon));\n         assertEquals(millisLondon, PARIS.getMillisKeepLocal(LONDON, millisParis));\n-        assertEquals(millisLondon, PARIS.getMillisKeepLocal(null, millisParis));\n+        \n+        DateTimeZone zone = DateTimeZone.getDefault();\n+        try {\n+            DateTimeZone.setDefault(LONDON);\n+            assertEquals(millisLondon, PARIS.getMillisKeepLocal(null, millisParis));\n+        } finally {\n+            DateTimeZone.setDefault(zone);\n+        }\n     }\n \n     //-----------------------------------------------------------------------\n--- a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Sets.java\n+++ b/JodaTime/src/test/org/joda/time/TestMutableDateTime_Sets.java\n     }\n \n     public void testSetDate_Object2() {\n-        MutableDateTime test = new MutableDateTime(TEST_TIME1);\n-        test.setDate(null);\n-        assertEquals(TEST_TIME_NOW, test.getMillis());\n+        MutableDateTime test = new MutableDateTime(2010, 7, 8, 12, 24, 48, 501);\n+        test.setDate(null);  // sets to TEST_TIME_NOW\n+        assertEquals(2002, test.getYear());\n+        assertEquals(6, test.getMonthOfYear());\n+        assertEquals(9, test.getDayOfMonth());\n+        assertEquals(12, test.getHourOfDay());\n+        assertEquals(24, test.getMinuteOfHour());\n+        assertEquals(48, test.getSecondOfMinute());\n+        assertEquals(501, test.getMillisOfSecond());\n     }\n \n     //-----------------------------------------------------------------------\n     }\n \n     public void testSetTime_Object2() {\n-        MutableDateTime test = new MutableDateTime(TEST_TIME1);\n-        test.setTime(null);\n-        assertEquals(TEST_TIME_NOW, test.getMillis());\n+        MutableDateTime test = new MutableDateTime(2010, 7, 8, 12, 24, 48, 501);\n+        test.setTime(null);  // sets to TEST_TIME_NOW, which has no time part\n+        assertEquals(2010, test.getYear());\n+        assertEquals(7, test.getMonthOfYear());\n+        assertEquals(8, test.getDayOfMonth());\n+        assertEquals(new DateTime(TEST_TIME_NOW).getHourOfDay(), test.getHourOfDay());\n+        assertEquals(new DateTime(TEST_TIME_NOW).getMinuteOfHour(), test.getMinuteOfHour());\n+        assertEquals(new DateTime(TEST_TIME_NOW).getSecondOfMinute(), test.getSecondOfMinute());\n+        assertEquals(new DateTime(TEST_TIME_NOW).getMillisOfSecond(), test.getMillisOfSecond());\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1090110232, "metainfo": ""}