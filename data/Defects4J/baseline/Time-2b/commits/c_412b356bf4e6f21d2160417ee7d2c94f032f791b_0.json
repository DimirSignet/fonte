{"sha": "412b356bf4e6f21d2160417ee7d2c94f032f791b", "log": "Fixed bug parsing time zone offset where zero offset text is an empty string.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java\n         }\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n+            int limit = text.length() - position;\n+\n+            zeroOffset:\n             if (iZeroOffsetText != null) {\n+                if (iZeroOffsetText.length() == 0) {\n+                    // Peek ahead, looking for sign character.\n+                    if (limit > 0) {\n+                        char c = text.charAt(position);\n+                        if (c == '-' || c == '+') {\n+                            break zeroOffset;\n+                        }\n+                    }\n+                    bucket.setOffset(0);\n+                    return position;\n+                }\n                 if (text.regionMatches(true, position, iZeroOffsetText, 0,\n                                        iZeroOffsetText.length())) {\n                     bucket.setOffset(0);\n \n             // Format to expect is sign character followed by at least one digit.\n \n-            int limit = text.length() - position;\n             if (limit <= 1) {\n                 return ~position;\n             }", "timestamp": 1086276737, "metainfo": ""}