{"sha": "331282f8082168aa43ee92ad2a57374aa073f74e", "log": "Comment updates.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateOnly.java\n+++ b/JodaTime/src/java/org/joda/time/DateOnly.java\n      * The returned object will be a new instance of the same implementation type.\n      * Only the millis will change, the chronology is kept.\n      * Time fields will be removed from the specified millis.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newMillis  the new millis, from 1970-01-01T00:00:00Z\n      * @return a copy of this instant with different millis\n      * The returned object will be a new instance of the same implementation type.\n      * Only the chronology will change, the millis are kept.\n      * The chronology will be converted to a UTC zone.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newChronology  the new chronology\n      * @return a copy of this instant with a different chronology\n--- a/JodaTime/src/java/org/joda/time/DateTime.java\n+++ b/JodaTime/src/java/org/joda/time/DateTime.java\n      * <p>\n      * The returned object will be a new instance of the same implementation type.\n      * Only the millis will change, the chronology and time zone are kept.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newMillis  the new millis, from 1970-01-01T00:00:00Z\n      * @return a copy of this instant with different millis\n      * <p>\n      * The returned object will be a new instance of the same implementation type.\n      * Only the chronology will change, the millis are kept.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newChronology  the new chronology\n      * @return a copy of this instant with a different chronology\n      * The returned object will be a new instance of the same implementation type.\n      * This method changes alters the time zone, and does not change the\n      * millisecond instant, with the effect that the field values usually change.\n-     * Immutable implementations may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newDateTimeZone  the new time zone\n      * @return a copy of this instant with a different time zone\n      * The returned object will be a new instance of the same implementation type.\n      * This method changes alters the time zone and the millisecond instant to keep\n      * the field values the same.\n-     * Immutable implementations may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newDateTimeZone  the new time zone\n      * @return a copy of this instant with a different time zone\n         final DateTimeZone originalZone;\n         if (originalChrono == null || (originalZone = originalChrono.getZone()) == null) {\n             // Without an original chronology or time zone, no new time zone\n-            // can be set. Call withMillis to allow subclass to decide if a\n-            // clone should be made or not.\n+            // can be set. Call withMillis to let it decide if a clone should\n+            // be made or not.\n             return withMillis(originalMillis);\n         }\n \n--- a/JodaTime/src/java/org/joda/time/TimeOnly.java\n+++ b/JodaTime/src/java/org/joda/time/TimeOnly.java\n      * The returned object will be a new instance of the same implementation type.\n      * Only the millis will change, the chronology is kept.\n      * Date fields will be removed from the millis.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newMillis  the new millis, from 1970-01-01T00:00:00Z\n      * @return a copy of this instant with different millis\n      * The returned object will be a new instance of the same implementation type.\n      * Only the chronology will change, the millis are kept.\n      * The chronology will be converted to a UTC zone.\n-     * Immutable subclasses may return <code>this</code> if appropriate.\n+     * The returned object will be either be a new instance or <code>this</code>.\n      *\n      * @param newChronology  the new chronology\n      * @return a copy of this instant with a different chronology", "timestamp": 1083078488, "metainfo": ""}