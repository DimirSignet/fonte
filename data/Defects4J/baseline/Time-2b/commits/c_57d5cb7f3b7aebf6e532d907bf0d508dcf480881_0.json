{"sha": "57d5cb7f3b7aebf6e532d907bf0d508dcf480881", "log": "Increase test coverage   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDuration_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDuration_Basics.java\n     }\n \n     //-----------------------------------------------------------------------\n-    public void testToDuration() {\n+    public void testToDuration1() {\n         Duration test = new Duration(123L);\n         Duration result = test.toDuration();\n         assertSame(test, result);\n     }\n-\n+    \n+    public void testToDuration2() {\n+        MockDuration test = new MockDuration(123L);\n+        Duration result = test.toDuration();\n+        assertNotSame(test, result);\n+        assertEquals(test, result);\n+    }\n+    \n     //-----------------------------------------------------------------------\n     public void testToPeriod1() {\n         long length =\n     //-----------------------------------------------------------------------\n     public void testImmutable() {\n         MockChangeDuration test = new MockChangeDuration(111L);\n-        test.testSetDuration_RD();\n+        test.testSetDuration_RD_1();\n+        assertEquals(111L, test.getMillis());\n+        \n+        test = new MockChangeDuration(111L);\n+        test.testSetDuration_RD_2();\n         assertEquals(111L, test.getMillis());\n         \n         test = new MockChangeDuration(111L);\n         MockChangeDuration(long duration) {\n             super(duration);\n         }\n-        public void testSetDuration_RD() {\n+        public void testSetDuration_RD_1() {\n             setDuration(null);\n+        }\n+        public void testSetDuration_RD_2() {\n+            setDuration(new Duration(0L));\n         }\n         public void testSetMillis() {\n             setMillis(0L);\n         }\n     }\n \n+    //-----------------------------------------------------------------------\n+    public void testMutable() {\n+        // No MutableDuration class, so this tests relevant methods in AbstractDuration\n+        MockMutableDuration mutable = new MockMutableDuration(111L);\n+        assertEquals(111L, mutable.getMillis());\n+        \n+        mutable.setMillis(1234L);\n+        assertEquals(1234L, mutable.getMillis());\n+        \n+        mutable.setDuration(null);\n+        assertEquals(0L, mutable.getMillis());\n+        \n+        mutable.setDuration(new Duration(123L));\n+        assertEquals(123L, mutable.getMillis());\n+    }\n+    \n+    static class MockMutableDuration extends AbstractDuration {\n+        MockMutableDuration(long duration) {\n+            super(duration);\n+        }\n+        public void setDuration(ReadableDuration d) {\n+            super.setDuration(d);\n+        }\n+        public void setMillis(long d) {\n+            super.setMillis(d);\n+        }\n+    }\n+\n }\n--- a/JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java\n         assertEquals(test.isPrecise(), copy.isPrecise());\n         assertEquals(test.toDurationMillis(), copy.toDurationMillis());\n     }\n-\n+    \n }\n--- a/JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java\n+++ b/JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setYears(0);\n         assertEquals(0, test.getYears());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setYears(1);\n+        assertEquals(1, test.getYears());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setMonths(0);\n         assertEquals(0, test.getMonths());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setMonths(2);\n+        assertEquals(2, test.getMonths());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setWeeks(0);\n         assertEquals(0, test.getWeeks());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setWeeks(3);\n+        assertEquals(3, test.getWeeks());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setDays(0);\n         assertEquals(0, test.getDays());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setDays(4);\n+        assertEquals(4, test.getDays());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setHours(0);\n         assertEquals(0, test.getHours());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setHours(5);\n+        assertEquals(5, test.getHours());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setMinutes(0);\n         assertEquals(0, test.getMinutes());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setMinutes(6);\n+        assertEquals(6, test.getMinutes());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setSeconds(0);\n         assertEquals(0, test.getSeconds());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setSeconds(7);\n+        assertEquals(7, test.getSeconds());\n     }\n \n     //-----------------------------------------------------------------------\n         test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setMillis(0);\n         assertEquals(0, test.getMillis());\n+        \n+        test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setMillis(8);\n+        assertEquals(8, test.getMillis());\n     }\n \n     //-----------------------------------------------------------------------\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testSetPeriod_RInterval1() {\n+        MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        DateTime dt1 = new DateTime(2002, 6, 9, 13, 15, 17, 19);\n+        DateTime dt2 = new DateTime(2003, 7, 17, 14, 16, 18, 20);\n+        test.setPeriod(new Interval(dt1, dt2));\n+        assertEquals(1, test.getYears());\n+        assertEquals(1, test.getMonths());\n+        assertEquals(1, test.getWeeks());\n+        assertEquals(1, test.getDays());\n+        assertEquals(1, test.getHours());\n+        assertEquals(1, test.getMinutes());\n+        assertEquals(1, test.getSeconds());\n+        assertEquals(1, test.getMillis());\n+    }\n+\n+    public void testSetPeriod_RInterval2() {\n+        MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setPeriod((ReadableInterval) null);\n+        assertEquals(0, test.getYears());\n+        assertEquals(0, test.getMonths());\n+        assertEquals(0, test.getWeeks());\n+        assertEquals(0, test.getDays());\n+        assertEquals(0, test.getHours());\n+        assertEquals(0, test.getMinutes());\n+        assertEquals(0, test.getSeconds());\n+        assertEquals(0, test.getMillis());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testSetPeriod_long1() {\n         MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         test.setPeriod(100L);\n         assertEquals(7, test.getSeconds());\n         assertEquals(0, test.getMillis());\n         assertEquals(ms - 8, test.toDurationMillis());\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testSetPeriod_RD1() {\n+        MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setPeriod(new Duration(100L));\n+        assertEquals(0, test.getYears());\n+        assertEquals(0, test.getMonths());\n+        assertEquals(0, test.getWeeks());\n+        assertEquals(0, test.getDays());\n+        assertEquals(0, test.getHours());\n+        assertEquals(0, test.getMinutes());\n+        assertEquals(0, test.getSeconds());\n+        assertEquals(100, test.getMillis());\n+    }\n+\n+    public void testSetPeriod_RD2() {\n+        MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        long length =\n+            (4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +\n+            5L * DateTimeConstants.MILLIS_PER_HOUR +\n+            6L * DateTimeConstants.MILLIS_PER_MINUTE +\n+            7L * DateTimeConstants.MILLIS_PER_SECOND + 8L;\n+        test.setPeriod(new Duration(length));\n+        // only time fields are precise\n+        assertEquals(0, test.getYears());  // (4 + (3 * 7) + (2 * 30) + 365) == 450\n+        assertEquals(0, test.getMonths());\n+        assertEquals(0, test.getWeeks());\n+        assertEquals(0, test.getDays());\n+        assertEquals((450 * 24) + 5, test.getHours());\n+        assertEquals(6, test.getMinutes());\n+        assertEquals(7, test.getSeconds());\n+        assertEquals(8, test.getMillis());\n+    }\n+\n+    public void testSetPeriod_RD3() {\n+        MutablePeriod test = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);\n+        test.setPeriod((ReadableDuration) null);\n+        assertEquals(0, test.getYears());\n+        assertEquals(0, test.getMonths());\n+        assertEquals(0, test.getWeeks());\n+        assertEquals(0, test.getDays());\n+        assertEquals(0, test.getHours());\n+        assertEquals(0, test.getMinutes());\n+        assertEquals(0, test.getSeconds());\n+        assertEquals(0, test.getMillis());\n     }\n \n     //-----------------------------------------------------------------------\n--- a/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java\n     //-----------------------------------------------------------------------\n     public void testImmutable() {\n         MockChangeDuration test = new MockChangeDuration(111L);\n-        test.testSetDuration_RD();\n-        assertEquals(111L, test.toDurationMillis());\n-        \n-        test = new MockChangeDuration(111L);\n-        test.testSetDuration_ints();\n-        assertEquals(111L, test.toDurationMillis());\n-        \n-        test = new MockChangeDuration(111L);\n-        test.testSetTotalMillis_1();\n-        assertEquals(111L, test.toDurationMillis());\n-        \n-        test = new MockChangeDuration(111L);\n-        test.testSetTotalMillis_2();\n+        test.testSetPeriod_RP();\n+        assertEquals(111L, test.toDurationMillis());\n+        \n+        test = new MockChangeDuration(111L);\n+        test.testSetPeriod_RD();\n+        assertEquals(111L, test.toDurationMillis());\n+        \n+        test = new MockChangeDuration(111L);\n+        test.testSetPeriod_ints();\n+        assertEquals(111L, test.toDurationMillis());\n+        \n+        test = new MockChangeDuration(111L);\n+        test.testSetPeriod_1();\n+        assertEquals(111L, test.toDurationMillis());\n+        \n+        test = new MockChangeDuration(111L);\n+        test.testSetPeriod_2();\n         assertEquals(111L, test.toDurationMillis());\n         \n         test = new MockChangeDuration(111L);\n         MockChangeDuration(long duration) {\n             super(duration);\n         }\n-        public void testSetDuration_RD() {\n+        public void testSetPeriod_RP() {\n+            setPeriod((ReadablePeriod) null);\n+        }\n+        public void testSetPeriod_RD() {\n             setPeriod((ReadableDuration) null);\n         }\n-        public void testSetDuration_ints() {\n+        public void testSetPeriod_ints() {\n             setPeriod(1, 2, 3, 4, 5, 6, 7, 8);\n         }\n-        public void testSetTotalMillis_1() {\n+        public void testSetPeriod_1() {\n             setPeriod(123L);\n         }\n-        public void testSetTotalMillis_2() {\n+        public void testSetPeriod_2() {\n             setPeriod(123L, 321L);\n         }\n         public void testSetYears() {", "timestamp": 1091888915, "metainfo": ""}