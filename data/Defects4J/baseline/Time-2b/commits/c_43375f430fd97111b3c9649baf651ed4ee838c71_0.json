{"sha": "43375f430fd97111b3c9649baf651ed4ee838c71", "log": "Add method to compare intervals ignoring the chronology  Also enhance equals() Javadoc", "commit": "\n--- a/src/main/java/org/joda/time/base/AbstractInterval.java\n+++ b/src/main/java/org/joda/time/base/AbstractInterval.java\n \n     //-----------------------------------------------------------------------\n     /**\n+     * Is this interval equal to the specified interval ignoring the chronology.\n+     * <p>\n+     * This compares the underlying instants, ignoring the chronology.\n+     *\n+     * @param other  a readable interval to check against\n+     * @return true if the intervals are equal comparing the start and end millis\n+     */\n+    public boolean isEqual(ReadableInterval other) {\n+        return getStartMillis() == other.getStartMillis() &&\n+                getEndMillis() == other.getEndMillis();\n+    }\n+\n+    /**\n      * Is this time interval before the specified millisecond instant.\n      * <p>\n      * Intervals are inclusive of the start instant and exclusive of the end.\n      * to get the durations and compare those.\n      *\n      * @param readableInterval  a readable interval to check against\n-     * @return true if the start and end millis are equal\n+     * @return true if the intervals are equal comparing the start millis,\n+     *  end millis and chronology\n      */\n     public boolean equals(Object readableInterval) {\n         if (this == readableInterval) {\n--- a/src/test/java/org/joda/time/TestInterval_Basics.java\n+++ b/src/test/java/org/joda/time/TestInterval_Basics.java\n         assertEquals(false,  interval37.abuts((ReadableInterval) null));  // gap after\n     }\n \n-    // -----------------------------------------------------------------------\n+    //-----------------------------------------------------------------------\n+    public void testIsEqual_RI() {\n+        assertEquals(false, interval37.isEqual(interval33));\n+        assertEquals(true, interval37.isEqual(interval37));\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testIsBefore_long() {\n         assertEquals(false, interval37.isBefore(2));\n         assertEquals(false, interval37.isBefore(3));", "timestamp": 1367240542, "metainfo": ""}