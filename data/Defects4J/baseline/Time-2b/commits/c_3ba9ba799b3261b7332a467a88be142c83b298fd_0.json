{"sha": "3ba9ba799b3261b7332a467a88be142c83b298fd", "log": "Prevent creation of invalid partials via Partial.with(DateTimeFieldType,int)  Validation in this method was not as thorough as that in the constructor This allowed invalid partials to be created Fixes #88", "commit": "\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n /*\n- *  Copyright 2001-2009 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n             newValues[i] = value;\n             System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);\n             System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);\n-            \n-            Partial newPartial = new Partial(iChronology, newTypes, newValues);\n+            // use public constructor to ensure full validation\n+            // this isn't overly efficient, but is safe\n+            Partial newPartial = new Partial(newTypes, newValues, iChronology);\n             iChronology.validate(newPartial, newValues);\n             return newPartial;\n         }\n--- a/src/test/java/org/joda/time/TestPartial_Basics.java\n+++ b/src/test/java/org/joda/time/TestPartial_Basics.java\n         check(test, 10, 20);\n     }\n \n+    public void testWith3() {\n+        Partial test = createHourMinPartial();\n+        try {\n+            test.with(DateTimeFieldType.clockhourOfDay(), 6);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        check(test, 10, 20);\n+    }\n+\n     public void testWith3a() {\n         Partial test = createHourMinPartial();\n         Partial result = test.with(DateTimeFieldType.secondOfMinute(), 15);\n--- a/src/test/java/org/joda/time/TestPartial_Constructors.java\n+++ b/src/test/java/org/joda/time/TestPartial_Constructors.java\n         } catch (IllegalArgumentException ex) {\n             assertMessageContains(ex, \"must not\", \"duplicate\");\n         }\n+        \n+        types = new DateTimeFieldType[] {\n+            DateTimeFieldType.dayOfMonth(), DateTimeFieldType.clockhourOfDay(), DateTimeFieldType.hourOfDay() };\n+        try {\n+            new Partial(types, values);\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+            assertMessageContains(ex, \"must not\", \"duplicate\");\n+        }\n     }\n \n     /**", "timestamp": 1385555795, "metainfo": ""}