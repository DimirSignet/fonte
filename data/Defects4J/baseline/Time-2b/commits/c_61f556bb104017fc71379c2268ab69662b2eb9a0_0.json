{"sha": "61f556bb104017fc71379c2268ab69662b2eb9a0", "log": "In set, fix range check for fields with imprecise ranges.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/chrono/PreciseDurationDateTimeField.java\n+++ b/JodaTime/src/java/org/joda/time/chrono/PreciseDurationDateTimeField.java\n      * @throws IllegalArgumentException if value is too large or too small.\n      */\n     public long set(long instant, int value) {\n-        Utils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());\n+        int max;\n+        if (getRangeDurationField().isPrecise()) {\n+            max = getMaximumValue();\n+        } else {\n+            max = getMaximumValueForSet(instant, value);\n+        }\n+        Utils.verifyValueBounds(this, value, getMinimumValue(), max);\n         return instant + (value - get(instant)) * iUnitMillis;\n     }\n \n         return iUnitMillis;\n     }\n \n+    /**\n+     * Called by the set method if the range duration field is imprecise. By\n+     * default, returns getMaximumValue(instant). Override to provide a faster\n+     * implementation.\n+     */\n+    protected int getMaximumValueForSet(long instant, int value) {\n+        return getMaximumValue(instant);\n+    }\n+\n }", "timestamp": 1073115771, "metainfo": ""}