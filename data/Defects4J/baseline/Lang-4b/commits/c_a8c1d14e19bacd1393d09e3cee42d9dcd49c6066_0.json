{"sha": "a8c1d14e19bacd1393d09e3cee42d9dcd49c6066", "log": "[LANG-873] Add FieldUtils getAllFields() to return all the fields defined in the given class and super classes.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n     }\n \n     /**\n-     * Gets all declared fields of the given class and its parents (if any).\n+     * Gets all fields of the given class and its parents (if any).\n      * \n      * @param cls\n      *            the class to query\n      * @return an array of Fields (maybe an empty array).\n      * @since 3.2\n      */\n-    public static Field[] getDeclaredFields(Class<?> cls) {\n+    public static Field[] getAllFields(Class<?> cls) {\n         if (cls == null) {\n             throw new IllegalArgumentException(\"The class must not be null\");\n         }\n--- a/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n     }\n \n     @Test\n-    public void testGetDeclaredFields() {\n-        assertArrayEquals(new Field[0], FieldUtils.getDeclaredFields(Object.class));\n+    public void testGetAllFields() {\n+        assertArrayEquals(new Field[0], FieldUtils.getAllFields(Object.class));\n         final Field[] fieldsNumber = Number.class.getDeclaredFields();\n-        assertArrayEquals(fieldsNumber, FieldUtils.getDeclaredFields(Number.class));\n+        assertArrayEquals(fieldsNumber, FieldUtils.getAllFields(Number.class));\n         final Field[] fieldsInteger = Integer.class.getDeclaredFields();\n-        assertArrayEquals(ArrayUtils.addAll(fieldsInteger, fieldsNumber), FieldUtils.getDeclaredFields(Integer.class));\n-        assertEquals(5, FieldUtils.getDeclaredFields(PublicChild.class).length);\n+        assertArrayEquals(ArrayUtils.addAll(fieldsInteger, fieldsNumber), FieldUtils.getAllFields(Integer.class));\n+        assertEquals(5, FieldUtils.getAllFields(PublicChild.class).length);\n     }\n \n     @Test", "timestamp": 1363190141, "metainfo": ""}