{"sha": "77f0373b1488beffebe5c834bdbac234e8f2c354", "log": "Severity\tDescription\tResource\tIn Folder\tLocation\tCreation Time \tThe static method setAccessible(AccessibleObject[], boolean) from the type AccessibleObject should be accessed directly \tEqualsBuilder.java\tApache Jakarta Commons/lang/src/java/org/apache/commons/lang/builder\tline 268\tJuly 19, 2003 6:10:35 PM   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n  */\n package org.apache.commons.lang.builder;\n \n+import java.lang.reflect.AccessibleObject;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n /**\n  *\n  * <p> Alternatively, there is a method that uses reflection to determine\n  * the fields to test. Because these fields are usually private, the method,\n- * <code>reflectionEquals</code>, uses <code>Field.setAccessible</code> to\n+ * <code>reflectionEquals</code>, uses <code>AccessibleObject.setAccessible</code> to\n  * change the visibility of the fields. This will fail under a security\n  * manager, unless the appropriate permissions are set up correctly. It is\n  * also slower than testing explicitly.</p>\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @since 1.0\n- * @version $Id: EqualsBuilder.java,v 1.14 2003/07/14 22:25:03 bayard Exp $\n+ * @version $Id: EqualsBuilder.java,v 1.15 2003/07/20 01:11:05 ggregory Exp $\n  */\n public class EqualsBuilder {\n     /**\n      * <p>This method uses reflection to determine if the two <code>Object</code>s\n      * are equal.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if the permissions are not set up correctly. It is also\n      * not as efficient as testing explicitly.</p>\n      * <p>This method uses reflection to determine if the two <code>Object</code>s\n      * are equal.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if the permissions are not set up correctly. It is also\n      * not as efficient as testing explicitly.</p>\n      * <p>This method uses reflection to determine if the two <code>Object</code>s\n      * are equal.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if the permissions are not set up correctly. It is also\n      * not as efficient as testing explicitly.</p>\n         EqualsBuilder builder,\n         boolean useTransients) {\n         Field[] fields = clazz.getDeclaredFields();\n-        Field.setAccessible(fields, true);\n+        AccessibleObject.setAccessible(fields, true);\n         for (int i = 0; i < fields.length && builder.isEquals; i++) {\n             Field f = fields[i];\n             if ((f.getName().indexOf('$') == -1)", "timestamp": 1058663465, "metainfo": ""}