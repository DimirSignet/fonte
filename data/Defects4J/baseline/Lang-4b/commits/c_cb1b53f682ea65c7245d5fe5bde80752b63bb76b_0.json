{"sha": "cb1b53f682ea65c7245d5fe5bde80752b63bb76b", "log": "Add appendNewLine()  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n import java.util.Iterator;\n \n import org.apache.commons.lang.ArrayUtils;\n+import org.apache.commons.lang.SystemUtils;\n \n /**\n  * Builds a string from consituant parts providing a more flexible and powerful API\n     protected char[] buffer;\n     /** Current size of the buffer. */\n     protected int size;\n+    /** The new line. */\n+    private String newLine;\n     /** The null text. */\n     private String nullText;\n \n \n     //-----------------------------------------------------------------------\n     /**\n+     * Gets the text to be appended when a new line is added.\n+     *\n+     * @return the new line text, null means use system default\n+     */\n+    public String getNewLineText() {\n+        return newLine;\n+    }\n+\n+    /**\n+     * Sets the text to be appended when a new line is added.\n+     *\n+     * @param newLine  the new line text, null means use system default\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder setNewLineText(String newLine) {\n+        this.newLine = newLine;\n+        return this;\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Gets the text to be appended when null is added.\n      *\n      * @return the null text, null means no append\n     /**\n      * Sets the text to be appended when null is added.\n      *\n-     * @param str  the null text, null means no append\n-     * @return this, to enable chaining\n-     */\n-    public StrBuilder setNullText(String str) {\n-        if (str != null && str.length() == 0) {\n-            str = null;\n-        }\n-        nullText = str;\n+     * @param nullText  the null text, null means no append\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder setNullText(String nullText) {\n+        if (nullText != null && nullText.length() == 0) {\n+            nullText = null;\n+        }\n+        this.nullText = nullText;\n         return this;\n     }\n \n     }\n \n     //-----------------------------------------------------------------------\n+    /**\n+     * Appends the new line string to this string builder.\n+     * <p>\n+     * The new line string can be altered using {@link #setNewLineText(String)}.\n+     * This might be used to force the output to always use Unix line endings\n+     * even when on Windows.\n+     *\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder appendNewLine() {\n+        if (newLine == null)  {\n+            append(SystemUtils.LINE_SEPARATOR);\n+            return this;\n+        }\n+        return append(newLine);\n+    }\n+\n     /**\n      * Appends the text representing <code>null</code> to this string builder.\n      *\n--- a/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n import java.util.Collections;\n import java.util.Iterator;\n \n+import org.apache.commons.lang.SystemUtils;\n+\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testAppendNewLine() {\n+        StrBuilder sb = new StrBuilder(\"---\");\n+        sb.appendNewLine().append(\"+++\");\n+        assertEquals(\"---\" + SystemUtils.LINE_SEPARATOR + \"+++\", sb.toString());\n+        \n+        sb = new StrBuilder(\"---\");\n+        sb.setNewLineText(\"#\").appendNewLine().setNewLineText(null).appendNewLine();\n+        assertEquals(\"---#\" + SystemUtils.LINE_SEPARATOR, sb.toString());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testAppendWithNullText() {\n         StrBuilder sb = new StrBuilder();\n         sb.setNullText(\"NULL\");\n--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n     //-----------------------------------------------------------------------\n     public void testChaining() {\n         StrBuilder sb = new StrBuilder();\n+        assertSame(sb, sb.setNewLineText(null));\n         assertSame(sb, sb.setNullText(null));\n         assertSame(sb, sb.setLength(1));\n         assertSame(sb, sb.setCharAt(0, 'a'));\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testGetSetNewLineText() {\n+        StrBuilder sb = new StrBuilder();\n+        assertEquals(null, sb.getNewLineText());\n+\n+        sb.setNewLineText(\"#\");\n+        assertEquals(\"#\", sb.getNewLineText());\n+\n+        sb.setNewLineText(\"\");\n+        assertEquals(\"\", sb.getNewLineText());\n+\n+        sb.setNewLineText((String) null);\n+        assertEquals(null, sb.getNewLineText());\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testGetSetNullText() {\n+        StrBuilder sb = new StrBuilder();\n+        assertEquals(null, sb.getNullText());\n+\n+        sb.setNullText(\"null\");\n+        assertEquals(\"null\", sb.getNullText());\n+\n+        sb.setNullText(\"\");\n+        assertEquals(null, sb.getNullText());\n+\n+        sb.setNullText(\"NULL\");\n+        assertEquals(\"NULL\", sb.getNullText());\n+\n+        sb.setNullText((String) null);\n+        assertEquals(null, sb.getNullText());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testCapacityAndLength() {\n         StrBuilder sb = new StrBuilder();\n         assertEquals(32, sb.capacity());\n         }\n         catch (IndexOutOfBoundsException e) {\n         }\n-    }\n-\n-    //-----------------------------------------------------------------------\n-    public void testNullText() {\n-        StrBuilder sb = new StrBuilder();\n-        assertEquals(null, sb.getNullText());\n-\n-        sb.setNullText(\"null\");\n-        assertEquals(\"null\", sb.getNullText());\n-\n-        sb.setNullText(\"\");\n-        assertEquals(null, sb.getNullText());\n-\n-        sb.setNullText(\"NULL\");\n-        assertEquals(\"NULL\", sb.getNullText());\n-\n-        sb.setNullText((String) null);\n-        assertEquals(null, sb.getNullText());\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1124532856, "metainfo": ""}