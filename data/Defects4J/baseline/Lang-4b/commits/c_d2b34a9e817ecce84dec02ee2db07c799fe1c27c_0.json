{"sha": "d2b34a9e817ecce84dec02ee2db07c799fe1c27c", "log": "Avoid compilation warnings  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n         assertEquals(\"appendIfMissing(abcxyz,xyz)\", \"abcxyz\", StringUtils.appendIfMissing(\"abcxyz\",\"xyz\"));\n         assertEquals(\"appendIfMissing(aXYZ,xyz)\", \"aXYZxyz\", StringUtils.appendIfMissing(\"aXYZ\",\"xyz\"));\n \n-        assertEquals(\"appendIfMissing(null,null,null)\", null, StringUtils.appendIfMissing(null,null,null));\n-        assertEquals(\"appendIfMissing(abc,null,null)\", \"abc\", StringUtils.appendIfMissing(\"abc\",null,null));\n-        assertEquals(\"appendIfMissing(\\\"\\\",xyz,null))\", \"xyz\", StringUtils.appendIfMissing(\"\",\"xyz\",null));\n+        assertEquals(\"appendIfMissing(null,null,null)\", null, StringUtils.appendIfMissing(null,null,(CharSequence[]) null));\n+        assertEquals(\"appendIfMissing(abc,null,null)\", \"abc\", StringUtils.appendIfMissing(\"abc\",null,(CharSequence[]) null));\n+        assertEquals(\"appendIfMissing(\\\"\\\",xyz,null))\", \"xyz\", StringUtils.appendIfMissing(\"\",\"xyz\",(CharSequence[]) null));\n         assertEquals(\"appendIfMissing(abc,xyz,\\\"\\\")\", \"abc\", StringUtils.appendIfMissing(\"abc\",\"xyz\",\"\"));\n         assertEquals(\"appendIfMissing(abc,xyz,mno)\", \"abcxyz\", StringUtils.appendIfMissing(\"abc\",\"xyz\",\"mno\"));\n         assertEquals(\"appendIfMissing(abcxyz,xyz,mno)\", \"abcxyz\", StringUtils.appendIfMissing(\"abcxyz\",\"xyz\",\"mno\"));\n         assertEquals(\"appendIfMissingIgnoreCase(abcxyz,xyz)\", \"abcxyz\", StringUtils.appendIfMissingIgnoreCase(\"abcxyz\",\"xyz\"));\n         assertEquals(\"appendIfMissingIgnoreCase(abcXYZ,xyz)\", \"abcXYZ\", StringUtils.appendIfMissingIgnoreCase(\"abcXYZ\",\"xyz\"));\n \n-        assertEquals(\"appendIfMissingIgnoreCase(null,null,null)\", null, StringUtils.appendIfMissingIgnoreCase(null,null,null));\n-        assertEquals(\"appendIfMissingIgnoreCase(abc,null,null)\", \"abc\", StringUtils.appendIfMissingIgnoreCase(\"abc\",null,null));\n-        assertEquals(\"appendIfMissingIgnoreCase(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.appendIfMissingIgnoreCase(\"\",\"xyz\",null));\n+        assertEquals(\"appendIfMissingIgnoreCase(null,null,null)\", null, StringUtils.appendIfMissingIgnoreCase(null,null,(CharSequence[]) null));\n+        assertEquals(\"appendIfMissingIgnoreCase(abc,null,null)\", \"abc\", StringUtils.appendIfMissingIgnoreCase(\"abc\",null,(CharSequence[]) null));\n+        assertEquals(\"appendIfMissingIgnoreCase(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.appendIfMissingIgnoreCase(\"\",\"xyz\",(CharSequence[]) null));\n         assertEquals(\"appendIfMissingIgnoreCase(abc,xyz,\\\"\\\")\", \"abc\", StringUtils.appendIfMissingIgnoreCase(\"abc\",\"xyz\",\"\"));\n         assertEquals(\"appendIfMissingIgnoreCase(abc,xyz,mno)\", \"abcxyz\", StringUtils.appendIfMissingIgnoreCase(\"abc\",\"xyz\",\"mno\"));\n         assertEquals(\"appendIfMissingIgnoreCase(abcxyz,xyz,mno)\", \"abcxyz\", StringUtils.appendIfMissingIgnoreCase(\"abcxyz\",\"xyz\",\"mno\"));       \n         assertEquals(\"prependIfMissing(xyzabc,xyz)\", \"xyzabc\", StringUtils.prependIfMissing(\"xyzabc\",\"xyz\"));\n         assertEquals(\"prependIfMissing(XYZabc,xyz)\", \"xyzXYZabc\", StringUtils.prependIfMissing(\"XYZabc\",\"xyz\"));\n \n-        assertEquals(\"prependIfMissing(null,null null)\", null, StringUtils.prependIfMissing(null,null,null));\n-        assertEquals(\"prependIfMissing(abc,null,null)\", \"abc\", StringUtils.prependIfMissing(\"abc\",null,null));\n-        assertEquals(\"prependIfMissing(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.prependIfMissing(\"\",\"xyz\",null));\n+        assertEquals(\"prependIfMissing(null,null null)\", null, StringUtils.prependIfMissing(null,null,(CharSequence[]) null));\n+        assertEquals(\"prependIfMissing(abc,null,null)\", \"abc\", StringUtils.prependIfMissing(\"abc\",null,(CharSequence[]) null));\n+        assertEquals(\"prependIfMissing(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.prependIfMissing(\"\",\"xyz\",(CharSequence[]) null));\n         assertEquals(\"prependIfMissing(abc,xyz,\\\"\\\")\",\"abc\", StringUtils.prependIfMissing(\"abc\",\"xyz\",\"\"));\n         assertEquals(\"prependIfMissing(abc,xyz,mno)\",\"xyzabc\", StringUtils.prependIfMissing(\"abc\",\"xyz\",\"mno\"));\n         assertEquals(\"prependIfMissing(xyzabc,xyz,mno)\", \"xyzabc\", StringUtils.prependIfMissing(\"xyzabc\",\"xyz\",\"mno\"));\n         assertEquals(\"prependIfMissingIgnoreCase(xyzabc,xyz)\", \"xyzabc\", StringUtils.prependIfMissingIgnoreCase(\"xyzabc\",\"xyz\"));\n         assertEquals(\"prependIfMissingIgnoreCase(XYZabc,xyz)\", \"XYZabc\", StringUtils.prependIfMissingIgnoreCase(\"XYZabc\",\"xyz\"));\n \n-        assertEquals(\"prependIfMissingIgnoreCase(null,null null)\", null, StringUtils.prependIfMissingIgnoreCase(null,null,null));\n-        assertEquals(\"prependIfMissingIgnoreCase(abc,null,null)\", \"abc\", StringUtils.prependIfMissingIgnoreCase(\"abc\",null,null));\n-        assertEquals(\"prependIfMissingIgnoreCase(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.prependIfMissingIgnoreCase(\"\",\"xyz\",null));\n+        assertEquals(\"prependIfMissingIgnoreCase(null,null null)\", null, StringUtils.prependIfMissingIgnoreCase(null,null,(CharSequence[]) null));\n+        assertEquals(\"prependIfMissingIgnoreCase(abc,null,null)\", \"abc\", StringUtils.prependIfMissingIgnoreCase(\"abc\",null,(CharSequence[]) null));\n+        assertEquals(\"prependIfMissingIgnoreCase(\\\"\\\",xyz,null)\", \"xyz\", StringUtils.prependIfMissingIgnoreCase(\"\",\"xyz\",(CharSequence[]) null));\n         assertEquals(\"prependIfMissingIgnoreCase(abc,xyz,\\\"\\\")\",\"abc\", StringUtils.prependIfMissingIgnoreCase(\"abc\",\"xyz\",\"\"));\n         assertEquals(\"prependIfMissingIgnoreCase(abc,xyz,mno)\",\"xyzabc\", StringUtils.prependIfMissingIgnoreCase(\"abc\",\"xyz\",\"mno\"));\n         assertEquals(\"prependIfMissingIgnoreCase(xyzabc,xyz,mno)\", \"xyzabc\", StringUtils.prependIfMissingIgnoreCase(\"xyzabc\",\"xyz\",\"mno\"));", "timestamp": 1365794311, "metainfo": ""}