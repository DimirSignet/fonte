{"sha": "258d109e60e546d3ac8d553d492f53fa61aafc2d", "log": "[LANG-858] StringEscapeUtils.escapeJava() does not output the escaped surrogate pairs that is Java parsable.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n import java.util.Locale;\n \n import org.apache.commons.lang3.text.WordUtils;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n /**\n         assertEquals(\"\\uD800\\uDC00\", StringEscapeUtils.escapeCsv(\"\\uD800\\uDC00\"));\n         assertEquals(\"\\uD834\\uDD1E\", StringEscapeUtils.escapeCsv(\"\\uD834\\uDD1E\"));\n         assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.escapeCsv(\"\\uDBFF\\uDFFD\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.escapeHtml3(\"\\uDBFF\\uDFFD\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.escapeHtml4(\"\\uDBFF\\uDFFD\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.escapeXml(\"\\uDBFF\\uDFFD\"));\n+    }\n+    \n+    /**\n+     * Tests LANG-858.\n+     * \n+     * @throws Exception\n+     */\n+    @Test\n+    @Ignore\n+    public void testEscapeSurrogatePairsLang858() throws Exception {\n+        assertEquals(\"\\\\uDBFF\\\\uDFFD\", StringEscapeUtils.escapeJava(\"\\uDBFF\\uDFFD\"));       //fail LANG-858\n+        assertEquals(\"\\\\uDBFF\\\\uDFFD\", StringEscapeUtils.escapeEcmaScript(\"\\uDBFF\\uDFFD\")); //fail LANG-858\n+    }\n+    \n+    @Test\n+    public void testUnescapeSurrogatePairs() throws Exception {\n+        assertEquals(\"\\uD83D\\uDE30\", StringEscapeUtils.unescapeCsv(\"\\uD83D\\uDE30\"));\n+        // Examples from https://en.wikipedia.org/wiki/UTF-16\n+        assertEquals(\"\\uD800\\uDC00\", StringEscapeUtils.unescapeCsv(\"\\uD800\\uDC00\"));\n+        assertEquals(\"\\uD834\\uDD1E\", StringEscapeUtils.unescapeCsv(\"\\uD834\\uDD1E\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.unescapeCsv(\"\\uDBFF\\uDFFD\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.unescapeHtml3(\"\\uDBFF\\uDFFD\"));\n+        assertEquals(\"\\uDBFF\\uDFFD\", StringEscapeUtils.unescapeHtml4(\"\\uDBFF\\uDFFD\"));\n     }\n }", "timestamp": 1353550915, "metainfo": ""}