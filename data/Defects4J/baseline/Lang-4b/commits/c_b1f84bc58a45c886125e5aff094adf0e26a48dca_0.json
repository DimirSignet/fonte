{"sha": "b1f84bc58a45c886125e5aff094adf0e26a48dca", "log": "[LANG-873] Add FieldUtils getAllFields() to return all the fields defined in the given class and super classes. Alternate impl that splits into two APIs, one with an array result, the other with a List.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n      * @since 3.2\n      */\n     public static Field[] getAllFields(Class<?> cls) {\n+        final List<Field> allFieldsList = getAllFieldsList(cls);\n+        return allFieldsList.toArray(new Field[allFieldsList.size()]);\n+    }\n+\n+    /**\n+     * Gets all fields of the given class and its parents (if any).\n+     * \n+     * @param cls\n+     *            the class to query\n+     * @return an array of Fields (maybe an empty array).\n+     * @since 3.2\n+     */\n+    public static List<Field> getAllFieldsList(Class<?> cls) {\n         if (cls == null) {\n             throw new IllegalArgumentException(\"The class must not be null\");\n         }\n-        List<Field[]> fieldArrayList = new ArrayList<Field[]>();\n-        int fieldCount = 0;\n-        Class<?> queryClass = cls;\n-        while (queryClass != null) {\n-            final Field[] declaredFields = queryClass.getDeclaredFields();\n-            fieldCount += declaredFields.length;\n-            fieldArrayList.add(declaredFields);\n-            queryClass = queryClass.getSuperclass();\n-        }\n-        Field fields[] = new Field[fieldCount];\n-        int fieldIndex = 0;\n-        for (Field[] fieldArray : fieldArrayList) {\n-            for (Field field : fieldArray) {\n-                fields[fieldIndex++] = field;\n+        List<Field> allFields = new ArrayList<Field>();\n+        Class<?> currentClass = cls;\n+        while (currentClass != null) {\n+            final Field[] declaredFields = currentClass.getDeclaredFields();\n+            for (Field field : declaredFields) {\n+                allFields.add(field);\n             }\n-        }\n-        return fields;\n+            currentClass = currentClass.getSuperclass();\n+        }\n+        return allFields;\n     }\n \n     /**", "timestamp": 1363224923, "metainfo": ""}