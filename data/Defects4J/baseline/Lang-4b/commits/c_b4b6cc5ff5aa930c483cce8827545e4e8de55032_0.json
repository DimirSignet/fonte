{"sha": "b4b6cc5ff5aa930c483cce8827545e4e8de55032", "log": "Add two new null-safe APIs: getSimpleName(*). See https://issues.apache.org/jira/browse/LANG-696  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ClassUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ClassUtils.java\n             out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);\n         }\n         return out + arrayPrefix;\n+    }\n+\n+    /**\n+     * <p>Null-safe version of <code>aClass.getSimpleName()</code></p>\n+     *\n+     * @param cls the class for which to get the simple name.\n+     * @return the simple class name.\n+     * @since 3.0\n+     * @see Class#getSimpleName()\n+     */\n+    public static String getSimpleName(Class<?> cls) {\n+        if (cls == null) {\n+            return StringUtils.EMPTY;\n+        }\n+        return cls.getSimpleName();\n+    }\n+\n+    /**\n+     * <p>Null-safe version of <code>aClass.getSimpleName()</code></p>\n+     *\n+     * @param object the object for which to get the simple class name.\n+     * @param valueIfNull the value to return if <code>object</code> is <code>null</code>\n+     * @return the simple class name.\n+     * @since 3.0\n+     * @see Class#getSimpleName()\n+     */\n+    public static String getSimpleName(Object object, String valueIfNull) {\n+        if (object == null) {\n+            return valueIfNull;\n+        }\n+        return getSimpleName(object.getClass());\n     }\n \n     // Package name\n--- a/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java\n         assertEquals(\"String[][][][]\", ClassUtils.getShortClassName(String[][][][].class));\n     }\n \n+\n+\n     public void test_getShortClassName_String() {\n         assertEquals(\"ClassUtils\", ClassUtils.getShortClassName(ClassUtils.class.getName()));\n         assertEquals(\"Map.Entry\", ClassUtils.getShortClassName(Map.Entry.class.getName()));\n         assertEquals(\"\", ClassUtils.getShortClassName((String) null));\n         assertEquals(\"\", ClassUtils.getShortClassName(\"\"));\n+    }\n+\n+    public void test_getSimpleName_Class() {\n+        assertEquals(\"ClassUtils\", ClassUtils.getSimpleName(ClassUtils.class));\n+        assertEquals(\"Entry\", ClassUtils.getSimpleName(Map.Entry.class));\n+        assertEquals(\"\", ClassUtils.getSimpleName((Class<?>) null));\n+\n+        // LANG-535\n+        assertEquals(\"String[]\", ClassUtils.getSimpleName(String[].class));\n+        assertEquals(\"Entry[]\", ClassUtils.getSimpleName(Map.Entry[].class));\n+\n+        // Primitives\n+        assertEquals(\"boolean\", ClassUtils.getSimpleName(boolean.class));\n+        assertEquals(\"byte\", ClassUtils.getSimpleName(byte.class));\n+        assertEquals(\"char\", ClassUtils.getSimpleName(char.class));\n+        assertEquals(\"short\", ClassUtils.getSimpleName(short.class));\n+        assertEquals(\"int\", ClassUtils.getSimpleName(int.class));\n+        assertEquals(\"long\", ClassUtils.getSimpleName(long.class));\n+        assertEquals(\"float\", ClassUtils.getSimpleName(float.class));\n+        assertEquals(\"double\", ClassUtils.getSimpleName(double.class));\n+\n+        // Primitive Arrays\n+        assertEquals(\"boolean[]\", ClassUtils.getSimpleName(boolean[].class));\n+        assertEquals(\"byte[]\", ClassUtils.getSimpleName(byte[].class));\n+        assertEquals(\"char[]\", ClassUtils.getSimpleName(char[].class));\n+        assertEquals(\"short[]\", ClassUtils.getSimpleName(short[].class));\n+        assertEquals(\"int[]\", ClassUtils.getSimpleName(int[].class));\n+        assertEquals(\"long[]\", ClassUtils.getSimpleName(long[].class));\n+        assertEquals(\"float[]\", ClassUtils.getSimpleName(float[].class));\n+        assertEquals(\"double[]\", ClassUtils.getSimpleName(double[].class));\n+\n+        // Arrays of arrays of ...\n+        assertEquals(\"String[][]\", ClassUtils.getSimpleName(String[][].class));\n+        assertEquals(\"String[][][]\", ClassUtils.getSimpleName(String[][][].class));\n+        assertEquals(\"String[][][][]\", ClassUtils.getSimpleName(String[][][][].class));\n+    }\n+\n+    public void test_getSimpleName_Object() {\n+        assertEquals(\"ClassUtils\", ClassUtils.getSimpleName(new ClassUtils(), \"<null>\"));\n+        assertEquals(\"Inner\", ClassUtils.getSimpleName(new Inner(), \"<null>\"));\n+        assertEquals(\"String\", ClassUtils.getSimpleName(\"hello\", \"<null>\"));\n+        assertEquals(\"<null>\", ClassUtils.getSimpleName(null, \"<null>\"));\n     }\n \n     // -------------------------------------------------------------------------", "timestamp": 1303399982, "metainfo": ""}