{"sha": "5a9c1015ffb9aef586602790d81ef8abed773081", "log": "", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n  */\n package org.apache.commons.lang3;\n \n+import java.io.UnsupportedEncodingException;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n         return false;\n     }\n \n+    /**\n+     * Converts a <code>byte[]</code> to a String using the specified character encoding.\n+     * \n+     * @param bytes\n+     *            the byte array to read from\n+     * @param charsetName\n+     *            the encoding to use, if null then use the platform default\n+     * @return a new String\n+     * @throws UnsupportedEncodingException\n+     *             If the named charset is not supported\n+     * @throws NullPointerException\n+     *             if the input is null\n+     * @since 3.1\n+     */\n+    public static String toString(byte[] bytes, String charsetName) throws UnsupportedEncodingException {\n+        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);\n+    }\n+\n }\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import java.io.UnsupportedEncodingException;\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n             }\n         }\n     }\n+\n+    /**\n+     * Tests {@link StringUtils#toString(byte[], String)}\n+     * \n+     * @throws UnsupportedEncodingException\n+     * @see StringUtils#toString(byte[], String)\n+     */\n+    @Test\n+    public void testToString() throws UnsupportedEncodingException {\n+        final String expectedString = \"The quick brown fox jumped over the lazy dog.\";\n+        String encoding = SystemUtils.FILE_ENCODING;\n+        byte[] expectedBytes = expectedString.getBytes(encoding);\n+        // sanity check start\n+        assertArrayEquals(expectedBytes, expectedString.getBytes());\n+        // sanity check end\n+        assertEquals(expectedString, StringUtils.toString(expectedBytes, null));\n+        assertEquals(expectedString, StringUtils.toString(expectedBytes, encoding));\n+        encoding = \"UTF-16\";\n+        expectedBytes = expectedString.getBytes(encoding);\n+        assertEquals(expectedString, StringUtils.toString(expectedBytes, encoding));\n+    }\n }", "timestamp": 1318623169, "metainfo": ""}