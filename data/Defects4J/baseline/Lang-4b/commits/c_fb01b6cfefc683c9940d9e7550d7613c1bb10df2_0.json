{"sha": "fb01b6cfefc683c9940d9e7550d7613c1bb10df2", "log": "containsRange test added - LANG-551  ", "commit": "\n--- a/src/test/org/apache/commons/lang/RangeTest.java\n+++ b/src/test/org/apache/commons/lang/RangeTest.java\n         assertFalse(intRange.contains(25));\n     }\n \n+    public void testContainsRange() {\n+\n+        // null handling\n+        assertFalse(intRange.containsRange(null));\n+\n+        // easy inside range\n+        assertTrue(intRange.containsRange(new Range(12, 18)));\n+\n+        // outside range on each side\n+        assertFalse(intRange.containsRange(new Range(32, 45)));\n+        assertFalse(intRange.containsRange(new Range(2, 8)));\n+\n+        // equals range\n+        assertTrue(intRange.containsRange(new Range(10, 20)));\n+\n+        // overlaps\n+        assertFalse(intRange.containsRange(new Range(9, 14)));\n+        assertFalse(intRange.containsRange(new Range(16, 21)));\n+\n+        // touches lower boundary\n+        assertTrue(intRange.containsRange(new Range(10, 19)));\n+        assertFalse(intRange.containsRange(new Range(10, 21)));\n+\n+        // touches upper boundary\n+        assertTrue(intRange.containsRange(new Range(11, 20)));\n+        assertFalse(intRange.containsRange(new Range(9, 20)));\n+        \n+        // negative\n+        assertFalse(intRange.containsRange(new Range(-11, -18)));\n+\n+    }\n+\n }", "timestamp": 1257505898, "metainfo": ""}