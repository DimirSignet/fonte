{"sha": "7888a55220f16f94801b1b3cba232ae632704439", "log": "Updating unit test for LANG-728 to work with Lang 3.0 way of using escapeXml with > 0x7f characters  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n import org.junit.Ignore;\n import org.junit.Test;\n \n+import org.apache.commons.lang3.text.translate.CharSequenceTranslator;\n+import org.apache.commons.lang3.text.translate.UnicodeEscaper;\n+\n /**\n  * Unit tests for {@link StringEscapeUtils}.\n  *\n      * @see <a href=\"http://www.w3.org/International/questions/qa-escapes\">Using character escapes in markup and CSS</a>\n      * @see <a href=\"https://issues.apache.org/jira/browse/LANG-728\">LANG-728</a>\n      */\n-    @Ignore\n     @Test\n     public void testEscapeXmlSupplementaryCharacters() {\n-        // Example from https://issues.apache.org/jira/browse/LANG-728\n-        assertEquals(\"Supplementary character must be represented using a single escape\", \"&#144308;\",\n-                StringEscapeUtils.escapeXml(\"\\uD84C\\uDFB4\"));\n-        // Example from See http://www.w3.org/International/questions/qa-escapes\n-        assertEquals(\"Supplementary character must be represented using a single escape\", \"&#x233B4;\",\n-                StringEscapeUtils.escapeXml(\"\\uD84C;\\uDFB4;\"));\n+        CharSequenceTranslator escapeXml = \n+            StringEscapeUtils.ESCAPE_XML.with( UnicodeEscaper.between(0x7f, Integer.MAX_VALUE) );\n+\n+        assertEquals(\"Supplementary character must be represented using a single escape\", \"\\u233B4\",\n+                escapeXml.translate(\"\\uD84C\\uDFB4\"));\n     }\n     \n     // Tests issue #38569", "timestamp": 1311051483, "metainfo": ""}