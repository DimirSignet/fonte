{"sha": "9c3036a515dde05db78dd209370bfcf38aedfbac", "log": "Javadoc  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/ConversionTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ConversionTest.java\n      * convert an hexadecimal digit into an int using the default (Lsb0) bit ordering.\n      * <p>\n      * '1' is converted to 1\n-     * \n-     * @param hexDigit the hexadecimal digit to convert\n-     * @return an int equals to <code>hexDigit</code>\n      */\n     public void testHexDigitToInt() throws Exception {\n         assertEquals(0, Conversion.hexDigitToInt('0'));\n      * <p>\n      * '1' is converted to 8\n      * \n-     * @param hexDigit the hexadecimal digit to convert\n-     * @return an int equals to <code>hexDigit</code>\n      */\n     public void testHexDigitM0ToInt() throws Exception {\n         assertEquals(0x0, Conversion.hexDigitM0ToInt('0'));\n      * <p>\n      * '1' is converted as follow: (1, 0, 0, 0)\n      * \n-     * @param hexDigit the hexadecimal digit to convert\n-     * @return a boolean array with the binary representation of <code>hexDigit</code>\n      */\n     public void testHexDigitToBools() throws Exception {\n         assertArrayEquals(\n      * Convert a boolean array to an hexadecimal digit using the default (Lsb0) bit ordering.\n      * <p>\n      * (1, 0, 0, 0) is converted as follow: '1'\n-     * \n-     * @param src the boolean array to convert\n-     * @return an hexadecimal digit representing the selected bits\n      */\n     public void testBoolsToHexDigit() throws Exception {\n         assertEquals('0', Conversion.boolsToHexDigit(new boolean[]{false, false, false, false}));\n      * <p>\n      * (1, 0, 0, 0) is converted as follow: '1'\n      * \n-     * @param src the boolean array to convert\n-     * @param srcPos the position of the lsb to start the conversion\n-     * @return an hexadecimal digit representing the selected bits\n      */\n     public void testBoolsToHexDigit_2args() throws Exception {\n         boolean[] shortArray = new boolean[]{false, true, true};\n      * <p>\n      * (1, 0, 0, 0) is converted as follow: '8'\n      * \n-     * @param src the boolean array to convert\n-     * @return an hexadecimal digit representing the selected bits\n-     * @warning src.length must be >= 4.\n      */\n     public void testBoolsToHexDigitM0_bits() throws Exception {\n         assertEquals(\n      * (1, 0, 0, 0) is converted as follow: '8' (1,0,0,1,1,0,1,0) with srcPos = 3 is converted\n      * to 'D'\n      * \n-     * @param src the boolean array to convert\n-     * @param srcPos the position of the lsb to start the conversion\n-     * @return an hexadecimal digit representing the selected bits\n-     * @warning src.length must be 8 at most.\n-     * @warning srcPos+4 must be <= src.length.\n      */\n     public void testBoolsToHexDigitM0_4bits_2args() throws Exception {\n         // boolean[] shortArray = new boolean[]{true,true,false};\n      * <p>\n      * (1, 0, 0, 0) is converted as follow: '8' (1,0,0,0,0,0,0,0, 0,0,0,0,0,1,0,0) is converted\n      * to '4'\n-     * \n-     * @param src the boolean array to convert\n-     * @return an hexadecimal digit representing the selected bits\n      */\n     public void testBoolsBeM0ToHexDigit() throws Exception {\n         assertEquals(\n      * <p>\n      * (1, 0, 0, 0) with srcPos = 0 is converted as follow: '8' (1,0,0,0,0,0,0,0,\n      * 0,0,0,1,0,1,0,0) with srcPos = 2 is converted to '5'\n-     * \n-     * @param src the boolean array to convert\n-     * @param srcPos the position of the lsb to start the conversion\n-     * @return an hexadecimal digit representing the selected bits\n      */\n     public void testBoolsBeM0ToHexDigit_2args() throws Exception {\n         assertEquals(\n      * 1 returns '1'\n      * <p>\n      * 10 returns 'A' and so on...\n-     * \n-     * @param nibble the int to convert, value outside of the range [0:15] are not allowed.\n-     * @return an hexadecimal digit representing the 4 lsb of <code>nibble</code>\n      */\n     public void testIntToHexDigit() throws Exception {\n         assertEquals('0', Conversion.intToHexDigit(0));\n      * 1 returns '8'\n      * <p>\n      * 10 returns '5' and so on...\n-     * \n-     * @param nibble the int to convert, value outside of the range [0:15] are not allowed.\n-     * @return an hexadecimal digit representing the 4 lsb of <code>nibble</code>\n      */\n     public void testIntToHexDigitM0() throws Exception {\n         assertEquals('0', Conversion.intToHexDigitM0(0));", "timestamp": 1348776633, "metainfo": ""}