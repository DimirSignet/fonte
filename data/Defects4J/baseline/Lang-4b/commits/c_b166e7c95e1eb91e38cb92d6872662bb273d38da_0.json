{"sha": "b166e7c95e1eb91e38cb92d6872662bb273d38da", "log": "Fix raw types  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/CharRangeTest.java\n+++ b/src/test/java/org/apache/commons/lang3/CharRangeTest.java\n         CharRange notFirst = CharRange.isNotIn((char) 1, Character.MAX_VALUE);\n         CharRange notLast = CharRange.isNotIn((char) 0, (char) (Character.MAX_VALUE - 1));\n \n-        Iterator aIt = a.iterator();\n+        Iterator<Character> aIt = a.iterator();\n         assertNotNull(aIt);\n         assertTrue(aIt.hasNext());\n         assertEquals(Character.valueOf('a'), aIt.next());\n         assertFalse(aIt.hasNext());\n \n-        Iterator adIt = ad.iterator();\n+        Iterator<Character> adIt = ad.iterator();\n         assertNotNull(adIt);\n         assertTrue(adIt.hasNext());\n         assertEquals(Character.valueOf('a'), adIt.next());\n         assertEquals(Character.valueOf('d'), adIt.next());\n         assertFalse(adIt.hasNext());\n \n-        Iterator notaIt = nota.iterator();\n+        Iterator<Character> notaIt = nota.iterator();\n         assertNotNull(notaIt);\n         assertTrue(notaIt.hasNext());\n         while (notaIt.hasNext()) {\n-            Character c = (Character) notaIt.next();\n+            Character c = notaIt.next();\n             assertFalse('a' == c.charValue());\n         }\n \n-        Iterator emptySetIt = emptySet.iterator();\n+        Iterator<Character> emptySetIt = emptySet.iterator();\n         assertNotNull(emptySetIt);\n         assertFalse(emptySetIt.hasNext());\n         try {\n             assertTrue(true);\n         }\n \n-        Iterator notFirstIt = notFirst.iterator();\n+        Iterator<Character> notFirstIt = notFirst.iterator();\n         assertNotNull(notFirstIt);\n         assertTrue(notFirstIt.hasNext());\n         assertEquals(Character.valueOf((char) 0), notFirstIt.next());\n             assertTrue(true);\n         }\n \n-        Iterator notLastIt = notLast.iterator();\n+        Iterator<Character> notLastIt = notLast.iterator();\n         assertNotNull(notLastIt);\n         assertTrue(notLastIt.hasNext());\n         assertEquals(Character.valueOf(Character.MAX_VALUE), notLastIt.next());", "timestamp": 1267570522, "metainfo": ""}