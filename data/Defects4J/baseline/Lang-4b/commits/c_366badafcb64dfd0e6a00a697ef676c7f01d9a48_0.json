{"sha": "366badafcb64dfd0e6a00a697ef676c7f01d9a48", "log": "LANG-810 StringUtils.join() endIndex, bugged for loop  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * empty strings.</p>\n      *\n      * <pre>\n-     * StringUtils.join(null, *)                = null\n-     * StringUtils.join([], *)                  = \"\"\n-     * StringUtils.join([null], *)              = \"\"\n-     * StringUtils.join([\"a\", \"b\", \"c\"], \"--\")  = \"a--b--c\"\n-     * StringUtils.join([\"a\", \"b\", \"c\"], null)  = \"abc\"\n-     * StringUtils.join([\"a\", \"b\", \"c\"], \"\")    = \"abc\"\n-     * StringUtils.join([null, \"\", \"a\"], ',')   = \",,a\"\n+     * StringUtils.join(null, *, *, *)                = null\n+     * StringUtils.join([], *, *, *)                  = \"\"\n+     * StringUtils.join([null], *, *, *)              = \"\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], \"--\", 0, 3)  = \"a--b--c\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], \"--\", 1, 3)  = \"b--c\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], \"--\", 2, 3)  = \"c\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], \"--\", 2, 2)  = \"\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], null, 0, 3)  = \"abc\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"], \"\", 0, 3)    = \"abc\"\n+     * StringUtils.join([null, \"\", \"a\"], ',', 0, 3)   = \",,a\"\n      * </pre>\n      *\n      * @param array  the array of values to join together, may be null\n      * @param separator  the separator character to use, null treated as \"\"\n-     * @param startIndex the first index to start joining from.  It is\n-     * an error to pass in an end index past the end of the array\n-     * @param endIndex the index to stop joining from (exclusive). It is\n-     * an error to pass in an end index past the end of the array\n-     * @return the joined String, {@code null} if null array input\n+     * @param startIndex the first index to start joining from.\n+     * @param endIndex the index to stop joining from (exclusive).\n+     * @return the joined String, {@code null} if null array input; or the empty string\n+     * if {@code endIndex - startIndex <= 0}. The number of joined entries is given by\n+     * {@code endIndex - startIndex}\n+     * @throws ArrayIndexOutOfBoundsException ife<br/>\n+     * {@code startIndex < 0} or <br/>\n+     * {@code startIndex >= array.length()} or <br/>\n+     * {@code endIndex < 0} or <br/>\n+     * {@code endIndex > array.length()} \n      */\n     public static String join(Object[] array, String separator, int startIndex, int endIndex) {\n         if (array == null) {", "timestamp": 1347486778, "metainfo": ""}