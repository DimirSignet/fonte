{"sha": "d6f617033a7b3b997f6ac6082bcdb6d5c3ec1983", "log": "Add some code comments  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n      */\n     private static Object removeAll(Object array, int... indices) {\n         int length = getLength(array);\n-        int diff = 0;\n+        int diff = 0; // number of distinct indexes, i.e. number of entries that will be removed\n \n         if (isNotEmpty(indices)) {\n             Arrays.sort(indices);\n         }\n         Object result = Array.newInstance(array.getClass().getComponentType(), length - diff);\n         if (diff < length) {\n-            int end = length;\n-            int dest = length - diff;\n+            int end = length; // index just after last copy\n+            int dest = length - diff; // number of entries so far not copied\n             for (int i = indices.length - 1; i >= 0; i--) {\n                 int index = indices[i];\n-                if (end - index > 1) {\n+                if (end - index > 1) { // same as (cp > 0)\n                     int cp = end - index - 1;\n                     dest -= cp;\n                     System.arraycopy(array, index + 1, result, dest, cp);\n+                    // Afer this copy, we still have room for dest items.\n                 }\n                 end = index;\n             }", "timestamp": 1348918137, "metainfo": ""}