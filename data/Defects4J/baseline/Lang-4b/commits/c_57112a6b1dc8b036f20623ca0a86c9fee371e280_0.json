{"sha": "57112a6b1dc8b036f20623ca0a86c9fee371e280", "log": "Add tests to show magnitude boundary between Float, Double and BigDecimal  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java\n         } catch (NumberFormatException nfe) {\n             // expected\n         }\n+    }\n+\n+    // Tests to show when magnitude causes switch to next Number type\n+    // Will probably need to be adjusted if code is changed to check precision (LANG-693)\n+    @Test\n+    public void testCreateNumberMagnitude() {\n+        // Test Float.MAX_VALUE, and same with +1 in final digit to check conversion changes to next Number type\n+        assertEquals(Float.class,  NumberUtils.createNumber(\"3.4028235e+38\").getClass());\n+        assertEquals(Double.class, NumberUtils.createNumber(\"3.4028236e+38\").getClass());\n+\n+        // Test Double.MAX_VALUE\n+        assertEquals(Double.class,     NumberUtils.createNumber(\"1.7976931348623157e+308\").getClass());\n+        // Test with +2 in final digit (+1 does not cause roll-over to BigDecimal)\n+        assertEquals(BigDecimal.class, NumberUtils.createNumber(\"1.7976931348623159e+308\").getClass());\n     }\n \n     @Test", "timestamp": 1352740417, "metainfo": ""}