{"sha": "647963650ec449a18637c06da7e8bb062cbc77ba", "log": "Severity\tDescription\tResource\tIn Folder\tLocation\tCreation Time \tThe static method setAccessible(AccessibleObject[], boolean) from the type AccessibleObject should be accessed directly \tCompareToBuilder.java\tApache Jakarta Commons/lang/src/java/org/apache/commons/lang/builder\tline 254\tJuly 18, 2003 7:11:22 PM   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/CompareToBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/CompareToBuilder.java\n  */\n package org.apache.commons.lang.builder;\n \n+import java.lang.reflect.AccessibleObject;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n import java.util.Comparator;\n  *\n  * <p>Alternatively, there is a method that uses reflection to determine\n  * the fields to test. Because these fields are usually private, the method,\n- * <code>reflectionCompare</code>, uses <code>Field.setAccessible</code> to change\n+ * <code>reflectionCompare</code>, uses <code>AccessibleObject.setAccessible</code> to change\n  * the visibility of the fields. This will fail under a security manager,\n  * unless the appropriate permissions are set. It is also slower than testing\n  * explicitly.</p>\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @since 1.0\n- * @version $Id: CompareToBuilder.java,v 1.16 2003/07/14 22:25:03 bayard Exp $\n+ * @version $Id: CompareToBuilder.java,v 1.17 2003/07/19 03:25:38 ggregory Exp $\n  */\n public class CompareToBuilder {\n     \n      * <p>This method uses reflection to determine the ordering between two\n      * Objects.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if the permissions are not set up correctly. It is\n      * also not as efficient as testing explicitly.</p>\n      * <p>This method uses reflection to determine if the two Objects are\n      * equal.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if  the permissions are not set up correctly. It is\n      * also not as efficient as testing explicitly.</p>\n      * <p>This method uses reflection to determine if the two Objects are\n      * equal.</p>\n      *\n-     * <p>It uses <code>Field.setAccessible</code> to gain access to private\n+     * <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private\n      * fields. This means that it will throw a security exception if run under\n      * a security manger, if  the permissions are not set up correctly. It is\n      * also not as efficient as testing explicitly.</p>\n         CompareToBuilder builder,\n         boolean useTransients) {\n         Field[] fields = clazz.getDeclaredFields();\n-        Field.setAccessible(fields, true);\n+        AccessibleObject.setAccessible(fields, true);\n         for (int i = 0; i < fields.length && builder.comparison == 0; i++) {\n             Field f = fields[i];\n             if ((f.getName().indexOf('$') == -1)", "timestamp": 1058585138, "metainfo": ""}