{"sha": "cc3e6d809c0ee26dd9dd9544f68be215e48f16d9", "log": "Fixing javadoc to use the right exception types. Related to LANG-686  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      *            the Strings to replace them with, no-op if null\n      * @return the text with any replacements processed, {@code null} if\n      *         null String input\n-     * @throws IndexOutOfBoundsException\n+     * @throws IllegalArgumentException\n      *             if the lengths of the arrays are not the same (null is ok,\n      *             and/or size 0)\n      * @since 2.4\n      *  (example of how it repeats)\n      *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"t\"}, false) = \"dcte\"\n      *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"t\"}, true) = \"tcte\"\n-     *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"ab\"}, true) = IllegalArgumentException\n+     *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"ab\"}, true) = IllegalStateException\n      *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"ab\"}, false) = \"dcabe\"\n      * </pre>\n      *\n      *            the Strings to replace them with, no-op if null\n      * @return the text with any replacements processed, {@code null} if\n      *         null String input\n-     * @throws IllegalArgumentException\n+     * @throws IllegalStateException\n      *             if the search is repeating and there is an endless loop due\n      *             to outputs of one being inputs to another\n-     * @throws IndexOutOfBoundsException\n+     * @throws IllegalArgumentException\n      *             if the lengths of the arrays are not the same (null is ok,\n      *             and/or size 0)\n      * @since 2.4\n      *  (example of how it repeats)\n      *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"t\"}, false) = \"dcte\"\n      *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"t\"}, true) = \"tcte\"\n-     *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"ab\"}, *) = IllegalArgumentException\n+     *  StringUtils.replaceEach(\"abcde\", new String[]{\"ab\", \"d\"}, new String[]{\"d\", \"ab\"}, *) = IllegalStateException\n      * </pre>\n      *\n      * @param text\n      *            loop\n      * @return the text with any replacements processed, {@code null} if\n      *         null String input\n-     * @throws IllegalArgumentException\n+     * @throws IllegalStateException\n      *             if the search is repeating and there is an endless loop due\n      *             to outputs of one being inputs to another\n-     * @throws IndexOutOfBoundsException\n+     * @throws IllegalArgumentException\n      *             if the lengths of the arrays are not the same (null is ok,\n      *             and/or size 0)\n      * @since 2.4", "timestamp": 1311746340, "metainfo": ""}