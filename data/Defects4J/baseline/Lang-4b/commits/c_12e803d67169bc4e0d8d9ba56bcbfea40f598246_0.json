{"sha": "12e803d67169bc4e0d8d9ba56bcbfea40f598246", "log": "Adding Dmitry Katsubo's patch from LANG-846, providing CharSequenceUtils.regionMatches with a proper green implementation instead of inefficiently converting to Strings  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/CharSequenceUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/CharSequenceUtils.java\n         if (cs instanceof String && substring instanceof String) {\n             return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);\n         } else {\n-            // TODO: Implement rather than convert to String\n-            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);\n-        }\n-    }\n-\n+            int index1 = thisStart;\n+            int index2 = start;\n+            int tmpLen = length;\n+\n+            while (tmpLen-- > 0) {\n+                char c1 = cs.charAt(index1++);\n+                char c2 = substring.charAt(index2++);\n+\n+                if (c1 == c2) {\n+                    continue;\n+                }\n+\n+                if (!ignoreCase) {\n+                    return false;\n+                }\n+\n+                // The same check as in String.regionMatches():\n+                if (Character.toUpperCase(c1) != Character.toUpperCase(c2)\n+                        && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n+                    return false;\n+                }\n+            }\n+\n+            return true;\n+        }\n+    }\n }\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java\n         assertTrue(\"endsWith(FOOBAR, BAR)\",  StringUtils.endsWith(FOOBAR, BAR));\n         assertFalse(\"endsWith(foobar, BAR)\", StringUtils.endsWith(foobar, BAR));\n         assertFalse(\"endsWith(FOOBAR, bar)\", StringUtils.endsWith(FOOBAR, bar));\n+\n+        // \"alpha,beta,gamma,delta\".endsWith(\"delta\")\n+        assertTrue(\"endsWith(\\u03B1\\u03B2\\u03B3\\u03B4, \\u03B4)\",\n+                StringUtils.endsWith(\"\\u03B1\\u03B2\\u03B3\\u03B4\", \"\\u03B4\"));\n+        // \"alpha,beta,gamma,delta\".endsWith(\"gamma,DELTA\")\n+        assertFalse(\"endsWith(\\u03B1\\u03B2\\u03B3\\u03B4, \\u03B3\\u0394)\",\n+                StringUtils.endsWith(\"\\u03B1\\u03B2\\u03B3\\u03B4\", \"\\u03B3\\u0394\"));\n     }\n \n     /**\n         assertTrue(StringUtils.endsWithIgnoreCase(\"abcdef\", \"def\"));\n         assertTrue(StringUtils.endsWithIgnoreCase(\"ABCDEF\", \"def\"));\n         assertFalse(StringUtils.endsWithIgnoreCase(\"ABCDEF\", \"cde\"));\n+\n+        // \"alpha,beta,gamma,delta\".endsWith(\"DELTA\")\n+        assertTrue(\"endsWith(\\u03B1\\u03B2\\u03B3\\u03B4, \\u0394)\",\n+                StringUtils.endsWithIgnoreCase(\"\\u03B1\\u03B2\\u03B3\\u03B4\", \"\\u0394\"));\n+        // \"alpha,beta,gamma,delta\".endsWith(\"GAMMA\")\n+        assertFalse(\"endsWith(\\u03B1\\u03B2\\u03B3\\u03B4, \\u0393)\",\n+                StringUtils.endsWithIgnoreCase(\"\\u03B1\\u03B2\\u03B3\\u03B4\", \"\\u0393\"));\n     }\n \n     @Test", "timestamp": 1366272947, "metainfo": ""}