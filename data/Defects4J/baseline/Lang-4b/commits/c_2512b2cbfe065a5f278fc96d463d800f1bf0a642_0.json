{"sha": "2512b2cbfe065a5f278fc96d463d800f1bf0a642", "log": "remove unnecessary reflection parameter args  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java\n     private static Throwable getCauseUsingMethodName(Throwable throwable, String methodName) {\n         Method method = null;\n         try {\n-            method = throwable.getClass().getMethod(methodName, (Class[]) null);\n+            method = throwable.getClass().getMethod(methodName);\n         } catch (NoSuchMethodException ignored) { // NOPMD\n             // exception ignored\n         } catch (SecurityException ignored) { // NOPMD\n \n         if (method != null && Throwable.class.isAssignableFrom(method.getReturnType())) {\n             try {\n-                return (Throwable) method.invoke(throwable, ArrayUtils.EMPTY_OBJECT_ARRAY);\n+                return (Throwable) method.invoke(throwable);\n             } catch (IllegalAccessException ignored) { // NOPMD\n                 // exception ignored\n             } catch (IllegalArgumentException ignored) { // NOPMD", "timestamp": 1302532904, "metainfo": ""}