{"sha": "ca3ab6a323c178048b8bd0d5e40b927cbc7125f2", "log": "Document sync. strategy  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java\n+++ b/src/main/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java\n public abstract class BackgroundInitializer<T> implements\n         ConcurrentInitializer<T> {\n     /** The external executor service for executing tasks. */\n-    private ExecutorService externalExecutor;\n+    private ExecutorService externalExecutor; // @GuardedBy(\"this\")\n \n     /** A reference to the executor service that is actually used. */\n-    private ExecutorService executor;\n+    private ExecutorService executor; // @GuardedBy(\"this\")\n \n     /** Stores the handle to the background task. */\n-    private Future<T> future;\n+    private Future<T> future;  // @GuardedBy(\"this\")\n \n     /**\n      * Creates a new instance of {@code BackgroundInitializer}. No external\n--- a/src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java\n+++ b/src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java\n     private final boolean ownExecutor;\n \n     /** A future object representing the timer task. */\n-    private ScheduledFuture<?> task;\n+    private ScheduledFuture<?> task; // @GuardedBy(\"this\")\n \n     /** Stores the total number of invocations of the acquire() method. */\n-    private long totalAcquireCount;\n+    private long totalAcquireCount; // @GuardedBy(\"this\")\n \n     /**\n      * The counter for the periods. This counter is increased every time a\n      * period ends.\n      */\n-    private long periodCount;\n+    private long periodCount; // @GuardedBy(\"this\")\n \n     /** The limit. */\n-    private int limit;\n+    private int limit; // @GuardedBy(\"this\")\n \n     /** The current counter. */\n-    private int acquireCount;\n+    private int acquireCount;  // @GuardedBy(\"this\")\n \n     /** The number of invocations of acquire() in the last period. */\n-    private int lastCallsPerPeriod;\n+    private int lastCallsPerPeriod; // @GuardedBy(\"this\")\n \n     /** A flag whether shutdown() was called. */\n-    private boolean shutdown;\n+    private boolean shutdown;  // @GuardedBy(\"this\")\n \n     /**\n      * Creates a new instance of {@link TimedSemaphore} and initializes it with", "timestamp": 1348785008, "metainfo": ""}