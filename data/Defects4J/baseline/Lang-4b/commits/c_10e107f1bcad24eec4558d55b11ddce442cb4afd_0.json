{"sha": "10e107f1bcad24eec4558d55b11ddce442cb4afd", "log": "Add some basic Comparator tests  ", "commit": "\n--- a/src/test/org/apache/commons/lang/RangeTest.java\n+++ b/src/test/org/apache/commons/lang/RangeTest.java\n \n package org.apache.commons.lang;\n \n+import java.util.Comparator;\n+\n import junit.framework.TestCase;\n \n /**\n             };\n         Range.is(c);\n         Range.between(c, c);\n+    }\n+\n+    public void testIsWithCompare(){\n+        Comparator<Integer> c = new Comparator<Integer>(){\n+            public int compare(Integer o1, Integer o2) {\n+                return 0; // all integers are equal\n+            }\n+        };\n+        Range<Integer> ri = Range.is(10);\n+        assertFalse(\"should not contain null\",ri.contains(null));\n+        assertTrue(\"should contain 10\",ri.contains(10));\n+        assertFalse(\"should not contain 11\",ri.contains(11));\n+        ri = Range.is(10,c);\n+        assertFalse(\"should not contain null\",ri.contains(null));\n+        assertTrue(\"should contain 10\",ri.contains(10));\n+        assertTrue(\"should contain 11\",ri.contains(11));\n+    }\n+\n+    public void testBetweenWithCompare(){\n+        // TODO add tests with a better comparator\n+        Comparator<Integer> c = new Comparator<Integer>(){\n+            public int compare(Integer o1, Integer o2) {\n+                return 0; // all integers are equal\n+            }\n+        };\n+        Range<Integer> rb = Range.between(-10,20);\n+        assertFalse(\"should not contain null\",rb.contains(null));\n+        assertTrue(\"should contain 10\",rb.contains(10));\n+        assertTrue(\"should contain -10\",rb.contains(-10));\n+        assertFalse(\"should not contain 21\",rb.contains(21));\n+        assertFalse(\"should not contain -11\",rb.contains(-11));\n+        rb = Range.between(-10,20,c);\n+        assertFalse(\"should not contain null\",rb.contains(null));\n+        assertTrue(\"should contain 10\",rb.contains(10));\n+        assertTrue(\"should contain -10\",rb.contains(-10));\n+        assertTrue(\"should contain 21\",rb.contains(21));\n+        assertTrue(\"should contain -11\",rb.contains(-11));\n     }\n \n     // --------------------------------------------------------------------------", "timestamp": 1258828209, "metainfo": ""}