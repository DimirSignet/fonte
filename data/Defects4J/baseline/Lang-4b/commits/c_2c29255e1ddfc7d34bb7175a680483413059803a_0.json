{"sha": "2c29255e1ddfc7d34bb7175a680483413059803a", "log": "Reduce scope from public to protected in parser  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/VariableFormatter.java\n+++ b/src/java/org/apache/commons/lang/text/VariableFormatter.java\n          *            The token length\n          * @return a new token\n          */\n-        public static FieldPosition newEscapedVariableToken(int aStartIndex, int aLength) {\n+        protected static FieldPosition newEscapedVariableToken(int aStartIndex, int aLength) {\n             return newToken(VariableParser.ESCAPED_VAR_TOKEN, aStartIndex, aLength);\n         }\n \n          *            The token length\n          * @return a new token\n          */\n-        public static FieldPosition newTextToken(int aStartIndex, int aLength) {\n+        protected static FieldPosition newTextToken(int aStartIndex, int aLength) {\n             return newToken(VariableParser.TEXT_TOKEN, aStartIndex, aLength);\n         }\n \n          *            The token length\n          * @return a new token\n          */\n-        public static FieldPosition newVariableToken(int aStartIndex, int aLength) {\n+        protected static FieldPosition newVariableToken(int aStartIndex, int aLength) {\n             return newToken(VariableParser.VARIABLE_TOKEN, aStartIndex, aLength);\n         }\n \n          * @param length\n          *            the length of the source data\n          */\n-        public VariableParser(StrMatcher startMatcher, StrMatcher endMatcher,\n+        protected VariableParser(StrMatcher startMatcher, StrMatcher endMatcher,\n                 StrMatcher escMatcher, int startPos, int length) {\n             this.setVarStartMatcher(startMatcher);\n             this.setVarEndMatcher(endMatcher);\n          *            the array with the source data\n          * @return the next token or <b>null</b> if the end is reached\n          */\n-        public FieldPosition nextToken(char[] data) {\n+        protected FieldPosition nextToken(char[] data) {\n             if (getTokenList().isEmpty()) {\n                 if (!hasNext()) {\n                     // end of data is reached", "timestamp": 1152224311, "metainfo": ""}