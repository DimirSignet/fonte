{"sha": "24db3b0f3e4c9b027e79fff96f2426e9130caa13", "log": "Add some more tests  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java\n+++ b/src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java\n     }\n \n     @Test\n+    public void testSpecialCharacters() throws Exception {\n+        testSdfAndFdp(\"q\" ,\"\", true); // bad pattern character (at present)\n+        testSdfAndFdp(\"Q\" ,\"\", true); // bad pattern character\n+        testSdfAndFdp(\"$\" ,\"$\", false); // OK\n+        testSdfAndFdp(\"?.d\" ,\"?.12\", false); // OK\n+    }\n+\n+    @Test\n     public void testLANG_832() throws Exception {\n         testSdfAndFdp(\"'d'd\" ,\"d3\", false); // OK\n         testSdfAndFdp(\"'d'd'\",\"d3\", true); // should fail (unterminated quote)\n \n     private void testSdfAndFdp(String format, String date, boolean shouldFail)\n             throws Exception {\n+        final boolean debug = false;\n         Date dfdp = null;\n         Date dsdf = null;\n         Throwable f = null;\n             if (!shouldFail) {\n                 throw e;\n             }\n-//            System.out.println(\"sdf:\"+format+\"/\"+date+\"=>\"+e);\n+            if (debug) {\n+                System.out.println(\"sdf:\"+format+\"/\"+date+\"=>\"+e);\n+            }\n         }\n \n         try {\n             if (!shouldFail) {\n                 throw e;\n             }\n-//            System.out.println(\"fdf:\"+format+\"/\"+date+\"=>\"+e);\n+            if (debug) {\n+                System.out.println(\"fdf:\"+format+\"/\"+date+\"=>\"+e);\n+            }\n         }\n         // SDF and FDF should produce equivalent results\n         assertTrue(\"Should both or neither throw Exceptions\", (f==null)==(s==null));\n         assertEquals(\"Parsed dates should be equal\", dsdf, dfdp);\n+        if (debug) {\n+            System.out.println(format + \",\" + date + \" => \" + dsdf);\n+        }\n     }\n \n     @Test", "timestamp": 1348714015, "metainfo": ""}