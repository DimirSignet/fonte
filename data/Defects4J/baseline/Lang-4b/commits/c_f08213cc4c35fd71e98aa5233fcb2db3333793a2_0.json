{"sha": "f08213cc4c35fd71e98aa5233fcb2db3333793a2", "log": "Applying Ilya's patch from LANG-703 fixing an NPE when toString returns null  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n         if (array == null) {\n             return null;\n         }\n-        int bufSize = (endIndex - startIndex);\n-        if (bufSize <= 0) {\n+        int noOfItems = (endIndex - startIndex);\n+        if (noOfItems <= 0) {\n             return EMPTY;\n         }\n-\n-        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);\n-        StringBuilder buf = new StringBuilder(bufSize);\n+        \n+        StringBuilder buf = new StringBuilder(noOfItems * 16);\n \n         for (int i = startIndex; i < endIndex; i++) {\n             if (i > startIndex) {\n         }\n         return buf.toString();\n     }\n-\n \n     /**\n      * <p>Joins the elements of the provided array into a single String\n \n         // endIndex - startIndex > 0:   Len = NofStrings *(len(firstString) + len(separator))\n         //           (Assuming that all Strings are roughly equally long)\n-        int bufSize = (endIndex - startIndex);\n-        if (bufSize <= 0) {\n+        int noOfItems = (endIndex - startIndex);\n+        if (noOfItems <= 0) {\n             return EMPTY;\n         }\n \n-        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n-                        + separator.length());\n-\n-        StringBuilder buf = new StringBuilder(bufSize);\n+        StringBuilder buf = new StringBuilder(noOfItems * 16);\n \n         for (int i = startIndex; i < endIndex; i++) {\n             if (i > startIndex) {\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n     private static final String[] ARRAY_LIST = { \"foo\", \"bar\", \"baz\" };\n     private static final String[] EMPTY_ARRAY_LIST = {};\n     private static final String[] NULL_ARRAY_LIST = {null};\n+    private static final Object[] NULL_TO_STRING_LIST = {\n+    \tnew Object(){\n+    \t\t@Override\n+    \t\tpublic String toString() {\n+    \t\t\treturn null;\n+    \t\t}\n+    \t}\n+    };\n     private static final String[] MIXED_ARRAY_LIST = {null, \"\", \"foo\"};\n     private static final Object[] MIXED_TYPE_LIST = {\"foo\", Long.valueOf(2L)};\n \n \n         assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\n         assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\n+        assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));\n         assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));\n         assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));\n         assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));\n \n         assertEquals(\"/\", StringUtils.join(MIXED_ARRAY_LIST, '/', 0, MIXED_ARRAY_LIST.length-1));\n         assertEquals(\"foo\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 1));\n+        assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST,'/', 0, 1));\n         assertEquals(\"foo/2\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 2));\n         assertEquals(\"2\", StringUtils.join(MIXED_TYPE_LIST, '/', 1, 2));\n         assertEquals(\"\", StringUtils.join(MIXED_TYPE_LIST, '/', 2, 1));", "timestamp": 1309676678, "metainfo": ""}