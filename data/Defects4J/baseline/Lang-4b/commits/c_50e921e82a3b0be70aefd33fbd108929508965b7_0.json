{"sha": "50e921e82a3b0be70aefd33fbd108929508965b7", "log": "[LANG-814] ConstructorUtils.invoke*(*, Object... args) variants cannot handle null values  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/ConstructorUtils.java\n         if (args == null) {\n             args = ArrayUtils.EMPTY_OBJECT_ARRAY;\n         }\n-        Class<?> parameterTypes[] = new Class[args.length];\n-        for (int i = 0; i < args.length; i++) {\n-            parameterTypes[i] = args[i].getClass();\n-        }\n+        Class<?> parameterTypes[] = ClassUtils.toClass(args);\n         return invokeConstructor(cls, args, parameterTypes);\n     }\n \n         if (args == null) {\n             args = ArrayUtils.EMPTY_OBJECT_ARRAY;\n         }\n-        int arguments = args.length;\n-        Class<?> parameterTypes[] = new Class[arguments];\n-        for (int i = 0; i < arguments; i++) {\n-            parameterTypes[i] = args[i].getClass();\n-        }\n+        Class<?> parameterTypes[] = ClassUtils.toClass(args);\n         return invokeExactConstructor(cls, args, parameterTypes);\n     }\n \n--- a/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java\n \n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.math.NumberUtils;\n+import org.apache.commons.lang3.mutable.MutableObject;\n \n /**\n  * Unit tests ConstructorUtils\n                 singletonArray(Double.TYPE), singletonArray(Double.TYPE));\n     }\n \n+    public void testNullArgument() {\n+        expectMatchingAccessibleConstructorParameterTypes(MutableObject.class,\n+                singletonArray(null), singletonArray(Object.class));\n+    }\n+\n     private void expectMatchingAccessibleConstructorParameterTypes(Class<?> cls,\n             Class<?>[] requestTypes, Class<?>[] actualTypes) {\n         Constructor<?> c = ConstructorUtils.getMatchingAccessibleConstructor(cls,", "timestamp": 1344015813, "metainfo": ""}