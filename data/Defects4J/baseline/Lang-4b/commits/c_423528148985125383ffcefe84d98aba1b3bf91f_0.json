{"sha": "423528148985125383ffcefe84d98aba1b3bf91f", "log": "Checkstyle and trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ImmutablePair.java\n+++ b/src/main/java/org/apache/commons/lang3/ImmutablePair.java\n \n /**\n  * Immutable concrete manifestation of the {@link Pair} type.\n- * \n+ *\n  * <p>#ThreadSafe# if the objects are threadsafe</p>\n  * @since Lang 3.0\n  * @author Matt Benson\n  * @version $Id$\n- * \n+ *\n  * @param <L> left generic type\n  * @param <R> right generic type\n  */\n \n     /**\n      * Create a new ImmutablePair instance.\n-     * \n-     * @param left\n-     * @param right\n+     *\n+     * @param left the left value\n+     * @param right the right value\n      */\n     public ImmutablePair(L left, R right) {\n         super();\n     }\n \n     /**\n-     * {@link java.util.Map.Entry#setValue(Object)} implementation.\n-     * @throws UnsupportedOperationException\n+     * {@link java.util.Map.Entry#setValue(Object)} implementation. Because this\n+     * class is immutable the {@code setValue()} operation is not supported.\n+     * Therefore always an exception is thrown.\n+     *\n+     * @param value the value to set\n+     * @throws UnsupportedOperationException as this operation is not supported\n      */\n-    public R setValue(R arg0) {\n+    public R setValue(R value) {\n         throw new UnsupportedOperationException();\n     }\n \n     /**\n      * Static fluent creation method for an {@link ImmutablePair}<L, R>:\n      * <code>ImmutablePair.of(left, right)</code>\n-     * @param <L>\n-     * @param <R>\n-     * @param left\n-     * @param right\n+     *\n+     * @param <L> the left generic type\n+     * @param <R> the right generic type\n+     * @param left the let value\n+     * @param right the right value\n      * @return ImmutablePair<L, R>(left, right)\n      */\n     public static <L, R> ImmutablePair<L, R> of(L left, R right) {", "timestamp": 1300549306, "metainfo": ""}