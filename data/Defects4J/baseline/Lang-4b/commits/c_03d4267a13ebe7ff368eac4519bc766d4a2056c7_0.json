{"sha": "03d4267a13ebe7ff368eac4519bc766d4a2056c7", "log": "Tab police  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n+++ b/src/main/java/org/apache/commons/lang3/time/FastDateParser.java\n      */\n     private void init() {\n         Calendar definingCalendar = Calendar.getInstance(timeZone, locale);\n-\t\tthisYear= definingCalendar.get(Calendar.YEAR);\n+        thisYear= definingCalendar.get(Calendar.YEAR);\n \n         StringBuilder regex= new StringBuilder();\n         List<Strategy> collector = new ArrayList<Strategy>();\n             return formatField.length()>2 ?LITERAL_YEAR_STRATEGY :ABBREVIATED_YEAR_STRATEGY;\n         case 'Z':\n         case 'z':\n-        \treturn getLocaleSpecificStrategy(Calendar.ZONE_OFFSET, definingCalendar);\n+            return getLocaleSpecificStrategy(Calendar.ZONE_OFFSET, definingCalendar);\n         }\n     }\n \n      * @return a cache of Locale to Strategy\n      */\n     private static ConcurrentMap<Locale, Strategy> getCache(int field) {\n-    \tsynchronized(caches) {\n-    \t\tif(caches[field]==null) {\n-    \t\t\tcaches[field]= new ConcurrentHashMap<Locale,Strategy>(3);\n-    \t\t}\n-    \t\treturn caches[field];\n-    \t}\n+        synchronized(caches) {\n+            if(caches[field]==null) {\n+                caches[field]= new ConcurrentHashMap<Locale,Strategy>(3);\n+            }\n+            return caches[field];\n+        }\n     }\n \n     /**\n      * @return a TextStrategy for the field and Locale\n      */\n     private Strategy getLocaleSpecificStrategy(int field, Calendar definingCalendar) {\n-    \tConcurrentMap<Locale,Strategy> cache = getCache(field);\n-    \tStrategy strategy= cache.get(Integer.valueOf(field));\n+        ConcurrentMap<Locale,Strategy> cache = getCache(field);\n+        Strategy strategy= cache.get(Integer.valueOf(field));\n         if(strategy==null) {\n-        \tstrategy= field==Calendar.ZONE_OFFSET\n-        \t\t\t? new TimeZoneStrategy(locale)\n-        \t\t\t: new TextStrategy(field, definingCalendar, locale);\n+            strategy= field==Calendar.ZONE_OFFSET\n+                    ? new TimeZoneStrategy(locale)\n+                    : new TextStrategy(field, definingCalendar, locale);\n             Strategy inCache= cache.putIfAbsent(locale, strategy);\n             if(inCache!=null) {\n                 return inCache;\n         return strategy;\n     }\n \n-\t/**\n+    /**\n      * A strategy that copies the static or quoted field in the parsing pattern\n      */\n     private static class CopyQuotedStrategy implements Strategy {\n         }\n     }\n \n-\t/**\n+    /**\n      * A strategy that handles a text field in the parsing pattern\n      */\n      private static class TextStrategy implements Strategy {\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n     private static final String[] EMPTY_ARRAY_LIST = {};\n     private static final String[] NULL_ARRAY_LIST = {null};\n     private static final Object[] NULL_TO_STRING_LIST = {\n-    \tnew Object(){\n-    \t\t@Override\n-    \t\tpublic String toString() {\n-    \t\t\treturn null;\n-    \t\t}\n-    \t}\n+        new Object(){\n+            @Override\n+            public String toString() {\n+                return null;\n+            }\n+        }\n     };\n     private static final String[] MIXED_ARRAY_LIST = {null, \"\", \"foo\"};\n     private static final Object[] MIXED_TYPE_LIST = {\"foo\", Long.valueOf(2L)};", "timestamp": 1348751529, "metainfo": ""}