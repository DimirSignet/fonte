{"sha": "ab5e536c3425a467e2569598a7988ec64ee22d03", "log": "Application of patch from Bugzilla: #33574, by Travis Stevens. Balances a call to appendFieldStart with an appendFieldEnd after appending the field. Test also included.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n                             // append a simple Object.toString style string.\n                             this.getStyle().appendFieldStart(this.getStringBuffer(), fieldName);\n                             this.appendAsObjectToString(fieldValue);\n+                            this.getStyle().appendFieldEnd(this.getStringBuffer(), fieldName);\n                             // The recursion out of\n                             //    builder.append(fieldName, fieldValue);\n                             // below will append the field\n--- a/src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java\n         }\n       }\n     \n+    private static class SelfInstanceTwoVarsReflectionTestFixture {\n+        private SelfInstanceTwoVarsReflectionTestFixture typeIsSelf;\n+        private String otherType = \"The Other Type\";\n+\n+        public SelfInstanceTwoVarsReflectionTestFixture() {\n+            this.typeIsSelf = this;\n+        }\n+        \n+        public String getOtherType(){\n+            return this.otherType;\n+        }\n+\n+        public String toString() {\n+            return ToStringBuilder.reflectionToString(this);\n+        }\n+      }\n+    \n+    \n     /**\n      * Test an Object pointing to itself, the simplest test.\n      * \n         assertEquals(this.toBaseString(test) + \"[typeIsSelf=\" + this.toBaseString(test) + \"]\", test.toString());\n         this.validateEmptyReflectionRegistry();\n     }\n+    \n+    /**\n+     * Test a class that defines an ivar pointing to itself.  This test was \n+     * created to show that handling cyclical object resulted in a missing endFieldSeparator call.\n+     * \n+     * @throws Exception\n+     */\n+    public void testSelfInstanceTwoVarsReflectionObjectCycle() throws Exception {\n+        SelfInstanceTwoVarsReflectionTestFixture test = new SelfInstanceTwoVarsReflectionTestFixture();\n+        assertTrue(ReflectionToStringBuilder.getRegistry().isEmpty());\n+        assertEquals(this.toBaseString(test) + \"[typeIsSelf=\" + this.toBaseString(test) + \",otherType=\" + test.getOtherType().toString() + \"]\", test.toString());\n+        this.validateEmptyReflectionRegistry();\n+    }\n+    \n \n     /**\n      * Test Objects pointing to each other.", "timestamp": 1109826044, "metainfo": ""}