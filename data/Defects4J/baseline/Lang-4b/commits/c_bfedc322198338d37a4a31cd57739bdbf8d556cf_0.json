{"sha": "bfedc322198338d37a4a31cd57739bdbf8d556cf", "log": "Increase the number of methods that can chain  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n      * Sets the text to be appended when null is added.\n      *\n      * @param str  the null text, null means no append\n-     */\n-    public void setNullText(String str) {\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder setNullText(String str) {\n         if (str != null && str.length() == 0) {\n             str = null;\n         }\n         nullText = str;\n+        return this;\n     }\n \n     //-----------------------------------------------------------------------\n      * or adding filler of unicode zero.\n      *\n      * @param length  the length to set to, must be zero or positive\n+     * @return this, to enable chaining\n      * @throws IndexOutOfBoundsException if the length is negative\n      */\n-    public void setLength(int length) {\n+    public StrBuilder setLength(int length) {\n         if (length < 0) {\n             throw new StringIndexOutOfBoundsException(length);\n         }\n                 buffer[i] = '\\0';\n             }\n         }\n+        return this;\n     }\n \n     //-----------------------------------------------------------------------\n      * Checks the capacity and ensures that it is at least the size specified.\n      *\n      * @param capacity  the capacity to ensure\n-     */\n-    public void ensureCapacity(int capacity) {\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder ensureCapacity(int capacity) {\n         if (capacity > buffer.length) {\n             char[] old = buffer;\n             buffer = new char[capacity];\n             System.arraycopy(old, 0, buffer, 0, size);\n         }\n+        return this;\n     }\n \n     /**\n      * Minimizes the capacity to the actual length of the string.\n-     */\n-    public void minimizeCapacity() {\n+     *\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder minimizeCapacity() {\n         if (buffer.length > length()) {\n             char[] old = buffer;\n             buffer = new char[length()];\n             System.arraycopy(old, 0, buffer, 0, size);\n         }\n+        return this;\n     }\n \n     //-----------------------------------------------------------------------\n      * <p>\n      * This method is the same as checking {@link #length()} and is provided to match the\n      * API of Collections.\n+     *\n      * @return <code>true</code> if the size is <code>0</code>.\n      */\n     public boolean isEmpty() {\n      * This method does not reduce the size of the internal character buffer.\n      * To do that, call <code>clear()</code> followed by {@link #minimizeCapacity()}.\n      * <p>\n-     * This method is the same as {@link #setLength(int)} and is provided to match the\n-     * API of Collections.\n-     */\n-    public void clear() {\n+     * This method is the same as {@link #setLength(int)} called with zero\n+     * and is provided to match the API of Collections.\n+     *\n+     * @return this, to enable chaining\n+     */\n+    public StrBuilder clear() {\n         size = 0;\n+        return this;\n     }\n \n     //-----------------------------------------------------------------------\n      * @see #deleteCharAt(int)\n      * @param index  the index to set\n      * @param ch  the new character\n+     * @return this, to enable chaining\n      * @throws IndexOutOfBoundsException if the index is invalid\n      */\n-    public void setCharAt(int index, char ch) {\n+    public StrBuilder setCharAt(int index, char ch) {\n         if (index < 0 || index >= length()) {\n             throw new StringIndexOutOfBoundsException(index);\n         }\n         buffer[index] = ch;\n+        return this;\n     }\n \n     /**\n--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testChaining() {\n+        StrBuilder sb = new StrBuilder();\n+        assertSame(sb, sb.setNullText(null));\n+        assertSame(sb, sb.setLength(1));\n+        assertSame(sb, sb.setCharAt(0, 'a'));\n+        assertSame(sb, sb.ensureCapacity(0));\n+        assertSame(sb, sb.minimizeCapacity());\n+        assertSame(sb, sb.clear());\n+        assertSame(sb, sb.reverse());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testCapacityAndLength() {\n         StrBuilder sb = new StrBuilder();\n         assertEquals(32, sb.capacity());", "timestamp": 1124056558, "metainfo": ""}