{"sha": "271b27471960d87c8429323a79bdeddfd2e5ddce", "log": "Javadoc clarifications and tidy  ", "commit": "\n--- a/src/java/org/apache/commons/lang/mutable/MutableObject.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableObject.java\n     /**\n      * Constructs a new MutableObject with the specified value.\n      * \n-     * @param value\n-     *            a value.\n+     * @param value  the initial value to store\n      */\n     public MutableObject(T value) {\n         super();\n     /**\n      * Gets the value.\n      * \n-     * @return the value\n+     * @return the value, may be null\n      */\n     public T getValue() {\n         return this.value;\n     /**\n      * Sets the value.\n      * \n-     * @param value\n-     *            the value to set\n+     * @param value  the value to set\n      */\n     public void setValue(T value) {\n         this.value = value;\n      * is not <code>null</code> and is a <code>MutableObject</code> object that contains the same <code>T</code>\n      * value as this object.\n      * \n-     * @param obj\n-     *            the object to compare with.\n+     * @param obj  the object to compare with, null returns false\n      * @return <code>true</code> if the objects are the same; <code>false</code> otherwise.\n      */\n     public boolean equals(MutableObject<T> obj) {\n         return value == null ? 0 : value.hashCode();\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * Returns the String value of this mutable.\n      * ", "timestamp": 1256600965, "metainfo": ""}