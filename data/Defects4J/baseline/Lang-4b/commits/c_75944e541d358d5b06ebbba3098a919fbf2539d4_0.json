{"sha": "75944e541d358d5b06ebbba3098a919fbf2539d4", "log": "[LANG-865] LocaleUtils.toLocale does not parse strings starting with an underscore.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/LocaleUtils.java\n      * @return a Locale, null if null input\n      * @throws IllegalArgumentException if the string is an invalid format\n      */\n-    public static Locale toLocale(String str) {\n+    public static Locale toLocale(final String str) {\n         if (str == null) {\n             return null;\n         }\n-        int len = str.length();\n-        if (len != 2 && len != 5 && len < 7) {\n+        final int len = str.length();\n+        if (len < 2) {\n             throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n         }\n-        char ch0 = str.charAt(0);\n-        char ch1 = str.charAt(1);\n-        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n-            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-        }\n-        if (len == 2) {\n-            return new Locale(str, \"\");\n+        final char ch0 = str.charAt(0);\n+        if (ch0 == '_') {\n+            if (len < 3) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            final char ch1 = str.charAt(1);\n+            final char ch2 = str.charAt(2);\n+            if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (len == 3) {\n+                return new Locale(\"\", str.substring(1, 3));\n+            }\n+            if (len < 5) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (str.charAt(3) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(\"\", str.substring(1, 3), str.substring(4));\n         } else {\n+            final char ch1 = str.charAt(1);\n+            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (len == 2) {\n+                return new Locale(str);\n+            }\n+            if (len < 5) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n             if (str.charAt(2) != '_') {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n-            char ch3 = str.charAt(3);\n+            final char ch3 = str.charAt(3);\n             if (ch3 == '_') {\n                 return new Locale(str.substring(0, 2), \"\", str.substring(4));\n             }\n-            char ch4 = str.charAt(4);\n-            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n+            final char ch4 = str.charAt(4);\n+            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n                 throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n             }\n             if (len == 5) {\n                 return new Locale(str.substring(0, 2), str.substring(3, 5));\n-            } else {\n-                if (str.charAt(5) != '_') {\n-                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n-                }\n-                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n-            }\n+            }\n+            if (len < 7) {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            if (str.charAt(5) != '_') {\n+                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n+            }\n+            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n         }\n     }\n \n--- a/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/LocaleUtilsTest.java\n      */\n     @Test\n     public void testLang328() {\n+        assertValidToLocale(\"fr__P\", \"fr\", \"\", \"P\");\n         assertValidToLocale(\"fr__POSIX\", \"fr\", \"\", \"POSIX\");\n     }\n \n+    /**\n+     * Tests #LANG-865, strings starting with an underscore.\n+     */\n+    @Test\n+    public void testLang865() {\n+        assertValidToLocale(\"_GB\", \"\", \"GB\", \"\");\n+        assertValidToLocale(\"_GB_P\", \"\", \"GB\", \"P\");\n+        assertValidToLocale(\"_GB_POSIX\", \"\", \"GB\", \"POSIX\");\n+        try {\n+            LocaleUtils.toLocale(\"_G\");\n+            fail(\"Must be at least 3 chars if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_Gb\");\n+            fail(\"Must be uppercase if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_gB\");\n+            fail(\"Must be uppercase if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_1B\");\n+            fail(\"Must be letter if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_G1\");\n+            fail(\"Must be letter if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_GB_\");\n+            fail(\"Must be at least 5 chars if starts with underscore\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+        try {\n+            LocaleUtils.toLocale(\"_GBAP\");\n+            fail(\"Must have underscore after the country if starts with underscore and is at least 5 chars\");\n+        } catch (final IllegalArgumentException iae) {\n+        }\n+    }\n+\n }", "timestamp": 1357193992, "metainfo": ""}