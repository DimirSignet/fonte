{"sha": "ecd97d766c3a167d27e9d09cbca38eda36497300", "log": "Split test into 4 so each failure can be detected  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java\n+++ b/src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java\n     }\n     \n     @Test\n-    public void testLocales() {\n+    public void testLocales_Long_AD() throws Exception {\n                 \n         for(Locale locale : Locale.getAvailableLocales()) {\n             Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);\n                 String longFormat= \"GGGG/yyyy/MMMM/dddd/aaaa/EEEE/ZZZZ\";\n                 SimpleDateFormat sdf = new SimpleDateFormat(longFormat, locale);\n                 DateParser fdf = getInstance(longFormat, locale);\n-                \n-                                checkParse(cal, sdf, fdf);\n-                \n-                cal.set(Calendar.ERA, GregorianCalendar.BC);\n-                                checkParse(cal, sdf, fdf);\n-                        \n-                String shortFormat= \"G/y/M/d/a/E/Z\";\n-                sdf = new SimpleDateFormat(shortFormat, locale);\n-                fdf = getInstance(shortFormat, locale);\n-                                checkParse(cal, sdf, fdf);\n-                \n-                cal.set(Calendar.ERA, GregorianCalendar.AD);\n-                                checkParse(cal, sdf, fdf);\n+                checkParse(cal, sdf, fdf);\n             }\n             catch(ParseException ex) {\n                 // TODO: why do ja_JP_JP, hi_IN, th_TH, and th_TH_TH fail?\n-                System.out.println(\"Locale \"+locale+ \" failed\");\n+                System.out.println(\"Long AD Locale \"+locale+ \" failed\\n\" + ex.toString());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testLocales_Long_BC() throws Exception {\n+                \n+        for(Locale locale : Locale.getAvailableLocales()) {\n+            Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);\n+            cal.clear();\n+            cal.set(2003, 1, 10);\n+            cal.set(Calendar.ERA, GregorianCalendar.BC);\n+\n+            try {\n+                String longFormat= \"GGGG/yyyy/MMMM/dddd/aaaa/EEEE/ZZZZ\";\n+                SimpleDateFormat sdf = new SimpleDateFormat(longFormat, locale);\n+                DateParser fdf = getInstance(longFormat, locale);               \n+                checkParse(cal, sdf, fdf);\n+            }\n+            catch(ParseException ex) {\n+                // TODO: why do ja_JP_JP, hi_IN, th_TH, and th_TH_TH fail?\n+                System.out.println(\"Long BC Locale \"+locale+ \" failed\\n\" + ex.toString());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testLocales_Short_BC() throws Exception {\n+                \n+        for(Locale locale : Locale.getAvailableLocales()) {\n+            Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);\n+            cal.clear();\n+            cal.set(2003, 1, 10);\n+            cal.set(Calendar.ERA, GregorianCalendar.BC);                        \n+\n+            try {\n+                String shortFormat= \"G/y/M/d/a/E/Z\";\n+                SimpleDateFormat sdf = new SimpleDateFormat(shortFormat, locale);\n+                DateParser fdf = getInstance(shortFormat, locale);\n+                checkParse(cal, sdf, fdf);\n+            }\n+            catch(ParseException ex) {\n+                // TODO: why do ja_JP_JP, hi_IN, th_TH, and th_TH_TH fail?\n+                System.out.println(\"Short BC Locale \"+locale+ \" failed\\n\" + ex.toString());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testLocales_Short_AD() throws Exception {\n+                \n+        for(Locale locale : Locale.getAvailableLocales()) {\n+            Calendar cal= Calendar.getInstance(NEW_YORK, Locale.US);\n+            cal.clear();\n+            cal.set(2003, 1, 10);\n+            cal.set(Calendar.ERA, GregorianCalendar.AD);\n+\n+            try {\n+                String shortFormat= \"G/y/M/d/a/E/Z\";\n+                SimpleDateFormat sdf = new SimpleDateFormat(shortFormat, locale);\n+                DateParser fdf = getInstance(shortFormat, locale);              \n+                checkParse(cal, sdf, fdf);\n+            }\n+            catch(ParseException ex) {\n+                // TODO: why do ja_JP_JP, hi_IN, th_TH, and th_TH_TH fail?\n+                System.out.println(\"Short_AD Locale \"+locale+ \" failed\\n\" + ex.toString());\n             }\n         }\n     }", "timestamp": 1348506107, "metainfo": ""}