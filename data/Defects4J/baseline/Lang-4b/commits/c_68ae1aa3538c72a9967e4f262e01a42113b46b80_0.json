{"sha": "68ae1aa3538c72a9967e4f262e01a42113b46b80", "log": "Moved toClass from ArrayUtils to ClassUtils as per Joerg's comment in LANG-333  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n         return result;\n     }\n \n-    /**\n-     * <p>Converts an array of <code>Object</code> in to an Array of <code>Class</code> objects.</p>\n-     *\n-     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n-     *\n-     * @param array an <code>Object</code> array\n-     * @return a <code>Class</code> array, <code>null</code> if null array input\n-     * @since 2.4\n-     */\n-    public static Class[] toClass(Object[] array)\n-    {\n-        if (array == null) {\n-            return null;\n-        } else if (array.length == 0) {\n-            return EMPTY_CLASS_ARRAY;\n-        }\n-        Class[] classes = new Class[array.length];\n-        for (int i = 0; i < array.length; i++) {\n-            classes[i] = array[i].getClass();\n-        }\n-        return classes;\n-    }\n-\n }\n--- a/src/java/org/apache/commons/lang/ClassUtils.java\n+++ b/src/java/org/apache/commons/lang/ClassUtils.java\n         return className;\n     }\n \n+    /**\n+     * <p>Converts an array of <code>Object</code> in to an Array of <code>Class</code> objects.</p>\n+     *\n+     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n+     *\n+     * @param array an <code>Object</code> array\n+     * @return a <code>Class</code> array, <code>null</code> if null array input\n+     * @since 2.4\n+     */\n+    public static Class[] toClass(Object[] array)\n+    {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return ArrayUtils.EMPTY_CLASS_ARRAY;\n+        }\n+        Class[] classes = new Class[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            classes[i] = array[i].getClass();\n+        }\n+        return classes;\n+    }\n }\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n                 new double[] { Double.MIN_VALUE, Double.MAX_VALUE, 9999999 })));\n     }\n \n-    public void testToClass_object() {\n-        assertEquals(null, ArrayUtils.toClass(null));\n-\n-        assertSame(\n-            ArrayUtils.EMPTY_CLASS_ARRAY,\n-            ArrayUtils.toClass(new Class[0]));\n-\n-        Object[] array = new Object[3];\n-        array[0] = new String(\"Test\");\n-        array[1] = new Integer(1);\n-        array[2] = new Double(99);\n-\n-        Class[] results = ArrayUtils.toClass(array);\n-        assertEquals(\"String\", ClassUtils.getShortClassName(results[0]));\n-        assertEquals(\"Integer\", ClassUtils.getShortClassName(results[1]));\n-        assertEquals(\"Double\", ClassUtils.getShortClassName(results[2]));\n-    }\n-\n     //-----------------------------------------------------------------------\n     /**\n      * Test for {@link ArrayUtils#isEmpty(java.lang.Object[])}.\n--- a/src/test/org/apache/commons/lang/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ClassUtilsTest.java\n             assertEquals(Object.class.getMethod(\"toString\", new Class[0]), toStringMethod);\n     }\n  \n+    public void testToClass_object() {\n+        assertEquals(null, ClassUtils.toClass(null));\n+\n+        assertSame(\n+            ArrayUtils.EMPTY_CLASS_ARRAY,\n+            ClassUtils.toClass(new Class[0]));\n+\n+        Object[] array = new Object[3];\n+        array[0] = new String(\"Test\");\n+        array[1] = new Integer(1);\n+        array[2] = new Double(99);\n+\n+        Class[] results = ClassUtils.toClass(array);\n+        assertEquals(\"String\", ClassUtils.getShortClassName(results[0]));\n+        assertEquals(\"Integer\", ClassUtils.getShortClassName(results[1]));\n+        assertEquals(\"Double\", ClassUtils.getShortClassName(results[2]));\n+    }\n+\n }", "timestamp": 1194964533, "metainfo": ""}