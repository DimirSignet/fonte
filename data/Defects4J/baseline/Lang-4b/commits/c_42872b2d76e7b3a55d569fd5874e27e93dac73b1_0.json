{"sha": "42872b2d76e7b3a55d569fd5874e27e93dac73b1", "log": "Adding @since 3.0 CharSequence tags  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * @param str2  the second CharSequence, may be null\n      * @return {@code true} if the CharSequence are equal, case insensitive, or\n      *  both {@code null}\n+     * @since 3.0 Changed signature from equalsIgnoreCase(String, String) to equalsIgnoreCase(CharSequence, CharSequence)\n      */\n     public static boolean equalsIgnoreCase(CharSequence str1, CharSequence str2) {\n         if (str1 == null || str2 == null) {\n      * @return the first index of the search character,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from indexOf(String, int) to indexOf(CharSequence, int)\n      */\n     public static int indexOf(CharSequence seq, int searchChar) {\n         if (isEmpty(seq)) {\n      * @return the first index of the search character,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from indexOf(String, int, int) to indexOf(CharSequence, int, int)\n      */\n     public static int indexOf(CharSequence seq, int searchChar, int startPos) {\n         if (isEmpty(seq)) {\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from indexOf(String, String) to indexOf(CharSequence, CharSequence)\n      */\n     public static int indexOf(CharSequence seq, CharSequence searchSeq) {\n         if (seq == null || searchSeq == null) {\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from indexOf(String, String, int) to indexOf(CharSequence, CharSequence, int)\n      */\n     public static int indexOf(CharSequence seq, CharSequence searchSeq, int startPos) {\n         if (seq == null || searchSeq == null) {\n      * @return the n-th index of the search CharSequence,\n      *  {@code -1} ({@code INDEX_NOT_FOUND}) if no match or {@code null} string input\n      * @since 2.1\n+     * @since 3.0 Changed signature from ordinalIndexOf(String, String, int) to ordinalIndexOf(CharSequence, CharSequence, int)\n      */\n     public static int ordinalIndexOf(CharSequence str, CharSequence searchStr, int ordinal) {\n         return ordinalIndexOf(str, searchStr, ordinal, false);\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.5\n+     * @since 3.0 Changed signature from indexOfIgnoreCase(String, String) to indexOfIgnoreCase(CharSequence, CharSequence)\n      */\n     public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr) {\n         return indexOfIgnoreCase(str, searchStr, 0);\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.5\n+     * @since 3.0 Changed signature from indexOfIgnoreCase(String, String, int) to indexOfIgnoreCase(CharSequence, CharSequence, int)\n      */\n     public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos) {\n         if (str == null || searchStr == null) {\n      * @return the last index of the search character,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from lastIndexOf(String, int) to lastIndexOf(CharSequence, int)\n      */\n     public static int lastIndexOf(CharSequence seq, int searchChar) {\n         if (isEmpty(seq)) {\n      * @return the last index of the search character,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from lastIndexOf(String, int, int) to lastIndexOf(CharSequence, int, int)\n      */\n     public static int lastIndexOf(CharSequence seq, int searchChar, int startPos) {\n         if (isEmpty(seq)) {\n      * @return the last index of the search String,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from lastIndexOf(String, String) to lastIndexOf(CharSequence, CharSequence)\n      */\n     public static int lastIndexOf(CharSequence seq, CharSequence searchSeq) {\n         if (seq == null || searchSeq == null) {\n      * @return the n-th last index of the search CharSequence,\n      *  {@code -1} ({@code INDEX_NOT_FOUND}) if no match or {@code null} string input\n      * @since 2.5\n+     * @since 3.0 Changed signature from lastOrdinalIndexOf(String, String, int) to lastOrdinalIndexOf(CharSequence, CharSequence, int)\n      */\n     public static int lastOrdinalIndexOf(CharSequence str, CharSequence searchStr, int ordinal) {\n         return ordinalIndexOf(str, searchStr, ordinal, true);\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from lastIndexOf(String, String, int) to lastIndexOf(CharSequence, CharSequence, int)\n      */\n     public static int lastIndexOf(CharSequence seq, CharSequence searchSeq, int startPos) {\n         if (seq == null || searchSeq == null) {\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} string input\n      * @since 2.5\n+     * @since 3.0 Changed signature from lastIndexOfIgnoreCase(String, String) to lastIndexOfIgnoreCase(CharSequence, CharSequence)\n      */\n     public static int lastIndexOfIgnoreCase(CharSequence str, CharSequence searchStr) {\n         if (str == null || searchStr == null) {\n      * @return the first index of the search CharSequence,\n      *  -1 if no match or {@code null} input\n      * @since 2.5\n+     * @since 3.0 Changed signature from lastIndexOfIgnoreCase(String, String, int) to lastIndexOfIgnoreCase(CharSequence, CharSequence, int)\n      */\n     public static int lastIndexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos) {\n         if (str == null || searchStr == null) {\n      * @return true if the CharSequence contains the search character,\n      *  false if not or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from contains(String, int) to contains(CharSequence, int)\n      */\n     public static boolean contains(CharSequence seq, int searchChar) {\n         if (isEmpty(seq)) {\n      * @return true if the CharSequence contains the search CharSequence,\n      *  false if not or {@code null} string input\n      * @since 2.0\n+     * @since 3.0 Changed signature from contains(String, String) to contains(CharSequence, CharSequence)\n      */\n     public static boolean contains(CharSequence seq, CharSequence searchSeq) {\n         if (seq == null || searchSeq == null) {\n      * @param searchStr  the CharSequence to find, may be null\n      * @return true if the CharSequence contains the search CharSequence irrespective of\n      * case or false if not or {@code null} string input\n+     * @since 3.0 Changed signature from containsIgnoreCase(String, String) to containsIgnoreCase(CharSequence, CharSequence)\n      */\n     public static boolean containsIgnoreCase(CharSequence str, CharSequence searchStr) {\n         if (str == null || searchStr == null) {", "timestamp": 1302902812, "metainfo": ""}