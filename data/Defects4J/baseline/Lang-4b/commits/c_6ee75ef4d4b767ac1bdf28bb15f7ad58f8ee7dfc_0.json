{"sha": "6ee75ef4d4b767ac1bdf28bb15f7ad58f8ee7dfc", "log": "Add a CharSetUtils.containsAny(String, String) per LANG-886  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/CharSetUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/CharSetUtils.java\n         return buffer.toString();\n     }\n \n+    // ContainsAny\n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Takes an argument in set-syntax, see evaluateSet,\n+     * and identifies whether any of the characters are present in the specified string.</p>\n+     *\n+     * <pre>\n+     * CharSetUtils.containsAny(null, *)        = false\n+     * CharSetUtils.containsAny(\"\", *)          = false\n+     * CharSetUtils.containsAny(*, null)        = false\n+     * CharSetUtils.containsAny(*, \"\")          = false\n+     * CharSetUtils.containsAny(\"hello\", \"k-p\") = true\n+     * CharSetUtils.containsAny(\"hello\", \"a-d\") = false\n+     * </pre>\n+     *\n+     * @see CharSet#getInstance(java.lang.String...) for set-syntax.\n+     * @param str  String to look for characters in, may be null\n+     * @param set  String[] set of characters to identify, may be null\n+     * @return whether or not the characters in the set are in the primary string\n+     */\n+    public static boolean containsAny(final String str, final String... set) {\n+        if (StringUtils.isEmpty(str) || deepEmpty(set)) {\n+            return false;\n+        }\n+        final CharSet chars = CharSet.getInstance(set);\n+        for (final char c : str.toCharArray()) {\n+            if (chars.contains(c)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     // Count\n     //-----------------------------------------------------------------------\n     /**\n--- a/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/CharSetUtilsTest.java\n \n     //-----------------------------------------------------------------------\n     @Test\n+    public void testContainsAny_StringString() {\n+        assertFalse(CharSetUtils.containsAny(null, (String) null));\n+        assertFalse(CharSetUtils.containsAny(null, \"\"));\n+        \n+        assertFalse(CharSetUtils.containsAny(\"\", (String) null));\n+        assertFalse(CharSetUtils.containsAny(\"\", \"\"));\n+        assertFalse(CharSetUtils.containsAny(\"\", \"a-e\"));\n+        \n+        assertFalse(CharSetUtils.containsAny(\"hello\", (String) null));\n+        assertFalse(CharSetUtils.containsAny(\"hello\", \"\"));\n+        assertTrue(CharSetUtils.containsAny(\"hello\", \"a-e\"));\n+        assertTrue(CharSetUtils.containsAny(\"hello\", \"l-p\"));\n+    }\n+    \n+    @Test\n+    public void testContainsAny_StringStringarray() {\n+        assertFalse(CharSetUtils.containsAny(null, (String[]) null));\n+        assertFalse(CharSetUtils.containsAny(null, new String[0]));\n+        assertFalse(CharSetUtils.containsAny(null, new String[] {null}));\n+        assertFalse(CharSetUtils.containsAny(null, new String[] {\"a-e\"}));\n+        \n+        assertFalse(CharSetUtils.containsAny(\"\", (String[]) null));\n+        assertFalse(CharSetUtils.containsAny(\"\", new String[0]));\n+        assertFalse(CharSetUtils.containsAny(\"\", new String[] {null}));\n+        assertFalse(CharSetUtils.containsAny(\"\", new String[] {\"a-e\"}));\n+        \n+        assertFalse(CharSetUtils.containsAny(\"hello\", (String[]) null));\n+        assertFalse(CharSetUtils.containsAny(\"hello\", new String[0]));\n+        assertFalse(CharSetUtils.containsAny(\"hello\", new String[] {null}));\n+        assertTrue(CharSetUtils.containsAny(\"hello\", new String[] {\"a-e\"}));\n+        \n+        assertTrue(CharSetUtils.containsAny(\"hello\", new String[] { \"el\" }));\n+        assertFalse(CharSetUtils.containsAny(\"hello\", new String[] { \"x\" }));\n+        assertTrue(CharSetUtils.containsAny(\"hello\", new String[] { \"e-i\" }));\n+        assertTrue(CharSetUtils.containsAny(\"hello\", new String[] { \"a-z\" }));\n+        assertFalse(CharSetUtils.containsAny(\"hello\", new String[] { \"\" }));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    @Test\n     public void testCount_StringString() {\n         assertEquals(0, CharSetUtils.count(null, (String) null));\n         assertEquals(0, CharSetUtils.count(null, \"\"));", "timestamp": 1366448743, "metainfo": ""}