{"sha": "fa16cc041a9c14dfcde202c8067def92628d9d20", "log": "Adding Shashi Kant Sharma's implementation of endsWithAny - LANG-614  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n         }\n         return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll(\" \");         \n     }\n+\n+    /**\n+     * <p>Check if a String ends with any of an array of specified strings.</p>\n+     *\n+     * <pre>\n+     * StringUtils.endsWithAny(null, null)      = false\n+     * StringUtils.endsWithAny(null, new String[] {\"abc\"})  = false\n+     * StringUtils.endsWithAny(\"abcxyz\", null)     = false\n+     * StringUtils.endsWithAny(\"abcxyz\", new String[] {\"\"}) = true\n+     * StringUtils.endsWithAny(\"abcxyz\", new String[] {\"xyz\"}) = true\n+     * StringUtils.endsWithAny(\"abcxyz\", new String[] {null, \"xyz\", \"abc\"}) = true\n+     * </pre>\n+     *\n+     * @param string  the String to check, may be null\n+     * @param searchStrings the Strings to find, may be null or empty\n+     * @return <code>true</code> if the String ends with any of the the prefixes, case insensitive, or\n+     *  both <code>null</code>\n+     * @since 3.1\n+     */\n+    public static boolean endsWithAny(String string, String... searchStrings) {\n+        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {\n+            return false;\n+        }\n+        for (int i = 0; i < searchStrings.length; i++) {\n+            String searchString = searchStrings[i];\n+            if (StringUtils.endsWith(string, searchString)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n }\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java\n         assertFalse(StringUtils.endsWithIgnoreCase(\"ABCDEF\", \"cde\"));\n     }\n \n+    public void testEndsWithAny() {\n+        assertFalse(\"StringUtils.endsWithAny(null, null)\", StringUtils.endsWithAny(null, (String)null));\n+        assertFalse(\"StringUtils.endsWithAny(null, new String[] {abc})\", StringUtils.endsWithAny(null, new String[] {\"abc\"}));\n+        assertFalse(\"StringUtils.endsWithAny(abcxyz, null)\", StringUtils.endsWithAny(\"abcxyz\", (String)null));\n+        assertTrue(\"StringUtils.endsWithAny(abcxyz, new String[] {\\\"\\\"})\", StringUtils.endsWithAny(\"abcxyz\", new String[] {\"\"}));\n+        assertTrue(\"StringUtils.endsWithAny(abcxyz, new String[] {xyz})\", StringUtils.endsWithAny(\"abcxyz\", new String[] {\"xyz\"}));\n+        assertTrue(\"StringUtils.endsWithAny(abcxyz, new String[] {null, xyz, abc})\", StringUtils.endsWithAny(\"abcxyz\", new String[] {null, \"xyz\", \"abc\"}));\n+        assertFalse(\"StringUtils.endsWithAny(defg, new String[] {null, xyz, abc})\", StringUtils.endsWithAny(\"defg\", new String[] {null, \"xyz\", \"abc\"}));\n+\n+    }\n+\n+\n }", "timestamp": 1284700227, "metainfo": ""}