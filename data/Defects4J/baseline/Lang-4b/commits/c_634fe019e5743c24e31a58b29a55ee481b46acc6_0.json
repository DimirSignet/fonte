{"sha": "634fe019e5743c24e31a58b29a55ee481b46acc6", "log": "Moving availableLocaleSet and availableLocaleList to both lazily initialize in a separate synchronized method. This brings the two pieces of code into line with each other, allows availableLocaleSet() to be unsynchronized as desired in LANG-488 and removes the static initialization of availableLocaleList() as requested in LANG-511  ", "commit": "\n--- a/src/java/org/apache/commons/lang/LocaleUtils.java\n+++ b/src/java/org/apache/commons/lang/LocaleUtils.java\n public class LocaleUtils {\n \n     /** Unmodifiable list of available locales. */\n-    private static final List<Locale> cAvailableLocaleList;\n+    //@GuardedBy(\"this\")\n+    private static List<Locale> cAvailableLocaleList; // lazily created by availableLocaleList()\n+\n     /** Unmodifiable set of available locales. */\n     //@GuardedBy(\"this\")\n-    private static Set<Locale> cAvailableLocaleSet; // lazily created by availableLocaleSet()\n+    private static Set<Locale> cAvailableLocaleSet;   // lazily created by availableLocaleSet()\n+\n     /** Unmodifiable map of language locales by country. */\n     private static final Map<String, List<Locale>> cLanguagesByCountry = Collections.synchronizedMap(new HashMap<String, List<Locale>>());\n+\n     /** Unmodifiable map of country locales by language. */\n     private static final Map<String, List<Locale>> cCountriesByLanguage = Collections.synchronizedMap(new HashMap<String, List<Locale>>());\n-    static {\n-        List<Locale> list = Arrays.asList(Locale.getAvailableLocales());\n-        cAvailableLocaleList = Collections.unmodifiableList(list);\n-    }\n \n     /**\n      * <p><code>LocaleUtils</code> instances should NOT be constructed in standard programming.\n      * @return the unmodifiable list of available locales\n      */\n     public static List<Locale> availableLocaleList() {\n+        if(cAvailableLocaleList == null) { \n+            initAvailableLocaleList(); \n+        }\n         return cAvailableLocaleList;\n+    }\n+\n+    /**\n+     * Initializes the availableLocaleList. It is separate from availableLocaleList() \n+     * to avoid the synchronized block affecting normal use, yet synchronized and \n+     * lazy loading to avoid a static block affecting other methods in this class. \n+     */\n+    private static synchronized void initAvailableLocaleList() {\n+        if(cAvailableLocaleList == null) {\n+            List<Locale> list = Arrays.asList(Locale.getAvailableLocales());\n+            cAvailableLocaleList = Collections.unmodifiableList(list);\n+        }\n     }\n \n     //-----------------------------------------------------------------------\n      * @return the unmodifiable set of available locales\n      */\n     public static synchronized Set<Locale> availableLocaleSet() {\n-        Set<Locale> set = cAvailableLocaleSet;\n-        if (set == null) {\n-            set = new HashSet<Locale>(availableLocaleList());\n-            set = Collections.unmodifiableSet(set);\n-            cAvailableLocaleSet = set;\n-        }\n-        return set;\n+        if(cAvailableLocaleSet == null) { \n+            initAvailableLocaleSet(); \n+        }\n+        return cAvailableLocaleSet;\n+    }\n+\n+    /**\n+     * Initializes the availableLocaleSet. It is separate from availableLocaleSet() \n+     * to avoid the synchronized block affecting normal use, yet synchronized and \n+     * lazy loading to avoid a static block affecting other methods in this class. \n+     */\n+    private static synchronized void initAvailableLocaleSet() {\n+        if(cAvailableLocaleSet == null) {\n+            cAvailableLocaleSet = Collections.unmodifiableSet( new HashSet<Locale>(availableLocaleList()) );\n+        }\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1246950602, "metainfo": ""}