{"sha": "5055925ad77032aa000de16185958b5c823a4a3a", "log": "[LANG-873] Add FieldUtils getAllFields() to return all the fields defined in the given class and super classes. Alternate impl that splits into two APIs, one with an array result, the other with a List.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n \n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.reflect.testbed.Ambig;\n         final Field[] fieldsInteger = Integer.class.getDeclaredFields();\n         assertArrayEquals(ArrayUtils.addAll(fieldsInteger, fieldsNumber), FieldUtils.getAllFields(Integer.class));\n         assertEquals(5, FieldUtils.getAllFields(PublicChild.class).length);\n+    }\n+\n+    private <T> List<T> asArrayList(T... values) {\n+        final ArrayList<T> arrayList = new ArrayList<T>();\n+        for (T t : values) {\n+            arrayList.add(t);\n+        }\n+        return arrayList;\n+    }\n+\n+    @Test\n+    public void testGetAllFieldsList() {\n+        assertEquals(0, FieldUtils.getAllFieldsList(Object.class).size());\n+        final List<Field> fieldsNumber = asArrayList(Number.class.getDeclaredFields());\n+        assertEquals(fieldsNumber, FieldUtils.getAllFieldsList(Number.class));\n+        final List<Field> fieldsInteger = asArrayList(Integer.class.getDeclaredFields());\n+        final List<Field> allFieldsInteger = new ArrayList<Field>(fieldsInteger);\n+        allFieldsInteger.addAll(fieldsNumber);\n+        assertEquals(allFieldsInteger, FieldUtils.getAllFieldsList(Integer.class));\n+        assertEquals(5, FieldUtils.getAllFieldsList(PublicChild.class).size());\n     }\n \n     @Test", "timestamp": 1363224937, "metainfo": ""}