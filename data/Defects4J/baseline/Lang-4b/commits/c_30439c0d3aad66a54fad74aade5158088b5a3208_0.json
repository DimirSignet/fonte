{"sha": "30439c0d3aad66a54fad74aade5158088b5a3208", "log": "Added a new isSuccessful() method to the result object of MultiBackgroundInitializer.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java\n+++ b/src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java\n         }\n \n         /**\n+         * Returns a flag whether the whole initialization was successful. This\n+         * is the case if no child initializer has thrown an exception.\n+         *\n+         * @return a flag whether the initialization was successful\n+         */\n+        public boolean isSuccessful() {\n+            return exceptions.isEmpty();\n+        }\n+\n+        /**\n          * Checks whether an initializer with the given name exists. If not,\n          * throws an exception. If it exists, the associated child initializer\n          * is returned.\n--- a/src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java\n+++ b/src/test/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java\n     }\n \n     /**\n+     * Tests the isSuccessful() method of the result object if no child\n+     * initializer has thrown an exception.\n+     */\n+    @Test\n+    public void testInitializeResultsIsSuccessfulTrue()\n+            throws ConcurrentException {\n+        ChildBackgroundInitializer child = new ChildBackgroundInitializer();\n+        initializer.addInitializer(CHILD_INIT, child);\n+        initializer.start();\n+        MultiBackgroundInitializer.MultiBackgroundInitializerResults res = initializer\n+                .get();\n+        assertTrue(\"Wrong success flag\", res.isSuccessful());\n+    }\n+\n+    /**\n+     * Tests the isSuccessful() method of the result object if at least one\n+     * child initializer has thrown an exception.\n+     */\n+    @Test\n+    public void testInitializeResultsIsSuccessfulFalse()\n+            throws ConcurrentException {\n+        ChildBackgroundInitializer child = new ChildBackgroundInitializer();\n+        child.ex = new Exception();\n+        initializer.addInitializer(CHILD_INIT, child);\n+        initializer.start();\n+        MultiBackgroundInitializer.MultiBackgroundInitializerResults res = initializer\n+                .get();\n+        assertFalse(\"Wrong success flag\", res.isSuccessful());\n+    }\n+\n+    /**\n      * Tests whether MultiBackgroundInitializers can be combined in a nested\n      * way.\n      */", "timestamp": 1282334470, "metainfo": ""}