{"sha": "90677fed14f5185bc14350e6bdce103b2f367fa3", "log": "Port to JUnit 4.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java\n+++ b/src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java\n  */\n package org.apache.commons.lang3.builder;\n \n-import junit.framework.TestCase;\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n \n /**\n  * Tests {@link org.apache.commons.lang3.builder.HashCodeBuilder} and\n  * \n  * @version $Id$\n  */\n-public class HashCodeBuilderAndEqualsBuilderTest extends TestCase {\n-\n-    /**\n-     * Constructor for HashCodeBuilderAndEqualsBuilderTest.\n-     * @param name\n-     */\n-    public HashCodeBuilderAndEqualsBuilderTest(String name) {\n-        super(name);\n-    }\n+public class HashCodeBuilderAndEqualsBuilderTest {\n \n     //-----------------------------------------------------------------------\n \n-    public void testInteger(boolean testTransients) {\n+    private void testInteger(boolean testTransients) {\n         Integer i1 = Integer.valueOf(12345);\n         Integer i2 = Integer.valueOf(12345);\n         assertEqualsAndHashCodeContract(i1, i2, testTransients);\n     }\n \n+    @Test\n     public void testInteger() {\n         testInteger(false);\n     }\n \n+    @Test\n     public void testIntegerWithTransients() {\n         testInteger(true);\n     }\n \n+    @Test\n     public void testFixture() {\n         testFixture(false);\n     }\n \n+    @Test\n     public void testFixtureWithTransients() {\n         testFixture(true);\n     }\n \n-    public void testFixture(boolean testTransients) {\n+    private void testFixture(boolean testTransients) {\n         assertEqualsAndHashCodeContract(new TestFixture(2, 'c', \"Test\", (short) 2), new TestFixture(2, 'c', \"Test\", (short) 2), testTransients);\n         assertEqualsAndHashCodeContract(\n             new AllTransientFixture(2, 'c', \"Test\", (short) 2),\n      * @param rhs The Right-Hand-Side of the equals test\n      * @param testTransients wether to test transient fields\n      */\n-    public void assertEqualsAndHashCodeContract(Object lhs, Object rhs, boolean testTransients) {\n+    private void assertEqualsAndHashCodeContract(Object lhs, Object rhs, boolean testTransients) {\n         if (EqualsBuilder.reflectionEquals(lhs, rhs, testTransients)) {\n             // test a couple of times for consistency.\n             assertEquals(HashCodeBuilder.reflectionHashCode(lhs, testTransients), HashCodeBuilder.reflectionHashCode(rhs, testTransients));", "timestamp": 1318950109, "metainfo": ""}