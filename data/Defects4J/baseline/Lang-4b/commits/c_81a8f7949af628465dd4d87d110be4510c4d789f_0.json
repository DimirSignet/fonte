{"sha": "81a8f7949af628465dd4d87d110be4510c4d789f", "log": "Javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Michael Becke\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.12 2003/05/24 14:34:14 scolebourne Exp $\n+ * @version $Id: SystemUtils.java,v 1.13 2003/05/30 01:12:26 ggregory Exp $\n  */\n public class SystemUtils {\n     \n     //-----------------------------------------------------------------------\n     /**\n      * The <code>file.encoding</code> System Property.\n-     * File encoding, such as Cp1252.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>File encoding, such as <code>Cp1252</code>.</p>\n+     * \n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.</p>\n+     * \n+     * @since Java version 1.2.\n      */\n     public static final String FILE_ENCODING = getSystemProperty(\"file.encoding\");\n \n     /**\n      * The <code>file.separator</code> System Property.\n      * File separator (\"/\" on UNIX).\n-     * First in JDK version 1.1.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java version 1.1.\n      */\n     public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");\n \n     /**\n      * The <code>java.class.path</code> System Property.\n      * Java class path.\n-     * First in JDK version 1.1.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java version 1.1.\n      */\n     public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");\n \n     /**\n      * The <code>java.class.version</code> System Property.\n      * Java class format version number.\n-     * First in JDK version 1.1.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java version 1.1.\n      */\n     public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");\n \n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or property not specified.\n+     * \n+     * @since Java version 1.2. Not used in Sun versions after 1.2.\n      */\n     public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");\n \n     /**\n      * The <code>java.ext.dirs</code> System Property.\n      * Path of extension directory or directories.\n-     * First in JDK version 1.3.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.3\n      */\n     public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");\n \n     /**\n      * The <code>java.home</code> System Property.\n      * Java installation directory.\n-     * First in JDK version 1.1.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String JAVA_HOME = getSystemProperty(\"java.home\");\n \n     /**\n      * The <code>java.io.tmpdir</code> System Property.\n      * Default temp file path.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_IO_TMPDIR = getSystemProperty(\"java.io.tmpdir\");\n \n     /**\n      * The <code>java.library.path</code> System Property.\n      * List of paths to search when loading libraries.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");\n \n     /**\n      * The <code>java.runtime.name</code> System Property.\n      * Java Runtime Environment name.\n-     * First in JDK version 1.3.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.3\n      */\n     public static final String JAVA_RUNTIME_NAME = getSystemProperty(\"java.runtime.name\");\n \n     /**\n      * The <code>java.runtime.version</code> System Property.\n      * Java Runtime Environment version.\n-     * First in JDK version 1.3.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.3\n      */\n     public static final String JAVA_RUNTIME_VERSION = getSystemProperty(\"java.runtime.version\");\n \n     /**\n      * The <code>java.specification.name</code> System Property.\n      * Java Runtime Environment specification name.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");\n \n     /**\n      * The <code>java.specification.vendor</code> System Property.\n      * Java Runtime Environment specification vendor.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");\n \n     /**\n      * The <code>java.specification.version</code> System Property.\n      * Java Runtime Environment specification version.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.3\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");\n \n     /**\n      * The <code>java.vendor</code> System Property.\n      * Java vendor-specific string.\n-     * First in JDK version 1.1.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");\n \n     /**\n      * The <code>java.vendor.url</code> System Property.\n      * Java vendor URL.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n-     */\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+      * \n+     * @since Java 1.1\n+    */\n     public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");\n \n     /**\n      * The <code>java.version</code> System Property.\n      * Java version number.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String JAVA_VERSION = getSystemProperty(\"java.version\");\n \n     /**\n      * The <code>java.vm.info</code> System Property.\n      * Java Virtual Machine implementation info.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_INFO = getSystemProperty(\"java.vm.info\");\n \n     /**\n      * The <code>java.vm.name</code> System Property.\n      * Java Virtual Machine implementation name.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");\n \n     /**\n      * The <code>java.vm.specification.name</code> System Property.\n      * Java Virtual Machine specification name.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");\n \n     /**\n      * The <code>java.vm.specification.vendor</code> System Property.\n      * Java Virtual Machine specification vendor.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");\n \n     /**\n      * The <code>java.vm.specification.version</code> System Property.\n      * Java Virtual Machine specification version.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");\n \n     /**\n      * The <code>java.vm.vendor</code> System Property.\n      * Java Virtual Machine implementation vendor.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+      * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");\n \n     /**\n      * The <code>java.vm.version</code> System Property.\n      * Java Virtual Machine implementation version.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");\n \n     /**\n      * The <code>line.separator</code> System Property.\n      * Line separator (\"\\n\" on UNIX).\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");\n \n     /**\n      * The <code>os.arch</code> System Property.\n      * Operating system architecture.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String OS_ARCH = getSystemProperty(\"os.arch\");\n \n     /**\n      * The <code>os.name</code> System Property.\n      * Operating system name.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String OS_NAME = getSystemProperty(\"os.name\");\n \n     /**\n      * The <code>os.version</code> System Property.\n      * Operating system version.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String OS_VERSION = getSystemProperty(\"os.version\");\n \n     /**\n      * The <code>path.separator</code> System Property.\n      * Path separator (\":\" on UNIX).\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");\n \n     /**\n      * The <code>user.dir</code> System Property.\n      * User's current working directory.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String USER_DIR = getSystemProperty(\"user.dir\");\n \n     /**\n      * The <code>user.home</code> System Property.\n      * User's home directory.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String USER_HOME = getSystemProperty(\"user.home\");\n \n     /**\n      * The <code>user.language</code> System Property.\n      * User's language code, such as 'en'.\n-     * First in JDK version 1.2.\n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String USER_LANGUAGE = getSystemProperty(\"user.language\");\n \n     /**\n      * The <code>user.country</code> or <code>user.region</code> System Property.\n-     * User's country code, such as 'GB'.\n+     * User's country code, such as <code>GB</code>.\n      * First in JDK version 1.2 as <code>user.region</code>.\n      * Renamed to <code>user.country</code> in 1.4\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.2\n      */\n     public static final String USER_COUNTRY = \n         (getSystemProperty(\"user.country\") == null ?\n     /**\n      * The <code>user.name</code> System Property.\n      * User's account name.\n-     * First in JDK version 1.1. \n-     * <p>\n-     * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * <p>\n+     * Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or property not specified.\n+     * \n+     * @since Java 1.1\n      */\n     public static final String USER_NAME = getSystemProperty(\"user.name\");\n \n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * \n-     * @deprecated Use JAVA_VERSION_FLOAT instead.\n+     * @deprecated Use {@link #JAVA_VERSION_FLOAT} instead.\n      *             Will be removed in Commons Lang 3.0.\n      * @return the version, for example 1.31f for JDK 1.3.1\n      */", "timestamp": 1054257146, "metainfo": ""}