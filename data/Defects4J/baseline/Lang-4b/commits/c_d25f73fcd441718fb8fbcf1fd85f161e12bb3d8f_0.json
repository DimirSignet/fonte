{"sha": "d25f73fcd441718fb8fbcf1fd85f161e12bb3d8f", "log": "[LANG-709] Increase test coverage of MethodUtils invoke methods and a few test corrections  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java\n                 (Object[]) ArrayUtils.EMPTY_CLASS_ARRAY));\n         assertEquals(\"foo()\", MethodUtils.invokeMethod(testBean, \"foo\",\n                 (Object[]) null));\n+        assertEquals(\"foo()\", MethodUtils.invokeMethod(testBean, \"foo\", \n+                (Object[]) null, (Class<?>[]) null));\n         assertEquals(\"foo(String)\", MethodUtils.invokeMethod(testBean, \"foo\",\n                 \"\"));\n         assertEquals(\"foo(Object)\", MethodUtils.invokeMethod(testBean, \"foo\",\n     }\n \n     public void testInvokeExactMethod() throws Exception {\n-        assertEquals(\"foo()\", MethodUtils.invokeMethod(testBean, \"foo\",\n+        assertEquals(\"foo()\", MethodUtils.invokeExactMethod(testBean, \"foo\",\n                 (Object[]) ArrayUtils.EMPTY_CLASS_ARRAY));\n-        assertEquals(\"foo()\", MethodUtils.invokeMethod(testBean, \"foo\",\n+        assertEquals(\"foo()\", MethodUtils.invokeExactMethod(testBean, \"foo\",\n                 (Object[]) null));\n+        assertEquals(\"foo()\", MethodUtils.invokeExactMethod(testBean, \"foo\", \n+                (Object[]) null, (Class<?>[]) null));\n         assertEquals(\"foo(String)\", MethodUtils.invokeExactMethod(testBean,\n                 \"foo\", \"\"));\n         assertEquals(\"foo(Object)\", MethodUtils.invokeExactMethod(testBean,\n                 \"bar\", (Object[]) ArrayUtils.EMPTY_CLASS_ARRAY));\n         assertEquals(\"bar()\", MethodUtils.invokeStaticMethod(TestBean.class,\n                 \"bar\", (Object[]) null));\n+        assertEquals(\"bar()\", MethodUtils.invokeStaticMethod(TestBean.class,\n+                \"bar\", (Object[]) null, (Class<?>[]) null));\n         assertEquals(\"bar(String)\", MethodUtils.invokeStaticMethod(\n                 TestBean.class, \"bar\", \"\"));\n         assertEquals(\"bar(Object)\", MethodUtils.invokeStaticMethod(\n                 TestBean.class, \"bar\", NumberUtils.LONG_ONE));\n         assertEquals(\"bar(double)\", MethodUtils.invokeStaticMethod(\n                 TestBean.class, \"bar\", NumberUtils.DOUBLE_ONE));\n+        \n+        try {\n+            MethodUtils.invokeStaticMethod(TestBean.class, \"does_not_exist\");\n+            fail(\"should throw NoSuchMethodException\");\n+        } catch (NoSuchMethodException e) {\n+        }\n     }\n \n     public void testInvokeExactStaticMethod() throws Exception {\n-        assertEquals(\"bar()\", MethodUtils.invokeStaticMethod(TestBean.class,\n+        assertEquals(\"bar()\", MethodUtils.invokeExactStaticMethod(TestBean.class,\n                 \"bar\", (Object[]) ArrayUtils.EMPTY_CLASS_ARRAY));\n-        assertEquals(\"bar()\", MethodUtils.invokeStaticMethod(TestBean.class,\n+        assertEquals(\"bar()\", MethodUtils.invokeExactStaticMethod(TestBean.class,\n                 \"bar\", (Object[]) null));\n+        assertEquals(\"bar()\", MethodUtils.invokeExactStaticMethod(TestBean.class,\n+                \"bar\", (Object[]) null, (Class<?>[]) null));\n         assertEquals(\"bar(String)\", MethodUtils.invokeExactStaticMethod(\n                 TestBean.class, \"bar\", \"\"));\n         assertEquals(\"bar(Object)\", MethodUtils.invokeExactStaticMethod(", "timestamp": 1309150715, "metainfo": ""}