{"sha": "5ec314f56640e7f2872d1d87ac2ffee8bf0823e1", "log": "Add comments for [LANG-798] Use generics in SerializationUtils.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/SerializationUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/SerializationUtils.java\n      * @throws SerializationException (runtime) if the serialization fails\n      */\n     @SuppressWarnings(\"unchecked\")\n+    // Don't warn about \"(T) deserialize\" because we want the avoid type casting call sites.\n+    // If the call site incorrectly types the return value, a ClassCastException is thrown.\n+    // Without Generics in this declaration, the call site must type cast and can cause the same ClassCastException.\n     public static <T> T deserialize(InputStream inputStream) {\n         if (inputStream == null) {\n             throw new IllegalArgumentException(\"The InputStream must not be null\");\n      * @throws SerializationException (runtime) if the serialization fails\n      */\n     @SuppressWarnings(\"unchecked\")\n+    // Don't warn about \"(T) deserialize\" because we want the avoid type casting call sites.\n+    // If the call site incorrectly types the return value, a ClassCastException is thrown.\n+    // Without Generics in this declaration, the call site must type cast and can cause the same ClassCastException.\n     public static <T> T deserialize(byte[] objectData) {\n         if (objectData == null) {\n             throw new IllegalArgumentException(\"The byte[] must not be null\");", "timestamp": 1333742635, "metainfo": ""}