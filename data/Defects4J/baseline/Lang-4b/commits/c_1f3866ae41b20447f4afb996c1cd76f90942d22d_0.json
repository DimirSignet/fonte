{"sha": "1f3866ae41b20447f4afb996c1cd76f90942d22d", "log": "Add since tags  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n      *\n      * @param obj  the object to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(Object obj) {\n         return append(obj).appendNewLine();\n      *\n      * @param str  the string to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(String str) {\n         return append(str).appendNewLine();\n      * @param startIndex  the start index, inclusive, must be valid\n      * @param length  the length to append, must be valid\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(String str, int startIndex, int length) {\n         return append(str, startIndex, length).appendNewLine();\n      *\n      * @param str  the string buffer to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(StringBuffer str) {\n         return append(str).appendNewLine();\n      * @param startIndex  the start index, inclusive, must be valid\n      * @param length  the length to append, must be valid\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(StringBuffer str, int startIndex, int length) {\n         return append(str, startIndex, length).appendNewLine();\n      *\n      * @param str  the string builder to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(StrBuilder str) {\n         return append(str).appendNewLine();\n      * @param startIndex  the start index, inclusive, must be valid\n      * @param length  the length to append, must be valid\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(StrBuilder str, int startIndex, int length) {\n         return append(str, startIndex, length).appendNewLine();\n      *\n      * @param chars  the char array to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(char[] chars) {\n         return append(chars).appendNewLine();\n      * @param startIndex  the start index, inclusive, must be valid\n      * @param length  the length to append, must be valid\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(char[] chars, int startIndex, int length) {\n         return append(chars, startIndex, length).appendNewLine();\n      *\n      * @param value  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(boolean value) {\n         return append(value).appendNewLine();\n      *\n      * @param ch  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(char ch) {\n         return append(ch).appendNewLine();\n      *\n      * @param value  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(int value) {\n         return append(value).appendNewLine();\n      *\n      * @param value  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(long value) {\n         return append(value).appendNewLine();\n      *\n      * @param value  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(float value) {\n         return append(value).appendNewLine();\n      *\n      * @param value  the value to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendln(double value) {\n         return append(value).appendNewLine();\n      *\n      * @param array  the array to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendAll(Object[] array) {\n         if (array != null && array.length > 0) {\n      *\n      * @param coll  the collection to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendAll(Collection coll) {\n         if (coll != null && coll.size() > 0) {\n      *\n      * @param it  the iterator to append\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendAll(Iterator it) {\n         if (it != null) {\n      * \n      * @param separator  the separator to use, null means no separator\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendSeparator(String separator) {\n         if (separator != null && size() > 0) {\n      * \n      * @param separator  the separator to use\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendSeparator(char separator) {\n         if (size() > 0) {\n      * @param separator  the separator to use, null means no separator\n      * @param loopIndex  the loop index\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendSeparator(String separator, int loopIndex) {\n         if (separator != null && loopIndex > 0) {\n      * @param separator  the separator to use\n      * @param loopIndex  the loop index\n      * @return this, to enable chaining\n+     * @since 2.3\n      */\n     public StrBuilder appendSeparator(char separator, int loopIndex) {\n         if (loopIndex > 0) {", "timestamp": 1167871325, "metainfo": ""}