{"sha": "a92450e88df85d6b7a0fa53517da46286c24f53f", "log": "Fix zone id parsing for ids like America/Dawson_Creek [3427389]", "commit": "\n--- a/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java\n \n         public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n             String str = text.substring(position);\n+            String best = null;\n             for (String id : ALL_IDS) {\n                 if (str.startsWith(id)) {\n-                    bucket.setZone(DateTimeZone.forID(id));\n-                    return position + id.length();\n-                }\n+                \tif (best == null || id.length() > best.length()) {\n+                \t\tbest = id;\n+                \t}\n+                }\n+            }\n+            if (best != null) {\n+                bucket.setZone(DateTimeZone.forID(best));\n+                return position + best.length();\n             }\n             return ~position;\n         }\n--- a/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java\n+++ b/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java\n         assertEquals(dt, f.withOffsetParsed().parseDateTime(\"2007-03-04 12:30 Europe/Paris\"));\n     }\n \n+    public void test_printParseZoneDawsonCreek() {  // clashes with shorter Dawson\n+        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()\n+            .appendPattern(\"yyyy-MM-dd HH:mm \").appendTimeZoneId();\n+        DateTimeFormatter f = bld.toFormatter();\n+        \n+        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID(\"America/Dawson_Creek\"));\n+        assertEquals(\"2007-03-04 12:30 America/Dawson_Creek\", f.print(dt));\n+        assertEquals(dt, f.parseDateTime(\"2007-03-04 12:30 America/Dawson_Creek\"));\n+    }\n+\n     public void test_printParseOffset() {\n         DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()\n             .appendPattern(\"yyyy-MM-dd HH:mm \").appendTimeZoneOffset(\"Z\", true, 2, 2);", "timestamp": 1319371674, "metainfo": ""}