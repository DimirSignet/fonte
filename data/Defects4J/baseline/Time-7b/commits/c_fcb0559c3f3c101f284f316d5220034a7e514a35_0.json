{"sha": "fcb0559c3f3c101f284f316d5220034a7e514a35", "log": "Remove long/now methods from interface to keep interface focussed   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/ReadableInterval.java\n+++ b/JodaTime/src/java/org/joda/time/ReadableInterval.java\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Does this time interval contain the specified millisecond instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @param millisInstant  the instant to compare to,\n-     *  millisecond instant from 1970-01-01T00:00:00Z\n-     * @return true if this time interval contains the millisecond\n-     */\n-    boolean contains(long millisInstant);\n-    \n-    /**\n-     * Does this time interval contain the current instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @return true if this time interval contains the current instant\n-     */\n-    boolean containsNow();\n-    \n-    /**\n      * Does this time interval contain the specified instant.\n      * <p>\n      * Intervals are inclusive of the start instant and exclusive of the end.\n     \n     //-----------------------------------------------------------------------\n     /**\n-     * Is this time interval before the specified millisecond instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @param millisInstant  the instant to compare to,\n-     *  millisecond instant from 1970-01-01T00:00:00Z\n-     * @return true if this time interval is before the instant\n-     */\n-    boolean isBefore(long millisInstant);\n-    \n-    /**\n-     * Is this time interval before the current instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @return true if this time interval is before the current instant\n-     */\n-    boolean isBeforeNow();\n+     * Is this time interval after the specified instant.\n+     * <p>\n+     * Intervals are inclusive of the start instant and exclusive of the end.\n+     * \n+     * @param instant  the instant to compare to, null means now\n+     * @return true if this time interval is after the instant\n+     */\n+    boolean isAfter(ReadableInstant instant);\n     \n     /**\n      * Is this time interval before the specified instant.\n      * @return true if this time interval is before the instant\n      */\n     boolean isBefore(ReadableInstant instant);\n-    \n-    /**\n-     * Is this time interval after the specified millisecond instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @param millisInstant  the instant to compare to,\n-     *  millisecond instant from 1970-01-01T00:00:00Z\n-     * @return true if this time interval is after the instant\n-     */\n-    boolean isAfter(long millisInstant);\n-    \n-    /**\n-     * Is this time interval after the current instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @return true if this time interval is after the current instant\n-     */\n-    boolean isAfterNow();\n-    \n-    /**\n-     * Is this time interval after the specified instant.\n-     * <p>\n-     * Intervals are inclusive of the start instant and exclusive of the end.\n-     * \n-     * @param instant  the instant to compare to, null means now\n-     * @return true if this time interval is after the instant\n-     */\n-    boolean isAfter(ReadableInstant instant);\n     \n     //-----------------------------------------------------------------------\n     /**", "timestamp": 1093128934, "metainfo": ""}