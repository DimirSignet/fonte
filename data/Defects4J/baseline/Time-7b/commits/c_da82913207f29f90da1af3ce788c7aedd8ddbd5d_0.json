{"sha": "da82913207f29f90da1af3ce788c7aedd8ddbd5d", "log": "Document and test constructor behavior  https://sourceforge.net/p/joda-time/bugs/154/", "commit": "\n--- a/src/main/java/org/joda/time/LocalDate.java\n+++ b/src/main/java/org/joda/time/LocalDate.java\n /*\n- *  Copyright 2001-2011 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n      * <p>\n      * If the chronology is null, ISO in the default time zone is used.\n      * Once the constructor is completed, the zone is no longer used.\n+     * If the instant contains a chronology, it will be ignored.\n+     * For example, passing a {@code LocalDate} and a different chronology\n+     * will return a date with the year/month/day from the date applied\n+     * unaltered to the specified chronology.\n      * <p>\n      * The recognised object types are defined in\n      * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n--- a/src/main/java/org/joda/time/LocalDateTime.java\n+++ b/src/main/java/org/joda/time/LocalDateTime.java\n /*\n- *  Copyright 2001-2011 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n      * <p>\n      * If the chronology is null, ISO in the default time zone is used.\n      * Once the constructor is completed, the zone is no longer used.\n+     * If the instant contains a chronology, it will be ignored.\n+     * For example, passing a {@code LocalDate} and a different chronology\n+     * will return a date with the year/month/day from the date applied\n+     * unaltered to the specified chronology.\n      * <p>\n      * The recognised object types are defined in\n      * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n--- a/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java\n+++ b/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java\n /*\n- *  Copyright 2001-2006 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n         assertEquals(0, test.getMillisOfSecond());\n     }\n \n+    public void testConstructor_Object_Chronology_crossChronology() throws Throwable {\n+        LocalDateTime input = new LocalDateTime(1970, 4, 6, 12, 30, 0, 0, ISO_UTC);\n+        LocalDateTime test = new LocalDateTime(input, BUDDHIST_UTC);\n+        assertEquals(BUDDHIST_UTC, test.getChronology());\n+        assertEquals(1970, test.getYear());\n+        assertEquals(4, test.getMonthOfYear());\n+        assertEquals(6, test.getDayOfMonth());\n+        assertEquals(12, test.getHourOfDay());\n+        assertEquals(30, test.getMinuteOfHour());\n+        assertEquals(0, test.getSecondOfMinute());\n+        assertEquals(0, test.getMillisOfSecond());\n+    }\n+\n     public void testConstructor_Object_ChronologyMoscow() throws Throwable {\n         LocalDateTime test = new LocalDateTime(\"1970-04-06T12:24:00\", GREGORIAN_MOSCOW);\n         assertEquals(GREGORIAN_UTC, test.getChronology());\n--- a/src/test/java/org/joda/time/TestLocalDate_Constructors.java\n+++ b/src/test/java/org/joda/time/TestLocalDate_Constructors.java\n /*\n- *  Copyright 2001-2006 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n         assertEquals(6, test.getDayOfMonth());\n     }\n \n+    public void testConstructor_Object_Chronology_crossChronology() throws Throwable {\n+        LocalDate input = new LocalDate(1970, 4, 6, ISO_UTC);\n+        LocalDate test = new LocalDate(input, BUDDHIST_UTC);\n+        assertEquals(BUDDHIST_UTC, test.getChronology());\n+        assertEquals(1970, test.getYear());\n+        assertEquals(4, test.getMonthOfYear());\n+        assertEquals(6, test.getDayOfMonth());\n+    }\n+\n     public void testConstructor_nullObject_Chronology() throws Throwable {\n         LocalDate test = new LocalDate((Object) null, GREGORIAN_PARIS);\n         assertEquals(GREGORIAN_UTC, test.getChronology());", "timestamp": 1357563879, "metainfo": ""}