{"sha": "84f9e8210f6a63e7ec63684432e0f2946f206b18", "log": "Prevent String constructor from accepting times only  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/YearMonthDay.java\n+++ b/JodaTime/src/java/org/joda/time/YearMonthDay.java\n      * The recognised object types are defined in\n      * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n      * include ReadableInstant, String, Calendar and Date.\n+     * The String formats are described by {@link ISODateTimeFormat#dateOptionalTimeParser()}.\n      * <p>\n      * The chronology used will be derived from the object, defaulting to ISO.\n+     * <p>\n+     * NOTE: Prior to v1.3 the string format was described by\n+     * {@link ISODateTimeFormat#dateTimeParser()}. Time ony strings are now rejected.\n      *\n      * @param instant  the datetime object, null means now\n      * @throws IllegalArgumentException if the instant is invalid\n      */\n     public YearMonthDay(Object instant) {\n-        super(instant, null);\n+        super(instant, null, ISODateTimeFormat.dateOptionalTimeParser());\n     }\n \n     /**\n      * The recognised object types are defined in\n      * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n      * include ReadableInstant, String, Calendar and Date.\n+     * The String formats are described by {@link ISODateTimeFormat#dateOptionalTimeParser()}.\n      * <p>\n      * The constructor uses the time zone of the chronology specified.\n      * Once the constructor is complete, all further calculations are performed\n      * without reference to a timezone (by switching to UTC).\n      * The specified chronology overrides that of the object.\n+     * <p>\n+     * NOTE: Prior to v1.3 the string format was described by\n+     * {@link ISODateTimeFormat#dateTimeParser()}. Time only strings are now rejected.\n      *\n      * @param instant  the datetime object, null means now\n      * @param chronology  the chronology, null means ISO default\n      * @throws IllegalArgumentException if the instant is invalid\n      */\n     public YearMonthDay(Object instant, Chronology chronology) {\n-        super(instant, DateTimeUtils.getChronology(chronology));\n+        super(instant, DateTimeUtils.getChronology(chronology), ISODateTimeFormat.dateOptionalTimeParser());\n     }\n \n     /**", "timestamp": 1150548256, "metainfo": ""}