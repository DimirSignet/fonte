{"sha": "c954b53aa1466fc0149326a41103101aa69fb9a3", "log": "Fix bugs and javadoc   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/YearMonthDay.java\n+++ b/JodaTime/src/java/org/joda/time/YearMonthDay.java\n      * @throws IllegalArgumentException if the value is null or invalid\n      */\n     public YearMonthDay withField(DateTimeFieldType fieldType, int value) {\n+        int index = indexOfSupported(fieldType);\n         if (value == 0) {\n             return this;\n         }\n-        int index = indexOfSupported(fieldType);\n         int[] newValues = getValues();\n         newValues = getField(index).set(this, index, newValues, value);\n         return new YearMonthDay(this, newValues);\n      * <p>\n      * These three lines are equivalent:\n      * <pre>\n-     * YearMonthDay added = ymd.withField(DateTimeFieldType.dayOfMonth(), 6);\n+     * YearMonthDay added = ymd.withFieldAdded(DateTimeFieldType.dayOfMonth(), 6);\n      * YearMonthDay added = ymd.dayOfMonth().addToCopy(6);\n      * YearMonthDay added = ymd.property(DateTimeFieldType.dayOfMonth()).addToCopy(6);\n      * </pre>\n      * @throws ArithmeticException if the new datetime exceeds the capacity\n      */\n     public YearMonthDay withFieldAdded(DurationFieldType fieldType, int amount) {\n+        int index = indexOfSupported(fieldType);\n         if (amount == 0) {\n             return this;\n         }\n-        int index = indexOfSupported(fieldType);\n         int[] newValues = getValues();\n         newValues = getField(index).add(this, index, newValues, amount);\n         return new YearMonthDay(this, newValues);", "timestamp": 1106777481, "metainfo": ""}