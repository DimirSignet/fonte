{"sha": "7a57b8aa22b4392c103ee491e95af7d74b44378f", "log": "Currency holiday information, originally for financial trading organisations donated by Scott R. Duchin   ", "commit": "\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/AbstractChoice.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+/**\n+ * Abstract choice implementation.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public abstract class AbstractChoice {\n+\n+    private final ChoiceList _choices;\n+    private final String _label;\n+\n+    public AbstractChoice(ChoiceList list, String label) {\n+        super();\n+        _choices = list;\n+        _label = label;\n+    }\n+\n+    public Class choiceClass() {\n+        return _choices.choiceClass();\n+    }\n+\n+    public ChoiceList choiceList() {\n+        return _choices;\n+    }\n+\n+    public String getLabel() {\n+        return _label;\n+    }\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Choice.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+/**\n+ * Choice interface.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public interface Choice {\n+\n+    /**\n+     * \n+     */\n+    String getLabel();\n+\n+    /**\n+     * \n+     */\n+    ChoiceList choiceList();\n+\n+    /**\n+     * \n+     */\n+    Class choiceClass();\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/ChoiceList.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Choice list.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public class ChoiceList extends ArrayList<Choice> {\n+\n+    private final Class cls;\n+\n+    public static ChoiceList choiceList(Class cls) {\n+        return new ChoiceList(cls);\n+    }\n+\n+    public ChoiceList(Class cls) {\n+        super();\n+        this.cls = cls;\n+    }\n+\n+    public RawHolidayChoice choice(String holi) {\n+        return null;\n+    }\n+\n+    public Class choiceClass() {\n+        return cls;\n+    }\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/CurrencyHoliday.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Private class to hold weekend rules with holiday.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class CcyHoli implements RawHolidayChoice {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    // private fields\n+    private RawHolidayChoice _rawHoli;   // raw holiday\n+    private int                         _sat;               // saturday rule (days adjustment)\n+    private int                         _sun;               // sunday rule (days adjustment)\n+\n+    /**\n+     * Constructor.\n+     * @param raw Raw holiday.\n+     * @param sat Saturday adjustment.\n+     * @param sun Sunday adjustment.\n+     */\n+    CcyHoli(RawHolidayChoice raw, int sat, int sun) {\n+        _rawHoli = raw;\n+        _sat = sat;\n+        _sun = sun;\n+    }\n+\n+    /**\n+     * Returns the interface associated with this choice.\n+     * @return The interface associated with this choice.\n+     */\n+    public Class choiceClass() {\n+        return _rawHoli.choiceClass();\n+    }\n+\n+    /**\n+     * Returns the list containing this choice.\n+     * @return The list containing this choice.\n+     */\n+    public ChoiceList choiceList() {\n+        return _rawHoli.choiceList();\n+    }\n+\n+    /**\n+     * Returns the name associated with this choice.\n+     * @return The name associated with this choice.\n+     */\n+    public String getLabel() {\n+        return _rawHoli.getLabel();\n+    }\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        Date holi = _rawHoli.date(year);\n+        if (holi != null) {\n+            Weekday wkdy = holi.weekday();\n+            if (_sun != 0 && wkdy.equals(Weekday.SUN)) {\n+                holi = holi.addDays(_sun);\n+            } else if (_sat != 0 && wkdy.equals(Weekday.SAT)) {\n+                holi = holi.addDays(_sat);\n+            }\n+        }\n+        return holi;\n+    }\n+\n+    /**\n+     * Returns a list of dates of the particular holiday for the specified years.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     * @return List of dates of holidays in specified years, inclusive.\n+     */\n+    public List<Date> dates(/*year*/int start, /*year*/int end) {\n+        List<Date> list = new ArrayList<Date>(end - start + 1);\n+        for (/*year*/int year = start; year <= end; year++) {\n+            list.add(date(year));\n+        }\n+        return list;\n+    }\n+}\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+\n+/**\n+ * The list of holidays per currency implementations.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public final class CurrencyHoliday {\n+\n+    // static variables\n+    private static final Logger         _logger = Logger.getLogger(\"com.swvi.financial.instrument.CurrencyHoliday\");\n+\n+    /**\n+     * A map containing all currencies pointing to list of their corresponding holidays.\n+     */\n+    private static Map<String, Map<String, RawHolidayChoice>> _ccys =\n+      Collections.synchronizedSortedMap(new TreeMap<String, Map<String, RawHolidayChoice>>());\n+\n+    /**\n+     * Choice list of the raw holidays.\n+     */\n+    private static ChoiceList _raws =\n+      ChoiceList.choiceList(RawHolidayChoiceImpl.klass());\n+\n+    /**\n+     * Private constructor.\n+     */\n+    private CurrencyHoliday() {\n+    }\n+\n+    /*\n+     * Variable representing that a Saturday holiday is observed on Saturday.\n+     */\n+    private static final int ON_SAT = 0;\n+    /*\n+     * Variable representing that a Sunday holiday is observed on Sunday.\n+     */\n+    private static final int ON_SUN = 0;\n+    /*\n+     * Variable representing that a Saturday holiday is observed on Friday.\n+     */\n+    private static final int SAT_FRI = -1;\n+    /*\n+     * Variable representing that a Saturday holiday is observed on Monday.\n+     */\n+    private static final int SAT_MON = 2;\n+    /*\n+     * Variable representing that a Sunday holiday is observed on Monday.\n+     */\n+    private static final int SUN_MON = 1;\n+    /*\n+     * Variable representing that a Sunday holiday is observed on Tuesday.\n+     */\n+    private static final int SUN_TUE = 2;\n+\n+    /**\n+     * Static initializer.\n+     */\n+    static {\n+        // argentina peso\n+        addHoliday(\"ARS\", \"Argentina Flag Day\");\n+        addHoliday(\"ARS\", \"Argentina Independence\",         ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"Argentina May Revolution\",       ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"Easter Monday\");\n+        addHoliday(\"ARS\", \"General San Martin Memorial\");\n+        addHoliday(\"ARS\", \"Good Friday\");\n+        addHoliday(\"ARS\", \"Holy Thursday\");\n+        addHoliday(\"ARS\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ARS\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+//      ARS 06/14/1999 Malvinas Day\n+//      ARS 06/05/2000 Malvinas Day\n+//      ARS 06/04/2001 Malvinas Day\n+\n+        // austria schilling\n+        addHoliday(\"ATS\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Ascension\");\n+        addHoliday(\"ATS\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Austria National Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Corpus Christi\");\n+        addHoliday(\"ATS\", \"Easter Monday\");\n+        addHoliday(\"ATS\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+//      addHoliday(\"ATS\", \"Good Friday\");                                     // TODO: check if observed\n+        addHoliday(\"ATS\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ATS\", \"Pentecost\");\n+\n+        // australia dollar\n+        addHoliday(\"AUD\", \"Anzac Day\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"AUD\", \"Australia Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"AUD\", \"Australia Labour Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"AUD\", \"Australia Queen Day\");\n+        addHoliday(\"AUD\", \"Autumn Bank Holiday\");\n+        addHoliday(\"AUD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"AUD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"AUD\", \"Easter Monday\");\n+        addHoliday(\"AUD\", \"Good Friday\");\n+//      addHoliday(\"AUD\", \"May Monday\");                                      // TODO: check if observed\n+        addHoliday(\"AUD\", \"New Year Day\",                   SAT_MON, SUN_MON);\n+\n+        // barbados dollar\n+        addHoliday(\"BBD\", \"Barbados Heroes Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Barbados Independence\",          ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"December Bank Holiday\",          ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Errol Barrow Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Emancipation Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"Good Friday\");\n+        addHoliday(\"BBD\", \"Kadooment Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BBD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // belgium franc\n+        addHoliday(\"BEF\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Armistice Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Ascension\");\n+        addHoliday(\"BEF\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Belgium National Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Easter Monday\");\n+        addHoliday(\"BEF\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"BEF\", \"Pentecost\");\n+\n+        // bermuda dollar\n+        addHoliday(\"BMD\", \"Bermuda Cup Match\");\n+        addHoliday(\"BMD\", \"Bermuda Labour Day\");\n+        addHoliday(\"BMD\", \"Bermuda Queen Day\");\n+        addHoliday(\"BMD\", \"Bermuda Somers Day\");\n+        addHoliday(\"BMD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"BMD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BMD\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"BMD\", \"Good Friday\");\n+        addHoliday(\"BMD\", \"Remembrance Day\",                ON_SAT, ON_SUN);\n+\n+        // bolivia boliviano\n+        addHoliday(\"BOB\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BOB\", \"Bolivia Independence\",           ON_SAT, ON_SUN);\n+        addHoliday(\"BOB\", \"Carnival Thursday\");\n+        addHoliday(\"BOB\", \"Carnival Wednesday\");\n+        addHoliday(\"BOB\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BOB\", \"Corpus Christi\");\n+        addHoliday(\"BOB\", \"Good Friday\");\n+        addHoliday(\"BOB\", \"La Paz\",                         ON_SAT, ON_SUN);\n+        addHoliday(\"BOB\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // brazil real\n+        addHoliday(\"BRL\", \"All Souls Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Brazil Independence\",            ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Carnival Monday\");\n+        addHoliday(\"BRL\", \"Carnival Tuesday\");\n+        addHoliday(\"BRL\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Corpus Christi\");\n+        addHoliday(\"BRL\", \"Good Friday\");\n+        addHoliday(\"BRL\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Nossa Senhora\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Brazil Republic Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"BRL\", \"Tiradentes\",                     ON_SAT, ON_SUN);\n+\n+        // bahamas dollar\n+        addHoliday(\"BSD\", \"Bahamas Independence\",           ON_SAT, ON_SUN);\n+        addHoliday(\"BSD\", \"Bahamas Labour Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"BSD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"BSD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BSD\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"BSD\", \"Emancipation Monday\");\n+        addHoliday(\"BSD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // belize dollar\n+        addHoliday(\"BZD\", \"Belize Emancipation\",            ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"Belize Independence\",            ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"Commonwealth Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"December Bank Holiday\",          ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"Garifuna Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"BZD\", \"St. Georges Caye Day\",           ON_SAT, ON_SUN);\n+\n+        // canada dollar\n+        addHoliday(\"CAD\", \"Boxing Day\",                     SAT_MON, SUN_MON);\n+        addHoliday(\"CAD\", \"Canada Independence\",            SAT_MON, SUN_MON);\n+        addHoliday(\"CAD\", \"Canada Labour Day\");\n+        addHoliday(\"CAD\", \"Canada Thanksgiving Day\");\n+        addHoliday(\"CAD\", \"Christmas\",                      SAT_FRI, SUN_TUE); // skip over boxing day on monday\n+        addHoliday(\"CAD\", \"Easter Monday\");\n+        addHoliday(\"CAD\", \"Good Friday\");\n+        addHoliday(\"CAD\", \"New Year Day\",                   ON_SAT, ON_SUN); // TODO: check this\n+        addHoliday(\"CAD\", \"Remembrance Day\",                ON_SAT, ON_SUN);\n+        addHoliday(\"CAD\", \"Queen Victoria Day\");\n+\n+        // switzerland franc\n+        addHoliday(\"CHF\", \"Ascension\");\n+        addHoliday(\"CHF\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"Easter Monday\");\n+        addHoliday(\"CHF\", \"Good Friday\");\n+        addHoliday(\"CHF\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"New Year Day II\",                ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CHF\", \"Pentecost\");\n+        addHoliday(\"CHF\", \"Swiss National Day\",             ON_SAT, ON_SUN);\n+\n+        // chile peso\n+        addHoliday(\"CLP\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Chile Army Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Chile Commemoration Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Chile Marine Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Chile National Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Chile Unity Day\",                ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"Corpus Christi\");\n+        addHoliday(\"CLP\", \"Good Friday\");\n+        addHoliday(\"CLP\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CLP\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+\n+        // columbia peso\n+        addHoliday(\"COP\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Ascension\");\n+        addHoliday(\"COP\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Battle of Boyaca Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Columbia Independence\",          ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Corpus Christi\");\n+        addHoliday(\"COP\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Friendship Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"Good Friday\");\n+        addHoliday(\"COP\", \"Holy Thursday\");\n+        addHoliday(\"COP\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"New Year Day\",                   ON_SAT, ON_SUN); // TODO: check this\n+        addHoliday(\"COP\", \"St. Josephs Day\",                ON_SAT, ON_SUN);\n+        addHoliday(\"COP\", \"St. Peter & St. Paul Day\",       ON_SAT, ON_SUN);\n+\n+        // costa rica colon\n+        addHoliday(\"CRC\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Christmas VI\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Christmas V\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Christmas VI\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Costa Rica Independence\",        ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"Good Friday\");\n+        addHoliday(\"CRC\", \"Holy Thursday\");\n+        addHoliday(\"CRC\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CRC\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+\n+        // czech koruna\n+        addHoliday(\"CZK\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"Czech Liberation\",               ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"Czech National Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"Easter Monday\");\n+        addHoliday(\"CZK\", \"Jan Hus\",                        ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"CZK\", \"St. Cyril & Methodius\",          ON_SAT, ON_SUN);\n+\n+        // germany mark\n+        addHoliday(\"DEM\", \"Ascension\");\n+        addHoliday(\"DEM\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"DEM\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"DEM\", \"Easter Monday\");\n+        addHoliday(\"DEM\", \"German Unity Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"DEM\", \"Good Friday\");\n+        addHoliday(\"DEM\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"DEM\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"DEM\", \"Pentecost\");\n+\n+        // denmark krone\n+        addHoliday(\"DKK\", \"Ascension\");\n+        addHoliday(\"DKK\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"DKK\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"DKK\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"DKK\", \"Denmark National Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"DKK\", \"Easter Monday\");\n+        addHoliday(\"DKK\", \"Good Friday\");\n+        addHoliday(\"DKK\", \"Holy Thursday\");\n+        addHoliday(\"DKK\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"DKK\", \"Pentecost\");\n+        addHoliday(\"DKK\", \"Prayer Day\");\n+\n+        // ecuador sucre\n+        addHoliday(\"ECS\", \"All Souls Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Cuencas Independence\",           ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Ecuador Bank Holiday\");\n+        addHoliday(\"ECS\", \"Ecuador Independence\",           ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Guayaquils Independence\",        ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Pichincha Battle\",               ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Quitos Foundation\",              ON_SAT, ON_SUN);\n+        addHoliday(\"ECS\", \"Simon Bolivar Day\",              ON_SAT, ON_SUN);\n+\n+        // egypt pound\n+        addHoliday(\"EGP\", \"Birth of the Prophet\",           ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Egypt Army Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Egypt Liberation\",               ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Egypt National Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Egypt Union Day\",                ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Egypt Victory Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Eid Al Fitr\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Eid El Adha\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Islamic New Year\",               ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Mid Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Sham El Nessim\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Sinai Day\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"EGP\", \"Suez Victory Day\",               ON_SAT, ON_SUN);\n+\n+        // spain peseta\n+        addHoliday(\"ESP\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Easter Monday\");\n+        addHoliday(\"ESP\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Holy Thursday\");\n+        addHoliday(\"ESP\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Spain Constitution Day\",         ON_SAT, ON_SUN);\n+        addHoliday(\"ESP\", \"Spain National Day\",             ON_SAT, ON_SUN);\n+\n+        // euro\n+        addHoliday(\"EUR\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"EUR\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // finland markka\n+        addHoliday(\"FIM\", \"Ascension\");\n+        addHoliday(\"FIM\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Easter Monday\");\n+        addHoliday(\"FIM\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Finland Independence\",           ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Good Friday\");\n+        addHoliday(\"FIM\", \"May Day\",                        ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"May Day Eve\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Midsummer\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Midsummer Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"FIM\", \"Pentecost\");\n+\n+        // france franc\n+        addHoliday(\"FRF\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Armistice Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Ascension\");\n+        addHoliday(\"FRF\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Bastille Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Easter Monday\");\n+        addHoliday(\"FRF\", \"Fete De La Victoire\",            ON_SAT, ON_SUN);\n+//      addHoliday(\"FRF\", \"Good Friday\");                                    // TODO: check if observed\n+        addHoliday(\"FRF\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"FRF\", \"Pentecost\");\n+\n+        // great britain pound\n+        addHoliday(\"GBP\", \"Boxing Day\",                     SAT_MON, SUN_MON);\n+        addHoliday(\"GBP\", \"Christmas\",                      SAT_FRI, SUN_TUE); // skip over boxing day on monday\n+        addHoliday(\"GBP\", \"Easter Monday\");\n+        addHoliday(\"GBP\", \"Good Friday\");\n+        addHoliday(\"GBP\", \"May Monday\");\n+        addHoliday(\"GBP\", \"New Year Day\",                   SAT_MON, SUN_MON);\n+        addHoliday(\"GBP\", \"New Year Eve\",                   SAT_FRI, SUN_TUE);\n+        addHoliday(\"GBP\", \"Spring Bank Holiday\");\n+        addHoliday(\"GBP\", \"Summer Bank Holiday\");\n+\n+        // greece drachma\n+        addHoliday(\"GRD\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Good Friday\");\n+        addHoliday(\"GRD\", \"Fasting Day\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Greece National Day I\",          ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Greece National Day II\",         ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"GRD\", \"Pentecost\");\n+//      GRD 04/11/1999 Orthodox Easter\n+//      GRD 04/12/1999 Orthodox Easter Monday\n+//      GRD 04/11/2000 Orthodox Easter\n+//      GRD 04/12/2000 Orthodox Easter Monday\n+//      GRD 04/15/2001 Orthodox Easter\n+//      GRD 04/16/2001 Orthodox Easter Monday\n+\n+        // hong kong dollar\n+        addHoliday(\"HKD\", \"Boxing Day\",                     ON_SAT, SUN_MON);\n+        addHoliday(\"KRW\", \"Buddha Birthday\",                ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Chinese National Day I\",         ON_SAT, SUN_TUE);\n+        addHoliday(\"HKD\", \"Chinese National Day II\",        ON_SAT, SUN_MON);\n+        addHoliday(\"HKD\", \"Ching Ming Festival\",            ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Easter Monday\");\n+        addHoliday(\"HKD\", \"Good Friday\");\n+        addHoliday(\"HKD\", \"Lunar New Year\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Lunar New Year II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Lunar New Year III\",             ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Mid Autumn Festival\",            ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"Mid Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"HKD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+//      HKD 06/18/1999 Tuen Ng Festival\n+//      HKD 08/16/1999 Sino-JapaneseWar Victory Day\n+//      HKD 10/18/1999 Chung Yeung Festival\n+//      HKD 06/06/2000 Tuen Ng Day\n+//      HKD 08/21/2000 Sino-Japanese War Victory Day\n+//      HKD 10/06/2000 Chung Yeung Day\n+\n+        // honduras limpira\n+        addHoliday(\"HNL\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"Honduras Army Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"Honduras Independence\",          ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"Morazan Day\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"HNL\", \"Panamerican Day\",                ON_SAT, ON_SUN);\n+\n+        // hungary forint\n+        addHoliday(\"HUF\", \"Ascension\");\n+        addHoliday(\"HUF\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"Easter Monday\");\n+        addHoliday(\"HUF\", \"Hungary Constitution Day\",       ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"Hungary National Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"Hungary Republic Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"HUF\", \"Pentecost\");\n+\n+        // indonesia rupiah\n+        addHoliday(\"IDR\", \"Ascension\");\n+        addHoliday(\"IDR\", \"Birth of the Prophet\",           ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"Good Friday\");\n+        addHoliday(\"IDR\", \"Indonesia Independence\",         ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"Islamic New Year\",               ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"Muttons Feast\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"IDR\", \"Wesak Day\",                      ON_SAT, ON_SUN);\n+\n+        // ireland punt\n+        addHoliday(\"IEP\", \"Autumn Bank Holiday\");\n+        addHoliday(\"IEP\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"IEP\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"IEP\", \"Easter Monday\");\n+        addHoliday(\"IEP\", \"Good Friday\");\n+        addHoliday(\"IEP\", \"Halloween Day\");\n+        addHoliday(\"IEP\", \"June Bank Holiday\");\n+        addHoliday(\"IEP\", \"May Monday\");\n+        addHoliday(\"IEP\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"IEP\", \"St. Patrick Day\",                ON_SAT, ON_SUN);\n+\n+        // india rupee\n+        addHoliday(\"INR\", \"Buddha Purnima\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Diwali\",                         ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Dussehra\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Eid Al Fitr\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Good Friday\");\n+        addHoliday(\"INR\", \"Guru Nanak\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"India Independence\",             ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"India Republic Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Mahatma Gandhis Birthday\",       ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Mahavir Jayanti\",                ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"Muharram\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"INR\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+//      INR 03/29/1999 Idul Zuha\n+//      INR 06/27/1999 Id-el-Milad\n+\n+        // iceland krona\n+        addHoliday(\"ISK\", \"Ascension\");\n+        addHoliday(\"ISK\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ISK\", \"Easter Monday\");\n+        addHoliday(\"ISK\", \"Good Friday\");\n+        addHoliday(\"ISK\", \"Holy Thursday\");\n+        addHoliday(\"ISK\", \"Iceland Commerce Day\");\n+        addHoliday(\"ISK\", \"Iceland National Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"ISK\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ISK\", \"Pentecost\");\n+\n+        // italy lira\n+        addHoliday(\"ITL\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Easter Monday\");\n+        addHoliday(\"ITL\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"Italy Liberation Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ITL\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // japan yen -- since Saturday is Friday evening in the West and mostly worked, Saturdays do not roll but are taken directly\n+        addHoliday(\"JPY\", \"Autumnal Equinox\",               ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet\n+        addHoliday(\"JPY\", \"Japan Bank Holiday\",             ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Children Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Coming of Age Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Culture Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Emperor Birthday\",         ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Foundation Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Greenery Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Sports Day\",               ON_SAT, SUN_MON);\n+        addHoliday(\"JPY\", \"Japan Marine Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Memorial Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Respect Aged Day\",         ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Japan Thanksgiving Day\",         ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"New Year Day II\",                ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"New Year Day III\",               ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"JPY\", \"Vernal Equinox\",                 ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet\n+        addHoliday(\"JPY\", \"Vernal Equinox II\",              ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet\n+\n+        // south korea won\n+        addHoliday(\"KRW\", \"Buddha Birthday\",                ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"Lunar New Year\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"Lunar New Year II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"New Year Day II\",                ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"South Korean Constitution\",      ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"South Korean Independence\",      ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"South Korean Liberation\",        ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"South Korean Memorial Day\",      ON_SAT, ON_SUN);\n+        addHoliday(\"KRW\", \"South Korean National Day\",      ON_SAT, ON_SUN);\n+//      KRW 09/23/1999 Harvest Moon Festival Eve\n+//      KRW 09/24/1999 Harvest Moon Festival Day\n+//      KRW 09/11/2000 Harvest Moon Festival Eve\n+//      KRW 09/12/2000 Harvest Moon Festival Day\n+//      KRW 09/13/2000 Harvest Moon Festival Holiday\n+//      KRW 09/30/2001 Harvest Moon Festival Eve\n+//      KRW 10/01/2001 Harvest Moon Festival Day\n+//      KRW 10/02/2001 Harvest Moon Festival Holiday\n+\n+        // kuwait dinar\n+        addHoliday(\"KWD\", \"Birth of the Prophet\",           ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"Eid Al Fitr\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"Eid El Adha\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"Islamic New Year\",               ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"Kuwait Liberation Day\",          ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"Kuwait National Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"KWD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+\n+        // cayman islands dollar\n+        addHoliday(\"KYD\", \"Cayman Constitution Day\");\n+        addHoliday(\"KYD\", \"Cayman Discovery Day\");\n+        addHoliday(\"KYD\", \"Cayman Queen Day\");\n+        addHoliday(\"KYD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"KYD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"KYD\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"KYD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"KYD\", \"Remembrance Day\",                ON_SAT, ON_SUN);\n+\n+        // luxemburg franc\n+        addHoliday(\"LUF\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"Ascension\");\n+        addHoliday(\"LUF\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"Easter Monday\");\n+        addHoliday(\"LUF\", \"Luxemburg National Day\",         ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"LUF\", \"Pentecost\");\n+\n+        // mexico peso\n+        addHoliday(\"MXN\", \"All Souls Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Cinco De Mayo\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Easter Monday\");\n+        addHoliday(\"MXN\", \"Good Friday\");\n+        addHoliday(\"MXN\", \"Guadalupes Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Holy Thursday\");\n+        addHoliday(\"MXN\", \"Juarez Birthday\",                ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Mexico Constitution Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Mexico Independence\",            ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"Mexico Revolution\",              ON_SAT, ON_SUN);\n+        addHoliday(\"MXN\", \"New Year Day\",                   ON_SAT, ON_SUN); // TODO: check this\n+\n+        // malaysia ringgit\n+        addHoliday(\"MYR\", \"Birth of the Prophet\",           ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Islamic New Year\",               ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Lunar New Year\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Lunar New Year II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Malaysia Federal Territory\",     ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Malaysia National Day\",          ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"MYR\", \"Wesak Day\",                      ON_SAT, ON_SUN);\n+//      MYR 01/19/1999 Hari Raya Puasa\n+//      MYY 01/20/1999 Hari Raya Puasa\n+//      MYR 11/07/1999 Deepavally Day\n+//      MYR 01/08/2000 Hari Raya Puasa\n+//      MYR 01/09/2000 Hari Raya Puasa\n+//      MYR 10/26/2000 Deepavally Day\n+//      MYR 12/27/2000 Hari Raya Puasa\n+//      MYR 12/28/2000 Hari Raya Puasa\n+//      MYR 12/16/2001 Hari Raya Puasa\n+//      MYR 12/17/2001 Hari Raya Puasa\n+\n+        // netherlands guilder\n+        addHoliday(\"NLG\", \"Ascension\");\n+        addHoliday(\"NLG\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"NLG\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"NLG\", \"Easter Monday\");\n+        addHoliday(\"NLG\", \"Good Friday\");\n+        addHoliday(\"NLG\", \"Netherland Liberation\",          ON_SAT, ON_SUN);\n+        addHoliday(\"NLG\", \"Netherland Queen Birthday\",      ON_SAT, ON_SUN);\n+        addHoliday(\"NLG\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"NLG\", \"Pentecost\");\n+\n+        // norway krone\n+        addHoliday(\"NOK\", \"Ascension\");\n+        addHoliday(\"NOK\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"NOK\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"NOK\", \"Easter Monday\");\n+        addHoliday(\"NOK\", \"Good Friday\");\n+        addHoliday(\"NOK\", \"Holy Thursday\");\n+        addHoliday(\"NOK\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"NOK\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"NOK\", \"Norway Constitution Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"NOK\", \"Pentecost\");\n+\n+        // new zealand dollar\n+        addHoliday(\"NZD\", \"Anzac Day\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"NZD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"NZD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"NZD\", \"Easter Monday\");\n+        addHoliday(\"NZD\", \"Good Friday\");\n+        addHoliday(\"NZD\", \"New Year Day\",                   SAT_MON, SUN_TUE);\n+        addHoliday(\"NZD\", \"New Year Day II\",                SAT_MON, SUN_TUE);\n+        addHoliday(\"NZD\", \"New Zealand Labour Day\");\n+        addHoliday(\"NZD\", \"New Zealand Queen Day\");\n+        addHoliday(\"NZD\", \"Waitangi Day\",                   ON_SAT, ON_SUN);\n+\n+        // panama balboa\n+        addHoliday(\"PAB\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Carnival Monday\");\n+        addHoliday(\"PAB\", \"Carnival Tuesday\");\n+        addHoliday(\"PAB\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Good Friday\");\n+        addHoliday(\"PAB\", \"Martyrs Day\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Panama Announcement\",            ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Panama Break From Spain\",        ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Panama Independence I\",          ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Panama Independence II\",         ON_SAT, ON_SUN);\n+        addHoliday(\"PAB\", \"Panama Mothers Day\",             ON_SAT, ON_SUN);\n+\n+        // peru sol\n+        addHoliday(\"PEN\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"Angamos Battle\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"Good Friday\");\n+        addHoliday(\"PEN\", \"Holy Thursday\");\n+        addHoliday(\"PEN\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"Peru Independence I\",            ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"Peru Independence II\",           ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"St. Peter & St. Paul Day\",       ON_SAT, ON_SUN);\n+        addHoliday(\"PEN\", \"St. Rose of Lima\",               ON_SAT, ON_SUN);\n+\n+        // philippine peso\n+        addHoliday(\"PHP\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Bonifacio Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Good Friday\");\n+        addHoliday(\"PHP\", \"Holy Thursday\");\n+        addHoliday(\"PHP\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"New Year Eve Eve\",               ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Philippine Heroes Day I\",        ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Philippine Heroes Day II\",       ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Philippine Heroes Day III\",      ON_SAT, ON_SUN);\n+        addHoliday(\"PHP\", \"Philippine Independence\",        ON_SAT, ON_SUN);\n+\n+        // poland zloty\n+        addHoliday(\"PLN\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Corpus Christi\");\n+        addHoliday(\"PLN\", \"Easter Monday\");\n+        addHoliday(\"PLN\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Poland Constitution Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"PLN\", \"Poland Independence\",            ON_SAT, ON_SUN);\n+\n+        // portugal escudo\n+        addHoliday(\"PTE\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Carnival Monday\");                                // TODO: or tuesday\n+        addHoliday(\"PTE\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Corpus Christi\");\n+        addHoliday(\"PTE\", \"Good Friday\");\n+        addHoliday(\"PTE\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Portugal Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Portugal Independence\",          ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Portugal Liberty Day\",           ON_SAT, ON_SUN);\n+        addHoliday(\"PTE\", \"Portugal Republic Day\",          ON_SAT, ON_SUN);\n+\n+        // russia ruble\n+        addHoliday(\"RUB\", \"Defenders of Motherland\",        ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"May Labour Day II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"New Year Day II\",                ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Orthodox Christmas\",             ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Russia Constitution Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Russia National Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Russia Revolution Day\",          ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Russia Victory Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"RUB\", \"Russia Womans Day\",              ON_SAT, ON_SUN);\n+\n+        // saudi arabia riyal\n+        addHoliday(\"SAR\", \"Eid Al Fitr\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"SAR\", \"Eid El Adha\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"SAR\", \"Saudi Arabia Nature Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"SAR\", \"Saudi Arabia Nature Day II\",     ON_SAT, ON_SUN);\n+        addHoliday(\"SAR\", \"Saudi Arabia Unification\",       ON_SAT, ON_SUN);\n+\n+        // sweden krona\n+        addHoliday(\"SEK\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Ascension\");\n+        addHoliday(\"SEK\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Easter Monday\");\n+        addHoliday(\"SEK\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Good Friday\");\n+        addHoliday(\"SEK\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Midsummer\");\n+        addHoliday(\"SEK\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Pentecost\");\n+        addHoliday(\"SEK\", \"St. Walpurgis Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"SEK\", \"Sweden Flag Day\",                ON_SAT, ON_SUN);\n+\n+        // singapore dollar\n+        addHoliday(\"SGD\", \"Lunar New Year\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Lunar New Year II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Lunar New Year III\",             ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Good Friday\");\n+        addHoliday(\"SGD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Singapore National Day\",         ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Wesak Day\",                      ON_SAT, ON_SUN);\n+//      SGD 01/19/1999 Hari Raya Puasa\n+//      SGD 03/28/1999 Hari Raya Haji\n+//      SGD 11/07/1999 Deepavali\n+//      SGD 01/08/2000 Hari Raya Puasa\n+//      SGD 03/16/2000 Hari Raya Haji\n+//      SGD 10/26/2000 Deepavali\n+//      SGD 12/27/2000 Hari Raya Puasa\n+//      SGD 03/06/2001 Hari Raya Haji\n+//      SGD 12/16/2001 Hari Raya Puasa\n+\n+        // slovakia koruna\n+        addHoliday(\"SGD\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Christmas Eve\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Epiphany\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Good Friday\");\n+        addHoliday(\"SGD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Our Lady of Seven Sorrows\",      ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Slovakia Constitution Day\",      ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Slovakia Liberation\",            ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"Slovakia National Day\",          ON_SAT, ON_SUN);\n+        addHoliday(\"SGD\", \"St. Cyril & Methodius\",          ON_SAT, ON_SUN);\n+\n+        // el salvador colon\n+        addHoliday(\"SVC\", \"All Souls Day\",                  ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Bank Balance I\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Bank Balance II\",                ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Easter Monday\");\n+        addHoliday(\"SVC\", \"El Salvador Independence\",       ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Good Friday\");\n+        addHoliday(\"SVC\", \"Holy Thursday\");\n+        addHoliday(\"SVC\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"New Year Eve Eve\",               ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Transfiguration I\",              ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Transfiguration II\",             ON_SAT, ON_SUN);\n+        addHoliday(\"SVC\", \"Transfiguration III\",            ON_SAT, ON_SUN);\n+\n+        // thailand baht\n+        addHoliday(\"THB\", \"King Chulalongkorn Memorial\",    ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Mid Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"New Year Day\",                   SAT_MON, SUN_MON);\n+        addHoliday(\"THB\", \"New Year Eve\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Shakri Dynasty Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Songkran Festival I\",            ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Songkran Festival II\",           ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Songkran Festival III\",          ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Thailand Constitution Day\",      SAT_MON, SUN_MON);\n+        addHoliday(\"THB\", \"Thailand Crowning Day\",          ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Thailand King Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"THB\", \"Thailand Queen Day\",             ON_SAT, ON_SUN);\n+//      THB 01/01/1999 Makha Bucha Day (?)\n+//      THB 05/29/1999 Visakha Bucha Day\n+//      THB 07/28/1999 Buddisht Lent\n+//      THB 05/18/2000 Vishaka Bucha Day\n+//      THB 07/17/2000 Buddisht Lent\n+\n+        // turkey lira\n+        addHoliday(\"TRL\", \"Eid Al Fitr\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"Eid El Adha\",                    ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"Turkey Children & Sovereign\",    ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"Turkey Republic Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"Turkey Victory Day\",             ON_SAT, ON_SUN);\n+        addHoliday(\"TRL\", \"Turkey Youth & Sports\",          ON_SAT, ON_SUN);\n+//      TRL 03/16/2000 Day of the Sacrifice\n+//      TRL 03/17/2000 Day of the Sacrifice\n+//      TRL 03/18/2000 Day of the Sacrifice\n+//      TRL 03/19/2000 Day of the Sacrifice\n+//      TRL 03/05/2001 Day of the Sacrifice\n+//      TRL 03/06/2001 Day of the Sacrifice\n+//      TRL 03/07/2001 Day of the Sacrifice\n+//      TRL 03/08/2001 Day of the Sacrifice\n+\n+        // taiwan dollar\n+        addHoliday(\"TWD\", \"Ching Ming Eve\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Confucius Birthday\",             ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Dragon Boat Day\",                ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Dr. Sun Yat Sen Birthday\",       ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Lunar New Year Eve\",             ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Lunar New Year\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Lunar New Year II\",              ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Lunar New Year III\",             ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Mid Autumn Festival\",            ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Mid Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"New Year Day\",                   SAT_MON, SUN_TUE);\n+        addHoliday(\"TWD\", \"New Year Day II\",                SAT_MON, SUN_TUE);\n+        addHoliday(\"TWD\", \"President Tchiang Kai Sek\",      ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan Constitution Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan National Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan Peace Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan Retrocession\",            ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan Woman Day\",               ON_SAT, ON_SUN);\n+        addHoliday(\"TWD\", \"Taiwan Youth Day\",               ON_SAT, ON_SUN);\n+\n+        // united states dollar\n+        addHoliday(\"USD\", \"Christmas\",                      SAT_FRI, SUN_MON);\n+        addHoliday(\"USD\", \"Fourth Of July\",                 SAT_FRI, SUN_MON);\n+        addHoliday(\"USD\", \"Martin Luther King\");\n+        addHoliday(\"USD\", \"New Year Day\",                   SAT_FRI, SUN_MON);\n+        addHoliday(\"USD\", \"Presidents Day\");\n+        addHoliday(\"USD\", \"Thanksgiving Day\");\n+        addHoliday(\"USD\", \"USA Columbus Day\");\n+        addHoliday(\"USD\", \"USA Labor Day\");\n+        addHoliday(\"USD\", \"USA Memorial Day\");\n+        addHoliday(\"USD\", \"USA Veterans Day\",               SAT_FRI, SUN_MON); // TODO: unsure if this is a currency\n+\n+        // venezuela bolivar\n+        addHoliday(\"VEB\", \"All Saints Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Ascension\");\n+        addHoliday(\"VEB\", \"Assumption\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Battle of Carabobo\",             ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Columbus Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Epiphany Monday\");\n+        addHoliday(\"VEB\", \"Immaculate Conception\",          ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"San Jose\",                       ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"St. Peter & St. Paul Day\",       ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Simon Bolivar Day\",              ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Venezuela Independence\",         ON_SAT, ON_SUN);\n+        addHoliday(\"VEB\", \"Venezuela Independence II\",      ON_SAT, ON_SUN);\n+\n+        // south africa rand\n+        addHoliday(\"ZAR\", \"Ascension\");\n+        addHoliday(\"ZAR\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"Easter Monday\");\n+        addHoliday(\"ZAR\", \"Good Friday\");\n+        addHoliday(\"ZAR\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"South Africa Freedom Day\",       ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"South Africa Heritage Day\",      ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"South Africa Human Rights\",      ON_SAT, SUN_MON);\n+        addHoliday(\"ZAR\", \"South Africa Reconciliation\",    ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"South Africa Womans Day\",        ON_SAT, ON_SUN);\n+        addHoliday(\"ZAR\", \"South Africa Youth Day\",         ON_SAT, ON_SUN);\n+\n+        // zimbabwe dollar\n+        addHoliday(\"ZWD\", \"Africa Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Boxing Day\",                     ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Christmas\",                      ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"May Labour Day\",                 ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"New Year Day\",                   ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Zimbabwe Armed Forces Day\",      ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Zimbabwe Heroes Day\",            ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Zimbabwe Independence\",          ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Zimbabwe Public Holiday\",        ON_SAT, ON_SUN);\n+        addHoliday(\"ZWD\", \"Zimbabwe Unity Day\",             ON_SAT, ON_SUN);\n+    }\n+\n+    /**\n+     * Returns an iterator for all the currencies handled by this class.\n+     * @return Iterator of currency keys.\n+     */\n+    public static Iterator<String> currencies() {\n+        return _ccys.keySet().iterator();\n+    }\n+\n+    /**\n+     * Returns an iterator for all the holidays for specified currency.\n+     * @param ccy Name of the currency.\n+     * @return Iterator of currency keys.\n+     */\n+    public static Iterator<RawHolidayChoice> holidays(String ccy) {\n+        Map<String, RawHolidayChoice> ccyMap = _ccys.get(ccy);\n+        return ccyMap.values().iterator();\n+    }\n+\n+    /**\n+     * Prints holidays for currency between years specified, inclusive.\n+     * @param ccy   Name of the currency.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     */\n+    public static void print(String ccy, /*year*/int start, /*year*/int end) {\n+        RawHolidayChoice holi;\n+        Date date;\n+        /*year*/int year;\n+        for (Iterator<RawHolidayChoice> ih = holidays(ccy); ih.hasNext();) {\n+            holi = ih.next();\n+            _logger.info(\"  \" + holi.getLabel());\n+            for (year = start; year <= end; year++) {\n+                date = holi.date(year);\n+                if (date != null) {\n+                    _logger.info(\"    \" + date);\n+                }\n+            }\n+        }\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+\n+    /**\n+     * Stores a holiday for a currency on the currency's list.\n+     * @param ccy  Name of the currency.\n+     * @param holi Name of the holiday.\n+     */\n+    public static void addHoliday(String ccy, String holi) {\n+        RawHolidayChoice raw = (RawHolidayChoice) _raws.choice(holi);\n+        if (raw != null) {\n+            putHoliday(ccy, raw);\n+        }\n+    }\n+\n+    /**\n+     * Stores a holiday for a currency on the currency's list.\n+     * @param ccy  Name of the currency.\n+     * @param holi Name of the holiday.\n+     * @param sat  Saturday adjustment.\n+     * @param sun  Sunday adjustment.\n+     */\n+    public static void addHoliday(String ccy, String holi, int sat, int sun) {\n+        if (sat == 0 && sun == 0) {\n+            addHoliday(ccy, holi);\n+        } else {\n+            RawHolidayChoice raw = (RawHolidayChoice) _raws.choice(holi);\n+            if (raw != null) {\n+                putHoliday(ccy, new CcyHoli(raw, sat, sun));\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Stores a holiday for a currency on the currency's list.\n+     * @param ccy Name of the currency.\n+     * @param raw Raw holiday object.\n+     */\n+    public static void putHoliday(String ccy, RawHolidayChoice raw) {\n+        Map<String, RawHolidayChoice> ccyMap = _ccys.get(ccy);\n+        if (ccyMap == null) {\n+            ccyMap = new TreeMap<String, RawHolidayChoice>();\n+            _ccys.put(ccy, ccyMap);\n+        }\n+        ccyMap.put(raw.getLabel(), raw);\n+    }\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Date.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+/**\n+ * Date wrapper.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public class Date {\n+\n+    public Date addDays(int _sun) {\n+        return null;\n+    }\n+\n+    public Weekday weekday() {\n+        return null;\n+    }\n+\n+    public Date nextWeekday(Weekday _weekday) {\n+        return null;\n+    }\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateFactory.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+/**\n+ * Date factory.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public class DateFactory {\n+\n+    public static Date date(int year, Month _month, int _day) {\n+        return null;\n+    }\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateUtil.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+/**\n+ * Date utilities.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public class DateUtil {\n+\n+    public static boolean isLeapYear(int year) {\n+        return false;\n+    }\n+\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Month.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * This enumeration is for the months of a year.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public enum Month {\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Static Variables & Methods\n+\n+    /**\n+     * Defines the twelve months.\n+     */\n+    JAN(1), FEB(2), MAR(3), APR(4), MAY(5), JUN(6), JUL(7), AUG(8), SEP(9), OCT(10), NOV(11), DEC(12);\n+\n+    // static variables\n+    private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };\n+    private static Map<String, Month>   _names = new HashMap<String, Month>(12); // lower case names to months\n+\n+    /**\n+     * Numeric value representing number of months in the year.\n+     */\n+    public static int MONTHS_PER_YEAR = 12;\n+\n+    /**\n+     * Array of month full names.\n+     */\n+    private static final String[] FULL_NAME = {\n+        null,\n+        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n+    };\n+\n+    /**\n+     * Array of days per month in non-leap year.\n+     */\n+    private static final /*day*/int[] MAX_DAYS = {\n+        0,\n+        31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n+    };\n+\n+    /**\n+     * Array of days per month in year.\n+     */\n+    private static final int[] START_WITHIN_YEAR = {\n+        0,\n+        0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334\n+    };\n+    private static final int[] START_WITHIN_LEAP_YEAR = {\n+        0,\n+        0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335\n+    };\n+\n+    static {\n+        _names.put(\"january\",   Month.JAN);\n+        _names.put(\"february\",  Month.FEB);\n+        _names.put(\"march\",     Month.MAR);\n+        _names.put(\"april\",     Month.APR);\n+        _names.put(\"may\",       Month.MAY);\n+        _names.put(\"june\",      Month.JUN);\n+        _names.put(\"july\",      Month.JUL);\n+        _names.put(\"august\",    Month.AUG);\n+        _names.put(\"september\", Month.SEP);\n+        _names.put(\"october\",   Month.OCT);\n+        _names.put(\"november\",  Month.NOV);\n+        _names.put(\"december\",  Month.DEC);\n+    }\n+\n+    /**\n+     * Returns the month associated with the index.\n+     * @param index Index of the month (1...12).\n+     * @return Associated month.\n+     */\n+    public static Month month(int index) {\n+        return _months[index];\n+    }\n+\n+    /**\n+     * Returns the month associated with the name.\n+     * @param str Month name.\n+     * @return Associated month; <code>null</code> if invalid string.\n+     */\n+    public static Month month(String str) {\n+        Month month;\n+        if (str.length() == 3) {\n+            try {\n+                month = Enum.valueOf(Month.class, str.toUpperCase());\n+            } catch (IllegalArgumentException iae) {\n+                month = null;\n+            }\n+        } else {\n+            month = _names.get(str.toLowerCase());\n+        }\n+        return month;\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Field Variables & Constructor\n+\n+    // private field variables\n+    private final int                   _month;             // index of the month\n+\n+    /**\n+     * Constructor.\n+     * @param   month   Month index.\n+     */\n+    private Month(int month) {\n+        _month = month;\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Business Logic\n+\n+    /**\n+     * Returns the number of days in the year.\n+     * @param leapYear <code>true</code> if leap year; <code>false</code> otherwise.\n+     * @return Number of days in month for year; inclusive range of 28 thru 31.\n+     */\n+    public /*day*/int maxDays(boolean leapYear) {\n+        return (this == FEB && leapYear) ? 29 : MAX_DAYS[_month];\n+    }\n+\n+    /**\n+     * Returns the number of days in the year.\n+     * @param year  Year (1...3000).\n+     * @return Number of days in month for year; inclusive range of 28 thru 31.\n+     */\n+    public /*day*/int maxDays(/*year*/int year) {\n+        return maxDays(DateUtil.isLeapYear(year));\n+    }\n+\n+    /**\n+     * Calculates the starting day of the year.\n+     * @param leapYear <code>true</code> if leap year; <code>false</code> otherwise.\n+     * @return Day number (1...366) of the year.\n+     */\n+    public int startDayInYear(boolean leapYear) {\n+        return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];\n+    }\n+\n+    /**\n+     * Returns a string representation of the month.\n+     * @return Month abbreviation.\n+     */\n+    public String toString() {\n+        return name();\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Get & Set Methods\n+\n+    /**\n+     * Returns the month abbreviated name.\n+     * @return Month abbreviation (JAN, FEB, ..., DEC).\n+     */\n+    public String getAbbrev() {\n+        return name();\n+    }\n+\n+    /**\n+     * Returns the month full name.\n+     * @return Month name (January, February, ..., December).\n+     */\n+    public String getFullName() {\n+        return FULL_NAME[_month];\n+    }\n+\n+    /**\n+     * Returns the month index.\n+     * @return Index of the month (1...12).\n+     */\n+    public int getValue() {\n+        return _month;\n+    }\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoice.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.List;\n+\n+/**\n+ * The interface for specifying a raw holiday; the Saturday and Sunday behavior is not specified at this level.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public interface RawHolidayChoice extends Choice {\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    Date date(/*year*/int year);\n+\n+    /**\n+     * Returns a list of dates of the particular holiday for the specified years.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     * @return List of dates of holidays in specified years, inclusive.\n+     */\n+    List<Date> dates(/*year*/int start, /*year*/int end);\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoiceImpl.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Abstract Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+abstract class AbstractHoliday extends AbstractChoice implements RawHolidayChoice {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    // state fields\n+    protected /*day*/int                _day;               // day (or days from easter, etc...)\n+    protected /*year*/int               _end = 2100;        // ending year for holidays\n+    protected int                       _every = 1;         // the number of years between holidays\n+    protected Month                     _month;             // month of holiday\n+    protected /*year*/int               _start = 1;         // starting year for holidays\n+    protected Weekday                   _weekday;           // day of the week\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param month Month holiday is in.\n+     * @param day   Day holiday is on.\n+     */\n+    public AbstractHoliday(String label, Month month, /*day*/int day) {\n+        super(RawHolidayChoiceImpl.choices(), label);\n+        _day = day;\n+        _month = month;\n+    }\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param month Month holiday is in.\n+     * @param day   Day holiday is on.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     * @param every Number of years between holidays.\n+     */\n+    public AbstractHoliday(String label, Month month, /*day*/int day, /*year*/int start, /*year*/int end, int every) {\n+        super(RawHolidayChoiceImpl.choices(), label);\n+        _day = day;\n+        _month = month;\n+        _start = start;\n+        _end = end;\n+        _every = every;\n+    }\n+\n+    /**\n+     * Returns a list of dates of the particular holiday for the specified years.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     * @return List of dates of holidays in specified years, inclusive.\n+     */\n+    public List<Date> dates(/*year*/int start, /*year*/int end) {\n+        List<Date> list = new ArrayList<Date>(end - start + 1);\n+        for (/*year*/int year = start; year <= end; year++) {\n+            list.add(date(year));\n+        }\n+        return list;\n+    }\n+}\n+\n+/**\n+ * Easter Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayEaster extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param days  Days from Easter Sunday.\n+     */\n+    public HolidayEaster(String label, int days) {\n+        super(label, null, days);\n+    }\n+\n+    private static final /*day*/int[] EASTER = {\n+        14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27\n+    };\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        int day = EASTER[year % 19];\n+        Date easter = DateFactory.date(year, (day < 20) ? Month.APR : Month.MAR, day).addDays(1).nextWeekday(Weekday.SUN);\n+        Date holi = easter.addDays(_day);\n+        return holi;\n+    }\n+}\n+\n+/**\n+ * Equinox Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayEquinox extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label  The holiday convention.\n+     * @param spring <code>true</code> for Spring; <code>false</code> for Autumn.\n+     * @param days   Days from Equinox.\n+     */\n+    public HolidayEquinox(String label, boolean spring, int days) {\n+        super(label, spring ? Month.MAR : Month.SEP, days);\n+    }\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        // TODO: must get starting seconds and add seconds per year to derive actual time of equinox\n+        Date equinox;\n+        if (_month == Month.MAR) {\n+            equinox = DateFactory.date(year, _month, 21);\n+        } else {\n+            equinox = DateFactory.date(year, _month, 23);\n+        }\n+        Date holi = equinox.addDays(_day);\n+        return holi;\n+    }\n+}\n+\n+/**\n+ * Islamic Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayIslamic extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param days  Days from Islamic new year.\n+     */\n+    public HolidayIslamic(String label, int days) {\n+        super(label, null, days);\n+    }\n+\n+    private static final int[][] ISLAMIC = {\n+        {1999, 4, 18}, {2000, 4, 6}, {2001, 3, 26}, {2002, 3, 15}\n+    };\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        Date holi = null;\n+        if (1999 <= year && year <= 2002) {\n+            int yr = year - 1999;\n+            Date islamic = DateFactory.date(year, Month.month(ISLAMIC[yr][1]), ISLAMIC[yr][2]);\n+            holi = islamic.addDays(_day);\n+        }\n+        return holi;\n+    }\n+}\n+\n+/**\n+ * Lunar New Year Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayLunar extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param days  Days from lunar new year.\n+     */\n+    public HolidayLunar(String label, int days) {\n+        super(label, null, days);\n+    }\n+\n+    private static final int[][] LUNAR = {\n+        {1999, 2, 16}, {2000, 2,  5}, {2001, 1, 24}, {2002, 2, 12}, {2003, 2,  1}, {2004, 1, 22},\n+        {2005, 2,  9}, {2006, 1, 29}, {2007, 2, 18}, {2008, 2,  7}, {2009, 1, 26}, {2010, 2, 14}\n+    };\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        Date holi = null;\n+        if (1999 <= year && year <= 2010) {\n+            int yr = year - 1999;\n+            Date lunar = DateFactory.date(year, Month.month(LUNAR[yr][1]), LUNAR[yr][2]);\n+            holi = lunar.addDays(_day);\n+        }\n+        return holi;\n+    }\n+}\n+\n+/**\n+ * Day Of Month Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayMonthDay extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param month Month holiday is in.\n+     * @param day   Day holiday is on.\n+     */\n+    public HolidayMonthDay(String label, Month month, /*day*/int day) {\n+        super(label, month, day);\n+    }\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label The holiday convention.\n+     * @param month Month holiday is in.\n+     * @param day   Day holiday is on.\n+     * @param start Starting year.\n+     * @param end   Ending year.\n+     * @param every Number of years between holidays.\n+     */\n+    public HolidayMonthDay(String label, Month month, /*day*/int day, /*year*/int start, /*year*/int end, int every) {\n+        super(label, month, day, start, end, every);\n+    }\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        Date holi = null;\n+        if (_every == 1 || (_start <= year && year <= _end && ((year - _start) % _every == 0))) {\n+            holi = DateFactory.date(year, _month, _day);\n+        }\n+        return holi;\n+    }\n+}\n+\n+/**\n+ * Weekday Holidays.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+class HolidayWeekday extends AbstractHoliday {\n+\n+    static final long serialVersionUID = 1001L;             // version 1 for serialization\n+\n+    /**\n+     * Constructor for holiday.\n+     * @param label   The holiday convention.\n+     * @param month   Month holiday is in.\n+     * @param day     First possible day for holiday.\n+     * @param weekday Day of the week holiday is on.\n+     */\n+    public HolidayWeekday(String label, Month month, /*day*/int day, Weekday weekday) {\n+        super(label, month, day);\n+        _weekday = weekday;\n+    }\n+\n+    /**\n+     * Returns the date of the particular holiday for the specified year.\n+     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.\n+     * @param year Year the holiday is requested for.\n+     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.\n+     */\n+    public Date date(/*year*/int year) {\n+        Date holi = DateFactory.date(year, _month, _day);\n+        return holi.nextWeekday(_weekday);\n+    }\n+}\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+\n+/**\n+ * The choice list for holiday implementations.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public final class RawHolidayChoiceImpl {\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Static Variables & Methods\n+\n+    // static variables\n+    private static ChoiceList _choices;\n+\n+    /**\n+     * Static initializer to create the holiday convention list.\n+     */\n+    static {\n+        _choices = new ChoiceList(klass());\n+\n+        new HolidayMonthDay(\"Africa Day\",                   Month.MAY,  25);\n+        new HolidayMonthDay(\"All Saints Day\",               Month.NOV,   1);\n+        new HolidayMonthDay(\"All Souls Day\",                Month.NOV,   2);\n+        new HolidayMonthDay(\"Angamos Battle\",               Month.OCT,   8);\n+        new HolidayMonthDay(\"Annunciation\",                 Month.MAR,  25);\n+        new HolidayMonthDay(\"Anzac Day\",                    Month.APR,  25);\n+        new HolidayWeekday(\"Argentina Flag Day\",            Month.JUN,  18,  Weekday.MON); // TODO: starting date\n+        new HolidayMonthDay(\"Argentina Independence\",       Month.JUL,   9);\n+        new HolidayMonthDay(\"Argentina May Revolution\",     Month.MAY,  25);\n+        new HolidayMonthDay(\"Armistice Day\",                Month.NOV,  11);\n+        new HolidayEaster(\"Ascension\",                       39);\n+        new HolidayEaster(\"Ash Wednesday\",                  -46);\n+        new HolidayMonthDay(\"Assumption\",                   Month.AUG,  15);\n+        new HolidayMonthDay(\"Australia Day\",                Month.JAN,  26);\n+        new HolidayMonthDay(\"Australia Labour Day\",         Month.MAR,   1);\n+        new HolidayWeekday(\"Australia Queen Day\",           Month.JUN,   8,  Weekday.MON);\n+        new HolidayMonthDay(\"Austria National Day\",         Month.OCT,  26);\n+        new HolidayWeekday(\"Autumn Bank Holiday\",           Month.AUG,   1,  Weekday.MON);\n+        new HolidayEquinox(\"Autumnal Equinox\",              false, 0);\n+        new HolidayMonthDay(\"Bahamas Independence\",         Month.JUL,  10);\n+        new HolidayWeekday(\"Bahamas Labour Day\",            Month.JUN,   1,  Weekday.FRI);\n+        new HolidayMonthDay(\"Bank Balance I\",               Month.JUN,  29);\n+        new HolidayMonthDay(\"Bank Balance II\",              Month.JUN,  30);\n+        new HolidayMonthDay(\"Barbados Heroes Day\",          Month.APR,  28);\n+        new HolidayMonthDay(\"Barbados Independence\",        Month.NOV,  30);\n+        new HolidayMonthDay(\"Bastille Day\",                 Month.JUL,  14);\n+        new HolidayMonthDay(\"Battle of Boyaca Day\",         Month.AUG,   7);\n+        new HolidayMonthDay(\"Battle of Carabobo\",           Month.JUN,  24);\n+        new HolidayMonthDay(\"Belgium National Day\",         Month.JUL,  21);\n+        new HolidayMonthDay(\"Belize Emancipation\",          Month.MAY,  24);\n+        new HolidayMonthDay(\"Belize Independence\",          Month.SEP,  21);\n+        new HolidayWeekday(\"Bermuda Cup Match\",             Month.JUL,  30,  Weekday.THU); // TODO: starting date\n+        new HolidayWeekday(\"Bermuda Labour Day\",            Month.SEP,   1,  Weekday.MON);\n+        new HolidayWeekday(\"Bermuda Queen Day\",             Month.JUN,  15,  Weekday.MON); // TODO: starting date\n+        new HolidayWeekday(\"Bermuda Somers Day\",            Month.JUL,  31,  Weekday.FRI); // TODO: starting date\n+        new HolidayIslamic(\"Birth of the Prophet\",           69);\n+        new HolidayMonthDay(\"Bolivia Independence\",         Month.AUG,   6);\n+        new HolidayMonthDay(\"Bonifacio Day\",                Month.NOV,  30);\n+        new HolidayMonthDay(\"Brazil Independence\",          Month.SEP,   7);\n+        new HolidayMonthDay(\"Brazil Republic Day\",          Month.NOV,  15);\n+        new HolidayMonthDay(\"Boxing Day\",                   Month.DEC,  26);\n+        new HolidayMonthDay(\"Buddha Purnima\",               Month.APR,  30);\n+        new HolidayLunar(\"Buddha Birthday\",                  95);\n+        new HolidayWeekday(\"Canada Civic Day\",              Month.AUG,   1,  Weekday.MON);\n+        new HolidayMonthDay(\"Canada Independence\",          Month.JUL,   1);\n+        new HolidayWeekday(\"Canada Labour Day\",             Month.SEP,   1,  Weekday.MON);\n+        new HolidayWeekday(\"Canada Thanksgiving Day\",       Month.OCT,   8,  Weekday.MON);\n+        new HolidayEaster(\"Carnival Monday\",                -48);\n+        new HolidayEaster(\"Carnival Thursday\",              -52);\n+        new HolidayEaster(\"Carnival Tuesday\",               -47);\n+        new HolidayEaster(\"Carnival Wednesday\",             -53);\n+        new HolidayWeekday(\"Cayman Constitution Day\",       Month.JUL,   1,  Weekday.MON); // TODO: starting date\n+        new HolidayWeekday(\"Cayman Discovery Day\",          Month.MAY,  15,  Weekday.MON); // TODO: starting date\n+        new HolidayWeekday(\"Cayman Queen Day\",              Month.JUN,   8,  Weekday.MON); // TODO: starting date\n+        new HolidayMonthDay(\"Chile Army Day\",               Month.SEP,  19);\n+        new HolidayMonthDay(\"Chile Commemoration Day\",      Month.SEP,  11);\n+        new HolidayMonthDay(\"Chile Marine Day\",             Month.MAY,  21);\n+        new HolidayMonthDay(\"Chile National Day\",           Month.SEP,  18);\n+        new HolidayMonthDay(\"Chile Unity Day\",              Month.SEP,   6);\n+        new HolidayMonthDay(\"Chinese National Day I\",       Month.OCT,   1);\n+        new HolidayMonthDay(\"Chinese National Day II\",      Month.OCT,   2);\n+        new HolidayMonthDay(\"Ching Ming Eve\",               Month.APR,   5); // TODO: check this with next\n+        new HolidayMonthDay(\"Ching Ming Festival\",          Month.APR,   6);\n+        new HolidayMonthDay(\"Christmas\",                    Month.DEC,  25);\n+        new HolidayMonthDay(\"Christmas Eve\",                Month.DEC,  24);\n+        new HolidayMonthDay(\"Christmas IV\",                 Month.DEC,  28);\n+        new HolidayMonthDay(\"Christmas V\",                  Month.DEC,  29);\n+        new HolidayMonthDay(\"Christmas VI\",                 Month.DEC,  30);\n+        new HolidayMonthDay(\"Cinco De Mayo\",                Month.MAY,   5);\n+        new HolidayMonthDay(\"Columbia Independence\",        Month.JUL,  20);\n+        new HolidayMonthDay(\"Columbus Day\",                 Month.OCT,  12);\n+        new HolidayMonthDay(\"Commonwealth Day\",             Month.MAR,   9);\n+        new HolidayMonthDay(\"Confucius Birthday\",           Month.SEP,  28);\n+        new HolidayEaster(\"Corpus Christi\",                  60);\n+        new HolidayMonthDay(\"Costa Rica Independence\",      Month.SEP,  15);\n+        new HolidayMonthDay(\"Cuencas Independence\",         Month.NOV,   3);\n+        new HolidayMonthDay(\"Czech Liberation\",             Month.MAY,   8);\n+        new HolidayMonthDay(\"Czech National Day\",           Month.OCT,  28);\n+        new HolidayMonthDay(\"December Bank Holiday\",        Month.DEC,   1);\n+        new HolidayMonthDay(\"Denmark National Day\",         Month.JUN,   5);\n+        new HolidayMonthDay(\"Defenders of Motherland\",      Month.FEB,  23);\n+        new HolidayMonthDay(\"Diwali\",                       Month.NOV,   7);\n+        new HolidayMonthDay(\"Dr. Sun Yat Sen Birthday\",     Month.NOV,  12);\n+        new HolidayLunar(\"Dragon Boat Day\",                 122);\n+        new HolidayMonthDay(\"Dussehra\",                     Month.OCT,  19);\n+        new HolidayEaster(\"Easter Monday\",                    1);\n+        new HolidayMonthDay(\"Ecuador Independence\",         Month.AUG,  10);\n+        new HolidayWeekday(\"Ecuador Bank Holiday\",          Month.JUN,  24,  Weekday.FRI);\n+        new HolidayIslamic(\"Eid Al Fitr\",                   -89);\n+        new HolidayIslamic(\"Eid El Adha\",                   -20);\n+        new HolidayMonthDay(\"Egypt Army Day\",               Month.OCT,   6);\n+        new HolidayMonthDay(\"Egypt Liberation\",             Month.OCT,  23);\n+        new HolidayMonthDay(\"Egypt National Day\",           Month.JUL,  23);\n+        new HolidayMonthDay(\"Egypt Union Day\",              Month.FEB,  22);\n+        new HolidayMonthDay(\"Egypt Victory Day\",            Month.DEC,  23);\n+        new HolidayMonthDay(\"El Salvador Independence\",     Month.SEP,  15);\n+        new HolidayWeekday(\"Election Day\",                  Month.NOV,   2,  Weekday.TUE);\n+        new HolidayMonthDay(\"Emancipation Day\",             Month.AUG,   1);\n+        new HolidayWeekday(\"Emancipation Monday\",           Month.AUG,   1,  Weekday.MON);\n+        new HolidayMonthDay(\"Epiphany\",                     Month.JAN,   6);\n+        new HolidayWeekday(\"Epiphany Monday\",               Month.JAN,   2,  Weekday.MON);\n+        new HolidayMonthDay(\"Elevation\",                    Month.SEP,  14);\n+        new HolidayMonthDay(\"Errol Barrow Day\",             Month.JAN,  21);\n+        new HolidayMonthDay(\"Fasting Day\",                  Month.FEB,  22);\n+        new HolidayMonthDay(\"Fete De La Victoire\",          Month.MAY,   8);\n+        new HolidayMonthDay(\"Finland Independence\",         Month.DEC,   6);\n+        new HolidayMonthDay(\"Foundation Day\",               Month.JUN,   7);\n+        new HolidayMonthDay(\"Fourth Of July\",               Month.JUL,   4);\n+        new HolidayMonthDay(\"Friendship Day\",               Month.SEP,  20);\n+        new HolidayMonthDay(\"Garifuna Day\",                 Month.NOV,  19);\n+        new HolidayWeekday(\"General San Martin Memorial\",   Month.AUG,  13,  Weekday.MON); // TODO: starting date\n+        new HolidayMonthDay(\"German Unity Day\",             Month.OCT,   3);\n+        new HolidayEaster(\"Good Friday\",                    -2);\n+        new HolidayMonthDay(\"Greece National Day I\",        Month.MAR,  25);\n+        new HolidayMonthDay(\"Greece National Day II\",       Month.OCT,  28);\n+        new HolidayMonthDay(\"Guadalupes Day\",               Month.DEC,  12);\n+        new HolidayMonthDay(\"Guayaquils Independence\",      Month.OCT,   9);\n+        new HolidayMonthDay(\"Guru Nanak\",                   Month.NOV,  23);\n+        new HolidayWeekday(\"Halloween Day\",                 Month.OCT,  25,  Weekday.MON);\n+        new HolidayIslamic(\"Hari Raya Haji\",                -20);\n+        new HolidayEaster(\"Holy Thursday\",                  -3);\n+        new HolidayMonthDay(\"Honduras Army Day\",            Month.OCT,  21);\n+        new HolidayMonthDay(\"Honduras Independence\",        Month.SEP,  15);\n+        new HolidayMonthDay(\"Hungary Constitution Day\",     Month.AUG,  20);\n+        new HolidayMonthDay(\"Hungary National Day\",         Month.MAR,  15);\n+        new HolidayMonthDay(\"Hungary Republic Day\",         Month.OCT,  23);\n+        new HolidayWeekday(\"Iceland Commerce Day\",          Month.AUG,   1,  Weekday.MON);\n+        new HolidayMonthDay(\"Iceland National Day\",         Month.JUL,  17);\n+        new HolidayMonthDay(\"Immaculate Conception\",        Month.DEC,   8);\n+        new HolidayMonthDay(\"Inauguration Day\",             Month.JAN,  20,  1937, 3000, 4);\n+        new HolidayMonthDay(\"India Independence\",           Month.AUG,  15);\n+        new HolidayMonthDay(\"India Republic Day\",           Month.JAN,  26);\n+        new HolidayMonthDay(\"Indonesia Independence\",       Month.AUG,  17);\n+        new HolidayIslamic(\"Islamic New Year\",               0);\n+        new HolidayMonthDay(\"Italy Liberation Day\",         Month.APR,  25);\n+        new HolidayMonthDay(\"Jan Hus\",                      Month.JUL,   6); // TODO: sometimes june?\n+        new HolidayMonthDay(\"Japan Bank Holiday\",           Month.MAY,   4);\n+        new HolidayMonthDay(\"Japan Children Day\",           Month.MAY,   5);\n+        new HolidayMonthDay(\"Japan Coming of Age Day\",      Month.JAN,  15);\n+        new HolidayMonthDay(\"Japan Culture Day\",            Month.NOV,   3);\n+        new HolidayMonthDay(\"Japan Emperor Birthday\",       Month.DEC,  23);\n+        new HolidayMonthDay(\"Japan Foundation Day\",         Month.FEB,  11);\n+        new HolidayMonthDay(\"Japan Greenery Day\",           Month.APR,  29);\n+        new HolidayMonthDay(\"Japan Sports Day\",             Month.OCT,  10);\n+        new HolidayMonthDay(\"Japan Marine Day\",             Month.JUL,  20);\n+        new HolidayMonthDay(\"Japan Memorial Day\",           Month.MAY,   3);\n+        new HolidayMonthDay(\"Japan Respect Aged Day\",       Month.SEP,  15);\n+        new HolidayMonthDay(\"Japan Thanksgiving Day\",       Month.NOV,  23);\n+        new HolidayMonthDay(\"Juarez Birthday\",              Month.MAR,  21);\n+        new HolidayWeekday(\"June Bank Holiday\",             Month.JUN,   1,  Weekday.MON);\n+        new HolidayWeekday(\"Kadooment Day\",                 Month.AUG,   2,  Weekday.MON); // TODO: start date?\n+        new HolidayMonthDay(\"King Chulalongkorn Memorial\",  Month.OCT,  23);\n+        new HolidayMonthDay(\"Kuwait Liberation Day\",        Month.FEB,  26);\n+        new HolidayMonthDay(\"Kuwait National Day\",          Month.FEB,  25);\n+        new HolidayMonthDay(\"La Paz\",                       Month.JUL,  16);\n+        new HolidayWeekday(\"Labour Day\",                    Month.OCT,   1,  Weekday.MON);\n+        new HolidayLunar(\"Lunar New Year Eve\",              -1);\n+        new HolidayLunar(\"Lunar New Year\",                   0);\n+        new HolidayLunar(\"Lunar New Year II\",                1);\n+        new HolidayLunar(\"Lunar New Year III\",               2);\n+        new HolidayMonthDay(\"Luxemburg National Day\",       Month.JUN,  23);\n+        new HolidayMonthDay(\"Mahatma Gandhis Birthday\",     Month.OCT,   2);\n+        new HolidayMonthDay(\"Mahavir Jayanti\",              Month.MAR,  29);\n+        new HolidayMonthDay(\"Malaysia Federal Territory\",   Month.FEB,   1);\n+        new HolidayMonthDay(\"Malaysia National Day\",        Month.AUG,  31);\n+        new HolidayWeekday(\"Martin Luther King\",            Month.JAN,  15,  Weekday.MON);\n+        new HolidayMonthDay(\"Martyrs Day\",                  Month.JAN,   9);\n+        new HolidayMonthDay(\"May Day\",                      Month.MAY,   1);\n+        new HolidayMonthDay(\"May Day Eve\",                  Month.APR,  30);\n+        new HolidayWeekday(\"May Monday\",                    Month.MAY,   1,  Weekday.MON);\n+        new HolidayMonthDay(\"May Labour Day\",               Month.MAY,   1);\n+        new HolidayMonthDay(\"May Labour Day II\",            Month.MAY,   2);\n+        new HolidayMonthDay(\"Mexico Constitution Day\",      Month.FEB,   5);\n+        new HolidayMonthDay(\"Mexico Independence\",          Month.SEP,  16);\n+        new HolidayMonthDay(\"Mexico Revolution\",            Month.NOV,  20);\n+        new HolidayLunar(\"Mid Autumn Festival\",             220);\n+        new HolidayMonthDay(\"Mid Year Day\",                 Month.JUL,   1);\n+        new HolidayWeekday(\"Midsummer\",                     Month.JUN,  22,  Weekday.TUE); // TODO: start - saw 15th & 23rd (SEK)\n+        new HolidayWeekday(\"Midsummer Eve\",                 Month.JUN,  21,  Weekday.MON); // TODO: ditto\n+        new HolidayMonthDay(\"Morazan Day\",                  Month.OCT,   3);\n+        new HolidayMonthDay(\"Muharram\",                     Month.APR,  27);\n+        new HolidayMonthDay(\"Muttons Feast\",                Month.MAR,  28);\n+        new HolidayMonthDay(\"Nativity\",                     Month.SEP,   8);\n+        new HolidayMonthDay(\"Netherland Liberation\",        Month.MAY,   5);\n+        new HolidayMonthDay(\"Netherland Queen Birthday\",    Month.APR,  30);\n+        new HolidayMonthDay(\"New Year Day\",                 Month.JAN,   1);\n+        new HolidayMonthDay(\"New Year Day II\",              Month.JAN,   2);\n+        new HolidayMonthDay(\"New Year Day III\",             Month.JAN,   3);\n+        new HolidayMonthDay(\"New Year Eve\",                 Month.DEC,  31);\n+        new HolidayMonthDay(\"New Year Eve Eve\",             Month.DEC,  30);\n+        new HolidayWeekday(\"New Zealand Labour Day\",        Month.OCT,  22,  Weekday.MON); // TODO: starting date\n+        new HolidayWeekday(\"New Zealand Queen Day\",         Month.JUN,   1,  Weekday.MON); // TODO: starting date\n+        new HolidayMonthDay(\"Norway Constitution Day\",      Month.MAY,  17);\n+        new HolidayMonthDay(\"Nossa Senhora\",                Month.OCT,  12);\n+        new HolidayMonthDay(\"Orthodox Christmas\",           Month.JAN,   7);\n+        new HolidayMonthDay(\"Orthodox Christmas Eve\",       Month.JAN,   6);\n+        new HolidayMonthDay(\"Orthodox New Year\",            Month.JAN,  14);\n+        new HolidayMonthDay(\"Our Lady of Seven Sorrows\",    Month.SEP,  15);\n+        new HolidayMonthDay(\"Panama Announcement\",          Month.NOV,  10);\n+        new HolidayMonthDay(\"Panama Break From Spain\",      Month.NOV,  28);\n+        new HolidayMonthDay(\"Panama Independence I\",        Month.NOV,   3);\n+        new HolidayMonthDay(\"Panama Independence II\",       Month.NOV,   4);\n+        new HolidayMonthDay(\"Panama Mothers Day\",           Month.DEC,   8);\n+        new HolidayMonthDay(\"Panamerican Day\",              Month.APR,  14);\n+        new HolidayEaster(\"Pentecost\",                       50);\n+        new HolidayMonthDay(\"Peru Independence I\",          Month.JUL,  28);\n+        new HolidayMonthDay(\"Peru Independence II\",         Month.JUL,  29);\n+        new HolidayMonthDay(\"Philippine Heroes Day I\",      Month.APR,   9);\n+        new HolidayMonthDay(\"Philippine Heroes Day II\",     Month.AUG,  27);\n+        new HolidayMonthDay(\"Philippine Heroes Day III\",    Month.AUG,  31);\n+        new HolidayMonthDay(\"Philippine Independence\",      Month.JUN,  12);\n+        new HolidayMonthDay(\"Pichincha Battle\",             Month.MAY,  24);\n+        new HolidayMonthDay(\"Poland Constitution Day\",      Month.MAY,   3); // TODO: is this 1st wednesday of each month\n+        new HolidayMonthDay(\"Poland Independence\",          Month.NOV,  11);\n+        new HolidayMonthDay(\"Portugal Day\",                 Month.JUN,  10);\n+        new HolidayMonthDay(\"Portugal Independence\",        Month.DEC,   1);\n+        new HolidayMonthDay(\"Portugal Liberty Day\",         Month.APR,  25);\n+        new HolidayMonthDay(\"Portugal Republic Day\",        Month.OCT,   5);\n+        new HolidayEaster(\"Prayer Day\",                      26);\n+        new HolidayWeekday(\"Presidents Day\",                Month.FEB,  15,  Weekday.MON);\n+        new HolidayMonthDay(\"President Tchiang Kai Sek\",    Month.OCT,  31);\n+        new HolidayWeekday(\"Queen Victoria Day\",            Month.MAY,  18,  Weekday.MON);\n+        new HolidayMonthDay(\"Quitos Foundation\",            Month.DEC,   6);\n+        new HolidayMonthDay(\"Remembrance Day\",              Month.NOV,  11);\n+        new HolidayMonthDay(\"Russia Constitution Day\",      Month.DEC,  12);\n+        new HolidayMonthDay(\"Russia National Day\",          Month.JUN,  12);\n+        new HolidayMonthDay(\"Russia Revolution Day\",        Month.NOV,   7);\n+        new HolidayMonthDay(\"Russia Victory Day\",           Month.MAY,   9);\n+        new HolidayMonthDay(\"Russia Womans Day\",            Month.MAR,   8);\n+        new HolidayMonthDay(\"San Jose\",                     Month.MAR,  19);\n+        new HolidayMonthDay(\"Saudi Arabia Nature Day\",      Month.APR,   1);\n+        new HolidayMonthDay(\"Saudi Arabia Nature Day II\",   Month.APR,   2);\n+        new HolidayMonthDay(\"Saudi Arabia Unification\",     Month.SEP,  24);\n+        new HolidayMonthDay(\"Sham El Nessim\",               Month.APR,  12);\n+        new HolidayMonthDay(\"Shakri Dynasty Day\",           Month.APR,   6);\n+        new HolidayMonthDay(\"Simon Bolivar Day\",            Month.JUL,  24);\n+        new HolidayMonthDay(\"Sinai Day\",                    Month.APR,  25);\n+        new HolidayMonthDay(\"Singapore National Day\",       Month.AUG,   9);\n+        new HolidayMonthDay(\"Slovakia Constitution Day\",    Month.SEP,   1);\n+        new HolidayMonthDay(\"Slovakia Liberation\",          Month.MAY,   8);\n+        new HolidayMonthDay(\"Slovakia National Day\",        Month.AUG,  29);\n+        new HolidayMonthDay(\"Songkran Festival I\",          Month.APR,  12);\n+        new HolidayMonthDay(\"Songkran Festival II\",         Month.APR,  13);\n+        new HolidayMonthDay(\"Songkran Festival III\",        Month.APR,  14);\n+        new HolidayMonthDay(\"South Africa Freedom Day\",     Month.APR,  27);\n+        new HolidayMonthDay(\"South Africa Heritage Day\",    Month.SEP,  24);\n+        new HolidayMonthDay(\"South Africa Human Rights\",    Month.MAR,  21);\n+        new HolidayMonthDay(\"South Africa Reconciliation\",  Month.DEC,  16);\n+        new HolidayMonthDay(\"South Africa Womans Day\",      Month.AUG,   9);\n+        new HolidayMonthDay(\"South Africa Youth Day\",       Month.JUN,  16);\n+        new HolidayMonthDay(\"South Korean Constitution\",    Month.JUL,  17);\n+        new HolidayMonthDay(\"South Korean Independence\",    Month.MAR,  1);\n+        new HolidayMonthDay(\"South Korean Liberation\",      Month.AUG,  15);\n+        new HolidayMonthDay(\"South Korean Memorial Day\",    Month.JUN,   6);\n+        new HolidayMonthDay(\"South Korean National Day\",    Month.OCT,   3);\n+        new HolidayMonthDay(\"Spain Constitution Day\",       Month.DEC,   6);\n+        new HolidayMonthDay(\"Spain National Day\",           Month.OCT,  12);\n+        new HolidayWeekday(\"Spring Bank Holiday\",           Month.MAY,  25,  Weekday.MON);\n+        new HolidayMonthDay(\"St. Cyril & Methodius\",        Month.JUL,   5); // TODO: sometimes june?\n+        new HolidayMonthDay(\"St. Georges Caye Day\",         Month.SEP,  10);\n+        new HolidayMonthDay(\"St. Josephs Day\",              Month.MAR,  19);\n+        new HolidayMonthDay(\"St. Patrick Day\",              Month.MAR,  17);\n+        new HolidayMonthDay(\"St. Peter & St. Paul Day\",     Month.JUN,  29);\n+        new HolidayMonthDay(\"St. Rose of Lima\",             Month.AUG,  30);\n+        new HolidayMonthDay(\"St. Walpurgis Day\",            Month.APR,  30);\n+        new HolidayMonthDay(\"Suez Victory Day\",             Month.OCT,  24);\n+        new HolidayWeekday(\"Summer Bank Holiday\",           Month.AUG,  25,  Weekday.MON);\n+        new HolidayMonthDay(\"Sweden Flag Day\",              Month.JUN,   6);\n+        new HolidayMonthDay(\"Swiss National Day\",           Month.AUG,   1);\n+        new HolidayMonthDay(\"Taiwan Constitution Day\",      Month.DEC,  25);\n+        new HolidayMonthDay(\"Taiwan National Day\",          Month.OCT,  10);\n+        new HolidayMonthDay(\"Taiwan Peace Day\",             Month.FEB,  28);\n+        new HolidayMonthDay(\"Taiwan Retrocession\",          Month.OCT,  25);\n+        new HolidayMonthDay(\"Taiwan Woman Day\",             Month.APR,   4);\n+        new HolidayMonthDay(\"Taiwan Youth Day\",             Month.MAR,  29);\n+        new HolidayMonthDay(\"Thailand Constitution Day\",    Month.DEC,  10);\n+        new HolidayMonthDay(\"Thailand Crowning Day\",        Month.MAY,   5);\n+        new HolidayMonthDay(\"Thailand King Day\",            Month.DEC,   5);\n+        new HolidayMonthDay(\"Thailand Queen Day\",           Month.AUG,  12);\n+        new HolidayWeekday(\"Thanksgiving Day\",              Month.NOV,  22,  Weekday.THU);\n+        new HolidayWeekday(\"Thanksgiving Friday\",           Month.NOV,  23,  Weekday.FRI);\n+        new HolidayMonthDay(\"Tiradentes\",                   Month.APR,  21);\n+        new HolidayMonthDay(\"Transfiguration I\",            Month.AUG,   4);\n+        new HolidayMonthDay(\"Transfiguration II\",           Month.AUG,   5);\n+        new HolidayMonthDay(\"Transfiguration III\",          Month.AUG,   6);\n+        new HolidayMonthDay(\"Turkey Children & Sovereign\",  Month.APR,  23);\n+        new HolidayMonthDay(\"Turkey Republic Day\",          Month.OCT,  29);\n+        new HolidayMonthDay(\"Turkey Victory Day\",           Month.AUG,  30);\n+        new HolidayMonthDay(\"Turkey Youth & Sports\",        Month.MAY,  19);\n+        new HolidayMonthDay(\"United Nation Day\",            Month.OCT,  24);\n+        new HolidayWeekday(\"USA Columbus Day\",              Month.OCT,   8,  Weekday.MON);\n+        new HolidayMonthDay(\"USA Flag Day\",                 Month.JUN,   1);\n+        new HolidayWeekday(\"USA Labor Day\",                 Month.SEP,   1,  Weekday.MON);\n+        new HolidayWeekday(\"USA Memorial Day\",              Month.MAY,  25,  Weekday.MON);\n+        new HolidayMonthDay(\"USA Veterans Day\",             Month.NOV,  11);\n+        new HolidayMonthDay(\"Venezuela Independence\",       Month.JUL,   5);\n+        new HolidayMonthDay(\"Venezuela Independence II\",    Month.APR,  19);\n+        new HolidayEquinox(\"Vernal Equinox\",                true, 0);\n+        new HolidayEquinox(\"Vernal Equinox II\",             true, 1);\n+        new HolidayMonthDay(\"Waitangi Day\",                 Month.FEB,   6);\n+        new HolidayIslamic(\"Wesak Day\",                      42);\n+        new HolidayMonthDay(\"Zimbabwe Armed Forces Day\",    Month.AUG,  12);\n+        new HolidayMonthDay(\"Zimbabwe Heroes Day\",          Month.AUG,  11);\n+        new HolidayMonthDay(\"Zimbabwe Independence\",        Month.APR,  18);\n+        new HolidayMonthDay(\"Zimbabwe Public Holiday\",      Month.AUG,  13);\n+        new HolidayMonthDay(\"Zimbabwe Unity Day\",           Month.DEC,  22);\n+    }\n+\n+    /**\n+     * Returns the class used to reference choices.\n+     * @return Choice reference class.\n+     */\n+    public static Class klass() {\n+        return RawHolidayChoice.class;\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Field Variables & Constructor\n+\n+    /**\n+     * Invalid constructor to choice list.\n+     */\n+    private RawHolidayChoiceImpl() {\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Get & Set Methods\n+\n+    /**\n+     * Returns the choice list for this implementation.\n+     * @return Choice list.\n+     */\n+    public static ChoiceList choices() {\n+        return _choices;\n+    }\n+}\n--- /dev/null\n+++ b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Weekday.java\n+/*\n+ *  Copyright 2001-2005 Stephen Colebourne\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.joda.time.contrib.holiday.currency;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * This enumeration is for the weekdays of a week.\n+ *\n+ * @author Scott R. Duchin\n+ */\n+public enum Weekday {\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Static Variables & Methods\n+\n+    /**\n+     * Defines the seven weekdays.\n+     */\n+    SUN(1, true), MON(2, false), TUE(3, false), WED(4, false), THU(5, false), FRI(6, false), SAT(7, true);\n+\n+    // static variables\n+    private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };\n+    private static Map<String, Weekday> _names = new HashMap<String, Weekday>(7); // lower case names to weekdays\n+\n+    /**\n+     * Numeric value representing number of days in the week.\n+     */\n+    public static int DAYS_PER_WEEK = 7;\n+\n+    /**\n+     * Array of weekday full names.\n+     */\n+    private static final String[] FULL_NAME = {\n+        null,\n+        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"\n+    };\n+\n+    static {\n+        _names.put(\"Sunday\",    Weekday.SUN);\n+        _names.put(\"Monday\",    Weekday.MON);\n+        _names.put(\"Tuesday\",   Weekday.TUE);\n+        _names.put(\"Wednesday\", Weekday.WED);\n+        _names.put(\"Thursday\",  Weekday.THU);\n+        _names.put(\"Friday\",    Weekday.FRI);\n+        _names.put(\"Saturday\",  Weekday.SAT);\n+    }\n+\n+    /**\n+     * Returns the weekday associated with the index.\n+     * @param index Index of the weekday (1...7).\n+     * @return Associated weekday.\n+     */\n+    public static Weekday weekday(int index) {\n+        return _weekdays[index];\n+    }\n+\n+    /**\n+     * Returns the weekday associated with the name.\n+     * @param str Weekday name.\n+     * @return Associated weekday; <code>null</code> if invalid string.\n+     */\n+    public static Weekday weekday(String str) {\n+        Weekday weekday;\n+        if (str.length() == 3) {\n+            try {\n+                weekday = Enum.valueOf(Weekday.class, str.toUpperCase());\n+            } catch (IllegalArgumentException iae) {\n+                weekday = null;\n+            }\n+        } else {\n+            weekday = _names.get(str.toLowerCase());\n+        }\n+        return weekday;\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Field Variables & Constructor\n+\n+    // private field variables\n+    private final boolean               _isWeekend;         // true if weekend; false otherwise\n+    private final int                   _weekday;           // index of the weekday\n+\n+    /**\n+     * Constructor.\n+     * @param   weekday     Weekday index.\n+     * @param   isWeekend   <code>true</code> if weekend; <code>false</code> otherwise.\n+     */\n+    private Weekday(int weekday, boolean isWeekend) {\n+        _weekday = weekday;\n+        _isWeekend = isWeekend;\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Business Logic\n+\n+    /**\n+     * Indicates if day is a weekday.\n+     * @return  <code>true</code> if weekday; <code>false</code> if weekend.\n+     */\n+    public boolean isWeekday() {\n+        return ! _isWeekend;\n+    }\n+\n+    /**\n+     * Indicates if day is a weekend.\n+     * @return  <code>true</code> if weekend; <code>false</code> if weekday.\n+     */\n+    public boolean isWeekend() {\n+        return _isWeekend;\n+    }\n+\n+    /**\n+     * Returns a string representation of the weekday.\n+     * @return Weekday abbreviation.\n+     */\n+    public String toString() {\n+        return name();\n+    }\n+\n+///////////////////////////////////////////////////////////////////////////////////////////////////\n+// Get & Set Methods\n+\n+    /**\n+     * Returns the weekday abbreviated name.\n+     * @return Weekday abbreviation (SUN, MON, ..., SAT).\n+     */\n+    public String getAbbrev() {\n+        return name();\n+    }\n+\n+    /**\n+     * Returns the weekday full name.\n+     * @return Weekday name (Sunday, Monday, ..., Saturday).\n+     */\n+    public String getFullName() {\n+        return FULL_NAME[_weekday];\n+    }\n+\n+    /**\n+     * Returns the weekday index.\n+     * @return Index of the weekday (1...7).\n+     */\n+    public int getValue() {\n+        return _weekday;\n+    }\n+}", "timestamp": 1131284811, "metainfo": ""}