{"sha": "d9405124454ad8de43129ef86b959418a40c732d", "log": "Javadoc fixes  ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/LocalDate.java\n+++ b/JodaTime/src/java/org/joda/time/LocalDate.java\n      * include ReadableInstant, String, Calendar and Date.\n      *\n      * @param instant  the datetime object\n-     * @param zone  the time zone\n      * @throws IllegalArgumentException if the instant is invalid\n      */\n     public LocalDate(Object instant) {\n      * Instead, this method returns a new instance with the value of\n      * year of century changed.\n      *\n-     * @param year of century  the year of century to set\n+     * @param yearOfCentury  the year of century to set\n      * @return a copy of this object with the field set\n      * @throws IllegalArgumentException if the value is invalid\n      */\n      * <pre>\n      * LocalDate dt = new LocalDate(1972, 12, 3);\n      * LocalDate dt1920 = dt.year().withValue(1920);\n+     * </pre>\n      * <p>\n      * LocalDate.Propery itself is thread-safe and immutable, as well as the\n      * LocalDate being operated on.\n--- a/JodaTime/src/java/org/joda/time/LocalDateTime.java\n+++ b/JodaTime/src/java/org/joda/time/LocalDateTime.java\n      * Instead, this method returns a new instance with the value of\n      * year of century changed.\n      *\n-     * @param year of century  the year of century to set\n+     * @param yearOfCentury  the year of century to set\n      * @return a copy of this object with the field set\n      * @throws IllegalArgumentException if the value is invalid\n      */\n      * <pre>\n      * LocalDateTime dt = new LocalDateTime(1972, 12, 3, 0, 0, 0, 0);\n      * LocalDateTime dt1920 = dt.year().setCopy(1920);\n+     * </pre>\n      * <p>\n      * LocalDateTime.Propery itself is thread-safe and immutable, as well as the\n      * LocalDateTime being operated on.\n--- a/JodaTime/src/java/org/joda/time/LocalTime.java\n+++ b/JodaTime/src/java/org/joda/time/LocalTime.java\n      * <p>\n      * This method is typically used to add complex period instances.\n      * Adding one field is best achieved using methods\n-     * like {@link #plusYears(int)}.\n+     * like {@link #plusHours(int)}.\n      * \n      * @param period  the period to add to this one, null means zero\n      * @return a copy of this time with the period added\n      * <p>\n      * This method is typically used to subtract complex period instances.\n      * Subtracting one field is best achieved using methods\n-     * like {@link #minusYears(int)}.\n+     * like {@link #minusHours(int)}.\n      * \n      * @param period  the period to reduce this instant by\n      * @return a copy of this time with the period taken away\n      * <pre>\n      * DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);\n      * DateTime dt1920 = dt.year().setCopy(1920);\n+     * </pre>\n      * <p>\n      * LocalTime.Propery itself is thread-safe and immutable, as well as the\n      * LocalTime being operated on.", "timestamp": 1142789793, "metainfo": ""}