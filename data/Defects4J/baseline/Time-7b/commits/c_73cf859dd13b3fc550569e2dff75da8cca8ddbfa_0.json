{"sha": "73cf859dd13b3fc550569e2dff75da8cca8ddbfa", "log": "Javadoc  ", "commit": "\n--- a/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java\n+++ b/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java\n     }\n \n     /**\n-     * Parses a datetime from the given text, returning a new DateTime.\n+     * Parses a date-time from the given text, returning a new DateTime.\n      * <p>\n      * The parse will use the zone and chronology specified on this formatter.\n      * <p>\n      * Otherwise the resulting DateTime will have the zone of this formatter,\n      * but the parsed zone may have caused the time to be adjusted.\n      *\n-     * @param text  the text to parse\n-     * @return parsed value in a DateTime object\n+     * @param text  the text to parse, not null\n+     * @return the parsed date-time, never null\n      * @throws UnsupportedOperationException if parsing is not supported\n      * @throws IllegalArgumentException if the text to parse is invalid\n      */\n     }\n \n     /**\n-     * Parses a datetime from the given text, returning a new MutableDateTime.\n+     * Parses a date-time from the given text, returning a new MutableDateTime.\n      * <p>\n      * The parse will use the zone and chronology specified on this formatter.\n      * <p>\n      * Otherwise the resulting DateTime will have the zone of this formatter,\n      * but the parsed zone may have caused the time to be adjusted.\n      *\n-     * @param text  the text to parse\n-     * @return parsed value in a MutableDateTime object\n+     * @param text  the text to parse, not null\n+     * @return the parsed date-time, never null\n      * @throws UnsupportedOperationException if parsing is not supported\n      * @throws IllegalArgumentException if the text to parse is invalid\n      */", "timestamp": 1289648002, "metainfo": ""}