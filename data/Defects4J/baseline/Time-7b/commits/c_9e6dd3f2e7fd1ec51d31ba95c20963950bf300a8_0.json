{"sha": "9e6dd3f2e7fd1ec51d31ba95c20963950bf300a8", "log": "Property constructor is private.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateMidnight.java\n+++ b/JodaTime/src/java/org/joda/time/DateMidnight.java\n  * Note that midnight is defined as 00:00, which is at the very start of a day.\n  * <p>\n  * This class does not represent a day, but the millisecond instant at midnight.\n- * If you need a class that represnts the whole day, then an {@link Interval} or\n- * a {@link YearMonthDay} may be more suitable.\n+ * If you need a class that represents the whole day, then an {@link Interval} or\n+ * a {@link org.joda.time.partial.YearMonthDay YearMonthDay} may be more suitable.\n  * <p>\n  * This class uses a Chronology internally. The Chronology determines how the\n  * millisecond instant value is converted into the date time fields.\n     }\n \n     /**\n-     * DateTimeFieldProperty binds a DateMidnight to a DateTimeField allowing powerful\n+     * DateMidnight.Property binds a DateMidnight to a DateTimeField allowing powerful\n      * datetime functionality to be easily accessed.\n      * <p>\n      * The simplest use of this class is as an alternative get method, here used to\n          * @param instant  the instant to set\n          * @param field  the field to use\n          */\n-        public Property(DateMidnight instant, DateTimeField field) {\n+        Property(DateMidnight instant, DateTimeField field) {\n             super();\n             iInstant = instant;\n             iField = field;", "timestamp": 1089868584, "metainfo": ""}