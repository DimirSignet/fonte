{"sha": "68f5265689941b2a3d2251cba5dcec557ef8f7cb", "log": "Help tests compile on JDK1.5 without warnings   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java\n+++ b/JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java\n     public int getLeastMaximum(int field) {\n         return 0;\n     }\n-    public int compareTo(Object arg0) {\n-        return 0;\n-    }\n-    public int compareTo(Calendar arg0) {\n-        return 0;\n-    }\n-    \n+\n }\n--- a/JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestConverterManager.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestConverterManager.java\n         Class cls = ConverterManager.class;\n         assertEquals(true, Modifier.isPublic(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestDateConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestDateConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestLongConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestLongConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestNullConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestNullConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/convert/TestStringConverter.java\n+++ b/JodaTime/src/test/org/joda/time/convert/TestStringConverter.java\n         assertEquals(false, Modifier.isProtected(cls.getModifiers()));\n         assertEquals(false, Modifier.isPrivate(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isProtected(con.getModifiers()));\n         \n--- a/JodaTime/src/test/org/joda/time/tz/TestUTCProvider.java\n+++ b/JodaTime/src/test/org/joda/time/tz/TestUTCProvider.java\n         Class cls = UTCProvider.class;\n         assertEquals(true, Modifier.isPublic(cls.getModifiers()));\n         \n-        Constructor con = cls.getDeclaredConstructor(null);\n+        Constructor con = cls.getDeclaredConstructor((Class[]) null);\n         assertEquals(1, cls.getDeclaredConstructors().length);\n         assertEquals(true, Modifier.isPublic(con.getModifiers()));\n     }", "timestamp": 1133909026, "metainfo": ""}