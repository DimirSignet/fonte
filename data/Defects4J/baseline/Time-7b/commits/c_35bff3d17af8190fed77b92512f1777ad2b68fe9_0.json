{"sha": "35bff3d17af8190fed77b92512f1777ad2b68fe9", "log": "Fix test case", "commit": "\n--- a/src/test/java/org/joda/time/TestMutableDateTime_Basics.java\n+++ b/src/test/java/org/joda/time/TestMutableDateTime_Basics.java\n /*\n- *  Copyright 2001-2009 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n     }\n \n     class MockEqualsChronology extends BaseChronology {\n+        private static final long serialVersionUID = 1L;\n         public boolean equals(Object obj) {\n             return obj instanceof MockEqualsChronology;\n         }\n     }\n \n     public void testToString_DTFormatter() {\n-        DateMidnight test = new DateMidnight(TEST_TIME_NOW);\n-        assertEquals(\"2002 00\", test.toString(DateTimeFormat.forPattern(\"yyyy HH\")));\n-        assertEquals(\"2002-06-09T00:00:00.000+01:00\", test.toString((DateTimeFormatter) null));\n+        MutableDateTime test = new MutableDateTime(TEST_TIME_NOW);\n+        assertEquals(\"2002 01\", test.toString(DateTimeFormat.forPattern(\"yyyy HH\")));\n+        assertEquals(\"2002-06-09T01:00:00.000+01:00\", test.toString((DateTimeFormatter) null));\n     }\n \n     //-----------------------------------------------------------------------\n         assertEquals(test.secondOfMinute(), test.property(DateTimeFieldType.secondOfMinute()));\n         assertEquals(test.millisOfSecond(), test.property(DateTimeFieldType.millisOfSecond()));\n         DateTimeFieldType bad = new DateTimeFieldType(\"bad\") {\n+            private static final long serialVersionUID = 1L;\n             public DurationFieldType getDurationType() {\n                 return DurationFieldType.weeks();\n             }", "timestamp": 1374317362, "metainfo": ""}