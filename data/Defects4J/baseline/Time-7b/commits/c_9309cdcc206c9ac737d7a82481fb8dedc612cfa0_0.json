{"sha": "9309cdcc206c9ac737d7a82481fb8dedc612cfa0", "log": "Added   ", "commit": "\n--- /dev/null\n+++ b/JodaTime/src/java/org/joda/time/format/DurationFormat.java\n+/*\n+ * Joda Software License, Version 1.0\n+ *\n+ *\n+ * Copyright (c) 2001-03 Stephen Colebourne.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Joda project (http://www.joda.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The name \"Joda\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact licence@joda.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Joda\",\n+ *    nor may \"Joda\" appear in their name, without prior written\n+ *    permission of the Joda project.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Joda project and was originally\n+ * created by Stephen Colebourne <scolebourne@joda.org>. For more\n+ * information on the Joda project, please see <http://www.joda.org/>.\n+ */\n+package org.joda.time.format;\n+\n+import java.util.Locale;\n+\n+/**\n+ * DurationFormat provides basic printing and parsing capabilities for\n+ * durations. Eventually, this class will also support localization.\n+ * <p>\n+ * DurationFormat is thread-safe and immutable, and the formatters it returns\n+ * are as well.\n+ *\n+ * @author Brian S O'Neill\n+ * @since 1.0\n+ * @see ISODurationFormat\n+ * @see DurationFormatterBuilder\n+ */\n+public class DurationFormat {\n+\n+    private static final DurationFormat INSTANCE = new DurationFormat();\n+\n+    /**\n+     * Gets a formatter provider that works using the default locale.\n+     * \n+     * @return a format provider\n+     */\n+    public static DurationFormat getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    /**\n+     * Gets a formatter provider that works using the given locale.\n+     * \n+     * @param locale  the Locale to use, null for default locale\n+     * @return a format provider\n+     */\n+    public static DurationFormat getInstance(Locale locale) {\n+        return INSTANCE;\n+    }\n+\n+    private final DurationFormatter iDefault;\n+\n+    private DurationFormat() {\n+        iDefault = new DurationFormatterBuilder()\n+            .appendYears()\n+            .appendSuffix(\" year\", \" years\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendMonths()\n+            .appendSuffix(\" month\", \" months\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendWeeks()\n+            .appendSuffix(\" week\", \" weeks\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendDays()\n+            .appendSuffix(\" day\", \" days\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendHours()\n+            .appendSuffix(\" hour\", \" hours\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendMinutes()\n+            .appendSuffix(\" minute\", \" minutes\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendSeconds()\n+            .appendSuffix(\" second\", \" seconds\")\n+            .appendSeparator(\", \", \" and \")\n+            .appendMillis()\n+            .appendSuffix(\" millisecond\", \" milliseconds\")\n+            .setAlternate(\"0 milliseconds\")\n+            .toFormatter();\n+    }\n+\n+    /**\n+     * Returns the default DurationFormatter.\n+     */\n+    public DurationFormatter getDefault() {\n+        return iDefault;\n+    }\n+}", "timestamp": 1071802940, "metainfo": ""}