{"sha": "41bf694486c947573079a315f7f44fae1b0041f3", "log": "Fixes from testing   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/convert/AbstractConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/AbstractConverter.java\n      * @return a debugging string\n      */\n     public String toString() {\n-        return \"Converter[\" + getSupportedType() + \"]\";\n+        return \"Converter[\" + (getSupportedType() == null ? \"null\" : getSupportedType().getName()) + \"]\";\n     }\n \n }\n--- a/JodaTime/src/java/org/joda/time/convert/CalendarConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/CalendarConverter.java\n      * @return the chronology, never null\n      */\n     public Chronology getChronology(Object object, DateTimeZone zone) {\n-        if (object instanceof GregorianCalendar) {\n+        if (object.getClass().getName().endsWith(\".BuddhistCalendar\")) {\n+            return BuddhistChronology.getInstance(zone);\n+        } else if (object instanceof GregorianCalendar) {\n             GregorianCalendar gc = (GregorianCalendar) object;\n             long cutover = gc.getGregorianChange().getTime();\n             if (cutover == Long.MIN_VALUE) {\n             } else {\n                 return GJChronology.getInstance(zone, cutover, 4);\n             }\n-        } else if (object.getClass().getName().endsWith(\".BuddhistCalendar\")) {\n-            return BuddhistChronology.getInstance(zone);\n         } else {\n             return ISOChronology.getInstance(zone);\n         }\n--- a/JodaTime/src/java/org/joda/time/convert/LongConverter.java\n+++ b/JodaTime/src/java/org/joda/time/convert/LongConverter.java\n \n /**\n  * LongConverter converts a Long to milliseconds in the ISOChronology.\n+ * The duration type created is the millis type.\n  *\n  * @author Stephen Colebourne\n  * @author Brian S O'Neill\n      * @throws ClassCastException if the object is invalid\n      */\n     public DurationType getDurationType(Object object) {\n-        return DurationType.getAverageYearMonthType();\n+        return DurationType.getMillisType();\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1089152830, "metainfo": ""}