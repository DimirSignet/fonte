{"sha": "08552fe8aa63614fb389469c047a39c20c9079a8", "log": "Added getDuration(DurationType); default duration type is average-year-month.   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/AbstractInterval.java\n+++ b/JodaTime/src/java/org/joda/time/AbstractInterval.java\n     /**\n      * Gets the duration of this time interval.\n      * <p>\n-     * The duration returned will always be precise because it is relative to\n-     * a known date.\n+     * The duration returned will always be precise because it is relative to a\n+     * known date. If this interval was not specified with a precise duration\n+     * type, then the duration type defaults to ISO average-year-month type.\n      *\n      * @return the duration of the time interval\n      */\n     public final Duration getDuration() {\n         if (iDuration == null) {\n-            iDuration = new Duration(DurationType.getPreciseYearMonthType(),\n-                                     getEndMillis() - getStartMillis());\n+            return getDuration(null);\n         }\n         return iDuration;\n+    }\n+\n+    /** \n+     * Gets the duration of this time interval.\n+     *\n+     * @param type the requested type of the duration\n+     * @return the duration of the time interval\n+     */\n+    public final Duration getDuration(DurationType type) {\n+        if (type == null) {\n+            type = DurationType.getAverageYearMonthType();\n+        }\n+        Duration duration = iDuration;\n+        if (duration == null) {\n+            if (type.isPrecise()) {\n+                duration = new Duration(type, getEndMillis() - getStartMillis());\n+                if (type.equals(DurationType.getAverageYearMonthType())) {\n+                    iDuration = duration;\n+                }\n+            } else {\n+                duration = new Duration(type, getStartInstant(), getEndInstant());\n+            }\n+        }\n+        return duration;\n     }\n \n     //-----------------------------------------------------------------------\n      *  millisecond instant from 1970-01-01T00:00:00Z\n      */\n     protected void setStartMillis(long millisInstant) {\n-        iStartMillis = millisInstant;\n-        iStartInstant = null;\n-        iDuration = null;\n+        if (millisInstant != iStartMillis) {\n+            iStartMillis = millisInstant;\n+            iStartInstant = null;\n+            iDuration = null;\n+        }\n     }\n \n     /** \n      *  millisecond instant from 1970-01-01T00:00:00Z\n      */\n     protected void setEndMillis(long millisInstant) {\n-        iEndMillis = millisInstant;\n-        iEndInstant = null;\n-        iDuration = null;\n+        if (millisInstant != iEndMillis) {\n+            iEndMillis = millisInstant;\n+            iEndInstant = null;\n+            iDuration = null;\n+        }\n     }\n \n     /**", "timestamp": 1080503617, "metainfo": ""}