{"sha": "8255f7e101451b5b7559122383513845314d2032", "log": "Add ability to compare comparators   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/DateTimeComparator.java\n+++ b/JodaTime/src/java/org/joda/time/DateTimeComparator.java\n     }\n \n     /**\n+     * Compares this comparator to another.\n+     * \n+     * @param object  the object to compare to\n+     * @return true if equal\n+     */\n+    public boolean equals(Object object) {\n+        if (object instanceof DateTimeComparator) {\n+            DateTimeComparator other = (DateTimeComparator) object;\n+            if (getLowerLimit() == null) {\n+            }\n+            return (iLowerLimit == other.getLowerLimit() ||\n+                    (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) &&\n+                   (iUpperLimit == other.getUpperLimit() ||\n+                    (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())));\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Gets a suitable hashcode.\n+     * \n+     * @return the hashcode\n+     */\n+    public int hashCode() {\n+        return (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) +\n+               (iUpperLimit == null ? 0 : iUpperLimit.hashCode());\n+    }\n+\n+    /**\n      * Gets a debugging string.\n      * \n      * @return a debugging string", "timestamp": 1090308799, "metainfo": ""}