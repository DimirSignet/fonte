{"sha": "f3f288e8ed6c8286d933421502ec8a18b16cb354", "log": "Add tests   ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java\n+++ b/JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java\n         assertEquals(\"PT5H6M7.008S\", ISOPeriodFormat.getInstance().standard().print(TIME_PERIOD));\n     }\n \n+    //-----------------------------------------------------------------------\n+    public void testFormatAlternate() {\n+        Period p = new Period(1, 2, 3, 4, 5, 6 ,7, 8);\n+        assertEquals(\"P00010204T050607.008\", ISOPeriodFormat.getInstance().alternate().print(p));\n+        p = new Period(1, 2, 3, 4, 5, 6 ,7, 0);\n+        assertEquals(\"P00010204T050607\", ISOPeriodFormat.getInstance().alternate().print(p));\n+        \n+        p = new Period(0);\n+        assertEquals(\"P00000000T000000\", ISOPeriodFormat.getInstance().alternate().print(p));\n+        p = new Period(0, PeriodType.getAllType().withMillisRemoved().withSecondsRemoved());\n+        assertEquals(\"P00000000T000000\", ISOPeriodFormat.getInstance().alternate().print(p));\n+        \n+        assertEquals(\"P00010004T050607.008\", ISOPeriodFormat.getInstance().alternate().print(YEAR_DAY_PERIOD));\n+        assertEquals(\"P00000000T000000\", ISOPeriodFormat.getInstance().alternate().print(EMPTY_YEAR_DAY_PERIOD));\n+        assertEquals(\"P00010204T000000\", ISOPeriodFormat.getInstance().alternate().print(DATE_PERIOD));\n+        assertEquals(\"P00000000T050607.008\", ISOPeriodFormat.getInstance().alternate().print(TIME_PERIOD));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testFormatAlternateExtended() {\n+        Period p = new Period(1, 2, 3, 4, 5, 6 ,7, 8);\n+        assertEquals(\"P0001-02-04T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtended().print(p));\n+        p = new Period(1, 2, 3, 4, 5, 6 ,7, 0);\n+        assertEquals(\"P0001-02-04T05:06:07\", ISOPeriodFormat.getInstance().alternateExtended().print(p));\n+        \n+        p = new Period(0);\n+        assertEquals(\"P0000-00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtended().print(p));\n+        p = new Period(0, PeriodType.getAllType().withMillisRemoved().withSecondsRemoved());\n+        assertEquals(\"P0000-00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtended().print(p));\n+        \n+        assertEquals(\"P0001-00-04T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtended().print(YEAR_DAY_PERIOD));\n+        assertEquals(\"P0000-00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtended().print(EMPTY_YEAR_DAY_PERIOD));\n+        assertEquals(\"P0001-02-04T00:00:00\", ISOPeriodFormat.getInstance().alternateExtended().print(DATE_PERIOD));\n+        assertEquals(\"P0000-00-00T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtended().print(TIME_PERIOD));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testFormatAlternateWithWeeks() {\n+        Period p = new Period(1, 2, 3, 4, 5, 6 ,7, 8);\n+        assertEquals(\"P0001W0304T050607.008\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(p));\n+        p = new Period(1, 2, 3, 4, 5, 6 ,7, 0);\n+        assertEquals(\"P0001W0304T050607\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(p));\n+        \n+        p = new Period(0);\n+        assertEquals(\"P0000W0000T000000\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(p));\n+        p = new Period(0, PeriodType.getAllType().withMillisRemoved().withSecondsRemoved());\n+        assertEquals(\"P0000W0000T000000\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(p));\n+        \n+        assertEquals(\"P0001W0004T050607.008\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(YEAR_DAY_PERIOD));\n+        assertEquals(\"P0000W0000T000000\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(EMPTY_YEAR_DAY_PERIOD));\n+        assertEquals(\"P0001W0304T000000\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(DATE_PERIOD));\n+        assertEquals(\"P0000W0000T050607.008\", ISOPeriodFormat.getInstance().alternateWithWeeks().print(TIME_PERIOD));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testFormatAlternateExtendedWithWeeks() {\n+        Period p = new Period(1, 2, 3, 4, 5, 6 ,7, 8);\n+        assertEquals(\"P0001-W03-04T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(p));\n+        p = new Period(1, 2, 3, 4, 5, 6 ,7, 0);\n+        assertEquals(\"P0001-W03-04T05:06:07\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(p));\n+        \n+        p = new Period(0);\n+        assertEquals(\"P0000-W00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(p));\n+        p = new Period(0, PeriodType.getAllType().withMillisRemoved().withSecondsRemoved());\n+        assertEquals(\"P0000-W00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(p));\n+        \n+        assertEquals(\"P0001-W00-04T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(YEAR_DAY_PERIOD));\n+        assertEquals(\"P0000-W00-00T00:00:00\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(EMPTY_YEAR_DAY_PERIOD));\n+        assertEquals(\"P0001-W03-04T00:00:00\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(DATE_PERIOD));\n+        assertEquals(\"P0000-W00-00T05:06:07.008\", ISOPeriodFormat.getInstance().alternateExtendedWithWeeks().print(TIME_PERIOD));\n+    }\n+\n }", "timestamp": 1094247553, "metainfo": ""}