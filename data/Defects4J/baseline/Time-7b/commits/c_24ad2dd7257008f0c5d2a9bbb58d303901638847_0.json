{"sha": "24ad2dd7257008f0c5d2a9bbb58d303901638847", "log": "Clarify values passed into constructors", "commit": "\n--- a/src/main/java/org/joda/time/DateMidnight.java\n+++ b/src/main/java/org/joda/time/DateMidnight.java\n      * The constructed object will have a local time of midnight.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n      */\n     public DateMidnight(int year, int monthOfYear, int dayOfMonth) {\n         super(year, monthOfYear, dayOfMonth, 0, 0, 0, 0);\n      * If the specified time zone is null, the default zone is used.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n      * @param zone  the time zone, null means default time zone\n      */\n     public DateMidnight(int year, int monthOfYear, int dayOfMonth, DateTimeZone zone) {\n      * If the chronology is null, <code>ISOChronology</code>\n      * in the default time zone is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      */\n     public DateMidnight(int year, int monthOfYear, int dayOfMonth, Chronology chronology) {\n--- a/src/main/java/org/joda/time/DateTime.java\n+++ b/src/main/java/org/joda/time/DateTime.java\n      * using <code>ISOChronology</code> in the default time zone.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n      * @since 2.0\n      */\n     public DateTime(\n      * If the specified time zone is null, the default zone is used.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n      * @param zone  the time zone, null means default time zone\n      * @since 2.0\n      */\n      * If the chronology is null, <code>ISOChronology</code>\n      * in the default time zone is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n+     * @param hourOfDay  the hour of the day, valid values defined by the chronology\n+     * @param minuteOfHour  the minute of the hour, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      * @since 2.0\n      */\n      * using <code>ISOChronology</code> in the default time zone.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n      * @since 2.0\n      */\n     public DateTime(\n      * If the specified time zone is null, the default zone is used.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n      * @param zone  the time zone, null means default time zone\n      * @since 2.0\n      */\n      * If the chronology is null, <code>ISOChronology</code>\n      * in the default time zone is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n+     * @param hourOfDay  the hour of the day, valid values defined by the chronology\n+     * @param minuteOfHour  the minute of the hour, valid values defined by the chronology\n+     * @param secondOfMinute  the second of the minute, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      * @since 2.0\n      */\n      * using <code>ISOChronology</code> in the default time zone.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n+     * @param millisOfSecond  the millisecond of the second, from 0 to 999\n      */\n     public DateTime(\n             int year,\n      * If the specified time zone is null, the default zone is used.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n+     * @param millisOfSecond  the millisecond of the second, from 0 to 999\n      * @param zone  the time zone, null means default time zone\n      */\n     public DateTime(\n      * If the chronology is null, <code>ISOChronology</code>\n      * in the default time zone is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n+     * @param hourOfDay  the hour of the day, valid values defined by the chronology\n+     * @param minuteOfHour  the minute of the hour, valid values defined by the chronology\n+     * @param secondOfMinute  the second of the minute, valid values defined by the chronology\n+     * @param millisOfSecond  the millisecond of the second, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      */\n     public DateTime(\n--- a/src/main/java/org/joda/time/LocalDate.java\n+++ b/src/main/java/org/joda/time/LocalDate.java\n      * using <code>ISOChronology</code>.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n      */\n     public LocalDate(\n             int year,\n      * <p>\n      * If the chronology is null, <code>ISOChronology</code> is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      */\n     public LocalDate(\n--- a/src/main/java/org/joda/time/LocalDateTime.java\n+++ b/src/main/java/org/joda/time/LocalDateTime.java\n      * using <code>ISOChronology</code>.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n      */\n     public LocalDateTime(\n             int year,\n      * using <code>ISOChronology</code>.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n      */\n     public LocalDateTime(\n             int year,\n      * using <code>ISOChronology</code>.\n      *\n      * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param monthOfYear  the month of the year, from 1 to 12\n+     * @param dayOfMonth  the day of the month, from 1 to 31\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n+     * @param millisOfSecond  the millisecond of the second, from 0 to 999\n      */\n     public LocalDateTime(\n             int year,\n      * <p>\n      * If the chronology is null, <code>ISOChronology</code> is used.\n      *\n-     * @param year  the year\n-     * @param monthOfYear  the month of the year\n-     * @param dayOfMonth  the day of the month\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param year  the year, valid values defined by the chronology\n+     * @param monthOfYear  the month of the year, valid values defined by the chronology\n+     * @param dayOfMonth  the day of the month, valid values defined by the chronology\n+     * @param hourOfDay  the hour of the day, valid values defined by the chronology\n+     * @param minuteOfHour  the minute of the hour, valid values defined by the chronology\n+     * @param secondOfMinute  the second of the minute, valid values defined by the chronology\n+     * @param millisOfSecond  the millisecond of the second, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      */\n     public LocalDateTime(\n--- a/src/main/java/org/joda/time/LocalTime.java\n+++ b/src/main/java/org/joda/time/LocalTime.java\n      * Constructs an instance set to the specified time\n      * using <code>ISOChronology</code>.\n      *\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n      */\n     public LocalTime(\n             int hourOfDay,\n      * Constructs an instance set to the specified time\n      * using <code>ISOChronology</code>.\n      *\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n      */\n     public LocalTime(\n             int hourOfDay,\n      * Constructs an instance set to the specified time\n      * using <code>ISOChronology</code>.\n      *\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param hourOfDay  the hour of the day, from 0 to 23\n+     * @param minuteOfHour  the minute of the hour, from 0 to 59\n+     * @param secondOfMinute  the second of the minute, from 0 to 59\n+     * @param millisOfSecond  the millisecond of the second, from 0 to 999\n      */\n     public LocalTime(\n             int hourOfDay,\n      * <p>\n      * If the chronology is null, <code>ISOChronology</code> is used.\n      *\n-     * @param hourOfDay  the hour of the day\n-     * @param minuteOfHour  the minute of the hour\n-     * @param secondOfMinute  the second of the minute\n-     * @param millisOfSecond  the millisecond of the second\n+     * @param hourOfDay  the hour of the day, valid values defined by the chronology\n+     * @param minuteOfHour  the minute of the hour, valid values defined by the chronology\n+     * @param secondOfMinute  the second of the minute, valid values defined by the chronology\n+     * @param millisOfSecond  the millisecond of the second, valid values defined by the chronology\n      * @param chronology  the chronology, null means ISOChronology in default zone\n      */\n     public LocalTime(", "timestamp": 1342695969, "metainfo": ""}