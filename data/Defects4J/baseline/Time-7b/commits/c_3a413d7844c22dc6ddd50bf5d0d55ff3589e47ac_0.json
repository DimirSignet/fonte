{"sha": "3a413d7844c22dc6ddd50bf5d0d55ff3589e47ac", "log": "Days.daysBetween fails for MonthDay  Problems around leap year Fixes #22", "commit": "\n--- a/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java\n+++ b/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java\n /*\n- *  Copyright 2001-2011 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n \n     /** Serialization version. */\n     private static final long serialVersionUID = 9386874258972L;\n+    /** The start of 1972. */\n+    private static final long START_1972 = 2L * 365L * 86400L * 1000L;\n \n     /** The period in the units of this period. */\n     private volatile int iPeriod;\n             throw new IllegalArgumentException(\"ReadablePartial objects must be contiguous\");\n         }\n         Chronology chrono = DateTimeUtils.getChronology(start.getChronology()).withUTC();\n-        int[] values = chrono.get(zeroInstance, chrono.set(start, 0L), chrono.set(end, 0L));\n+        int[] values = chrono.get(zeroInstance, chrono.set(start, START_1972), chrono.set(end, START_1972));\n         return values[0];\n     }\n \n--- a/src/test/java/org/joda/time/TestDays.java\n+++ b/src/test/java/org/joda/time/TestDays.java\n /*\n- *  Copyright 2001-2006 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n         assertEquals(6, Days.daysBetween(start, end2).getDays());\n     }\n \n-    public void testFactory_daysBetween_RPartial() {\n+    //-----------------------------------------------------------------------\n+    public void testFactory_daysBetween_RPartial_LocalDate() {\n         LocalDate start = new LocalDate(2006, 6, 9);\n         LocalDate end1 = new LocalDate(2006, 6, 12);\n         YearMonthDay end2 = new YearMonthDay(2006, 6, 15);\n         assertEquals(6, Days.daysBetween(start, end2).getDays());\n     }\n \n+    public void testFactory_daysBetween_RPartial_YearMonth() {\n+        YearMonth start1 = new YearMonth(2011, 1);\n+        YearMonth start2 = new YearMonth(2012, 1);\n+        YearMonth end1 = new YearMonth(2011, 3);\n+        YearMonth end2 = new YearMonth(2012, 3);\n+        \n+        assertEquals(59, Days.daysBetween(start1, end1).getDays());\n+        assertEquals(60, Days.daysBetween(start2, end2).getDays());\n+        \n+        assertEquals(-59, Days.daysBetween(end1, start1).getDays());\n+        assertEquals(-60, Days.daysBetween(end2, start2).getDays());\n+    }\n+\n+    public void testFactory_daysBetween_RPartial_MonthDay() {\n+        MonthDay start1 = new MonthDay(2, 1);\n+        MonthDay start2 = new MonthDay(2, 28);\n+        MonthDay end1 = new MonthDay(2, 28);\n+        MonthDay end2 = new MonthDay(2, 29);\n+        \n+        assertEquals(27, Days.daysBetween(start1, end1).getDays());\n+        assertEquals(28, Days.daysBetween(start1, end2).getDays());\n+        assertEquals(0, Days.daysBetween(start2, end1).getDays());\n+        assertEquals(1, Days.daysBetween(start2, end2).getDays());\n+        \n+        assertEquals(-27, Days.daysBetween(end1, start1).getDays());\n+        assertEquals(-28, Days.daysBetween(end2, start1).getDays());\n+        assertEquals(0, Days.daysBetween(end1, start2).getDays());\n+        assertEquals(-1, Days.daysBetween(end2, start2).getDays());\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testFactory_daysIn_RInterval() {\n         DateTime start = new DateTime(2006, 6, 9, 12, 0, 0, 0, PARIS);\n         DateTime end1 = new DateTime(2006, 6, 12, 12, 0, 0, 0, PARIS);\n         assertEquals(6, Days.daysIn(new Interval(start, end2)).getDays());\n     }\n \n+    //-----------------------------------------------------------------------\n     public void testFactory_standardDaysIn_RPeriod() {\n         assertEquals(0, Days.standardDaysIn((ReadablePeriod) null).getDays());\n         assertEquals(0, Days.standardDaysIn(Period.ZERO).getDays());\n--- a/src/test/java/org/joda/time/TestMonths.java\n+++ b/src/test/java/org/joda/time/TestMonths.java\n /*\n- *  Copyright 2001-2006 Stephen Colebourne\n+ *  Copyright 2001-2013 Stephen Colebourne\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n         assertEquals(6, Months.monthsBetween(start, end2).getMonths());\n     }\n \n-    public void testFactory_monthsBetween_RPartial() {\n+    //-------------------------------------------------------------------------\n+    public void testFactory_monthsBetween_RPartial_LocalDate() {\n         LocalDate start = new LocalDate(2006, 6, 9);\n         LocalDate end1 = new LocalDate(2006, 9, 9);\n         YearMonthDay end2 = new YearMonthDay(2006, 12, 9);\n         assertEquals(6, Months.monthsBetween(start, end2).getMonths());\n     }\n \n+    public void testFactory_monthsBetween_RPartial_YearMonth() {\n+        YearMonth start1 = new YearMonth(2011, 1);\n+        for (int i = 0; i < 6; i++) {\n+            YearMonth start2 = new YearMonth(2011 + i, 1);\n+            YearMonth end = new YearMonth(2011 + i, 3);\n+            assertEquals(i * 12 + 2, Months.monthsBetween(start1, end).getMonths());\n+            assertEquals(2, Months.monthsBetween(start2, end).getMonths());\n+        }\n+    }\n+\n+    public void testFactory_monthsBetween_RPartial_MonthDay() {\n+        MonthDay start = new MonthDay(2, 1);\n+        MonthDay end1 = new MonthDay(2, 28);\n+        MonthDay end2 = new MonthDay(2, 29);\n+        MonthDay end3 = new MonthDay(3, 1);\n+        \n+        assertEquals(0, Months.monthsBetween(start, end1).getMonths());\n+        assertEquals(0, Months.monthsBetween(start, end2).getMonths());\n+        assertEquals(1, Months.monthsBetween(start, end3).getMonths());\n+        \n+        assertEquals(0, Months.monthsBetween(end1, start).getMonths());\n+        assertEquals(0, Months.monthsBetween(end2, start).getMonths());\n+        assertEquals(-1, Months.monthsBetween(end3, start).getMonths());\n+    }\n+\n+    //-------------------------------------------------------------------------\n     public void testFactory_monthsIn_RInterval() {\n         DateTime start = new DateTime(2006, 6, 9, 12, 0, 0, 0, PARIS);\n         DateTime end1 = new DateTime(2006, 9, 9, 12, 0, 0, 0, PARIS);", "timestamp": 1371378506, "metainfo": ""}