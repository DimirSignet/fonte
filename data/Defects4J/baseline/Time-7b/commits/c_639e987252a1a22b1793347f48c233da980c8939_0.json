{"sha": "639e987252a1a22b1793347f48c233da980c8939", "log": "Fix tests caused by extracting chronologies to constants  ", "commit": "\n--- a/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java\n     private static final DateTimeZone LONDON = DateTimeZone.forID(\"Europe/London\");\n     private static final DateTimeZone NEWYORK = DateTimeZone.forID(\"America/New_York\");\n \n-    static {\n-        DateTimeZone.setDefault(LONDON);\n-    }\n-\n-    private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance();\n+    // the default time zone is set to LONDON in setUp()\n+    // we have to hard code LONDON here (instead of ISOChronology.getInstance() etc.)\n+    // as TestAll sets up a different time zone for better all-round testing\n+    private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance(LONDON);\n     private static final ISOChronology ISO_PARIS = ISOChronology.getInstance(PARIS);\n-    private static final GJChronology GJ_DEFAULT = GJChronology.getInstance();\n-    private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance();\n+    private static final GJChronology GJ_DEFAULT = GJChronology.getInstance(LONDON);\n+    private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance(LONDON);\n     private static final GregorianChronology GREGORIAN_PARIS = GregorianChronology.getInstance(PARIS);\n-    private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance();\n-    private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance();\n+    private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance(LONDON);\n+    private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance(LONDON);\n \n     long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + \n                      366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + \n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java\n     private static final DateTimeZone PARIS = DateTimeZone.forID(\"Europe/Paris\");\n     private static final DateTimeZone LONDON = DateTimeZone.forID(\"Europe/London\");\n \n-    static {\n-        DateTimeZone.setDefault(LONDON);\n-    }\n-\n+    // the default time zone is set to LONDON in setUp()\n+    // we have to hard code LONDON here (instead of ISOChronology.getInstance() etc.)\n+    // as TestAll sets up a different time zone for better all-round testing\n     private static final ISOChronology ISO_UTC = ISOChronology.getInstanceUTC();\n-    private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance();\n+    private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance(LONDON);\n     private static final ISOChronology ISO_PARIS = ISOChronology.getInstance(PARIS);\n-    private static final GJChronology GJ_DEFAULT = GJChronology.getInstance();\n-    private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance();\n+    private static final GJChronology GJ_DEFAULT = GJChronology.getInstance(LONDON);\n+    private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance(LONDON);\n     private static final GregorianChronology GREGORIAN_PARIS = GregorianChronology.getInstance(PARIS);\n     private static final BuddhistChronology BUDDHIST_UTC = BuddhistChronology.getInstanceUTC();\n-    private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance();\n-    private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance();\n+    private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance(LONDON);\n+    private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance(LONDON);\n     \n     long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + \n                      366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + ", "timestamp": 1146309385, "metainfo": ""}