{"sha": "5bb92d135b5ff9bf696af6fa92d406912af78c5d", "log": "DateTimeZone.getMillisKeepLocal The behaviour now retains the offset when changing zones where possible This affects DateTime.withZoneRetainFields and MutableDateTime.setZoneRetainFields  ", "commit": "\n--- a/JodaTime/src/main/java/org/joda/time/DateTimeZone.java\n+++ b/JodaTime/src/main/java/org/joda/time/DateTimeZone.java\n         if (newZone == this) {\n             return oldInstant;\n         }\n-        long instantLocal = oldInstant + getOffset(oldInstant);\n-        return instantLocal - newZone.getOffsetFromLocal(instantLocal);\n+        long instantLocal = convertUTCToLocal(oldInstant);\n+        return newZone.convertLocalToUTC(instantLocal, false, oldInstant);\n     }\n \n //    //-----------------------------------------------------------------------\n--- a/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java\n+++ b/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java\n         assertEquals(\"PT1M\", period.toString());\n     }\n \n+    public void testForum4013394_retainOffsetWhenRetainFields_sameOffsetsDifferentZones() {\n+        final DateTimeZone fromDTZ = DateTimeZone.forID(\"Europe/London\");\n+        final DateTimeZone toDTZ = DateTimeZone.forID(\"Europe/Lisbon\");\n+        DateTime baseBefore = new DateTime(2007, 10, 28, 1, 15, fromDTZ).minusHours(1);\n+        DateTime baseAfter = new DateTime(2007, 10, 28, 1, 15, fromDTZ);\n+        DateTime testBefore = baseBefore.withZoneRetainFields(toDTZ);\n+        DateTime testAfter = baseAfter.withZoneRetainFields(toDTZ);\n+        // toString ignores time-zone but includes offset\n+        assertEquals(baseBefore.toString(), testBefore.toString());\n+        assertEquals(baseAfter.toString(), testAfter.toString());\n+    }\n+\n     //-----------------------------------------------------------------------\n     //-----------------------------------------------------------------------\n     //-----------------------------------------------------------------------", "timestamp": 1296870773, "metainfo": ""}