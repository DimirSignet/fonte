{"sha": "feeee08603b5a3ed0871cd7d6985c825b71c3fc6", "log": "In ZonedChronology, fixed getting text values for fields from getAs[Short]Text(int value, Locale locale).   ", "commit": "\n--- a/JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java\n+++ b/JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java\n             return iField.getAsShortText(addOffset(instant), locale);\n         }\n \n+        public String getAsText(int fieldValue, Locale locale) {\n+            return iField.getAsText(fieldValue, locale);\n+        }\n+\n+        public String getAsShortText(int fieldValue, Locale locale) {\n+            return iField.getAsShortText(fieldValue, locale);\n+        }\n+\n         public long add(long instant, int value) {\n             int offset = getOffsetToAdd(instant);\n             instant = iField.add(instant + offset, value);\n--- a/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java\n         assertEquals(1, test.era().get());\n         assertEquals(\"1\", test.era().getAsString());\n         assertEquals(\"AD\", test.era().getAsText());\n+        assertEquals(\"AD\", test.era().getField().getAsText(1, Locale.ENGLISH));\n         assertEquals(\"ap. J.-C.\", test.era().getAsText(Locale.FRENCH));\n+        assertEquals(\"ap. J.-C.\", test.era().getField().getAsText(1, Locale.FRENCH));\n         assertEquals(\"AD\", test.era().getAsShortText());\n+        assertEquals(\"AD\", test.era().getField().getAsShortText(1, Locale.ENGLISH));\n         assertEquals(\"ap. J.-C.\", test.era().getAsShortText(Locale.FRENCH));\n+        assertEquals(\"ap. J.-C.\", test.era().getField().getAsShortText(1, Locale.FRENCH));\n         assertEquals(test.getChronology().eras(), test.era().getDurationField());\n         assertEquals(null, test.era().getRangeDurationField());\n         assertEquals(2, test.era().getMaximumTextLength(null));\n         assertEquals(6, test.monthOfYear().get());\n         assertEquals(\"6\", test.monthOfYear().getAsString());\n         assertEquals(\"June\", test.monthOfYear().getAsText());\n+        assertEquals(\"June\", test.monthOfYear().getField().getAsText(6, Locale.ENGLISH));\n         assertEquals(\"juin\", test.monthOfYear().getAsText(Locale.FRENCH));\n+        assertEquals(\"juin\", test.monthOfYear().getField().getAsText(6, Locale.FRENCH));\n         assertEquals(\"Jun\", test.monthOfYear().getAsShortText());\n+        assertEquals(\"Jun\", test.monthOfYear().getField().getAsShortText(6, Locale.ENGLISH));\n         assertEquals(\"juin\", test.monthOfYear().getAsShortText(Locale.FRENCH));\n+        assertEquals(\"juin\", test.monthOfYear().getField().getAsShortText(6, Locale.FRENCH));\n         assertEquals(test.getChronology().months(), test.monthOfYear().getDurationField());\n         assertEquals(test.getChronology().years(), test.monthOfYear().getRangeDurationField());\n         assertEquals(9, test.monthOfYear().getMaximumTextLength(null));\n         assertEquals(3, test.monthOfYear().getMaximumShortTextLength(null));\n         test = new DateTime(2004, 7, 9, 0, 0, 0, 0);\n         assertEquals(\"juillet\", test.monthOfYear().getAsText(Locale.FRENCH));\n+        assertEquals(\"juillet\", test.monthOfYear().getField().getAsText(7, Locale.FRENCH));\n         assertEquals(\"juil.\", test.monthOfYear().getAsShortText(Locale.FRENCH));\n+        assertEquals(\"juil.\", test.monthOfYear().getField().getAsShortText(7, Locale.FRENCH));\n         assertEquals(1, test.monthOfYear().getMinimumValue());\n         assertEquals(1, test.monthOfYear().getMinimumValueOverall());\n         assertEquals(12, test.monthOfYear().getMaximumValue());\n         assertEquals(3, test.dayOfWeek().get());\n         assertEquals(\"3\", test.dayOfWeek().getAsString());\n         assertEquals(\"Wednesday\", test.dayOfWeek().getAsText());\n+        assertEquals(\"Wednesday\", test.dayOfWeek().getField().getAsText(3, Locale.ENGLISH));\n         assertEquals(\"mercredi\", test.dayOfWeek().getAsText(Locale.FRENCH));\n+        assertEquals(\"mercredi\", test.dayOfWeek().getField().getAsText(3, Locale.FRENCH));\n         assertEquals(\"Wed\", test.dayOfWeek().getAsShortText());\n+        assertEquals(\"Wed\", test.dayOfWeek().getField().getAsShortText(3, Locale.ENGLISH));\n         assertEquals(\"mer.\", test.dayOfWeek().getAsShortText(Locale.FRENCH));\n+        assertEquals(\"mer.\", test.dayOfWeek().getField().getAsShortText(3, Locale.FRENCH));\n         assertEquals(test.getChronology().days(), test.dayOfWeek().getDurationField());\n         assertEquals(test.getChronology().weeks(), test.dayOfWeek().getRangeDurationField());\n         assertEquals(9, test.dayOfWeek().getMaximumTextLength(null));", "timestamp": 1128888083, "metainfo": ""}