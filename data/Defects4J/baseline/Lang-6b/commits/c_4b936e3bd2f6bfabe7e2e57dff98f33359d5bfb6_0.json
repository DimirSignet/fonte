{"sha": "4b936e3bd2f6bfabe7e2e57dff98f33359d5bfb6", "log": "StrBuilder implements Builder; provide toStringBuilder as toStringBuffer  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/StrBuilder.java\n+++ b/src/main/java/org/apache/commons/lang3/text/StrBuilder.java\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.ObjectUtils;\n import org.apache.commons.lang3.SystemUtils;\n+import org.apache.commons.lang3.builder.Builder;\n \n /**\n  * Builds a string from constituent parts providing a more flexible and powerful API\n  * @since 2.2\n  * @version $Id$\n  */\n-public class StrBuilder implements CharSequence, Appendable, Serializable {\n+public class StrBuilder implements CharSequence, Appendable, Serializable, Builder<String> {\n \n     /**\n      * The extra capacity for new builders.\n         return new StringBuffer(size).append(buffer, 0, size);\n     }\n \n+    /**\n+     * Gets a StringBuilder version of the string builder, creating a\n+     * new instance each time the method is called.\n+     *\n+     * @return the builder as a StringBuilder\n+     * @since Apache Commons Lang 3.2\n+     */\n+    public StringBuilder toStringBuilder() {\n+        return new StringBuilder(size).append(buffer, 0, size);\n+    }\n+\n+    /**\n+     * Implement the {@link Builder} interface.\n+     * @return the builder as a String\n+     * @since Apache Commons Lang 3.2\n+     * @see #toString()\n+     */\n+    public String build() {\n+        return toString();\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * Validates parameters defining a range of the builder.\n--- a/src/test/java/org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java\n         sb.clear();\n         sb.appendAll(new Object[]{\"foo\", \"bar\", \"baz\"});\n         assertEquals(\"foobarbaz\", sb.toString());\n+\n+        sb.clear();\n+        sb.appendAll(\"foo\", \"bar\", \"baz\");\n+        assertEquals(\"foobarbaz\", sb.toString());\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java\n \n     //-----------------------------------------------------------------------\n     @Test\n+    public void testToStringBuilder() {\n+        StrBuilder sb = new StrBuilder();\n+        assertEquals(new StringBuilder().toString(), sb.toStringBuilder().toString());\n+        \n+        sb.append(\"junit\");\n+        assertEquals(new StringBuilder(\"junit\").toString(), sb.toStringBuilder().toString());\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    @Test\n     public void testLang294() {\n         StrBuilder sb = new StrBuilder(\"\\n%BLAH%\\nDo more stuff\\neven more stuff\\n%BLAH%\\n\");\n         sb.deleteAll(\"\\n%BLAH%\");\n         assertEquals( \"Failed to invoke appendFixedWidthPadLeft correctly\", \"**********\", sb.toString());\n     }\n \n+    @Test\n+    public void testAsBuilder() {\n+        StrBuilder sb = new StrBuilder().appendAll(\"Lorem\", \" \", \"ipsum\", \" \", \"dolor\");\n+        assertEquals(sb.toString(), sb.build());\n+    }\n+\n }", "timestamp": 1352479338, "metainfo": ""}