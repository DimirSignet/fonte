{"sha": "2c95cda60efc5eaf7bb68e22bffe2def9925e89b", "log": "use exception expectations  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/BooleanUtilsTest.java\n     public void test_toBoolean_int_int_int() {\n         assertEquals(true, BooleanUtils.toBoolean(6, 6, 7));\n         assertEquals(false, BooleanUtils.toBoolean(7, 6, 7));\n-        try {\n-            BooleanUtils.toBoolean(8, 6, 7);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBoolean_int_int_int_noMatch() {\n+        BooleanUtils.toBoolean(8, 6, 7);\n     }\n     \n     @Test\n \n         assertEquals(true, BooleanUtils.toBoolean((Integer) null, null, seven));\n         assertEquals(false, BooleanUtils.toBoolean((Integer) null, six, null));\n-        try {\n-            BooleanUtils.toBoolean(null, six, seven);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        \n+\n         assertEquals(true, BooleanUtils.toBoolean(new Integer(6), six, seven));\n         assertEquals(false, BooleanUtils.toBoolean(new Integer(7), six, seven));\n-        try {\n-            BooleanUtils.toBoolean(new Integer(8), six, seven);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBoolean_Integer_Integer_Integer_nullValue() {\n+        BooleanUtils.toBoolean(null, Integer.valueOf(6), Integer.valueOf(7));\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBoolean_Integer_Integer_Integer_noMatch() {\n+        BooleanUtils.toBoolean(new Integer(8), Integer.valueOf(6), Integer.valueOf(7));\n     }\n     \n     //-----------------------------------------------------------------------\n         assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(6, 6, 7, 8));\n         assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(7, 6, 7, 8));\n         assertEquals(null, BooleanUtils.toBooleanObject(8, 6, 7, 8));\n-        try {\n-            BooleanUtils.toBooleanObject(9, 6, 7, 8);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBooleanObject_int_int_int_noMatch() {\n+        BooleanUtils.toBooleanObject(9, 6, 7, 8);\n     }\n     \n     @Test\n         assertSame(Boolean.TRUE, BooleanUtils.toBooleanObject((Integer) null, null, seven, eight));\n         assertSame(Boolean.FALSE, BooleanUtils.toBooleanObject((Integer) null, six, null, eight));\n         assertSame(null, BooleanUtils.toBooleanObject((Integer) null, six, seven, null));\n-        try {\n-            BooleanUtils.toBooleanObject(null, six, seven, eight);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        \n+\n         assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(new Integer(6), six, seven, eight));\n         assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(new Integer(7), six, seven, eight));\n         assertEquals(null, BooleanUtils.toBooleanObject(new Integer(8), six, seven, eight));\n-        try {\n-            BooleanUtils.toBooleanObject(new Integer(9), six, seven, eight);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-    }\n-    \n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBooleanObject_Integer_Integer_Integer_Integer_nullValue() {\n+        BooleanUtils.toBooleanObject(null, Integer.valueOf(6), Integer.valueOf(7), Integer.valueOf(8));\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBooleanObject_Integer_Integer_Integer_Integer_noMatch() {\n+        BooleanUtils.toBooleanObject(Integer.valueOf(9), Integer.valueOf(6), Integer.valueOf(7), Integer.valueOf(8));\n+    }\n+\n     //-----------------------------------------------------------------------\n     @Test\n     public void test_toInteger_boolean() {\n         assertSame(Boolean.TRUE, BooleanUtils.toBooleanObject((String) null, null, \"N\", \"U\"));\n         assertSame(Boolean.FALSE, BooleanUtils.toBooleanObject((String) null, \"Y\", null, \"U\"));\n         assertSame(null, BooleanUtils.toBooleanObject((String) null, \"Y\", \"N\", null));\n-        try {\n-            BooleanUtils.toBooleanObject((String) null, \"Y\", \"N\", \"U\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n \n         assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject(\"Y\", \"Y\", \"N\", \"U\"));\n         assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject(\"N\", \"Y\", \"N\", \"U\"));\n         assertEquals(null, BooleanUtils.toBooleanObject(\"U\", \"Y\", \"N\", \"U\"));\n-        try {\n-            BooleanUtils.toBooleanObject(null, \"Y\", \"N\", \"U\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            BooleanUtils.toBooleanObject(\"X\", \"Y\", \"N\", \"U\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBooleanObject_String_String_String_String_nullValue() {\n+        BooleanUtils.toBooleanObject((String) null, \"Y\", \"N\", \"U\");\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBooleanObject_String_String_String_String_noMatch() {\n+        BooleanUtils.toBooleanObject(\"X\", \"Y\", \"N\", \"U\");\n     }\n \n     //-----------------------------------------------------------------------\n         assertEquals(true, BooleanUtils.toBoolean(\"Y\", new String(\"Y\"), new String(\"N\")));\n         assertEquals(false, BooleanUtils.toBoolean(\"N\", \"Y\", \"N\"));\n         assertEquals(false, BooleanUtils.toBoolean(\"N\", new String(\"Y\"), new String(\"N\")));\n-        try {\n-            BooleanUtils.toBoolean(null, \"Y\", \"N\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            BooleanUtils.toBoolean(\"X\", \"Y\", \"N\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n         assertEquals(true, BooleanUtils.toBoolean((String) null, null, null));\n         assertEquals(true, BooleanUtils.toBoolean(\"Y\", \"Y\", \"Y\"));\n         assertEquals(true, BooleanUtils.toBoolean(\"Y\", new String(\"Y\"), new String(\"Y\")));\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBoolean_String_String_String_nullValue() {\n+        BooleanUtils.toBoolean(null, \"Y\", \"N\");\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void test_toBoolean_String_String_String_noMatch() {\n+        BooleanUtils.toBoolean(\"X\", \"Y\", \"N\");\n     }\n \n     //-----------------------------------------------------------------------\n     \n     //  testXor\n     //  -----------------------------------------------------------------------\n-    @Test\n+    @Test(expected = IllegalArgumentException.class)\n     public void testXor_primitive_nullInput() {\n-        final boolean[] b = null;\n-        try {\n-            BooleanUtils.xor(b);\n-            fail(\"Exception was not thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-    }\n-\n-    @Test\n+        BooleanUtils.xor((boolean[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n     public void testXor_primitive_emptyInput() {\n-        try {\n-            BooleanUtils.xor(new boolean[] {});\n-            fail(\"Exception was not thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n+        BooleanUtils.xor(new boolean[] {});\n     }\n \n     @Test\n             ! BooleanUtils.xor(new boolean[] { false, true, true }));\n     }\n \n-    @Test\n+    @Test(expected = IllegalArgumentException.class)\n     public void testXor_object_nullInput() {\n-        final Boolean[] b = null;\n-        try {\n-            BooleanUtils.xor(b);\n-            fail(\"Exception was not thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-    }\n-\n-    @Test\n+        BooleanUtils.xor((Boolean[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n     public void testXor_object_emptyInput() {\n-        try {\n-            BooleanUtils.xor(new Boolean[] {});\n-            fail(\"Exception was not thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-    }\n-    \n-    @Test\n+        BooleanUtils.xor(new Boolean[] {});\n+    }\n+    \n+    @Test(expected = IllegalArgumentException.class)\n     public void testXor_object_nullElementInput() {\n-        try {\n-            BooleanUtils.xor(new Boolean[] {null});\n-            fail(\"Exception was not thrown for null element input.\");\n-        } catch (IllegalArgumentException ex) {}\n+        BooleanUtils.xor(new Boolean[] {null});\n     }\n \n     @Test", "timestamp": 1310865878, "metainfo": ""}