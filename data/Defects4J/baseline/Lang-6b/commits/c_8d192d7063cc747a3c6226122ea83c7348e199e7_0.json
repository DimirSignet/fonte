{"sha": "8d192d7063cc747a3c6226122ea83c7348e199e7", "log": "LANG-815 DurationFormatUtils.formatPeriod() mis-calculation Add test case to show there is no issue  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/time/DurationFormatUtilsTest.java\n         assertEqualDuration( \"09\", new int[] { 2005, 11, 31, 0, 0, 0 }, \n                              new int[] { 2006, 9, 6, 0, 0, 0 }, \"MM\");\n     }\n-    \n+\n+    @Test\n+    public void testLANG815() {\n+        Calendar calendar = Calendar.getInstance();\n+        calendar.set(2012, 6, 30, 0, 0, 0);\n+        long startMillis = calendar.getTimeInMillis();\n+\n+        calendar.set(2012, 8, 8);\n+        long endMillis = calendar.getTimeInMillis();\n+\n+        assertEquals(\"1 9\", DurationFormatUtils.formatPeriod(startMillis, endMillis, \"M d\"));\n+    }\n+\n     // Testing the under a day range in DurationFormatUtils.formatPeriod\n     @Test\n     public void testLowDurations() {", "timestamp": 1348750002, "metainfo": ""}