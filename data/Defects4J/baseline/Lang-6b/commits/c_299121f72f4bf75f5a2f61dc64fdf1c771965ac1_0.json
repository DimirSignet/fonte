{"sha": "299121f72f4bf75f5a2f61dc64fdf1c771965ac1", "log": "Adding back in tests for deprecated methods.  When the methods are removed, we'll remove the tests.  Added in annotation to ignore usage of deprecated methods.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n         assertEquals(\"  abc\", StringUtils.leftPad(\"abc\", 5, \"\"));\n     }\n \n+    @SuppressWarnings(\"deprecation\")\n     public void testLengthString() {\n-        assertEquals(0, CharSequenceUtils.length(null));\n-        assertEquals(0, CharSequenceUtils.length(\"\"));\n-        assertEquals(0, CharSequenceUtils.length(StringUtils.EMPTY));\n-        assertEquals(1, CharSequenceUtils.length(\"A\"));\n-        assertEquals(1, CharSequenceUtils.length(\" \"));\n-        assertEquals(8, CharSequenceUtils.length(\"ABCDEFGH\"));\n-    }\n-\n+        assertEquals(0, StringUtils.length(null));\n+        assertEquals(0, StringUtils.length(\"\"));\n+        assertEquals(0, StringUtils.length(StringUtils.EMPTY));\n+        assertEquals(1, StringUtils.length(\"A\"));\n+        assertEquals(1, StringUtils.length(\" \"));\n+        assertEquals(8, StringUtils.length(\"ABCDEFGH\"));\n+    }\n+\n+    @SuppressWarnings(\"deprecation\")\n     public void testLengthStringBuffer() {\n-        assertEquals(0, CharSequenceUtils.length(new StringBuffer(\"\")));\n-        assertEquals(0, CharSequenceUtils.length(new StringBuffer(StringUtils.EMPTY)));\n-        assertEquals(1, CharSequenceUtils.length(new StringBuffer(\"A\")));\n-        assertEquals(1, CharSequenceUtils.length(new StringBuffer(\" \")));\n-        assertEquals(8, CharSequenceUtils.length(new StringBuffer(\"ABCDEFGH\")));\n-    }\n-\n+        assertEquals(0, StringUtils.length(new StringBuffer(\"\")));\n+        assertEquals(0, StringUtils.length(new StringBuffer(StringUtils.EMPTY)));\n+        assertEquals(1, StringUtils.length(new StringBuffer(\"A\")));\n+        assertEquals(1, StringUtils.length(new StringBuffer(\" \")));\n+        assertEquals(8, StringUtils.length(new StringBuffer(\"ABCDEFGH\")));\n+    }\n+\n+    @SuppressWarnings(\"deprecation\")\n     public void testLengthStringBuilder() {\n-        assertEquals(0, CharSequenceUtils.length(new StringBuilder(\"\")));\n-        assertEquals(0, CharSequenceUtils.length(new StringBuilder(StringUtils.EMPTY)));\n-        assertEquals(1, CharSequenceUtils.length(new StringBuilder(\"A\")));\n-        assertEquals(1, CharSequenceUtils.length(new StringBuilder(\" \")));\n-        assertEquals(8, CharSequenceUtils.length(new StringBuilder(\"ABCDEFGH\")));\n+        assertEquals(0, StringUtils.length(new StringBuilder(\"\")));\n+        assertEquals(0, StringUtils.length(new StringBuilder(StringUtils.EMPTY)));\n+        assertEquals(1, StringUtils.length(new StringBuilder(\"A\")));\n+        assertEquals(1, StringUtils.length(new StringBuilder(\" \")));\n+        assertEquals(8, StringUtils.length(new StringBuilder(\"ABCDEFGH\")));\n     }\n     \n     //-----------------------------------------------------------------------\n         assertEquals(7, StringUtils.indexOfDifference(new String[] {\"i am a machine\", \"i am a robot\"}));\n     }\n     \n-    public void testGetCommonPrefix_StringArray(){        \n+    public void testGetCommonPrefix_StringArray(){\n         assertEquals(\"\", StringUtils.getCommonPrefix((String[])null));\n         assertEquals(\"\", StringUtils.getCommonPrefix());\n         assertEquals(\"abc\", StringUtils.getCommonPrefix(\"abc\"));", "timestamp": 1281301679, "metainfo": ""}