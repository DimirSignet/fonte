{"sha": "b46c553a04f8e0a84faa3fa5c1331bb407844e7d", "log": "LANG-541 - Switched StringBuffer to StringBuilder when only used internally  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java\n         }\n         ArrayList<Format> foundFormats = new ArrayList<Format>();\n         ArrayList<String> foundDescriptions = new ArrayList<String>();\n-        StringBuffer stripCustom = new StringBuffer(pattern.length());\n+        StringBuilder stripCustom = new StringBuilder(pattern.length());\n \n         ParsePosition pos = new ParsePosition(0);\n         char[] c = pattern.toCharArray();\n                     throw new IllegalArgumentException(\n                             \"Unreadable format element at position \" + start);\n                 }\n-                // fall through\n+                //$FALL-THROUGH$\n             default:\n                 stripCustom.append(c[pos.getIndex()]);\n                 next(pos);\n         if (!containsElements(customPatterns)) {\n             return pattern;\n         }\n-        StringBuffer sb = new StringBuffer(pattern.length() * 2);\n+        StringBuilder sb = new StringBuilder(pattern.length() * 2);\n         ParsePosition pos = new ParsePosition(0);\n         int fe = -1;\n         int depth = 0;\n                 break;\n             case END_FE:\n                 depth--;\n-                //fall through:\n+                //$FALL-THROUGH$\n             default:\n                 sb.append(c);\n                 next(pos);\n      * @param escapingOn whether to process escaped quotes\n      * @return <code>appendTo</code>\n      */\n-    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n-            StringBuffer appendTo, boolean escapingOn) {\n+    private StringBuilder appendQuotedString(String pattern, ParsePosition pos,\n+            StringBuilder appendTo, boolean escapingOn) {\n         int start = pos.getIndex();\n         char[] c = pattern.toCharArray();\n         if (escapingOn && c[start] == QUOTE) {", "timestamp": 1256261827, "metainfo": ""}