{"sha": "043a7387829ebda76a20b87a072b5f4102c27358", "log": "Give a Javadoc example for overridding the accept method.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n  * <p>Builds <code>toString()</code> values using reflection.</p>\n  *\n  * <p>This class uses reflection to determine the fields to append. \n- * Because these fields are usually private, the class, \n+ * Because these fields are usually private, the class \n  * uses <code>Field.setAccessible</code> to\n  * change the visibility of the fields. This will fail under a security manager,\n  * unless the appropriate permissions are set up correctly.</p>\n  * <pre>\n  * public String toString() {\n  *   return ReflectionToStringBuilder.toString(this);\n- * }\n- * </pre>\n+ * }</pre>\n  *\n  * <p>You can also use the builder to debug 3rd party objects:</p>\n  * <pre>\n- * System.out.println(\"An object: \" + ReflectionToStringBuilder.toString(anObject));\n- * </pre>\n+ * System.out.println(\"An object: \" + ReflectionToStringBuilder.toString(anObject));</pre>\n  * \n  * <p>A subclass can control field output by overriding the methods:\n  * <ul> \n  *  <li>{@link #getValue(java.lang.reflect.Field)}</li>\n  * </ul>\n  * </p>\n+ * <p>For example, this method does <i>not</i> include the <code>password</code> field in the returned \n+ * <code>String</code>:</p>\n+ * <pre>\n+ * public String toString() {\n+ *     return (new ReflectionToStringBuilder(this) {\n+ *         protected boolean accept(Field f) {\n+ *             return super.accept(f) && !f.getName().equals(\"password\");\n+ *         }\n+ *     }).toString();\n+ * }</pre>\n  * \n  * <p>The exact format of the <code>toString</code> is determined by\n  * the {@link ToStringStyle} passed into the constructor.</p>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Stephen Colebourne\n  * @since 2.0\n- * @version $Id: ReflectionToStringBuilder.java,v 1.3 2003/07/14 23:02:27 scolebourne Exp $\n+ * @version $Id: ReflectionToStringBuilder.java,v 1.4 2003/07/15 23:04:23 ggregory Exp $\n  */\n public class ReflectionToStringBuilder extends ToStringBuilder {\n \n     }\n \n     /**\n-     * <p>Calls <code>java.lang.reflect.Field.get(Object)</code></p>\n+     * <p>Calls <code>java.lang.reflect.Field.get(Object)}</code></p>\n      *\n      * @see java.lang.reflect.Field#get(Object)\n      * @throws IllegalArgumentException", "timestamp": 1058310263, "metainfo": ""}