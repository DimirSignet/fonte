{"sha": "9266c1d26c92296f852c22fce85192ceb29a094a", "log": "New ExceptionUtils methods getMessage/getRootCauseMessage  ", "commit": "\n--- a/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n+++ b/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n import java.util.StringTokenizer;\n \n import org.apache.commons.lang.ArrayUtils;\n+import org.apache.commons.lang.ClassUtils;\n import org.apache.commons.lang.NullArgumentException;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.SystemUtils;\n         return list;\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets a short message summarising the exception.\n+     * <p>\n+     * The message returned is of the form\n+     * {ClassNameWithoutPackage}: {ThrowableMessage}\n+     *\n+     * @param th  the throwable to get a message for, null returns empty string\n+     * @return the message, non-null\n+     * @since Commons Lang 2.2\n+     */\n+    public static String getMessage(Throwable th) {\n+        if (th == null) {\n+            return \"\";\n+        }\n+        String clsName = ClassUtils.getShortClassName(th, null);\n+        String msg = th.getMessage();\n+        return clsName + \": \" + StringUtils.defaultString(msg);\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets a short message summarising the root cause exception.\n+     * <p>\n+     * The message returned is of the form\n+     * {ClassNameWithoutPackage}: {ThrowableMessage}\n+     *\n+     * @param th  the throwable to get a message for, null returns empty string\n+     * @return the message, non-null\n+     * @since Commons Lang 2.2\n+     */\n+    public static String getRootCauseMessage(Throwable th) {\n+        Throwable root = ExceptionUtils.getRootCause(th);\n+        root = (root == null ? th : root);\n+        return getMessage(root);\n+    }\n+\n }\n--- a/src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java\n /*\n- * Copyright 2002-2005 The Apache Software Foundation.\n+ * Copyright 2002-2006 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n         } catch (IllegalArgumentException ex) {\n         }\n     }\n-    \n+\n+    public void test_getMessage_Throwable() {\n+        Throwable th = null;\n+        assertEquals(\"\", ExceptionUtils.getMessage(th));\n+        \n+        th = new IllegalArgumentException(\"Base\");\n+        assertEquals(\"IllegalArgumentException: Base\", ExceptionUtils.getMessage(th));\n+        \n+        th = new ExceptionWithCause(\"Wrapper\", th);\n+        assertEquals(\"ExceptionUtilsTestCase.ExceptionWithCause: Wrapper\", ExceptionUtils.getMessage(th));\n+    }\n+\n+    public void test_getRootCauseMessage_Throwable() {\n+        Throwable th = null;\n+        assertEquals(\"\", ExceptionUtils.getRootCauseMessage(th));\n+        \n+        th = new IllegalArgumentException(\"Base\");\n+        assertEquals(\"IllegalArgumentException: Base\", ExceptionUtils.getRootCauseMessage(th));\n+        \n+        th = new ExceptionWithCause(\"Wrapper\", th);\n+        assertEquals(\"IllegalArgumentException: Base\", ExceptionUtils.getRootCauseMessage(th));\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * Provides a method with a well known chained/nested exception\n     private static class ExceptionWithCause extends Exception {\n         private Throwable cause;\n \n+        public ExceptionWithCause(String str, Throwable cause) {\n+            super(str);\n+            setCause(cause);\n+        }\n+\n         public ExceptionWithCause(Throwable cause) {\n+            super();\n             setCause(cause);\n         }\n \n         public void getTargetException() {\n         }\n     }\n-    \n+\n }", "timestamp": 1136597195, "metainfo": ""}