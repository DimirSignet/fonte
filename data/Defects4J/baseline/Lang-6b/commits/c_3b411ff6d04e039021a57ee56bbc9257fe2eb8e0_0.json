{"sha": "3b411ff6d04e039021a57ee56bbc9257fe2eb8e0", "log": "Adding javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n  */\n public class EntityArrays {\n \n+    /**\n+     * Mapping to escape <a href=\"https://secure.wikimedia.org/wikipedia/en/wiki/ISO/IEC_8859-1\">ISO-8859-1</a>\n+     * characters to their named HTML 3.x equivalents. \n+     */\n     public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n     private static final String[][] ISO8859_1_ESCAPE = {\n         {\"\\u00A0\", \"&nbsp;\"}, // non-breaking space\n         {\"\\u00FF\", \"&yuml;\"}, //  - lowercase y, umlaut\n     };\n \n+    /**\n+     * Reverse of {@link #ISO8859_1_ESCAPE()} for unescaping purposes.\n+     */\n     public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }\n     private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);\n \n-    // http://www.w3.org/TR/REC-html40/sgml/entities.html\n+    /**\n+     * Mapping to escape additional <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html\">character entity \n+     * references</a>. Note that this must be used with {@link #ISO8859_1_ESCAPE()} to get the full list of \n+     * HTML 4.0 character entities.\n+     */\n     public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }\n     private static final String[][] HTML40_EXTENDED_ESCAPE = {\n         // <!-- Latin Extended-B -->\n         {\"\\u20AC\", \"&euro;\"}, // -- euro sign, U+20AC NEW -->\n     };\n \n+    /**\n+     * Reverse of {@link #HTML40_EXTENDED_ESCAPE()} for unescaping purposes.\n+     */\n     public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }\n     private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);\n \n+    /**\n+     * Mapping to escape the basic XML and HTML character entities.\n+     *\n+     * Namely: {@code \" & < >}\n+     */\n     public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); }\n     private static final String[][] BASIC_ESCAPE = {\n         {\"\\\"\", \"&quot;\"}, // \" - double-quote\n         {\">\", \"&gt;\"},    // > - greater-than\n     };\n \n+    /**\n+     * Reverse of {@link #BASIC_ESCAPE()} for unescaping purposes.\n+     */\n     public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); }\n     private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);\n \n+    /**\n+     * Mapping to escape the apostrophe character to its XML character entity. \n+     */\n     public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); }\n     private static final String[][] APOS_ESCAPE = {\n         {\"'\", \"&apos;\"}, // XML apostrophe\n     };\n \n+    /**\n+     * Reverse of {@link #APOS_ESCAPE()} for unescaping purposes.\n+     */\n     public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); }\n     private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);\n \n+    /**\n+     * Mapping to escape the Java control characters. \n+     *\n+     * Namely: {@code \\b \\n \\t \\f \\r}\n+     */\n     public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); }\n     private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {\n         {\"\\b\", \"\\\\b\"},\n         {\"\\r\", \"\\\\r\"}\n     };\n \n+    /**\n+     * Reverse of {@link #JAVA_CTRL_CHARS_ESCAPE()} for unescaping purposes.\n+     */\n     public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); }\n     private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);\n ", "timestamp": 1299564022, "metainfo": ""}