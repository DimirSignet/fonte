{"sha": "c935befcd394bbf1b13ea64174428af5a26add39", "log": "Removing deprecated evaluateSet and translate methods [LANG-438]  ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharSetUtils.java\n+++ b/src/java/org/apache/commons/lang/CharSetUtils.java\n       super();\n     }\n \n-    // Factory\n-    //-----------------------------------------------------------------------\n-    /**\n-     * <p>Creates a <code>CharSet</code> instance which allows a certain amount of\n-     * set logic to be performed.</p>\n-     * <p>The syntax is:</p>\n-     * <ul>\n-     *  <li>&quot;aeio&quot; which implies 'a','e',..</li>\n-     *  <li>&quot;^e&quot; implies not e.</li>\n-     *  <li>&quot;ej-m&quot; implies e,j-&gt;m. e,j,k,l,m.</li>\n-     * </ul>\n-     * \n-     * <pre>\n-     * CharSetUtils.evaluateSet(null)    = null\n-     * CharSetUtils.evaluateSet([])      = CharSet matching nothing\n-     * CharSetUtils.evaluateSet([\"a-e\"]) = CharSet matching a,b,c,d,e\n-     * </pre>\n-     *\n-     * @param set  the set, may be null\n-     * @return a CharSet instance, <code>null</code> if null input\n-     * @deprecated Use {@link CharSet#getInstance(String[])}.\n-     *             Method will be removed in Commons Lang 3.0.\n-     */\n-    public static CharSet evaluateSet(String[] set) {\n-        if (set == null) {\n-            return null;\n-        }\n-        return new CharSet(set); \n-    }\n-\n     // Squeeze\n     //-----------------------------------------------------------------------\n     /**\n         return buffer.toString();\n     }\n \n-    // Translate\n-    //-----------------------------------------------------------------------\n-    /**\n-     * <p>Translate characters in a String.\n-     * This is a multi character search and replace routine.</p>\n-     *\n-     * <p>An example is:</p>\n-     * <ul>\n-     *   <li>translate(&quot;hello&quot;, &quot;ho&quot;, &quot;jy&quot;)\n-     *    =&gt; jelly</li>\n-     * </ul>\n-     *\n-     * <p>If the length of characters to search for is greater than the\n-     * length of characters to replace, then the last character is \n-     * used.</p>\n-     * \n-     * <pre>\n-     * CharSetUtils.translate(null, *, *) = null\n-     * CharSetUtils.translate(\"\", *, *)   = \"\"\n-     * </pre>\n-     *\n-     * @param str  String to replace characters in, may be null\n-     * @param searchChars   a set of characters to search for, must not be null\n-     * @param replaceChars  a set of characters to replace, must not be null or empty (&quot;&quot;)\n-     * @return translated String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>searchChars</code> or <code>replaceChars</code> \n-     *  is <code>null</code>\n-     * @throws ArrayIndexOutOfBoundsException if <code>replaceChars</code> is empty (&quot;&quot;)\n-     * @deprecated Use {@link StringUtils#replaceChars(String, String, String)}.\n-     *             Method will be removed in Commons Lang 3.0.\n-     *  NOTE: StringUtils#replaceChars behaves differently when 'searchChars' is longer\n-     *  than 'replaceChars'. CharSetUtils#translate will use the last char of the replacement\n-     *  string whereas StringUtils#replaceChars will delete\n-     */\n-    public static String translate(String str, String searchChars, String replaceChars) {\n-        if (StringUtils.isEmpty(str)) {\n-            return str;\n-        }\n-        StringBuffer buffer = new StringBuffer(str.length());\n-        char[] chrs = str.toCharArray();\n-        char[] withChrs = replaceChars.toCharArray();\n-        int sz = chrs.length;\n-        int withMax = replaceChars.length() - 1;\n-        for(int i=0; i<sz; i++) {\n-            int idx = searchChars.indexOf(chrs[i]);\n-            if(idx != -1) {\n-                if(idx > withMax) {\n-                    idx = withMax;\n-                }\n-                buffer.append(withChrs[idx]);\n-            } else {\n-                buffer.append(chrs[i]);\n-            }\n-        }\n-        return buffer.toString();\n-    }\n-\n }\n--- a/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testEvaluateSet_Stringarray() {\n-        assertEquals(null, CharSetUtils.evaluateSet((String[]) null));\n-        assertEquals(\"[]\", CharSetUtils.evaluateSet(new String[0]).toString());\n-        assertEquals(\"[]\", CharSetUtils.evaluateSet(new String[] {null}).toString());\n-        assertEquals(\"[a-e]\", CharSetUtils.evaluateSet(new String[] {\"a-e\"}).toString());\n-    }\n-    \n-    //-----------------------------------------------------------------------\n     public void testSqueeze_StringString() {\n         assertEquals(null, CharSetUtils.squeeze(null, (String) null));\n         assertEquals(null, CharSetUtils.squeeze(null, \"\"));\n         assertEquals(\"heo\", CharSetUtils.delete(\"hello\", new String[] { \"l\" }));\n     }\n     \n-    \n-    public void testTranslate() {\n-        assertEquals(null, CharSetUtils.translate(null, null, null));\n-        assertEquals(\"\", CharSetUtils.translate(\"\", \"a\", \"b\"));\n-        assertEquals(\"jelly\", CharSetUtils.translate(\"hello\", \"ho\", \"jy\"));\n-        assertEquals(\"jellj\", CharSetUtils.translate(\"hello\", \"ho\", \"j\"));\n-        assertEquals(\"jelly\", CharSetUtils.translate(\"hello\", \"ho\", \"jyx\"));\n-        assertEquals(\"\\rhello\\r\", CharSetUtils.translate(\"\\nhello\\n\", \"\\n\", \"\\r\"));\n-        assertEquals(\"hello\", CharSetUtils.translate(\"hello\", \"\", \"x\"));\n-        assertEquals(\"hello\", CharSetUtils.translate(\"hello\", \"\", \"\"));\n-        assertEquals(\"hello\", CharSetUtils.translate(\"hello\", \"\", \"\"));\n-        // From http://issues.apache.org/bugzilla/show_bug.cgi?id=25454\n-        assertEquals(\"q651.506bera\", CharSetUtils.translate(\"d216.102oren\", \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\",\n-                \"nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM567891234\"));\n-    }\n-\n-    public void testTranslateNullPointerException() {\n-        try {\n-            CharSetUtils.translate(\"hello\", null, null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {\n-        }\n-        try {\n-            CharSetUtils.translate(\"hello\", \"h\", null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {\n-        }\n-        try {\n-            CharSetUtils.translate(\"hello\", null, \"a\");\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {\n-        }\n-        try {\n-            CharSetUtils.translate(\"hello\", \"h\", \"\");\n-            fail(\"Expecting ArrayIndexOutOfBoundsException\");\n-        } catch (ArrayIndexOutOfBoundsException ex) {\n-        }\n-    }\n-         \n-    \n }", "timestamp": 1237048168, "metainfo": ""}