{"sha": "375001714543ca02c411014eeb0121c3f600bb49", "log": "Port to JUnit 4.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/builder/SimpleToStringStyleTest.java\n+++ b/src/test/java/org/apache/commons/lang3/builder/SimpleToStringStyleTest.java\n  */\n package org.apache.commons.lang3.builder;\n \n+import static org.junit.Assert.assertEquals;\n+\n import java.util.ArrayList;\n import java.util.HashMap;\n \n-import junit.framework.TestCase;\n-\n import org.apache.commons.lang3.builder.ToStringStyleTest.Person;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n \n /**\n  * Unit tests {@link org.apache.commons.lang3.builder.SimpleToStringStyleTest}.\n  *\n  * @version $Id$\n  */\n-public class SimpleToStringStyleTest extends TestCase {\n+public class SimpleToStringStyleTest {\n \n     private final Integer base = Integer.valueOf(5);\n     \n-    public SimpleToStringStyleTest(String name) {\n-        super(name);\n-    }\n-\n-    @Override\n-    protected void setUp() throws Exception {\n-        super.setUp();\n+    @Before\n+    public void setUp() throws Exception {\n         ToStringBuilder.setDefaultStyle(ToStringStyle.SIMPLE_STYLE);\n     }\n \n-    @Override\n-    protected void tearDown() throws Exception {\n-        super.tearDown();\n+    @After\n+    public void tearDown() throws Exception {\n         ToStringBuilder.setDefaultStyle(ToStringStyle.DEFAULT_STYLE);\n     }\n \n     //----------------------------------------------------------------\n     \n+    @Test\n     public void testBlank() {\n         assertEquals(\"\", new ToStringBuilder(base).toString());\n     }\n \n+    @Test\n     public void testAppendSuper() {\n         assertEquals(\"\", new ToStringBuilder(base).appendSuper(\"\").toString());\n         assertEquals(\"<null>\", new ToStringBuilder(base).appendSuper(\"<null>\").toString());\n         assertEquals(\"hello\", new ToStringBuilder(base).appendSuper(null).append(\"a\", \"hello\").toString());\n     }\n     \n+    @Test\n     public void testObject() {\n         Integer i3 = Integer.valueOf(3);\n         Integer i4 = Integer.valueOf(4);\n         assertEquals(\"{}\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    @Test\n     public void testPerson() {\n         Person p = new Person();\n         p.name = \"Jane Q. Public\";\n         assertEquals(\"Jane Q. Public,47,false\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n     }\n \n+    @Test\n     public void testLong() {\n         assertEquals(\"3\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(\"3\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n         assertEquals(\"3,4\", new ToStringBuilder(base).append(\"a\", 3L).append(\"b\", 4L).toString());\n     }\n \n+    @Test\n     public void testObjectArray() {\n         Object[] array = new Object[] {null, base, new int[] {3, 6}};\n         assertEquals(\"{<null>,5,{3,6}}\", new ToStringBuilder(base).append(array).toString());\n         assertEquals(\"<null>\", new ToStringBuilder(base).append((Object) array).toString());\n     }\n \n+    @Test\n     public void testLongArray() {\n         long[] array = new long[] {1, 2, -3, 4};\n         assertEquals(\"{1,2,-3,4}\", new ToStringBuilder(base).append(array).toString());\n         assertEquals(\"<null>\", new ToStringBuilder(base).append((Object) array).toString());\n     }\n \n+    @Test\n     public void testLongArrayArray() {\n         long[][] array = new long[][] {{1, 2}, null, {5}};\n         assertEquals(\"{{1,2},<null>,{5}}\", new ToStringBuilder(base).append(array).toString());", "timestamp": 1318949491, "metainfo": ""}