{"sha": "05039e41aa05bd01e76c96936ed80a6f7c0367f2", "log": "Port to JUnit 4.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java\n \n package org.apache.commons.lang3;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNotSame;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n import java.util.Arrays;\n \n-import junit.framework.TestCase;\n+import org.junit.Test;\n \n /**\n  * Tests ArrayUtils add methods.\n  *\n  * @version $Id$\n  */\n-public class ArrayUtilsAddTest extends TestCase {\n-\n+public class ArrayUtilsAddTest {\n+\n+    @Test\n     public void testJira567(){\n         Number[] n;\n         // Valid array construction\n         }\n     }\n \n+    @Test\n     public void testAddObjectArrayBoolean() {\n         boolean[] newArray;\n         newArray = ArrayUtils.add((boolean[])null, false);\n         assertEquals(Boolean.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayByte() {\n         byte[] newArray;\n         newArray = ArrayUtils.add((byte[])null, (byte)0);\n         assertEquals(Byte.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayChar() {\n         char[] newArray;\n         newArray = ArrayUtils.add((char[])null, (char)0);\n         assertEquals(Character.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayDouble() {\n         double[] newArray;\n         newArray = ArrayUtils.add((double[])null, 0);\n         assertEquals(Double.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayFloat() {\n         float[] newArray;\n         newArray = ArrayUtils.add((float[])null, 0);\n         assertEquals(Float.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayInt() {\n         int[] newArray;\n         newArray = ArrayUtils.add((int[])null, 0);\n         assertEquals(Integer.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayLong() {\n         long[] newArray;\n         newArray = ArrayUtils.add((long[])null, 0);\n         assertEquals(Long.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayShort() {\n         short[] newArray;\n         newArray = ArrayUtils.add((short[])null, (short)0);\n         assertEquals(Short.TYPE, newArray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testAddObjectArrayObject() {\n         Object[] newArray;\n \n         assertEquals(Float.class, newArray.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testLANG571(){\n         String[] stringArray=null;\n         String aString=null;\n         }\n     }\n \n+    @Test\n     public void testAddObjectArrayToObjectArray() {\n         assertNull(ArrayUtils.addAll((Object[]) null, (Object[]) null));\n         Object[] newArray;\n \n     }\n \n+    @Test\n     public void testAddObjectAtIndex() {\n         Object[] newArray;\n         newArray = ArrayUtils.add((Object[])null, 0, \"a\");", "timestamp": 1313503755, "metainfo": ""}