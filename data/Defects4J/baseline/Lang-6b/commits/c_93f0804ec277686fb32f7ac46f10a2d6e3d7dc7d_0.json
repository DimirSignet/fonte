{"sha": "93f0804ec277686fb32f7ac46f10a2d6e3d7dc7d", "log": "verify that a user-generated annotation which does not directly implement equals() nevertheless compares equivalently to a 'real' annotation  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n import java.lang.annotation.Target;\n import java.lang.reflect.Array;\n import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n import java.util.ArrayList;\n import java.util.Arrays;\n \n                     .getClass()));\n         }\n     }\n+\n+    @Test(timeout = 666)\n+    public void testGeneratedAnnotationEquivalentToRealAnnotation() throws Exception {\n+        final Test real = getClass().getDeclaredMethod(\n+                \"testGeneratedAnnotationEquivalentToRealAnnotation\").getAnnotation(Test.class);\n+\n+        InvocationHandler generatedTestInvocationHandler = new InvocationHandler() {\n+\n+            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+                if (\"equals\".equals(method.getName()) && method.getParameterTypes().length == 1) {\n+                    return proxy == args[0];\n+                }\n+                if (\"hashCode\".equals(method.getName()) && method.getParameterTypes().length == 0) {\n+                    return System.identityHashCode(proxy);\n+                }\n+                if (\"toString\".equals(method.getName()) && method.getParameterTypes().length == 0) {\n+                    return \"Test proxy\";\n+                }\n+                return method.invoke(real, args);\n+            }\n+        };\n+\n+        Test generated = (Test) Proxy.newProxyInstance(Thread.currentThread()\n+                .getContextClassLoader(), new Class[] { Test.class },\n+                generatedTestInvocationHandler);\n+        assertTrue(real.equals(generated));\n+        assertFalse(generated.equals(real));\n+        assertTrue(AnnotationUtils.equals(generated, real));\n+        assertTrue(AnnotationUtils.equals(real, generated));\n+\n+        Test generated2 = (Test) Proxy.newProxyInstance(Thread.currentThread()\n+                .getContextClassLoader(), new Class[] { Test.class },\n+                generatedTestInvocationHandler);\n+        assertFalse(generated.equals(generated2));\n+        assertFalse(generated2.equals(generated));\n+        assertTrue(AnnotationUtils.equals(generated, generated2));\n+        assertTrue(AnnotationUtils.equals(generated2, generated));\n+    }\n }", "timestamp": 1284415955, "metainfo": ""}