{"sha": "ae9f6faf8fb8ffcd52f50512682b94aea53f683d", "log": "remove use of 1.5 Arrays.toString()  ", "commit": "\n--- a/src/test/org/apache/commons/lang/reflect/ConstructorUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/reflect/ConstructorUtilsTest.java\n             Class[] requestTypes, Class[] actualTypes) {\n         Constructor c = ConstructorUtils.getMatchingAccessibleConstructor(cls,\n                 requestTypes);\n-        assertTrue(Arrays.toString(c.getParameterTypes()) + \" not equals \"\n-                + Arrays.toString(actualTypes), Arrays.equals(actualTypes, c\n+        assertTrue(toString(c.getParameterTypes()) + \" not equals \"\n+                + toString(actualTypes), Arrays.equals(actualTypes, c\n                 .getParameterTypes()));\n+    }\n+\n+    private String toString(Class[] c) {\n+        return Arrays.asList(c).toString();\n     }\n \n     private Class[] singletonArray(Class c) {\n--- a/src/test/org/apache/commons/lang/reflect/MethodUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/reflect/MethodUtilsTest.java\n             String methodName, Class[] requestTypes, Class[] actualTypes) {\n         Method m = MethodUtils.getMatchingAccessibleMethod(cls, methodName,\n                 requestTypes);\n-        assertTrue(Arrays.toString(m.getParameterTypes()) + \" not equals \"\n-                + Arrays.toString(actualTypes), Arrays.equals(actualTypes, m\n+        assertTrue(toString(m.getParameterTypes()) + \" not equals \"\n+                + toString(actualTypes), Arrays.equals(actualTypes, m\n                 .getParameterTypes()));\n     }\n \n         MethodUtils.setCacheMethods(true);\n     }\n \n+    private String toString(Class[] c) {\n+        return Arrays.asList(c).toString();\n+    }\n+\n     private Class[] singletonArray(Class c) {\n         Class[] result = (Class[]) classCache.get(c);\n         if (result == null) {", "timestamp": 1210108260, "metainfo": ""}