{"sha": "dedc9c33768f6928c4e43fcfe97967f14e1ca401", "log": "Changing @since 3.0.2 to @since 3.1  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ClassUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ClassUtils.java\n      *            The class to query or null.\n      * @return true if the given {@code type} is a primitive or primitive wrapper ({@link Boolean}, {@link Byte}, {@link Character},\n      *         {@link Short}, {@link Integer}, {@link Long}, {@link Double}, {@link Float}).\n-     * @since 3.0.2\n+     * @since 3.1\n      */\n     public static boolean isPrimitiveOrWrapper(Class<?> type) {\n         if (type == null) {\n      *            The class to query or null.\n      * @return true if the given {@code type} is a primitive wrapper ({@link Boolean}, {@link Byte}, {@link Character}, {@link Short},\n      *         {@link Integer}, {@link Long}, {@link Double}, {@link Float}).\n-     * @since 3.0.2\n+     * @since 3.1\n      */\n     public static boolean isPrimitiveWrapper(Class<?> type) {\n         return wrapperPrimitiveMap.containsKey(type);\n--- a/src/main/java/org/apache/commons/lang3/SystemUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/SystemUtils.java\n      * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n      * </p>\n      *\n-     * @since 3.0.2\n+     * @since 3.1\n      */\n     public static final boolean IS_OS_FREE_BSD = getOSMatchesName(\"FreeBSD\");\n \n      * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n      * </p>\n      *\n-     * @since 3.0.2\n+     * @since 3.1\n      */\n     public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(\"OpenBSD\");\n \n      * The field will return {@code false} if {@code OS_NAME} is {@code null}.\n      * </p>\n      *\n-     * @since 3.0.2\n+     * @since 3.1\n      */\n     public static final boolean IS_OS_NET_BSD = getOSMatchesName(\"NetBSD\");\n \n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n \n     /**\n      * <p>Convert a <code>String</code> to a <code>Long</code>; \n-     * since 3.0.2 it handles hex and octal notations.</p>\n+     * since 3.1 it handles hex and octal notations.</p>\n      * \n      * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n      *\n--- a/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java\n+++ b/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java\n  * \n  * @see <a href=\"https://issues.apache.org/jira/browse/LANG-762\">[LANG-762] Handle or document ReflectionToStringBuilder\n  *      and ToStringBuilder for collections that are not thread safe</a>\n- * @since 3.0.2\n+ * @since 3.1\n  * @version $Id$\n  */\n public class ReflectionToStringBuilderConcurrencyTest {\n--- a/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java\n+++ b/src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java\n  * \n  * @see <a href=\"https://issues.apache.org/jira/browse/LANG-762\">[LANG-762] Handle or document ReflectionToStringBuilder\n  *      and ToStringBuilder for collections that are not thread safe</a>\n- * @since 3.0.2\n+ * @since 3.1\n  * @version $Id$\n  */\n public class ReflectionToStringBuilderMutateInspectConcurrencyTest {\n--- a/src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java\n+++ b/src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java\n  * \n  * @see <a href=\"https://issues.apache.org/jira/browse/LANG-762\">[LANG-762] Handle or document ReflectionToStringBuilder\n  *      and ToStringBuilder for collections that are not thread safe</a>\n- * @since 3.0.2\n+ * @since 3.1\n  * @version $Id$\n  */\n public class ToStringStyleConcurrencyTest {", "timestamp": 1320855094, "metainfo": ""}