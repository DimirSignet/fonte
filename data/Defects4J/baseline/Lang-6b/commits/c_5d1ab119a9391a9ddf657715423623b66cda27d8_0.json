{"sha": "5d1ab119a9391a9ddf657715423623b66cda27d8", "log": "Fix license, style and svn properties  ", "commit": "\n--- a/src/test/org/apache/commons/lang/IntHashMapTest.java\n+++ b/src/test/org/apache/commons/lang/IntHashMapTest.java\n-/*\n- * Copyright 2005 Steven Caswell\n- */\n-package org.apache.commons.lang;\n-\n-import junit.framework.Test;\n-import junit.framework.TestCase;\n-import junit.framework.TestSuite;\n-import junit.textui.TestRunner;\n-\n-/**\n- *\n- * @author  Steven Caswell\n- * @version $Id$\n- */\n-public class IntHashMapTest extends TestCase\n-{\n-\n-    public static void main(String[] args) {\n-        TestRunner.run(suite());\n-    }\n-\n-    public static Test suite() {\n-        TestSuite suite = new TestSuite(IntHashMapTest.class);\n-        suite.setName(\"IntHashMapTest Tests\");\n-        return suite;\n-    }\n-\n-    public void testConstructor() {\n-        try {\n-            IntHashMap map = new IntHashMap(-1, 0.0f);\n-            fail();\n-        } catch (IllegalArgumentException e) {\n-            assertEquals(\"Illegal Capacity: -1\", e.getMessage());\n-        }\n-        try {\n-            IntHashMap map = new IntHashMap(1, 0.0f);\n-            fail();\n-        } catch (IllegalArgumentException e) {\n-            assertEquals(\"Illegal Load: 0.0\", e.getMessage());\n-        }\n-        IntHashMap map = new IntHashMap(0, 1.0f);\n-        \n-        try {\n-            IntHashMap map1 = new IntHashMap(-1);\n-            fail();\n-        } catch (IllegalArgumentException e) {\n-           assertEquals(\"Illegal Capacity: -1\", e.getMessage());\n-        }\n-        IntHashMap map1 = new IntHashMap(0);\n-    }\n-    \n-    public void testClear() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        map.clear();\n-        assertEquals(0, map.size());\n-    }\n-  \n-    public void testContainsKey() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        assertTrue(map.containsKey(1));\n-        assertTrue(map.containsKey(2));\n-        assertFalse(map.containsKey(3));\n-    }\n-\n-    public void testContains() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        assertTrue(map.containsValue(\"hello\"));\n-        assertTrue(map.containsValue(\"world\"));\n-        assertFalse(map.containsValue(\"goodbye\"));\n-        try {\n-            map.containsValue(null);\n-            fail();\n-        } catch(NullPointerException e) {\n-      }\n-    }\n-\n-    public void testContainsValue() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        assertTrue(map.containsValue(\"hello\"));\n-        assertTrue(map.containsValue(\"world\"));\n-        assertFalse(map.containsValue(\"goodbye\"));\n-        try {\n-            map.containsValue(null);\n-            fail();\n-        } catch(NullPointerException e) {\n-        }\n-    }\n-\n-    public void testIsEmpty() {\n-        IntHashMap map = new IntHashMap();\n-        assertTrue(map.isEmpty());\n-        assertNull(map.put(1, \"hello\"));\n-        assertEquals(1, map.size());\n-        assertFalse(map.isEmpty());\n-    }\n-  \n-    public void testPut() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        assertEquals(\"hello\", map.put(1, \"hellooooo\"));\n-    }\n-    \n-    public void testRemove() {\n-        IntHashMap map = new IntHashMap();\n-        assertNull(map.put(1, \"hello\"));\n-        assertNull(map.put(2, \"world\"));\n-        assertEquals(2, map.size());\n-        assertEquals(\"hello\", map.remove(1));\n-        assertEquals(1, map.size());\n-        assertNull(map.remove(3));\n-    }\n-    \n-}\n+/*\n+ * Copyright 2005 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.lang;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+import junit.textui.TestRunner;\n+\n+/**\n+ * Tests for the IntHashMap class.\n+ *\n+ * @author  Steven Caswell\n+ * @version $Id$\n+ */\n+public class IntHashMapTest extends TestCase {\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(suite());\n+    }\n+\n+    public static Test suite() {\n+        TestSuite suite = new TestSuite(IntHashMapTest.class);\n+        suite.setName(\"IntHashMapTest Tests\");\n+        return suite;\n+    }\n+\n+    public void testConstructor() {\n+        try {\n+            new IntHashMap(-1, 0.0f);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertEquals(\"Illegal Capacity: -1\", e.getMessage());\n+        }\n+        try {\n+            new IntHashMap(1, 0.0f);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertEquals(\"Illegal Load: 0.0\", e.getMessage());\n+        }\n+        new IntHashMap(0, 1.0f);\n+        \n+        try {\n+            new IntHashMap(-1);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+           assertEquals(\"Illegal Capacity: -1\", e.getMessage());\n+        }\n+        IntHashMap map1 = new IntHashMap(0);\n+        assertEquals(0, map1.size());\n+    }\n+    \n+    public void testClear() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        map.clear();\n+        assertEquals(0, map.size());\n+    }\n+  \n+    public void testContainsKey() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        assertTrue(map.containsKey(1));\n+        assertTrue(map.containsKey(2));\n+        assertFalse(map.containsKey(3));\n+    }\n+\n+    public void testContains() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        assertTrue(map.containsValue(\"hello\"));\n+        assertTrue(map.containsValue(\"world\"));\n+        assertFalse(map.containsValue(\"goodbye\"));\n+        try {\n+            map.containsValue(null);\n+            fail();\n+        } catch(NullPointerException e) {\n+      }\n+    }\n+\n+    public void testContainsValue() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        assertTrue(map.containsValue(\"hello\"));\n+        assertTrue(map.containsValue(\"world\"));\n+        assertFalse(map.containsValue(\"goodbye\"));\n+        try {\n+            map.containsValue(null);\n+            fail();\n+        } catch(NullPointerException e) {\n+        }\n+    }\n+\n+    public void testIsEmpty() {\n+        IntHashMap map = new IntHashMap();\n+        assertTrue(map.isEmpty());\n+        assertNull(map.put(1, \"hello\"));\n+        assertEquals(1, map.size());\n+        assertFalse(map.isEmpty());\n+    }\n+  \n+    public void testPut() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        assertEquals(\"hello\", map.put(1, \"hellooooo\"));\n+    }\n+    \n+    public void testRemove() {\n+        IntHashMap map = new IntHashMap();\n+        assertNull(map.put(1, \"hello\"));\n+        assertNull(map.put(2, \"world\"));\n+        assertEquals(2, map.size());\n+        assertEquals(\"hello\", map.remove(1));\n+        assertEquals(1, map.size());\n+        assertNull(map.remove(3));\n+    }\n+    \n+}", "timestamp": 1125138413, "metainfo": ""}