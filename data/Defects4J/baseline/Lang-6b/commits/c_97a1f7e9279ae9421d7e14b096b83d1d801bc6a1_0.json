{"sha": "97a1f7e9279ae9421d7e14b096b83d1d801bc6a1", "log": "Implement test TODO.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/ConversionTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ConversionTest.java\n         // assertEquals(0x0F12345678000000L,Conversion.intsToLong(src,1,0x123456789ABCDEF0L,32,2));\n     }\n \n-    public void todoTestShortsToLong() {\n-        // TODO: implement this test. This is somehow low priority since intsToLong and\n-        // bytesToLong are tested\n+    /**\n+     * Tests {@link Conversion#shortsToLong(short[], int, long, int, int)}.\n+     */\n+    @Test\n+    public void testShortsToLong() {\n+        short[] src = new short[]{\n+            (short)0xCDF1, (short)0xF0C1, (short)0x0F12, (short)0x3456, (short)0x7800};\n+        assertEquals(0x0000000000000000L, Conversion.shortsToLong(src, 0, 0L, 0, 0));\n+        assertEquals(0x000000000000CDF1L, Conversion.shortsToLong(src, 0, 0L, 0, 1));\n+        assertEquals(0x00000000F0C1CDF1L, Conversion.shortsToLong(src, 0, 0L, 0, 2));\n+        assertEquals(0x780034560F12F0C1L, Conversion.shortsToLong(src, 1, 0L, 0, 4));\n+        assertEquals(\n+            0x123456789ABCDEF0L, Conversion.shortsToLong(src, 0, 0x123456789ABCDEF0L, 0, 0));\n+        assertEquals(\n+            0x123456CDF1BCDEF0L, Conversion.shortsToLong(src, 0, 0x123456789ABCDEF0L, 24, 1));\n+        assertEquals(\n+            0x123478003456DEF0L, Conversion.shortsToLong(src, 3, 0x123456789ABCDEF0L, 16, 2));\n     }\n \n     /**\n             0x123456789ABCDEF0L, Conversion.bytesToLong(src, 0, 0x123456789ABCDEF0L, 0, 0));\n         assertEquals(\n             0x12345678CDBCDEF0L, Conversion.bytesToLong(src, 0, 0x123456789ABCDEF0L, 24, 1));\n-        // assertEquals(0x123456789A7856F0L,Conversion.bytesToLong(src,7,0x123456789ABCDEF0L,8,2));\n+        assertEquals(\n+            0x123456789A7856F0L, Conversion.bytesToLong(src, 7, 0x123456789ABCDEF0L, 8, 2));\n     }\n \n     /**\n         assertEquals(0x12345678, Conversion.shortsToInt(src, 0, 0x12345678, 0, 0));\n         assertEquals(0xCDF15678, Conversion.shortsToInt(src, 0, 0x12345678, 16, 1));\n         // assertEquals(0x34567800,Conversion.shortsToInt(src, 3, 0x12345678, 16, 2));\n-\n     }\n \n     /**", "timestamp": 1348782725, "metainfo": ""}