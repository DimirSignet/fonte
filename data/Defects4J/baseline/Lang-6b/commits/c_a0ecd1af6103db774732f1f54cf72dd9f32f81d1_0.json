{"sha": "a0ecd1af6103db774732f1f54cf72dd9f32f81d1", "log": "Applying my second patch from LANG-360 - it seems to do what Stephane/Paul and I are consensing on  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n         if (object == null) {\n             return null;\n         }\n-        return appendIdentityToString(null, object).toString();\n+        StringBuffer buffer = new StringBuffer();\n+        identityToString(buffer, object);\n+        return buffer.toString();\n+    }\n+\n+    /**\n+     * <p>Appends the toString that would be produced by <code>Object</code>\n+     * if a class did not override toString itself. <code>null</code>\n+     * will throw a NullPointerException for either of the two parameters. </p>\n+     *\n+     * <pre>\n+     * ObjectUtils.identityToString(buf, \"\")            = buf.append(\"java.lang.String@1e23\"\n+     * ObjectUtils.identityToString(buf, Boolean.TRUE)  = buf.append(\"java.lang.Boolean@7fa\"\n+     * ObjectUtils.identityToString(buf, Boolean.TRUE)  = buf.append(\"java.lang.Boolean@7fa\")\n+     * </pre>\n+     *\n+     * @param buffer  the buffer to append to\n+     * @param object  the object to create a toString for\n+     * @since 2.4\n+     */\n+    public static void identityToString(StringBuffer buffer, Object object) {\n+        if (object == null) {\n+            throw new NullPointerException(\"Cannot get the toString of a null identity\");\n+        }\n+        buffer.append(object.getClass().getName())\n+              .append('@')\n+              .append(Integer.toHexString(System.identityHashCode(object)));\n     }\n \n     /**\n      * @return the default toString text, or <code>null</code> if\n      *  <code>null</code> passed in\n      * @since 2.0\n+     * @deprecated The design of this method is bad - see LANG-360. Instead, use identityToString(StringBuffer, Object).\n      */\n     public static StringBuffer appendIdentityToString(StringBuffer buffer, Object object) {\n         if (object == null) {\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n             \"java.lang.String@\" + Integer.toHexString(System.identityHashCode(FOO)),\n             ObjectUtils.identityToString(FOO));\n         Integer i = new Integer(90);\n-        assertEquals(\n-            \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(i)),\n-            ObjectUtils.identityToString(i));\n+        String expected = \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(i));\n+        assertEquals(expected, ObjectUtils.identityToString(i));\n+        StringBuffer buffer = new StringBuffer();\n+        ObjectUtils.identityToString(buffer, i);\n+        assertEquals(expected, buffer.toString());\n+\n+        try {\n+            ObjectUtils.identityToString(null, \"tmp\");\n+            fail(\"NullPointerException expected\");\n+        } catch(NullPointerException npe) {\n+        }\n+        try {\n+            ObjectUtils.identityToString(new StringBuffer(), null);\n+            fail(\"NullPointerException expected\");\n+        } catch(NullPointerException npe) {\n+        }\n     }\n \n     public void testAppendIdentityToString() {", "timestamp": 1194908042, "metainfo": ""}