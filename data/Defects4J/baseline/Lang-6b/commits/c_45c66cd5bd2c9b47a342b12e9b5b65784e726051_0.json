{"sha": "45c66cd5bd2c9b47a342b12e9b5b65784e726051", "log": "move private method to end  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/AnnotationUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/AnnotationUtils.java\n         return builder.build();\n     }\n \n+    /**\n+     * Learn whether the specified type is permitted as an annotation member.\n+     * These include {@link String}, {@link Class}, primitive types,\n+     * {@link Annotation}s, {@link Enum}s, and arrays of same.\n+     * @param type to check\n+     * @return boolean\n+     */\n+    public static boolean isValidAnnotationMemberType(Class<?> type) {\n+        if (type == null) {\n+            return false;\n+        }\n+        if (type.isArray()) {\n+            type = type.getComponentType();\n+        }\n+        return type.isPrimitive() || type.isEnum() || type.isAnnotation()\n+                || String.class.equals(type) || Class.class.equals(type);\n+    }\n+\n     //besides modularity, this has the advantage of autoboxing primitives:\n     private static int hashMember(String name, Object value) throws IllegalArgumentException,\n             IllegalAccessException, InvocationTargetException {\n         return part1 ^ value.hashCode();\n     }\n \n-    /**\n-     * Learn whether the specified type is permitted as an annotation member.\n-     * These include {@link String}, {@link Class}, primitive types,\n-     * {@link Annotation}s, {@link Enum}s, and arrays of same.\n-     * @param type to check\n-     * @return boolean\n-     */\n-    public static boolean isValidAnnotationMemberType(Class<?> type) {\n-        if (type == null) {\n-            return false;\n-        }\n-        if (type.isArray()) {\n-            type = type.getComponentType();\n-        }\n-        return type.isPrimitive() || type.isEnum() || type.isAnnotation()\n-                || String.class.equals(type) || Class.class.equals(type);\n-    }\n-\n     private static boolean memberEquals(Class<?> type, Object o1, Object o2) {\n         if (o1 == o2) {\n             return true;", "timestamp": 1285094933, "metainfo": ""}