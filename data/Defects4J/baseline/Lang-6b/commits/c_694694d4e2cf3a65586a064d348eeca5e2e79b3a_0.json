{"sha": "694694d4e2cf3a65586a064d348eeca5e2e79b3a", "log": "Drop unused fields Raw types  ", "commit": "\n--- a/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n   \n     private String iString;\n     private Integer iInteger;\n-    private HashMap iMap;\n+    private HashMap<Object, Object> iMap;\n \n     public SerializationUtilsTest(String name) {\n         super(name);\n \n         iString = \"foo\";\n         iInteger = new Integer(7);\n-        iMap = new HashMap();\n+        iMap = new HashMap<Object, Object>();\n         iMap.put(\"FOO\", iString);\n         iMap.put(\"BAR\", iInteger);\n     }\n     //-----------------------------------------------------------------------\n     public void testConstructor() {\n         assertNotNull(new SerializationUtils());\n-        Constructor[] cons = SerializationUtils.class.getDeclaredConstructors();\n+        Constructor<?>[] cons = SerializationUtils.class.getDeclaredConstructors();\n         assertEquals(1, cons.length);\n         assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n         assertEquals(true, Modifier.isPublic(SerializationUtils.class.getModifiers()));\n     }\n \n     public void testSerializeStreamObjNull() throws Exception {\n-        // TODO NOT USED - but should it be?\n-        ByteArrayOutputStream streamTest = new ByteArrayOutputStream();\n         try {\n             SerializationUtils.serialize(iMap, null);\n         } catch (IllegalArgumentException ex) {\n     }\n \n     public void testSerializeStreamNullNull() throws Exception {\n-        // TODO NOT USED - but should it be?\n-        ByteArrayOutputStream streamTest = new ByteArrayOutputStream();\n         try {\n             SerializationUtils.serialize(null, null);\n         } catch (IllegalArgumentException ex) {\n         ByteArrayInputStream inTest = new ByteArrayInputStream(streamReal.toByteArray());\n         Object test = SerializationUtils.deserialize(inTest);\n         assertNotNull(test);\n-        assertTrue(test instanceof HashMap);\n+        assertTrue(test instanceof HashMap<?, ?>);\n         assertTrue(test != iMap);\n-        HashMap testMap = (HashMap) test;\n+        HashMap<?, ?> testMap = (HashMap<?, ?>) test;\n         assertEquals(iString, testMap.get(\"FOO\"));\n         assertTrue(iString != testMap.get(\"FOO\"));\n         assertEquals(iInteger, testMap.get(\"BAR\"));\n \n         Object test = SerializationUtils.deserialize(streamReal.toByteArray());\n         assertNotNull(test);\n-        assertTrue(test instanceof HashMap);\n+        assertTrue(test instanceof HashMap<?, ?>);\n         assertTrue(test != iMap);\n-        HashMap testMap = (HashMap) test;\n+        HashMap<?, ?> testMap = (HashMap<?, ?>) test;\n         assertEquals(iString, testMap.get(\"FOO\"));\n         assertTrue(iString != testMap.get(\"FOO\"));\n         assertEquals(iInteger, testMap.get(\"BAR\"));\n     public void testClone() throws Exception {\n         Object test = SerializationUtils.clone(iMap);\n         assertNotNull(test);\n-        assertTrue(test instanceof HashMap);\n+        assertTrue(test instanceof HashMap<?,?>);\n         assertTrue(test != iMap);\n-        HashMap testMap = (HashMap) test;\n+        HashMap<?, ?> testMap = (HashMap<?, ?>) test;\n         assertEquals(iString, testMap.get(\"FOO\"));\n         assertTrue(iString != testMap.get(\"FOO\"));\n         assertEquals(iInteger, testMap.get(\"BAR\"));", "timestamp": 1256400097, "metainfo": ""}