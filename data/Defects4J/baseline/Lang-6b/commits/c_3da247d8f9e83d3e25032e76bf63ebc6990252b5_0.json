{"sha": "3da247d8f9e83d3e25032e76bf63ebc6990252b5", "log": "Add constants for standard numeric values   ", "commit": "\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:steve.downey@netfolio.com\">Steve Downey</a>\n- * @version $Id: NumberUtils.java,v 1.4 2002/11/16 10:41:03 scolebourne Exp $\n+ * @version $Id: NumberUtils.java,v 1.5 2002/12/15 16:53:28 scolebourne Exp $\n  */\n public final class NumberUtils {\n-\n-    /**\n-     * <p>NumberUtils instances should NOT be constructed in standard programming.\n+    \n+    /** Reusable Long constant for zero. */\n+    public static final Long LONG_ZERO = new Long(0L);\n+    /** Reusable Long constant for one. */\n+    public static final Long LONG_ONE = new Long(1L);\n+    /** Reusable Long constant for minus one. */\n+    public static final Long LONG_MINUS_ONE = new Long(-1L);\n+    /** Reusable Integer constant for zero. */\n+    public static final Integer INTEGER_ZERO = new Integer(0);\n+    /** Reusable Integer constant for one. */\n+    public static final Integer INTEGER_ONE = new Integer(1);\n+    /** Reusable Integer constant for minus one. */\n+    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);\n+    /** Reusable Short constant for zero. */\n+    public static final Short SHORT_ZERO = new Short((short) 0);\n+    /** Reusable Short constant for one. */\n+    public static final Short SHORT_ONE = new Short((short) 1);\n+    /** Reusable Short constant for minus one. */\n+    public static final Short SHORT_MINUS_ONE = new Short((short) -1);\n+    /** Reusable Byte constant for zero. */\n+    public static final Byte BYTE_ZERO = new Byte((byte) 0);\n+    /** Reusable Byte constant for one. */\n+    public static final Byte BYTE_ONE = new Byte((byte) 1);\n+    /** Reusable Byte constant for minus one. */\n+    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);\n+    /** Reusable Double constant for zero. */\n+    public static final Double DOUBLE_ZERO = new Double(0.0d);\n+    /** Reusable Double constant for one. */\n+    public static final Double DOUBLE_ONE = new Double(1.0d);\n+    /** Reusable Double constant for minus one. */\n+    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);\n+    /** Reusable Float constant for zero. */\n+    public static final Float FLOAT_ZERO = new Float(0.0f);\n+    /** Reusable Float constant for one. */\n+    public static final Float FLOAT_ONE = new Float(1.0f);\n+    /** Reusable Float constant for minus one. */\n+    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);\n+\n+    /**\n+     * <p><code>NumberUtils</code> instances should NOT be constructed in standard programming.\n      * Instead, the class should be used as <code>NumberUtils.stringToInt(\"6\");</code>.</p>\n      *\n      * <p>This constructor is public to permit tools that require a JavaBean instance\n--- a/src/test/org/apache/commons/lang/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/NumberUtilsTest.java\n  *\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: NumberUtilsTest.java,v 1.3 2002/11/22 23:30:32 bayard Exp $\n+ * @version $Id: NumberUtilsTest.java,v 1.4 2002/12/15 16:53:28 scolebourne Exp $\n  */\n public class NumberUtilsTest extends TestCase {\n \n         }\n     }\n \n+    public void testConstants() {\n+        assertTrue(NumberUtils.LONG_ZERO instanceof Long);\n+        assertTrue(NumberUtils.LONG_ONE instanceof Long);\n+        assertTrue(NumberUtils.LONG_MINUS_ONE instanceof Long);\n+        assertTrue(NumberUtils.INTEGER_ZERO instanceof Integer);\n+        assertTrue(NumberUtils.INTEGER_ONE instanceof Integer);\n+        assertTrue(NumberUtils.INTEGER_MINUS_ONE instanceof Integer);\n+        assertTrue(NumberUtils.SHORT_ZERO instanceof Short);\n+        assertTrue(NumberUtils.SHORT_ONE instanceof Short);\n+        assertTrue(NumberUtils.SHORT_MINUS_ONE instanceof Short);\n+        assertTrue(NumberUtils.BYTE_ZERO instanceof Byte);\n+        assertTrue(NumberUtils.BYTE_ONE instanceof Byte);\n+        assertTrue(NumberUtils.BYTE_MINUS_ONE instanceof Byte);\n+        assertTrue(NumberUtils.DOUBLE_ZERO instanceof Double);\n+        assertTrue(NumberUtils.DOUBLE_ONE instanceof Double);\n+        assertTrue(NumberUtils.DOUBLE_MINUS_ONE instanceof Double);\n+        assertTrue(NumberUtils.FLOAT_ZERO instanceof Float);\n+        assertTrue(NumberUtils.FLOAT_ONE instanceof Float);\n+        assertTrue(NumberUtils.FLOAT_MINUS_ONE instanceof Float);\n+        \n+        assertTrue(NumberUtils.LONG_ZERO.longValue() == 0);\n+        assertTrue(NumberUtils.LONG_ONE.longValue() == 1);\n+        assertTrue(NumberUtils.LONG_MINUS_ONE.longValue() == -1);\n+        assertTrue(NumberUtils.INTEGER_ZERO.intValue() == 0);\n+        assertTrue(NumberUtils.INTEGER_ONE.intValue() == 1);\n+        assertTrue(NumberUtils.INTEGER_MINUS_ONE.intValue() == -1);\n+        assertTrue(NumberUtils.SHORT_ZERO.shortValue() == 0);\n+        assertTrue(NumberUtils.SHORT_ONE.shortValue() == 1);\n+        assertTrue(NumberUtils.SHORT_MINUS_ONE.shortValue() == -1);\n+        assertTrue(NumberUtils.BYTE_ZERO.byteValue() == 0);\n+        assertTrue(NumberUtils.BYTE_ONE.byteValue() == 1);\n+        assertTrue(NumberUtils.BYTE_MINUS_ONE.byteValue() == -1);\n+        assertTrue(NumberUtils.DOUBLE_ZERO.doubleValue() == 0.0d);\n+        assertTrue(NumberUtils.DOUBLE_ONE.doubleValue() == 1.0d);\n+        assertTrue(NumberUtils.DOUBLE_MINUS_ONE.doubleValue() == -1.0d);\n+        assertTrue(NumberUtils.FLOAT_ZERO.floatValue() == 0.0f);\n+        assertTrue(NumberUtils.FLOAT_ONE.floatValue() == 1.0f);\n+        assertTrue(NumberUtils.FLOAT_MINUS_ONE.floatValue() == -1.0f);\n+    }\n }", "timestamp": 1039971208, "metainfo": ""}