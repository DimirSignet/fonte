{"sha": "aba8233c08297aa0bf13451c3594587735ed2ce0", "log": "Missing method getRawMessage for ContextedException and ContextedRuntimeException (LANG-737).  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/exception/ContextedException.java\n+++ b/src/main/java/org/apache/commons/lang3/exception/ContextedException.java\n     }\n \n     /**\n+     * Provides the message explaining the exception without the contextual data.\n+     * \n+     * @see java.lang.Throwable#getMessage()\n+     * @return the message\n+     * @since 3.0.1\n+     */\n+    public String getRawMessage() {\n+        return super.getMessage();\n+    }\n+\n+    /**\n      * {@inheritDoc}\n      */\n     public String getFormattedExceptionMessage(String baseMessage) {\n         return exceptionContext.getFormattedExceptionMessage(baseMessage);\n     }\n-\n }\n--- a/src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java\n+++ b/src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java\n     }\n \n     /**\n+     * Provides the message explaining the exception without the contextual data.\n+     * \n+     * @see java.lang.Throwable#getMessage()\n+     * @return the message\n+     * @since 3.0.1\n+     */\n+    public String getRawMessage() {\n+        return super.getMessage();\n+    }\n+\n+    /**\n      * {@inheritDoc}\n      */\n     public String getFormattedExceptionMessage(String baseMessage) {\n--- a/src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java\n+++ b/src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java\n         assertTrue(message != null);\n     }\n \n+    public void testRawMessage() {\n+        assertEquals(Exception.class.getName() + \": \" + TEST_MESSAGE, exceptionContext.getRawMessage());\n+        exceptionContext = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());\n+        assertEquals(TEST_MESSAGE_2, exceptionContext.getRawMessage());\n+        exceptionContext = new ContextedException(null, new Exception(TEST_MESSAGE), new DefaultExceptionContext());\n+        assertNull(exceptionContext.getRawMessage());\n+    }\n }\n--- a/src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java\n+++ b/src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java\n \n /**\n  * JUnit tests for ContextedRuntimeException.\n- *\n  */\n public class ContextedRuntimeExceptionTest extends AbstractExceptionContextTest<ContextedRuntimeException> {\n     \n         String message = exceptionContext.getMessage();\n         assertTrue(message != null);\n     }\n+\n+    public void testRawMessage() {\n+        assertEquals(Exception.class.getName() + \": \" + TEST_MESSAGE, exceptionContext.getRawMessage());\n+        exceptionContext = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());\n+        assertEquals(TEST_MESSAGE_2, exceptionContext.getRawMessage());\n+        exceptionContext = new ContextedRuntimeException(null, new Exception(TEST_MESSAGE), new DefaultExceptionContext());\n+        assertNull(exceptionContext.getRawMessage());\n+    }\n }", "timestamp": 1312319075, "metainfo": ""}