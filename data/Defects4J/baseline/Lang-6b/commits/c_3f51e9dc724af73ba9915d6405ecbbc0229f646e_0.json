{"sha": "3f51e9dc724af73ba9915d6405ecbbc0229f646e", "log": "Javadoc example java fixed. Submitted by:\tChristopher M. Judd <cjudd@columbus.rr.com>   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n  * <p> A typical invocation for this method would look like:</p>\n  * <pre>\n  * public boolean equals(Object o) {\n- *   return EqualsBuilder.reflectionEquals(this, obj);\n+ *   return EqualsBuilder.reflectionEquals(this, o);\n  * }\n  * </pre>\n- * \n+ *\n  * @author <a href=\"mailto:steve.downey@netfolio.com\">Steve Downey</a>\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: EqualsBuilder.java,v 1.8 2002/12/23 00:20:31 scolebourne Exp $\n+ * @version $Id: EqualsBuilder.java,v 1.9 2003/01/15 20:54:00 bayard Exp $\n  */\n public class EqualsBuilder {\n     /**\n     }\n \n     //-------------------------------------------------------------------------\n-    \n+\n     /**\n      * <p>This method uses reflection to determine if the two Object are equal.</p>\n      *\n      * fields, and not part of the value of the Object.</p>\n      *\n      * <p>Static fields will not be tested.</p>\n-     * \n+     *\n      * @param lhs  Left Hand Side\n      * @param rhs  Right Hand Side\n      * @return <code>true</code> if the two Objects have tested equals.\n      * derived fields, and not part of the value of the Object.</p>\n      *\n      * <p>Static fields will not be tested.</p>\n-     * \n+     *\n      * @param lhs  Left Hand Side\n      * @param rhs  Right Hand Side\n      * @param testTransients  whether to include transient fields\n      * @return <code>true</code> if the two Objects have tested equals.\n      */\n-    public static boolean reflectionEquals(Object lhs, Object rhs, \n+    public static boolean reflectionEquals(Object lhs, Object rhs,\n             boolean testTransients) {\n         if (lhs == rhs) {\n             return true;\n     }\n \n     //-------------------------------------------------------------------------\n-    \n+\n     /**\n      * <p>Adds the result of super.equals() to this builder.</p>\n      *\n         isEquals = superEquals;\n         return this;\n     }\n-    \n+\n     //-------------------------------------------------------------------------\n-    \n+\n     /**\n      * <p>Test if two <code>Object</code>s are equal using their\n      * <code>equals</code> method.</p>\n         }\n         Class lhsClass = lhs.getClass();\n         if (!lhsClass.isArray()) {\n-            //the simple case, not an array, just test the element \n+            //the simple case, not an array, just test the element\n             isEquals = lhs.equals(rhs);\n         } else {\n             //'Switch' on type of array, to dispatch to the correct handler", "timestamp": 1042664040, "metainfo": ""}