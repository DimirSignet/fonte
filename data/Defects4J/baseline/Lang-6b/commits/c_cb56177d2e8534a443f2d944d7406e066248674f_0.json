{"sha": "cb56177d2e8534a443f2d944d7406e066248674f", "log": "Added stringToFloat to NumberUtils Patch contributed by Fredrik Westermarck Reviewed by Phil Steitz   ", "commit": "\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n  * @author Phil Steitz\n  * @author Matthew Hawthorne\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @author <a href=\"mailto:fredrik@westermarck.com\">Fredrik Westermarck</a>\n  * @since 2.0\n- * @version $Id: NumberUtils.java,v 1.10 2003/08/18 02:22:24 bayard Exp $\n+ * @version $Id: NumberUtils.java,v 1.11 2003/09/04 07:27:12 psteitz Exp $\n  */\n public class NumberUtils {\n     \n         }\n     }\n \n+    /**\n+     * <p>Convert a <code>String</code> to a <code>float</code>, returning\n+     * <code>0.0f</code> if the conversion fails.</p>\n+     *\n+     * <p>If the string <code>str</code> is <code>null</code>,\n+     * <code>0.0f</code> is returned.</p>\n+     *\n+     * @param str the string to convert, may be <code>null</code>\n+     * @return the float represented by the string, or <code>0.0f</code>\n+     *  if conversion fails\n+     * @since 2.1\n+     */\n+    public static float stringToFloat(String str) {\n+        return stringToFloat(str, 0.0f);\n+    }\n+\n+    /**\n+     * <p>Convert a <code>String</code> to a <code>float</code>, returning a\n+     * default value if the conversion fails.</p>\n+     *\n+     * <p>If the string <code>str</code> is <code>null</code>, the default\n+     * value is returned.</p>\n+     *\n+     * @param str the string to convert, may be <code>null</code>\n+     * @param defaultValue the default value\n+     * @return the float represented by the string, or defaultValue\n+     *  if conversion fails\n+     * @since 2.1\n+     */\n+    public static float stringToFloat(String str, float defaultValue) {\n+      if(str==null) {\n+          return defaultValue;\n+      }\n+      \n+      try {\n+          return Float.parseFloat(str);\n+      } catch (NumberFormatException nfe) {\n+          return defaultValue;\n+      }\n+    }\n+\n     //-----------------------------------------------------------------------\n     // must handle Long, Float, Integer, Float, Short,\n     //                  BigDecimal, BigInteger and Byte\n--- a/src/test/org/apache/commons/lang/math/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/math/NumberUtilsTest.java\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: NumberUtilsTest.java,v 1.7 2003/08/18 02:22:27 bayard Exp $\n+ * @version $Id: NumberUtilsTest.java,v 1.8 2003/09/04 07:27:12 psteitz Exp $\n  */\n public class NumberUtilsTest extends TestCase {\n \n     public void testStringToIntStringI() {\n         assertTrue(\"stringToInt(String,int) 1 failed\", NumberUtils.stringToInt(\"12345\", 5) == 12345);\n         assertTrue(\"stringToInt(String,int) 2 failed\", NumberUtils.stringToInt(\"1234.5\", 5) == 5);\n+    }\n+\n+    /**\n+     * Test for float stringToFloat(String)\n+     */\n+    public void testStringToFloatString() {\n+        assertTrue(\"stringToFloat(String) 1 failed\", NumberUtils.stringToFloat(\"-1.2345\") == -1.2345f);\n+        assertTrue(\"stringToFloat(String) 2 failed\", NumberUtils.stringToFloat(\"1.2345\") == 1.2345f);\n+        assertTrue(\"stringToFloat(String) 3 failed\", NumberUtils.stringToFloat(\"abc\") == 0.0f);\n+        assertTrue(\"stringToFloat(empty) failed\", NumberUtils.stringToFloat(\"\") == 0.0f);\n+        assertTrue(\"stringToFloat(null) failed\", NumberUtils.stringToFloat(null) == 0.0f);\n+    }\n+\n+    /**\n+     * Test for float stringToFloat(String, float)\n+     */\n+    public void testStringToFloatStringF() {\n+        assertTrue(\"stringToFloat(String,int) 1 failed\", NumberUtils.stringToFloat(\"1.2345\", 5.1f) == 1.2345f);\n+        assertTrue(\"stringToFloat(String,int) 2 failed\", NumberUtils.stringToFloat(\"a\", 5.0f) == 5.0f);\n     }\n \n     public void testCreateNumber() {", "timestamp": 1062660432, "metainfo": ""}