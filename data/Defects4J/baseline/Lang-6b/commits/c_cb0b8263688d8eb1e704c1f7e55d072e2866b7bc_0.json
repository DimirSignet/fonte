{"sha": "cb0b8263688d8eb1e704c1f7e55d072e2866b7bc", "log": "Use a private static final instead of an ivar.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n     // HTML and XML\n     //--------------------------------------------------------------\n \n-    String[][] htmlEscapes = {\n+    private static final String[][] HTML_ESCAPES = {\n         {\"no escaping\", \"plain text\", \"plain text\"},\n         {\"no escaping\", \"plain text\", \"plain text\"},\n         {\"empty string\", \"\", \"\"},\n \n     @Test\n     public void testEscapeHtml() {\n-        for (int i = 0; i < htmlEscapes.length; ++i) {\n-            String message = htmlEscapes[i][0];\n-            String expected = htmlEscapes[i][1];\n-            String original = htmlEscapes[i][2];\n+        for (int i = 0; i < HTML_ESCAPES.length; ++i) {\n+            String message = HTML_ESCAPES[i][0];\n+            String expected = HTML_ESCAPES[i][1];\n+            String original = HTML_ESCAPES[i][2];\n             assertEquals(message, expected, StringEscapeUtils.escapeHtml4(original));\n             StringWriter sw = new StringWriter();\n             try {\n \n     @Test\n     public void testUnescapeHtml4() {\n-        for (int i = 0; i < htmlEscapes.length; ++i) {\n-            String message = htmlEscapes[i][0];\n-            String expected = htmlEscapes[i][2];\n-            String original = htmlEscapes[i][1];\n+        for (int i = 0; i < HTML_ESCAPES.length; ++i) {\n+            String message = HTML_ESCAPES[i][0];\n+            String expected = HTML_ESCAPES[i][2];\n+            String original = HTML_ESCAPES[i][1];\n             assertEquals(message, expected, StringEscapeUtils.unescapeHtml4(original));\n             \n             StringWriter sw = new StringWriter();", "timestamp": 1310855495, "metainfo": ""}