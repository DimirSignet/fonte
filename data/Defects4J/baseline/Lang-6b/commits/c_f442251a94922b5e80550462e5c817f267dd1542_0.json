{"sha": "f442251a94922b5e80550462e5c817f267dd1542", "log": "Add Pair.toString(String)  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/Pair.java\n+++ b/src/main/java/org/apache/commons/lang3/Pair.java\n package org.apache.commons.lang3;\n \n import java.io.Serializable;\n+import java.util.Formatter;\n import java.util.Map;\n \n import org.apache.commons.lang3.builder.CompareToBuilder;\n         return builder.toString();\n     }\n \n+    /**\n+     * Returns a String representation in the given format.\n+     * @param format a {@link Formatter} String.\n+     * @return a string for this object\n+     */\n+    public String toString(String format) {\n+        return String.format(format, getClass().getSimpleName(), getLeftElement(), getRightElement());\n+    }\n }\n--- a/src/test/java/org/apache/commons/lang3/PairTest.java\n+++ b/src/test/java/org/apache/commons/lang3/PairTest.java\n         assertEquals(\"(Key,Value)\", pair.toString());\n     }\n \n+    @Test\n+    public void testToStringFormat() throws Exception {\n+        Pair<String, String> pair = Pair.of(\"Key\", \"Value\");\n+        assertEquals(\"ImmutablePair\", pair.toString(\"%1$s\"));\n+        assertEquals(\"Key\", pair.toString(\"%2$s\"));\n+        assertEquals(\"Value\", pair.toString(\"%3$s\"));\n+        assertEquals(\"Key: Value\", pair.toString(\"%2$s: %3$s\"));\n+        pair = Pair.of(null, null);\n+        assertEquals(\"null: null\", pair.toString(\"%2$s: %3$s\"));\n+    }\n+\n }", "timestamp": 1302545274, "metainfo": ""}