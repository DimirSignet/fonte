{"sha": "bd492c1a804b76399bd566308a8dba5586c161ea", "log": "[LANG-492] Revert deletion of ArrayUtils.hashCode()  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n import java.util.Map;\n \n import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n \n     }\n \n     /**\n+     * <p>Get a hash code for an array handling multi-dimensional arrays correctly.</p>\n+     *\n+     * <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>\n+     *\n+     * @param array  the array to get a hash code for, <code>null</code> returns zero\n+     * @return a hash code for the array\n+     */\n+    public static int hashCode(Object array) {\n+        return new HashCodeBuilder().append(array).toHashCode();\n+    }\n+\n+    /**\n      * <p>Compares two arrays, using equals(), handling multi-dimensional arrays\n      * correctly.</p>\n      *\n--- a/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java\n         assertEquals(\"{}\", ArrayUtils.toString(new String[0], \"<empty>\"));\n         assertEquals(\"{<null>}\", ArrayUtils.toString(new String[] {null}, \"<empty>\"));\n         assertEquals(\"{pink,blue}\", ArrayUtils.toString(new String[] {\"pink\",\"blue\"}, \"<empty>\"));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testHashCode() {\n+        long[][] array1 = new long[][] {{2,5}, {4,5}};\n+        long[][] array2 = new long[][] {{2,5}, {4,6}};\n+        assertEquals(true, ArrayUtils.hashCode(array1) == ArrayUtils.hashCode(array1));\n+        assertEquals(false, ArrayUtils.hashCode(array1) == ArrayUtils.hashCode(array2));\n+        \n+        Object[] array3 = new Object[] {new String(new char[] {'A', 'B'})};\n+        Object[] array4 = new Object[] {\"AB\"};\n+        assertEquals(true, ArrayUtils.hashCode(array3) == ArrayUtils.hashCode(array3));\n+        assertEquals(true, ArrayUtils.hashCode(array3) == ArrayUtils.hashCode(array4));\n+        \n+        Object[] arrayA = new Object[] {new boolean[] {true, false}, new int[] {6, 7}};\n+        Object[] arrayB = new Object[] {new boolean[] {true, false}, new int[] {6, 7}};\n+        assertEquals(true, ArrayUtils.hashCode(arrayB) == ArrayUtils.hashCode(arrayA));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1299241884, "metainfo": ""}