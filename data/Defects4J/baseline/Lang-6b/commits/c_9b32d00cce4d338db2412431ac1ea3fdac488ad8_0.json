{"sha": "9b32d00cce4d338db2412431ac1ea3fdac488ad8", "log": "Apply generics  ", "commit": "\n--- a/src/java/org/apache/commons/lang/Validate.java\n+++ b/src/java/org/apache/commons/lang/Validate.java\n      * @throws IllegalArgumentException if the collection has\n      *  <code>null</code> elements or is <code>null</code>\n      */\n-    public static void noNullElements(Collection collection, String message) {\n+    public static void noNullElements(Collection<?> collection, String message) {\n         Validate.notNull(collection);\n         for (Iterator<?> it = collection.iterator(); it.hasNext();) {\n             if (it.next() == null) {\n      * @throws IllegalArgumentException if the collection has\n      *  <code>null</code> elements or is <code>null</code>\n      */\n-    public static void noNullElements(Collection collection) {\n+    public static void noNullElements(Collection<?> collection) {\n         Validate.notNull(collection);\n         int i = 0;\n         for (Iterator<?> it = collection.iterator(); it.hasNext(); i++) {\n      * @param message  the exception message if the <code>Collection</code> has elements not of type <code>clazz</code>\n      * @since 2.1\n      */\n-    public static void allElementsOfType(Collection collection, Class clazz, String message) {\n+    public static void allElementsOfType(Collection<?> collection, Class<?> clazz, String message) {\n         Validate.notNull(collection);\n         Validate.notNull(clazz);\n         for (Iterator<?> it = collection.iterator(); it.hasNext(); ) {\n      *            the <code>Class</code> which the collection's elements are expected to be, not null\n      * @since 2.1\n      */\n-    public static void allElementsOfType(Collection collection, Class clazz) {\n+    public static void allElementsOfType(Collection<?> collection, Class<?> clazz) {\n         Validate.notNull(collection);\n         Validate.notNull(clazz);\n         int i = 0;", "timestamp": 1256382532, "metainfo": ""}