{"sha": "4f663a93dcdc8130cf92c3ad31ce8a8ac1fd0804", "log": "Some small things I noticed in TypeCheck.java while working on issue 370.  param_list in visit: A param_list is always under a function, otherwise we'd have a parsing error.  new: typeable is set to true at the beginning of visit, and visitNew can't mutate it.  visitReturn: Misplaced returns can't happen, they'd have been caught during parsing.  R=nicksantos,johnlenz DELTA=18  (0 added, 15 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5292   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n         break;\n \n       case Token.PARAM_LIST:\n-        // If this is under a FUNCTION node, it is a parameter list and can be\n-        // ignored here.\n-        if (!parent.isFunction()) {\n-          ensureTyped(t, n, getJSType(n.getFirstChild()));\n-        } else {\n-          typeable = false;\n-        }\n+        typeable = false;\n         break;\n \n       case Token.COMMA:\n \n       case Token.NEW:\n         visitNew(t, n);\n-        typeable = true;\n         break;\n \n       case Token.CALL:\n       case Token.WITH: {\n         Node child = n.getFirstChild();\n         childType = getJSType(child);\n-        validator.expectObject(\n-            t, child, childType, \"with requires an object\");\n+        validator.expectObject(t, child, childType, \"with requires an object\");\n         typeable = false;\n         break;\n       }\n    * @param n The node being visited.\n    */\n   private void visitReturn(NodeTraversal t, Node n) {\n-    Node function = t.getEnclosingFunction();\n-\n-    // This is a misplaced return, but the real JS will fail to compile,\n-    // so let it go.\n-    if (function == null) {\n-      return;\n-    }\n-    JSType jsType = getJSType(function);\n+    JSType jsType = getJSType(t.getEnclosingFunction());\n \n     if (jsType.isFunctionType()) {\n       FunctionType functionType = jsType.toMaybeFunctionType();", "timestamp": 1343846378, "metainfo": ""}