{"sha": "6a4bafed443e5365d8580ac18af603e7d250fe2d", "log": "Add some unit tests.  R=acleung DELTA=26  (24 added, 1 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=24   ", "commit": "\n--- a/src/com/google/javascript/jscomp/OptimizeParameters.java\n+++ b/src/com/google/javascript/jscomp/OptimizeParameters.java\n       // Any non-call reference maybe introducing an alias. Don't try to\n       // change the function signature, if all the aliases can't also be\n       // changed.\n+      // TODO(johnlenz): Support .call signature changes.\n       if (!SimpleDefinitionFinder.isCallOrNewSite(site)) {\n         return false;\n       }\n-\n \n       // TODO(johnlenz): support specialization\n \n--- a/test/com/google/javascript/jscomp/OptimizeParametersTest.java\n+++ b/test/com/google/javascript/jscomp/OptimizeParametersTest.java\n \n   public void testDoOptimizeCall() {\n     testSame(\"var foo = function () {}; foo(); foo.call();\");\n+    // TODO(johnlenz): support foo.call\n     testSame(\"var foo = function () {}; foo(); foo.call(this);\");\n+    testSame(\"var foo = function (a, b) {}; foo(1); foo.call(this, 1);\");\n+    testSame(\"var foo = function () {}; foo(); foo.call(null);\");\n+    testSame(\"var foo = function (a, b) {}; foo(1); foo.call(null, 1);\");\n+\n+    testSame(\"var foo = function () {}; foo.call();\");\n     // TODO(johnlenz): support foo.call\n-    testSame(\"var foo = function (a, b) {}; foo(1); foo.call(this, 1);\");\n+    testSame(\"var foo = function () {}; foo.call(this);\");\n+    testSame(\"var foo = function (a, b) {}; foo.call(this, 1);\");\n+    testSame(\"var foo = function () {}; foo.call(null);\");\n+    testSame(\"var foo = function (a, b) {}; foo.call(null, 1);\");\n+  }\n+\n+  public void testDoOptimizeApply() {\n+    testSame(\"var foo = function () {}; foo(); foo.apply();\");\n+    testSame(\"var foo = function () {}; foo(); foo.apply(this);\");\n+    testSame(\"var foo = function (a, b) {}; foo(1); foo.apply(this, 1);\");\n+    testSame(\"var foo = function () {}; foo(); foo.apply(null);\");\n+    testSame(\"var foo = function (a, b) {}; foo(1); foo.apply(null, []);\");\n+\n+    testSame(\"var foo = function () {}; foo.apply();\");\n+    testSame(\"var foo = function () {}; foo.apply(this);\");\n+    testSame(\"var foo = function (a, b) {}; foo.apply(this, 1);\");\n+    testSame(\"var foo = function () {}; foo.apply(null);\");\n+    testSame(\"var foo = function (a, b) {}; foo.apply(null, []);\");\n   }\n \n   public void testRemoveOneOptionalExpressionAssign() {", "timestamp": 1291137446, "metainfo": ""}