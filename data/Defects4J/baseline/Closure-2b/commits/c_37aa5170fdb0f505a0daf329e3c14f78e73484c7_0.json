{"sha": "37aa5170fdb0f505a0daf329e3c14f78e73484c7", "log": "Contributed by Robert Gust Bardon. Fixes issue 481.  R=nicksantos DELTA=23  (23 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4788   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ant/CompileTask.java\n+++ b/src/com/google/javascript/jscomp/ant/CompileTask.java\n  */\n public final class CompileTask\n     extends Task {\n+  private CompilerOptions.LanguageMode languageIn;\n   private WarningLevel warningLevel;\n   private boolean debugOptions;\n   private String encoding = \"UTF-8\";\n   private final List<Warning> warnings;\n \n   public CompileTask() {\n+    this.languageIn = CompilerOptions.LanguageMode.ECMASCRIPT3;\n     this.warningLevel = WarningLevel.DEFAULT;\n     this.debugOptions = false;\n     this.compilationLevel = CompilationLevel.SIMPLE_OPTIMIZATIONS;\n   }\n \n   /**\n+   * Set the language to which input sources conform.\n+   * @param value The name of the language.\n+   *     (ECMASCRIPT3, ECMASCRIPT5, ECMASCRIPT5_STRICT).\n+   */\n+  public void setLanguageIn(String value) {\n+    if (value.equals(\"ECMASCRIPT5_STRICT\") || value.equals(\"ES5_STRICT\")) {\n+      this.languageIn = CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT;\n+    } else if (value.equals(\"ECMASCRIPT5\") || value.equals(\"ES5\")) {\n+      this.languageIn = CompilerOptions.LanguageMode.ECMASCRIPT5;\n+    } else if (value.equals(\"ECMASCRIPT3\") || value.equals(\"ES3\")) {\n+      this.languageIn = CompilerOptions.LanguageMode.ECMASCRIPT3;\n+    } else {\n+      throw new BuildException(\n+          \"Unrecognized 'languageIn' option value (\" + value + \")\");\n+    }\n+  }\n+\n+  /**\n    * Set the warning level.\n    * @param value The warning level by string name. (default, quiet, verbose).\n    */\n     options.prettyPrint = this.prettyPrint;\n     options.printInputDelimiter = this.printInputDelimiter;\n     options.generateExports = this.generateExports;\n+\n+    options.setLanguageIn(this.languageIn);\n \n     this.warningLevel.setOptionsForWarningLevel(options);\n     options.setManageClosureDependencies(manageDependencies);", "timestamp": 1337100161, "metainfo": ""}