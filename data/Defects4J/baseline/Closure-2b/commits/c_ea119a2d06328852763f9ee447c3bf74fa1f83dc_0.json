{"sha": "ea119a2d06328852763f9ee447c3bf74fa1f83dc", "log": "Allow dependency sorting even when closure pass is off. Fixes issue 768  R=johnlenz DELTA=23  (21 added, 1 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5100   ", "commit": "\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n \n       // Check if the sources need to be re-ordered.\n       boolean staleInputs = false;\n-      if (options.dependencyOptions.needsManagement() &&\n-          options.closurePass) {\n+      if (options.dependencyOptions.needsManagement()) {\n         for (CompilerInput input : inputs) {\n           // Forward-declare all the provided types, so that they\n           // are not flagged even if they are dropped from the process.\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n         \"var x = {};\");\n   }\n \n+  public void testDependencySorting() throws Exception {\n+    CompilerOptions options = createCompilerOptions();\n+    options.setDependencyOptions(\n+        new DependencyOptions()\n+        .setDependencySorting(true));\n+    test(\n+        options,\n+        new String[] {\n+          \"goog.require('x');\",\n+          \"goog.provide('x');\",\n+        },\n+        new String[] {\n+          \"goog.provide('x');\",\n+          \"goog.require('x');\",\n+\n+          // For complicated reasons involving modules,\n+          // the compiler creates a synthetic source file.\n+          \"\",\n+        });\n+  }\n+\n   public void testStrictWarningsGuard() throws Exception {\n     CompilerOptions options = createCompilerOptions();\n     options.checkTypes = true;", "timestamp": 1341290648, "metainfo": ""}