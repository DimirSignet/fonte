{"sha": "1aba9181988004a63bbdecd6cee959ed6200d5ce", "log": "Fix a bug where we wouldn't warn about bad parameters if any of the alternates of a union were bogus.  R=dimvar DELTA=260  (67 added, 111 deleted, 82 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5867   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/ProxyObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/ProxyObjectType.java\n   }\n \n   @Override\n-  public boolean canAssignTo(JSType that) {\n-    return referencedType.canAssignTo(that);\n-  }\n-\n-  @Override\n   public int hashCode() {\n     return referencedType.hashCode();\n   }\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n     }\n \n     return propertyType;\n-  }\n-\n-  @Override\n-  public boolean canAssignTo(JSType that) {\n-    boolean canAssign = true;\n-    for (JSType t : alternates) {\n-      if (t.isUnknownType()) {\n-        return true;\n-      }\n-      canAssign &= t.canAssignTo(that);\n-    }\n-    return canAssign;\n   }\n \n   @Override\n--- a/src/com/google/javascript/rhino/jstype/UnknownType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnknownType.java\n   @Override\n   public boolean isCheckedUnknownType() {\n     return isChecked;\n-  }\n-\n-  @Override\n-  public boolean canAssignTo(JSType that) {\n-    return true;\n   }\n \n   @Override\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"actual parameter 2 of g does not match formal parameter\\n\" +\n         \"found   : boolean\\n\" +\n         \"required: (number|undefined)\");\n+  }\n+\n+  public void testFunctionArguments17() throws Exception {\n+    testClosureTypesMultipleWarnings(\n+        \"/** @param {booool|string} x */\" +\n+        \"function f(x) { g(x) }\" +\n+        \"/** @param {number} x */\" +\n+        \"function g(x) {}\",\n+        Lists.newArrayList(\n+            \"Bad type annotation. Unknown type booool\",\n+            \"actual parameter 1 of g does not match formal parameter\\n\" +\n+            \"found   : (booool|null|string)\\n\" +\n+            \"required: number\"));\n   }\n \n   public void testPrintFunctionName1() throws Exception {", "timestamp": 1353946966, "metainfo": ""}