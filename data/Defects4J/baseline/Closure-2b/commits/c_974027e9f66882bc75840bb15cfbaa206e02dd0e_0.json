{"sha": "974027e9f66882bc75840bb15cfbaa206e02dd0e", "log": "Make sure that the compiler doesn't crash in IDE mode if there are bogus break statements  R=acleung DELTA=20  (19 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4125   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n         }\n         lastJump = cur;\n       }\n-      Preconditions.checkState(parent != null, \"Cannot find break target.\");\n+      if (parent == null) {\n+        if (compiler.isIdeMode()) {\n+          // In IDE mode, we expect that the data flow graph may\n+          // not be well-formed.\n+          return;\n+        } else {\n+          throw new IllegalStateException(\"Cannot find break target.\");\n+        }\n+      }\n       previous = cur;\n     }\n     if (lastJump == node) {\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n     test(options, code, expected);\n   }\n \n+  public void testBadBreakStatementInIdeMode() {\n+    // Ensure that type-checking doesn't crash, even if the CFG is malformed.\n+    // This can happen in IDE mode.\n+    CompilerOptions options = createCompilerOptions();\n+    options.ideMode = true;\n+    options.checkTypes = true;\n+    test(options,\n+         \"function f() { try { } catch(e) { break; } }\",\n+         RhinoErrorReporter.PARSE_ERROR);\n+  }\n+\n   public void testIssue63SourceMap() {\n     CompilerOptions options = createCompilerOptions();\n     String code = \"var a;\";", "timestamp": 1327345843, "metainfo": ""}