{"sha": "5b0913e2ad3efc49ddf1e737f4e2addbfe04f7bf", "log": "A small optimization based on YourKit profiling of the PeepholeOptimizer  Test case - simple optimizations of all shindig js - Total time 15s - Time spent in ImmutableSet array conversion 1s  Using a fixed size array eliminates most of the ImmutableSet overhead  R=johnlenz,acleung DELTA=14  (6 added, 5 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=694   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java\n+++ b/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java\n     implements CompilerPass {\n   private AbstractCompiler compiler;\n \n-  private ImmutableSet<AbstractPeepholeOptimization> peepholeOptimizations;\n+  // Use an array here for faster iteration compared to ImmutableSet\n+  // TODO should sort based on likelihood that a given optimzation can\n+  // modify something.\n+  private final AbstractPeepholeOptimization[] peepholeOptimizations;\n \n-  PeepholeOptimizationsPass(AbstractCompiler compiler,\n-      ImmutableSet<AbstractPeepholeOptimization> optimizations) {\n-    this.compiler = compiler;\n-    this.peepholeOptimizations = optimizations;\n-  }\n \n   /**\n    * Creates a peephole optimization pass that runs the given\n    */\n   PeepholeOptimizationsPass(AbstractCompiler compiler,\n       AbstractPeepholeOptimization... optimizations) {\n-    this(compiler, ImmutableSet.copyOf(optimizations));\n+    this.compiler = compiler;\n+    this.peepholeOptimizations = optimizations;\n   }\n \n   public AbstractCompiler getCompiler() {\n--- a/test/com/google/javascript/jscomp/PeepholeOptimizationsPassTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeOptimizationsPassTest.java\n \n   @Override\n   public CompilerPass getProcessor(final Compiler compiler) {\n-    return new PeepholeOptimizationsPass(compiler, currentPeepholePasses);\n+    return new PeepholeOptimizationsPass(compiler,\n+        currentPeepholePasses.toArray(\n+            new AbstractPeepholeOptimization[currentPeepholePasses.size()]));\n   }\n \n   @Override", "timestamp": 1298921538, "metainfo": ""}