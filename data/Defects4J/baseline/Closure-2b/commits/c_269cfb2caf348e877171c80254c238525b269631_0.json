{"sha": "269cfb2caf348e877171c80254c238525b269631", "log": "Add a little santity to NodeUtil.getStringValue.  R=nicksantos DELTA=14  (13 added, 1 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=96   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n   static String getStringValue(Node n) {\n     // TODO(user): Convert constant array, object, and regex literals as well.\n     switch (n.getType()) {\n-      case Token.NAME:\n       case Token.STRING:\n         return n.getString();\n+\n+      case Token.NAME:\n+        String name = n.getString();\n+        if (\"undefined\".equals(name)\n+            || \"Infinity\".equals(name)\n+            || \"NaN\".equals(name)) {\n+          return name;\n+        }\n+        break;\n \n       case Token.NUMBER:\n         double value = n.getDouble();\n--- a/test/com/google/javascript/jscomp/NodeUtilTest.java\n+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java\n     assertEquals(\"undefined\", NodeUtil.getStringValue(getNode(\"undefined\")));\n     assertEquals(\"undefined\", NodeUtil.getStringValue(getNode(\"void 0\")));\n     assertEquals(\"undefined\", NodeUtil.getStringValue(getNode(\"void foo()\")));\n+    \n+    assertEquals(\"NaN\", NodeUtil.getStringValue(getNode(\"NaN\")));\n+    assertEquals(\"Infinity\", NodeUtil.getStringValue(getNode(\"Infinity\")));\n+    assertEquals(null, NodeUtil.getStringValue(getNode(\"x\")));\n   }\n \n   public void testGetFunctionName1() throws Exception {", "timestamp": 1291838683, "metainfo": ""}