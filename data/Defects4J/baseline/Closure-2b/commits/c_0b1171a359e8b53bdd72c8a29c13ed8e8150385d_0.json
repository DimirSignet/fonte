{"sha": "0b1171a359e8b53bdd72c8a29c13ed8e8150385d", "log": "Don't change side effect ordering when merging into FOR-IN.  R=johnlenz DELTA=4  (3 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1310   ", "commit": "\n--- a/src/com/google/javascript/jscomp/StatementFusion.java\n+++ b/src/com/google/javascript/jscomp/StatementFusion.java\n         // We don't want to add a new return value.\n         return last.hasChildren();\n       case Token.FOR:\n-        return NodeUtil.isForIn(last);\n+        return NodeUtil.isForIn(last) &&\n+            // Avoid cases where we have for(var x = foo() in a) { ....\n+            !NodeUtil.mayHaveSideEffects(last.getFirstChild());\n     }\n \n     return false;\n--- a/test/com/google/javascript/jscomp/StatementFusionTest.java\n+++ b/test/com/google/javascript/jscomp/StatementFusionTest.java\n \n   public void testFuseIntoForIn() {\n     fuse(\"a;b;c;for(x in y){}\", \"for(x in a,b,c,y){}\");\n+    fuseSame(\"a();for(var x = b() in y){}\");\n   }\n \n   public void testNoFuseIntoWhile() {", "timestamp": 1302303426, "metainfo": ""}