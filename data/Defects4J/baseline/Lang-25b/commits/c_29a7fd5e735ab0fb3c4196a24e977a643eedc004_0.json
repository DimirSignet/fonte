{"sha": "29a7fd5e735ab0fb3c4196a24e977a643eedc004", "log": "LANG-374 - implement Sebb's improvement to use StringUtils.containsNone()  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n  * @version $Id$\n  */\n public class StringEscapeUtils {\n+\n+    private static final char[] CSV_SEARCH_CHARS = new char[] {',', '\"', CharUtils.CR, CharUtils.LF};\n \n     /**\n      * <p><code>StringEscapeUtils</code> instances should NOT be constructed in\n      * @since 2.4\n      */\n     public static String escapeCsv(String str) {\n-        if (!containsCsvChars(str)) {\n+        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n             return str;\n         }\n         StringBuffer buffer = new StringBuffer(str.length() + 10);\n      * @since 2.4\n      */\n     public static void escapeCsv(Writer out, String str) throws IOException {\n-        if (!containsCsvChars(str)) {\n+        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {\n             if (str != null) {\n                 out.write(str);\n             }\n         out.write('\"');\n     }\n \n-    /**\n-     * Determine if the String contains any characters that need escaping for CSV files.\n-     *\n-     * @param str  the string to escape, may be null\n-     * @return <code>true</code> if the String contains characters that need escaping\n-     * for CSV files, otherwise <code>false</code>\n-     * @since 2.4\n-     */\n-    private static boolean containsCsvChars(String str) {\n-        return (StringUtils.contains(str, '\"') ||\n-                StringUtils.contains(str, ',') ||\n-                StringUtils.contains(str, CharUtils.CR) ||\n-                StringUtils.contains(str, CharUtils.LF));\n-    }\n-\n }", "timestamp": 1195291656, "metainfo": ""}