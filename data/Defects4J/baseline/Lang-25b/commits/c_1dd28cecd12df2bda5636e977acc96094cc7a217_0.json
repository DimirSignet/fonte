{"sha": "1dd28cecd12df2bda5636e977acc96094cc7a217", "log": "Minor code simplification  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Object[] nullToEmpty(Object[] array) {\n-        if (array == null) {\n-            return EMPTY_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static String[] nullToEmpty(String[] array) {\n-        if (array == null) {\n-            return EMPTY_STRING_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_STRING_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static long[] nullToEmpty(long[] array) {\n-        if (array == null) {\n-            return EMPTY_LONG_ARRAY;\n-        }\n-        if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_LONG_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static int[] nullToEmpty(int[] array) {\n-        if (array == null) {\n-            return EMPTY_INT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_INT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static short[] nullToEmpty(short[] array) {\n-        if (array == null) {\n-            return EMPTY_SHORT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_SHORT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static char[] nullToEmpty(char[] array) {\n-        if (array == null) {\n-            return EMPTY_CHAR_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_CHAR_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static byte[] nullToEmpty(byte[] array) {\n-        if (array == null) {\n-            return EMPTY_BYTE_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_BYTE_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static double[] nullToEmpty(double[] array) {\n-        if (array == null) {\n-            return EMPTY_DOUBLE_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_DOUBLE_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static float[] nullToEmpty(float[] array) {\n-        if (array == null) {\n-            return EMPTY_FLOAT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_FLOAT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static boolean[] nullToEmpty(boolean[] array) {\n-        if (array == null) {\n-            return EMPTY_BOOLEAN_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_BOOLEAN_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Long[] nullToEmpty(Long[] array) {\n-        if (array == null) {\n-            return EMPTY_LONG_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_LONG_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Integer[] nullToEmpty(Integer[] array) {\n-        if (array == null) {\n-            return EMPTY_INTEGER_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_INTEGER_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Short[] nullToEmpty(Short[] array) {\n-        if (array == null) {\n-            return EMPTY_SHORT_OBJECT_ARRAY;\n-        }else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_SHORT_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Character[] nullToEmpty(Character[] array) {\n-        if (array == null) {\n-            return EMPTY_CHARACTER_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_CHARACTER_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Byte[] nullToEmpty(Byte[] array) {\n-        if (array == null) {\n-            return EMPTY_BYTE_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_BYTE_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Double[] nullToEmpty(Double[] array) {\n-        if (array == null) {\n-            return EMPTY_DOUBLE_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_DOUBLE_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Float[] nullToEmpty(Float[] array) {\n-        if (array == null) {\n-            return EMPTY_FLOAT_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_FLOAT_OBJECT_ARRAY;\n         }\n         return array;\n      * @return the same array, <code>public static</code> empty array if <code>null</code> or empty input\n      */\n     public static Boolean[] nullToEmpty(Boolean[] array) {\n-        if (array == null) {\n-            return EMPTY_BOOLEAN_OBJECT_ARRAY;\n-        } else if (array.length == 0) {\n+        if (array == null || array.length == 0) {\n             return EMPTY_BOOLEAN_OBJECT_ARRAY;\n         }\n         return array;", "timestamp": 1266880938, "metainfo": ""}