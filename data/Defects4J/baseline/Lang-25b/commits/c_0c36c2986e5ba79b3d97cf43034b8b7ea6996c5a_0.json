{"sha": "0c36c2986e5ba79b3d97cf43034b8b7ea6996c5a", "log": "Add and rework isEmpty, isNotEmpty, isEmptyTrimmed, isNotEmptyTrimmed   ", "commit": "\n--- a/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: StringUtilsTrimEmptyTest.java,v 1.7 2003/03/24 00:47:02 scolebourne Exp $\n+ * @version $Id: StringUtilsTrimEmptyTest.java,v 1.8 2003/07/14 22:26:22 scolebourne Exp $\n  */\n public class StringUtilsTrimEmptyTest extends TestCase {\n     private static final String FOO = \"foo\";\n         assertEquals(\"\", StringUtils.trimToEmpty(null));\n     }\n \n+    public void testIsEmpty() {\n+        assertEquals(false, StringUtils.isEmpty(\"foo\"));\n+        assertEquals(false, StringUtils.isEmpty(\"  foo  \"));\n+        assertEquals(false, StringUtils.isEmpty(\" \"));\n+        assertEquals(true, StringUtils.isEmpty(\"\"));\n+        assertEquals(true, StringUtils.isEmpty(null));\n+    }\n+\n     public void testIsNotEmpty() {\n-        assertEquals(true, StringUtils.isNotEmpty(FOO));\n+        assertEquals(true, StringUtils.isNotEmpty(\"foo\"));\n+        assertEquals(true, StringUtils.isNotEmpty(\"  foo  \"));\n         assertEquals(true, StringUtils.isNotEmpty(\" \"));\n         assertEquals(false, StringUtils.isNotEmpty(\"\"));\n         assertEquals(false, StringUtils.isNotEmpty(null));\n     }\n \n-    public void testIsEmpty() {\n-        assertEquals(false, StringUtils.isEmpty(FOO));\n-        assertEquals(true, StringUtils.isEmpty(\" \"));\n-        assertEquals(true, StringUtils.isEmpty(\"\"));\n-        assertEquals(true, StringUtils.isEmpty(null));\n+    public void testIsEmptyTrimmed() {\n+        assertEquals(false, StringUtils.isEmptyTrimmed(\"foo\"));\n+        assertEquals(false, StringUtils.isEmptyTrimmed(\"  foo  \"));\n+        assertEquals(true, StringUtils.isEmptyTrimmed(\" \"));\n+        assertEquals(true, StringUtils.isEmptyTrimmed(\"\"));\n+        assertEquals(true, StringUtils.isEmptyTrimmed(null));\n+    }\n+\n+    public void testIsNotEmptyTrimmed() {\n+        assertEquals(true, StringUtils.isNotEmptyTrimmed(\"foo\"));\n+        assertEquals(true, StringUtils.isNotEmptyTrimmed(\"  foo  \"));\n+        assertEquals(false, StringUtils.isNotEmptyTrimmed(\" \"));\n+        assertEquals(false, StringUtils.isNotEmptyTrimmed(\"\"));\n+        assertEquals(false, StringUtils.isNotEmptyTrimmed(null));\n     }\n \n     public void testDeleteSpace() {", "timestamp": 1058221582, "metainfo": ""}