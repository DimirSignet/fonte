{"sha": "ed6faacee295312cb5b47d8e5cafceab8e3ff413", "log": "Fix tabs to spaces, thank you J\u00f6rg.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * <code>false</code> if no match or null input\n      * @since 2.4\n      */\n-\tpublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n-\t\tif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tint csLength = cs.length();\n-\t\tint searchLength = searchChars.length;\n-\t\tint csLastIndex = csLength - 1;\n-\t\tint searchLastIndex = searchLength - 1;\n-\t\tfor (int i = 0; i < csLength; i++) {\n-\t\t\tchar ch = cs.charAt(i);\n-\t\t\tfor (int j = 0; j < searchLength; j++) {\n-\t\t\t\tif (searchChars[j] == ch) {\n-\t\t\t\t\tif (i < csLastIndex && j < searchLastIndex && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n-\t\t\t\t\t\t// ch is a supplementary character\n-\t\t\t\t\t\tif (searchChars[j + 1] == cs.charAt(i + 1)) {\n-\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n-\t\t\t\t\t\treturn true;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn false;\n-\t}\n+    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n+        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n+            return false;\n+        }\n+        int csLength = cs.length();\n+        int searchLength = searchChars.length;\n+        int csLastIndex = csLength - 1;\n+        int searchLastIndex = searchLength - 1;\n+        for (int i = 0; i < csLength; i++) {\n+            char ch = cs.charAt(i);\n+            for (int j = 0; j < searchLength; j++) {\n+                if (searchChars[j] == ch) {\n+                    if (i < csLastIndex && j < searchLastIndex && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n+                        // ch is a supplementary character\n+                        if (searchChars[j + 1] == cs.charAt(i + 1)) {\n+                            return true;\n+                        }\n+                    } else {\n+                        // ch is in the Basic Multilingual Plane\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n \n     /**\n      * <p>", "timestamp": 1268678857, "metainfo": ""}