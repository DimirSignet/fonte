{"sha": "dcdcae1acbf8860885736c4391b7821102dcd41f", "log": "Update containsOnly  Add containsNone   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.36 2003/03/23 18:05:44 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.37 2003/03/23 21:52:31 scolebourne Exp $\n  */\n public class StringUtils {\n \n         return true;\n     }\n \n+    /**\n+     * <p>Checks if the String contains only certain chars.</p>\n+     *\n+     * @param str  the string to check\n+     * @param validChars  a string of valid chars\n+     * @return true if it only contains valid chars and is non-null\n+     */\n+    public static boolean containsOnly(String str, String validChars) {\n+        if (str == null || validChars == null) {\n+            return false;\n+        }\n+        return containsOnly(str, validChars.toCharArray());\n+    }\n+    \n+    /**\n+     * <p>Checks if the String contains only certain chars.</p>\n+     *\n+     * @param str  the string to check\n+     * @param validChars  an array of valid chars\n+     * @return true if it only contains valid chars and is non-null\n+     */\n+    public static boolean containsOnly(String str, char[] validChars) {\n+        if (str == null || validChars == null) {\n+            return false;\n+        }\n+        int strSize = str.length();\n+        int validSize = validChars.length;\n+        for (int i = 0; i < strSize; i++) {\n+            char ch = str.charAt(i);\n+            boolean contains = false;\n+            for (int j = 0; j < validSize; j++) {\n+                if (validChars[j] == ch) {\n+                    contains = true;\n+                    break;\n+                }\n+            }\n+            if (contains == false) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * <p>Checks that the String does not contain certain chars.</p>\n+     *\n+     * @param str  the string to check\n+     * @param invalidChars  a string of invalid chars\n+     * @return true if it contains none of the invalid chars, or is null\n+     */\n+    public static boolean containsNone(String str, String invalidChars) {\n+        if (str == null || invalidChars == null) {\n+            return true;\n+        }\n+        return containsNone(str, invalidChars.toCharArray());\n+    }\n+    \n+    /**\n+     * <p>Checks that the String does not contain certain chars.</p>\n+     *\n+     * @param str  the string to check\n+     * @param invalidChars  an array of invalid chars\n+     * @return true if it contains none of the invalid chars, or is null\n+     */\n+    public static boolean containsNone(String str, char[] invalidChars) {\n+        if (str == null || invalidChars == null) {\n+            return true;\n+        }\n+        int strSize = str.length();\n+        int validSize = invalidChars.length;\n+        for (int i = 0; i < strSize; i++) {\n+            char ch = str.charAt(i);\n+            for (int j = 0; j < validSize; j++) {\n+                if (invalidChars[j] == ch) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n     // Defaults\n     //--------------------------------------------------------------------------\n     \n         return d[n][m];\n     }\n \n-    /**\n-     * <p>Checks if the String contains only certain chars.</p>\n-     *\n-     * @param str the String to check\n-     * @param valid an array of valid chars\n-     * @return true if it only contains valid chars and is non-null\n-     */\n-    public static boolean containsOnly(String str, char[] valid) {\n-        if (str == null || valid == null) {\n-            return false;\n-        }\n-\n-        int strSize = str.length();\n-        int validSize = valid.length;\n-\n-        for (int i = 0; i < strSize; i++) {\n-            boolean contains = false;\n-            for (int j = 0; j < validSize; j++) {\n-                if (valid[j] == str.charAt(i)) {\n-                    contains = true;\n-                    break;\n-                }\n-            }\n-            if (!contains) {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n-    }\n }", "timestamp": 1048456351, "metainfo": ""}