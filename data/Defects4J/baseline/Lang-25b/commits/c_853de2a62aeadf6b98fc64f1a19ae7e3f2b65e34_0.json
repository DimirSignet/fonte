{"sha": "853de2a62aeadf6b98fc64f1a19ae7e3f2b65e34", "log": "Make formatting consistent across the file: Replace \"methodcall( expr )\" with \"methodcall(expr)\". Replace \"type foo = (expr)\" with \"type foo = expr\". Replace \"if(expr)\" with \"if (expr)\"   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n      * @since 2.1\n      */\n     public static Object[] add(Object[] array, Object element) {\n-        Class type = (array != null ? array.getClass() : (element != null ? element.getClass() : Object.class));\n+        Class type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);\n         Object[] newArray = (Object[]) copyArrayGrow1(array, type);\n         newArray[newArray.length - 1] = element;\n         return newArray;\n      */\n     public static Object[] add(Object[] array, int index, Object element) {\n         Class clss = null;\n-        if(array != null) {\n+        if (array != null) {\n             clss = array.getClass().getComponentType();\n-        } else\n-        if(element != null) {\n+        } else if (element != null) {\n             clss = element.getClass();\n         } else {\n-            return new Object[] { null };\n-        }\n-        return (Object[]) add( array, index, element, clss );\n+            return new Object[]{null};\n+        }\n+        return (Object[]) add(array, index, element, clss);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static boolean[] add(boolean[] array, int index, boolean element) {\n-        return (boolean[]) add( array, index, BooleanUtils.toBooleanObject(element), Boolean.TYPE );\n+        return (boolean[]) add(array, index, BooleanUtils.toBooleanObject(element), Boolean.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static char[] add(char[] array, int index, char element) {\n-        return (char[]) add( array, index, new Character(element), Character.TYPE );\n+        return (char[]) add(array, index, new Character(element), Character.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static byte[] add(byte[] array, int index, byte element) {\n-        return (byte[]) add( array, index, new Byte(element), Byte.TYPE );\n+        return (byte[]) add(array, index, new Byte(element), Byte.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static short[] add(short[] array, int index, short element) {\n-        return (short[]) add( array, index, new Short(element), Short.TYPE );\n+        return (short[]) add(array, index, new Short(element), Short.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static int[] add(int[] array, int index, int element) {\n-        return (int[]) add( array, index, new Integer(element), Integer.TYPE );\n+        return (int[]) add(array, index, new Integer(element), Integer.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static long[] add(long[] array, int index, long element) {\n-        return (long[]) add( array, index, new Long(element), Long.TYPE );\n+        return (long[]) add(array, index, new Long(element), Long.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static float[] add(float[] array, int index, float element) {\n-        return (float[]) add( array, index, new Float(element), Float.TYPE );\n+        return (float[]) add(array, index, new Float(element), Float.TYPE);\n     }\n     \n     /**\n      * (index < 0 || index > array.length).\n      */\n     public static double[] add(double[] array, int index, double element) {\n-        return (double[]) add( array, index, new Double(element), Double.TYPE );\n+        return (double[]) add(array, index, new Double(element), Double.TYPE);\n     }\n     \n     /**", "timestamp": 1204330912, "metainfo": ""}