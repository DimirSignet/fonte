{"sha": "5010bce87b77fa2f475877faf3d8c293a0e44d6f", "log": "added test code for Map keySet size and List size   ", "commit": "\n--- a/src/test/org/apache/commons/lang/enum/EnumTest.java\n+++ b/src/test/org/apache/commons/lang/enum/EnumTest.java\n  * Test cases for the {@link Enum} class.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: EnumTest.java,v 1.1 2002/08/11 23:17:54 scolebourne Exp $\n+ * @version $Id: EnumTest.java,v 1.2 2002/10/13 18:41:24 sullis Exp $\n  */\n \n public final class EnumTest extends TestCase {\n \n     public void testList() {\n         List list = ColorEnum.getEnumList();\n+        \n+        assertNotNull(list);\n+        \n+        assertEquals( list.size(),\n+        \t\t\t\tColorEnum.getEnumMap().keySet().size());\n+        \n         Iterator it = list.iterator();\n         assertSame(ColorEnum.RED, it.next());\n         assertSame(ColorEnum.GREEN, it.next());\n \n     public void testMap() {\n         Map map = ColorEnum.getEnumMap();\n+        \n+        assertNotNull(map);\n+        \n+        assertEquals( map.keySet().size(),\n+        \t\t\t\tColorEnum.getEnumList().size());\n+        \n         assertTrue(map.containsValue(ColorEnum.RED));\n         assertTrue(map.containsValue(ColorEnum.GREEN));\n         assertTrue(map.containsValue(ColorEnum.BLUE));\n--- a/src/test/org/apache/commons/lang/enum/ValuedEnumTest.java\n+++ b/src/test/org/apache/commons/lang/enum/ValuedEnumTest.java\n  * Test cases for the {@link Enum} class.\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: ValuedEnumTest.java,v 1.1 2002/08/11 23:17:54 scolebourne Exp $\n+ * @version $Id: ValuedEnumTest.java,v 1.2 2002/10/13 18:42:06 sullis Exp $\n  */\n \n public final class ValuedEnumTest extends TestCase {\n \n     public void testList() {\n         List list = ValuedColorEnum.getEnumList();\n+        \n+        assertNotNull(list);\n+        \n+        assertEquals( list.size(),\n+        \t\t\t ValuedColorEnum.getEnumMap().keySet().size());\n+        \n         Iterator it = list.iterator();\n         assertSame(ValuedColorEnum.RED, it.next());\n         assertSame(ValuedColorEnum.GREEN, it.next());\n \n     public void testMap() {\n         Map map = ValuedColorEnum.getEnumMap();\n+        \n+        assertNotNull(map);\n+        \n+        assertEquals( map.keySet().size(),\n+        \t\t\t ValuedColorEnum.getEnumList().size());\n+        \t\t\t \n         assertTrue(map.containsValue(ValuedColorEnum.RED));\n         assertTrue(map.containsValue(ValuedColorEnum.GREEN));\n         assertTrue(map.containsValue(ValuedColorEnum.BLUE));", "timestamp": 1034534526, "metainfo": ""}