{"sha": "1e9618c34ea60cc214761a6618024c28aa712a51", "log": "Add  join(Object[])  as a replacement for concatenate   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Phil Steitz\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.84 2003/08/01 20:45:17 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.85 2003/08/01 21:02:16 scolebourne Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * Null objects or empty strings within the array are represented by \n      * empty strings.</p>\n      *\n-     * <p>The difference from join is that concatenate has no delimiter -- i.e., <br>\n-     * <code>StringUtils.concatenate(array) = StringUtils.join(array, null)</code>.</p>\n-     *\n      * <pre>\n      * StringUtils.concatenate(null)            = null\n      * StringUtils.concatenate([])              = \"\"\n      * \n      * @param array  the array of values to concatenate, may be null\n      * @return the concatenated String, <code>null</code> if null array input\n+     * @deprecated Use the better named {@link #join(Object[])} instead.\n+     *             Method will be removed in Commons Lang 3.0.\n      */\n     public static String concatenate(Object[] array) {\n+        return join(array, null);\n+    }\n+    \n+    /**\n+     * <p>Joins the elements of the provided array into a single String\n+     * containing the provided list of elements.</p>\n+     *\n+     * <p>No separator is added to the joined String.\n+     * Null objects or empty strings within the array are represented by \n+     * empty strings.</p>\n+     * \n+     * <pre>\n+     * StringUtils.join(null)            = null\n+     * StringUtils.join([])              = \"\"\n+     * StringUtils.join([null])          = \"\"\n+     * StringUtils.join([\"a\", \"b\", \"c\"]) = \"abc\"\n+     * StringUtils.join([null, \"\", \"a\"]) = \"a\"\n+     * </pre>\n+     * \n+     * @param array  the array of values to join together, may be null\n+     * @return the joined String, <code>null</code> if null array input\n+     */\n+    public static String join(Object[] array) {\n         return join(array, null);\n     }\n     \n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author Phil Steitz\n- * @version $Id: StringUtilsTest.java,v 1.41 2003/07/31 20:38:26 scolebourne Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.42 2003/08/01 21:02:16 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n     \n                      \"Hello aPACHE\", StringUtils.swapCase(\"hELLO Apache\") );\n     }\n \n+    public void testJoin_Objectarray() {\n+        assertEquals(null, StringUtils.join(null));\n+        assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\n+        assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\n+        assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));\n+        assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));\n+        assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));\n+        assertEquals(\"foo2\", StringUtils.join(MIXED_TYPE_LIST));\n+    }\n+        \n     public void testJoin_ArrayChar() {\n         assertEquals(null, StringUtils.join((Object[]) null, ','));\n         assertEquals(TEXT_LIST_CHAR, StringUtils.join(ARRAY_LIST, SEPARATOR_CHAR));\n         assertEquals(TEXT_LIST, StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(), SEPARATOR));\n     }\n     \n-    public void testConcatenate_Array() {\n+    public void testConcatenate_Objectarray() {\n         assertEquals(null, StringUtils.concatenate(null));\n         assertEquals(\"\", StringUtils.concatenate(EMPTY_ARRAY_LIST));\n         assertEquals(\"\", StringUtils.concatenate(NULL_ARRAY_LIST));", "timestamp": 1059771736, "metainfo": ""}