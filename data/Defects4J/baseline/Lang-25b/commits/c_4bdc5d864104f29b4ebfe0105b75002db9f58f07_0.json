{"sha": "4bdc5d864104f29b4ebfe0105b75002db9f58f07", "log": "LANG-377 Add containsAny() methods to StringUtils  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  *      - null-safe index-of checks\n  *  <li><b>IndexOfAny/LastIndexOfAny/IndexOfAnyBut/LastIndexOfAnyBut</b>\n  *      - index-of any of a set of Strings</li>\n- *  <li><b>ContainsOnly/ContainsNone</b>\n- *      - does String contains only/none of these characters</li>\n+ *  <li><b>ContainsOnly/ContainsNone/ContainsAny</b>\n+ *      - does String contains only/none/any of these characters</li>\n  *  <li><b>Substring/Left/Right/Mid</b>\n  *      - null-safe substring extractions</li>\n  *  <li><b>SubstringBefore/SubstringAfter/SubstringBetween</b>\n         return indexOfAny(str, searchChars.toCharArray());\n     }\n \n+    // ContainsAny\n+    //-----------------------------------------------------------------------\n+    /**\n+     * <p>Checks if the String contains any character in the given\n+     * set of characters.</p>\n+     *\n+     * <p>A <code>null</code> String will return <code>false</code>.\n+     * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.containsAny(null, *)                = false\n+     * StringUtils.containsAny(\"\", *)                  = false\n+     * StringUtils.containsAny(*, null)                = false\n+     * StringUtils.containsAny(*, [])                  = false\n+     * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n+     * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n+     * StringUtils.containsAny(\"aba\", ['z'])           = false\n+     * </pre>\n+     *\n+     * @param str  the String to check, may be null\n+     * @param searchChars  the chars to search for, may be null\n+     * @return the <code>true</code> if any of the chars are found,\n+     * <code>false</code> if no match or null input\n+     * @since 2.4\n+     */\n+    public static boolean containsAny(String str, char[] searchChars) {\n+        if (str == null || str.length() == 0 ||\n+            searchChars == null || searchChars.length == 0) {\n+            return false;\n+        }\n+        for (int i = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n+            for (int j = 0; j < searchChars.length; j++) {\n+                if (searchChars[j] == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * <p>Checks if the String contains any character in the given\n+     * set of characters.</p>\n+     *\n+     * <p>A <code>null</code> String will return <code>false</code>.\n+     * A <code>null</code> search string will return <code>false</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.containsAny(null, *)            = false\n+     * StringUtils.containsAny(\"\", *)              = false\n+     * StringUtils.containsAny(*, null)            = false\n+     * StringUtils.containsAny(*, \"\")              = false\n+     * StringUtils.containsAny(\"zzabyycdxx\", \"za\") = true\n+     * StringUtils.containsAny(\"zzabyycdxx\", \"by\") = true\n+     * StringUtils.containsAny(\"aba\",\"z\")          = false\n+     * </pre>\n+     *\n+     * @param str  the String to check, may be null\n+     * @param searchChars  the chars to search for, may be null\n+     * @return the <code>true</code> if any of the chars are found,\n+     * <code>false</code> if no match or null input\n+     * @since 2.4\n+     */\n+    public static boolean containsAny(String str, String searchChars) {\n+        if (searchChars == null) {\n+            return false;\n+        } else {\n+            return containsAny(str, searchChars.toCharArray());\n+        }\n+    }\n+\n     // IndexOfAnyBut chars\n     //-----------------------------------------------------------------------\n     /**\n--- a/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n         assertEquals(0, StringUtils.indexOfAny(\"zzabyycdxx\", \"za\")); \n         assertEquals(3, StringUtils.indexOfAny(\"zzabyycdxx\", \"by\"));\n         assertEquals(-1, StringUtils.indexOfAny(\"ab\", \"z\"));\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testContainsAny_StringChararray() {\n+        assertFalse(StringUtils.containsAny(null, (char[]) null));\n+        assertFalse(StringUtils.containsAny(null, new char[0]));\n+        assertFalse(StringUtils.containsAny(null, new char[] {'a','b'}));\n+        \n+        assertFalse(StringUtils.containsAny(\"\", (char[]) null));\n+        assertFalse(StringUtils.containsAny(\"\", new char[0]));\n+        assertFalse(StringUtils.containsAny(\"\", new char[] {'a','b'}));\n+        \n+        assertFalse(StringUtils.containsAny(\"zzabyycdxx\", (char[]) null)); \n+        assertFalse(StringUtils.containsAny(\"zzabyycdxx\", new char[0])); \n+        assertTrue(StringUtils.containsAny(\"zzabyycdxx\", new char[] {'z','a'})); \n+        assertTrue(StringUtils.containsAny(\"zzabyycdxx\", new char[] {'b','y'}));\n+        assertFalse(StringUtils.containsAny(\"ab\", new char[] {'z'}));\n+    }\n+\n+    public void testContainsAny_StringString() {\n+        assertFalse(StringUtils.containsAny(null, (String) null));\n+        assertFalse(StringUtils.containsAny(null, \"\"));\n+        assertFalse(StringUtils.containsAny(null, \"ab\"));\n+        \n+        assertFalse(StringUtils.containsAny(\"\", (String) null));\n+        assertFalse(StringUtils.containsAny(\"\", \"\"));\n+        assertFalse(StringUtils.containsAny(\"\", \"ab\"));\n+        \n+        assertFalse(StringUtils.containsAny(\"zzabyycdxx\", (String) null)); \n+        assertFalse(StringUtils.containsAny(\"zzabyycdxx\", \"\")); \n+        assertTrue(StringUtils.containsAny(\"zzabyycdxx\", \"za\")); \n+        assertTrue(StringUtils.containsAny(\"zzabyycdxx\", \"by\"));\n+        assertFalse(StringUtils.containsAny(\"ab\", \"z\"));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1195293192, "metainfo": ""}