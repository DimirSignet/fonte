{"sha": "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc", "log": "Update null behaviour for consistency and clarity Doument null behaviour   ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharSetUtils.java\n+++ b/src/java/org/apache/commons/lang/CharSetUtils.java\n /**\n  * <p>Numerous routines to manipulate a <code>CharSet</code>.</p>\n  *\n+ * <p>This class tries to handle <code>null</code> input gracefully.\n+ * An exception will generally not be thrown for a <code>null</code> input.\n+ * Each method documents its behaviour in more detail.</p>\n+ * \n  * @author <a href=\"bayard@generationjava.com\">Henri Yandell</a>\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: CharSetUtils.java,v 1.13 2003/07/16 00:39:05 scolebourne Exp $\n+ * @version $Id: CharSetUtils.java,v 1.14 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class CharSetUtils {\n \n      *  <li>&quot;ej-m&quot; implies e,j->m. e,j,k,l,m.</li>\n      * </ul>\n      *\n-     * @param set\n-     * @return CharSet\n+     * @param set  the set, must not be null\n+     * @return a CharSet instance\n      * @throws NullPointerException if any of set[i] is null or if set is null\n      */\n     public static CharSet evaluateSet(String[] set) {\n      * </ul>\n      * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      *\n-     * @param str  the string to work from\n-     * @param set  the character set to use for manipulation\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  the string to squeeze, may be null\n+     * @param set  the character set to use for manipulation, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String squeeze(String str, String set) {\n+        if (str == null) {\n+            return null;\n+        }\n         String[] strs = new String[1];\n         strs[0] = set;\n         return squeeze(str, strs);\n      * </ul>\n      * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * \n-     * @param str  the string to work from\n-     * @param set  the character set to use for manipulation\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  the string to squeeze, may be null\n+     * @param set  the character set to use for manipulation, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      *  or any element is <code>null</code>\n      */\n     public static String squeeze(String str, String[] set) {\n+        if (str == null) {\n+            return null;\n+        }\n         CharSet chars = evaluateSet(set);\n         StringBuffer buffer = new StringBuffer(str.length());\n         char[] chrs = str.toCharArray();\n      *   <li>count(&quot;hello&quot;, {&quot;c-f&quot;, &quot;o&quot;}) returns 2.</li>\n      * </ul>\n      *\n-     * @param str  String target to count characters in\n-     * @param set  String set of characters to count\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to count characters in, may be null\n+     * @param set  String set of characters to count, must not be null\n+     * @return character count, zero if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static int count(String str, String set) {\n+        if (str == null) {\n+            return 0;\n+        }\n         String[] strs = new String[1];\n         strs[0] = set;\n         return count(str, strs);\n      *  <li>count(&quot;hello&quot;, {&quot;c-f&quot;, &quot;o&quot;}) returns 2.</li>\n      * </ul>\n      *\n-     * @param str  String target to count characters in\n-     * @param set  String[] set of characters to count\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to count characters in, may be null\n+     * @param set  String[] set of characters to count, must not be null\n+     * @return character count, zero if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      *  or any element is <code>null</code>\n      */\n     public static int count(String str, String[] set) {\n+        if (str == null) {\n+            return 0;\n+        }\n         CharSet chars = evaluateSet(set);\n         int count = 0;\n         char[] chrs = str.toCharArray();\n      *   <li>keep(&quot;hello&quot;, {&quot;c-fo&quot;}) returns &quot;hll&quot;</li>\n      * </ul>\n      *\n-     * @param str  String target to keep characters from\n-     * @param set  String set of characters to keep\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to keep characters from, may be null\n+     * @param set  String set of characters to keep, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String keep(String str, String set) {\n+        if (str == null) {\n+            return null;\n+        }\n         String[] strs = new String[1];\n         strs[0] = set;\n         return keep(str, strs);\n      *   returns &quot;hll&quot;</li>\n      * </ul>\n      *\n-     * @param str  String target to keep characters from\n-     * @param set  String[] set of characters to keep\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to keep characters from, may be null\n+     * @param set  String[] set of characters to keep, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      *  or any element is <code>null</code>\n      */\n     public static String keep(String str, String[] set) {\n+        if (str == null) {\n+            return null;\n+        }\n         return modify(str, set, true);\n     }\n \n      *   <li>delete(&quot;hello&quot;, {&quot;c-fo&quot;}) returns &quot;hll&quot;</li>\n      * </ul>\n      *\n-     * @param str  String target to delete characters from\n-     * @param set  String set of characters to delete\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to delete characters from, may be null\n+     * @param set  String set of characters to delete, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String delete(String str, String set) {\n+        if (str == null) {\n+            return null;\n+        }\n         String[] strs = new String[1];\n         strs[0] = set;\n         return delete(str, strs);\n      *   &quot;hll&quot;</li>\n      * </ul>\n      *\n-     * @param str  String target to delete characters from\n-     * @param set  String[] set of characters to delete\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n+     * @param str  String to delete characters from, may be null\n+     * @param set  String[] set of characters to delete, must not be null\n+     * @return modified String, <code>null</code> if null string input\n      * @throws NullPointerException if <code>set</code> is <code>null</code>\n      *  or any element is <code>null</code>\n      */\n     public static String delete(String str, String[] set) {\n+        if (str == null) {\n+            return null;\n+        }\n         return modify(str, set, false);\n     }\n \n      * length of characters to replace, then the last character is \n      * used.</p>\n      *\n-     * @param target String to replace characters in\n-     * @param repl String to find that will be replaced\n-     * @param with String to put into the target String\n-     * @throws NullPointerException if <code>target</code>, with\n+     * @param str  String to replace characters in, may be null\n+     * @param repl  String to find that will be replaced, must not be null\n+     * @param with  String to put into the target String, must not be null\n+     * @return translated String, <code>null</code> if null string input\n+     * @throws NullPointerException if <code>target</code>, <code>with</code>\n      *  or <code>repl</code> is <code>null</code>\n      */\n-    public static String translate(String target, String repl, String with) {\n-        StringBuffer buffer = new StringBuffer(target.length());\n-        char[] chrs = target.toCharArray();\n+    public static String translate(String str, String repl, String with) {\n+        if (str == null) {\n+            return null;\n+        }\n+        StringBuffer buffer = new StringBuffer(str.length());\n+        char[] chrs = str.toCharArray();\n         char[] withChrs = with.toCharArray();\n         int sz = chrs.length;\n         int withMax = with.length() - 1;\n--- a/src/java/org/apache/commons/lang/SerializationUtils.java\n+++ b/src/java/org/apache/commons/lang/SerializationUtils.java\n  * <li>Deserialize managing finally and IOException\n  * </ul>\n  *\n+ * <p>This class throws exceptions for invalid <code>null</code> inputs.\n+ * Each method documents its behaviour in more detail.</p>\n+ *\n  * @author <a href=\"mailto:nissim@nksystems.com\">Nissim Karpenstein</a>\n  * @author <a href=\"mailto:janekdb@yahoo.co.uk\">Janek Bogucki</a>\n  * @author <a href=\"mailto:dlr@finemaltcoding.com\">Daniel Rall</a>\n  * @author Stephen Colebourne\n  * @author Jeff Varszegi\n  * @since 1.0\n- * @version $Id: SerializationUtils.java,v 1.6 2003/06/23 22:36:50 scolebourne Exp $\n+ * @version $Id: SerializationUtils.java,v 1.7 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class SerializationUtils {\n     \n      * <p>The stream passed in is not buffered internally within this method.\n      * This is the responsibility of your application if desired.</p>\n      *\n-     * @param obj  the object to serialize to bytes\n-     * @param outputStream  the stream to write to\n+     * @param obj  the object to serialize to bytes, may be null\n+     * @param outputStream  the stream to write to, must not be null\n+     * @throws IllegalArgumentException if <code>outputStream</code> is <code>null</code>\n      * @throws SerializationException (runtime) if the serialization fails\n      */\n     public static void serialize(Serializable obj, OutputStream outputStream) {\n+        if (outputStream == null) {\n+            throw new NullArgumentException(\"OutputStream\");\n+        }\n         ObjectOutputStream out = null;\n         try {\n             // stream closed in the finally\n      * <p>The stream passed in is not buffered internally within this method.\n      * This is the responsibility of your application if desired.</p>\n      *\n-     * @param inputStream  the serialized object input stream\n+     * @param inputStream  the serialized object input stream, must not be null\n      * @return the deserialized object\n+     * @throws IllegalArgumentException if <code>inputStream</code> is <code>null</code>\n      * @throws SerializationException (runtime) if the serialization fails\n      */\n     public static Object deserialize(InputStream inputStream) {\n+        if (inputStream == null) {\n+            throw new NullArgumentException(\"InputStream\");\n+        }\n         ObjectInputStream in = null;\n         try {\n             // stream closed in the finally\n     /**\n      * <p>Deserializes a single <code>Object</code> from an array of bytes.</p>\n      *\n-     * @param objectData  the serialized object\n+     * @param objectData  the serialized object, must not be null\n      * @return the deserialized object\n+     * @throws IllegalArgumentException if <code>objectData</code> is <code>null</code>\n      * @throws SerializationException (runtime) if the serialization fails\n      */\n     public static Object deserialize(byte[] objectData) {\n+        if (objectData == null) {\n+            throw new NullArgumentException(\"byte[]\");\n+        }\n         ByteArrayInputStream bais = new ByteArrayInputStream(objectData);\n         return deserialize(bais);\n     }\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n /**\n  * <p>Escapes and unescapes <code>String</code>s for Java, Java Script, HTML, XML, and SQL.\n  *\n- * <p>Originally from\n- * <a href=\"http://jakarta.apache.org/turbine/\">Turbine</a> and the\n- * GenerationJavaCore library and from\n- * <a href=\"http://www.purpletech.com/code/\">Purple Technology</a>\n- * </p>\n- *\n+ * @author Apache Jakarta Turbine\n+ * @author GenerationJavaCore library\n+ * @author Purple Technology\n  * @author <a href=\"mailto:bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @author <a href=\"mailto:cybertiger@cyberiantiger.org\">Antony Riley</a>\n  * @author <a href=\"sean@boohai.com\">Sean Brown</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: StringEscapeUtils.java,v 1.16 2003/07/08 05:59:58 bayard Exp $\n+ * @version $Id: StringEscapeUtils.java,v 1.17 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class StringEscapeUtils {\n \n      * </pre>\n      * </p>\n      *\n-     * @param str String to escape values in\n-     * @return String with escaped values\n-     * @throws NullPointerException if str is <code>null</code>\n+     * @param str  String to escape values in, may be null\n+     * @return String with escaped values, <code>null</code> if null string input\n      */\n     public static String escapeJava(String str) {\n         return escapeJavaStyleString(str, false);\n      * <p>Escapes the characters in a <code>String</code> using Java String rules to\n      * a <code>Writer</code>.</p>\n      * \n+     * <p>A <code>null</code> string input has no effect.</p>\n+     * \n      * @see #escapeJava(java.lang.String)\n-     * @param out Writer to write escaped string into\n-     * @param str String to escape values in\n-     * @throws NullPointerException if str is <code>null</code>\n+     * @param out  Writer to write escaped string into\n+     * @param str  String to escape values in, may be null\n+     * @throws IllegalArgumentException if the Writer is <code>null</code>\n      * @throws IOException if error occurs on undelying Writer\n      */\n     public static void escapeJava(Writer out, String str) throws IOException {\n      * </pre>\n      * </p>\n      *\n-     * @param str String to escape values in\n-     * @return String with escaped values\n-     * @throws NullPointerException if str is <code>null</code>\n+     * @param str  String to escape values in, may be null\n+     * @return String with escaped values, <code>null</code> if null string input\n      */\n     public static String escapeJavaScript(String str) {\n         return escapeJavaStyleString(str, true);\n      * <p>Escapes the characters in a <code>String</code> using JavaScript String rules\n      * to a <code>Writer</code>.</p>\n      * \n+     * <p>A <code>null</code> string input has no effect.</p>\n+     * \n      * @see #escapeJavaScript(java.lang.String)\n-     * @param out Writer to write escaped string into\n-     * @param str String to escape values in\n-     * @throws NullPointerException if str is <code>null</code>\n+     * @param out  Writer to write escaped string into\n+     * @param str  String to escape values in, may be null\n+     * @throws IllegalArgumentException if the Writer is <code>null</code>\n      * @throws IOException if error occurs on undelying Writer\n      **/\n     public static void escapeJavaScript(Writer out, String str) throws IOException {\n     }\n \n     private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\n+        if (str == null) {\n+            return null;\n+        }\n         try {\n             StringPrintWriter writer = new StringPrintWriter(str.length() * 2);\n             escapeJavaStyleString(writer, str, escapeSingleQuotes);\n     }\n \n     private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n+        if (out == null) {\n+            throw new NullArgumentException(\"Writer\");\n+        }\n+        if (str == null) {\n+            return;\n+        }\n         int sz;\n         sz = str.length();\n         for (int i = 0; i < sz; i++) {\n      * <code>'n'</code> into a newline character, unless the <code>'\\'</code>\n      * is preceded by another <code>'\\'</code>.</p>\n      * \n-     * @param str The <code>String</code> to unescape.\n-     * @return A new unescaped <code>String</code>.\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @return a new unescaped <code>String</code>, <code>null</code> if null string input\n      */\n     public static String unescapeJava(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n         try {\n             StringPrintWriter writer = new StringPrintWriter(str.length());\n             unescapeJava(writer, str);\n      * <code>'n'</code> into a newline character, unless the <code>'\\'</code>\n      * is preceded by another <code>'\\'</code>.</p>\n      * \n-     * @param out The <code>Writer</code> used to output unescaped characters.\n-     * @param str The <code>String</code> to unescape.\n+     * <p>A <code>null</code> string input has no effect.</p>\n+     * \n+     * @param out  the <code>Writer</code> used to output unescaped characters\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @throws IllegalArgumentException if the Writer is <code>null</code>\n      */\n     public static void unescapeJava(Writer out, String str) throws IOException {\n+        if (out == null) {\n+            throw new NullArgumentException(\"Writer\");\n+        }\n+        if (str == null) {\n+            return;\n+        }\n         int sz = str.length();\n         StringBuffer unicode = new StringBuffer(4);\n         boolean hadSlash = false;\n      * into a newline character, unless the <code>'\\'</code> is preceded by another\n      * <code>'\\'</code>.</p>\n      *\n-     * @param str The <code>String</code> to unescape.\n-     * @return A new unescaped <code>String</code>.\n      * @see #unescapeJava(String)\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @return A new unescaped <code>String</code>, <code>null</code> if null string input\n      */\n     public static String unescapeJavaScript(String str) {\n         return unescapeJava(str);\n      * into a newline character, unless the <code>'\\'</code> is preceded by another\n      * <code>'\\'</code>.</p>\n      *\n-     * @param out The <code>Writer</code> used to output unescaped characters.\n-     * @param str The <code>String</code> to unescape.\n-\n+     * <p>A <code>null</code> string input has no effect.</p>\n+     * \n      * @see #unescapeJava(Writer,String)\n+     * @param out  the <code>Writer</code> used to output unescaped characters\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @throws IllegalArgumentException if the Writer is <code>null</code>\n      */\n     public static void unescapeJavaScript(Writer out, String str) throws IOException {\n         unescapeJava(out, str);\n      *\n      * <p>Supports all known HTML 4.0 entities, including funky accents.</p>\n      * \n-     * @param str The <code>String</code> to escape\n-     * @return A new escaped <code>String</code>.\n+     * @param str  the <code>String</code> to escape, may be null\n+     * @return a new escaped <code>String</code>, <code>null</code> if null string input\n      * \n      * @see Entities\n      * @see #unescapeHtml(String)\n      * @see </br><a href=\"http://www.w3.org/TR/html401/charset.html#code-position\">HTML 4.01 Code positions</a>\n      **/\n     public static String escapeHtml(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n         //todo: add a version that takes a Writer\n         //todo: rewrite underlying method to use a Writer instead of a StringBuffer\n         return Entities.HTML40.escape(str);\n      * verbatim into the result string. e.g. \"&amp;gt;&amp;zzzz;x\" will\n      * become \"&gt;&amp;zzzz;x\".</p>\n      *\n-     * @param str The <code>String</code> to unescape\n-     * @return A new unescaped <code>String</code>.\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @return a new unescaped <code>String</code>, <code>null</code> if null string input\n      * @see #escapeHtml(String)\n      **/\n     public static String unescapeHtml(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n         return Entities.HTML40.unescape(str);\n     }\n \n      * <p>Supports only the four basic XML entities (gt, lt, quot, amp).\n      * Does not support DTDs or external entities.</p>\n      *\n-     * @param str The <code>String</code> to escape\n-     * @return A new escaped <code>String</code>.\n+     * @param str  the <code>String</code> to escape, may be null\n+     * @return a new escaped <code>String</code>, <code>null</code> if null string input\n      * @see #unescapeXml(java.lang.String)\n      **/\n     public static String escapeXml(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n         return Entities.XML.escape(str);\n     }\n \n      * <p>Supports only the four basic XML entities (gt, lt, quot, amp).\n      * Does not support DTDs or external entities.</p>\n      *\n-     * @param str The <code>String</code> to unescape\n-     * @return A new unescaped <code>String</code>.\n+     * @param str  the <code>String</code> to unescape, may be null\n+     * @return a new unescaped <code>String</code>, <code>null</code> if null string input\n      * @see #escapeXml(String)\n      **/\n     public static String unescapeXml(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n         return Entities.XML.unescape(str);\n     }\n \n      * handle the cases of percent (%) or underscore (_) for use in LIKE clauses.</p>\n      *\n      * see http://www.jguru.com/faq/view.jsp?EID=8881\n-     * @param s the string to escape\n-     * @return A new String, escaped for SQL\n-     */\n-    public static String escapeSql(String s)\n-    {\n-        return StringUtils.replace(s, \"'\", \"''\");\n+     * @param str  the string to escape, may be null\n+     * @return a new String, escaped for SQL, <code>null</code> if null string input\n+     */\n+    public static String escapeSql(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n+        return StringUtils.replace(str, \"'\", \"''\");\n     }\n \n }\n--- a/src/java/org/apache/commons/lang/WordWrapUtils.java\n+++ b/src/java/org/apache/commons/lang/WordWrapUtils.java\n import java.util.StringTokenizer;\n \n /**\n- * <code>WordWrapUtils</code> is a utility class to assist with word wrapping.\n+ * <p><code>WordWrapUtils</code> is a utility class to assist with word wrapping.</p>\n+ * \n+ * <p>This class tries to handle <code>null</code> input gracefully.\n+ * An exception will not be thrown for a <code>null</code> input.\n+ * Each method documents its behaviour in more detail.</p>\n  * \n  * @author Henri Yandell\n  * @author Stephen Colebourne\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: WordWrapUtils.java,v 1.6 2003/07/12 03:06:23 bayard Exp $\n+ * @version $Id: WordWrapUtils.java,v 1.7 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class WordWrapUtils {\n \n      * since tabs are a single character but are displayed as 4 or 8\n      * spaces. Remove the tabs.</p>\n      *\n-     * @param str  text which is in need of word-wrapping\n-     * @param newline  the characters that define a newline\n+     * @param str  text which is in need of word-wrapping, may be null\n+     * @param newLineChars  the characters that define a newline, null treated as \\n\n      * @param wrapColumn  the column to wrap the words at\n-     * @return the text with all the long lines word-wrapped\n+     * @return the text with all the long lines word-wrapped,\n+     *  <code>null</code> if null string input\n      */\n-    public static String wrapText(String str, String newline, int wrapColumn) {\n-        StringTokenizer lineTokenizer = new StringTokenizer(str, newline, true);\n+    public static String wrapText(String str, String newLineChars, int wrapColumn) {\n+        if (str == null) {\n+            return null;\n+        }\n+        if (newLineChars == null) {\n+            newLineChars = \"\\n\";\n+        }\n+        StringTokenizer lineTokenizer = new StringTokenizer(str, newLineChars, true);\n         StringBuffer stringBuffer = new StringBuffer();\n \n         while (lineTokenizer.hasMoreTokens()) {\n \n                 if (nextLine.length() > wrapColumn) {\n                     // This line is long enough to be wrapped.\n-                    nextLine = wrapLine(nextLine, newline, wrapColumn);\n+                    nextLine = wrapLine(nextLine, newLineChars, wrapColumn);\n                 }\n \n                 stringBuffer.append(nextLine);\n--- a/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/CharSetUtilsTest.java\n  *\n  * @author <a href=\"mailto:bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: CharSetUtilsTest.java,v 1.7 2003/03/23 21:47:30 scolebourne Exp $\n+ * @author Stephen Colebourne\n+ * @version $Id: CharSetUtilsTest.java,v 1.8 2003/07/19 20:22:36 scolebourne Exp $\n  */\n-public class CharSetUtilsTest extends TestCase\n-{\n+public class CharSetUtilsTest extends TestCase {\n+    \n     public CharSetUtilsTest(String name) {\n         super(name);\n     }\n     }\n \n     public static Test suite() {\n-    \tTestSuite suite = new TestSuite(CharSetUtilsTest.class);\n-    \tsuite.setName(\"CharSetUtils Tests\");\n+        TestSuite suite = new TestSuite(CharSetUtilsTest.class);\n+        suite.setName(\"CharSetUtils Tests\");\n         return suite;\n     }\n \n \n     //-----------------------------------------------------------------------\n \n-    public void testSqueeze()\n-    {\n-        assertEquals(\"squeeze(String,String[]) failed\",\n-                     \"helo\", CharSetUtils.squeeze(\"hello\", new String[] {\"el\"}));\n-        assertEquals(\"squeeze(String,String[]) failed\",\n-                     \"\", CharSetUtils.squeeze(\"\", new String[] {\"el\"}));\n-        assertEquals(\"squeeze(String,String[]) failed\",\n-                     \"hello\", CharSetUtils.squeeze(\"hello\", new String[] {\"e\"}));\n-        assertEquals(\"squeeze(String,String[]) failed\",\n-                     \"fofof\", CharSetUtils.squeeze(\"fooffooff\", new String[] {\"of\"}));\n-        assertEquals(\"squeeze(String,String[]) failed\",\n-                     \"fof\", CharSetUtils.squeeze(\"fooooff\", new String[] {\"fo\"}));\n+    public void testSqueeze() {\n+        assertEquals(null, CharSetUtils.squeeze(null, (String[]) null));\n+        assertEquals(null, CharSetUtils.squeeze(null, new String[] { \"el\" }));\n+        assertEquals(\"helo\", CharSetUtils.squeeze(\"hello\", new String[] { \"el\" }));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", new String[] { \"el\" }));\n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", new String[] { \"e\" }));\n+        assertEquals(\"fofof\", CharSetUtils.squeeze(\"fooffooff\", new String[] { \"of\" }));\n+        assertEquals(\"fof\", CharSetUtils.squeeze(\"fooooff\", new String[] { \"fo\" }));\n+        try {\n+            CharSetUtils.squeeze(\"hello\", (String[]) null);\n+        } catch (NullPointerException ex) {}\n     }\n \n-    public void testCount()\n-    {\n-        assertEquals(\"count(String,String[]) failed\",\n-                     3, CharSetUtils.count(\"hello\", new String[] {\"el\"}));\n-        assertEquals(\"count(String,String[]) failed\",\n-                     0, CharSetUtils.count(\"\", new String[] {\"el\"}));\n-        assertEquals(\"count(String,String[]) failed\",\n-                     0, CharSetUtils.count(\"hello\", new String[] {\"x\"}));\n-        assertEquals(\"count(String,String[]) failed\",\n-                     2, CharSetUtils.count(\"hello\", new String[] {\"e-i\"}));\n-        assertEquals(\"count(String,String[]) failed\",\n-                     5, CharSetUtils.count(\"hello\", new String[] {\"a-z\"}));\n-        assertEquals(\"count(String,String[]) failed\",\n-                     0, CharSetUtils.count(\"hello\", new String[] {\"\"}));\n+    public void testCount() {\n+        assertEquals(0, CharSetUtils.count(null, (String[]) null));\n+        assertEquals(0, CharSetUtils.count(null, new String[] { \"el\" }));\n+        assertEquals(3, CharSetUtils.count(\"hello\", new String[] { \"el\" }));\n+        assertEquals(0, CharSetUtils.count(\"\", new String[] { \"el\" }));\n+        assertEquals(0, CharSetUtils.count(\"hello\", new String[] { \"x\" }));\n+        assertEquals(2, CharSetUtils.count(\"hello\", new String[] { \"e-i\" }));\n+        assertEquals(5, CharSetUtils.count(\"hello\", new String[] { \"a-z\" }));\n+        assertEquals(0, CharSetUtils.count(\"hello\", new String[] { \"\" }));\n+        try {\n+            CharSetUtils.count(\"hello\", (String[]) null);\n+        } catch (NullPointerException ex) {}\n     }\n \n-    public void testKeep()\n-    {\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"ell\", CharSetUtils.keep(\"hello\", new String[] {\"el\"}));\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"hello\", CharSetUtils.keep(\"hello\", new String[] {\"elho\"}));\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"\", CharSetUtils.keep(\"hello\", new String[] {\"\"}));\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"hello\", CharSetUtils.keep(\"hello\", new String[] {\"a-z\"}));\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"----\", CharSetUtils.keep(\"----\", new String[] {\"-\"}));\n-        assertEquals(\"keep(String,String[]) failed\",\n-                     \"ll\", CharSetUtils.keep(\"hello\", new String[] {\"l\"}));\n+    public void testKeep() {\n+        assertEquals(null, CharSetUtils.keep(null, (String[]) null));\n+        assertEquals(null, CharSetUtils.keep(null, new String[] { \"el\" }));\n+        assertEquals(\"ell\", CharSetUtils.keep(\"hello\", new String[] { \"el\" }));\n+        assertEquals(\"hello\", CharSetUtils.keep(\"hello\", new String[] { \"elho\" }));\n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", new String[] { \"\" }));\n+        assertEquals(\"hello\", CharSetUtils.keep(\"hello\", new String[] { \"a-z\" }));\n+        assertEquals(\"----\", CharSetUtils.keep(\"----\", new String[] { \"-\" }));\n+        assertEquals(\"ll\", CharSetUtils.keep(\"hello\", new String[] { \"l\" }));\n+        try {\n+            CharSetUtils.keep(\"hello\", (String[]) null);\n+        } catch (NullPointerException ex) {}\n     }\n \n-    public void testDelete()\n-    {\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"ho\", CharSetUtils.delete(\"hello\", new String[] {\"el\"}));\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"\", CharSetUtils.delete(\"hello\", new String[] {\"elho\"}));\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"hello\", CharSetUtils.delete(\"hello\", new String[] {\"\"}));\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"\", CharSetUtils.delete(\"hello\", new String[] {\"a-z\"}));\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"\", CharSetUtils.delete(\"----\", new String[] {\"-\"}));\n-        assertEquals(\"delete(String,String[]) failed\",\n-                     \"heo\", CharSetUtils.delete(\"hello\", new String[] {\"l\"}));\n+    public void testDelete() {\n+        assertEquals(null, CharSetUtils.delete(null, (String[]) null));\n+        assertEquals(null, CharSetUtils.delete(null, new String[] { \"el\" }));\n+        assertEquals(\"ho\", CharSetUtils.delete(\"hello\", new String[] { \"el\" }));\n+        assertEquals(\"\", CharSetUtils.delete(\"hello\", new String[] { \"elho\" }));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", new String[] { \"\" }));\n+        assertEquals(\"\", CharSetUtils.delete(\"hello\", new String[] { \"a-z\" }));\n+        assertEquals(\"\", CharSetUtils.delete(\"----\", new String[] { \"-\" }));\n+        assertEquals(\"heo\", CharSetUtils.delete(\"hello\", new String[] { \"l\" }));\n+        try {\n+            CharSetUtils.delete(\"hello\", (String[]) null);\n+        } catch (NullPointerException ex) {}\n     }\n+    \n }\n-\n--- a/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/SerializationUtilsTest.java\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: SerializationUtilsTest.java,v 1.2 2003/03/23 21:50:58 scolebourne Exp $\n+ * @version $Id: SerializationUtilsTest.java,v 1.3 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class SerializationUtilsTest extends TestCase {\n     private String iString;\n         ByteArrayOutputStream streamTest = new ByteArrayOutputStream();\n         try {\n             SerializationUtils.serialize(iMap, null);\n-        } catch (NullPointerException ex) {\n+        } catch (IllegalArgumentException ex) {\n             return;\n         }\n         fail();\n         ByteArrayOutputStream streamTest = new ByteArrayOutputStream();\n         try {\n             SerializationUtils.serialize(null, null);\n-        } catch (NullPointerException ex) {\n+        } catch (IllegalArgumentException ex) {\n             return;\n         }\n         fail();\n     public void testDeserializeStreamNull() throws Exception {\n         try {\n             SerializationUtils.deserialize((InputStream) null);\n-        } catch (NullPointerException ex) {\n+        } catch (IllegalArgumentException ex) {\n             return;\n         }\n         fail();\n     public void testDeserializeBytesNull() throws Exception {\n         try {\n             SerializationUtils.deserialize((byte[]) null);\n-        } catch (NullPointerException ex) {\n+        } catch (IllegalArgumentException ex) {\n             return;\n         }\n         fail();\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n  *\n  * @author of original StringUtilsTest.testEscape = ?\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n- * @version $Id: StringEscapeUtilsTest.java,v 1.8 2003/06/29 03:05:45 alex Exp $\n+ * @version $Id: StringEscapeUtilsTest.java,v 1.9 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class StringEscapeUtilsTest extends TestCase {\n     private final static String FOO = \"foo\";\n     //-----------------------------------------------------------------------\n \n     public void testEscapeJava() throws IOException {\n+        assertEquals(null, StringEscapeUtils.escapeJava(null));\n+        try {\n+            StringEscapeUtils.escapeJava(null, null);\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        try {\n+            StringEscapeUtils.escapeJava(null, \"\");\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        \n         assertEscapeJava(\"empty string\", \"\", \"\");\n         assertEscapeJava(FOO, FOO);\n         assertEscapeJava(\"tab\", \"\\\\t\", \"\\t\");\n     }\n \n     public void testUnescapeJava() throws IOException {\n+        assertEquals(null, StringEscapeUtils.unescapeJava(null));\n+        try {\n+            StringEscapeUtils.unescapeJava(null, null);\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        try {\n+            StringEscapeUtils.unescapeJava(null, \"\");\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        \n         assertUnescapeJava(\"\", \"\");\n         assertUnescapeJava(\"test\", \"test\");\n         assertUnescapeJava(\"\\ntest\\b\", \"\\\\ntest\\\\b\");\n     }\n \n     public void testEscapeJavaScript() {\n+        assertEquals(null, StringEscapeUtils.escapeJavaScript(null));\n+        try {\n+            StringEscapeUtils.escapeJavaScript(null, null);\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        try {\n+            StringEscapeUtils.escapeJavaScript(null, \"\");\n+            fail();\n+        } catch (IOException ex) {\n+            fail();\n+        } catch (IllegalArgumentException ex) {\n+        }\n+        \n         assertEquals(\"He didn\\\\'t say, \\\\\\\"stop!\\\\\\\"\", StringEscapeUtils.escapeJavaScript(\"He didn't say, \\\"stop!\\\"\"));\n     }\n \n--- a/src/test/org/apache/commons/lang/WordWrapUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/WordWrapUtilsTest.java\n  * Unit tests for the wrap methods of WordWrapUtils.\n  * \n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: WordWrapUtilsTest.java,v 1.1 2003/04/15 14:28:41 bayard Exp $\n+ * @version $Id: WordWrapUtilsTest.java,v 1.2 2003/07/19 20:22:36 scolebourne Exp $\n  */\n public class WordWrapUtilsTest extends TestCase {\n \n                 \"Here is one line\\nof\\ttext that is\\ngoing to be wrapped\\nafter 20 columns.\";\n         assertEquals(\"Text with tab at wrapping index didn't wrap correctly, \", expected, WordWrapUtils.wrapText(input, \"\\n\", 20));\n     }\n+\n+    public void testWrapText4() {\n+        assertEquals(null, WordWrapUtils.wrapText(null, \"\\n\", 20));\n+        assertEquals(\"\", WordWrapUtils.wrapText(\"\", \"\\n\", 20));\n+    }\n }", "timestamp": 1058646156, "metainfo": ""}