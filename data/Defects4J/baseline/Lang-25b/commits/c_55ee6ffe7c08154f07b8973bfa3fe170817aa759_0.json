{"sha": "55ee6ffe7c08154f07b8973bfa3fe170817aa759", "log": "Checkstyle changes only  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n         return ordinalIndexOf(str, searchStr, ordinal, false);\n     }\n \n+    /**\n+     * <p>Finds the n-th index within a String, handling <code>null</code>.\n+     * This method uses {@link String#indexOf(String)}.</p>\n+     *\n+     * <p>A <code>null</code> String will return <code>-1</code>.</p>\n+     *\n+     * @param str  the String to check, may be null\n+     * @param searchStr  the String to find, may be null\n+     * @param ordinal  the n-th <code>searchStr</code> to find\n+     * @param lastIndex true if lastOrdinalIndexOf() otherwise false if ordinalIndexOf()\n+     * @return the n-th index of the search String,\n+     *  <code>-1</code> (<code>INDEX_NOT_FOUND</code>) if no match or <code>null</code> string input\n+     */\n     // Shared code between ordinalIndexOf(String,String,int) and lastOrdinalIndexOf(String,String,int)\n     private static int ordinalIndexOf(String str, String searchStr, int ordinal, boolean lastIndex) {\n         if (str == null || searchStr == null || ordinal <= 0) {\n--- a/src/main/java/org/apache/commons/lang3/builder/IDKey.java\n+++ b/src/main/java/org/apache/commons/lang3/builder/IDKey.java\n \n         /**\n          * Constructor for IDKey\n-         * @param _value\n+         * @param _value The value\n          */ \n         public IDKey(Object _value) {\n             // This is the Object hashcode \n \n         /**\n          * checks if instances are equal\n-         * @param other\n+         * @param other The other object to compare to\n          * @return if the instances are for the same object\n          */ \n         @Override\n--- a/src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java\n      * @param cls Class to be checked\n      * @param methodName Method name of the method we wish to call\n      * @param parameterTypes The parameter type signatures\n+     * @return the accessible method or <code>null</code> if not found\n      */\n     private static Method getAccessibleMethodFromSuperclass(Class<?> cls,\n             String methodName, Class<?>[] parameterTypes) {\n      * @param cls Parent class for the interfaces to be checked\n      * @param methodName Method name of the method we wish to call\n      * @param parameterTypes The parameter type signatures\n+     * @return the accessible method or <code>null</code> if not found\n      */\n     private static Method getAccessibleMethodFromInterfaceNest(Class<?> cls,\n             String methodName, Class<?>[] parameterTypes) {\n--- a/src/main/java/org/apache/commons/lang3/text/StrBuilder.java\n+++ b/src/main/java/org/apache/commons/lang3/text/StrBuilder.java\n      */\n     class StrBuilderTokenizer extends StrTokenizer {\n \n+        /**\n+         * Default constructor.\n+         */\n         StrBuilderTokenizer() {\n             super();\n         }\n         /** The last mark position. */\n         private int mark;\n \n+        /**\n+         * Default constructor.\n+         */\n         StrBuilderReader() {\n             super();\n         }\n      */\n     class StrBuilderWriter extends Writer {\n \n+        /**\n+         * Default constructor.\n+         */\n         StrBuilderWriter() {\n             super();\n         }", "timestamp": 1266614851, "metainfo": ""}