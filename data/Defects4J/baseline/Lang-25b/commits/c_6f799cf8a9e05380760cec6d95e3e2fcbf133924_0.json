{"sha": "6f799cf8a9e05380760cec6d95e3e2fcbf133924", "log": "Moved the implementations of getThrowableCount(), getThrowables(), indexOfThrowable(Class), and indexOfThrowable(Class, int) methods to ExceptionUtils, as suggested by Stephen Colebourne <scolebourne@btopenworld.com>.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n  * @author <a href=\"mailto:dlr@collab.net\">Daniel Rall</a>\n  * @author <a href=\"mailto:knielsen@apache.org\">Kasper Nielsen</a>\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: NestableDelegate.java,v 1.4 2002/08/21 07:31:54 dlr Exp $\n+ * @version $Id: NestableDelegate.java,v 1.5 2002/08/21 23:52:02 dlr Exp $\n  */\n public class NestableDelegate\n {\n      */\n     int getThrowableCount() // package\n     {\n-        // Count the number of throwables\n-        int count = 1;\n-        String msg = null;\n-        Throwable t = ExceptionUtils.getCause(this.cause);\n-        while (t != null)\n-        {\n-            ++count;\n-            t = ExceptionUtils.getCause(t);\n-        }\n-        return count;\n+        return ExceptionUtils.getThrowableCount(this.cause);\n     }\n     \n     /**\n      */\n     Throwable[] getThrowables() // package\n     {\n-        int count = this.getThrowableCount();\n-        // Allocate an array to hold the messages\n-        Throwable[] throwables = new Throwable[count];\n-        count = 0;\n-        if(cause != null)\n-        {\n-            throwables[count++] = this.cause;\n-            Throwable t = ExceptionUtils.getCause(this.cause);\n-            while(t != null)\n-            {\n-                throwables[count++] = t;\n-                t = ExceptionUtils.getCause(t);\n-            }\n-        }\n-        return throwables;\n+        return ExceptionUtils.getThrowables(this.cause);\n     }\n \n     /**\n      */\n     int indexOfThrowable(Class type, int fromIndex) // package\n     {\n-        if(fromIndex < 0)\n-        {\n-            throw new IndexOutOfBoundsException(\"Throwable index out of range: \"\n-                                                + fromIndex);\n-        }\n-        Throwable throwables[] = this.getThrowables();\n-        if(fromIndex >= throwables.length)\n-        {\n-            throw new IndexOutOfBoundsException(\"Throwable index out of range: \"\n-                                                + fromIndex);\n-        }\n-        for(int i = fromIndex; i < throwables.length; i++)\n-        {\n-            if(throwables[i].getClass().equals(type))\n-            {\n-                return i;\n-            }\n-        }\n-        return -1;\n+        return ExceptionUtils.indexOfThrowable(this.cause, type, fromIndex);\n     }\n     \n     /**", "timestamp": 1029973922, "metainfo": ""}