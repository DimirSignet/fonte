{"sha": "9a2421997e83ec803c88ea370a2d102052699d3b", "log": "negative zero test and fix (#1069)", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n     }\n \n     // We've read a complete number. Decide if it's a PEEKED_LONG or a PEEKED_NUMBER.\n-    if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) {\n+    if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative) && (value!=0 || false==negative)) {\n       peekedLong = negative ? value : -value;\n       pos += i;\n       return peeked = PEEKED_LONG;\n--- a/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java\n+++ b/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java\n       fail();\n     } catch (NumberFormatException expected) {\n     }\n+  }\n+  \n+  /**\n+   * Issue 1053, negative zero.\n+   * @throws Exception\n+   */\n+  public void testNegativeZero() throws Exception {\n+\t  \tJsonReader reader = new JsonReader(reader(\"[-0]\"));\n+\t    reader.setLenient(false);\n+\t    reader.beginArray();\n+\t    assertEquals(NUMBER, reader.peek());\n+\t    assertEquals(\"-0\", reader.nextString());\n   }\n \n   /**", "timestamp": 1492637196, "metainfo": ""}