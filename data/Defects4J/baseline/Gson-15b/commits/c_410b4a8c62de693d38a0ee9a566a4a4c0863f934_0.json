{"sha": "410b4a8c62de693d38a0ee9a566a4a4c0863f934", "log": "Optimizing for memory", "commit": "\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n   private String nextQuotedValue(char quote) throws IOException {\n     // Like nextNonWhitespace, this uses locals 'p' and 'l' to save inner-loop field access.\n     char[] buffer = this.buffer;\n-    StringBuilder builder = new StringBuilder();\n+    StringBuilder builder = null;\n     while (true) {\n       int p = pos;\n       int l = limit;\n \n         if (c == quote) {\n           pos = p;\n-          builder.append(buffer, start, p - start - 1);\n-          return builder.toString();\n+          int len = p - start - 1;\n+          if(null == builder) {\n+            return new String(buffer, start, len);\n+          } else {\n+            builder.append(buffer, start, len);\n+            return builder.toString();\n+          }\n         } else if (c == '\\\\') {\n           pos = p;\n-          builder.append(buffer, start, p - start - 1);\n-          builder.append(readEscapeCharacter());\n+          int len = p - start - 1;\n+          char escapeChar = readEscapeCharacter();\n+          if(null == builder) {\n+            int estimatedLength = (len + pos - p) * 2;\n+            builder = new StringBuilder(estimatedLength < 16 ? 16 : estimatedLength);\n+          }\n+          builder.append(buffer, start, len);\n+          builder.append(escapeChar);\n           p = pos;\n           l = limit;\n           start = p;\n         }\n       }\n \n+      if(null == builder) {\n+        int len = (p - start) * 2;\n+        initialLength = len;\n+        builder = new StringBuilder(len < 16 ? 16 : len);\n+      }\n       builder.append(buffer, start, p - start);\n       pos = p;\n       if (!fillBuffer(1)) {", "timestamp": 1487193662, "metainfo": ""}