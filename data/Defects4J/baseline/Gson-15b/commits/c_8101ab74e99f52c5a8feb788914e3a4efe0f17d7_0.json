{"sha": "8101ab74e99f52c5a8feb788914e3a4efe0f17d7", "log": "list addition optimization (#1038)  * list addition optimization\r \r * Optimized imports\r \r Optimized imports", "commit": "\n--- a/gson/src/main/java/com/google/gson/GsonBuilder.java\n+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java\n \n package com.google.gson;\n \n-import com.google.gson.stream.JsonReader;\n import java.lang.reflect.Type;\n import java.sql.Timestamp;\n import java.text.DateFormat;\n import com.google.gson.internal.bind.TreeTypeAdapter;\n import com.google.gson.internal.bind.TypeAdapters;\n import com.google.gson.reflect.TypeToken;\n+import com.google.gson.stream.JsonReader;\n \n import static com.google.gson.Gson.DEFAULT_COMPLEX_MAP_KEYS;\n import static com.google.gson.Gson.DEFAULT_ESCAPE_HTML;\n         || typeAdapter instanceof JsonDeserializer<?>\n         || typeAdapter instanceof TypeAdapter<?>);\n     if (typeAdapter instanceof JsonDeserializer || typeAdapter instanceof JsonSerializer) {\n-      hierarchyFactories.add(0,\n-          TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n+      hierarchyFactories.add(TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n     }\n     if (typeAdapter instanceof TypeAdapter<?>) {\n       factories.add(TypeAdapters.newTypeHierarchyFactory(baseType, (TypeAdapter)typeAdapter));\n    * @return an instance of Gson configured with the options currently set in this builder\n    */\n   public Gson create() {\n-    List<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>();\n+    List<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>(this.factories.size() + this.hierarchyFactories.size() + 3);\n     factories.addAll(this.factories);\n     Collections.reverse(factories);\n+    Collections.reverse(this.hierarchyFactories);\n     factories.addAll(this.hierarchyFactories);\n     addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, factories);\n \n--- a/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java\n+++ b/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java\n               if (jsonElement.isJsonArray()) {\n                 // Handling array\n                 Collection<EnumValueDescriptor> enumCollection =\n-                    new ArrayList<EnumValueDescriptor>();\n+                    new ArrayList<EnumValueDescriptor>(jsonElement.getAsJsonArray().size());\n                 for (JsonElement element : jsonElement.getAsJsonArray()) {\n                   enumCollection.add(\n                       findValueByNameAndExtension(fieldDescriptor.getEnumType(), element));", "timestamp": 1489724198, "metainfo": ""}