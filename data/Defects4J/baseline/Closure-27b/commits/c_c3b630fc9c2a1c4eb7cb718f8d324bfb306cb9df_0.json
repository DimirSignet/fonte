{"sha": "c3b630fc9c2a1c4eb7cb718f8d324bfb306cb9df", "log": "[].join(',') --> [].join() Fixes issue 558  R=acleung DELTA=26  (15 added, 0 deleted, 11 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3579   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\n+++ b/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java\n     }\n \n     Node right = callTarget.getNext();\n-    if (right != null && !NodeUtil.isImmutableValue(right)) {\n-      return n;\n+    if (right != null) {\n+      if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {\n+        return n;\n+      }\n     }\n \n     Node arrayNode = callTarget.getFirstChild();\n     if ((arrayNode.getType() != Token.ARRAYLIT) ||\n         !functionName.getString().equals(\"join\")) {\n       return n;\n+    }\n+\n+    if (right != null && right.getType() == Token.STRING\n+        && \",\".equals(right.getString())) {\n+      // \",\" is the default, it doesn't need to be explicit\n+      n.removeChild(right);\n+      reportCodeChange();\n     }\n \n     String joinString = (right == null) ? \",\" : NodeUtil.getStringValue(right);\n--- a/test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java\n     fold(\"x = [,,'a'].join(',')\", \"x = ',,a'\");\n   }\n \n+  public void testNoStringJoin() {\n+    foldSame(\"x = [].join(',',2)\");\n+    foldSame(\"x = [].join(f)\");\n+  }\n+\n   public void testStringJoinAdd() {\n     fold(\"x = ['a', 'b', 'c'].join('')\", \"x = \\\"abc\\\"\");\n     fold(\"x = [].join(',')\", \"x = \\\"\\\"\");\n     fold(\"x = ['a'].join(',')\", \"x = \\\"a\\\"\");\n     fold(\"x = ['a', 'b', 'c'].join(',')\", \"x = \\\"a,b,c\\\"\");\n     fold(\"x = ['a', foo, 'b', 'c'].join(',')\",\n-        \"x = [\\\"a\\\",foo,\\\"b,c\\\"].join(\\\",\\\")\");\n+        \"x = [\\\"a\\\",foo,\\\"b,c\\\"].join()\");\n     fold(\"x = [foo, 'a', 'b', 'c'].join(',')\",\n-        \"x = [foo,\\\"a,b,c\\\"].join(\\\",\\\")\");\n+        \"x = [foo,\\\"a,b,c\\\"].join()\");\n     fold(\"x = ['a', 'b', 'c', foo].join(',')\",\n-        \"x = [\\\"a,b,c\\\",foo].join(\\\",\\\")\");\n+        \"x = [\\\"a,b,c\\\",foo].join()\");\n \n     // Works with numbers\n     fold(\"x = ['a=', 5].join('')\", \"x = \\\"a=5\\\"\");\n          \"x = [\\\"a\\\",\\\"5\\\",\\\"c\\\"].join(\\\"a very very very long chain\\\")\");\n \n     // TODO(user): Its possible to fold this better.\n-    foldSame(\"x = ['', foo].join(',')\");\n-    foldSame(\"x = ['', foo, ''].join(',')\");\n-\n-    fold(\"x = ['', '', foo, ''].join(',')\", \"x = [',', foo, ''].join(',')\");\n+    foldSame(\"x = ['', foo].join('-')\");\n+    foldSame(\"x = ['', foo, ''].join()\");\n+\n+    fold(\"x = ['', '', foo, ''].join(',')\",\n+         \"x = [',', foo, ''].join()\");\n     fold(\"x = ['', '', foo, '', ''].join(',')\",\n-         \"x = [',', foo, ','].join(',')\");\n+         \"x = [',', foo, ','].join()\");\n \n     fold(\"x = ['', '', foo, '', '', bar].join(',')\",\n-         \"x = [',', foo, ',', bar].join(',')\");\n+         \"x = [',', foo, ',', bar].join()\");\n \n     fold(\"x = [1,2,3].join('abcdef')\",\n          \"x = '1abcdef2abcdef3'\");", "timestamp": 1319831705, "metainfo": ""}