{"sha": "eec6f0b58660515641e8eb0efab1a8cf77d3cdea", "log": "small optimization", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n         if (offset == 1) { // surprisingly common special case\n             byte[] block = expandedBlocks.peekFirst();\n             byte b = block[block.length - 1];\n-            for (int i = 0; i < expanded.length; i++) {\n-                expanded[i] = b;\n+            if (b != 0) { // the fresh array contains 0s anyway\n+                Arrays.fill(expanded, b);\n             }\n         } else {\n             expandFromList(expanded, offset, length);\n                 copyOffset = writeOffset  + offsetRemaining;\n                 copyLen = Math.min(lengthRemaining, writeOffset + offsetRemaining);\n             }\n-            if (copyLen < 1) {\n-                throw new IllegalStateException(\"zero copy\");\n-            }\n             System.arraycopy(block, copyOffset, expanded, writeOffset, copyLen);\n             offsetRemaining -= copyLen;\n             lengthRemaining -= copyLen;\n--- a/src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Arrays;\n \n import org.apache.commons.compress.compressors.CompressorInputStream;\n import org.apache.commons.compress.utils.ByteUtils;\n             // NOP\n         } else if (backReferenceOffset == 1) { // pretty common special case\n             final byte last = buf[writeIndex - 1];\n-            for (int i = 0; i < copy; i++) {\n-                buf[writeIndex++] = last;\n-            }\n+            Arrays.fill(buf, writeIndex, writeIndex + copy, last);\n+            writeIndex += copy;\n         } else if (copy < backReferenceOffset) {\n             System.arraycopy(buf, writeIndex - backReferenceOffset, buf, writeIndex, copy);\n             writeIndex += copy;", "timestamp": 1485080518, "metainfo": ""}