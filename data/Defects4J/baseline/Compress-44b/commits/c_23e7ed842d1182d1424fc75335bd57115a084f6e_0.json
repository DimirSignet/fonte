{"sha": "23e7ed842d1182d1424fc75335bd57115a084f6e", "log": "ensure streams get closed  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java\n  */\n package org.apache.commons.compress.compressors;\n \n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n         final File input = getFile(\"test1.xml\");\n         final File output = new File(dir, \"test1.xml.gz\");\n         final OutputStream out = new FileOutputStream(output);\n-        final CompressorOutputStream cos = new CompressorStreamFactory().createCompressorOutputStream(\"gz\", out);\n-        IOUtils.copy(new FileInputStream(input), cos);\n-        cos.close();\n+        try {\n+            final CompressorOutputStream cos = new CompressorStreamFactory()\n+                .createCompressorOutputStream(\"gz\", out);\n+            try {\n+                IOUtils.copy(new FileInputStream(input), cos);\n+            } finally {\n+                cos.close();\n+            }\n+        } finally {\n+            out.close();\n+        }\n     }\n \n     public void testGzipUnarchive() throws Exception {\n         final File input = getFile(\"bla.tgz\");\n         final File output = new File(dir, \"bla.tar\");\n         final InputStream is = new FileInputStream(input);\n-        final CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(\"gz\", is);\n-        FileOutputStream out = new FileOutputStream(output);\n-        IOUtils.copy(in, out);\n-        in.close();\n-        is.close();\n-        out.close();\n+        try {\n+            final CompressorInputStream in = new CompressorStreamFactory()\n+                .createCompressorInputStream(\"gz\", is);\n+            FileOutputStream out = null;\n+            try {\n+                out = new FileOutputStream(output);\n+                IOUtils.copy(in, out);\n+            } finally {\n+                if (out != null) {\n+                    out.close();\n+                }\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n     }\n-\n }", "timestamp": 1267536552, "metainfo": ""}