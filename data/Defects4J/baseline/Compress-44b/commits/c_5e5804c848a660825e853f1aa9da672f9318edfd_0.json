{"sha": "5e5804c848a660825e853f1aa9da672f9318edfd", "log": "merge revision 741089 from Ant trunk - fix for various findbugs issues - [SANDBOX-246]  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java\n                         + numToSkip + \" bytes\");\n             }\n \n-            if (numToSkip > 0) {\n-                skip(numToSkip);\n+            while (numToSkip > 0) {\n+                long skipped = skip(numToSkip);\n+                if (skipped <= 0) {\n+                    throw new RuntimeException(\"failed to skip current tar\"\n+                                               + \" entry\");\n+                }\n+                numToSkip -= skipped;\n             }\n \n             readBuf = null;\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java\n \n                 wOffset += numToWrite;\n                 assemLen += numToWrite;\n-                numToWrite -= numToWrite;\n+                numToWrite = 0;\n             }\n         }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java\n         return type | (mode & PERM_MASK);\n     }\n \n+    public Object clone() {\n+        try {\n+            AsiExtraField cloned = (AsiExtraField) super.clone();\n+            cloned.crc = new CRC32();\n+            return cloned;\n+        } catch (CloneNotSupportedException cnfe) {\n+            // impossible\n+            throw new RuntimeException(cnfe);\n+        }\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java\n      */\n     public void setCentralDirectoryData( final byte[] centralData )\n     {\n-        m_centralData = centralData;\n+        m_centralData = copy(centralData);\n     }\n \n        /**\n      */\n     public void setLocalFileDataData( final byte[] localData )\n     {\n-        m_localData = localData;\n+        m_localData = copy(localData);\n     }\n \n     /**\n     {\n         if( m_centralData != null )\n         {\n-            return m_centralData;\n+            return copy(m_centralData);\n         }\n         return getLocalFileDataData();\n     }\n      */\n     public byte[] getLocalFileDataData()\n     {\n-        return m_localData;\n+        return copy(m_localData);\n     }\n \n     /**\n         System.arraycopy( buffer, offset, fileData, 0, length );\n         setLocalFileDataData( fileData );\n     }\n+\n+    private static byte[] copy(byte[] from) {\n+        if (from != null) {\n+            byte[] to = new byte[from.length];\n+            System.arraycopy(from, 0, to, 0, to.length);\n+            return to;\n+        }\n+        return null;\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n \n             nameMap.put(ze.getName(), ze);\n \n-            archive.skipBytes(extraLen);\n+            int lenToSkip = extraLen;\n+            while (lenToSkip > 0) {\n+                int skipped = archive.skipBytes(lenToSkip);\n+                if (skipped <= 0) {\n+                    throw new RuntimeException(\"failed to skip extra data in\"\n+                                               + \" central directory\");\n+                }\n+                lenToSkip -= skipped;\n+            }            \n \n             byte[] comment = new byte[commentLen];\n             archive.readFully(comment);\n             int fileNameLen = ZipShort.getValue(b);\n             archive.readFully(b);\n             int extraFieldLen = ZipShort.getValue(b);\n-            archive.skipBytes(fileNameLen);\n+            int lenToSkip = fileNameLen;\n+            while (lenToSkip > 0) {\n+                int skipped = archive.skipBytes(lenToSkip);\n+                if (skipped <= 0) {\n+                    throw new RuntimeException(\"failed to skip file name in\"\n+                                               + \" local file header\");\n+                }\n+                lenToSkip -= skipped;\n+            }            \n             byte[] localExtraData = new byte[extraFieldLen];\n             archive.readFully(localExtraData);\n             ze.setExtra(localExtraData);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n     public int hashCode() {\n         return (int) value;\n     }\n+\n+    public Object clone() {\n+        try {\n+            return (ZipLong) super.clone();\n+        } catch (CloneNotSupportedException cnfe) {\n+            // impossible\n+            throw new RuntimeException(cnfe);\n+        }\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java\n     public int hashCode() {\n         return value;\n     }\n+\n+    public Object clone() {\n+        try {\n+            return (ZipShort) super.clone();\n+        } catch (CloneNotSupportedException cnfe) {\n+            // impossible\n+            throw new RuntimeException(cnfe);\n+        }\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n                 }\n \n                 if (ge > gs && nPart != nGroups && nPart != 1\n-                    && ((nGroups - nPart) % 2 == 1)) {\n+                    && ((nGroups - nPart) % 2 != 0)) {\n                     aFreq -= mtfFreq[ge];\n                     ge--;\n                 }\n             b = t;\n         }\n         if (b > c) {\n-            t = b;\n             b = c;\n-            c = t;\n         }\n         if (a > b) {\n             b = a;\n \n             med = med3(block[zptr[lo] + d + 1],\n                        block[zptr[hi            ] + d  + 1],\n-                       block[zptr[(lo + hi) >> 1] + d + 1]);\n+                       block[zptr[(lo + hi) >>> 1] + d + 1]);\n \n             unLo = ltLo = lo;\n             unHi = gtHi = hi;", "timestamp": 1233837923, "metainfo": ""}