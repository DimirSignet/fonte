{"sha": "1bf8e32680d0f81a016d4c6d7181ad23d5a9bf04", "log": "Handle archives containing directories Report actual missing entry  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/AbstractTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/AbstractTestCase.java\n             while ((entry = in.getNextEntry()) != null) {\n                 File outfile = new File(result.getCanonicalPath() + \"/result/\"\n                         + entry.getName());\n-                outfile.getParentFile().mkdirs();\n-                OutputStream out = new FileOutputStream(outfile);\n                 long copied=0;\n-                try {\n-                    copied=IOUtils.copy(in, out);\n-                } finally {\n-                    out.close();\n-                }\n-\n+                if (entry.isDirectory()){\n+                    outfile.mkdirs();\n+                } else {\n+                    outfile.getParentFile().mkdirs();\n+                    OutputStream out = new FileOutputStream(outfile);\n+                    try {\n+                        copied=IOUtils.copy(in, out);\n+                    } finally {\n+                        out.close();\n+                    }                    \n+                }\n                 final long size = entry.getSize();\n                 if (size != ArchiveEntry.SIZE_UNKNOWN) {\n                     assertEquals(\"Entry.size should equal bytes read.\",size, copied);\n                     fail(\"extraction failed: \" + entry.getName());\n                 }\n                 if (expected != null && !expected.remove(getExpectedString(entry))) {\n-                    fail(\"unexpected entry: \" + entry.getName());\n+                    fail(\"unexpected entry: \" + getExpectedString(entry));\n                 }\n             }\n             in.close();", "timestamp": 1273430836, "metainfo": ""}