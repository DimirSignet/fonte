{"sha": "4e619852cad8b9b056d4239aff597124e901fe8a", "log": "COMPRESS-392 the semi-mandatory bla.tar test", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n \n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.CompressorInputStream;\n+import org.apache.commons.compress.compressors.CompressorStreamFactory;\n import org.apache.commons.compress.utils.IOUtils;\n import org.junit.Assert;\n import org.junit.Test;\n \n-public class BrotliCompressorInputStreamTest {\n+public class BrotliCompressorInputStreamTest extends AbstractTestCase {\n \n     /**\n      * Test bridge works fine \n             in.close();\n         }\n     }\n+\n+    @Test\n+    public void testBrotliUnarchive() throws Exception {\n+        final File input = getFile(\"bla.tar.br\");\n+        final File output = new File(dir, \"bla.tar\");\n+        try (InputStream is = new FileInputStream(input)) {\n+            final CompressorInputStream in = new CompressorStreamFactory()\n+                    .createCompressorInputStream(\"br\", is);\n+            FileOutputStream out = null;\n+            try {\n+                out = new FileOutputStream(output);\n+                IOUtils.copy(in, out);\n+            } finally {\n+                if (out != null) {\n+                    out.close();\n+                }\n+                in.close();\n+            }\n+        }\n+    }\n+\n }", "timestamp": 1493811891, "metainfo": ""}