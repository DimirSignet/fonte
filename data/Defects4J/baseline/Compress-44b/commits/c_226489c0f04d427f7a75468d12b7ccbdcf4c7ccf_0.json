{"sha": "226489c0f04d427f7a75468d12b7ccbdcf4c7ccf", "log": "COMPRESS-271 test for single-byte read and premature close", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n     }\n \n     @Test\n+    public void readsUncompressedBlocksUsingSingleByteRead() throws IOException {\n+        byte[] input = new byte[] {\n+            4, 0x22, 0x4d, 0x18, // signature\n+            0x60, // flag - Version 01, block independent, no block checksum, no content size, no content checksum\n+            0x70, // block size 4MB\n+            0x00, // checksum, revisit once it gets validated\n+            13, 0, 0, (byte) 0x80, // 13 bytes length and uncompressed bit set\n+            'H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!', // content\n+            0, 0, 0, 0, // empty block marker\n+        };\n+        try (InputStream a = new FramedLZ4CompressorInputStream(new ByteArrayInputStream(input))) {\n+            int h = a.read();\n+            assertEquals('H', h);\n+        }\n+    }\n+\n+    @Test\n     public void rejectsBlocksWithoutChecksum() throws IOException {\n         byte[] input = new byte[] {\n             4, 0x22, 0x4d, 0x18, // signature", "timestamp": 1485157690, "metainfo": ""}