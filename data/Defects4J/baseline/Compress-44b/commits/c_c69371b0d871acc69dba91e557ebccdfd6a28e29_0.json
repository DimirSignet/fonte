{"sha": "c69371b0d871acc69dba91e557ebccdfd6a28e29", "log": "COMPRESS-63: fields are stored in ASCII added javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n         } else {\n             tmpStr = tmp.substring(tmp.length() - length);\n         }\n-        out.write(tmpStr.getBytes()); // TODO is it correct to use the default charset here?\n-    }\n-\n+        out.write(ArchiveUtils.toAsciiBytes(tmpStr));\n+    }\n+\n+    /**\n+     * Writes an ASCII string to the stream followed by \\0\n+     * @param str the String to write\n+     * @throws IOException if the string couldn't be written\n+     */\n     private void writeCString(final String str) throws IOException {\n-        out.write(str.getBytes()); // TODO is it correct to use the default charset here?\n+        out.write(ArchiveUtils.toAsciiBytes(str)); \n         out.write('\\0');\n     }\n \n+    /**\n+     * Creates a new ArchiveEntry. The entryName must be an ASCII encoded string.\n+     * \n+     * @see org.apache.commons.compress.archivers.ArchiveOutputStream#createArchiveEntry(java.io.File, java.lang.String)\n+     */\n     public ArchiveEntry createArchiveEntry(File inputFile, String entryName)\n             throws IOException {\n         return new CpioArchiveEntry(inputFile, entryName);", "timestamp": 1240465996, "metainfo": ""}