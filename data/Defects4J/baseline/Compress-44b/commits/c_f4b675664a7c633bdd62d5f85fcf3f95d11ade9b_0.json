{"sha": "f4b675664a7c633bdd62d5f85fcf3f95d11ade9b", "log": "Avoid some resource leak warnings", "commit": "\n--- a/src/test/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannelTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannelTest.java\n         assertEquals(testData.length, readCount);\n         assertArrayEquals(testData, readBuffer.array());\n         assertEquals(testData.length, c.position());\n+        c.close();\n     }\n \n     @Test\n         assertEquals(testData.length, readCount);\n         assertArrayEquals(testData, Arrays.copyOf(readBuffer.array(), testData.length));\n         assertEquals(testData.length, c.position());\n+        c.close();\n     }\n \n     @Test\n         assertEquals(4L, readCount);\n         assertEquals(\"data\", new String(readBuffer.array(), Charset.forName(UTF_8)));\n         assertEquals(testData.length, c.position());\n+        c.close();\n     }\n \n     @Test\n         //then\n         assertEquals(0L, readBuffer.position());\n         assertEquals(-1, readCount);\n+        c.close();\n     }\n \n     @Test(expected = ClosedChannelException.class)\n         assertEquals(testData.length, writeCount);\n         assertArrayEquals(testData, Arrays.copyOf(c.array(), (int) c.size()));\n         assertEquals(testData.length, c.position());\n+        c.close();\n     }\n \n     @Test\n         assertEquals(testData.length, writeCount);\n         assertArrayEquals(expectedData.array(), Arrays.copyOf(c.array(), (int) c.size()));\n         assertEquals(testData.length + 5, c.position());\n+        c.close();\n     }\n \n \n         //then\n         byte[] bytes = Arrays.copyOf(c.array(), (int) c.size());\n         assertEquals(\"Some\", new String(bytes, Charset.forName(UTF_8)));\n+        c.close();\n     }\n \n     @Test\n         //then\n         assertEquals(4L, c.position());\n         assertEquals(4L, c.size());\n+        c.close();\n     }\n \n     @Test\n         assertEquals(4L, posAtFour);\n         assertEquals(c.size(), posAtTheEnd);\n         assertEquals(posPastTheEnd, posPastTheEnd);\n+        c.close();\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n         SeekableInMemoryByteChannel c = new SeekableInMemoryByteChannel();\n         //when\n         c.position(Integer.MAX_VALUE + 1L);\n+        c.close();\n     }\n \n     @Test(expected = ClosedChannelException.class)", "timestamp": 1488237638, "metainfo": ""}