{"sha": "5e49d8adb8b33104ad25245cbb7434400e85b539", "log": "properly close stream, submitted by Andreas Kr\u00fcger  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n      */\n     @Test\n     public void aiffFilesAreNoTARs() throws Exception {\n-        InputStream is = null;\n-        try {\n-            is = new BufferedInputStream(new FileInputStream(\"src/test/resources/testAIFF.aif\"));\n-            new ArchiveStreamFactory().createArchiveInputStream(is);\n-            fail(\"created an input stream for a non-archive\");\n-        } catch (ArchiveException ae) {\n-            assertTrue(ae.getMessage().startsWith(\"No Archiver found\"));\n-        } finally {\n-            if (is != null) {\n+    \tFileInputStream fis = new FileInputStream(\"src/test/resources/testAIFF.aif\");\n+    \ttry {\n+            InputStream is = new BufferedInputStream(fis);\n+            try {\n+                new ArchiveStreamFactory().createArchiveInputStream(is);\n+                fail(\"created an input stream for a non-archive\");\n+            } catch (ArchiveException ae) {\n+                assertTrue(ae.getMessage().startsWith(\"No Archiver found\"));\n+            } finally {\n                 is.close();\n             }\n-        }\n+    \t} finally {\n+            fis.close();\n+    \t}\n     }\n \n     @Test\n     public void testCOMPRESS209() throws Exception {\n-        InputStream is = null;\n-        try {\n-            is = new BufferedInputStream(new FileInputStream(\"src/test/resources/testCompress209.doc\"));\n-            new ArchiveStreamFactory().createArchiveInputStream(is);\n-            fail(\"created an input stream for a non-archive\");\n-        } catch (ArchiveException ae) {\n-            assertTrue(ae.getMessage().startsWith(\"No Archiver found\"));\n-        } finally {\n-            if (is != null) {\n-                is.close();\n+    \tFileInputStream fis = new FileInputStream(\"src/test/resources/testCompress209.doc\");\n+    \ttry {\n+            InputStream bis = new BufferedInputStream(fis);\n+            try {\n+                new ArchiveStreamFactory().createArchiveInputStream(bis);\n+                fail(\"created an input stream for a non-archive\");\n+            } catch (ArchiveException ae) {\n+                assertTrue(ae.getMessage().startsWith(\"No Archiver found\"));\n+            } finally {\n+                bis.close();\n             }\n-        }\n+    \t} finally {\n+            fis.close();\n+    \t}\n     }\n \n     /**\n      */\n     @Test\n     public void skipsPK00Prefix() throws Exception {\n-        InputStream is = null;\n-        try {\n-            is = new BufferedInputStream(new FileInputStream(\"src/test/resources/COMPRESS-208.zip\"));\n-            ArchiveInputStream ais = new ArchiveStreamFactory().createArchiveInputStream(is);\n-            assertTrue(ais instanceof ZipArchiveInputStream);\n-        } finally {\n-            if (is != null) {\n-                is.close();\n+    \tFileInputStream fis = new FileInputStream(\"src/test/resources/COMPRESS-208.zip\");\n+    \ttry {\n+            InputStream bis = new BufferedInputStream(fis);\n+            try {\n+                ArchiveInputStream ais = new ArchiveStreamFactory().createArchiveInputStream(bis);\n+                try {\n+                    assertTrue(ais instanceof ZipArchiveInputStream);\n+                } finally {\n+                    ais.close();\n+                }\n+            } finally {\n+                bis.close();\n             }\n-        }\n+    \t} finally {\n+            fis.close();\n+    \t}\n     }\n }", "timestamp": 1366899498, "metainfo": ""}