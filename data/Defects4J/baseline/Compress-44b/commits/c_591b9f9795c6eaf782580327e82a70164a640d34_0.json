{"sha": "591b9f9795c6eaf782580327e82a70164a640d34", "log": "PMD findings", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n         int nonEmptyFileCounter = 0;\n         int emptyFileCounter = 0;\n         for (int i = 0; i < files.length; i++) {\n-            files[i].setHasStream(isEmptyStream == null ? true : !isEmptyStream.get(i));\n+            files[i].setHasStream(isEmptyStream == null || !isEmptyStream.get(i));\n             if (files[i].hasStream()) {\n                 files[i].setDirectory(false);\n                 files[i].setAntiItem(false);\n                 files[i].setSize(archive.subStreamsInfo.unpackSizes[nonEmptyFileCounter]);\n                 ++nonEmptyFileCounter;\n             } else {\n-                files[i].setDirectory(isEmptyFile == null ? true : !isEmptyFile.get(emptyFileCounter));\n-                files[i].setAntiItem(isAnti == null ? false : isAnti.get(emptyFileCounter));\n+                files[i].setDirectory(isEmptyFile == null || !isEmptyFile.get(emptyFileCounter));\n+                files[i].setAntiItem(isAnti != null && isAnti.get(emptyFileCounter));\n                 files[i].setHasCrc(false);\n                 files[i].setSize(0);\n                 ++emptyFileCounter;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java\n     }\n \n     public ResourceAlignmentExtraField(int alignment, boolean allowMethodChange, int padding) {\n-        if (alignment < 0 || alignment > 0x7fff)\n+        if (alignment < 0 || alignment > 0x7fff) {\n             throw new IllegalArgumentException(\"Alignment must be between 0 and 0x7fff, was: \" + alignment);\n+        }\n         this.alignment = (short) alignment;\n         this.allowMethodChange = allowMethodChange;\n         this.padding = padding;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n                             - ResourceAlignmentExtraField.BASE_SIZE) &\n                             (alignment - 1));\n             ze.addExtraField(new ResourceAlignmentExtraField(alignment,\n-                            oldAlignmentEx != null ? oldAlignmentEx.allowMethodChange() : false, padding));\n+                            oldAlignmentEx != null && oldAlignmentEx.allowMethodChange(), padding));\n         }\n \n         final byte[] extra = ze.getLocalFileDataExtra();\n--- a/src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java\n \n package org.apache.commons.compress.compressors.brotli;\n \n-import java.io.FilterInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n \n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n public class BlockLZ4CompressorOutputStream extends CompressorOutputStream {\n \n     private static final int MIN_BACK_REFERENCE_LENGTH = 4;\n-    private static final int MIN_LENGTH_OF_LAST_LITERAL = 5;\n     private static final int MIN_OFFSET_OF_LAST_BACK_REFERENCE = 12;\n \n     /*\n--- a/src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java\n             int niceLen = niceBackReferenceLength != null ? niceBackReferenceLength\n                 : Math.max(minBackReferenceLength, maxBackReferenceLength / 2);\n             int candidates = maxCandidates != null ? maxCandidates : Math.max(256, windowSize / 128);\n-            boolean lazy = lazyMatches != null ? lazyMatches : true;\n+            boolean lazy = lazyMatches == null || lazyMatches;\n             int threshold = lazy ? (lazyThreshold != null ? lazyThreshold : niceLen) : minBackReferenceLength;\n \n             return new Parameters(windowSize, minBackReferenceLength, maxBackReferenceLength,", "timestamp": 1494528189, "metainfo": ""}