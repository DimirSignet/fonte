{"sha": "d488baff7190700fd8d27be8162b5307000696d8", "log": "add a bunch of toString methods  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/Archive.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/Archive.java\n     SevenZArchiveEntry[] files;\n     /// Mapping between folders, files and streams.\n     StreamMap streamMap;\n+\n+    @Override\n+    public String toString() {\n+        return \"Archive with packed streams starting at offset \" + packPos\n+            + \", \" + lengthOf(packSizes) + \" pack sizes, \" + lengthOf(packCrcs)\n+            + \" CRCs, \" + lengthOf(folders) + \" folders, \" + lengthOf(files)\n+            + \" files and \" + streamMap;\n+    }\n+\n+    private static String lengthOf(long[] a) {\n+        return a == null ? \"(null)\" : String.valueOf(a.length); \n+    }\n+\n+    private static String lengthOf(Object[] a) {\n+        return a == null ? \"(null)\" : String.valueOf(a.length); \n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/BindPair.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/BindPair.java\n class BindPair {\n     long inIndex;\n     long outIndex;\n+\n+    @Override\n+    public String toString() {\n+        return \"BindPair binding input \" + inIndex + \" to output \" + outIndex;\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/Folder.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/Folder.java\n     boolean hasCrc;\n     /// The CRC, if present.\n     long crc;\n-    /// The number of unpack substreams, one per non-empty file in this folder.\n+    /// The number of unpack substreams, product of the number of\n+    /// output streams and the nuber of non-empty files in this\n+    /// folder.\n     int numUnpackSubStreams;\n \n     /**\n         }\n         return 0;\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"Folder with \" + coders.length + \" coders, \" + totalInputStreams\n+            + \" input streams, \" + totalOutputStreams + \" output streams, \"\n+            + bindPairs.length + \" bind pairs, \" + packedStreams.length\n+            + \" packed streams, \" + unpackSizes.length + \" unpack sizes, \"\n+            + (hasCrc ? \"with CRC \" + crc : \"without CRC\")\n+            + \" and \" + numUnpackSubStreams + \" unpack streams\";\n+    }\n }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/StreamMap.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/StreamMap.java\n     int[] folderFirstFileIndex;\n     /// Index of folder for each file.\n     int[] fileFolderIndex;\n+\n+    @Override\n+    public String toString() {\n+        return \"StreamMap with indices of \" + folderFirstPackStreamIndex.length\n+            + \" folders, offsets of \" + packStreamOffsets.length + \" packed streams,\"\n+            + \" first files of \" + folderFirstFileIndex.length + \" folders and\"\n+            + \" folder indices for \" + fileFolderIndex.length + \" files\";\n+    }\n }", "timestamp": 1408207258, "metainfo": ""}