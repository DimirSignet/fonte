{"sha": "dcd60860c586fe97572e1c6c0373074c0ec6b135", "log": "allow close to be used even if stream hasn't been closed before  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java\n public class FileBasedScatterGatherBackingStore implements ScatterGatherBackingStore {\n     private final File target;\n     private final FileOutputStream os;\n+    private boolean closed;\n \n     public FileBasedScatterGatherBackingStore(File target) throws FileNotFoundException {\n         this.target = target;\n \n     @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n     public void closeForWriting() throws IOException {\n-        os.close();\n+        if (!closed) {\n+            os.close();\n+            closed = true;\n+        }\n     }\n \n     public void writeOut(byte[] data, int offset, int length) throws IOException {\n     }\n \n     public void close() throws IOException {\n+        closeForWriting();\n         target.delete();\n     }\n }", "timestamp": 1420261115, "metainfo": ""}