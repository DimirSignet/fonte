{"sha": "c75c10faae27781aeb51713f42153cad1fd242a4", "log": "add workaround for broken implementations that use backslashes rather than slashes in file names.  COMPRESS-176  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n      * @param name the name to use\n      */\n     protected void setName(String name) {\n+        if (name != null && getPlatform() == PLATFORM_FAT\n+            && name.indexOf(\"/\") == -1) {\n+            name = name.replace('\\\\', '/');\n+        }\n         this.name = name;\n     }\n \n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package org.apache.commons.compress.archivers.zip;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.net.URI;\n+import java.net.URL;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ZipArchiveInputStreamTest {\n+\n+    /**\n+     * @see https://issues.apache.org/jira/browse/COMPRESS-176\n+     */\n+    @Test\n+    public void winzipBackSlashWorkaround() throws Exception {\n+        URL zip = getClass().getResource(\"/test-winzip.zip\");\n+        ZipArchiveInputStream in = null;\n+        try {\n+            in = new ZipArchiveInputStream(new FileInputStream(new File(new URI(zip.toString()))));\n+            ZipArchiveEntry zae = in.getNextZipEntry();\n+            zae = in.getNextZipEntry();\n+            zae = in.getNextZipEntry();\n+            assertEquals(\"\\u00e4/\", zae.getName());\n+        } finally {\n+            if (in != null) {\n+                in.close();\n+            }\n+        }\n+    }\n+\n+}\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n         }\n     }\n \n+    /**\n+     * @see https://issues.apache.org/jira/browse/COMPRESS-176\n+     */\n+    public void testWinzipBackSlashWorkaround() throws Exception {\n+        URL zip = getClass().getResource(\"/test-winzip.zip\");\n+        File archive = new File(new URI(zip.toString()));\n+        zf = new ZipFile(archive);\n+        assertNull(zf.getEntry(\"\\u00e4\\\\\\u00fc.txt\"));\n+        assertNotNull(zf.getEntry(\"\\u00e4/\\u00fc.txt\"));\n+    }\n+\n     /*\n      * ordertest.zip has been handcrafted.\n      *", "timestamp": 1330405226, "metainfo": ""}