{"sha": "ba6953cfed3b221f90d04d96fdf846f658989b2c", "log": "Standardize on US English spelling (recognised -> recognized.)", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/Lister.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/Lister.java\n  * Simple command line application that lists the contents of an archive.\n  *\n  * <p>The name of the archive must be given as a command line argument.</p>\n- * <p>The optional second argument defines the archive type, in case the format is not recognised.</p>\n+ * <p>The optional second argument defines the archive type, in case the format is not recognized.</p>\n  *\n  * @since 1.1\n  */\n--- a/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java\n             in = new BufferedInputStream(new FileInputStream(ar));\n             ais = factory.createArchiveInputStream(in);\n         } catch (final ArchiveException ae) {\n-            fail(\"Should have recognised empty archive for \"+type);\n+            fail(\"Should have recognized empty archive for \"+type);\n         } finally {\n             if (ais != null) {\n                 ais.close(); // will close input as well\n--- a/src/test/java/org/apache/commons/compress/archivers/LongPathTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/LongPathTest.java\n             expected.add(\"META-INF/MANIFEST.MF\");\n         }\n         final ArchiveInputStream ais = factory.createArchiveInputStream(new BufferedInputStream(new FileInputStream(file)));\n-        // check if expected type recognised\n+        // check if expected type recognized\n         if (name.endsWith(\".tar\")){\n             assertTrue(ais instanceof TarArchiveInputStream);\n         } else if (name.endsWith(\".jar\") || name.endsWith(\".zip\")){\n--- a/src/test/java/org/apache/commons/compress/archivers/LongSymLinkTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/LongSymLinkTest.java\n             expected.add(\"META-INF/MANIFEST.MF\");\n         }\n         final ArchiveInputStream ais = factory.createArchiveInputStream(new BufferedInputStream(new FileInputStream(file)));\n-        // check if expected type recognised\n+        // check if expected type recognized\n         if (name.endsWith(\".tar\")){\n             assertTrue(ais instanceof TarArchiveInputStream);\n         } else if (name.endsWith(\".jar\") || name.endsWith(\".zip\")){", "timestamp": 1463787434, "metainfo": ""}