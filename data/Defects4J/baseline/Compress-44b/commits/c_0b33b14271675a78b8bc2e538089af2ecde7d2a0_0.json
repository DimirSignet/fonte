{"sha": "0b33b14271675a78b8bc2e538089af2ecde7d2a0", "log": "COMPRESS-302 Restore immutability/thread-safety to ArchiveStreamFactory.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n  * out.close();\n  * in.close();\n  * </pre>\n- * \n+ * @Immutable provided that the deprecated method setEntryEncoding is not used.\n  */\n public class ArchiveStreamFactory {\n \n     public static final String SEVEN_Z = \"7z\";\n \n     /**\n+     * Entry encoding, null for the platform default.\n+     */\n+    private final String encoding;\n+\n+    /**\n      * Entry encoding, null for the default.\n      */\n-    private String entryEncoding = null;\n+    private volatile String entryEncoding = null;\n+\n+    /**\n+     * Create an instance using the platform default encoding.\n+     */\n+    public ArchiveStreamFactory() {\n+        this(null);\n+    }\n+\n+    /**\n+     * Create an instance using the specified encoding.\n+     *\n+     * @param encoding the encoding to be used.\n+     *\n+     * @since 1.10\n+     */\n+    public ArchiveStreamFactory(String encoding) {\n+        super();\n+        this.encoding = encoding;\n+        // Also set the original field so can continue to use it.\n+        this.entryEncoding = encoding;\n+    }\n \n     /**\n      * Returns the encoding to use for arj, zip, dump, cpio and tar\n      * \n      * @param entryEncoding the entry encoding, null uses the default.\n      * @since 1.5\n-     */\n+     * @deprecated 1.10 use {@link #ArchiveStreamFactory(String)} to specify the encoding\n+     * @throws IllegalStateException if the constructor {@link #ArchiveStreamFactory(String)} \n+     * was used to specify the factory encoding.\n+     */\n+    @Deprecated\n     public void setEntryEncoding(String entryEncoding) {\n+        // Note: this does not detect new ArchiveStreamFactory(null) but that does not set the encoding anyway\n+        if (encoding != null) {\n+            throw new IllegalStateException(\"Cannot overide encoding set by the constructor\");\n+        }\n         this.entryEncoding = entryEncoding;\n     }\n ", "timestamp": 1424041766, "metainfo": ""}