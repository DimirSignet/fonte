{"sha": "7e6c7136cf0165f107daf8f9f1818c7d9c9fcc27", "log": "COMPRESS-287 ignore unknown properties in 7z file headers  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n         }\n         \n         if (nid != NID.kEnd) {\n-            throw new IOException(\"Badly terminated header\");\n+            throw new IOException(\"Badly terminated header, found \" + nid);\n         }\n     }\n     \n                     throw new IOException(\"kStartPos is unsupported, please report\");\n                 }\n                 case NID.kDummy: {\n-                    throw new IOException(\"kDummy is unsupported, please report\");\n-                }\n-                \n+                    // 7z 9.20 asserts the content is all zeros and ignores the property\n+                    // Compress up to 1.8.1 would throw an exception, now we ignore it (see COMPRESS-287\n+                    \n+                    if (skipBytesFully(header, size) < size) {\n+                        throw new IOException(\"Incomplete kDummy property\");\n+                    }\n+                    break;\n+                }\n+\n                 default: {\n-                    throw new IOException(\"Unknown property \" + propertyType);\n-                    // FIXME: Should actually:\n-                    //header.skipBytes((int)size);\n+                    // Compress up to 1.8.1 would throw an exception, now we ignore it (see COMPRESS-287\n+                    if (skipBytesFully(header, size) < size) {\n+                        throw new IOException(\"Incomplete property of type \" + propertyType);\n+                    }\n+                    break;\n                 }\n             }\n         }\n         }\n         return true;\n     }\n+\n+    private static long skipBytesFully(DataInput input, long bytesToSkip) throws IOException {\n+        if (bytesToSkip < 1) {\n+            return 0;\n+        }\n+        long skipped = 0;\n+        while (bytesToSkip > Integer.MAX_VALUE) {\n+            long skippedNow = skipBytesFully(input, Integer.MAX_VALUE);\n+            if (skippedNow == 0) {\n+                return skipped;\n+            }\n+            skipped += skippedNow;\n+            bytesToSkip -= skippedNow;\n+        }\n+        while (bytesToSkip > 0) {\n+            int skippedNow = input.skipBytes((int) bytesToSkip);\n+            if (skippedNow == 0) {\n+                return skipped;\n+            }\n+            skipped += skippedNow;\n+            bytesToSkip -= skippedNow;\n+        }\n+        return skipped;\n+    }\n }", "timestamp": 1407994900, "metainfo": ""}