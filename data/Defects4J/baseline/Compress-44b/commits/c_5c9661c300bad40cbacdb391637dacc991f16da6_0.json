{"sha": "5c9661c300bad40cbacdb391637dacc991f16da6", "log": "param name 'input' should not hide field.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n         }\n         throw new IOException(\"Failed to read entry: \"+offset);\n     }\n-    private long asLong(final byte[] input) {\n-        return Long.parseLong(ArchiveUtils.toAsciiString(input).trim());\n-    }\n-\n-    private int asInt(final byte[] input) {\n-        return asInt(input, 10, false);\n-    }\n-\n-    private int asInt(final byte[] input, final boolean treatBlankAsZero) {\n-        return asInt(input, 10, treatBlankAsZero);\n-    }\n-\n-    private int asInt(final byte[] input, final int base) {\n-        return asInt(input, base, false);\n-    }\n-\n-    private int asInt(final byte[] input, final int base, final boolean treatBlankAsZero) {\n-        final String string = ArchiveUtils.toAsciiString(input).trim();\n+    private long asLong(final byte[] byteArray) {\n+        return Long.parseLong(ArchiveUtils.toAsciiString(byteArray).trim());\n+    }\n+\n+    private int asInt(final byte[] byteArray) {\n+        return asInt(byteArray, 10, false);\n+    }\n+\n+    private int asInt(final byte[] byteArray, final boolean treatBlankAsZero) {\n+        return asInt(byteArray, 10, treatBlankAsZero);\n+    }\n+\n+    private int asInt(final byte[] byteArray, final int base) {\n+        return asInt(byteArray, base, false);\n+    }\n+\n+    private int asInt(final byte[] byteArray, final int base, final boolean treatBlankAsZero) {\n+        final String string = ArchiveUtils.toAsciiString(byteArray).trim();\n         if (string.length() == 0 && treatBlankAsZero) {\n             return 0;\n         }", "timestamp": 1481269653, "metainfo": ""}