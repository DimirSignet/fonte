{"sha": "7ee18aa0cc99a429e6ff9e3fe4b5e73f91b99776", "log": "Use try with resources.", "commit": "\n--- a/src/test/java/org/apache/commons/compress/utils/CountingStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/CountingStreamTest.java\n         // I don't like \"test all at once\" tests either, but the class\n         // is so trivial\n         final ByteArrayOutputStream bos = new ByteArrayOutputStream();\n-        final CountingOutputStream o = new CountingOutputStream(bos);\n-        o.write(1);\n-        assertEquals(1, o.getBytesWritten());\n-        o.write(new byte[] { 2, 3 });\n-        assertEquals(3, o.getBytesWritten());\n-        o.write(new byte[] { 2, 3, 4, 5, }, 2, 1);\n-        assertEquals(4, o.getBytesWritten());\n-        o.count(-1);\n-        assertEquals(4, o.getBytesWritten());\n-        o.count(-2);\n-        assertEquals(2, o.getBytesWritten());\n-        o.close();\n+        try (final CountingOutputStream o = new CountingOutputStream(bos)) {\n+            o.write(1);\n+            assertEquals(1, o.getBytesWritten());\n+            o.write(new byte[] { 2, 3 });\n+            assertEquals(3, o.getBytesWritten());\n+            o.write(new byte[] { 2, 3, 4, 5, }, 2, 1);\n+            assertEquals(4, o.getBytesWritten());\n+            o.count(-1);\n+            assertEquals(4, o.getBytesWritten());\n+            o.count(-2);\n+            assertEquals(2, o.getBytesWritten());\n+        }\n         assertArrayEquals(new byte[] { 1, 2, 3, 4 }, bos.toByteArray());\n     }\n \n         // is so trivial\n         final ByteArrayInputStream bis =\n             new ByteArrayInputStream(new byte[] { 1, 2, 3, 4 });\n-        final CountingInputStream i = new CountingInputStream(bis);\n-        assertEquals(1, i.read());\n-        assertEquals(1, i.getBytesRead());\n-        byte[] b = new byte[2];\n-        i.read(b);\n-        assertEquals(3, i.getBytesRead());\n-        assertArrayEquals(new byte[] { 2, 3 }, b);\n-        b = new byte[3];\n-        i.read(b, 1, 1);\n-        assertArrayEquals(new byte[] { 0, 4, 0 }, b);\n-        assertEquals(4, i.getBytesRead());\n-        i.count(-1);\n-        assertEquals(4, i.getBytesRead());\n-        i.count(-2);\n-        assertEquals(2, i.getBytesRead());\n-        i.close();\n+        try (final CountingInputStream i = new CountingInputStream(bis)) {\n+            assertEquals(1, i.read());\n+            assertEquals(1, i.getBytesRead());\n+            byte[] b = new byte[2];\n+            i.read(b);\n+            assertEquals(3, i.getBytesRead());\n+            assertArrayEquals(new byte[] { 2, 3 }, b);\n+            b = new byte[3];\n+            i.read(b, 1, 1);\n+            assertArrayEquals(new byte[] { 0, 4, 0 }, b);\n+            assertEquals(4, i.getBytesRead());\n+            i.count(-1);\n+            assertEquals(4, i.getBytesRead());\n+            i.count(-2);\n+            assertEquals(2, i.getBytesRead());\n+        }\n     }\n \n }", "timestamp": 1473104410, "metainfo": ""}