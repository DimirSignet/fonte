{"sha": "5ab06da27113785edd51ee465f5b8015c21f2cd9", "log": "COMPRESS-273 sprinkle in a few null checks  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n      */\n     public int getHeaderPadCount(){\n         if (this.alignmentBoundary == 0) { return 0; }\n-        int size = this.headerSize+this.name.length()+1; // Name has terminating null\n+        int size = this.headerSize + 1;  // Name has terminating null\n+        if (name != null) {\n+            size += name.length();\n+        }\n         int remain = size % this.alignmentBoundary;\n         if (remain > 0){\n             return this.alignmentBoundary - remain;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n         if (data == null) {\n             assembleData();\n         }\n-        return new ZipShort(data.length);\n+        return new ZipShort(data != null ? data.length : 0);\n     }\n \n     public byte[] getLocalFileDataData() {\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java\n                              0, result, start, 2);\n             System.arraycopy(data[i].getLocalFileDataLength().getBytes(),\n                              0, result, start + 2, 2);\n+            start += WORD;\n             byte[] local = data[i].getLocalFileDataData();\n-            System.arraycopy(local, 0, result, start + WORD, local.length);\n-            start += local.length + WORD;\n+            if (local != null) {\n+                System.arraycopy(local, 0, result, start, local.length);\n+                start += local.length;\n+            }\n         }\n         if (lastIsUnparseableHolder) {\n             byte[] local = data[data.length - 1].getLocalFileDataData();\n-            System.arraycopy(local, 0, result, start, local.length);\n+            if (local != null) {\n+                System.arraycopy(local, 0, result, start, local.length);\n+            }\n         }\n         return result;\n     }\n                              0, result, start, 2);\n             System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),\n                              0, result, start + 2, 2);\n+            start += WORD;\n             byte[] local = data[i].getCentralDirectoryData();\n-            System.arraycopy(local, 0, result, start + WORD, local.length);\n-            start += local.length + WORD;\n+            if (local != null) {\n+                System.arraycopy(local, 0, result, start, local.length);\n+                start += local.length;\n+            }\n         }\n         if (lastIsUnparseableHolder) {\n             byte[] local = data[data.length - 1].getCentralDirectoryData();\n-            System.arraycopy(local, 0, result, start, local.length);\n+            if (local != null) {\n+                System.arraycopy(local, 0, result, start, local.length);\n+            }\n         }\n         return result;\n     }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java\n      * @return the length of the local data\n      */\n     public ZipShort getLocalFileDataLength() {\n-        return new ZipShort(localData.length);\n+        return new ZipShort(localData != null ? localData.length : 0);\n     }\n \n     /**", "timestamp": 1397830424, "metainfo": ""}