{"sha": "b0d2bd6e3645a73adb0eab0d97e9afac5a40da7d", "log": "make PMD and findbugs a bit less unhappy  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n      * Skips the padding zeros written after the TRAILER!!! entry.\n      */\n     private void skipRemainderOfLastBlock() throws IOException {\n-        long readFromLastBlock = (getBytesRead() % blockSize);\n-        if (readFromLastBlock != 0) {\n-            skip(blockSize - readFromLastBlock);\n+        long readFromLastBlock = getBytesRead() % blockSize;\n+        long remainingBytes = readFromLastBlock == 0 ? 0\n+            : blockSize - readFromLastBlock;\n+        while (remainingBytes > 0) {\n+            long skipped = skip(blockSize - readFromLastBlock);\n+            if (skipped <= 0) {\n+                break;\n+            }\n+            remainingBytes -= skipped;\n         }\n     }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java\n     private byte[] blockBuffer = new byte[DumpArchiveConstants.TP_SIZE];\n     private int currBlkIdx = -1;\n     private int blockSize = DumpArchiveConstants.TP_SIZE;\n-    private final int recordSize = DumpArchiveConstants.TP_SIZE;\n+    private static final int recordSize = DumpArchiveConstants.TP_SIZE;\n     private int readOffset = DumpArchiveConstants.TP_SIZE;\n     private boolean isCompressed = false;\n     private long bytesRead = 0;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n import org.apache.commons.compress.archivers.ArchiveEntry;\n \n import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStream;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Date;", "timestamp": 1360595588, "metainfo": ""}