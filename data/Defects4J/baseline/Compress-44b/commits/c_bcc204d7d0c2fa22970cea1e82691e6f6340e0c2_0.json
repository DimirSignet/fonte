{"sha": "bcc204d7d0c2fa22970cea1e82691e6f6340e0c2", "log": "don't wrap XZ for Java's exception  should be backwards compatible as I'm only changing the signature of a package private method in a package private class.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/CoderBase.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/CoderBase.java\n     /**\n      * @return property-bytes to write in a Folder block\n      */\n-    byte[] getOptionsAsProperties(final Object options) {\n+    byte[] getOptionsAsProperties(final Object options) throws IOException {\n         return NONE;\n     }\n \n     /**\n      * @return configuration options that have been used to create the given InputStream from the given Coder\n      */\n-    Object getOptionsFromCoder(final Coder coder, final InputStream in) {\n+    Object getOptionsFromCoder(final Coder coder, final InputStream in) throws IOException {\n         return null;\n     }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java\n     }\n \n     @Override\n-    byte[] getOptionsAsProperties(final Object opts) {\n+    byte[] getOptionsAsProperties(final Object opts) throws IOException {\n         final LZMA2Options options = getOptions(opts);\n         final byte props = (byte) ((options.getPb() * 5 + options.getLp()) * 9 + options.getLc());\n         int dictSize = options.getDictSize();\n     }\n \n     @Override\n-    Object getOptionsFromCoder(final Coder coder, final InputStream in) {\n-        try {\n+    Object getOptionsFromCoder(final Coder coder, final InputStream in) throws IOException {\n             final byte propsByte = coder.properties[0];\n             int props = propsByte & 0xFF;\n             int pb = props / (9 * 5);\n             opts.setLcLp(lc, lp);\n             opts.setDictSize(getDictionarySize(coder));\n             return opts;\n-        } catch (UnsupportedOptionsException ex) {\n-            throw new RuntimeException(ex);\n-        }\n     }\n \n     private int getDictSize(final Object opts) {\n         return (int) dictSize;\n     }\n \n-    private LZMA2Options getOptions(final Object opts) {\n+    private LZMA2Options getOptions(final Object opts) throws IOException {\n         if (opts instanceof LZMA2Options) {\n             return (LZMA2Options) opts;\n         }\n         final LZMA2Options options = new LZMA2Options();\n-        try {\n             options.setDictSize(numberOptionOrDefault(opts));\n-        } catch (UnsupportedOptionsException ex) {\n-            throw new RuntimeException(ex);\n-        }\n         return options;\n     }\n ", "timestamp": 1482169838, "metainfo": ""}