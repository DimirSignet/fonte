{"sha": "790fd918b30bb3e5c905adc19e795006c99579d7", "log": "Made some stuff public  Work with the plexus-archiver poc revealed I needed these public  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java\n  *\n  * @since 1.10\n  */\n-class FileBasedScatterGatherBackingStore implements ScatterGatherBackingStore {\n+public class FileBasedScatterGatherBackingStore implements ScatterGatherBackingStore {\n     private final File target;\n     private final FileOutputStream os;\n \n-    FileBasedScatterGatherBackingStore(File target) throws FileNotFoundException {\n+    public FileBasedScatterGatherBackingStore(File target) throws FileNotFoundException {\n         this.target = target;\n         os = new FileOutputStream(target);\n     }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java\n         }\n     }\n \n-    static ScatterZipOutputStream createDeferred(ScatterGatherBackingStoreSupplier scatterGatherBackingStoreSupplier)\n+    public static ScatterZipOutputStream createDeferred(ScatterGatherBackingStoreSupplier scatterGatherBackingStoreSupplier)\n             throws IOException {\n         ScatterGatherBackingStore bs = scatterGatherBackingStoreSupplier.get();\n         StreamCompressor sc = StreamCompressor.create(Deflater.DEFAULT_COMPRESSION, bs);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java\n  *\n  * @since 1.10\n  */\n-interface ScatterGatherBackingStore extends Closeable {\n+public interface ScatterGatherBackingStore extends Closeable {\n \n     /**\n      * An input stream that contains the scattered payload", "timestamp": 1420148003, "metainfo": ""}