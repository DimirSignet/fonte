{"sha": "d681042e60a3a1e92f4c891ce9dcffd672868e7f", "log": "Add missing '@Override' annotations.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n         this.os = os;\n         compressor = new LZ77Compressor(params,\n             new LZ77Compressor.Callback() {\n+                @Override\n                 public void accept(LZ77Compressor.Block block) throws IOException {\n                     //System.err.println(block);\n                     if (block instanceof LZ77Compressor.LiteralBlock) {\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java\n         this.os = os;\n         consumer = new ByteUtils.OutputStreamByteConsumer(os);\n         compressor = new LZ77Compressor(params, new LZ77Compressor.Callback() {\n+                @Override\n                 public void accept(LZ77Compressor.Block block) throws IOException {\n                     //System.err.println(block);\n                     if (block instanceof LZ77Compressor.LiteralBlock) {\n--- a/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n     @Test\n     public void readDoubledBlaLz4WithDecompressConcatenatedTrue() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new FramedLZ4CompressorInputStream(in, true);\n                 }\n     @Test\n     public void readDoubledBlaLz4WithDecompressConcatenatedFalse() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new FramedLZ4CompressorInputStream(in, false);\n                 }\n     @Test\n     public void readDoubledBlaLz4WithoutExplicitDecompressConcatenated() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new FramedLZ4CompressorInputStream(in);\n                 }\n     @Test\n     public void readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new CompressorStreamFactory()\n                         .createCompressorInputStream(CompressorStreamFactory.getLZ4Framed(), in, true);\n     @Test\n     public void readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new CompressorStreamFactory()\n                         .createCompressorInputStream(CompressorStreamFactory.getLZ4Framed(), in, false);\n     @Test\n     public void readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated() throws Exception {\n         readDoubledBlaLz4(new StreamWrapper() {\n+                @Override\n                 public InputStream wrap(InputStream in) throws Exception {\n                     return new CompressorStreamFactory()\n                         .createCompressorInputStream(CompressorStreamFactory.getLZ4Framed(), in);", "timestamp": 1493708609, "metainfo": ""}