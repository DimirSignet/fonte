{"sha": "f331a7d122ea31e844b16e37ff1711b633aa6214", "log": "COMPRESS-180 new String(byte[]) conversions use default encoding Document where the charset might need specifying  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n     private String readCString(final int length) throws IOException {\n         byte tmpBuffer[] = new byte[length];\n         readFully(tmpBuffer, 0, tmpBuffer.length);\n-        return new String(tmpBuffer, 0, tmpBuffer.length - 1);\n+        return new String(tmpBuffer, 0, tmpBuffer.length - 1); // TODO default charset?\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java\n \n                 byte type = blockBuffer[i + 6];\n \n-                String name = new String(blockBuffer, i + 8, blockBuffer[i + 7]);\n+                String name = new String(blockBuffer, i + 8, blockBuffer[i + 7]); // TODO default charset?\n \n                 if (\".\".equals(name) || \"..\".equals(name)) {\n                     // do nothing...\n--- a/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java\n         dumpDate = 1000L * DumpArchiveUtil.convert32(buffer, 4);\n         previousDumpDate = 1000L * DumpArchiveUtil.convert32(buffer, 8);\n         volume = DumpArchiveUtil.convert32(buffer, 12);\n-        label = new String(buffer, 676, DumpArchiveConstants.LBLSIZE).trim();\n+        label = new String(buffer, 676, DumpArchiveConstants.LBLSIZE).trim(); // TODO default charset?\n         level = DumpArchiveUtil.convert32(buffer, 692);\n-        filesys = new String(buffer, 696, DumpArchiveConstants.NAMELEN).trim();\n-        devname = new String(buffer, 760, DumpArchiveConstants.NAMELEN).trim();\n-        hostname = new String(buffer, 824, DumpArchiveConstants.NAMELEN).trim();\n+        filesys = new String(buffer, 696, DumpArchiveConstants.NAMELEN).trim(); // TODO default charset?\n+        devname = new String(buffer, 760, DumpArchiveConstants.NAMELEN).trim(); // TODO default charset?\n+        hostname = new String(buffer, 824, DumpArchiveConstants.NAMELEN).trim(); // TODO default charset?\n         flags = DumpArchiveUtil.convert32(buffer, 888);\n         firstrec = DumpArchiveUtil.convert32(buffer, 892);\n         ntrec = DumpArchiveUtil.convert32(buffer, 896);\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n             byte[] buf = new byte[SMALL_BUFFER_SIZE];\n             int length = 0;\n             while ((length = read(buf)) >= 0) {\n-                longName.append(new String(buf, 0, length));\n+                longName.append(new String(buf, 0, length)); // TODO default charset?\n             }\n             getNextEntry();\n             if (currEntry == null) {\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n     // Helper method to generate the exception message\n     private static String exceptionMessage(byte[] buffer, final int offset,\n             final int length, int current, final byte currentByte) {\n-        String string = new String(buffer, offset, length);\n+        String string = new String(buffer, offset, length); // TODO default charset?\n         string=string.replaceAll(\"\\0\", \"{NUL}\"); // Replace NULs to allow string to be printed\n         final String s = \"Invalid byte \"+currentByte+\" at offset \"+(current-offset)+\" in '\"+string+\"' len=\"+length;\n         return s;", "timestamp": 1333218278, "metainfo": ""}