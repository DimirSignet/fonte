{"sha": "8bfb8987a3f5c73a38880c2c10cf7eda06ac9ddd", "log": "Update the entry CRC in the main read() method only (fixes the CRC for stored entries with a data descriptor)  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n         }\n \n         // avoid int overflow, check null buffer\n-        if (offset <= buffer.length && length >= 0 && offset >= 0\n-            && buffer.length - offset >= length) {\n-            ZipUtil.checkRequestedFeatures(current.entry);\n-            if (!supportsDataDescriptorFor(current.entry)) {\n-                throw new UnsupportedZipFeatureException(UnsupportedZipFeatureException\n-                                                         .Feature\n-                                                         .DATA_DESCRIPTOR,\n-                                                         current.entry);\n-            }\n-\n-            if (current.entry.getMethod() == ZipArchiveOutputStream.STORED) {\n-                return readStored(buffer, offset, length);\n-            }\n-            if (current.entry.getMethod() == ZipMethod.UNSHRINKING.getCode()) {\n-                throw new UnsupportedZipFeatureException(ZipMethod.UNSHRINKING,\n-                                                         current.entry);\n-            }\n-            return readDeflated(buffer, offset, length);\n-        }\n-        throw new ArrayIndexOutOfBoundsException();\n+        if (offset > buffer.length || length < 0 || offset < 0 || buffer.length - offset < length) {\n+            throw new ArrayIndexOutOfBoundsException();\n+        }\n+        \n+        ZipUtil.checkRequestedFeatures(current.entry);\n+        if (!supportsDataDescriptorFor(current.entry)) {\n+            throw new UnsupportedZipFeatureException(UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR,\n+                    current.entry);\n+        }\n+\n+        int read;\n+        if (current.entry.getMethod() == ZipArchiveOutputStream.STORED) {\n+            read = readStored(buffer, offset, length);\n+        } else if (current.entry.getMethod() == ZipArchiveOutputStream.DEFLATED) {\n+            read = readDeflated(buffer, offset, length);\n+        } else {\n+            throw new UnsupportedZipFeatureException(ZipMethod.getMethodByCode(current.entry.getMethod()),\n+                    current.entry);\n+        }\n+        \n+        if (read >= 0) {\n+            crc.update(buffer, offset, read);\n+        }\n+        \n+        return read;\n     }\n \n     /**\n         }\n         buf.get(buffer, offset, toRead);\n         current.bytesRead += toRead;\n-        crc.update(buffer, offset, toRead);\n         return toRead;\n     }\n \n                 throw new IOException(\"Truncated ZIP file\");\n             }\n         }\n-        crc.update(buffer, offset, read);\n         return read;\n     }\n ", "timestamp": 1387443107, "metainfo": ""}