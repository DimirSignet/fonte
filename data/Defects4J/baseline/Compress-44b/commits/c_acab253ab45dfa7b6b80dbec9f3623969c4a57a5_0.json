{"sha": "acab253ab45dfa7b6b80dbec9f3623969c4a57a5", "log": "Avoid some resource leak warnings", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStreamTest.java\n     @Test\n     public void testNotADumpArchive() throws Exception {\n         try (FileInputStream is = new FileInputStream(getFile(\"bla.zip\"))) {\n-            new DumpArchiveInputStream(is);\n+            new DumpArchiveInputStream(is).close();\n             fail(\"expected an exception\");\n         } catch (final ArchiveException ex) {\n             // expected\n     @Test\n     public void testNotADumpArchiveButBigEnough() throws Exception {\n         try (FileInputStream is = new FileInputStream(getFile(\"zip64support.tar.bz2\"))) {\n-            new DumpArchiveInputStream(is);\n+            new DumpArchiveInputStream(is).close();\n             fail(\"expected an exception\");\n         } catch (final ArchiveException ex) {\n             // expected\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n     @Test\n     public void testEncryptedArchiveRequiresPassword() throws Exception {\n         try {\n-            new SevenZFile(getFile(\"bla.encrypted.7z\"));\n+            new SevenZFile(getFile(\"bla.encrypted.7z\")).close();\n             fail(\"shouldn't decrypt without a password\");\n         } catch (final PasswordRequiredException ex) {\n             final String msg = ex.getMessage();\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java\n     @Test(expected=IOException.class)\n     public void testRead7ZipMultiVolumeArchiveForFile() throws IOException {\n         final File file = getFile(\"apache-maven-2.2.1.zip.001\");\n-        new ZipFile(file);\n+        ZipFile zf = new ZipFile(file);\n+        zf.close();\n     }\n }\n--- a/src/test/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStreamTest.java\n     @Test(expected = IOException.class)\n     public void shouldThrowAnIOExceptionWhenAppliedToAZipFile() throws Exception {\n         try (FileInputStream in = new FileInputStream(getFile(\"bla.zip\"))) {\n-            new BZip2CompressorInputStream(in);\n+            BZip2CompressorInputStream bis = new BZip2CompressorInputStream(in);\n+            bis.close();\n         }\n     }\n ", "timestamp": 1488238114, "metainfo": ""}