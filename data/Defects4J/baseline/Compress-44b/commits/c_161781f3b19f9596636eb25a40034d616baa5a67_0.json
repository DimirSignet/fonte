{"sha": "161781f3b19f9596636eb25a40034d616baa5a67", "log": "COMPRESS-147 CompressorInputStream didn't know the concept of pushback, also take adavantage of count ignoring -1s  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java\n      * @param read the number of bytes read\n      */\n     protected void count(long read) {\n-        if(read != -1) {\n+        if (read != -1) {\n             bytesRead = bytesRead + read;\n         }\n+    }\n+\n+    /**\n+     * Decrements the counter of already read bytes.\n+     * \n+     * @param pushedBack the number of bytes pushed back.\n+     * @since 1.7\n+     */\n+    protected void pushedBackBytes(long pushedBack) {\n+        bytesRead -= pushedBack;\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n             endReached = true;\n         } else if (type == STREAM_IDENTIFIER_TYPE) {\n             in.unread(type);\n-            count(-1);\n+            pushedBackBytes(1);\n             readStreamIdentifier();\n             readNextBlock();\n         } else if (type == PADDING_CHUNK_TYPE\n     private void readCrc() throws IOException {\n         byte[] b = new byte[4];\n         int read = IOUtils.readFully(in, b);\n-        if (read > 0) {\n-            count(read);\n-        }\n+        count(read);\n         if (read != 4) {\n             throw new IOException(\"premature end of stream\");\n         }\n     private void skipBlock() throws IOException {\n         int size = readSize();\n         long read = IOUtils.skip(in, size);\n-        if (read > 0) {\n-            count(read);\n-        }\n+        count(read);\n         if (read != size) {\n             throw new IOException(\"premature end of stream\");\n         }\n     private void readStreamIdentifier() throws IOException {\n         byte[] b = new byte[10];\n         int read = IOUtils.readFully(in, b);\n-        if (read > 0) {\n-            count(read);\n-        }\n+        count(read);\n         if (10 != read || !matches(b, 10)) {\n             throw new IOException(\"Not a framed Snappy stream\");\n         }\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n      */\n     private boolean expandLiteral(final int length) throws IOException {\n         int bytesRead = in.read(decompressBuf, writeIndex, length);\n-        if (bytesRead != -1) {\n-            count(bytesRead);\n-        }\n+        count(bytesRead);\n         if (length != bytesRead) {\n             throw new IOException(\"Premature end of stream\");\n         }", "timestamp": 1384079190, "metainfo": ""}