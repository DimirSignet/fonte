{"sha": "5f99a51d41c0e8ab7359608806ce977d9419c248", "log": "don't duplicate the 'do I need zip64' check when creating central directory headers  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n \n         handleZip64Extra(ze, lfhOffset, needsZip64Extra);\n \n-        byte[] centralFileHeader = createCentralFileHeader(ze, getName(ze), lfhOffset);\n+        byte[] centralFileHeader = createCentralFileHeader(ze, getName(ze), lfhOffset,\n+                                                           needsZip64Extra);\n         writeOut(centralFileHeader);\n         written += centralFileHeader.length;\n     }\n+\n     /**\n      * Writes the central file header entry.\n      * @param ze the entry to write\n      * @param name The encoded name\n      * @param lfhOffset Local file header offset for this file\n      * @throws IOException on error\n-     * @throws Zip64RequiredException if the archive's size exceeds 4\n-     * GByte and {@link Zip64Mode #setUseZip64} is {@link\n-     * Zip64Mode#Never}.\n-     */\n-    private byte[] createCentralFileHeader(ZipArchiveEntry ze, ByteBuffer name, long lfhOffset) throws IOException {\n+     */\n+    private byte[] createCentralFileHeader(ZipArchiveEntry ze, ByteBuffer name, long lfhOffset,\n+                                           boolean needsZip64Extra) throws IOException {\n         byte[] extra = ze.getCentralDirectoryExtra();\n \n         // file comment length\n         byte[] buf = new byte[len];\n \n         System.arraycopy(CFH_SIG,  0, buf, CFH_SIG_OFFSET, WORD);\n-\n-        final boolean needsZip64Extra = hasZip64Extra(ze)\n-                || ze.getCompressedSize() >= ZIP64_MAGIC\n-                || ze.getSize() >= ZIP64_MAGIC\n-                || lfhOffset >= ZIP64_MAGIC;\n-\n-        if (needsZip64Extra && zip64Mode == Zip64Mode.Never) {\n-            // must be the offset that is too big, otherwise an\n-            // exception would have been throw in putArchiveEntry or\n-            // closeArchiveEntry\n-            throw new Zip64RequiredException(Zip64RequiredException\n-                    .ARCHIVE_TOO_BIG_MESSAGE);\n-        }\n-\n-        // todo: Do in caller !  handleZip64Extra(ze, lfhOffset, needsZip64Extra);\n \n         // version made by\n         // CheckStyle:MagicNumber OFF", "timestamp": 1419762745, "metainfo": ""}