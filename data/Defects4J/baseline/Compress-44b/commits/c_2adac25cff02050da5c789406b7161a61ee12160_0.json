{"sha": "2adac25cff02050da5c789406b7161a61ee12160", "log": "cosmetics", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n             throw new IOException(\"No InputStream\");\n         }\n \n-        if(!isFirstStream) {\n+        if (!isFirstStream) {\n             bin.clearBitCache();\n         }\n \n--- a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n         if (count < 0 || count > MAXIMUM_CACHE_SIZE) {\n             throw new IllegalArgumentException(\"count must not be negative or greater than \" + MAXIMUM_CACHE_SIZE);\n         }\n-        if(ensureCache(count))\n+        if (ensureCache(count)) {\n             return -1;\n+        }\n \n         if (bitsCachedSize < count) {\n             return processBitsGreater57(count);\n             bitsCached |= bitsToAdd;\n             overflow = nextByte & MASKS[overflowBits];\n         }\n-        bitsCachedSize = count;\n         bitsOut = bitsCached & MASKS[count];\n         bitsCached = overflow;\n         bitsCachedSize = overflowBits;\n         return bitsOut;\n-\t}\n+    }\n \n-\t/**\n+    /**\n      * Fills the cache up to 56 bits\n      * @param count\n      * @return return true, when EOF", "timestamp": 1486233763, "metainfo": ""}