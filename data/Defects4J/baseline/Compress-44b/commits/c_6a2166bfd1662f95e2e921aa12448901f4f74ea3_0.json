{"sha": "6a2166bfd1662f95e2e921aa12448901f4f74ea3", "log": "testcases for compressors with concatenated streams.  COMPRESS-146 COMPRESS-154 COMPRESS156  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java\n import java.io.OutputStream;\n \n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n import org.apache.commons.compress.utils.IOUtils;\n \n public final class BZip2TestCase extends AbstractTestCase {\n         os.close();\n     }\n \n+    public void testConcatenatedStreamsReadFirstOnly() throws Exception {\n+        final File input = getFile(\"multiple.bz2\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in = new CompressorStreamFactory()\n+                .createCompressorInputStream(\"bzip2\", is);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals(-1, in.read());\n+            } finally {\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    public void testConcatenatedStreamsReadFully() throws Exception {\n+        final File input = getFile(\"multiple.bz2\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in =\n+                new BZip2CompressorInputStream(is, true);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals('b', in.read());\n+                assertEquals(0, in.available());\n+                assertEquals(-1, in.read());\n+            } finally {\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n }\n--- a/src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java\n import java.io.OutputStream;\n \n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n import org.apache.commons.compress.utils.IOUtils;\n \n public final class GZipTestCase extends AbstractTestCase {\n                 if (out != null) {\n                     out.close();\n                 }\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    public void testConcatenatedStreamsReadFirstOnly() throws Exception {\n+        final File input = getFile(\"multiple.gz\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in = new CompressorStreamFactory()\n+                .createCompressorInputStream(\"gz\", is);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals(-1, in.read());\n+            } finally {\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    public void testConcatenatedStreamsReadFully() throws Exception {\n+        final File input = getFile(\"multiple.gz\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in =\n+                new GzipCompressorInputStream(is, true);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals('b', in.read());\n+                assertEquals(0, in.available());\n+                assertEquals(-1, in.read());\n+            } finally {\n                 in.close();\n             }\n         } finally {\n--- a/src/test/java/org/apache/commons/compress/compressors/XZTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/XZTestCase.java\n import java.io.OutputStream;\n \n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;\n import org.apache.commons.compress.utils.IOUtils;\n \n public final class XZTestCase extends AbstractTestCase {\n         }\n     }\n \n+    public void testConcatenatedStreamsReadFirstOnly() throws Exception {\n+        final File input = getFile(\"multiple.xz\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in = new CompressorStreamFactory()\n+                .createCompressorInputStream(\"xz\", is);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals(-1, in.read());\n+            } finally {\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    public void testConcatenatedStreamsReadFully() throws Exception {\n+        final File input = getFile(\"multiple.xz\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            final CompressorInputStream in =\n+                new XZCompressorInputStream(is, true);\n+            try {\n+                assertEquals('a', in.read());\n+                assertEquals('b', in.read());\n+                assertEquals(0, in.available());\n+                assertEquals(-1, in.read());\n+            } finally {\n+                in.close();\n+            }\n+        } finally {\n+            is.close();\n+        }\n+    }\n }", "timestamp": 1321618805, "metainfo": ""}