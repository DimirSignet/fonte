{"sha": "ca55bc4cfaead7376599c281abfff94a936f5bf5", "log": "Implement uncompressing of BZip2 compressed entries in ZipFile", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n import java.util.zip.InflaterInputStream;\n import java.util.zip.ZipException;\n \n+import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;\n import org.apache.commons.compress.utils.IOUtils;\n \n import static org.apache.commons.compress.archivers.zip.ZipConstants.DWORD;\n                         inflater.end();\n                     }\n                 };\n+            case BZIP2:\n+                return new BZip2CompressorInputStream(bis);\n             default:\n                 throw new ZipException(\"Found unsupported compression method \"\n                                        + ze.getMethod());\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java\n         return entry.getMethod() == ZipEntry.STORED\n             || entry.getMethod() == ZipMethod.UNSHRINKING.getCode()\n             || entry.getMethod() == ZipMethod.IMPLODING.getCode()\n-            || entry.getMethod() == ZipEntry.DEFLATED;\n+            || entry.getMethod() == ZipEntry.DEFLATED\n+            || entry.getMethod() == ZipMethod.BZIP2.getCode();\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.TreeMap;\n                           IOUtils.toByteArray(zf.getInputStream(ze)));\n     }\n \n+    @Test\n+    public void testUnzipBZip2CompressedEntry() throws Exception {\n+        File archive = getFile(\"bzip2-zip.zip\");\n+        zf = new ZipFile(archive);\n+        ZipArchiveEntry ze = zf.getEntry(\"lots-of-as\");\n+        assertEquals(42, ze.getSize());\n+        byte[] expected = new byte[42];\n+        Arrays.fill(expected , (byte)'a');\n+        assertArrayEquals(expected, IOUtils.toByteArray(zf.getInputStream(ze)));\n+    }\n+\n     /*\n      * ordertest.zip has been handcrafted.\n      *", "timestamp": 1447218693, "metainfo": ""}