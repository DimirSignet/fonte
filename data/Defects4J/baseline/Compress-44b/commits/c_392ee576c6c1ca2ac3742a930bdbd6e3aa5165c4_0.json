{"sha": "392ee576c6c1ca2ac3742a930bdbd6e3aa5165c4", "log": "Arrays#copyOfRange is Java 1.6+; replace with basic local implementation  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java\n         DATA = out.toByteArray();\n \n         // Drop the eos_magic field (6 bytes) and CRC (4 bytes).\n-        TRUNCATED_DATA = Arrays.copyOfRange(DATA, 0, DATA.length - 10);\n+        TRUNCATED_DATA = copyOfRange(DATA, 0, DATA.length - 10);\n     }\n \n     @Before\n         ByteBuffer buffer = ByteBuffer.allocate(length);\n         bz2Channel.read(buffer);\n \n-        assertArrayEquals(Arrays.copyOfRange(TEXT.getBytes(), 0, length),\n+        assertArrayEquals(copyOfRange(TEXT.getBytes(), 0, length),\n                 buffer.array());\n \n         // subsequent read should throw\n \n         return Channels.newChannel(bZin);\n     }\n+\n+    // Helper method since Arrays#copyOfRange is Java 1.6+\n+    // Does not check parameters, so may fail if they are incompatible\n+    private static byte[] copyOfRange(byte[] original, int from, int to) {\n+        int length = to - from;\n+        byte buff[] = new byte[length];\n+        System.arraycopy(original, from, buff, 0, length);\n+        return buff;\n+    }\n }", "timestamp": 1393615752, "metainfo": ""}