{"sha": "b421b96088a3a8c4d98244f02e80ec590bda9ded", "log": "Class was not thread-safe: - external byte array was stored directly - List was created and then modified via the final variable Fixed by copying byte array and storing List once as unmodifiable List  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n  * implementation, Cp437 and Cp850.</p>\n  * \n  * <p>The methods of this class are reentrant.</p>\n+ * @Immutable\n  */\n class Simple8BitZipEncoding implements ZipEncoding {\n \n      * stored as an array of 128 chars.\n      */\n     public Simple8BitZipEncoding(char[] highChars) {\n-        this.highChars = highChars;\n-        this.reverseMapping = new ArrayList(this.highChars.length);\n+        this.highChars = (char[]) highChars.clone();\n+        List temp = new ArrayList(this.highChars.length);\n \n         byte code = 127;\n \n         for (int i = 0; i < this.highChars.length; ++i) {\n-            this.reverseMapping.add(new Simple8BitChar(++code,\n-                                                       this.highChars[i]));\n-        }\n-\n-        Collections.sort(this.reverseMapping);\n+            temp.add(new Simple8BitChar(++code, this.highChars[i]));\n+        }\n+\n+        Collections.sort(temp);\n+        this.reverseMapping = Collections.unmodifiableList(temp);\n     }\n \n     /**", "timestamp": 1238189834, "metainfo": ""}