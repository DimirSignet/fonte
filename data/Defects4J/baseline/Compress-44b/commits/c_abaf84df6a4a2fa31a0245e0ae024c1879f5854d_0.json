{"sha": "abaf84df6a4a2fa31a0245e0ae024c1879f5854d", "log": "Close resources  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStreamTest.java\n         cal.set(2008, 9, 6, 23, 50, 52);\n         cal.set(Calendar.MILLISECOND, 0);\n         assertEquals(cal.getTime(), entry.getLastModifiedDate());\n+        in.close();\n     }\n \n     public void testReadingOfAttributesUnixVersion() throws Exception {\n         cal.set(2008, 9, 6, 21, 50, 52);\n         cal.set(Calendar.MILLISECOND, 0);\n         assertEquals(cal.getTime(), entry.getLastModifiedDate());\n+        in.close();\n     }\n }\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n                 entry = tar.getNextTarEntry();\n             }\n             assertEquals(31, count);\n+            tar.close();\n         } catch (IOException e) {\n             fail(\"COMPRESS-245: \" + e.getMessage());\n         } finally {\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ExplodeSupportTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ExplodeSupportTest.java\n         out.flush();\n \n         assertEquals(\"CRC32\", entry.getCrc(), out.getChecksum().getValue());\n+        zip.close();\n     }\n \n     public void testArchiveWithImplodeCompression4K2Trees() throws IOException {\n--- a/src/test/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStreamTest.java\n         cos.flush();\n         cos.finish();\n         Assert.assertTrue(bos.toByteArray().length > 0);\n+        cos.close();\n     }\n \n }\n--- a/src/test/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStreamTest.java\n                 new FramedSnappyCompressorInputStream(new ByteArrayInputStream(input));\n             in.read();\n             fail(\"expected an exception\");\n+            in.close();\n         } catch (IOException ex) {\n             assertTrue(ex.getMessage().indexOf(\"unskippable chunk\") > -1);\n         }", "timestamp": 1406577054, "metainfo": ""}