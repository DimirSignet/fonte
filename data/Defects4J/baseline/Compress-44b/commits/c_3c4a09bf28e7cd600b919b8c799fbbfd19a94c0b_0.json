{"sha": "3c4a09bf28e7cd600b919b8c799fbbfd19a94c0b", "log": "COMPRESS-314 read group/user ids > 0x80000000 from (posix) tars  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n             } else if (\"linkpath\".equals(key)){\n                 currEntry.setLinkName(val);\n             } else if (\"gid\".equals(key)){\n-                currEntry.setGroupId(Integer.parseInt(val));\n+                currEntry.setGroupId(Long.parseLong(val));\n             } else if (\"gname\".equals(key)){\n                 currEntry.setGroupName(val);\n             } else if (\"uid\".equals(key)){\n-                currEntry.setUserId(Integer.parseInt(val));\n+                currEntry.setUserId(Long.parseLong(val));\n             } else if (\"uname\".equals(key)){\n                 currEntry.setUserName(val);\n             } else if (\"size\".equals(key)){\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n         }\n     }\n \n+    @Test\n+    public void shouldReadBigGid() throws Exception {\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos);\n+        tos.setBigNumberMode(TarArchiveOutputStream.BIGNUMBER_POSIX);\n+        TarArchiveEntry t = new TarArchiveEntry(\"name\");\n+        t.setGroupId(4294967294l);\n+        t.setSize(1);\n+        tos.putArchiveEntry(t);\n+        tos.write(30);\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        byte[] data = bos.toByteArray();\n+        ByteArrayInputStream bis = new ByteArrayInputStream(data);\n+        TarArchiveInputStream tis =\n+            new TarArchiveInputStream(bis);\n+        t = tis.getNextTarEntry();\n+        assertEquals(4294967294l, t.getLongGroupId());\n+        tis.close();\n+    }\n+\n     private TarArchiveInputStream getTestStream(String name) {\n         return new TarArchiveInputStream(\n                 TarArchiveInputStreamTest.class.getResourceAsStream(name));", "timestamp": 1431112287, "metainfo": ""}