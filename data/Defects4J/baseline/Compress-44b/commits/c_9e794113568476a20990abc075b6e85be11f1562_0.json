{"sha": "9e794113568476a20990abc075b6e85be11f1562", "log": "COMPRESS-271 forgot to read content checksum", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java\n         int realLen = (int) (len & (~UNCOMPRESSED_FLAG_MASK));\n         if (realLen == 0) {\n             endReached = true;\n+            verifyContentChecksum();\n             return;\n         }\n         InputStream capped = new BoundedInputStream(in, realLen);\n                 if (4 != skipped) {\n                     throw new IOException(\"Premature end of stream while reading block checksum\");\n                 }\n+            }\n+        }\n+    }\n+\n+    private void verifyContentChecksum() throws IOException {\n+        if (expectContentChecksum) {\n+            int skipped = (int) IOUtils.skip(in, 4);\n+            count(skipped);\n+            if (4 != skipped) {\n+                throw new IOException(\"Premature end of stream while reading content checksum\");\n             }\n         }\n     }\n--- a/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java\n             assertThat(ex.getMessage(), containsString(\"block checksum\"));\n         }\n     }\n+\n+    @Test\n+    public void rejectsStreamsWithoutContentChecksum() throws IOException {\n+        byte[] input = new byte[] {\n+            4, 0x22, 0x4d, 0x18, // signature\n+            0x64, // flag - Version 01, block independent, no block checksum, no content size, with content checksum\n+            0x70, // block size 4MB\n+            0x00, // checksum, revisit once it gets validated\n+            13, 0, 0, (byte) 0x80, // 13 bytes length and uncompressed bit set\n+            'H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!', // content\n+            0, 0, 0, 0, // empty block marker\n+        };\n+        try {\n+            try (InputStream a = new FramedLZ4CompressorInputStream(new ByteArrayInputStream(input))) {\n+                IOUtils.toByteArray(a);\n+                fail(\"expected exception\");\n+            }\n+        } catch (IOException ex) {\n+            assertThat(ex.getMessage(), containsString(\"content checksum\"));\n+        }\n+    }\n }", "timestamp": 1485156474, "metainfo": ""}