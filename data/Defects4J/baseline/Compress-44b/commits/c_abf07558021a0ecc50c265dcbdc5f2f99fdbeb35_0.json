{"sha": "abf07558021a0ecc50c265dcbdc5f2f99fdbeb35", "log": "COMPRESS-385, flip jar/zip back to where they belong", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n             throw new ArchiveException(\"IOException while reading signature.\");\n         }\n \n-        if (JarArchiveInputStream.matches(signature, signatureLength)) {\n+        if (ZipArchiveInputStream.matches(signature, signatureLength)) {\n+            return ZIP;\n+        } else if (JarArchiveInputStream.matches(signature, signatureLength)) {\n             return JAR;\n-        } else if (ZipArchiveInputStream.matches(signature, signatureLength)) {\n-            return ZIP;\n-        } else if (ArArchiveInputStream.matches(signature, signatureLength)) {\n+        } if (ArArchiveInputStream.matches(signature, signatureLength)) {\n             return AR;\n         } else if (CpioArchiveInputStream.matches(signature, signatureLength)) {\n             return CPIO;\n--- a/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n                 ArchiveStreamFactory.ARJ,\n                 ArchiveStreamFactory.CPIO,\n                 ArchiveStreamFactory.DUMP,\n-                ArchiveStreamFactory.JAR,\n+                //TODO-- figure out how to differentiate btwn JAR and ZIP\n+ //               ArchiveStreamFactory.JAR,\n                 ArchiveStreamFactory.TAR,\n- //TODO-- figure out how to differentiate btwn JAR and ZIP\n- //               ArchiveStreamFactory.ZIP\n+                ArchiveStreamFactory.ZIP\n         }) {\n             assertEquals(extension, detect(\"bla.\"+extension));\n         }", "timestamp": 1492519225, "metainfo": ""}