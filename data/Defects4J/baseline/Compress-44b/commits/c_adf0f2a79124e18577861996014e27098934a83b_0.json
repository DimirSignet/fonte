{"sha": "adf0f2a79124e18577861996014e27098934a83b", "log": "[COMPRESS-368]   Allow compressor extensions through a standard JRE ServiceLoader. Refactor commons code.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n import java.security.PrivilegedAction;\n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Locale;\n import java.util.Set;\n import org.apache.commons.compress.utils.IOUtils;\n import org.apache.commons.compress.utils.Lists;\n import org.apache.commons.compress.utils.ServiceLoaderIterator;\n+import org.apache.commons.compress.utils.Sets;\n \n /**\n  * <p>\n \n     @Override\n     public Set<String> getInputStreamCompressorNames() {\n-        HashSet<String> set = new HashSet<>();\n-        Collections.addAll(set, GZIP, BZIP2, XZ, LZMA, PACK200, SNAPPY_RAW, SNAPPY_FRAMED, Z, DEFLATE);\n-        return set;\n+        return Sets.newHashSet(GZIP, BZIP2, XZ, LZMA, PACK200, SNAPPY_RAW, SNAPPY_FRAMED, Z, DEFLATE);\n     }\n \n     @Override\n     public Set<String> getOutputStreamCompressorNames() {\n-        HashSet<String> set = new HashSet<>();\n-        Collections.addAll(set, GZIP, BZIP2, XZ, PACK200, DEFLATE);\n-        return set;\n+        return Sets.newHashSet(GZIP, BZIP2, XZ, PACK200, DEFLATE);\n     }\n \n     private static Iterator<CompressorStreamProvider> serviceLoaderIterator() {\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/utils/Sets.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.commons.compress.utils;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+\n+/**\n+ * Set utilities\n+ *\n+ * @since 1.13\n+ */\n+public class Sets {\n+\n+    private Sets() {\n+        // Do not instantiate\n+    }\n+\n+    /**\n+     * Creates a new HashSet filled with the given elements\n+     * \n+     * @param elements\n+     *            the elements to fill the new set\n+     * @return A new HasSet\n+     */\n+    public static <E> HashSet<E> newHashSet(@SuppressWarnings(\"unchecked\") E... elements) {\n+        final HashSet<E> set = new HashSet<>(elements.length);\n+        Collections.addAll(set, elements);\n+        return set;\n+    }\n+}", "timestamp": 1479271779, "metainfo": ""}