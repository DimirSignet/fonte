{"sha": "3856d3f0a0826be3ccc6b160e740d5c7176df743", "log": "[COMPRESS-392] Add Brotli decoder based on the Google Brotli library. Add missing '@Override' annotations", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java\n      * @throws IOException\n      * @see java.io.InputStream#available()\n      */\n+    @Override\n     public int available() throws IOException {\n         return decIS.available();\n     }\n      * @throws IOException\n      * @see org.brotli.dec.BrotliInputStream#close()\n      */\n+    @Override\n     public void close() throws IOException {\n         decIS.close();\n     }\n      * @return\n      * @see java.lang.Object#hashCode()\n      */\n+    @Override\n     public int hashCode() {\n         return decIS.hashCode();\n     }\n      * @return\n      * @see java.lang.Object#equals(java.lang.Object)\n      */\n+    @Override\n     public boolean equals(Object obj) {\n         return decIS.equals(obj);\n     }\n      * @throws IOException\n      * @see java.io.InputStream#skip(long)\n      */\n+    @Override\n     public long skip(long n) throws IOException {\n         return decIS.skip(n);\n     }\n      * @param readlimit\n      * @see java.io.InputStream#mark(int)\n      */\n+    @Override\n     public void mark(int readlimit) {\n         decIS.mark(readlimit);\n     }\n      * @return\n      * @see java.io.InputStream#markSupported()\n      */\n+    @Override\n     public boolean markSupported() {\n         return decIS.markSupported();\n     }\n      * @return\n      * @see java.lang.Object#toString()\n      */\n+    @Override\n     public String toString() {\n         return decIS.toString();\n     }\n      * @throws IOException\n      * @see java.io.InputStream#reset()\n      */\n+    @Override\n     public void reset() throws IOException {\n         decIS.reset();\n     }", "timestamp": 1493753069, "metainfo": ""}