{"sha": "47213feb954bef78d646da4f4ffe6a8156c7d3f5", "log": "cosmetics", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n         }\n         Pair splitCandidate = lastPairs.get(0);\n         int stillNeeded = MIN_OFFSET_OF_LAST_BACK_REFERENCE - toExpand;\n-        if (splitCandidate.hasBackReference()\n-            && splitCandidate.backReferenceLength() >= MIN_BACK_REFERENCE_LENGTH + stillNeeded) {\n+        int brLen = splitCandidate.hasBackReference() ? splitCandidate.backReferenceLength() : 0;\n+        if (splitCandidate.hasBackReference() && brLen >= MIN_BACK_REFERENCE_LENGTH + stillNeeded) {\n             replacement.prependLiteral(expand(toExpand + stillNeeded, stillNeeded));\n-            pairs.add(splitCandidate.splitWithNewBackReferenceLengthOf(splitCandidate.backReferenceLength()\n-                - stillNeeded));\n+            pairs.add(splitCandidate.splitWithNewBackReferenceLengthOf(brLen - stillNeeded));\n         } else {\n             if (splitCandidate.hasBackReference()) {\n-                int brLen = splitCandidate.backReferenceLength();\n                 replacement.prependLiteral(expand(toExpand + brLen, brLen));\n             }\n             splitCandidate.prependTo(replacement);\n             return brLength;\n         }\n         private void prependTo(Pair other) {\n-            Iterator<byte[]> litsBackwards = literals.descendingIterator();\n-            while (litsBackwards.hasNext()) {\n-                other.prependLiteral(litsBackwards.next());\n+            Iterator<byte[]> listBackwards = literals.descendingIterator();\n+            while (listBackwards.hasNext()) {\n+                other.prependLiteral(listBackwards.next());\n             }\n         }\n         private Pair splitWithNewBackReferenceLengthOf(int newBackReferenceLength) {", "timestamp": 1491467553, "metainfo": ""}