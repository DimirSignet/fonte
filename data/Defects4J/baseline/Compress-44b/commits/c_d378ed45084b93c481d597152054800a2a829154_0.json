{"sha": "d378ed45084b93c481d597152054800a2a829154", "log": "Statement unnecessarily nested within else clause.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n         if (ARJ.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new ArjArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new ArjArchiveInputStream(in);\n-            }\n+            }\n+            return new ArjArchiveInputStream(in);\n         }\n         if (ZIP.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new ZipArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new ZipArchiveInputStream(in);\n-            }\n+            }\n+            return new ZipArchiveInputStream(in);\n         }\n         if (TAR.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new TarArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new TarArchiveInputStream(in);\n-            }\n+            }\n+            return new TarArchiveInputStream(in);\n         }\n         if (JAR.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new JarArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new JarArchiveInputStream(in);\n-            }\n+            }\n+            return new JarArchiveInputStream(in);\n         }\n         if (CPIO.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new CpioArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new CpioArchiveInputStream(in);\n-            }\n+            }\n+            return new CpioArchiveInputStream(in);\n         }\n         if (DUMP.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new DumpArchiveInputStream(in, entryEncoding);\n-            } else {\n-                return new DumpArchiveInputStream(in);\n-            }\n+            }\n+            return new DumpArchiveInputStream(in);\n         }\n         if (SEVEN_Z.equalsIgnoreCase(archiverName)) {\n             throw new StreamingNotSupportedException(SEVEN_Z);\n         if (TAR.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new TarArchiveOutputStream(out, entryEncoding);\n-            } else {\n-                return new TarArchiveOutputStream(out);\n-            }\n+            }\n+            return new TarArchiveOutputStream(out);\n         }\n         if (JAR.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new JarArchiveOutputStream(out, entryEncoding);\n-            } else {\n-                return new JarArchiveOutputStream(out);\n-            }\n+            }\n+            return new JarArchiveOutputStream(out);\n         }\n         if (CPIO.equalsIgnoreCase(archiverName)) {\n             if (entryEncoding != null) {\n                 return new CpioArchiveOutputStream(out, entryEncoding);\n-            } else {\n-                return new CpioArchiveOutputStream(out);\n-            }\n+            }\n+            return new CpioArchiveOutputStream(out);\n         }\n         if (SEVEN_Z.equalsIgnoreCase(archiverName)) {\n             throw new StreamingNotSupportedException(SEVEN_Z);", "timestamp": 1459963299, "metainfo": ""}