{"sha": "7a5d18e7ea8c8d381ba773276ea1c4930decc6c6", "log": "use proper BZip2 signature, SANDBOX-285  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n         if (in.available() == 0) {\n             throw new IOException(\"Empty InputStream\");\n         }\n-        int magic2 = this.in.read();\n-        if (magic2 != 'h') {\n-            throw new IOException(\"Stream is not BZip2 formatted: expected 'h'\"\n-                                  + \" as first byte but got '\" + (char) magic2\n-                                  + \"'\");\n-        }\n+        checkMagicChar('B', \"first\");\n+        checkMagicChar('Z', \"second\");\n+        checkMagicChar('h', \"third\");\n \n         int blockSize = this.in.read();\n         if ((blockSize < '1') || (blockSize > '9')) {\n \n         initBlock();\n         setupBlock();\n+    }\n+\n+    private void checkMagicChar(char expected, String position)\n+        throws IOException {\n+        int magic = this.in.read();\n+        if (magic != expected) {\n+            throw new IOException(\"Stream is not BZip2 formatted: expected '\"\n+                                  + expected + \"' as \" + position\n+                                  + \" byte but got '\" + (char) magic\n+                                  + \"'\");\n+        }\n     }\n \n     private void initBlock() throws IOException {\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n         bytesOut = 0;\n         nBlocksRandomised = 0;\n \n+        bsPutUChar('B');\n+        bsPutUChar('Z');\n         /* Write `magic' bytes h indicating file-format == huffmanised,\n            followed by a digit indicating blockSize100k.\n         */", "timestamp": 1234434430, "metainfo": ""}