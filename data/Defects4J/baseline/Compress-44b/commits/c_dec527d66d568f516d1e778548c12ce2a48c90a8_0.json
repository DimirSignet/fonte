{"sha": "dec527d66d568f516d1e778548c12ce2a48c90a8", "log": "add @since markers", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n      * the byte array is supposed to be the UTF16-LE encoded\n      * representation of the password.\n      * @throws IOException if reading the archive fails\n+     * @since 1.13\n      */\n     public SevenZFile(final SeekableByteChannel channel, String filename,\n                       final byte[] password) throws IOException {\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java\n      *\n      * @param channel the channel to write to\n      * @throws IOException if the channel cannot be positioned properly\n+     * @since 1.13\n      */\n     public SevenZOutputFile(final SeekableByteChannel channel) throws IOException {\n         this.channel = channel;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n      * Extra Fields (if present) to set the file names.\n      *\n      * @throws IOException if an error occurs while reading the file.\n+     * @since 1.13\n      */\n     public ZipFile(final SeekableByteChannel channel, final String archiveName,\n                    final String encoding, final boolean useUnicodeExtraFields)", "timestamp": 1476291053, "metainfo": ""}