{"sha": "567dc4bdbee04919c5d8b06a4df0498b3f078b6c", "log": "Add javadoc for FixedLengthBlockOutputStream.  Signed-off-by: Simon Spero <sesuncedu@gmail.com>", "commit": "\n--- a/src/main/java/org/apache/commons/compress/utils/FixedLengthBlockOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/utils/FixedLengthBlockOutputStream.java\n import java.nio.channels.WritableByteChannel;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n+/**\n+ * This class supports writing to an Outputstream or WritableByteChannel in fixed length blocks.\n+ * It can be be used to support output to devices such as tape drives that require output in this\n+ * format. If the final block does not have enough content to fill an entire block, the output will\n+ * be padded to a full block size.\n+ * <p/>\n+ * This class can be used to support TAR,PAX, and CPIO blocked output to character special devices.\n+ * It is not recommended that this class be used unless writing to such devices, as the padding\n+ * serves no useful purpose in such cases.\n+ * <p/>\n+ * This class should normally wrap a FileOutputStream or associated WritableByteChannel directly.\n+ * If there is an intervening filter that modified the output, such as a CompressorOutputStream, or\n+ * performs its own buffering, such as BufferedOutputStream,  output to the device may\n+ * no longer be of the specified size.\n+ * <p/>\n+ * Any content written to this stream should be self-delimiting and should tolerate any padding\n+ * added to fill the last block\n+ * .\n+ */\n public class FixedLengthBlockOutputStream extends OutputStream implements WritableByteChannel,\n     AutoCloseable {\n \n     private final ByteBuffer buffer;\n     private final AtomicBoolean closed = new AtomicBoolean(false);\n \n+    /**\n+     * Create a fixed length block output stream with given destination stream and block size\n+     * @param os   The stream to wrap.\n+     * @param blockSize The block size to use.\n+     */\n     public FixedLengthBlockOutputStream(OutputStream os, int blockSize) {\n         if (os instanceof FileOutputStream) {\n             FileOutputStream fileOutputStream = (FileOutputStream) os;\n         }\n         this.blockSize = blockSize;\n     }\n+     /** Create a fixed length block output stream with given destination writable byte channel and block size\n+     * @param out   The writable byte channel to wrap.\n+     * @param blockSize The block size to use.\n+        */\n \n     public FixedLengthBlockOutputStream(WritableByteChannel out, int blockSize) {\n         this.out = out;", "timestamp": 1497598252, "metainfo": ""}