{"sha": "496691bfd82374f1c1bfee8719309343c2fa878d", "log": "add-some-Unit-Tests Minor variable renaming.", "commit": "\n--- a/src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java\n     @Test\n     public void testSkipReturningZero() throws IOException {\n \n-        Adler32 adler32_ = new Adler32();\n+        Adler32 adler32 = new Adler32();\n         byte[] byteArray = new byte[0];\n         ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\n-        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32_, byteArrayInputStream);\n+        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32, byteArrayInputStream);\n         long skipResult = checksumCalculatingInputStream.skip(60L);\n \n         assertEquals(0L, skipResult);\n     @Test\n     public void testSkipReturningPositive() throws IOException {\n \n-        Adler32 adler32_ = new Adler32();\n+        Adler32 adler32 = new Adler32();\n         byte[] byteArray = new byte[6];\n         ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\n-        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32_, byteArrayInputStream);\n+        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32, byteArrayInputStream);\n         long skipResult = checksumCalculatingInputStream.skip((byte)0);\n \n         assertEquals(1L, skipResult);\n     @Test\n     public void testReadTakingNoArguments() throws IOException {\n \n-        Adler32 adler32_ = new Adler32();\n+        Adler32 adler32 = new Adler32();\n         byte[] byteArray = new byte[6];\n         ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\n-        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32_, byteArrayInputStream);\n+        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32, byteArrayInputStream);\n         BufferedInputStream bufferedInputStream = new BufferedInputStream(checksumCalculatingInputStream);\n         int inputStreamReadResult = bufferedInputStream.read(byteArray, 0, 1);\n         int checkSumCalculationReadResult = checksumCalculatingInputStream.read();\n     @Test\n     public void testReadTakingByteArray() throws IOException {\n \n-        Adler32 adler32_ = new Adler32();\n+        Adler32 adler32 = new Adler32();\n         byte[] byteArray = new byte[6];\n         ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\n-        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32_, byteArrayInputStream);\n+        ChecksumCalculatingInputStream checksumCalculatingInputStream = new ChecksumCalculatingInputStream(adler32, byteArrayInputStream);\n         int readResult = checksumCalculatingInputStream.read(byteArray);\n \n         assertEquals(6, readResult);\n--- a/src/test/java/org/apache/commons/compress/utils/ChecksumVerifyingInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/ChecksumVerifyingInputStreamTest.java\n     @Test(expected = IOException.class)\n     public void testReadTakingByteArrayThrowsIOException() throws IOException {\n \n-        Adler32 adler32_ = new Adler32();\n+        Adler32 adler32 = new Adler32();\n         byte[] byteArray = new byte[3];\n         ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);\n-        ChecksumVerifyingInputStream checksumVerifyingInputStream = new ChecksumVerifyingInputStream(adler32_, byteArrayInputStream, (-1859L), (byte) (-68));\n+        ChecksumVerifyingInputStream checksumVerifyingInputStream = new ChecksumVerifyingInputStream(adler32, byteArrayInputStream, (-1859L), (byte) (-68));\n \n         checksumVerifyingInputStream.read(byteArray);\n ", "timestamp": 1497687610, "metainfo": ""}