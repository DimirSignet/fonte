{"sha": "9d548599f0c64f8aeede2742647bcc05dab43f3b", "log": "COMPRESS-263 some more tests to increas coverage  ", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStreamTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.compress.compressors.deflate;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.utils.IOUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class DeflateCompressorInputStreamTest {\n+\n+    @Test\n+    public void availableShouldReturnNonZero() throws IOException {\n+        final File input = AbstractTestCase.getFile(\"bla.tar.deflatez\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            DeflateCompressorInputStream in =\n+                new DeflateCompressorInputStream(is);\n+            Assert.assertTrue(in.available() > 0);\n+            in.close();\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    @Test\n+    public void shouldBeAbleToSkipAByte() throws IOException {\n+        final File input = AbstractTestCase.getFile(\"bla.tar.deflatez\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            DeflateCompressorInputStream in =\n+                new DeflateCompressorInputStream(is);\n+            Assert.assertEquals(1, in.skip(1));\n+            in.close();\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    @Test\n+    public void singleByteReadWorksAsExpected() throws IOException {\n+        final File input = AbstractTestCase.getFile(\"bla.tar.deflatez\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            DeflateCompressorInputStream in =\n+                new DeflateCompressorInputStream(is);\n+            // tar header starts with filename \"test1.xml\"\n+            Assert.assertEquals('t', in.read());\n+            in.close();\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+    @Test\n+    public void singleByteReadReturnsMinusOneAtEof() throws IOException {\n+        final File input = AbstractTestCase.getFile(\"bla.tar.deflatez\");\n+        final InputStream is = new FileInputStream(input);\n+        try {\n+            DeflateCompressorInputStream in =\n+                new DeflateCompressorInputStream(is);\n+            // tar header starts with filename \"test1.xml\"\n+            IOUtils.toByteArray(in);\n+            Assert.assertEquals(-1, in.read());\n+            in.close();\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStreamTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.compress.compressors.deflate;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+\n+public class DeflateCompressorOutputStreamTest {\n+\n+    @Test\n+    public void canReadASingleByteFlushAndFinish() throws IOException {\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        DeflateCompressorOutputStream cos = new DeflateCompressorOutputStream(bos);\n+        cos.write(99);\n+        cos.flush();\n+        cos.finish();\n+        Assert.assertTrue(bos.toByteArray().length > 0);\n+    }\n+\n+}\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/compressors/deflate/DeflateParametersTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.compress.compressors.deflate;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class DeflateParametersTest {\n+\n+    @Test\n+    public void shouldBeAbleToSetCompressionLevel() {\n+        DeflateParameters p = new DeflateParameters();\n+        p.setCompressionLevel(5);\n+        Assert.assertEquals(5, p.getCompressionLevel());\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void shouldNotBeAbleToSetCompressionLevelToANegativeValue() {\n+        DeflateParameters p = new DeflateParameters();\n+        p.setCompressionLevel(-2);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void shouldNotBeAbleToSetCompressionLevelToADoubleDigitValue() {\n+        DeflateParameters p = new DeflateParameters();\n+        p.setCompressionLevel(12);\n+    }\n+}", "timestamp": 1405776575, "metainfo": ""}