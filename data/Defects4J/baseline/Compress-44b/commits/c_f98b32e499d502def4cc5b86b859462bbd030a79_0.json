{"sha": "f98b32e499d502def4cc5b86b859462bbd030a79", "log": "[COMPRESS-368]   Allow compressor extensions through a standard JRE ServiceLoader. Refactor common code.", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java\n \n import java.io.InputStream;\n import java.io.OutputStream;\n-import java.util.Collections;\n-import java.util.HashSet;\n import java.util.Set;\n+\n+import org.apache.commons.compress.utils.Sets;\n \n public class TestCompressorStreamProvider implements CompressorStreamProvider {\n \n             super(message);\n         }\n     }\n-    \n+\n     @Override\n     public CompressorInputStream createCompressorInputStream(String name, InputStream in) throws CompressorException {\n         throw new InvocationConfirmationException(name);\n \n     @Override\n     public Set<String> getInputStreamCompressorNames() {\n-        HashSet<String> set = new HashSet<>();\n-        Collections.addAll(set, \"TestInput1\");\n-        return set;\n+        return Sets.newHashSet(\"TestInput1\");\n     }\n \n     @Override\n     public Set<String> getOutputStreamCompressorNames() {\n-        HashSet<String> set = new HashSet<>();\n-        Collections.addAll(set, \"TestOutput1\");\n-        return set;\n+        return Sets.newHashSet(\"TestOutput1\");\n     }\n \n }", "timestamp": 1479272386, "metainfo": ""}