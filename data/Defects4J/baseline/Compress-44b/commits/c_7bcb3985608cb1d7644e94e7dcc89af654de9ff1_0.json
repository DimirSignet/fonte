{"sha": "7bcb3985608cb1d7644e94e7dcc89af654de9ff1", "log": "COMPRESS-271 test interaction with factory for LZ4 block format", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStreamTest.java\n import java.io.IOException;\n import java.io.InputStream;\n import org.apache.commons.compress.AbstractTestCase;\n-import org.apache.commons.compress.compressors.CompressorStreamFactory;\n import org.apache.commons.compress.utils.IOUtils;\n import org.junit.Assert;\n import org.junit.Test;\n         }\n     }\n \n-    @Test\n-    public void readBlaLz4ViaFactory() throws Exception {\n-        try (InputStream a = new CompressorStreamFactory()\n-                 .createCompressorInputStream(CompressorStreamFactory.LZ4_BLOCK,\n-                                              new FileInputStream(getFile(\"bla.tar.block_lz4\")));\n-            FileInputStream e = new FileInputStream(getFile(\"bla.tar\"))) {\n-            byte[] expected = IOUtils.toByteArray(e);\n-            byte[] actual = IOUtils.toByteArray(a);\n-            Assert.assertArrayEquals(expected, actual);\n-        }\n-    }\n }\n--- a/src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n+import java.io.InputStream;\n import java.io.IOException;\n+import java.io.OutputStream;\n import java.util.Random;\n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.compressors.CompressorStreamFactory;\n import org.apache.commons.compress.compressors.lz77support.Parameters;\n import org.apache.commons.compress.utils.IOUtils;\n import org.junit.Assert;\n         roundTripTest(\"COMPRESS-256.7z\");\n     }\n \n+    @Test\n+    public void roundtripViaFactory() throws Exception {\n+        File input = getFile(\"bla.tar\");\n+        long start = System.currentTimeMillis();\n+        final File outputSz = new File(dir, input.getName() + \".block.lz4\");\n+        try (FileInputStream is = new FileInputStream(input);\n+             FileOutputStream os = new FileOutputStream(outputSz);\n+             OutputStream los = new CompressorStreamFactory()\n+                 .createCompressorOutputStream(CompressorStreamFactory.LZ4_BLOCK, os)) {\n+            IOUtils.copy(is, los);\n+        }\n+        System.err.println(input.getName() + \" written, uncompressed bytes: \" + input.length()\n+            + \", compressed bytes: \" + outputSz.length() + \" after \" + (System.currentTimeMillis() - start) + \"ms\");\n+        start = System.currentTimeMillis();\n+        try (FileInputStream is = new FileInputStream(input);\n+             InputStream sis = new CompressorStreamFactory()\n+                 .createCompressorInputStream(CompressorStreamFactory.LZ4_BLOCK, new FileInputStream(outputSz))) {\n+            byte[] expected = IOUtils.toByteArray(is);\n+            byte[] actual = IOUtils.toByteArray(sis);\n+            Assert.assertArrayEquals(expected, actual);\n+        }\n+        System.err.println(outputSz.getName() + \" read after \" + (System.currentTimeMillis() - start) + \"ms\");\n+    }\n }", "timestamp": 1485098882, "metainfo": ""}