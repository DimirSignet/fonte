{"sha": "7df097f4103f8a7ed91ffc7ab84b30bc2968cc08", "log": "Allow for unknown size Fix bug - use actual size read rather than buffer size when comparing data  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/IOMethodsTest.java\n+++ b/src/test/java/org/apache/commons/compress/IOMethodsTest.java\n         ArchiveInputStream ais1 = factory.createArchiveInputStream(archiverName, is1);\n         final ArchiveEntry nextEntry = ais1.getNextEntry();\n         assertNotNull(nextEntry);\n-        final long size = nextEntry.getSize();\n-        assertTrue(\"Size > 0: \"+size, size > 0);\n-        byte [] buff = new byte[(int)size];\n+        \n+        byte [] buff = new byte[10]; // small so multiple reads are needed;\n+        long size = nextEntry.getSize();\n+        if (size != ArchiveEntry.SIZE_UNKNOWN) {\n+            assertTrue(\"Size should be > 0, found: \"+size, size > 0);\n+        }\n         \n         InputStream is2 = new FileInputStream(file);\n         ArchiveInputStream ais2 = factory.createArchiveInputStream(archiverName, is2);\n         }\n         ais1.close();\n \n-        while(ais2.read(buff)>0){\n-            out2.write(buff);\n+        int bytes;\n+        while((bytes = ais2.read(buff)) > 0){\n+            out2.write(buff, 0, bytes);\n         }\n         ais2.close();\n         \n-        while(ais3.read(buff, 0 , buff.length)>0){\n-            out3.write(buff);\n+        while((bytes=ais3.read(buff, 0 , buff.length)) > 0){\n+            out3.write(buff, 0, bytes);\n         }\n         ais3.close();\n ", "timestamp": 1238496948, "metainfo": ""}