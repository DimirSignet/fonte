{"sha": "cc0039d23ae4ac1124fc64637872a14d5109bedf", "log": "pacify findbugs", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java\n                     }\n                     blockOffset += b.length;\n                 }\n+                if (block == null) {\n+                    // should not be possible\n+                    throw new IllegalStateException(\"failed to find a block containing offset \" + offset);\n+                }\n                 copyOffset = blockOffset + block.length - offsetRemaining;\n                 copyLen = Math.min(lengthRemaining, block.length - copyOffset);\n             } else {\n--- a/src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java\n          *\n          * <p>This matches the defaults of the lz4 command line utility.</p>\n          */\n-        public static Parameters DEFAULT = new Parameters(BlockSize.M4, true, false);\n+        public static final Parameters DEFAULT = new Parameters(BlockSize.M4, true, false);\n \n         /**\n          * Sets up custom a custom block size for the LZ4 stream but\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java\n \n             startBackReference(offset, length);\n             state = State.IN_BACK_REFERENCE;\n+            break;\n+        default:\n+            // impossible as TAG_MASK is two bits and all four possible cases have been covered\n             break;\n         }\n     }", "timestamp": 1486223641, "metainfo": ""}