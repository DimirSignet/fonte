{"sha": "a03362129bd63208aa6c0a5a47d5ddd2b0cc81f1", "log": "move NOSONAR to first line of multi-line statements", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n             if (coder.numInStreams != 1 || coder.numOutStreams != 1) {\n                 throw new IOException(\"Multi input/output stream coders are not yet supported\");\n             }\n-            inputStreamStack = Coders.addDecoder(fileName, inputStreamStack,\n-                    folder.getUnpackSizeForCoder(coder), coder, password); //NOSONAR\n+            inputStreamStack = Coders.addDecoder(fileName, inputStreamStack, //NOSONAR\n+                    folder.getUnpackSizeForCoder(coder), coder, password);\n         }\n         if (folder.hasCrc) {\n             inputStreamStack = new CRC32VerifyingInputStream(inputStreamStack,\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n \n     private void failForBigNumber(final String field, final long value, final long maxValue, final String additionalMsg) {\n         if (value < 0 || value > maxValue) {\n-            throw new RuntimeException(field + \" '\" + value\n+            throw new RuntimeException(field + \" '\" + value //NOSONAR\n                     + \"' is too big ( > \"\n-                    + maxValue + \" ).\" + additionalMsg); //NOSONAR\n+                    + maxValue + \" ).\" + additionalMsg);\n         }\n     }\n \n                 write(0); // NUL terminator\n                 closeArchiveEntry();\n             } else if (longFileMode != LONGFILE_TRUNCATE) {\n-                throw new RuntimeException(fieldName + \" '\" + name\n+                throw new RuntimeException(fieldName + \" '\" + name //NOSONAR\n                                            + \"' is too long ( > \"\n-                                           + TarConstants.NAMELEN + \" bytes)\"); //NOSONAR\n+                                           + TarConstants.NAMELEN + \" bytes)\");\n             }\n         }\n         return false;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n             mergeExtraFields(local, true);\n         } catch (final ZipException e) {\n             // actually this is not possible as of Commons Compress 1.1\n-            throw new RuntimeException(\"Error parsing extra fields for entry: \"\n-                                       + getName() + \" - \" + e.getMessage(), e); //NOSONAR\n+            throw new RuntimeException(\"Error parsing extra fields for entry: \" //NOSONAR\n+                                       + getName() + \" - \" + e.getMessage(), e);\n         }\n     }\n ", "timestamp": 1482240970, "metainfo": ""}