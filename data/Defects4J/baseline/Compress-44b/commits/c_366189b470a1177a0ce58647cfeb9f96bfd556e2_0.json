{"sha": "366189b470a1177a0ce58647cfeb9f96bfd556e2", "log": "Test cases for long links in tar files  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n         tin.close();\n     }\n \n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-237\"\n+     */\n+    public void testWriteLongLinkNameErrorMode() throws Exception {\n+        String linkname = \"01234567890123456789012345678901234567890123456789\"\n+                + \"01234567890123456789012345678901234567890123456789\"\n+                + \"01234567890123456789012345678901234567890123456789/test\";\n+        TarArchiveEntry entry = new TarArchiveEntry(\"test\", TarArchiveEntry.LF_SYMLINK);\n+        entry.setLinkName(linkname);\n+        \n+        try {\n+            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+            TarArchiveOutputStream tos = new TarArchiveOutputStream(bos, \"ASCII\");\n+            tos.setLongFileMode(TarArchiveOutputStream.LONGFILE_ERROR);\n+            tos.putArchiveEntry(entry);\n+            tos.closeArchiveEntry();\n+            tos.close();\n+            \n+            fail(\"Truncated link name didn't throw an exception\");\n+        } catch (RuntimeException e) {\n+            // expected\n+        }\n+    }\n+\n+    public void testWriteLongLinkNameTruncateMode() throws Exception {\n+        String linkname = \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789/\";\n+        TarArchiveEntry entry = new TarArchiveEntry(\"test\" , TarArchiveEntry.LF_SYMLINK);\n+        entry.setLinkName(linkname);\n+        \n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos, \"ASCII\");\n+        tos.setLongFileMode(TarArchiveOutputStream.LONGFILE_TRUNCATE);\n+        tos.putArchiveEntry(entry);\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        \n+        byte[] data = bos.toByteArray();\n+        TarArchiveInputStream tin = new TarArchiveInputStream(new ByteArrayInputStream(data));\n+        TarArchiveEntry e = tin.getNextTarEntry();\n+        assertEquals(\"Link name\", linkname.substring(0, TarConstants.NAMELEN), e.getLinkName());\n+        tin.close();\n+    }\n+\n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-237\"\n+     */\n+    public void testWriteLongLinkNameGnuMode() throws Exception {\n+        testWriteLongLinkName(TarArchiveOutputStream.LONGFILE_GNU);\n+    }\n+\n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-237\"\n+     */\n+    public void testWriteLongLinkNamePosixMode() throws Exception {\n+        testWriteLongLinkName(TarArchiveOutputStream.LONGFILE_POSIX);\n+    }\n+\n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-237\"\n+     */\n+    public void testWriteLongLinkName(int mode) throws Exception {\n+        String linkname = \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789\"\n+            + \"01234567890123456789012345678901234567890123456789/test\";\n+        TarArchiveEntry entry = new TarArchiveEntry(\"test\", TarArchiveEntry.LF_SYMLINK);\n+        entry.setLinkName(linkname);\n+        \n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos, \"ASCII\");\n+        tos.setLongFileMode(mode);\n+        tos.putArchiveEntry(entry);\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        \n+        byte[] data = bos.toByteArray();\n+        TarArchiveInputStream tin = new TarArchiveInputStream(new ByteArrayInputStream(data));\n+        TarArchiveEntry e = tin.getNextTarEntry();\n+        assertEquals(\"Entry name\", \"test\", e.getName());\n+        assertEquals(\"Link name\", linkname, e.getLinkName());\n+        assertTrue(\"The entry is not a symbolic link\", e.isSymbolicLink());\n+        tin.close();\n+    }\n+\n     public void testPadsOutputToFullBlockLength() throws Exception {\n         File f = File.createTempFile(\"commons-compress-padding\", \".tar\");\n         f.deleteOnExit();", "timestamp": 1376039077, "metainfo": ""}