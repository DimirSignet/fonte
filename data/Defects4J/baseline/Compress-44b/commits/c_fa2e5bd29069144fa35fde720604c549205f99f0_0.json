{"sha": "fa2e5bd29069144fa35fde720604c549205f99f0", "log": "implement Cloneable in GeneralPurposeBit  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java\n  * @since 1.1\n  * @NotThreadSafe\n  */\n-public final class GeneralPurposeBit {\n+public final class GeneralPurposeBit implements Cloneable {\n \n     /**\n      * Indicates that the file is encrypted.\n             && g.languageEncodingFlag == languageEncodingFlag\n             && g.dataDescriptorFlag == dataDescriptorFlag;\n     }\n+\n+    public Object clone() {\n+        try {\n+            return super.clone();\n+        } catch (CloneNotSupportedException ex) {\n+            // impossible\n+            throw new RuntimeException(\"GeneralPurposeBit is not Cloneable?\", ex);\n+        }\n+    }\n }\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBitTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBitTest.java\n         assertTrue(Arrays.equals(flags, b.encode()));\n     }\n \n-    public void testStringEncryption() {\n+    public void testStrongEncryption() {\n         byte[] flags = new byte[] {(byte) 65, (byte) 0};\n         assertTrue(GeneralPurposeBit.parse(flags, 0).usesStrongEncryption());\n         GeneralPurposeBit b = new GeneralPurposeBit();\n         assertFalse(GeneralPurposeBit.parse(flags, 0).usesStrongEncryption());\n     }\n \n-}\n+    public void testClone() {\n+        GeneralPurposeBit b = new GeneralPurposeBit();\n+        b.useStrongEncryption(true);\n+        b.useUTF8ForNames(true);\n+        assertEquals(b, b.clone());\n+        assertNotSame(b, b.clone());\n+    }\n+}", "timestamp": 1420209747, "metainfo": ""}