{"sha": "88dad2dbdc18b724863d64003622f1a0f4315148", "log": "Move System.in functionality into BitInputStream.  Optimize some more bit reading methods.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n     }\n \n     private void initBlock() throws IOException {\n+        BitInputStream bin = this.bin;\n         char magic0;\n         char magic1;\n         char magic2;\n \n         while (true) {\n             // Get the block magic bytes.\n-            magic0 = bsGetUByte();\n-            magic1 = bsGetUByte();\n-            magic2 = bsGetUByte();\n-            magic3 = bsGetUByte();\n-            magic4 = bsGetUByte();\n-            magic5 = bsGetUByte();\n+            magic0 = bsGetUByte(bin);\n+            magic1 = bsGetUByte(bin);\n+            magic2 = bsGetUByte(bin);\n+            magic3 = bsGetUByte(bin);\n+            magic4 = bsGetUByte(bin);\n+            magic5 = bsGetUByte(bin);\n \n             // If isn't end of stream magic, break out of the loop.\n             if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45\n             this.currentState = EOF;\n             throw new IOException(\"bad block header\");\n         }\n-        this.storedBlockCRC = bsGetInt();\n+        this.storedBlockCRC = bsGetInt(bin);\n         this.blockRandomised = bsR(bin, 1) == 1;\n \n         /**\n     }\n \n     private boolean complete() throws IOException {\n-        this.storedCombinedCRC = bsGetInt();\n+        this.storedCombinedCRC = bsGetInt(bin);\n         this.currentState = EOF;\n         this.data = null;\n \n         final BitInputStream inShadow = this.bin;\n         if (inShadow != null) {\n             try {\n-//                if (inShadow != System.in) {\n-//                    inShadow.close();\n-//                }\n+                inShadow.close();\n             } finally {\n                 this.data = null;\n                 this.bin = null;\n         return bsR(bin, 1) != 0;\n     }\n \n-    private char bsGetUByte() throws IOException {\n+    private static char bsGetUByte(BitInputStream bin) throws IOException {\n         return (char) bsR(bin, 8);\n     }\n \n-    private int bsGetInt() throws IOException {\n+    private static int bsGetInt(BitInputStream bin) throws IOException {\n         return (int) bsR(bin, 32);\n     }\n \n--- a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n \n     @Override\n     public void close() throws IOException {\n-        in.close();\n+        if (in != System.in) {\n+            in.close();\n+        }\n     }\n \n     /**", "timestamp": 1486231019, "metainfo": ""}