{"sha": "06fbac97cc88e382d61b4a75d8407c57770c1e93", "log": "whitespace  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java\n public interface ArchiveEntry {\n \n     /** The name of the entry in the archive. May refer to a file or directory or other item */\n-\tpublic String getName();\n-\t\n-\t/** The (uncompressed) size of the entry. May be -1 (SIZE_UNKNOWN) if the size is unknown */\n-\tpublic long getSize();\n-\t\n-\t/** Special value indicating that the size is unknown */\n-\tpublic static final long SIZE_UNKNOWN = -1;\n-\t\n-\t/** True if the entry refers to a directory */\n-\tpublic boolean isDirectory();\n+    public String getName();\n+\n+    /** The (uncompressed) size of the entry. May be -1 (SIZE_UNKNOWN) if the size is unknown */\n+    public long getSize();\n+\n+    /** Special value indicating that the size is unknown */\n+    public static final long SIZE_UNKNOWN = -1;\n+\n+    /** True if the entry refers to a directory */\n+    public boolean isDirectory();\n \n     /** The last modified date of the entry */\n     public Date getLastModifiedDate();\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n \n     /** The trailer for each entry */\n     public static final String TRAILER = \"`\\012\";\n-    \n+\n     /**\n      * SVR4/GNU adds a trailing / to names; BSD does not.\n      * They also vary in how names longer than 16 characters are represented.\n      * (Not yet supported by this implementation)\n      */\n     private final String name;\n-\tprivate final int userId;\n-\tprivate final int groupId;\n-\tprivate final int mode;\n+    private final int userId;\n+    private final int groupId;\n+    private final int mode;\n     private static final int DEFAULT_MODE = 33188; // = (octal) 0100644 \n-\tprivate final long lastModified;\n-\tprivate final long length;\n+    private final long lastModified;\n+    private final long length;\n \n-\tpublic ArArchiveEntry(String name, long length) {\n-\t\tthis(name, length, 0, 0, DEFAULT_MODE, System.currentTimeMillis());\n-\t}\n-\t\n-\tpublic ArArchiveEntry(String name, long length, int userId, int groupId, int mode, long lastModified) {\n-\t\tthis.name = name;\n-\t\tthis.length = length;\n-\t\tthis.userId = userId;\n-\t\tthis.groupId = groupId;\n-\t\tthis.mode = mode;\n-\t\tthis.lastModified = lastModified;\n-\t}\n+    public ArArchiveEntry(String name, long length) {\n+        this(name, length, 0, 0, DEFAULT_MODE, System.currentTimeMillis());\n+    }\n \n-\tpublic ArArchiveEntry(File inputFile, String entryName) {\n-\t    // TODO sort out mode\n+    public ArArchiveEntry(String name, long length, int userId, int groupId, int mode, long lastModified) {\n+        this.name = name;\n+        this.length = length;\n+        this.userId = userId;\n+        this.groupId = groupId;\n+        this.mode = mode;\n+        this.lastModified = lastModified;\n+    }\n+\n+    public ArArchiveEntry(File inputFile, String entryName) {\n+        // TODO sort out mode\n         this(entryName, inputFile.isFile() ? inputFile.length() : 0, 0, 0, 0, inputFile.lastModified());\n     }\n \n     public long getSize() {\n-\t\treturn this.getLength();\n-\t}\n-\t\n-\tpublic String getName() {\n-\t\treturn name;\n-\t}\n-\t\n-\tpublic int getUserId() {\n-\t\treturn userId;\n-\t}\n-\t\n-\tpublic int getGroupId() {\n-\t\treturn groupId;\n-\t}\n-\t\n-\tpublic int getMode() {\n-\t\treturn mode;\n-\t}\n-\t\n-\tpublic long getLastModified() {\n-\t\treturn lastModified;\n-\t}\n-\t\n+        return this.getLength();\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getUserId() {\n+        return userId;\n+    }\n+\n+    public int getGroupId() {\n+        return groupId;\n+    }\n+\n+    public int getMode() {\n+        return mode;\n+    }\n+\n+    public long getLastModified() {\n+        return lastModified;\n+    }\n+\n     /** {@inheritDocs} */\n     public Date getLastModifiedDate() {\n         return new Date(1000 * getLastModified());\n     }\n \n-\tpublic long getLength() {\n-\t\treturn length;\n-\t}\n+    public long getLength() {\n+        return length;\n+    }\n \n-\tpublic boolean isDirectory() {\n-\t\treturn false;\n-\t}\n+    public boolean isDirectory() {\n+        return false;\n+    }\n \n     /* (non-Javadoc)\n      * @see java.lang.Object#hashCode()\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java\n  * c_filesize[2]    Length of the file in bytes. This is the length of the data \n  *                  section that follows the header structure. Must be 0 for \n  *                  FIFOs and directories\n- *               \n+ *\n  * All fields are unsigned short fields with 16-bit integer values\n  * apart from c_mtime and c_filesize which are 32-bit integer values\n  * </pre>\n public class CpioArchiveEntry implements CpioConstants, ArchiveEntry {\n \n     // Header description fields - should be same throughout an archive\n-    \n+\n     /**\n      * See {@link CpioArchiveEntry#setFormat(short)} for possible values.\n      */\n     private final int alignmentBoundary;\n \n     // Header fields\n-    \n+\n     private long chksum = 0;\n \n     /** Number of bytes in the file */\n     public void setSize(final long size) {\n         if (size < 0 || size > 0xFFFFFFFFL) {\n             throw new IllegalArgumentException(\"invalid entry size <\" + size\n-                    + \">\");\n+                                               + \">\");\n         }\n         this.filesize = size;\n     }\n             break;\n         default:\n             throw new IllegalArgumentException(\n-                    \"Unknown mode. \"\n-                    + \"Full: \" + Long.toHexString(mode) \n-                    + \" Masked: \" + Long.toHexString(maskedMode));\n+                                               \"Unknown mode. \"\n+                                               + \"Full: \" + Long.toHexString(mode) \n+                                               + \" Masked: \" + Long.toHexString(maskedMode));\n         }\n \n         this.mode = mode;\n--- a/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java\n \n public final class MemoryArchiveEntry implements ArchiveEntry {\n \n-\tprivate final String name;\n-\t\n-\tpublic MemoryArchiveEntry( final String pName ) {\n-\t\tname = pName;\n-\t}\n-\t\n-\tpublic String getName() {\n-\t\treturn name;\n-\t}\n+    private final String name;\n \n-\tpublic long getSize() {\n-\t\t// TODO Auto-generated method stub\n-\t\treturn 0;\n-\t}\n+    public MemoryArchiveEntry(final String pName) {\n+        name = pName;\n+    }\n \n-\tpublic boolean isDirectory() {\n-\t\t// TODO Auto-generated method stub\n-\t\treturn false;\n-\t}\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public long getSize() {\n+        // TODO Auto-generated method stub\n+        return 0;\n+    }\n+\n+    public boolean isDirectory() {\n+        // TODO Auto-generated method stub\n+        return false;\n+    }\n \n     /** {@inheritDocs} */\n     public Date getLastModifiedDate() {", "timestamp": 1249138412, "metainfo": ""}