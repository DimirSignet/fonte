{"sha": "a0581332f963888d9425acd2d8934df9263cb177", "log": "there is one more case where the CD version of the ZIP64 extended information can be parsed without context information  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java\n         // can only hope things will get resolved by LFH data later\n         // But there are some cases that can be detected\n         // * all data is there\n+        // * length == 24 -> both sizes and offset\n         // * length % 8 == 4 -> at least we can identify the diskStart field\n         if (length >= 3 * DWORD + WORD) {\n             parseFromLocalFileData(buffer, offset, length);\n+        } else if (length == 3 * DWORD) {\n+            size = new ZipEightByteInteger(buffer, offset);\n+            offset += DWORD;\n+            compressedSize = new ZipEightByteInteger(buffer, offset);\n+            offset += DWORD;\n+            relativeHeaderOffset = new ZipEightByteInteger(buffer, offset);\n         } else if (length % DWORD == WORD) {\n             diskStart = new ZipLong(buffer, offset + length - WORD);\n         }\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java\n         assertEquals(DISK, f.getDiskStartNumber());\n     }\n \n+    public void testReadCDSizesAndOffset() throws ZipException {\n+        Zip64ExtendedInformationExtraField f =\n+            new Zip64ExtendedInformationExtraField();\n+        byte[] b = new byte[24];\n+        System.arraycopy(SIZE.getBytes(), 0, b, 0, 8);\n+        System.arraycopy(CSIZE.getBytes(), 0, b, 8, 8);\n+        System.arraycopy(OFF.getBytes(), 0, b, 16, 8);\n+        f.parseFromCentralDirectoryData(b, 0, b.length);\n+        assertEquals(SIZE, f.getSize());\n+        assertEquals(CSIZE, f.getCompressedSize());\n+        assertEquals(OFF, f.getRelativeHeaderOffset());\n+        assertNull(f.getDiskStartNumber());\n+    }\n+\n     public void testReadCDSomethingAndDisk() throws ZipException {\n         Zip64ExtendedInformationExtraField f =\n             new Zip64ExtendedInformationExtraField();", "timestamp": 1311951952, "metainfo": ""}