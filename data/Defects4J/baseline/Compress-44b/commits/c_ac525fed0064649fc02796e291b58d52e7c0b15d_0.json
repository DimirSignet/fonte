{"sha": "ac525fed0064649fc02796e291b58d52e7c0b15d", "log": "Better ivar and param name (charsetName instead of charset).  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/FallbackZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/FallbackZipEncoding.java\n  * @Immutable\n  */\n class FallbackZipEncoding implements ZipEncoding {\n-    private final String charset;\n+    private final String charsetName;\n \n     /**\n      * Construct a fallback zip encoding, which uses the platform's\n      * default charset.\n      */\n     public FallbackZipEncoding() {\n-        this.charset = null;\n+        this.charsetName = null;\n     }\n \n     /**\n      * Construct a fallback zip encoding, which uses the given charset.\n      * \n-     * @param charset The name of the charset or {@code null} for\n+     * @param charsetName The name of the charset or {@code null} for\n      *                the platform's default character set.\n      */\n-    public FallbackZipEncoding(String charset) {\n-        this.charset = charset;\n+    public FallbackZipEncoding(String charsetName) {\n+        this.charsetName = charsetName;\n     }\n \n     /**\n      * org.apache.commons.compress.archivers.zip.ZipEncoding#encode(java.lang.String)\n      */\n     public ByteBuffer encode(String name) throws IOException {\n-        if (this.charset == null) { // i.e. use default charset, see no-args constructor\n+        if (this.charsetName == null) { // i.e. use default charset, see no-args constructor\n             return ByteBuffer.wrap(name.getBytes());\n         } else {\n-            return ByteBuffer.wrap(name.getBytes(this.charset));\n+            return ByteBuffer.wrap(name.getBytes(this.charsetName));\n         }\n     }\n \n      * org.apache.commons.compress.archivers.zip.ZipEncoding#decode(byte[])\n      */\n     public String decode(byte[] data) throws IOException {\n-        if (this.charset == null) { // i.e. use default charset, see no-args constructor\n+        if (this.charsetName == null) { // i.e. use default charset, see no-args constructor\n             return new String(data);\n         } else {\n-            return new String(data,this.charset);\n+            return new String(data,this.charsetName);\n         }\n     }\n }", "timestamp": 1382369698, "metainfo": ""}