{"sha": "b1dcd19c2f87a57e4c4b96aebeb4a226f10af636", "log": "simplify code a little", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n \n             final Zip64ExtendedInformationExtraField z64 = getZip64Extra(entry.entry);\n \n-            // just a placeholder, real data will be in data\n-            // descriptor or inserted later via SeekableByteChannel\n-            ZipEightByteInteger size = ZipEightByteInteger.ZERO;\n-            ZipEightByteInteger compressedSize = ZipEightByteInteger.ZERO;\n-            if (phased){\n+            ZipEightByteInteger size, compressedSize;\n+            if (phased) {\n+                // sizes are already known\n                 size = new ZipEightByteInteger(entry.entry.getSize());\n                 compressedSize = new ZipEightByteInteger(entry.entry.getCompressedSize());\n             } else if (entry.entry.getMethod() == STORED\n                     && entry.entry.getSize() != ArchiveEntry.SIZE_UNKNOWN) {\n                 // actually, we already know the sizes\n-                size = new ZipEightByteInteger(entry.entry.getSize());\n-                compressedSize = size;\n+                compressedSize = size = new ZipEightByteInteger(entry.entry.getSize());\n+            } else {\n+                // just a placeholder, real data will be in data\n+                // descriptor or inserted later via SeekableByteChannel\n+                compressedSize = size = ZipEightByteInteger.ZERO;\n             }\n             z64.setSize(size);\n             z64.setCompressedSize(compressedSize);", "timestamp": 1495459314, "metainfo": ""}