{"sha": "037209cb3e585e59ead364b36d1f1b82a2fc8d54", "log": "COMPRESS-392 tweaks", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java\n      */\n     @Test\n     public void testBrotliDecode() throws IOException {\n-        final File input = AbstractTestCase.getFile(\"brotli.testdata.compressed\");\n-        final File expected = AbstractTestCase.getFile(\"brotli.testdata.uncompressed\");\n+        final File input = getFile(\"brotli.testdata.compressed\");\n+        final File expected = getFile(\"brotli.testdata.uncompressed\");\n         try (InputStream inputStream = new FileInputStream(input);\n                 InputStream expectedStream = new FileInputStream(expected);\n                 BrotliCompressorInputStream brotliInputStream = new BrotliCompressorInputStream(inputStream)) {\n     }\n     \n     @Test\n-    public void testCachingIsEnabledByDefaultAndXZIsPresent() {\n+    public void testCachingIsEnabledByDefaultAndBrotliIsPresent() {\n         assertEquals(BrotliUtils.CachedAvailability.CACHED_AVAILABLE, BrotliUtils.getCachedBrotliAvailability());\n         assertTrue(BrotliUtils.isBrotliCompressionAvailable());\n     }\n \n     @Test\n     public void availableShouldReturnZero() throws IOException {\n-        final File input = AbstractTestCase.getFile(\"brotli.testdata.compressed\");\n+        final File input = getFile(\"brotli.testdata.compressed\");\n         try (InputStream is = new FileInputStream(input)) {\n             final BrotliCompressorInputStream in =\n                     new BrotliCompressorInputStream(is);\n \n     @Test\n     public void shouldBeAbleToSkipAByte() throws IOException {\n-        final File input = AbstractTestCase.getFile(\"brotli.testdata.compressed\");\n+        final File input = getFile(\"brotli.testdata.compressed\");\n         try (InputStream is = new FileInputStream(input)) {\n             final BrotliCompressorInputStream in =\n                     new BrotliCompressorInputStream(is);\n \n     @Test\n     public void singleByteReadWorksAsExpected() throws IOException {\n-        final File input = AbstractTestCase.getFile(\"brotli.testdata.compressed\");\n+        final File input = getFile(\"brotli.testdata.compressed\");\n         try (InputStream is = new FileInputStream(input)) {\n             final BrotliCompressorInputStream in =\n                     new BrotliCompressorInputStream(is);\n \n     @Test\n     public void singleByteReadReturnsMinusOneAtEof() throws IOException {\n-        final File input = AbstractTestCase.getFile(\"brotli.testdata.compressed\");\n+        final File input = getFile(\"brotli.testdata.compressed\");\n         try (InputStream is = new FileInputStream(input)) {\n             final BrotliCompressorInputStream in =\n                     new BrotliCompressorInputStream(is);", "timestamp": 1493811963, "metainfo": ""}