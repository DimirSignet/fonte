{"sha": "603116e6fff5d8a3e625e0bc48cac64a9a795c11", "log": "added deleteDir method to ChangeSet to avoid confusion with delete for files fixed ClassCastException in testcases which raised due to this fix   ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/changes/Change.java\n+++ b/src/main/java/org/apache/commons/compress/changes/Change.java\n \tstatic final int TYPE_DELETE = 1;\n \tstatic final int TYPE_ADD = 2;\n \tstatic final int TYPE_MOVE = 3; // NOT USED\n+\tstatic final int TYPE_DELETE_DIR = 4;\n \t\n \t/**\n \t * Constructor. Takes the filename of the file to be deleted\n \t * from the stream as argument.\n \t * @param pFilename the filename of the file to delete\n \t */\n-\tChange(final String pFilename) {\n+\tChange(final String pFilename, int type) {\n \t\tif(pFilename == null) {\n \t\t\tthrow new NullPointerException();\n \t\t}\n-\t\ttargetFile = pFilename;\n-\t\ttype = TYPE_DELETE;\n-\t\tinput = null;\n-\t\tentry = null;\n+\t\tthis.targetFile = pFilename;\n+\t\tthis.type = type;\n+\t\tthis.input = null;\n+\t\tthis.entry = null;\n \t}\n \t\t\n \t/**\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSet.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSet.java\n      * @param pFilename\n      *            the filename of the file to delete\n      */\n-    public void delete(final String pFilename) {\n-        addDeletion(new Change(pFilename));\n+    public void delete(final String filename) {\n+        addDeletion(new Change(filename, Change.TYPE_DELETE));\n     }\n \n+    /**\n+     * Deletes the file with the filename from the archive. \n+     * \n+     * @param pFilename\n+     *            the filename of the file to delete\n+     */\n+    public void deleteDir(final String dirName) {\n+        addDeletion(new Change(dirName, Change.TYPE_DELETE_DIR));\n+    }\n+    \n     /**\n      * Adds a new archive entry to the archive.\n      * \n      *            the change which should result in a deletion\n      */\n     private void addDeletion(Change pChange) {\n-        if (Change.TYPE_DELETE != pChange.type()\n-                || pChange.targetFile() == null) {\n+        if ((Change.TYPE_DELETE != pChange.type() &&\n+            Change.TYPE_DELETE_DIR != pChange.type()) ||    \n+            pChange.targetFile() == null) {\n             return;\n         }\n         String source = pChange.targetFile();\n                         && change.getEntry() != null) {\n                     String target = change.getEntry().getName();\n \n-                    if (source.equals(target)) {\n+                    if (Change.TYPE_DELETE == pChange.type() && source.equals(target)) {\n                         it.remove();\n-                    } else if (target.matches(source + \"/.*\")) {\n+                    } else if (Change.TYPE_DELETE_DIR == pChange.type() && \n+                               target.matches(source + \"/.*\")) {\n                         it.remove();\n                     }\n                 }\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n             for (Iterator it = workingSet.iterator(); it.hasNext();) {\n                 Change change = (Change) it.next();\n \n-                if (change.type() == Change.TYPE_DELETE\n-                        && entry.getName() != null) {\n+                if (change.type() == Change.TYPE_DELETE && \n+                    entry.getName() != null) {\n                     if (entry.getName().equals(change.targetFile())) {\n                         copy = false;\n                         it.remove();\n                         break;\n-                    } else if (entry.getName().matches(\n+                    }\n+                } else if(change.type() == Change.TYPE_DELETE_DIR && \n+                          entry.getName() != null) {\n+                    if (entry.getName().matches(\n                             change.targetFile() + \"/.*\")) {\n                         copy = false;\n                         break;\n         if (!workingSet.isEmpty()) {\n             for (Iterator it = workingSet.iterator(); it.hasNext();) {\n                 Change change = (Change) it.next();\n-                if (change.type() == Change.TYPE_DELETE) {\n+                if (change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR) {\n                     String target = change.targetFile();\n \n                     if (source.equals(target)) {\n--- a/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n import org.apache.commons.compress.archivers.ArchiveInputStream;\n import org.apache.commons.compress.archivers.ArchiveOutputStream;\n import org.apache.commons.compress.archivers.ar.ArArchiveEntry;\n+import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;\n import org.apache.commons.compress.archivers.jar.JarArchiveEntry;\n import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n             ChangeSet changes = new ChangeSet();\n \n             final File file1 = getFile(\"test.txt\");\n-            ArchiveEntry entry = new ZipArchiveEntry(\"blub/test.txt\");\n+            ArchiveEntry entry = new CpioArchiveEntry(\"blub/test.txt\");\n             changes.add(entry, new FileInputStream(file1));\n             archiveList.add(\"blub/test.txt\");\n \n-            changes.delete(\"blub\");\n+            changes.deleteDir(\"blub\");\n             archiveListDelete(\"blub\");\n \n             ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n \n             ChangeSet changes = new ChangeSet();\n \n-            changes.delete(\"bla\");\n+            changes.deleteDir(\"bla\");\n \n             final File file1 = getFile(\"test.txt\");\n-            ArchiveEntry entry = new ZipArchiveEntry(\"bla/test.txt\");\n+            ArchiveEntry entry = new CpioArchiveEntry(\"bla/test.txt\");\n             changes.add(entry, new FileInputStream(file1));\n             archiveList.add(\"bla/test.txt\");\n \n-            changes.delete(\"bla\");\n+            changes.deleteDir(\"bla\");\n             archiveListDelete(\"bla\");\n \n             ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n         try {\n             ChangeSet changes = new ChangeSet();\n             changes.delete(\"test2.xml\");\n-            changes.delete(\"META-INF\");\n+            changes.deleteDir(\"META-INF\");\n             changes.delete(\".classpath\");\n             changes.delete(\".project\");\n \n         try {\n             ChangeSet changes = new ChangeSet();\n             changes.delete(\"test2.xml\");\n-            changes.delete(\"META-INF\");\n+            changes.deleteDir(\"META-INF\");\n             changes.delete(\".classpath\");\n             changes.delete(\".project\");\n ", "timestamp": 1239396311, "metainfo": ""}