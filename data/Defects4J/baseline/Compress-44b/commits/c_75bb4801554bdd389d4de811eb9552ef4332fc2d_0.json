{"sha": "75bb4801554bdd389d4de811eb9552ef4332fc2d", "log": "document how the class wants to get used", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java\n  * as the no-arg version delegates to it and the default\n  * implementation delegates to the no-arg version, leading to infinite\n  * mutual recursion and a {@code StackOverflowError} otherwise.</p>\n+ *\n+ * <p>The contract for subclasses {@code read} implementation is:</p>\n+ * <ul>\n+ *\n+ *  <li>keep track of the current state of the stream. Is it inside a\n+ *  literal block or a back-reference or in-between blocks?</li>\n+ *\n+ *  <li>Use {@link #readOneByte} to access the underlying stream\n+ *  directly.</li>\n+ *\n+ *  <li>If a new literal block starts, use {@link #startLiteral} to\n+ *  tell this class about it and read the literal data using {@link\n+ *  #readLiteral} until it returns {@code 0}. {@link\n+ *  #hasMoreDataInBlock} will return {@code false} before the next\n+ *  call to {@link #readLiteral} would return {@code 0}.</li>\n+ *\n+ *  <li>If a new back-reference starts, use {@link #startBackReference} to\n+ *  tell this class about it and read the literal data using {@link\n+ *  #readBackReference} until it returns {@code 0}. {@link\n+ *  #hasMoreDataInBlock} will return {@code false} before the next\n+ *  call to {@link #readBackReference} would return {@code 0}.</li>\n+ *\n+ *  <li>If the end of the stream has been reached, return {@code -1}\n+ *  as this class' methods will never do so themselves.</li>\n+ *\n+ * </ul>\n+ *\n+ * <p>{@link #readOneByte} and {@link #readLiteral} update the counter\n+ * for bytes read.</p>\n  *\n  * @since 1.14\n  */", "timestamp": 1486444901, "metainfo": ""}