{"sha": "fa4f029fb82a98aa074914a6c936b51914f50e04", "log": "Formatting.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n      * @since 1.1\n      */\n     public static final String AR = \"ar\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the ARJ archive format.\n      * Not supported as an output stream type.\n      * @since 1.6\n      */\n     public static final String ARJ = \"arj\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the CPIO archive format.\n      * @since 1.1\n      */\n     public static final String CPIO = \"cpio\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the Unix DUMP archive format.\n      * Not supported as an output stream type.\n      * @since 1.3\n      */\n     public static final String DUMP = \"dump\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the JAR archive format.\n      * @since 1.1\n      */\n     public static final String JAR = \"jar\";\n+    \n     /**\n      * Constant used to identify the TAR archive format.\n      * @since 1.1\n      */\n     public static final String TAR = \"tar\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the ZIP archive format.\n      * @since 1.1\n      */\n     public static final String ZIP = \"zip\";\n+    \n     /**\n      * Constant (value {@value}) used to identify the 7z archive format.\n      * @since 1.8\n             map.put(toKey(name), provider);\n         }\n     }\n+    \n     private static Iterator<ArchiveStreamProvider> serviceLoaderIterator() {\n         return new ServiceLoaderIterator<>(ArchiveStreamProvider.class);\n     }", "timestamp": 1481254904, "metainfo": ""}