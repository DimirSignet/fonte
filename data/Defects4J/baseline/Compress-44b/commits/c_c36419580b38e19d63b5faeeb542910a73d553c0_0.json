{"sha": "c36419580b38e19d63b5faeeb542910a73d553c0", "log": "Convert 'for' loops to enhanced 'for' loops.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n     public static long computeCheckSum(final byte[] buf) {\n         long sum = 0;\n \n-        for (int i = 0; i < buf.length; ++i) {\n-            sum += BYTE_MASK & buf[i];\n+        for (byte element : buf) {\n+            sum += BYTE_MASK & element;\n         }\n \n         return sum;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n \n         byte code = 127;\n \n-        for (int i = 0; i < this.highChars.length; ++i) {\n-            temp.add(new Simple8BitChar(++code, this.highChars[i]));\n+        for (char highChar : this.highChars) {\n+            temp.add(new Simple8BitChar(++code, highChar));\n         }\n \n         Collections.sort(temp);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n import java.util.Comparator;\n import java.util.Enumeration;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>\n                                             entriesWithoutUTF8Flag)\n         throws IOException {\n-        for (Iterator<ZipArchiveEntry> it = entries.iterator(); it.hasNext(); ) {\n+        for (ZipArchiveEntry zipArchiveEntry : entries) {\n             // entries is filled in populateFromCentralDirectory and\n             // never modified\n-            Entry ze = (Entry) it.next();\n+            Entry ze = (Entry) zipArchiveEntry;\n             OffsetEntry offsetEntry = ze.getOffsetEntry();\n             long offset = offsetEntry.headerOffset;\n             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);", "timestamp": 1387558336, "metainfo": ""}