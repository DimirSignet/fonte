{"sha": "c1a6e38e4401e7c693ccc14f8cb175e057d01a10", "log": "move System.in logic back to bzip2 stream class", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java\n \n import org.apache.commons.compress.compressors.CompressorInputStream;\n import org.apache.commons.compress.utils.BitInputStream;\n+import org.apache.commons.compress.utils.CloseShieldFilterInputStream;\n \n /**\n  * An input stream that decompresses from the BZip2 format to be read as any other stream.\n      *             if {@code in == null}, the stream content is malformed, or an I/O error occurs.\n      */\n     public BZip2CompressorInputStream(final InputStream in, final boolean decompressConcatenated) throws IOException {\n-        this.bin = new BitInputStream(in, ByteOrder.BIG_ENDIAN);\n+        this.bin = new BitInputStream(in == System.in ? new CloseShieldFilterInputStream(in) : in,\n+            ByteOrder.BIG_ENDIAN);\n         this.decompressConcatenated = decompressConcatenated;\n \n         init(true);\n--- a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n \n     @Override\n     public void close() throws IOException {\n-        if (in != System.in) {\n-            in.close();\n-        }\n+        in.close();\n     }\n \n     /**\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/utils/CloseShieldFilterInputStream.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.commons.compress.utils;\n+\n+import java.io.FilterInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Re-implements {@link FilterInputStream#close()} to do nothing.\n+ * @since 1.14\n+ */\n+public class CloseShieldFilterInputStream extends FilterInputStream {\n+\n+    public CloseShieldFilterInputStream(InputStream in) {\n+        super(in);\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        // NO IMPLEMENTATION.\n+    }\n+\n+}", "timestamp": 1486234080, "metainfo": ""}