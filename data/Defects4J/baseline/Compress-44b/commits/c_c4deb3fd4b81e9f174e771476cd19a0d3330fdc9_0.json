{"sha": "c4deb3fd4b81e9f174e771476cd19a0d3330fdc9", "log": "testcase demonstrating zip64 EOCDL corruption  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java\n         throws Throwable {\n         read5GBOfZerosUsingZipFileImpl(get5GBZerosFileGeneratedByPKZip(),\n                                        \"zip6/5GB_of_Zeros\");\n+    }\n+\n+    @Test public void writeAndRead5GBOfZerosUsingZipFile() throws Throwable {\n+        File f = null;\n+        try {\n+            f = write5GBZerosFile(\"writeAndRead5GBOfZerosUsingZipFile\");\n+            read5GBOfZerosUsingZipFileImpl(f, \"5GB_of_Zeros\");\n+        } finally {\n+            if (f != null) {\n+                AbstractTestCase.tryHardToDelete(f);\n+            }\n+        }\n+    }\n+\n+    private static File write5GBZerosFile(String testName) throws Throwable {\n+        File f = getTempFile(testName);\n+        ZipArchiveOutputStream zos = new ZipArchiveOutputStream(f);\n+        try {\n+            zos.setUseZip64(Zip64Mode.Always);\n+            byte[] buf = new byte[ONE_MILLION];\n+            ZipArchiveEntry zae = new ZipArchiveEntry(\"5GB_of_Zeros\");\n+            zae.setSize(FIVE_BILLION);\n+            zae.setMethod(ZipEntry.DEFLATED);\n+            zae.setCrc(0x8a408f16L);\n+            zos.putArchiveEntry(zae);\n+            for (int j = 0; j < FIVE_BILLION / 1000 / 1000; j++) {\n+                zos.write(buf);\n+            }\n+            zos.closeArchiveEntry();\n+            zos.close();\n+        } catch (IOException ex) {\n+            System.err.println(\"Failed to write archive because of: \"\n+                               + ex.getMessage()\n+                               + \" - likely not enough disk space.\");\n+            assumeTrue(false);\n+        } finally {\n+            zos.destroy();\n+        }\n+        return f;\n     }\n \n     @Test public void read100KFilesUsingZipFile() throws Throwable {", "timestamp": 1420367681, "metainfo": ""}