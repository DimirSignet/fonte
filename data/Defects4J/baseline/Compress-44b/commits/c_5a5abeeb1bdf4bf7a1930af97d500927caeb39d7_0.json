{"sha": "5a5abeeb1bdf4bf7a1930af97d500927caeb39d7", "log": "COMPRESS-358 make block size configurable in framed snappy input", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n \n     private int uncompressedBytesRemaining;\n     private long expectedChecksum = -1;\n+    private final int blockSize;\n     private final PureJavaCrc32C checksum = new PureJavaCrc32C();\n \n     /**\n     public FramedSnappyCompressorInputStream(final InputStream in,\n                                              final FramedSnappyDialect dialect)\n         throws IOException {\n+        this(in, SnappyCompressorInputStream.DEFAULT_BLOCK_SIZE, dialect);\n+    }\n+\n+    /**\n+     * Constructs a new input stream that decompresses snappy-framed-compressed data\n+     * from the specified input stream.\n+     * @param in  the InputStream from which to read the compressed data\n+     * @param blockSize the block size to use for the compressed stream\n+     * @param dialect the dialect used by the compressed stream\n+     * @throws IOException if reading fails\n+     * @since 1.14\n+     */\n+    public FramedSnappyCompressorInputStream(final InputStream in,\n+                                             final int blockSize,\n+                                             final FramedSnappyDialect dialect)\n+        throws IOException {\n         this.in = new PushbackInputStream(in, 1);\n+        this.blockSize = blockSize;\n         this.dialect = dialect;\n         if (dialect.hasStreamIdentifier()) {\n             readStreamIdentifier();\n                 expectedChecksum = -1;\n             }\n             currentCompressedChunk =\n-                new SnappyCompressorInputStream(new BoundedInputStream(in, size));\n+                new SnappyCompressorInputStream(new BoundedInputStream(in, size), blockSize);\n             // constructor reads uncompressed size\n             count(currentCompressedChunk.getBytesRead());\n         } else {", "timestamp": 1484067095, "metainfo": ""}