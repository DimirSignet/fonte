{"sha": "ac6b5f3a7e1dc36c9ec4f2d34a20f311ee760900", "log": "Refactor magic string.", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java\n \n public class ArchiveStreamFactoryTest {\n \n+    private static final String UNKNOWN = \"??\";\n+\n     /**\n      * see https://issues.apache.org/jira/browse/COMPRESS-171\n      */\n \n     static {\n         String dflt;\n-        dflt = \"??\";\n+        dflt = UNKNOWN;\n         try {\n             dflt = getField(new ArjArchiveInputStream(new FileInputStream(getFile(\"bla.arj\"))), \"charsetName\");\n         } catch (ArchiveException e) {\n             e.printStackTrace();\n         }\n         ARJ_DEFAULT = dflt;\n-        dflt = \"??\";\n+        dflt = UNKNOWN;\n         try {\n             dflt = getField(new DumpArchiveInputStream(new FileInputStream(getFile(\"bla.dump\"))), \"encoding\");\n         } catch (ArchiveException e) {\n                     fld = cls.getSuperclass().getDeclaredField(name);\n                 } catch (NoSuchFieldException e) {\n                     System.out.println(\"Cannot find \" + name + \" in class \" + instance.getClass().getSimpleName());\n-                    return \"??\";\n+                    return UNKNOWN;\n                 }                \n         }\n         boolean isAccessible = fld.isAccessible();\n                 return (String) object;\n             }\n             System.out.println(\"Wrong type: \" + object.getClass().getCanonicalName() + \" for \" + name + \" in class \" + instance.getClass().getSimpleName());\n-            return \"??\";\n+            return UNKNOWN;\n         } catch (Exception e) {\n             e.printStackTrace();\n-            return \"??\";\n+            return UNKNOWN;\n         } finally {\n             if (!isAccessible) {\n                 fld.setAccessible(isAccessible);", "timestamp": 1460217327, "metainfo": ""}