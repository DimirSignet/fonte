{"sha": "0eef29b38c209b7af55d9d867adb280ef079a15d", "log": "byte[] output version", "commit": "\n--- a/src/main/java/org/apache/commons/compress/utils/ByteUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/ByteUtils.java\n     }\n \n     /**\n+     * Inserts the given value into the array as a little endian\n+     * sequence of the given length starting at the given offset.\n+     * @param array the array to write into\n+     * @param value the value to insert\n+     * @param offset the offset into the array that receives the first byte\n+     * @param length the number of bytes to use to represent the value\n+     */\n+    public static void toLittleEndian(final byte[] b, final long value, final int off, final int length) {\n+        long num = value;\n+        for (int i = 0; i < length; i++) {\n+            b[off + i] = (byte) (num & 0xff);\n+            num >>= 8;\n+        }\n+    }\n+\n+    /**\n      * Writes the given value to the given stream as a little endian\n      * array of the given length.\n      * @param out the stream to write to\n--- a/src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java\n+++ b/src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java\n import java.io.DataOutput;\n import java.io.DataOutputStream;\n import java.io.IOException;\n+import java.util.Arrays;\n \n import org.junit.Test;\n \n         assertArrayEquals(new byte[] { 2, 3, 4, (byte) 128 }, bos.toByteArray());\n     }\n \n+\n+    @Test\n+    public void toLittleEndianToByteArray() throws IOException {\n+        byte[] b = new byte[4];\n+        toLittleEndian(b, 2 + 3 * 256 + 4 * 256 * 256, 1, 3);\n+        assertArrayEquals(new byte[] { 2, 3, 4 }, Arrays.copyOfRange(b, 1, 4));\n+    }\n+\n+    @Test\n+    public void toLittleEndianToByteArrayUnsignedInt32() throws IOException {\n+        byte[] b = new byte[4];\n+        toLittleEndian(b, 2 + 3 * 256 + 4 * 256 * 256 + 128l * 256 * 256 * 256, 0, 4);\n+        assertArrayEquals(new byte[] { 2, 3, 4, (byte) 128 }, b);\n+    }\n }", "timestamp": 1485262003, "metainfo": ""}