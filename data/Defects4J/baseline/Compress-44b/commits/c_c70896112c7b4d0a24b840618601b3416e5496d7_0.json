{"sha": "c70896112c7b4d0a24b840618601b3416e5496d7", "log": "verify TarArchiveOutputStream is a \"well-behaving citizen\" and pads the output  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n import org.apache.commons.compress.archivers.ArchiveOutputStream;\n import org.apache.commons.compress.archivers.ArchiveStreamFactory;\n import org.apache.commons.compress.utils.CharsetNames;\n+import org.apache.commons.compress.utils.IOUtils;\n \n public class TarArchiveOutputStreamTest extends AbstractTestCase {\n \n         tin.close();\n     }\n \n+    public void testPadsOutputToFullBlockLength() throws Exception {\n+        File f = File.createTempFile(\"commons-compress-padding\", \".tar\");\n+        f.deleteOnExit();\n+        FileOutputStream fos = new FileOutputStream(f);\n+        TarArchiveOutputStream tos = new TarArchiveOutputStream(fos);\n+        File file1 = getFile(\"test1.xml\");\n+        TarArchiveEntry sEntry = new TarArchiveEntry(file1);\n+        tos.putArchiveEntry(sEntry);\n+        FileInputStream in = new FileInputStream(file1);\n+        IOUtils.copy(in, tos);\n+        in.close();\n+        tos.closeArchiveEntry();\n+        tos.close();\n+        // test1.xml is small enough to fit into the default blockv size\n+        assertEquals(TarBuffer.DEFAULT_BLKSIZE, f.length());\n+    }\n+\n }", "timestamp": 1375972386, "metainfo": ""}