{"sha": "fa526cb413683d47f8a54cb905dc8ff911e41e57", "log": "Empty Zip files start with End of Central directory  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n         throw new IllegalArgumentException();\n     }\n \n+    /*\n+     *  This test assumes that the zip file does not have any additional leading content,\n+     *  which is something that is allowed by the specification (e.g. self-extracting zips)\n+     */\n     public static boolean matches(byte[] signature, int length) {\n         if (length < ZipArchiveOutputStream.LFH_SIG.length) {\n             return false;\n         }\n \n-        for (int i = 0; i < ZipArchiveOutputStream.LFH_SIG.length; i++) {\n-            if (signature[i] != ZipArchiveOutputStream.LFH_SIG[i]) {\n+        return checksig(signature, ZipArchiveOutputStream.LFH_SIG) // normal file\n+            || checksig(signature, ZipArchiveOutputStream.EOCD_SIG); // empty zip\n+    }\n+\n+    private static boolean checksig(byte[] signature, byte[] expected){\n+        for (int i = 0; i < expected.length; i++) {\n+            if (signature[i] != expected[i]) {\n                 return false;\n             }\n         }\n-\n-        return true;\n+        return true;        \n     }\n \n     private void closeEntry() throws IOException {", "timestamp": 1238373545, "metainfo": ""}