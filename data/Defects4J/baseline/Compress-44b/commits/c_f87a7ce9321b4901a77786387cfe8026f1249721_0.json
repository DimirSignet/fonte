{"sha": "f87a7ce9321b4901a77786387cfe8026f1249721", "log": "Revert \"fix COMPRESS-357 with a volatile flag\"  This reverts commit 8769bb6980ea9d46f8fbec1fa1075128d6f61936.", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n     private BlockSort blockSorter;\n \n     private OutputStream out;\n-    private volatile boolean closed;\n \n     /**\n      * Chooses a blocksize based on the given length of the data to compress.\n \n     @Override\n     public void write(final int b) throws IOException {\n-        if (!closed) {\n+        if (this.out != null) {\n             write0(b);\n         } else {\n             throw new IOException(\"closed\");\n     }\n \n \n-    public void finish() throws IOException {\n-        if (!closed) {\n+    public synchronized void finish() throws IOException {\n+        if (out != null) {\n             try {\n                 if (this.runLength > 0) {\n                     writeRun();\n                 endBlock();\n                 endCompression();\n             } finally {\n-                closed = true;\n                 this.out = null;\n                 this.data = null;\n                 this.blockSorter = null;\n \n     @Override\n     public void close() throws IOException {\n-        if (!closed) {\n+        if (out != null) {\n             final OutputStream outShadow = this.out;\n             finish();\n             outShadow.close();\n                                                 + len + \") > buf.length(\"\n                                                 + buf.length + \").\");\n         }\n-        if (closed) {\n+        if (this.out == null) {\n             throw new IOException(\"stream closed\");\n         }\n ", "timestamp": 1465658845, "metainfo": ""}