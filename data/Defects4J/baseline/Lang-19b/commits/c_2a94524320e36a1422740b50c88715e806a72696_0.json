{"sha": "2a94524320e36a1422740b50c88715e806a72696", "log": "Making private fields final per Sebb's patch to LANG-540  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/translate/LookupTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/LookupTranslator.java\n // TODO: Replace with a RegexLookup? Performance test.\n public class LookupTranslator extends CharSequenceTranslator {\n \n-    private HashMap<CharSequence, CharSequence> lookupMap;\n-    private int shortest = Integer.MAX_VALUE;\n-    private int longest = 0;\n+    private final HashMap<CharSequence, CharSequence> lookupMap;\n+    private final int shortest;\n+    private final int longest;\n \n     /**\n      * Define the lookup table to be used in translation\n      */\n     public LookupTranslator(CharSequence[][] lookup) {\n         lookupMap = new HashMap<CharSequence, CharSequence>();\n+        int _shortest = Integer.MAX_VALUE;\n+        int _longest = 0;\n         for(CharSequence[] seq : lookup) {\n             this.lookupMap.put(seq[0], seq[1]);\n             int sz = seq[0].length();\n-            if(sz < shortest) {\n-                shortest = sz;\n+            if(sz < _shortest) {\n+                _shortest = sz;\n             }\n-            if(sz > longest) {\n-                longest = sz;\n+            if(sz > _longest) {\n+                _longest = sz;\n             }\n         }\n+        shortest = _shortest;\n+        longest = _longest;\n     }\n \n     /**", "timestamp": 1256280285, "metainfo": ""}