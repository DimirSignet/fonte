{"sha": "32bc9d906dd6fa0cfc369846c2bdfcaca3814188", "log": "Javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/time/DateFormatUtils.java\n /**\n  * <p>Date and time formatting utilities and constants.</p>\n  *\n- * <p>Formatting is performed using the\n+ * <p>Formatting is performed using the thread-safe\n  * {@link org.apache.commons.lang3.time.FastDateFormat} class.</p>\n  *\n  * @author Apache Software Foundation\n      * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>\n      * \n      * @param millis  the date to format expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @return the formatted date\n      */\n     public static String formatUTC(long millis, String pattern) {\n     /**\n      * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null\n      * @return the formatted date\n      */\n     public static String formatUTC(Date date, String pattern) {\n      * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>\n      * \n      * @param millis  the date to format expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n      */\n     /**\n      * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n      */\n      * <p>Formats a date/time into a specific pattern.</p>\n      * \n      * @param millis  the date to format expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @return the formatted date\n      */\n     public static String format(long millis, String pattern) {\n     /**\n      * <p>Formats a date/time into a specific pattern.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null\n      * @return the formatted date\n      */\n     public static String format(Date date, String pattern) {\n     /**\n      * <p>Formats a calendar into a specific pattern.</p>\n      * \n-     * @param calendar  the calendar to format\n-     * @param pattern  the pattern to use to format the calendar\n+     * @param calendar  the calendar to format, not null\n+     * @param pattern  the pattern to use to format the calendar, not null\n      * @return the formatted calendar\n      * @see FastDateFormat#format(Calendar)\n      * @since 2.4\n      * <p>Formats a date/time into a specific pattern in a time zone.</p>\n      * \n      * @param millis  the time expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @return the formatted date\n      */\n     /**\n      * <p>Formats a date/time into a specific pattern in a time zone.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @return the formatted date\n      */\n     /**\n      * <p>Formats a calendar into a specific pattern in a time zone.</p>\n      * \n-     * @param calendar  the calendar to format\n-     * @param pattern  the pattern to use to format the calendar\n+     * @param calendar  the calendar to format, not null\n+     * @param pattern  the pattern to use to format the calendar, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @return the formatted calendar\n      * @see FastDateFormat#format(Calendar)\n      * <p>Formats a date/time into a specific pattern in a locale.</p>\n      * \n      * @param millis  the date to format expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n      */\n     /**\n      * <p>Formats a date/time into a specific pattern in a locale.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n      */\n     /**\n      * <p>Formats a calendar into a specific pattern in a locale.</p>\n      * \n-     * @param calendar  the calendar to format\n-     * @param pattern  the pattern to use to format the calendar\n+     * @param calendar  the calendar to format, not null\n+     * @param pattern  the pattern to use to format the calendar, not null\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted calendar\n      * @see FastDateFormat#format(Calendar)\n      * <p>Formats a date/time into a specific pattern in a time zone  and locale.</p>\n      * \n      * @param millis  the date to format expressed in milliseconds\n-     * @param pattern  the pattern to use to format the date\n+     * @param pattern  the pattern to use to format the date, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n     /**\n      * <p>Formats a date/time into a specific pattern in a time zone  and locale.</p>\n      * \n-     * @param date  the date to format\n-     * @param pattern  the pattern to use to format the date\n+     * @param date  the date to format, not null\n+     * @param pattern  the pattern to use to format the date, not null, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted date\n     /**\n      * <p>Formats a calendar into a specific pattern in a time zone  and locale.</p>\n      * \n-     * @param calendar  the calendar to format\n-     * @param pattern  the pattern to use to format the calendar\n+     * @param calendar  the calendar to format, not null\n+     * @param pattern  the pattern to use to format the calendar, not null\n      * @param timeZone  the time zone  to use, may be <code>null</code>\n      * @param locale  the locale to use, may be <code>null</code>\n      * @return the formatted calendar\n--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java\n      * <i>H</i>:<i>m</i>:<i>s</i>.<i>S</i>.</p>\n      * \n      * @param durationMillis  the duration to format\n-     * @return the time as a String\n+     * @return the formatted duration, not null\n      */\n     public static String formatDurationHMS(long durationMillis) {\n         return formatDuration(durationMillis, \"H:mm:ss.SSS\");\n      * ISO format pattern, such as P7D6TH5M4.321S.</p>\n      * \n      * @param durationMillis  the duration to format\n-     * @return the time as a String\n+     * @return the formatted duration, not null\n      */\n     public static String formatDurationISO(long durationMillis) {\n         return formatDuration(durationMillis, ISO_EXTENDED_FORMAT_PATTERN, false);\n      * format pattern. Months and larger are not used.</p>\n      * \n      * @param durationMillis  the duration to format\n-     * @param format  the way in which to format the duration\n-     * @return the time as a String\n+     * @param format  the way in which to format the duration, not null\n+     * @return the formatted duration, not null\n      */\n     public static String formatDuration(long durationMillis, String format) {\n         return formatDuration(durationMillis, format, true);\n      * format pattern. Months and larger are not used.</p>\n      * \n      * @param durationMillis  the duration to format\n-     * @param format  the way in which to format the duration\n+     * @param format  the way in which to format the duration, not null\n      * @param padWithZeros  whether to pad the left hand side of numbers with 0's\n-     * @return the time as a String\n+     * @return the formatted duration, not null\n      */\n     public static String formatDuration(long durationMillis, String format, boolean padWithZeros) {\n \n      * @param durationMillis  the elapsed time to report in milliseconds\n      * @param suppressLeadingZeroElements  suppresses leading 0 elements\n      * @param suppressTrailingZeroElements  suppresses trailing 0 elements\n-     * @return the formatted text in days/hours/minutes/seconds\n+     * @return the formatted text in days/hours/minutes/seconds, not null\n      */\n     public static String formatDurationWords(\n         long durationMillis,\n      * \n      * @param startMillis  the start of the duration to format\n      * @param endMillis  the end of the duration to format\n-     * @return the time as a String\n+     * @return the formatted duration, not null\n      */\n     public static String formatPeriodISO(long startMillis, long endMillis) {\n         return formatPeriod(startMillis, endMillis, ISO_EXTENDED_FORMAT_PATTERN, false, TimeZone.getDefault());\n      * \n      * @param startMillis  the start of the duration\n      * @param endMillis  the end of the duration\n-     * @param format  the way in which to format the duration\n-     * @return the time as a String\n+     * @param format  the way in which to format the duration, not null\n+     * @return the formatted duration, not null\n      */\n     public static String formatPeriod(long startMillis, long endMillis, String format) {\n         return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());\n      * \n      * @param startMillis  the start of the duration\n      * @param endMillis  the end of the duration\n-     * @param format  the way in which to format the duration\n-     * @param padWithZeros whether to pad the left hand side of numbers with 0's\n-     * @param timezone the millis are defined in\n-     * @return the time as a String\n+     * @param format  the way in which to format the duration, not null\n+     * @param padWithZeros  whether to pad the left hand side of numbers with 0's\n+     * @param timezone  the millis are defined in\n+     * @return the formatted duration, not null\n      */\n     public static String formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros, \n             TimeZone timezone) {\n     /**\n      * Parses a classic date format string into Tokens\n      *\n-     * @param format to parse\n+     * @param format  the format to parse, not null\n      * @return array of Token[]\n      */\n     static Token[] lexx(String format) {\n         return list.toArray( new Token[list.size()] );\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * Element that is parsed from the format pattern.\n      */\n         }\n \n         /**\n-         * Returns a hashcode for the token equal to the \n-         * hashcode for the token's value. Thus 'TT' and 'TTTT' \n-         * will have the same hashcode. \n+         * Returns a hash code for the token equal to the \n+         * hash code for the token's value. Thus 'TT' and 'TTTT' \n+         * will have the same hash code. \n          *\n-         * @return The hashcode for the token\n+         * @return The hash code for the token\n          */\n         @Override\n         public int hashCode() {", "timestamp": 1299246101, "metainfo": ""}