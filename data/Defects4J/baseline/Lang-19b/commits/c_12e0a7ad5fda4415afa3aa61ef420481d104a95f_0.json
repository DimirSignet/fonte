{"sha": "12e0a7ad5fda4415afa3aa61ef420481d104a95f", "log": "ObjectUtils.max(null,null) requires casts to agree with signature; likewise min Also use actual Date objects rather than generic Comparable.  ", "commit": "\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Modifier;\n import java.util.Calendar;\n+import java.util.Date;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n     \n     public void testMax() {\n         Calendar calendar = Calendar.getInstance();\n-        Comparable nonNullComparable1 = calendar.getTime();\n-        Comparable nonNullComparable2 = calendar.getTime();\n+        Date nonNullComparable1 = calendar.getTime();\n+        Date nonNullComparable2 = calendar.getTime();\n         \n         calendar.set( Calendar.YEAR, calendar.get( Calendar.YEAR ) -1 );\n-        Comparable minComparable = calendar.getTime();\n+        Date minComparable = calendar.getTime();\n         \n         assertNotSame( nonNullComparable1, nonNullComparable2 );\n         \n         assertSame( nonNullComparable1, ObjectUtils.max( nonNullComparable1, minComparable ) );\n         assertSame( nonNullComparable1, ObjectUtils.max( minComparable, nonNullComparable1 ) );\n \n-        assertNull( ObjectUtils.max(null, null) );\n+        assertNull( ObjectUtils.max((String)null, (String)null) );\n     }\n     \n     public void testMin() {\n         Calendar calendar = Calendar.getInstance();\n-        Comparable nonNullComparable1 = calendar.getTime();\n-        Comparable nonNullComparable2 = calendar.getTime();\n+        Date nonNullComparable1 = calendar.getTime();\n+        Date nonNullComparable2 = calendar.getTime();\n         \n         calendar.set( Calendar.YEAR, calendar.get( Calendar.YEAR ) -1 );\n-        Comparable minComparable = calendar.getTime();\n+        Date minComparable = calendar.getTime();\n         \n         assertNotSame( nonNullComparable1, nonNullComparable2 );\n         \n         assertSame( minComparable, ObjectUtils.min( nonNullComparable1, minComparable ) );\n         assertSame( minComparable, ObjectUtils.min( minComparable, nonNullComparable1 ) );\n \n-        assertNull( ObjectUtils.min(null, null) );\n+        assertNull( ObjectUtils.min((String)null, (String)null) );\n     }\n }", "timestamp": 1237594663, "metainfo": ""}