{"sha": "a1344d49a2e3dd74136fa119e3dde9a0fe7494aa", "log": "Fix internal raw types  ", "commit": "\n--- a/src/java/org/apache/commons/lang/reflect/ConstructorUtils.java\n+++ b/src/java/org/apache/commons/lang/reflect/ConstructorUtils.java\n         if (args == null) {\n             args = ArrayUtils.EMPTY_OBJECT_ARRAY;\n         }\n-        Constructor ctor = getMatchingAccessibleConstructor(cls, parameterTypes);\n+        Constructor<?> ctor = getMatchingAccessibleConstructor(cls, parameterTypes);\n         if (null == ctor) {\n             throw new NoSuchMethodException(\n                     \"No such accessible constructor on object: \"\n         if (parameterTypes == null) {\n             parameterTypes = ArrayUtils.EMPTY_CLASS_ARRAY;\n         }\n-        Constructor ctor = getAccessibleConstructor(cls, parameterTypes);\n+        Constructor<?> ctor = getAccessibleConstructor(cls, parameterTypes);\n         if (null == ctor) {\n             throw new NoSuchMethodException(\n                     \"No such accessible constructor on object: \"\n         // see if we can find the constructor directly\n         // most of the time this works and it's much faster\n         try {\n-            Constructor ctor = cls.getConstructor(parameterTypes);\n+            Constructor<?> ctor = cls.getConstructor(parameterTypes);\n             MemberUtils.setAccessibleWorkaround(ctor);\n             return ctor;\n         } catch (NoSuchMethodException e) { /* SWALLOW */\n         }\n-        Constructor result = null;\n+        Constructor<?> result = null;\n         // search through all constructors\n-        Constructor[] ctors = cls.getConstructors();\n+        Constructor<?>[] ctors = cls.getConstructors();\n         for (int i = 0; i < ctors.length; i++) {\n             // compare parameters\n             if (ClassUtils.isAssignable(parameterTypes, ctors[i]\n                     .getParameterTypes(), true)) {\n                 // get accessible version of method\n-                Constructor ctor = getAccessibleConstructor(ctors[i]);\n+                Constructor<?> ctor = getAccessibleConstructor(ctors[i]);\n                 if (ctor != null) {\n                     MemberUtils.setAccessibleWorkaround(ctor);\n                     if (result == null", "timestamp": 1256391791, "metainfo": ""}