{"sha": "ca2350dfe78b865f1d2d705aa57b418cbd4d22d6", "log": "Improve performance (by ~10% on Sun Java 1.3.1_08) for the method escapeEntities(String str, Entities entities) by using the existing StringBuffer instead of String + to the same buffer.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n  * @author <a href=\"sean@boohai.com\">Sean Brown</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: StringEscapeUtils.java,v 1.10 2003/05/16 19:00:07 ggregory Exp $\n+ * @version $Id: StringEscapeUtils.java,v 1.11 2003/05/18 00:10:38 ggregory Exp $\n  */\n public class StringEscapeUtils {\n \n             if (entity == null) {\n                 if (((int) ch) > 0x7F) {\n                     int intValue = ((int) ch);\n-                    buf.append(\"&#\" + intValue + \";\");\n+                    buf.append(\"&#\");\n+                    buf.append(intValue);\n+                    buf.append(';');\n                 } else {\n                     buf.append(ch);\n                 }\n             } else {\n-                buf.append(\"&\" + entity + \";\");\n+                buf.append('&');\n+                buf.append(entity);\n+                buf.append(';');\n             }\n         }\n         return buf.toString();\n                     iso = entities.entityValue(entity);\n                 }\n                 if (iso == null) {\n-                    buf.append(\"&\" + entity + \";\");\n+                    buf.append('&');\n+                    buf.append(entity);\n+                    buf.append(';');\n                 } else {\n                     buf.append((char) (iso.intValue()));\n                 }", "timestamp": 1053216638, "metainfo": ""}