{"sha": "c4a72f39601666367cef80acaf30f524074a57c3", "log": "Removing tabs  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n      * @since 3.0\n      */\n     public StrBuilder appendSeparator(String standard, String defaultIfEmpty) {\n-    \tString str = isEmpty() ? defaultIfEmpty : standard;\n+        String str = isEmpty() ? defaultIfEmpty : standard;\n         if (str != null) {\n             append(str);\n         }\n             append(standard);\n         }\n         else {\n-        \tappend(defaultIfEmpty);\n+            append(defaultIfEmpty);\n         }\n         return this;\n     }\n--- a/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n     \n     //-----------------------------------------------------------------------\n     public void testAppendSeparator_String_String() {\n-    \tStrBuilder sb = new StrBuilder();\n-    \tfinal String startSeparator = \"order by \";\n-    \tfinal String standardSeparator = \",\";\n-    \tfinal String foo = \"foo\";\n-    \tsb.appendSeparator(null, null);\n-    \tassertEquals(\"\", sb.toString());\n-    \tsb.appendSeparator(standardSeparator, null);\n-    \tassertEquals(\"\", sb.toString());\n+        StrBuilder sb = new StrBuilder();\n+        final String startSeparator = \"order by \";\n+        final String standardSeparator = \",\";\n+        final String foo = \"foo\";\n+        sb.appendSeparator(null, null);\n+        assertEquals(\"\", sb.toString());\n+        sb.appendSeparator(standardSeparator, null);\n+        assertEquals(\"\", sb.toString());\n         sb.appendSeparator(standardSeparator, startSeparator); \n         assertEquals(startSeparator, sb.toString());\n         sb.appendSeparator(null, null); \n         assertEquals(\"foo,\", sb.toString());\n     }\n     public void testAppendSeparator_char_char() {\n-    \tStrBuilder sb = new StrBuilder();\n-    \tfinal char startSeparator = ':';\n-    \tfinal char standardSeparator = ',';\n-    \tfinal String foo = \"foo\";\n+        StrBuilder sb = new StrBuilder();\n+        final char startSeparator = ':';\n+        final char standardSeparator = ',';\n+        final String foo = \"foo\";\n         sb.appendSeparator(standardSeparator, startSeparator);  // no effect\n         assertEquals(String.valueOf(startSeparator), sb.toString());\n         sb.append(foo);\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n      * Tests various values with the ceiling method\n      */\n     public void testCeil() throws Exception {\n-    \t// tests public static Date ceiling(Date date, int field)\n-    \tassertEquals(\"ceiling year-1 failed\",\n+        // tests public static Date ceiling(Date date, int field)\n+        assertEquals(\"ceiling year-1 failed\",\n                 dateParser.parse(\"January 1, 2003\"),\n                 DateUtils.ceiling(date1, Calendar.YEAR));\n         assertEquals(\"ceiling year-2 failed\",\n         \n         // Fix for http://issues.apache.org/bugzilla/show_bug.cgi?id=25560\n         // Test ceiling across the beginning of daylight saving time\n-    \tTimeZone.setDefault(zone);\n+        TimeZone.setDefault(zone);\n         dateTimeParser.setTimeZone(zone);\n \n         assertEquals(\"ceiling MET date across DST change-over\",\n         } else {\n             this.warn(\"WARNING: Some date ceiling tests not run since the current version is \" + SystemUtils.JAVA_VERSION);\n         }\n-    \tTimeZone.setDefault(defaultZone);\n+        TimeZone.setDefault(defaultZone);\n         dateTimeParser.setTimeZone(defaultZone);\n         \n      // Bug 31395, large dates", "timestamp": 1256019099, "metainfo": ""}