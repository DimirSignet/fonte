{"sha": "fd9ffffeb5e25a96b906c3786603074dfa0a5501", "log": "Switching last two methods to use 'str' rather than 'string'  ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n      * \n      * @param writer\n      *            The <code>Writer</code> to write the results to; assumed to be non-null.\n-     * @param string\n+     * @param str\n      *            The <code>String</code> to write the results to; assumed to be non-null.\n      * @throws IOException\n      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}\n      * @see #escape(String)\n      * @see Writer\n      */\n-    public void unescape(Writer writer, String string) throws IOException {\n-        int firstAmp = string.indexOf('&');\n+    public void unescape(Writer writer, String str) throws IOException {\n+        int firstAmp = str.indexOf('&');\n         if (firstAmp < 0) {\n-            writer.write(string);\n+            writer.write(str);\n             return;\n         } else {\n-            doUnescape(writer, string, firstAmp);\n-        }\n-    }\n-\n-    private void doUnescape(Writer writer, String string, int firstAmp) throws IOException {\n-        writer.write(string, 0, firstAmp);\n-        int len = string.length();\n+            doUnescape(writer, str, firstAmp);\n+        }\n+    }\n+\n+    private void doUnescape(Writer writer, String str, int firstAmp) throws IOException {\n+        writer.write(str, 0, firstAmp);\n+        int len = str.length();\n         for (int i = firstAmp; i < len; i++) {\n-            char c = string.charAt(i);\n+            char c = str.charAt(i);\n             if (c == '&') {\n                 int nextIdx = i + 1;\n-                int semiColonIdx = string.indexOf(';', nextIdx);\n+                int semiColonIdx = str.indexOf(';', nextIdx);\n                 if (semiColonIdx == -1) {\n                     writer.write(c);\n                     continue;\n                 }\n-                int amphersandIdx = string.indexOf('&', i + 1);\n+                int amphersandIdx = str.indexOf('&', i + 1);\n                 if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {\n                     // Then the text looks like &...&...;\n                     writer.write(c);\n                     continue;\n                 }\n-                String entityContent = string.substring(nextIdx, semiColonIdx);\n+                String entityContent = str.substring(nextIdx, semiColonIdx);\n                 int entityValue = -1;\n                 int entityContentLen = entityContent.length();\n                 if (entityContentLen > 0) {", "timestamp": 1170800811, "metainfo": ""}