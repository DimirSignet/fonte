{"sha": "91224ed22b6956b97d9a4bc035c3da1804019d0c", "log": "My screwup. Rolling back didn't fix, so rolling forward again. No idea still why the build fails; needs investigation  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java\n                 List.class, List.class, List.class, List.class, List[].class, List[].class,\n                 List[].class, List[].class, List[].class, List[].class, List[].class);\n         Type[] types = method.getGenericParameterTypes();\n-        list0 = list0;\n+//        list0 = list0;\n         delegateBooleanAssertion(types, 0, 0, true);\n         list1 = list0;\n         delegateBooleanAssertion(types, 0, 1, true);\n         delegateBooleanAssertion(types, 0, 6, true);\n         list0 = list6;\n         delegateBooleanAssertion(types, 6, 0, true);\n-        list1 = list1;\n+//        list1 = list1;\n         delegateBooleanAssertion(types, 1, 1, true);\n         list2 = list1;\n         delegateBooleanAssertion(types, 1, 2, true);\n         delegateBooleanAssertion(types, 1, 6, true);\n         list1 = (List<Object>) list6;\n         delegateBooleanAssertion(types, 6, 1, false);\n-        list2 = list2;\n+//        list2 = list2;\n         delegateBooleanAssertion(types, 2, 2, true);\n         list2 = list3;\n         delegateBooleanAssertion(types, 2, 3, false);\n         delegateBooleanAssertion(types, 5, 2, true);\n         list5 = (List<? extends String>) list2;\n         delegateBooleanAssertion(types, 2, 6, false);\n-        list3 = list3;\n+//        list3 = list3;\n         delegateBooleanAssertion(types, 6, 2, true);\n         list6 = (List<? super String>) list2;\n         delegateBooleanAssertion(types, 3, 3, true);\n         delegateBooleanAssertion(types, 3, 6, true);\n         list3 = (List<? super Object>) list6;\n         delegateBooleanAssertion(types, 6, 3, false);\n-        list4 = list4;\n+//        list4 = list4;\n         delegateBooleanAssertion(types, 4, 4, true);\n         list5 = list4;\n         delegateBooleanAssertion(types, 4, 5, true);\n         delegateBooleanAssertion(types, 4, 6, true);\n         list4 = (List<String>) list6;\n         delegateBooleanAssertion(types, 6, 4, false);\n-        list5 = list5;\n+//        list5 = list5;\n         delegateBooleanAssertion(types, 5, 5, true);\n         list6 = (List<? super String>) list5;\n         delegateBooleanAssertion(types, 5, 6, false);\n         list5 = (List<? extends String>) list6;\n         delegateBooleanAssertion(types, 6, 5, false);\n-        list6 = list6;\n+//        list6 = list6;\n         delegateBooleanAssertion(types, 6, 6, true);\n \n-        list7 = list7;\n+//        list7 = list7;\n         delegateBooleanAssertion(types, 7, 7, true);\n         list8 = list7;\n         delegateBooleanAssertion(types, 7, 8, true);\n         delegateBooleanAssertion(types, 7, 13, true);\n         list7 = list13;\n         delegateBooleanAssertion(types, 13, 7, true);\n-        list8 = list8;\n+//        list8 = list8;\n         delegateBooleanAssertion(types, 8, 8, true);\n         list9 = list8;\n         delegateBooleanAssertion(types, 8, 9, true);\n         delegateBooleanAssertion(types, 8, 13, true);\n         list8 = (List<Object>[]) list13;\n         delegateBooleanAssertion(types, 13, 8, false);\n-        list9 = list9;\n+//        list9 = list9;\n         delegateBooleanAssertion(types, 9, 9, true);\n         list10 = (List<? super Object>[]) list9;\n         delegateBooleanAssertion(types, 9, 10, false);\n         delegateBooleanAssertion(types, 9, 13, false);\n         list9 = list13;\n         delegateBooleanAssertion(types, 13, 9, true);\n-        list10 = list10;\n+//        list10 = list10;\n         delegateBooleanAssertion(types, 10, 10, true);\n         // list11 = list10;\n         delegateBooleanAssertion(types, 10, 11, false);\n         delegateBooleanAssertion(types, 10, 13, true);\n         list10 = (List<? super Object>[]) list13;\n         delegateBooleanAssertion(types, 13, 10, false);\n-        list11 = list11;\n+//        list11 = list11;\n         delegateBooleanAssertion(types, 11, 11, true);\n         list12 = list11;\n         delegateBooleanAssertion(types, 11, 12, true);\n         delegateBooleanAssertion(types, 11, 13, true);\n         list11 = (List<String>[]) list13;\n         delegateBooleanAssertion(types, 13, 11, false);\n-        list12 = list12;\n+//        list12 = list12;\n         delegateBooleanAssertion(types, 12, 12, true);\n         list13 = (List<? super String>[]) list12;\n         delegateBooleanAssertion(types, 12, 13, false);\n         list12 = (List<? extends String>[]) list13;\n         delegateBooleanAssertion(types, 13, 12, false);\n-        list13 = list13;\n+//        list13 = list13;\n         delegateBooleanAssertion(types, 13, 13, true);\n         Type disType = getClass().getField(\"dis\").getGenericType();\n         // Reporter.log( ( ( ParameterizedType ) disType", "timestamp": 1302209743, "metainfo": ""}