{"sha": "80958195f81b18ca88dd7ad5afafe451989542fd", "log": "account for unavailability of NumberFormat.getIntegerInstance(...) pre JDK 1.4  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/NumberMetaFormat.java\n+++ b/src/java/org/apache/commons/lang/text/NumberMetaFormat.java\n  */\n package org.apache.commons.lang.text;\n \n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n import java.text.DecimalFormat;\n import java.text.DecimalFormatSymbols;\n import java.text.FieldPosition;\n     private static final String INTEGER = \"integer\";\n     private static final String CURRENCY = \"currency\";\n     private static final String PERCENT = \"percent\";\n+    private static final Method GET_INTEGER_INSTANCE;\n+\n+    static {\n+        Method m = null;\n+        try {\n+            Method mm = NumberFormat.class.getDeclaredMethod(\"getIntegerInstance\", new Class[] { Locale.class });\n+            if (Modifier.isStatic(mm.getModifiers())) {\n+                m = mm;\n+            }\n+        } catch (Exception e) {\n+            // leave null\n+        }\n+        GET_INTEGER_INSTANCE = m;\n+    }\n \n     private Locale locale;\n \n         if (subformats == null) {\n             subformats = new HashMap();\n             subformats.put(DEFAULT, NumberFormat.getInstance(getLocale()));\n-            subformats.put(INTEGER, NumberFormat\n-                    .getIntegerInstance(getLocale()));\n+            subformats.put(INTEGER, createIntegerInstance(getLocale()));\n             subformats.put(CURRENCY, NumberFormat\n                     .getCurrencyInstance(getLocale()));\n             subformats.put(PERCENT, NumberFormat\n             decimalFormatSymbols = new DecimalFormatSymbols(getLocale());\n         }\n     }\n+\n+    /**\n+     * Create the \"integer\" NumberFormat instance for the specified Locale.\n+     * \n+     * @param locale the Locale to use\n+     * @return integer NumberFormat\n+     */\n+    private static NumberFormat createIntegerInstance(Locale locale) {\n+        if (GET_INTEGER_INSTANCE != null) {\n+            try {\n+                 return (NumberFormat) GET_INTEGER_INSTANCE.invoke(null, new Object[] { locale });\n+            } catch (IllegalAccessException e) {\n+                //fall through\n+            } catch (InvocationTargetException e) {\n+                //fall through\n+            }\n+        }\n+        NumberFormat result = NumberFormat.getInstance(locale);\n+        result.setMaximumFractionDigits(0);\n+        result.setParseIntegerOnly(true);\n+        return result;\n+    }\n }", "timestamp": 1196702424, "metainfo": ""}