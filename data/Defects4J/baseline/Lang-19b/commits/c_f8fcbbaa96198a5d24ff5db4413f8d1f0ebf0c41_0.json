{"sha": "f8fcbbaa96198a5d24ff5db4413f8d1f0ebf0c41", "log": "Javadoc and added some system properties.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n  * @author Tetsuya Kaneuchi\n  * @author Rafal Krupinski\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.30 2004/02/12 01:58:33 ggregory Exp $\n+ * @version $Id: SystemUtils.java,v 1.31 2004/02/14 00:23:50 ggregory Exp $\n  */\n public class SystemUtils {\n \n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since 2.1\n      */\n     public static final String AWT_TOOLKIT = getSystemProperty(\"awt.toolkit\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n-     * @since 2.0\n-     * @since Java 1.2.\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.0\n+     * @since Java 1.2\n      */\n     public static final String FILE_ENCODING = getSystemProperty(\"file.encoding\");\n \n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n-     * @since Java 1.1.\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since Java 1.1\n      */\n     public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");\n \n     /**\n+     * <p>The <code>java.awt.fonts</code> System Property.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.1\n+     */\n+    public static final String JAVA_AWT_FONTS = getSystemProperty(\"java.awt.fonts\");\n+\n+    /**\n+     * <p>The <code>java.awt.graphicsenv</code> System Property.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.1\n+     */\n+    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(\"java.awt.graphicsenv\");\n+\n+    /**\n+     * <p>The <code>java.awt.printerjob</code> System Property.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.1\n+     */\n+    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(\"java.awt.printerjob\");\n+\n+    /**\n      * <p>The <code>java.class.path</code> System Property. Java class path.</p>\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n-     * @since Java 1.1.\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since Java 1.1\n      */\n     public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");\n \n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n-     * @since Java 1.1.\n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since Java 1.1\n      */\n     public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");\n \n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2. Not used in Sun versions after 1.2.\n      */\n     public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.4\n      */\n     public static final String JAVA_ENDORSED_DIRS = getSystemProperty(\"java.endorsed.dirs\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.3\n      */\n     public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n      * \n      * @since Java 1.2\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since 2.0\n      * @since Java 1.3\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since 2.0\n      * @since Java 1.3\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.3\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");\n \n     /**\n+     * <p>The <code>java.util.prefs.PreferencesFactory</code> System Property. A class name.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.1\n+     * @since Java 1.4\n+     */\n+    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(\"java.util.prefs.PreferencesFactory\");\n+\n+    /**\n      * <p>The <code>java.vendor</code> System Property. Java vendor-specific string.</p>\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n-      * \n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n     */\n     public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String JAVA_VERSION = getSystemProperty(\"java.version\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since 2.0\n      * @since Java 1.2\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.2\n      */\n     public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String OS_ARCH = getSystemProperty(\"os.arch\");\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String OS_NAME = getSystemProperty(\"os.name\");\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n      * \n      * @since Java 1.1\n      */\n      *\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n      * \n      * @since Java 1.1\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since 2.0\n      * @since Java 1.2\n      */\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);\n \n     /**\n      * <p>The <code>user.language</code> System Property. User's language code,\n-     * such as 'en'.</p>\n-     *\n-     * <p>Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or the property does not exist.</p>\n+     * such as <code>\"en\"</code>.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n      * \n      * @since 2.0\n      * @since Java 1.2\n      * <p>Defaults to <code>null</code> if the runtime does not have\n      * security access to read this property or the property does not exist.</p>\n      * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n      * @since Java 1.1\n      */\n     public static final String USER_NAME = getSystemProperty(\"user.name\");\n+\n+    /**\n+     * <p>The <code>user.timezone</code> System Property. \n+     * For example: <code>\"America/Los_Angeles\"</code>.</p>\n+     *\n+     * <p>Defaults to <code>null</code> if the runtime does not have\n+     * security access to read this property or the property does not exist.</p>\n+     * \n+     * <p>\n+     * This value is initialized when the class is loaded. If {@link System#setProperty(String,String)}\n+     * or {@link System#setProperties(java.util.Properties)} is called after this class is loaded, the value\n+     * will be out of sync with that System property.\n+     * </p>\n+     * \n+     * @since 2.1\n+     */\n+    public static final String USER_TIMEZONE = getSystemProperty(\"user.timezone\");\n \n     // Java version\n     //-----------------------------------------------------------------------", "timestamp": 1076718230, "metainfo": ""}