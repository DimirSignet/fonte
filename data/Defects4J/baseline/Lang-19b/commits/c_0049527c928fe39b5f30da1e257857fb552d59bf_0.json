{"sha": "0049527c928fe39b5f30da1e257857fb552d59bf", "log": "Making noNullElements methods take Iterable types rather than Collection types. LANG-548  ", "commit": "\n--- a/src/java/org/apache/commons/lang3/Validate.java\n+++ b/src/java/org/apache/commons/lang3/Validate.java\n     //---------------------------------------------------------------------------------\n \n     /**\n-     * <p>Validate that the specified argument collection is neither \n+     * <p>Validate that the specified argument iterable is neither \n      * <code>null</code> nor contains any elements that are <code>null</code>;\n      * otherwise throwing an exception with the specified message.\n      *\n      * <pre>Validate.noNullElements(myCollection, \"The collection contains null at position %d\");</pre>\n      * \n-     * <p>If the collection is <code>null</code>, then the message in the exception \n+     * <p>If the iterable is <code>null</code>, then the message in the exception \n      * is &quot;The validated object is null&quot;.</p>\n      * \n-     * <p>If the collection has a <code>null</code> element, then the iteration \n+     * <p>If the iterable has a <code>null</code> element, then the iteration \n      * index of the invalid element is appended to the <code>values</code> \n      * argument.</p>\n      *\n-     * @param <T> the collection type\n-     * @param collection the collection to check\n-     * @return the validated collection (never <code>null</code> method for chaining)\n+     * @param <T> the iterable type\n+     * @param iterable the iterable to check\n+     * @return the validated iterable (never <code>null</code> method for chaining)\n      * @throws NullPointerException if the array is <code>null</code>\n      * @throws IllegalArgumentException if an element is <code>null</code>\n-     * @see #noNullElements(Collection, String, Object...)\n-     */\n-    public static <T extends Collection<?>> T noNullElements(T collection, String message, Object... values) {\n-        Validate.notNull(collection);\n+     * @see #noNullElements(Iterable)\n+     */\n+    public static <T extends Iterable<?>> T noNullElements(T iterable, String message, Object... values) {\n+        Validate.notNull(iterable);\n         int i = 0;\n-        for (Iterator<?> it = collection.iterator(); it.hasNext(); i++) {\n+        for (Iterator<?> it = iterable.iterator(); it.hasNext(); i++) {\n             if (it.next() == null) {\n                 Object[] values2 = ArrayUtils.addAll(values, i);\n                 throw new IllegalArgumentException(String.format(message, values2));\n             }\n         }\n-        return collection;\n-    }\n-\n-    /**\n-     * <p>Validate that the specified argument collection is neither \n+        return iterable;\n+    }\n+\n+    /**\n+     * <p>Validate that the specified argument iterable is neither \n      * <code>null</code> nor contains any elements that are <code>null</code>;\n      * otherwise throwing an exception.\n      *\n      * <pre>Validate.noNullElements(myCollection);</pre>\n      * \n-     * <p>If the collection is <code>null</code>, then the message in the exception \n+     * <p>If the iterable is <code>null</code>, then the message in the exception \n      * is &quot;The validated object is null&quot;.</p>\n      * \n      * <p>If the array has a <code>null</code> element, then the message in the\n-     * exception is &quot;The validated collection contains null element at index: \n+     * exception is &quot;The validated iterable contains null element at index: \n      * &quot followed by the index.</p>\n      *\n-     * @param <T> the collection type\n-     * @param collection the collection to check\n-     * @return the validated collection (never <code>null</code> method for chaining)\n+     * @param <T> the iterable type\n+     * @param iterable the iterable to check\n+     * @return the validated iterable (never <code>null</code> method for chaining)\n      * @throws NullPointerException if the array is <code>null</code>\n      * @throws IllegalArgumentException if an element is <code>null</code>\n      * @see #noNullElements(Collection, String, Object...)\n      */\n-    public static <T extends Collection<?>> T noNullElements(T collection) {\n-        return noNullElements(collection, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);\n+    public static <T extends Iterable<?>> T noNullElements(T iterable) {\n+        return noNullElements(iterable, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);\n     }\n \n     // validIndex array", "timestamp": 1260448095, "metainfo": ""}