{"sha": "2168c16a666290931af922465b654c8f94c63d45", "log": "LANG-564 Improve StrLookup API documentation  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/StrLookup.java\n+++ b/src/main/java/org/apache/commons/lang3/text/StrLookup.java\n      * Or, a numeric based implementation could be created that treats the key\n      * as an integer, increments the value and return the result as a string -\n      * converting 1 to 2, 15 to 16 etc.\n-     *\n+     * <p>\n+     * The {@link #lookup(String)} method always returns a String, regardless of\n+     * the underlying data, by converting it as necessary. For example:\n+     * <pre>\n+     * Map<String, Object> map = new HashMap<String, Object>();\n+     * map.put(\"number\", new Integer(2));\n+     * assertEquals(\"2\", StrLookup.mapLookup(map).lookup(\"number\"));\n+     * </pre>\n      * @param key  the key to be looked up, may be null\n      * @return the matching value, null if no match\n      */", "timestamp": 1263646434, "metainfo": ""}