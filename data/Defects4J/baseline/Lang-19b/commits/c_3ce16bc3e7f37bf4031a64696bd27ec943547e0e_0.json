{"sha": "3ce16bc3e7f37bf4031a64696bd27ec943547e0e", "log": "removed unnecessary elses and use of ternary operator with primitive boolean consequences e.g. (some boolean expression) ? true : false  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/BooleanUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/BooleanUtils.java\n         if (bool == null) {\n             return null;\n         }\n-        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);\n+        return bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE;\n     }\n     \n     // boolean Boolean methods\n      * @since 2.1\n      */\n     public static boolean isTrue(Boolean bool) {\n-        if (bool == null) {\n-            return false;\n-        }\n-        return bool.booleanValue() ? true : false;\n+        return Boolean.TRUE.equals(bool);\n     }\n \n     /**\n      * @since 2.1\n      */\n     public static boolean isFalse(Boolean bool) {\n-        if (bool == null) {\n-            return false;\n-        }\n-        return bool.booleanValue() ? false : true;\n+        return Boolean.FALSE.equals(bool);\n     }\n \n     /**\n      * @return {@code true} or {@code false}, {@code null} returns {@code false}\n      */\n     public static boolean toBoolean(Boolean bool) {\n-        if (bool == null) {\n-            return false;\n-        }\n-        return bool.booleanValue() ? true : false;\n+        return bool != null && bool.booleanValue();\n     }\n     \n     /**\n         if (bool == null) {\n             return valueIfNull;\n         }\n-        return bool.booleanValue() ? true : false;\n+        return bool.booleanValue();\n     }\n     \n     // Integer to Boolean methods\n      *  if zero\n      */\n     public static boolean toBoolean(int value) {\n-        return value == 0 ? false : true;\n+        return value != 0;\n     }\n     \n     /**\n     public static boolean toBoolean(int value, int trueValue, int falseValue) {\n         if (value == trueValue) {\n             return true;\n-        } else if (value == falseValue) {\n+        }\n+        if (value == falseValue) {\n             return false;\n         }\n         // no match\n         if (value == null) {\n             if (trueValue == null) {\n                 return true;\n-            } else if (falseValue == null) {\n+            }\n+            if (falseValue == null) {\n                 return false;\n             }\n         } else if (value.equals(trueValue)) {\n     public static Boolean toBooleanObject(int value, int trueValue, int falseValue, int nullValue) {\n         if (value == trueValue) {\n             return Boolean.TRUE;\n-        } else if (value == falseValue) {\n+        }\n+        if (value == falseValue) {\n             return Boolean.FALSE;\n-        } else if (value == nullValue) {\n+        }\n+        if (value == nullValue) {\n             return null;\n         }\n         // no match\n         if (value == null) {\n             if (trueValue == null) {\n                 return Boolean.TRUE;\n-            } else if (falseValue == null) {\n+            }\n+            if (falseValue == null) {\n                 return Boolean.FALSE;\n-            } else if (nullValue == null) {\n+            }\n+            if (nullValue == null) {\n                 return null;\n             }\n         } else if (value.equals(trueValue)) {\n         if (str == null) {\n             if (trueString == null) {\n                 return Boolean.TRUE;\n-            } else if (falseString == null) {\n+            }\n+            if (falseString == null) {\n                 return Boolean.FALSE;\n-            } else if (nullString == null) {\n+            }\n+            if (nullString == null) {\n                 return null;\n             }\n         } else if (str.equals(trueString)) {\n         if (str == null) {\n             if (trueString == null) {\n                 return true;\n-            } else if (falseString == null) {\n+            }\n+            if (falseString == null) {\n                 return false;\n             }\n         } else if (str.equals(trueString)) {\n         // Validates input\n         if (array == null) {\n             throw new IllegalArgumentException(\"The Array must not be null\");\n-        } else if (array.length == 0) {\n+        }\n+        if (array.length == 0) {\n             throw new IllegalArgumentException(\"Array is empty\");\n         }\n \n     public static Boolean xor(Boolean... array) {\n         if (array == null) {\n             throw new IllegalArgumentException(\"The Array must not be null\");\n-        } else if (array.length == 0) {\n+        }\n+        if (array.length == 0) {\n             throw new IllegalArgumentException(\"Array is empty\");\n         }\n         boolean[] primitive = null;", "timestamp": 1302188601, "metainfo": ""}