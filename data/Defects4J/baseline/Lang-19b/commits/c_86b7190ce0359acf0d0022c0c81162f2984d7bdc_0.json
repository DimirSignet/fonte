{"sha": "86b7190ce0359acf0d0022c0c81162f2984d7bdc", "log": "Update Null handling in StringUtils to handle nulls quietly   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  *  <li>whitespace - the characters defined by {@link Character#isWhitespace(char)}\n  * </ul>\n  * \n- * <p>The <code>StringUtils</code> class varies in its handling of\n- * <code>null</code>. Each method should be consulted individually.</p>\n+ * <p>The <code>StringUtils</code> tries to handle <code>null</code> input\n+ * quietly. That is to say that a <code>null</code> will generally return a \n+ * sensible value rather than throw an exception.\n+ * Typically, <code>null</code> in gives <code>null</code> out.\n+ * Each method should be consulted individually for full details.</p>\n+ * \n+ * <p>A side effect of the <code>null</code> handling is that a \n+ * NullPointerException should be considered a bug in <code>StringUtils</code>.\n+ * (Except for deprecated methods).</p>\n  *\n  * @author <a href=\"http://jakarta.apache.org/turbine/\">Apache Jakarta Turbine</a>\n  * @author GenerationJavaCore\n  * @author Arun Mammen Thomas\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.60 2003/07/16 23:45:39 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.61 2003/07/16 23:56:45 scolebourne Exp $\n  */\n public class StringUtils {\n \n      * new string.</p>\n      *\n      * <pre>\n+     * StringUtils.repeat(null, 2) = null\n      * StringUtils.repeat(\"\", 0)   = \"\"\n      * StringUtils.repeat(\"\", 2)   = \"\"\n      * StringUtils.repeat(\"a\", 3)  = \"aaa\"\n      * StringUtils.repeat(\"ab\", 2) = \"abab\"\n-     * StringUtils.repeat(null, 2) = NullPointerException\n-     * StringUtils.repeat(\"a\", -2) = NegativeArraySizeException\n-     * </pre>\n-     *\n-     * @param str  the String to repeat, must not be null\n-     * @param repeat  number of times to repeat str\n-     * @return a new String consisting of the original String repeated\n-     * @throws NegativeArraySizeException if <code>repeat &lt; 0</code>\n-     * @throws NullPointerException if str is <code>null</code>\n+     * StringUtils.repeat(\"a\", -2) = \"\"\n+     * </pre>\n+     *\n+     * @param str  the String to repeat, may be null\n+     * @param repeat  number of times to repeat str, negative treated as zero\n+     * @return a new String consisting of the original String repeated,\n+     *  <code>null</code> if null string input\n      */\n     public static String repeat(String str, int repeat) {\n+        if (str == null) {\n+            return null;\n+        }\n+        if (repeat <= 0) {\n+            return \"\";\n+        }\n         int inputLength = str.length();\n-        if (repeat == 0) {\n-            return \"\";\n-        }\n         if (inputLength == 1 && repeat <= PAD_LIMIT) {\n            return padding(repeat, str.charAt(0));\n         }\n      * StringUtils.leftPad(\"bat\", 8, \"yz\")  = \"yzyzybat\"\n      * StringUtils.leftPad(\"bat\", 1, \"yz\")  = \"bat\"\n      * StringUtils.leftPad(\"bat\", -1, \"yz\") = \"bat\"\n-     * StringUtils.leftPad(\"bat\", 1, null)  = NullPointerException\n-     * StringUtils.leftPad(\"bat\", 1, \"\")    = ArithmeticException\n+     * StringUtils.leftPad(\"bat\", 1, null)  = IllegalArgumentException\n+     * StringUtils.leftPad(\"bat\", 1, \"\")    = IllegalArgumentException\n      * </pre>\n      *\n      * @param str  the String to pad out, may be null\n     /**\n      * <p>Find the Levenshtein distance between two Strings.</p>\n      *\n-     * <P>This is the number of changes needed to change one String into\n+     * <p>This is the number of changes needed to change one String into\n      * another. Where each change is a single character modification.</p>\n      *\n      * <p>This implemmentation of the levenshtein distance algorithm\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n- * @version $Id: StringUtilsTest.java,v 1.24 2003/07/16 23:45:39 scolebourne Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.25 2003/07/16 23:56:44 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n \n     }\n \n     public void testRepeat() {\n+        assertEquals(null, StringUtils.repeat(null, 2));\n         assertEquals(\"\", StringUtils.repeat(\"ab\", 0));\n         assertEquals(\"\", StringUtils.repeat(\"\", 3));\n         assertEquals(\"aaa\", StringUtils.repeat(\"a\", 3));\n         assertEquals(\"ababab\", StringUtils.repeat(\"ab\", 3));\n         assertEquals(\"abcabcabc\", StringUtils.repeat(\"abc\", 3));\n-        try {\n-            StringUtils.repeat(null, 0);\n-            fail();\n-        } catch (NullPointerException ex) {\n-        }\n     }\n \n     public void testCenter() {", "timestamp": 1058399805, "metainfo": ""}