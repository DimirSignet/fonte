{"sha": "5cb2bf0a33e6be865a147836c32bd08b8c9a62f9", "log": "Refactored duration tests to make it simpler to add new ones. Added a few edge cases to test the replacement for the += 31 code  ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n \n     // http://issues.apache.org/bugzilla/show_bug.cgi?id=38401\n     public void testBugzilla38401() {\n+        assertEqualDuration( \"0000/00/30 16:00:00 000\", new int[] { 2006, 0, 26, 18, 47, 34 }, \n+                             new int[] { 2006, 1, 26, 10, 47, 34 }, \"yyyy/MM/dd HH:mm:ss SSS\");\n+    }\n+\n+    // https://issues.apache.org/jira/browse/LANG-281\n+    public void testJiraLang281() {\n+        assertEqualDuration( \"09\", new int[] { 2005, 11, 31, 0, 0, 0 }, \n+                             new int[] { 2006, 9, 6, 0, 0, 0 }, \"MM\");\n+    }\n+\n+    // Attempting to test edge cases in DurationFormatUtils.formatPeriod\n+    public void testEdgeDurations() {\n+        assertEqualDuration( \"01\", new int[] { 2006, 0, 15, 0, 0, 0 }, \n+                             new int[] { 2006, 2, 10, 0, 0, 0 }, \"MM\");\n+        assertEqualDuration( \"12\", new int[] { 2005, 0, 15, 0, 0, 0 }, \n+                             new int[] { 2006, 0, 15, 0, 0, 0 }, \"MM\");\n+        assertEqualDuration( \"12\", new int[] { 2005, 0, 15, 0, 0, 0 }, \n+                             new int[] { 2006, 0, 16, 0, 0, 0 }, \"MM\");\n+        assertEqualDuration( \"11\", new int[] { 2005, 0, 15, 0, 0, 0 }, \n+                             new int[] { 2006, 0, 14, 0, 0, 0 }, \"MM\");\n+    }\n+\n+    private void assertEqualDuration(String expected, int[] start, int[] end, String format) {\n         Calendar cal1 = Calendar.getInstance();\n-        cal1.set(2006, 0, 26, 18, 47, 34);\n+        cal1.set(start[0], start[1], start[2], start[3], start[4], start[5]);\n         cal1.set(Calendar.MILLISECOND, 0);\n         Calendar cal2 = Calendar.getInstance();\n-        cal2.set(2006, 1, 26, 10, 47, 34);\n+        cal2.set(end[0], end[1], end[2], end[3], end[4], end[5]);\n         cal2.set(Calendar.MILLISECOND, 0);\n-\n-        assertEquals( \"0000/00/30 16:00:00 000\", DurationFormatUtils.formatPeriod(cal1.getTime().getTime(), cal2.getTime().getTime(), \"yyyy/MM/dd HH:mm:ss SSS\") );\n-    }\n-\n-    // https://issues.apache.org/jira/browse/LANG-281\n-    public void testJiraLang281() {\n-        Calendar cal = Calendar.getInstance();\n-        cal.set(Calendar.MONTH, Calendar.DECEMBER);\n-        cal.set(Calendar.DAY_OF_MONTH, 31);\n-        cal.set(Calendar.YEAR, 2005);\n-        cal.set(Calendar.HOUR_OF_DAY, 0);\n-        cal.set(Calendar.MINUTE, 0);\n-        cal.set(Calendar.SECOND, 0);\n-        cal.set(Calendar.MILLISECOND, 0);\n-\n-        Calendar cal2 = Calendar.getInstance();\n-        cal2.set(Calendar.MONTH, Calendar.OCTOBER);\n-        cal2.set(Calendar.DAY_OF_MONTH, 6);\n-        cal2.set(Calendar.YEAR, 2006);\n-        cal2.set(Calendar.HOUR_OF_DAY, 0);\n-        cal2.set(Calendar.MINUTE, 0);\n-        cal2.set(Calendar.SECOND, 0);\n-        cal2.set(Calendar.MILLISECOND, 0);\n-        String result = DurationFormatUtils.formatPeriod(cal.getTime().getTime(), cal2.getTime().getTime(), \"MM\");\n-        assertEquals(\"09\", result);\n+        String result = DurationFormatUtils.formatPeriod(cal1.getTime().getTime(), cal2.getTime().getTime(), format);\n+        assertEquals(expected, result);\n     }\n \n     private void assertArrayEquals(DurationFormatUtils.Token[] obj1, DurationFormatUtils.Token[] obj2) {", "timestamp": 1160413048, "metainfo": ""}