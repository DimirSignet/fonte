{"sha": "50dac0513a328ab620246487e5cb0ab4bde01872", "log": "Minor javadoc changes  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n     //-----------------------------------------------------------------------\n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     /**\n      * <p>Defensive programming technique to change a <code>null</code>\n-     * reference to an empty one..</p>\n+     * reference to an empty one.</p>\n      *\n      * <p>This method returns an empty array for a <code>null</code> input array.</p>\n      * \n \n     // ----------------------------------------------------------------------\n     /**\n-     * <p>Checks if an array of Objects is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of Objects is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n      public static <T> boolean isNotEmpty(T[] array) {\n      }\n \n     /**\n-     * <p>Checks if an array of primitive longs is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive longs is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(long[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive ints is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive ints is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(int[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive shorts is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive shorts is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(short[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive chars is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive chars is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(char[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive bytes is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive bytes is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(byte[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive doubles is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive doubles is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(double[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive floats is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive floats is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(float[] array) {\n     }\n \n     /**\n-     * <p>Checks if an array of primitive booleans is not empty or <code>not null</code>.</p>\n+     * <p>Checks if an array of primitive booleans is not empty or not <code>null</code>.</p>\n      *\n      * @param array  the array to test\n-     * @return <code>true</code> if the array is not empty or <code>not null</code>\n+     * @return <code>true</code> if the array is not empty or not <code>null</code>\n      *\n      */\n     public static boolean isNotEmpty(boolean[] array) {", "timestamp": 1266881121, "metainfo": ""}