{"sha": "9919df71b9551f131cdb25768833c8de82111640", "log": "Checkstyle and trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/EnumUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/EnumUtils.java\n  * The ASF licenses this file to You under the Apache License, Version 2.0\n  * (the \"License\"); you may not use this file except in compliance with\n  * the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n \n /**\n  * <p>Utility library to provide helper methods for Java enums.</p>\n- * \n+ *\n  * <p>#ThreadSafe#</p>\n- * \n+ *\n  * @author Apache Software Foundation\n  * @since 3.0\n  * @version $Id$\n \n     /**\n      * <p>Gets the {@code Map} of enums by name.</p>\n-     * \n+     *\n      * <p>This method is useful when you need a map of enums by name.</p>\n      *\n+     * @param <E> the type of the enumeration\n      * @param enumClass  the class of the enum to query, not null\n      * @return the modifiable map of enum names to enums, never null\n      */\n \n     /**\n      * <p>Gets the {@code List} of enums.</p>\n-     * \n+     *\n      * <p>This method is useful when you need a list of enums rather than an array.</p>\n      *\n+     * @param <E> the type of the enumeration\n      * @param enumClass  the class of the enum to query, not null\n      * @return the modifiable list of enums, never null\n      */\n \n     /**\n      * <p>Checks if the specified name is a valid enum for the class.</p>\n-     * \n+     *\n      * <p>This method differs from {@link Enum#valueOf} in that checks if the name is\n      * a valid enum without needing to catch the exception.</p>\n      *\n+     * @param <E> the type of the enumeration\n      * @param enumClass  the class of the enum to query, not null\n      * @param enumName   the enum name, null returns false\n      * @return true if the enum name is valid, otherwise false\n \n     /**\n      * <p>Gets the enum for the class, returning {@code null} if not found.</p>\n-     * \n+     *\n      * <p>This method differs from {@link Enum#valueOf} in that it does not throw an exception\n      * for an invalid enum name.</p>\n      *\n+     * @param <E> the type of the enumeration\n      * @param enumClass  the class of the enum to query, not null\n      * @param enumName   the enum name, null returns null\n      * @return the enum, null if not found", "timestamp": 1300481728, "metainfo": ""}