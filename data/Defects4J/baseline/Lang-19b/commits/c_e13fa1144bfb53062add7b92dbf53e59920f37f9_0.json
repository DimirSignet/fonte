{"sha": "e13fa1144bfb53062add7b92dbf53e59920f37f9", "log": "Checkstyle and trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/MutablePair.java\n+++ b/src/main/java/org/apache/commons/lang3/MutablePair.java\n \n /**\n  * Mutable concrete manifestation of the {@link Pair} type.\n- * \n+ *\n  * <p>#ThreadSafe# if the objects are threadsafe</p>\n  * @since Lang 3.0\n  * @author Matt Benson\n  * @version $Id$\n- * \n+ *\n  * @param <L> left generic type\n  * @param <R> right generic type\n  */\n \n     /**\n      * Create a new MutablePair instance.\n-     * \n-     * @param leftElement\n-     * @param rightElement\n+     *\n+     * @param leftElement the left value\n+     * @param rightElement the right value\n      */\n     public MutablePair(L leftElement, R rightElement) {\n         super();\n \n     /**\n      * Set the left element of the pair.\n-     * @param leftElement\n+     * @param leftElement the value of the left element\n      */\n     public void setLeftElement(L leftElement) {\n         this.leftElement = leftElement;\n \n     /**\n      * Set the right element of the pair.\n-     * @param rightElement\n+     * @param rightElement the value of the right element\n      */\n     public void setRightElement(R rightElement) {\n         this.rightElement = rightElement;\n     /**\n      * Implement {@link java.util.Map.Entry#setValue(Object)}.\n      * @param value value (<code>rightElement</code>) to set\n+     * @return the old value for the right element\n      */\n     public R setValue(R value) {\n         R result = getRightElement();\n     /**\n      * Static fluent creation method for a {@link MutablePair}<L, R>:\n      * <code>MutablePair.of(left, right)</code>\n-     * @param <L>\n-     * @param <R>\n-     * @param left\n-     * @param right\n+     * @param <L> the left generic type\n+     * @param <R> the right generic type\n+     * @param left the left value\n+     * @param right the right value\n      * @return MutablePair<L, R>(left, right)\n      */\n     public static <L, R> MutablePair<L, R> of(L left, R right) {", "timestamp": 1300549858, "metainfo": ""}