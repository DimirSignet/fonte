{"sha": "0c1214f6b30031895f8fd86f28badfa4b23ec61f", "log": "tests updated to not need the removed month/year milli estimates   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n         assertEquals( \"60000\", DurationFormatUtils.format(time, \"S\") );\n         assertEquals( \"01:00\", DurationFormatUtils.format(time, \"mm:ss\") );\n \n-        /*\n-        time = 3 * DateUtils.MILLIS_PER_YEAR + 7 * DateUtils.MILLIS_PER_MONTH;\n-        assertEquals( \"37\", DurationFormatUtils.format(time, \"yM\") );\n-        assertEquals( \"3 years 7 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n-        assertEquals( \"03/07\", DurationFormatUtils.format(time, \"yy/MM\") );\n-\n-        time = 3 * DateUtils.MILLIS_PER_YEAR + 11 * DateUtils.MILLIS_PER_MONTH;\n-        assertEquals( \"311\", DurationFormatUtils.format(time, \"yM\") );\n-        assertEquals( \"3 years 11 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n-        assertEquals( \"03/11\", DurationFormatUtils.format(time, \"yy/MM\") );\n-\n-        time = 3 * DateUtils.MILLIS_PER_YEAR + 12 * DateUtils.MILLIS_PER_MONTH;\n+        Calendar cal = Calendar.getInstance();\n+        cal.set(1973, 6, 1, 0, 0, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+        time = cal.getTime().getTime();\n+        assertEquals( \"36\", DurationFormatUtils.format(time, \"yM\") );\n+        assertEquals( \"3 years 6 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n+        assertEquals( \"03/06\", DurationFormatUtils.format(time, \"yy/MM\") );\n+\n+        cal.set(1973, 10, 1, 0, 0, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+        time = cal.getTime().getTime();\n+        assertEquals( \"310\", DurationFormatUtils.format(time, \"yM\") );\n+        assertEquals( \"3 years 10 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n+        assertEquals( \"03/10\", DurationFormatUtils.format(time, \"yy/MM\") );\n+\n+        cal.set(1974, 0, 1, 0, 0, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+        time = cal.getTime().getTime();\n         assertEquals( \"40\", DurationFormatUtils.format(time, \"yM\") );\n         assertEquals( \"4 years 0 months\", DurationFormatUtils.format(time, \"y' years 'M' months'\") );\n         assertEquals( \"04/00\", DurationFormatUtils.format(time, \"yy/MM\") );\n         assertEquals( \"48\", DurationFormatUtils.format(time, \"M\") );\n         assertEquals( \"48\", DurationFormatUtils.format(time, \"MM\") );\n         assertEquals( \"048\", DurationFormatUtils.format(time, \"MMM\") );\n-        */\n-\n     }\n \n     public void testLexx() {", "timestamp": 1096260407, "metainfo": ""}