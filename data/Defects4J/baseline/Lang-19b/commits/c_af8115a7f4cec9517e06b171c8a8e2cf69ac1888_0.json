{"sha": "af8115a7f4cec9517e06b171c8a8e2cf69ac1888", "log": "Checkstyle  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n      * @throws IllegalArgumentException if the class or field name is null\n      * @throws IllegalAccessException if the field is not made accessible\n      */\n-    public static Object readStaticField(Class<?> cls, String fieldName, boolean forceAccess) throws IllegalAccessException {\n+    public static Object readStaticField(Class<?> cls, String fieldName, boolean forceAccess)\n+        throws IllegalAccessException {\n         Field field = getField(cls, fieldName, forceAccess);\n         if (field == null) {\n             throw new IllegalArgumentException(\"Cannot locate field \" + fieldName + \" on \" + cls);\n      * @throws IllegalArgumentException if <code>target</code> or <code>fieldName</code> is null\n      * @throws IllegalAccessException if the field is not made accessible\n      */\n-    public static Object readDeclaredField(Object target, String fieldName, boolean forceAccess) throws IllegalAccessException {\n+    public static Object readDeclaredField(Object target, String fieldName, boolean forceAccess)\n+        throws IllegalAccessException {\n         if (target == null) {\n             throw new IllegalArgumentException(\"target object must not be null\");\n         }\n      * @throws IllegalArgumentException if the field is null\n      * @throws IllegalAccessException if the field is not made accessible or is final\n      */\n-    public static void writeField(Field field, Object target, Object value, boolean forceAccess) throws IllegalAccessException {\n+    public static void writeField(Field field, Object target, Object value, boolean forceAccess)\n+        throws IllegalAccessException {\n         if (field == null) {\n             throw new IllegalArgumentException(\"The field must not be null\");\n         }", "timestamp": 1300310833, "metainfo": ""}