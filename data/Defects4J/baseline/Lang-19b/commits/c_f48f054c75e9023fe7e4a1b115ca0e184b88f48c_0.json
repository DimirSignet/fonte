{"sha": "f48f054c75e9023fe7e4a1b115ca0e184b88f48c", "log": "Vararging more methods.  StringUtils.getCommonPrefix, StringUtils.indexOfDifference, WordUtils.initials, WordUtils.uncapitalize, WordUtils.capitalizeFully, WordUtils.capitalize, BooleanUtils.xor. LANG-396  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/BooleanUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/BooleanUtils.java\n      * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n      * @throws IllegalArgumentException if <code>array</code> is empty.\n      */\n-    public static boolean xor(boolean[] array) {\n+    public static boolean xor(boolean... array) {\n         // Validates input\n         if (array == null) {\n             throw new IllegalArgumentException(\"The Array must not be null\");\n      * @throws IllegalArgumentException if <code>array</code> is empty.\n      * @throws IllegalArgumentException if <code>array</code> contains a <code>null</code>\n      */\n-    public static Boolean xor(Boolean[] array) {\n+    public static Boolean xor(Boolean... array) {\n         if (array == null) {\n             throw new IllegalArgumentException(\"The Array must not be null\");\n         } else if (array.length == 0) {\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * @return the index where the strings begin to differ; -1 if they are all equal\n      * @since 2.4\n      */\n-    public static int indexOfDifference(CharSequence[] css) {\n+    public static int indexOfDifference(CharSequence... css) {\n         if (css == null || css.length <= 1) {\n             return INDEX_NOT_FOUND;\n         }\n      * or if there is no common prefix.\n      * @since 2.4\n      */\n-    public static String getCommonPrefix(String[] strs) {\n+    public static String getCommonPrefix(String... strs) {\n         if (strs == null || strs.length == 0) {\n             return EMPTY;\n         }\n--- a/src/main/java/org/apache/commons/lang3/text/WordUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/text/WordUtils.java\n      * @see #capitalizeFully(String)\n      * @since 2.1\n      */\n-    public static String capitalize(String str, char[] delimiters) {\n+    public static String capitalize(String str, char... delimiters) {\n         int delimLen = (delimiters == null ? -1 : delimiters.length);\n         if (str == null || str.length() == 0 || delimLen == 0) {\n             return str;\n      * @return capitalized String, <code>null</code> if null String input\n      * @since 2.1\n      */\n-    public static String capitalizeFully(String str, char[] delimiters) {\n+    public static String capitalizeFully(String str, char... delimiters) {\n         int delimLen = (delimiters == null ? -1 : delimiters.length);\n         if (str == null || str.length() == 0 || delimLen == 0) {\n             return str;\n      * @see #capitalize(String)\n      * @since 2.1\n      */\n-    public static String uncapitalize(String str, char[] delimiters) {\n+    public static String uncapitalize(String str, char... delimiters) {\n         int delimLen = (delimiters == null ? -1 : delimiters.length);\n         if (str == null || str.length() == 0 || delimLen == 0) {\n             return str;\n      * @see #initials(String)\n      * @since 2.2\n      */\n-    public static String initials(String str, char[] delimiters) {\n+    public static String initials(String str, char... delimiters) {\n         if (str == null || str.length() == 0) {\n             return str;\n         }", "timestamp": 1269238609, "metainfo": ""}