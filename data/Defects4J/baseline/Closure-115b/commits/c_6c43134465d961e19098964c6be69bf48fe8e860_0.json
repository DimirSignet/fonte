{"sha": "6c43134465d961e19098964c6be69bf48fe8e860", "log": "Compute the correct length of THROW nodes. Fixes issue 1072 R=blickly", "commit": "\n--- a/lib/rhino/src/org/mozilla/javascript/Parser.java\n+++ b/lib/rhino/src/org/mozilla/javascript/Parser.java\n             reportError(\"msg.bad.throw.eol\");\n         }\n         AstNode expr = expr();\n-        ThrowStatement pn = new ThrowStatement(pos, getNodeEnd(expr), expr);\n+        ThrowStatement pn = new ThrowStatement(pos, getNodeEnd(expr) - pos, expr);\n         pn.setLineno(lineno);\n         return pn;\n     }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"required: string\");\n   }\n \n+  public void testIssue1072() throws Exception {\n+    testTypes(\n+        \"/**\\n\" +\n+        \" * @param {string} x\\n\" +\n+        \" * @return {number}\\n\" +\n+        \" */\\n\" +\n+        \"var f1 = function (x) {\\n\" +\n+        \"  return 3;\\n\" +\n+        \"};\\n\" +\n+        \"\\n\" +\n+        \"/** Function */\\n\" +\n+        \"var f2 = function (x) {\\n\" +\n+        \"  if (!x) throw new Error()\\n\" +\n+        \"  return /** @type {number} */ (f1('x'))\\n\" +\n+        \"}\\n\" +\n+        \"\\n\" +\n+        \"/**\\n\" +\n+        \" * @param {string} x\\n\" +\n+        \" */\\n\" +\n+        \"var f3 = function (x) {};\\n\" +\n+        \"\\n\" +\n+        \"f1(f3);\",\n+        \"actual parameter 1 of f1 does not match formal parameter\\n\" +\n+        \"found   : function (string): undefined\\n\" +\n+        \"required: string\");\n+  }\n+\n   public void testEnums() throws Exception {\n     testTypes(\n         \"var outer = function() {\" +", "timestamp": 1377878191, "metainfo": ""}