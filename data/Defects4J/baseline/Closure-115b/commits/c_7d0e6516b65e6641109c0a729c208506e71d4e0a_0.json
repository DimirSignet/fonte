{"sha": "7d0e6516b65e6641109c0a729c208506e71d4e0a", "log": "Only warn about missing goog.provides, if an outer object isn't provided in the same file.  R=nicksantos DELTA=20  (19 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4330   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckProvides.java\n+++ b/src/com/google/javascript/jscomp/CheckProvides.java\n \n     private void visitScriptNode(NodeTraversal t, Node n) {\n       for (Map.Entry<String, Node> ctorEntry : ctors.entrySet()) {\n-        if (!provides.containsKey(ctorEntry.getKey())) {\n+        String ctor = ctorEntry.getKey();\n+        int index = -1;\n+        boolean found = false;\n+        do {\n+          index = ctor.indexOf('.', index +1);\n+          String provideKey = index == -1 ? ctor : ctor.substring(0, index);\n+          if (provides.containsKey(provideKey)) {\n+            found = true;\n+            break;\n+          }\n+        } while (index != -1);\n+\n+        if (!found) {\n           compiler.report(\n               t.makeError(ctorEntry.getValue(), checkLevel,\n                   MISSING_PROVIDE_WARNING, ctorEntry.getKey()));\n--- a/test/com/google/javascript/jscomp/CheckProvidesTest.java\n+++ b/test/com/google/javascript/jscomp/CheckProvidesTest.java\n     testSame(js);\n   }\n \n+  public void testNoProvideInnerClass() {\n+    testSame(\n+        \"goog.provide('X');\\n\" +\n+        \"/** @constructor */ function X(){};\" +\n+        \"/** @constructor */ X.Y = function(){};\");\n+  }\n+\n   public void testMissingGoogProvide(){\n     String[] js = new String[]{\"/** @constructor */ X = function(){};\"};\n     String warning = \"missing goog.provide('X')\";", "timestamp": 1331064007, "metainfo": ""}