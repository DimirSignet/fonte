{"sha": "36a890d0dd7911a5a1b8e1682435945972a05cdc", "log": "Remove the --output_wrapper_marker flag. No one uses this, and it makes the API harder to understand.  R=acleung DELTA=26  (2 added, 23 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=409   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n   // Bookkeeping to measure optimal phase orderings.\n   private static final int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER = 100;\n \n+  private static final String OUTPUT_WRAPPER_MARKER = \"%output%\";\n+\n   private final RunTimeStats runTimeStats = new RunTimeStats();\n \n   AbstractCommandLineRunner() {\n     if (result.success) {\n       if (modules == null) {\n         writeOutput(out, compiler, compiler.toSource(), config.outputWrapper,\n-            config.outputWrapperMarker);\n+            OUTPUT_WRAPPER_MARKER);\n \n         // Output the source map if requested.\n         outputSourceMap(options);\n       return this;\n     }\n \n-    private String outputWrapperMarker = \"\";\n-\n-    /**\n-     * Use this token as output marker in the value of\n-     *  --output_wrapper\n-     */\n-    CommandLineConfig setOutputWrapperMarker(String outputWrapperMarker) {\n-      this.outputWrapperMarker = outputWrapperMarker;\n-      return this;\n-    }\n-\n     private final List<String> moduleWrapper = Lists.newArrayList();\n \n     /**\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n         + \" by the marker token %output%. See --output_wrapper_marker\")\n     private String output_wrapper = \"\";\n \n-    @Option(name = \"--output_wrapper_marker\",\n-        usage = \"Use this token as output marker in the value of\"\n-        + \" --output_wrapper\")\n-    private String output_wrapper_marker = \"%output%\";\n-\n     @Option(name = \"--module_wrapper\",\n         usage = \"An output wrapper for a javascript module (optional). \"\n         + \"The format is <name>:<wrapper>. The module name must correspond \"\n                new ClosureCodingConvention())\n           .setSummaryDetailLevel(flags.summary_detail_level)\n           .setOutputWrapper(flags.output_wrapper)\n-          .setOutputWrapperMarker(flags.output_wrapper_marker)\n           .setModuleWrapper(flags.module_wrapper)\n           .setModuleOutputPathPrefix(flags.module_output_path_prefix)\n           .setCreateSourceMap(flags.create_source_map)", "timestamp": 1296520050, "metainfo": ""}