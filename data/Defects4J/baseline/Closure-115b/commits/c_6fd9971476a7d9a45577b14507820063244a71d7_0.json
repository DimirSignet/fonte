{"sha": "6fd9971476a7d9a45577b14507820063244a71d7", "log": "Updates spec link of Quota API. Adds corresponding definitions to reflect changes starting from Chrome 27. (Chrome marked the old API deprecated but did not provide documentations for the new API yet.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48373834", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckMissingReturn.java\n+++ b/src/com/google/javascript/jscomp/CheckMissingReturn.java\n   /**\n    * Determines if the given scope should explicitly return. All functions\n    * with non-void or non-unknown return types must have explicit returns.\n-   * \n+   *\n    * Exception: Constructors which specifically specify a return type are\n    * used to allow invocation without requiring the \"new\" keyword. They\n    * have an implicit return type. See unit tests.\n-   * \n+   *\n    * @return If a return type is expected, returns it. Otherwise, returns null.\n    */\n   private JSType explicitReturnExpected(Node scope) {\n--- a/test/com/google/javascript/jscomp/CheckMissingReturnTest.java\n+++ b/test/com/google/javascript/jscomp/CheckMissingReturnTest.java\n   public void testConstructors() {\n     testSame(\"/** @constructor */ function foo() {} \");\n \n-    final String ConstructorWithReturn = \"/** @constructor \\n\" +\n+    final String constructorWithReturn = \"/** @constructor \\n\" +\n         \" * @return {!foo} */ function foo() {\" +\n         \" if (!(this instanceof foo)) { return new foo; } }\";\n-    testSame(ConstructorWithReturn);\n+    testSame(constructorWithReturn);\n   }\n \n   private static String createFunction(String returnType, String body) {", "timestamp": 1372185649, "metainfo": ""}