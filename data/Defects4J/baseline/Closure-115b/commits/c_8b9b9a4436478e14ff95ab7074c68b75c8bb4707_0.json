{"sha": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707", "log": "A better heuristic to determine if a type is declared or not  R=acleung DELTA=38  (36 added, 0 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2684   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n       // 5) ASSIGN to anything else\n       //\n       // 1, 3, and 4 are declarations, 5 is inferred, and 2 is a declaration iff\n-      // the function has not been declared before.\n+      // the function has jsdoc or has not been declared before.\n       //\n       // FUNCTION literals are special because TypedScopeCreator is very smart\n       // about getting as much type information as possible for them.\n         // Determining declaration for #2\n         inferred = !(rhsValue != null &&\n             rhsValue.getType() == Token.FUNCTION &&\n-            !scope.isDeclared(qName, false));\n+            (info != null || !scope.isDeclared(qName, false)));\n       }\n \n       if (!inferred) {\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n             \"initializing variable\\n\" +\n             \"found   : string\\n\" +\n             \"required: number\"));\n+  }\n+\n+  public void testDuplicateInstanceMethod1() throws Exception {\n+    // If there's no jsdoc on the methods, then we treat them like\n+    // any other inferred properties.\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"F.prototype.bar = function() {};\" +\n+        \"F.prototype.bar = function() {};\");\n+  }\n+\n+  public void testDuplicateInstanceMethod2() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"/** jsdoc */ F.prototype.bar = function() {};\" +\n+        \"/** jsdoc */ F.prototype.bar = function() {};\",\n+        \"variable F.prototype.bar redefined with type \" +\n+        \"function (this:F): undefined, original definition at \" +\n+        \"[testcode]:1 with type function (this:F): undefined\");\n+  }\n+\n+  public void testDuplicateInstanceMethod3() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"F.prototype.bar = function() {};\" +\n+        \"/** jsdoc */ F.prototype.bar = function() {};\",\n+        \"variable F.prototype.bar redefined with type \" +\n+        \"function (this:F): undefined, original definition at \" +\n+        \"[testcode]:1 with type function (this:F): undefined\");\n+  }\n+\n+  public void testDuplicateInstanceMethod4() throws Exception {\n+    testTypes(\n+        \"/** @constructor */ function F() {}\" +\n+        \"/** jsdoc */ F.prototype.bar = function() {};\" +\n+        \"F.prototype.bar = function() {};\");\n   }\n \n   public void testStubFunctionDeclaration1() throws Exception {", "timestamp": 1311198070, "metainfo": ""}