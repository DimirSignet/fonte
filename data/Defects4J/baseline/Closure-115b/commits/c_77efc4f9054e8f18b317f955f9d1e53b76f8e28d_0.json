{"sha": "77efc4f9054e8f18b317f955f9d1e53b76f8e28d", "log": "Automated g4 rollback.  *** Reason for rollback ***  Fixed  *** Original change description ***  Automated g4 rollback.  *** Reason for rollback ***  Partial rollback  *** Original change description ***  Advanced mode depends on source names being annotated on SCRIPT nodes to map them back to inputs in modules.  R=acleung DELTA=18  (16 added, 2 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1804   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AstValidator.java\n+++ b/src/com/google/javascript/jscomp/AstValidator.java\n   public void validateScript(Node n) {\n     validateNodeType(Token.SCRIPT, n);\n     validateIsSynthetic(n);\n+    validateHasSourceName(n);\n     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n       validateStatement(c);\n     }\n     }\n   }\n \n+  private void validateHasSourceName(Node n) {\n+    String sourceName = (String) n.getProp(Node.SOURCENAME_PROP);\n+    if (sourceName == null || sourceName.isEmpty()) {\n+      violation(\"Missing 'source name' annotation.\", n);\n+    }\n+  }\n+\n   private void validateLabel(Node n) {\n     validateNodeType(Token.LABEL, n);\n     validateChildCount(n, 2);\n--- a/src/com/google/javascript/jscomp/SourceFile.java\n+++ b/src/com/google/javascript/jscomp/SourceFile.java\n    *     appear in warning messages emitted by the compiler.\n    */\n   SourceFile(String fileName) {\n+    if (fileName == null || fileName.isEmpty()) {\n+      throw new IllegalArgumentException(\"a source must have a name\");\n+    }\n     this.fileName = fileName;\n     // Starting point: offset 0 is at line 1.\n     this.lastOffset = 0;\n--- a/test/com/google/javascript/jscomp/AstValidatorTest.java\n+++ b/test/com/google/javascript/jscomp/AstValidatorTest.java\n \n   public void testValidScript() {\n     Node n = new Node(Token.SCRIPT);\n+    expectInvalid(n, Check.SCRIPT);\n     n.setIsSyntheticBlock(true);\n+    expectInvalid(n, Check.SCRIPT);\n+    n.putProp(Node.SOURCENAME_PROP, \"something\");\n+    expectValid(n, Check.SCRIPT);\n+    expectInvalid(n, Check.STATEMENT);\n     expectInvalid(n, Check.EXPRESSION);\n-    expectInvalid(n, Check.STATEMENT);\n-    expectValid(n, Check.SCRIPT);\n   }\n \n   public void testValidStatement1() {", "timestamp": 1304977397, "metainfo": ""}