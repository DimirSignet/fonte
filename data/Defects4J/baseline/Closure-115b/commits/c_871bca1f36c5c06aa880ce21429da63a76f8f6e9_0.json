{"sha": "871bca1f36c5c06aa880ce21429da63a76f8f6e9", "log": "Rejigger type name printing. Fixes issue 1047 R=johnlenz", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeValidator.java\n+++ b/src/com/google/javascript/jscomp/TypeValidator.java\n    *     to an Object type, if possible.\n    */\n   String getReadableJSTypeName(Node n, boolean dereference) {\n+    JSType type = getJSType(n);\n+    if (dereference) {\n+      ObjectType dereferenced = type.dereference();\n+      if (dereferenced != null) {\n+        type = dereferenced;\n+      }\n+    }\n+\n+    // The best type name is the actual type name.\n+    if (type.isFunctionPrototypeType() ||\n+        (type.toObjectType() != null &&\n+         type.toObjectType().getConstructor() != null)) {\n+      return type.toString();\n+    }\n+\n     // If we're analyzing a GETPROP, the property may be inherited by the\n     // prototype chain. So climb the prototype chain and find out where\n     // the property was originally defined.\n       }\n     }\n \n-    JSType type = getJSType(n);\n-    if (dereference) {\n-      ObjectType dereferenced = type.dereference();\n-      if (dereferenced != null) {\n-        type = dereferenced;\n-      }\n-    }\n-\n     String qualifiedName = n.getQualifiedName();\n-    if (type.isFunctionPrototypeType() ||\n-        (type.toObjectType() != null &&\n-         type.toObjectType().getConstructor() != null)) {\n-      return type.toString();\n-    } else if (qualifiedName != null) {\n+    if (qualifiedName != null) {\n       return qualifiedName;\n     } else if (type.isFunctionType()) {\n       // Don't show complex function names.\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"required: string\");\n   }\n \n+  public void testIssue1047() throws Exception {\n+    testTypes(\n+        \"/**\\n\" +\n+        \" * @constructor\\n\" +\n+        \" */\\n\" +\n+        \"function C2() {}\\n\" +\n+        \"\\n\" +\n+        \"/**\\n\" +\n+        \" * @constructor\\n\" +\n+        \" */\\n\" +\n+        \"function C3(c2) {\\n\" +\n+        \"  /**\\n\" +\n+        \"   * @type {C2} \\n\" +\n+        \"   * @private\\n\" +\n+        \"   */\\n\" +\n+        \"  this.c2_;\\n\" +\n+        \"\\n\" +\n+        \"  var x = this.c2_.prop;\\n\" +\n+        \"}\",\n+        \"Property prop never defined on C2\");\n+  }\n+\n   public void testIssue1072() throws Exception {\n     testTypes(\n         \"/**\\n\" +", "timestamp": 1377900770, "metainfo": ""}