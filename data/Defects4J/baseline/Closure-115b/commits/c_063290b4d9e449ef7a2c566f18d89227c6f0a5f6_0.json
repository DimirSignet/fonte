{"sha": "063290b4d9e449ef7a2c566f18d89227c6f0a5f6", "log": "Infer return types of functions with only THROW statements.  R=johnlenz DELTA=3  (0 added, 1 deleted, 2 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=419   ", "commit": "\n--- a/src/com/google/javascript/jscomp/FunctionTypeBuilder.java\n+++ b/src/com/google/javascript/jscomp/FunctionTypeBuilder.java\n       while (!worklist.isEmpty()) {\n         Node current = worklist.remove(worklist.size() - 1);\n         int cType = current.getType();\n-        if (cType == Token.RETURN && current.getFirstChild() != null ||\n-            cType == Token.THROW) {\n+        if (cType == Token.RETURN && current.getFirstChild() != null) {\n           hasNonEmptyReturns = true;\n           break;\n         } else if (NodeUtil.isStatementBlock(current) ||\n--- a/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n+++ b/test/com/google/javascript/jscomp/TypedScopeCreatorTest.java\n   public void testReturnTypeInference4() {\n     testSame(\"function f() { throw Error(); }\");\n     assertEquals(\n-        \"function (): ?\",\n+        \"function (): undefined\",\n         findNameType(\"f\", globalScope).toString());\n   }\n ", "timestamp": 1296592226, "metainfo": ""}