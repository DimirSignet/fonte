{"sha": "a857aec27d79fc234fddd4a72c1215af0251b2d8", "log": "Treat the bottom function type as empty. Fixes issue 301.  R=johnlenz DELTA=16  (15 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=474   ", "commit": "\n--- a/src/com/google/javascript/rhino/jstype/JSType.java\n+++ b/src/com/google/javascript/rhino/jstype/JSType.java\n   }\n \n   public final boolean isEmptyType() {\n-    return isNoType() || isNoObjectType() || isNoResolvedType();\n+    return isNoType() || isNoObjectType() || isNoResolvedType() ||\n+        (registry.getNativeFunctionType(\n+             JSTypeNative.LEAST_FUNCTION_TYPE) == this);\n   }\n \n   public boolean isNumberObjectType() {\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"actual parameter 1 of f does not match formal parameter\\n\" +\n         \"found   : this.Date\\n\" +\n         \"required: number\");\n+  }\n+\n+  public void testIssue301() throws Exception {\n+    testTypes(\n+        \"Array.indexOf = function() {};\" +\n+        \"var s = 'hello';\" +\n+        \"alert(s.toLowerCase.indexOf('1'));\",\n+        \"Property indexOf never defined on String.prototype.toLowerCase\");\n   }\n \n   /**\n--- a/test/com/google/javascript/rhino/jstype/FunctionTypeTest.java\n+++ b/test/com/google/javascript/rhino/jstype/FunctionTypeTest.java\n     assertTrue(ctor.getInstanceType().isUnknownType());\n   }\n \n+  public void testEmptyFunctionTypes() {\n+    assertTrue(LEAST_FUNCTION_TYPE.isEmptyType());\n+    assertFalse(GREATEST_FUNCTION_TYPE.isEmptyType());\n+  }\n+\n   private void assertLeastSupertype(String s, JSType t1, JSType t2) {\n     assertEquals(s, t1.getLeastSupertype(t2).toString());\n     assertEquals(s, t2.getLeastSupertype(t1).toString());", "timestamp": 1297186811, "metainfo": ""}