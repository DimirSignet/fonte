{"sha": "7a0bb06d85735d901894cce2aff99251bcf67484", "log": "Fix class-file name mismatch.  R=nicksantos DELTA=6  (0 added, 0 deleted, 6 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1190006   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n       new PassFactory(\"optimizeCalls\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {\n-      OptimizeCallGraph passes = new OptimizeCallGraph(compiler);\n+      OptimizeCalls passes = new OptimizeCalls(compiler);\n       if (options.optimizeReturns) {\n         passes.addPass(new OptimizeReturns(compiler));\n       }\n--- a/src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java\n+++ b/src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java\n  *\n  */\n class DevirtualizePrototypeMethods\n-    implements OptimizeCallGraph.CallGraphCompilerPass,\n+    implements OptimizeCalls.CallGraphCompilerPass,\n                SpecializationAwareCompilerPass {\n   private final AbstractCompiler compiler;\n   private SpecializeModule.SpecializationState specializationState;\n--- a/src/com/google/javascript/jscomp/OptimizeCalls.java\n+++ b/src/com/google/javascript/jscomp/OptimizeCalls.java\n  * \n  * @author johnlenz@google.com (John Lenz)\n  */\n-class OptimizeCallGraph implements CompilerPass {\n+class OptimizeCalls implements CompilerPass {\n   List<CallGraphCompilerPass> passes = Lists.newArrayList();\n   private AbstractCompiler compiler;\n   \n-  OptimizeCallGraph(AbstractCompiler compiler) {\n+  OptimizeCalls(AbstractCompiler compiler) {\n     this.compiler = compiler;\n   }\n   \n-  OptimizeCallGraph addPass(CallGraphCompilerPass pass) {\n+  OptimizeCalls addPass(CallGraphCompilerPass pass) {\n     passes.add(pass);\n     return this;\n   }\n--- a/src/com/google/javascript/jscomp/OptimizeReturns.java\n+++ b/src/com/google/javascript/jscomp/OptimizeReturns.java\n  * @author johnlenz@google.com (John Lenz)\n  */\n public class OptimizeReturns\n-    implements OptimizeCallGraph.CallGraphCompilerPass, CompilerPass {\n+    implements OptimizeCalls.CallGraphCompilerPass, CompilerPass {\n \n   private AbstractCompiler compiler;\n ", "timestamp": 1289592041, "metainfo": ""}