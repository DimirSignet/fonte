{"sha": "46ac40646a39bd7aafde961695de777d725c0b7b", "log": "Make sure split optimization happens late.  Fixes issue 491.  R=nicksantos DELTA=14  (11 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2457   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {\n       return new PeepholeOptimizationsPass(compiler,\n-            new PeepholeSubstituteAlternateSyntax(true),\n+            new PeepholeSubstituteAlternateSyntax(false),\n             new PeepholeReplaceKnownMethods(),\n             new PeepholeRemoveDeadCode(),\n             new PeepholeFoldConstants(),\n \n   /** Same as peepholeOptimizations but aggressively merges code together */\n   final PassFactory latePeepholeOptimizations =\n-      new PassFactory(\"peepholeOptimizations\", false) {\n+      new PassFactory(\"latePeepholeOptimizations\", true) {\n     @Override\n     protected CompilerPass createInternal(AbstractCompiler compiler) {\n       return new PeepholeOptimizationsPass(compiler,\n             new StatementFusion(),\n             new PeepholeRemoveDeadCode(),\n-            new PeepholeSubstituteAlternateSyntax(false),\n+            new PeepholeSubstituteAlternateSyntax(true),\n             new PeepholeReplaceKnownMethods(),\n             new PeepholeFoldConstants());\n     }", "timestamp": 1309386363, "metainfo": ""}