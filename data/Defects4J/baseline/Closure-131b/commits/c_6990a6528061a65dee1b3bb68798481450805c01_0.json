{"sha": "6990a6528061a65dee1b3bb68798481450805c01", "log": "Fix edge case in UnreachableCodeElimination that causes infinite loop in optimization loop.  R=johnlenz DELTA=21  (21 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3144   ", "commit": "\n--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\n+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\n         break;\n     }\n \n+\n+    if (NodeUtil.isVar(n) && !n.getFirstChild().hasChildren()) {\n+      // Very Edge case, Consider this:\n+      // File 1: {throw 1}\n+      // File 2: {var x}\n+      // The node var x is unreachable in the global scope.\n+      // Before we remove the node, redeclareVarsInsideBranch\n+      // would basically move var x to the beginning of File 2,\n+      // which resulted in zero change in the AST but triggered\n+      // reportCodeChange().\n+      // Instead, we should just ignore dead variable declarations.\n+      return;\n+    }\n+\n     NodeUtil.redeclareVarsInsideBranch(n);\n     compiler.reportCodeChange();\n     if (logger.isLoggable(Level.FINE)) {\n--- a/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java\n+++ b/test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java\n         \" }\\n\" +\n         \"}\");\n   }\n+\n+  public void testIssue5215541_deadVarDeclar() {\n+    testSame(\"throw 1; var x\");\n+    testSame(\"throw 1; function x() {}\");\n+    testSame(\"throw 1; var x; var y;\");\n+    test(\"throw 1; var x = foo\", \"var x; throw 1\");\n+  }\n }", "timestamp": 1314386914, "metainfo": ""}