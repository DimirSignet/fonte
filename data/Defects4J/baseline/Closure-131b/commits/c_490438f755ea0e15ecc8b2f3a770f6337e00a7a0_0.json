{"sha": "490438f755ea0e15ecc8b2f3a770f6337e00a7a0", "log": "Emit an error if you try to define a prototype property before the type itself.  R=johnlenz DELTA=37  (23 added, 4 deleted, 10 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4893   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckGlobalNames.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalNames.java\n     // we're looking through each reference, check all the module dependencies.\n     Ref declaration = name.getDeclaration();\n     Name parent = name.parent;\n-    boolean singleGlobalParentDecl =\n-        parent != null &&\n-        parent.getDeclaration() != null &&\n-        parent.localSets == 0;\n \n     JSModuleGraph moduleGraph = compiler.getModuleGraph();\n     for (Ref ref : name.getRefs()) {\n           !moduleGraph.dependsOn(\n               ref.getModule(), declaration.getModule())) {\n         reportBadModuleReference(name, ref);\n-      } else if (ref.scope.isGlobal() &&\n-          singleGlobalParentDecl &&\n-          parent.getDeclaration().preOrderIndex > ref.preOrderIndex) {\n-        compiler.report(\n-            JSError.make(ref.source.getName(), ref.node,\n-                NAME_DEFINED_LATE_WARNING,\n-                name.getFullName(),\n-                parent.getFullName(),\n-                parent.getDeclaration().source.getName(),\n-                String.valueOf(parent.getDeclaration().node.getLineno())));\n+      } else {\n+        // Check for late references.\n+        if (ref.scope.isGlobal()) {\n+          // Prototype references are special, because in our reference graph,\n+          // A.prototype counts as a reference to A.\n+          boolean isPrototypeGet = (ref.type == Ref.Type.PROTOTYPE_GET);\n+          Name owner = isPrototypeGet ? name : parent;\n+          boolean singleGlobalParentDecl =\n+              owner != null &&\n+              owner.getDeclaration() != null &&\n+              owner.localSets == 0;\n+\n+          if (singleGlobalParentDecl &&\n+              owner.getDeclaration().preOrderIndex > ref.preOrderIndex) {\n+            String refName = isPrototypeGet\n+                ? name.getFullName() + \".prototype\"\n+                : name.getFullName();\n+            compiler.report(\n+                JSError.make(ref.source.getName(), ref.node,\n+                    NAME_DEFINED_LATE_WARNING,\n+                    refName,\n+                    owner.getFullName(),\n+                    owner.getDeclaration().source.getName(),\n+                    String.valueOf(owner.getDeclaration().node.getLineno())));\n+          }\n+        }\n       }\n     }\n   }\n--- a/test/com/google/javascript/jscomp/CheckGlobalNamesTest.java\n+++ b/test/com/google/javascript/jscomp/CheckGlobalNamesTest.java\n         NAME_DEFINED_LATE_WARNING);\n   }\n \n+  public void testLateDefinedName6() {\n+    testSame(\n+        \"var x = {}; x.y.prototype.z = 3;\" +\n+        \"/** @constructor */ x.y = function() {};\",\n+        NAME_DEFINED_LATE_WARNING);\n+  }\n+\n   public void testOkLateDefinedName1() {\n     testSame(\"function f() { x.y = {}; } var x = {};\");\n   }", "timestamp": 1338412193, "metainfo": ""}