{"sha": "417b5d9b1a0b4d3cb40c735da56493c35bf115b3", "log": "remove the function inlining assumptions option  R=johnlenz DELTA=30  (0 added, 29 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5754   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CompilationLevel.java\n+++ b/src/com/google/javascript/jscomp/CompilationLevel.java\n     options.setInlineVariables(Reach.LOCAL_ONLY);\n     options.flowSensitiveInlineVariables = true;\n     options.setInlineFunctions(Reach.LOCAL_ONLY);\n-    options.setAssumeClosuresOnlyCaptureReferences(true);\n     options.checkGlobalThisLevel = CheckLevel.OFF;\n     options.foldConstants = true;\n     options.coalesceVariableNames = true;\n     options.smartNameRemoval = true;\n     options.inlineConstantVars = true;\n     options.setInlineFunctions(Reach.ALL);\n-    options.setAssumeClosuresOnlyCaptureReferences(true);\n     options.inlineGetters = true;\n     options.setInlineVariables(Reach.ALL);\n     options.flowSensitiveInlineVariables = true;\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n \n   /** Inlines functions defined in local scopes */\n   public boolean inlineLocalFunctions;\n-\n-  /** More aggressive function inlining */\n-  boolean assumeClosuresOnlyCaptureReferences;\n \n   /** Inlines properties */\n   boolean inlineProperties;\n     inlineFunctions = false;\n     inlineLocalFunctions = false;\n     assumeStrictThis = false;\n-    assumeClosuresOnlyCaptureReferences = false;\n     inlineProperties = false;\n     crossModuleCodeMotion = false;\n     crossModuleMethodMotion = false;\n   }\n \n   /**\n-   * @return Whether assumeClosuresOnlyCaptureReferences is set.\n-   */\n-  public boolean assumeClosuresOnlyCaptureReferences() {\n-    return assumeClosuresOnlyCaptureReferences;\n-  }\n-\n-  /**\n-   * Whether to assume closures capture only what they reference. This allows\n-   * more aggressive function inlining.\n-   */\n-  public void setAssumeClosuresOnlyCaptureReferences(boolean enable) {\n-    this.assumeClosuresOnlyCaptureReferences = enable;\n-  }\n-\n-  /**\n    * Sets the list of properties that we report property invalidation errors\n    * for.\n    */\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n           enableBlockInlining,\n           options.assumeStrictThis()\n               || options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT,\n-          options.assumeClosuresOnlyCaptureReferences);\n+          true /* assumeMinimumCapture */);\n     }\n   };\n ", "timestamp": 1352148265, "metainfo": ""}