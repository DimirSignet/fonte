{"sha": "5254fe6ac0ef2363d760430c39788aceaed3f5af", "log": "Handle standard constructors that are also functions: \"new RegExp('foo')\" would get stripped but \"RegExp('foo')\" would not.  R=avd DELTA=7  (6 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=225429   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n     return true;\n   }\n \n+  // A list of built-in object creation or primitive type cast functions that\n+  // can also be called as constructors but lack side-effects.\n+  // TODO(johnlenz): consider adding an extern annotation for this.\n+  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =\n+      ImmutableSet.of(\n+          \"Object\", \"Array\", \"String\", \"Number\", \"Boolean\", \"RegExp\", \"Error\");\n   private static final Set<String> REGEXP_METHODS =\n       ImmutableSet.of(\"test\", \"exec\");\n   private static final Set<String> STRING_REGEXP_METHODS =\n     // Built-in functions with no side effects.\n     if (nameNode.getType() == Token.NAME) {\n       String name = nameNode.getString();\n-      if (name.equals(\"String\")) {\n+      if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {\n         return false;\n       }\n     } else if (nameNode.getType() == Token.GETPROP) {", "timestamp": 1284671005, "metainfo": ""}