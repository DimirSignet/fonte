{"sha": "be9ed0f15befec41d534206bf7e3e952e2420eb4", "log": "Use the forward slash on all platforms fixes issue 804  R=malteubl DELTA=12  (3 added, 1 deleted, 8 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5533   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n import com.google.javascript.rhino.IR;\n import com.google.javascript.rhino.Node;\n \n-import java.io.File;\n import java.net.URI;\n import java.net.URISyntaxException;\n import java.util.Set;\n  * ordering.\n  */\n public class ProcessCommonJSModules implements CompilerPass {\n-\n-  public static final String DEFAULT_FILENAME_PREFIX = \".\" + File.separator;\n+  // According to the spec, the forward slash should be the delimite on\n+  // all platforms.\n+  private static final String MODULE_SLASH = \"/\";\n+\n+  public static final String DEFAULT_FILENAME_PREFIX = \".\" + MODULE_SLASH;\n \n   private static final String MODULE_NAME_SEPARATOR = \"\\\\$\";\n   private static final String MODULE_NAME_PREFIX = \"module$\";\n   ProcessCommonJSModules(AbstractCompiler compiler, String filenamePrefix,\n       boolean reportDependencies) {\n     this.compiler = compiler;\n-    this.filenamePrefix = filenamePrefix.endsWith(File.separator) ?\n-        filenamePrefix : filenamePrefix + File.separator;\n+    this.filenamePrefix = filenamePrefix.endsWith(MODULE_SLASH) ?\n+        filenamePrefix : filenamePrefix + MODULE_SLASH;\n     this.reportDependencies = reportDependencies;\n   }\n \n    */\n   public static String toModuleName(String filename) {\n     return MODULE_NAME_PREFIX +\n-        filename.replaceAll(\"^\\\\.\" + Pattern.quote(File.separator), \"\")\n-            .replaceAll(Pattern.quote(File.separator), MODULE_NAME_SEPARATOR)\n+        filename.replaceAll(\"^\\\\.\" + Pattern.quote(MODULE_SLASH), \"\")\n+            .replaceAll(Pattern.quote(MODULE_SLASH), MODULE_NAME_SEPARATOR)\n             .replaceAll(\"\\\\.js$\", \"\").replaceAll(\"-\", \"_\");\n   }\n \n     requiredFilename = requiredFilename.replaceAll(\"\\\\.js$\", \"\");\n     currentFilename = currentFilename.replaceAll(\"\\\\.js$\", \"\");\n \n-    if (requiredFilename.startsWith(\".\" + File.separator) ||\n-        requiredFilename.startsWith(\"..\" + File.separator)) {\n+    if (requiredFilename.startsWith(\".\" + MODULE_SLASH) ||\n+        requiredFilename.startsWith(\"..\" + MODULE_SLASH)) {\n       try {\n         requiredFilename = (new URI(currentFilename)).resolve(new URI(requiredFilename))\n             .toString();", "timestamp": 1348263885, "metainfo": ""}