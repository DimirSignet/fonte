{"sha": "d635254c9acd4cfd3f4f205d01ed554c061a5ae1", "log": "Allow people to add @const to constructors in order to prevent them from being able to be subclassed. This will result in an error by default.  R=johnlenz DELTA=69 (69 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=6052   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CheckAccessControls.java\n+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java\n           \"JSC_PRIVATE_OVERRIDE\",\n           \"Overriding private property of {0}.\");\n \n+  static final DiagnosticType EXTEND_FINAL_CLASS =\n+      DiagnosticType.error(\n+          \"JSC_EXTEND_FINAL_CLASS\",\n+          \"{0} is not allowed to extend final class {1}.\");\n+\n   static final DiagnosticType VISIBILITY_MISMATCH =\n       DiagnosticType.disabled(\n           \"JSC_VISIBILITY_MISMATCH\",\n         break;\n       case Token.NEW:\n         checkConstructorDeprecation(t, n, parent);\n+        break;\n+      case Token.FUNCTION:\n+        checkFinalClassOverrides(t, n, parent);\n         break;\n     }\n   }\n                     name.getString(), varSrc.getName()));\n           }\n         }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Checks if a constructor is trying to override a final class.\n+   * @param t The current traversal.\n+   * @param name The name node.\n+   */\n+  private void checkFinalClassOverrides(NodeTraversal t, Node fn, Node parent) {\n+    JSType type = fn.getJSType().toMaybeFunctionType();\n+    if (type != null && type.isConstructor()) {\n+      JSType finalParentClass = getFinalParentClass(getClassOfMethod(fn, parent));\n+      if (finalParentClass != null) {\n+        compiler.report(\n+            t.makeError(fn, EXTEND_FINAL_CLASS,\n+                type.getDisplayName(), finalParentClass.getDisplayName()));\n       }\n     }\n   }\n   private static JSType dereference(JSType type) {\n     return type == null ? null : type.dereference();\n   }\n+\n+  /**\n+   * Returns the super class of the given type that has a constructor.\n+   */\n+  private JSType getFinalParentClass(JSType type) {\n+    if (type != null) {\n+      ObjectType iproto = ObjectType.cast(type).getImplicitPrototype();\n+      while (iproto != null && iproto.getConstructor() == null) {\n+        iproto = iproto.getImplicitPrototype();\n+      }\n+      if (iproto != null) {\n+        Node source = iproto.getConstructor().getSource();\n+        JSDocInfo jsDoc = source != null ? NodeUtil.getBestJSDocInfo(source) : null;\n+        if (jsDoc != null && jsDoc.isConstant()) {\n+          return iproto;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n }\n--- a/test/com/google/javascript/jscomp/CheckAccessControlsTest.java\n+++ b/test/com/google/javascript/jscomp/CheckAccessControlsTest.java\n import static com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_NAME_REASON;\n import static com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_PROP;\n import static com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_PROP_REASON;\n+import static com.google.javascript.jscomp.CheckAccessControls.EXTEND_FINAL_CLASS;\n import static com.google.javascript.jscomp.CheckAccessControls.PRIVATE_OVERRIDE;\n import static com.google.javascript.jscomp.CheckAccessControls.VISIBILITY_MISMATCH;\n \n         \" */ function B() {\" +\n         \"/** @const */ this.bar = 3;this.bar += 4;}\");\n   }\n+\n+  public void testFinalClassCannotBeSubclassed() {\n+    test(\n+        \"/**\\n\"\n+        + \" * @constructor\\n\"\n+        + \" * @const\\n\"\n+        + \" */ Foo = function() {};\\n\"\n+        + \"/**\\n\"\n+        + \" * @constructor\\n\"\n+        + \" * @extends {Foo}\\n*\"\n+        + \" */ Bar = function() {};\",\n+        null, EXTEND_FINAL_CLASS);\n+    test(\n+        \"/**\\n\"\n+        + \" * @constructor\\n\"\n+        + \" * @const\\n\"\n+        + \" */ function Foo() {};\\n\"\n+        + \"/**\\n\"\n+        + \" * @constructor\\n\"\n+        + \" * @extends {Foo}\\n*\"\n+        + \" */ function Bar() {};\",\n+        null, EXTEND_FINAL_CLASS);\n+  }\n }", "timestamp": 1357157198, "metainfo": ""}