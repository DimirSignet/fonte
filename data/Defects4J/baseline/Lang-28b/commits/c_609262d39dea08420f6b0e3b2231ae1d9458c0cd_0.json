{"sha": "609262d39dea08420f6b0e3b2231ae1d9458c0cd", "log": "LANG-445 - new method StringUtils.startsWithAny(String str, String[] searchStrs)  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n         }\n         return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());\n     }\n+    \n+    /**\n+     * <p>Check if a String starts with any of an array of specified strings.</p>\n+     * \n+     * <pre>\n+     * StringUtils.startsWithAny(null, null)      = false\n+     * StringUtils.startsWithAny(null, new String[] {\"abc\"})  = false\n+     * StringUtils.startsWithAny(\"abcxyz\", null)     = false\n+     * StringUtils.startsWithAny(\"abcxyz\", new String[] {\"\"}) = false\n+     * StringUtils.startsWithAny(\"abcxyz\", new String[] {\"abc\"}) = true\n+     * StringUtils.startsWithAny(\"abcxyz\", new String[] {null, \"xyz\", \"abc\"}) = true\n+     * </pre>\n+     *\n+     * @see java.lang.String#startsWithAny(String, String[])\n+     * @param string  the String to check, may be null\n+     * @param searchStrings the Strings to find, may be null or empty\n+     * @return <code>true</code> if the String starts with any of the the prefixes, case insensitive, or\n+     *  both <code>null</code>\n+     * @since 3.0\n+     */\n+    public static boolean startsWithAny(String string, String[] searchStrings) {\n+        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {\n+            return false;\n+        }\n+        for (int i = 0; i < searchStrings.length; i++) {\n+            String searchString = searchStrings[i];\n+            if (StringUtils.startsWith(string, searchString)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n \n     // endsWith\n     //-----------------------------------------------------------------------\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n         assertEquals(\"\", StringUtils.getCommonPrefix(new String[] {\"xyz\", \"abcde\"}));\n         assertEquals(\"i am a \", StringUtils.getCommonPrefix(new String[] {\"i am a machine\", \"i am a robot\"}));\n     }\n+        \n+    public void testStartsWithAny() {\n+        assertFalse(StringUtils.startsWithAny(null, null));\n+        assertFalse(StringUtils.startsWithAny(null, new String[] {\"abc\"}));\n+        assertFalse(StringUtils.startsWithAny(\"abcxyz\", null));\n+        assertFalse(StringUtils.startsWithAny(\"abcxyz\", new String[] {}));\n+        assertTrue(StringUtils.startsWithAny(\"abcxyz\", new String[] {\"abc\"}));\n+        assertTrue(StringUtils.startsWithAny(\"abcxyz\", new String[] {null, \"xyz\", \"abc\"}));\n+        assertFalse(StringUtils.startsWithAny(\"abcxyz\", new String[] {null, \"xyz\", \"abcd\"}));\n+    }\n  \n }", "timestamp": 1222073587, "metainfo": ""}