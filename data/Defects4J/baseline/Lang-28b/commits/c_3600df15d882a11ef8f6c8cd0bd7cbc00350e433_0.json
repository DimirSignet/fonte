{"sha": "3600df15d882a11ef8f6c8cd0bd7cbc00350e433", "log": "Fix internal raw types  ", "commit": "\n--- a/src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java\n+++ b/src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java\n         String extendedPattern = \"Name: {0,upper} \";\n         String pattern = extendedPattern + builtinsPattern;\n \n-        HashSet testLocales = new HashSet();\n+        HashSet<Locale> testLocales = new HashSet<Locale>();\n         testLocales.addAll(Arrays.asList(DateFormat.getAvailableLocales()));\n         testLocales.retainAll(Arrays.asList(NumberFormat.getAvailableLocales()));\n         testLocales.add(null);\n \n-        for (Iterator l = testLocales.iterator(); l.hasNext();) {\n-            Locale locale = (Locale) l.next();\n+        for (Iterator<Locale> l = testLocales.iterator(); l.hasNext();) {\n+            Locale locale = l.next();\n             MessageFormat builtins = createMessageFormat(builtinsPattern, locale);\n             String expectedPattern = extendedPattern + builtins.toPattern();\n             DateFormat df = null;\n--- a/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java\n     //-----------------------------------------------------------------------\n     public void testAppendAll_Collection() {\n         StrBuilder sb = new StrBuilder();\n-        sb.appendAll((Collection) null);\n+        sb.appendAll((Collection<?>) null);\n         assertEquals(\"\", sb.toString());\n \n         sb.clear();\n     //-----------------------------------------------------------------------\n     public void testAppendAll_Iterator() {\n         StrBuilder sb = new StrBuilder();\n-        sb.appendAll((Iterator) null);\n+        sb.appendAll((Iterator<?>) null);\n         assertEquals(\"\", sb.toString());\n \n         sb.clear();\n     //-----------------------------------------------------------------------\n     public void testAppendWithSeparators_Collection() {\n         StrBuilder sb = new StrBuilder();\n-        sb.appendWithSeparators((Collection) null, \",\");\n+        sb.appendWithSeparators((Collection<?>) null, \",\");\n         assertEquals(\"\", sb.toString());\n \n         sb.clear();\n     //-----------------------------------------------------------------------\n     public void testAppendWithSeparators_Iterator() {\n         StrBuilder sb = new StrBuilder();\n-        sb.appendWithSeparators((Iterator) null, \",\");\n+        sb.appendWithSeparators((Iterator<?>) null, \",\");\n         assertEquals(\"\", sb.toString());\n \n         sb.clear();\n--- a/src/test/org/apache/commons/lang/time/DateFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateFormatUtilsTest.java\n     //-----------------------------------------------------------------------\n     public void testConstructor() {\n         assertNotNull(new DateFormatUtils());\n-        Constructor[] cons = DateFormatUtils.class.getDeclaredConstructors();\n+        Constructor<?>[] cons = DateFormatUtils.class.getDeclaredConstructors();\n         assertEquals(1, cons.length);\n         assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n         assertEquals(true, Modifier.isPublic(DateFormatUtils.class.getModifiers()));", "timestamp": 1256401033, "metainfo": ""}