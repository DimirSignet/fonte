{"sha": "3b2dfcafe31cc8eb0612ce223bdec77c842c0a89", "log": "LANG-310 - BooleanUtils isNotTrue/isNotFalse  ", "commit": "\n--- a/src/java/org/apache/commons/lang/BooleanUtils.java\n+++ b/src/java/org/apache/commons/lang/BooleanUtils.java\n     // boolean Boolean methods\n     //-----------------------------------------------------------------------\n     /**\n-     * <p>Is a Boolean value <code>true</code>, handling <code>null</code>.</p>\n+     * <p>Checks if a <code>Boolean</code> value is <code>true</code>,\n+     * handling <code>null</code> by returning <code>false</code>.</p>\n      *\n      * <pre>\n      *   BooleanUtils.isTrue(Boolean.TRUE)  = true\n      *   BooleanUtils.isTrue(null)          = false\n      * </pre>\n      *\n-     * @param bool  the boolean to convert\n+     * @param bool  the boolean to check, null returns <code>false</code>\n      * @return <code>true</code> only if the input is non-null and true\n      * @since 2.1\n      */\n     }\n \n     /**\n-     * <p>Is a Boolean value <code>false</code>, handling <code>null</code>.</p>\n+     * <p>Checks if a <code>Boolean</code> value is <i>not</i> <code>true</code>,\n+     * handling <code>null</code> by returning <code>true</code>.</p>\n+     *\n+     * <pre>\n+     *   BooleanUtils.isNotTrue(Boolean.TRUE)  = false\n+     *   BooleanUtils.isNotTrue(Boolean.FALSE) = true\n+     *   BooleanUtils.isNotTrue(null)          = true\n+     * </pre>\n+     *\n+     * @param bool  the boolean to check, null returns <code>true</code>\n+     * @return <code>true</code> if the input is null or false\n+     * @since 2.3\n+     */\n+    public static boolean isNotTrue(Boolean bool) {\n+        return !isTrue(bool);\n+    }\n+\n+    /**\n+     * <p>Checks if a <code>Boolean</code> value is <code>false</code>,\n+     * handling <code>null</code> by returning <code>false</code>.</p>\n      *\n      * <pre>\n      *   BooleanUtils.isFalse(Boolean.TRUE)  = false\n      *   BooleanUtils.isFalse(null)          = false\n      * </pre>\n      *\n-     * @param bool  the boolean to convert\n+     * @param bool  the boolean to check, null returns <code>false</code>\n      * @return <code>true</code> only if the input is non-null and false\n      * @since 2.1\n      */\n         return bool.booleanValue() ? false : true;\n     }\n \n+    /**\n+     * <p>Checks if a <code>Boolean</code> value is <i>not</i> <code>false</code>,\n+     * handling <code>null</code> by returning <code>true</code>.</p>\n+     *\n+     * <pre>\n+     *   BooleanUtils.isNotTrue(Boolean.TRUE)  = true\n+     *   BooleanUtils.isNotTrue(Boolean.FALSE) = false\n+     *   BooleanUtils.isNotTrue(null)          = true\n+     * </pre>\n+     *\n+     * @param bool  the boolean to check, null returns <code>true</code>\n+     * @return <code>true</code> if the input is null or true\n+     * @since 2.3\n+     */\n+    public static boolean isNotFalse(Boolean bool) {\n+        return !isFalse(bool);\n+    }\n+\n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Boolean factory that avoids creating new Boolean objecs all the time.</p>\n      * \n--- a/src/test/org/apache/commons/lang/BooleanUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/BooleanUtilsTest.java\n         assertEquals(false, BooleanUtils.isTrue((Boolean) null));\n     }\n \n+    public void test_isNotTrue_Boolean() {\n+        assertEquals(false, BooleanUtils.isNotTrue(Boolean.TRUE));\n+        assertEquals(true, BooleanUtils.isNotTrue(Boolean.FALSE));\n+        assertEquals(true, BooleanUtils.isNotTrue((Boolean) null));\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void test_isFalse_Boolean() {\n         assertEquals(false, BooleanUtils.isFalse(Boolean.TRUE));\n         assertEquals(true, BooleanUtils.isFalse(Boolean.FALSE));\n         assertEquals(false, BooleanUtils.isFalse((Boolean) null));\n+    }\n+\n+    public void test_isNotFalse_Boolean() {\n+        assertEquals(true, BooleanUtils.isNotFalse(Boolean.TRUE));\n+        assertEquals(false, BooleanUtils.isNotFalse(Boolean.FALSE));\n+        assertEquals(true, BooleanUtils.isNotFalse((Boolean) null));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1167869413, "metainfo": ""}