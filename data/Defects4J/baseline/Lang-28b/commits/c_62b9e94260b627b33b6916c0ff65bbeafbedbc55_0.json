{"sha": "62b9e94260b627b33b6916c0ff65bbeafbedbc55", "log": "Replacing the optimisation for LANG-287.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n      * @return A new escaped <code>String</code>.\n      */\n     public String unescape(String str) {\n-        StringWriter stringWriter = createStringWriter(str);\n-        try {\n-            this.unescape(stringWriter, str);\n-        } catch (IOException e) {\n-            // This should never happen because ALL the StringWriter methods called by #escape(Writer, String) do not\n-            // throw IOExceptions.\n-            throw new UnhandledException(e);\n-        }\n-        return stringWriter.toString();\n+        int firstAmp = str.indexOf('&');\n+        if (firstAmp < 0) {\n+            return str;\n+        } else {\n+            StringWriter stringWriter = createStringWriter(str);\n+            try {\n+                this.doUnescape(stringWriter, str, firstAmp);\n+            } catch (IOException e) {\n+                // This should never happen because ALL the StringWriter methods called by #escape(Writer, String) do not\n+                // throw IOExceptions.\n+                throw new UnhandledException(e);\n+            }\n+            return stringWriter.toString();\n+        }\n     }\n \n     private StringWriter createStringWriter(String str) {\n         if (firstAmp < 0) {\n             writer.write(string);\n             return;\n-        }\n-\n+        } else {\n+            doUnescape(writer, string, firstAmp);\n+        }\n+    }\n+\n+    private void doUnescape(Writer writer, String string, int firstAmp) throws IOException {\n         writer.write(string, 0, firstAmp);\n         int len = string.length();\n         for (int i = firstAmp; i < len; i++) {", "timestamp": 1170800757, "metainfo": ""}