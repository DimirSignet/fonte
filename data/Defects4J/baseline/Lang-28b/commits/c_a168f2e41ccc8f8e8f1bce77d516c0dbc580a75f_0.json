{"sha": "a168f2e41ccc8f8e8f1bce77d516c0dbc580a75f", "log": "Javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n package org.apache.commons.lang;\n \n /**\n- * <p>Common <code>System</code> class helpers.</p>\n+ * <p>Helpers for <code>java.lang.System</code>.</p>\n  * \n- * <p>If a particular system property cannot be read due to security\n- * restrictions, the field will return <code>null</code>.</p>\n+ * <p>If a system property cannot be read due to security restrictions, \n+ * the corresponding field in this class will be set to <code>null</code>\n+ * and a message will be written to <code>System.err</code>.</p>\n  *\n  * @author Based on code from Avalon Excalibur\n  * @author Based on code from Lucene\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Michael Becke\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.14 2003/05/30 01:15:53 ggregory Exp $\n+ * @version $Id: SystemUtils.java,v 1.15 2003/05/31 01:02:33 ggregory Exp $\n  */\n public class SystemUtils {\n \n      * <p>File encoding, such as <code>Cp1252</code>.</p>\n      * \n      * <p>Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.</p>\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java version 1.2.\n      */\n      * File separator (\"/\" on UNIX).\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java version 1.1.\n      */\n     /**\n      * Is <code>true</code> if this is Java version 1.1 (also 1.1.x versions).\n      * <p>\n-     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return false if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");\n \n     /**\n      * Is <code>true</code> if this is Java version 1.2 (also 1.2.x versions).\n      * <p>\n-     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return false if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");\n \n     /**\n      * Is <code>true</code> if this is Java version 1.3 (also 1.3.x versions).\n      * <p>\n-     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return false if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");\n \n     /**\n      * Is <code>true</code> if this is Java version 1.4 (also 1.4.x versions).\n      * <p>\n-     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return false if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");\n \n     /**\n      * Is <code>true</code> if this is Java version 1.5 (also 1.5.x versions).\n      * <p>\n-     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return false if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");\n \n     /**\n      * Is <code>true</code> if this is AIX.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_AIX = getOSMatches(\"AIX\");\n \n     /**\n      * Is <code>true</code> if this is HP-UX.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_HP_UX = getOSMatches(\"HP-UX\");\n \n     /**\n      * Is <code>true</code> if this is Irix.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_IRIX = getOSMatches(\"Irix\");\n \n     /**\n      * Is <code>true</code> if this is Linux.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_LINUX = getOSMatches(\"Linux\") || getOSMatches(\"LINUX\");\n     // Windows XP returns 'Windows 2000' just for fun...\n     /**\n      * Is <code>true</code> if this is Mac.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_MAC = getOSMatches(\"Mac\");\n \n     /**\n      * Is <code>true</code> if this is Mac.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_MAC_OSX = getOSMatches(\"Mac OS X\");\n \n     /**\n      * Is <code>true</code> if this is Mac.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_OS2 = getOSMatches(\"OS/2\");\n \n     /**\n      * Is <code>true</code> if this is Solaris.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_SOLARIS = getOSMatches(\"Solaris\");\n \n     /**\n      * Is <code>true</code> if this is SunOS.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_SUN_OS = getOSMatches(\"SunOS\");\n \n     /**\n      * Is <code>true</code> if this is Windows.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS = getOSMatches(\"Windows\");\n \n     /**\n      * Is <code>true</code> if this is Windows 2000.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(\"Windows\", \"5.0\");\n \n     /**\n      * Is <code>true</code> if this is Windows 95.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_95 = getOSMatches(\"Windows 9\", \"4.0\");\n     // JDK 1.2 running on Windows98 returns 'Windows 95', hence the above\n     /**\n      * Is <code>true</code> if this is Windows 98.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_98 = getOSMatches(\"Windows 9\", \"4.1\");\n     // JDK 1.2 running on Windows98 returns 'Windows 95', hence the above\n     /**\n      * Is <code>true</code> if this is Windows ME.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_ME = getOSMatches(\"Windows\", \"4.9\");\n     // JDK 1.2 running on WindowsME may return 'Windows 95', hence the above\n     /**\n      * Is <code>true</code> if this is Windows NT.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_NT = getOSMatches(\"Windows NT\");\n     // Windows 2000 returns 'Windows 2000' but may suffer from same JDK1.2 problem\n     /**\n      * Is <code>true</code> if this is Windows XP.\n      * <p>\n-     * The field will return false if <code>OS_NAME</code> is <code>null</code>.\n+     * The field will return false if <code>OS_NAME</code> is <code>null</code>.</p>\n      */\n     public static final boolean IS_OS_WINDOWS_XP = getOSMatches(\"Windows\", \"5.1\");\n \n      * Java class path.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java version 1.1.\n      */\n      * Java class format version number.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java version 1.1.\n      */\n      * First in JDK version 1.2. Not used in Sun JDKs after 1.2.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java version 1.2. Not used in Sun versions after 1.2.\n      */\n      * Path of extension directory or directories.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.3\n      */\n      * Java installation directory.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Default temp file path.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * List of paths to search when loading libraries.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Runtime Environment name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.3\n      */\n      * Java Runtime Environment version.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.3\n      */\n      * Java Runtime Environment specification name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Runtime Environment specification vendor.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Runtime Environment specification version.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.3\n      */\n      * Java vendor-specific string.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Java vendor URL.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n       * \n      * @since Java 1.1\n     */\n      * Java version number.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n     //-----------------------------------------------------------------------\n     /**\n      * Gets the Java version as a <code>float</code>.\n-     * Example output:\n+     * <p>Example return values:</p>\n      * <ul>\n      *  <li><code>1.2f</code> for JDK 1.2\n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * <p>\n-     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return zero if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();\n \n     /**\n      * Gets the Java version as an <code>int</code>.\n-     * Example output:\n+     * <p>Example return values:</p>\n      * <ul>\n      *  <li><code>120</code> for JDK 1.2\n      *  <li><code>131</code> for JDK 1.3.1\n      * </ul>\n      * <p>\n-     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     * The field will return zero if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      */\n     public static final int JAVA_VERSION_INT = getJavaVersionAsInt();\n \n      * Java Virtual Machine implementation info.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine implementation name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine specification name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine specification vendor.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine specification version.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine implementation vendor.\n       * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Java Virtual Machine implementation version.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * Line separator (\"\\n\" on UNIX).\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Operating system architecture.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Operating system name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Operating system version.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Path separator (\":\" on UNIX).\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * Renamed to <code>user.country</code> in 1.4\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * User's current working directory.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * User's home directory.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n      * User's language code, such as 'en'.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.2\n      */\n      * User's account name.\n      * <p>\n      * Defaults to <code>null</code> if the runtime does not have\n-     * security access to read this property or property not specified.\n+     * security access to read this property or the property does not exist.</p>\n      * \n      * @since Java 1.1\n      */\n \n     //-----------------------------------------------------------------------    \n     /**\n-     * <p>Get the Java version number as a <code>float</code>.</p>\n+     * <p>Gets the Java version number as a <code>float</code>.</p>\n      *\n-     * <P>Example output:</p>\n+     * <p>Example return values:</p>\n      * <ul>\n      *  <li><code>1.2f</code> for JDK 1.2\n      *  <li><code>1.31f</code> for JDK 1.3.1\n     }\n \n     /**\n-     * <p>Get the Java version number as a <code>float</code>.</p>\n+     * <p>Gets the Java version number as a <code>float</code>.</p>\n      *\n-     * <p>Example output:</p>\n+     * <p>Example return values:</p>\n      * <ul>\n      *  <li><code>1.2f</code> for JDK 1.2\n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * \n      * <p>Patch releases are not reported.\n-     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * Zero is returned if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      * \n      * @return the version, for example 1.31f for JDK 1.3.1\n      */\n     }\n     \n     /**\n-     * <p>Get the Java version number as an <code>int</code>.</p>\n+     * <p>Gets the Java version number as an <code>int</code>.</p>\n      *\n-     * <p>Example output:</p>\n+     * <p>Example return values:</p>\n      * <ul>\n      *  <li><code>120</code> for JDK 1.2\n      *  <li><code>131</code> for JDK 1.3.1\n      * </ul>\n      * \n      * <p>Patch releases are not reported.\n-     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * Zero is returned if {@link #JAVA_VERSION} is <code>null</code>.</p>\n      * \n      * @return the version, for example 131 for JDK 1.3.1\n      */\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Gets a System property, defaulting to the given value if the property \n-     * cannot be read.\n+     * Gets a System property, defaulting to <code>null</code> if the property \n+     * cannot be read. If a <code>SecurityException</code> is caught, the return\n+     * value is <code>null</code> and a message is written to <code>System.err</code>.\n      * \n      * @param property the system property name\n-     * @return the system property value or <code>null</code> if security problem\n+     * @return the system property value or <code>null</code> if a security problem occurs\n      */\n     private static String getSystemProperty(String property) {\n         try {\n             return System.getProperty(property);\n-            \n         } catch (SecurityException ex) {\n             // we are not allowed to look at this property\n             System.err.println(\n-                \"SecurityException thrown when reading system property '\" + property \n-                + \"' - property value will default to null\"\n+                \"Caught a SecurityException reading the system property '\" + property \n+                + \"'; the SystemUtils property value will default to null.\"\n             );\n             return null;\n         }", "timestamp": 1054342953, "metainfo": ""}