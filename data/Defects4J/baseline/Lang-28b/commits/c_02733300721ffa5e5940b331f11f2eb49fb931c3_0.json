{"sha": "02733300721ffa5e5940b331f11f2eb49fb931c3", "log": "Adding Java5 EnumUtils class with getEnumMap method. LANG-290  ", "commit": "\n--- /dev/null\n+++ b/src/java/org/apache/commons/lang/EnumUtils.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.lang;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.LinkedHashMap;\n+import java.util.EnumSet;\n+\n+/**\n+ * Utility library to provide helper methods for Java enums. \n+ */\n+public class EnumUtils {\n+    \n+    /**\n+     * Constructor. This class should not normally be instantiated.\n+     */\n+    public EnumUtils() {\n+    }\n+\n+    /**\n+     * <p>Gets the <code>Map</code> of <code>enums</code> by name.</p>\n+     *\n+     * @param enumClass the class of the <code>enum</code> to get\n+     * @return the enum Map\n+     */\n+    public static Map getEnumMap(Class enumClass) {\n+        Map map = new LinkedHashMap();\n+        Iterator itr = EnumSet.allOf(enumClass).iterator();\n+        while(itr.hasNext()) { Enum enm = (Enum) itr.next(); map.put( enm.name(), enm ); }\n+        return map;\n+    }\n+    \n+}\n--- /dev/null\n+++ b/src/test/org/apache/commons/lang/EnumUtilsTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.lang;\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+public class EnumUtilsTest extends TestCase {\n+\n+    public static Test suite() {\n+        TestSuite suite = new TestSuite(EnumUtilsTest.class);\n+        suite.setName(\"EnumUtils Tests\");\n+        return suite;\n+    }\n+\n+    public void testGetEnumMap() {\n+        try {\n+            EnumUtils.getEnumMap(null);\n+            fail(\"NullPointerException expected\");\n+        } catch(NullPointerException npe) {\n+            // expected\n+        }\n+        try {\n+            EnumUtils.getEnumMap(getClass());\n+            fail(\"ClassCastException expected\");\n+        } catch(ClassCastException cce) {\n+            // expected\n+        }\n+        String toString = EnumUtils.getEnumMap(Traffic.class).toString(); \n+        assertEquals( \"getEnumMap not created correctly\", \"{RED=RED, AMBER=AMBER, GREEN=GREEN}\", toString);\n+    }\n+\n+}\n+\n+enum Traffic {\n+    RED, AMBER, GREEN\n+}\n--- a/src/test/org/apache/commons/lang/LangTestSuite.java\n+++ b/src/test/org/apache/commons/lang/LangTestSuite.java\n         suite.addTest(CharUtilsTest.suite());\n         suite.addTest(ClassUtilsTest.suite());\n         suite.addTest(EntitiesTest.suite());\n+        suite.addTest(EnumUtilsTest.suite());\n         suite.addTest(IllegalClassExceptionTest.suite());\n         suite.addTest(IncompleteArgumentExceptionTest.suite());\n         suite.addTest(IntHashMapTest.suite());", "timestamp": 1236476277, "metainfo": ""}