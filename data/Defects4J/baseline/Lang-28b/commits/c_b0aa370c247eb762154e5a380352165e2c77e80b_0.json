{"sha": "b0aa370c247eb762154e5a380352165e2c77e80b", "log": "Applying Ivan Bilenjkij's patch from LANG-513, improving the generics of the getEnumMap method  ", "commit": "\n--- a/src/java/org/apache/commons/lang/EnumUtils.java\n+++ b/src/java/org/apache/commons/lang/EnumUtils.java\n      * @param enumClass the class of the <code>enum</code> to get\n      * @return the enum Map\n      */\n-    public static Map<String, Enum<?>> getEnumMap(Class enumClass) {\n-        Map<String, Enum<?>> map = new LinkedHashMap<String, Enum<?>>();\n-        Iterator<? extends Enum<?>> itr = EnumSet.allOf(enumClass).iterator();\n-        while(itr.hasNext()) { Enum<?> enm = itr.next(); map.put( enm.name(), enm ); }\n+    public static <E extends Enum<E>> Map<String, Enum<E>> getEnumMap(Class<E> enumClass) {\n+        Map<String, Enum<E>> map = new LinkedHashMap<String, Enum<E>>();\n+\n+        for (E e: EnumSet.allOf(enumClass)) {\n+            map.put(e.name(), e);\n+        }\n+\n         return map;\n     }\n     \n--- a/src/test/org/apache/commons/lang/EnumUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/EnumUtilsTest.java\n     }\n \n     public void testGetEnumMap() {\n-        try {\n-            EnumUtils.getEnumMap(null);\n-            fail(\"NullPointerException expected\");\n-        } catch(NullPointerException npe) {\n-            // expected\n-        }\n-        try {\n-            EnumUtils.getEnumMap(getClass());\n-            fail(\"ClassCastException expected\");\n-        } catch(ClassCastException cce) {\n-            // expected\n-        }\n         String toString = EnumUtils.getEnumMap(Traffic.class).toString(); \n         assertEquals( \"getEnumMap not created correctly\", \"{RED=RED, AMBER=AMBER, GREEN=GREEN}\", toString);\n     }", "timestamp": 1247035502, "metainfo": ""}