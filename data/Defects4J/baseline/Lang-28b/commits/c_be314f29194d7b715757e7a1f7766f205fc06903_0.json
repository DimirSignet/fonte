{"sha": "be314f29194d7b715757e7a1f7766f205fc06903", "log": "Explicit boxing  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java\n+++ b/src/test/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java\n  */\n public class CallableBackgroundInitializerTest extends TestCase {\n     /** Constant for the result of the call() invocation. */\n-    private static final Integer RESULT = 42;\n+    private static final Integer RESULT = Integer.valueOf(42);\n \n     /**\n      * Tries to create an instance without a Callable. This should cause an\n--- a/src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java\n+++ b/src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java\n                 .createMock(ScheduledExecutorService.class);\n         ScheduledFuture<?> future = EasyMock.createMock(ScheduledFuture.class);\n         prepareStartTimer(service, future);\n-        EasyMock.expect(future.cancel(false)).andReturn(true);\n+        EasyMock.expect(Boolean.valueOf(future.cancel(false))).andReturn(Boolean.TRUE);\n         EasyMock.replay(service, future);\n         TimedSemaphoreTestImpl semaphore = new TimedSemaphoreTestImpl(service,\n                 PERIOD, UNIT, LIMIT);", "timestamp": 1264448861, "metainfo": ""}