{"sha": "da0612b348fcfa7679b92a5e9b8e1603e8e2da3a", "log": "isNumber(String) and createNumber(String) both modified to support \"2.\". LANG-521  ", "commit": "\n--- a/src/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang3/math/NumberUtils.java\n             }\n             dec = null;\n         }\n-        if (!Character.isDigit(lastChar)) {\n+        if (!Character.isDigit(lastChar) && lastChar != '.') {\n             if (expPos > -1 && expPos < str.length() - 1) {\n                 exp = str.substring(expPos + 1, str.length() - 1);\n             } else {\n                 // can't have an E at the last byte\n                 return false;\n             }\n+            if (chars[i] == '.') {\n+                if (hasDecPoint || hasExp) {\n+                    // two decimal points or dec in exponent\n+                    return false;\n+                }\n+                // single trailing decimal point after non-exponent is ok\n+                return foundDigit;\n+            }\n             if (!allowSigns\n                 && (chars[i] == 'd'\n                     || chars[i] == 'D'\n--- a/src/test/org/apache/commons/lang3/math/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang3/math/NumberUtilsTest.java\n                 .createNumber(\"10\" + Integer.MAX_VALUE));\n         assertEquals(\"createNumber(String) 18 failed\", new BigInteger(\"10\" + Long.MAX_VALUE), NumberUtils\n                 .createNumber(\"10\" + Long.MAX_VALUE));\n+\n+        // LANG-521\n+        assertEquals(\"createNumber(String) LANG-521 failed\", new Float(\"2.\"), NumberUtils.createNumber(\"2.\"));\n     }\n \n     public void testCreateFloat() {\n         assertTrue(\"isNumber(String) 24 Neg failed\", !NumberUtils.isNumber(val));\n         assertTrue(\"isNumber(String)/createNumber(String) 24 Neg failed\", !checkCreateNumber(val));\n \n+        // LANG-521\n+        val = \"2.\";\n+        assertTrue(\"isNumber(String) LANG-521 failed\", NumberUtils.isNumber(val));\n     }\n \n     private boolean checkCreateNumber(String val) {", "timestamp": 1261464762, "metainfo": ""}