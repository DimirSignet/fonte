{"sha": "f70742f8dfc04485dbb2cbaffda0311859265a5a", "log": "-Make smart name removal understand function declarations that look like: var a = cond ? function() {...} : function() {...} -Now compiling closure/array by itself ends up with a zero sized output.  R=nicksantos DELTA=47  (47 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=278   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n     // declaration or assignment.\n     Node parent = function.getParent();\n     if (parent != null) {\n+      // Account for functions defined in the form:\n+      //   var a = cond ? function a() {} : function b() {};\n+      while (parent.getType() == Token.HOOK) {\n+        parent = parent.getParent();\n+      }\n+\n       if (parent.getType() == Token.NAME) {\n         return scopes.get(parent);\n       }\n--- a/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n+++ b/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n          \"\");\n   }\n \n+  public void testRhsAssignWithHook1() {\n+    testSame(\"function Foo(){} var foo = null;\" +\n+        \"var f = window.a ? \" +\n+        \"    function () {return new Foo()} : function () {return foo}; f()\");\n+  }\n+\n+  public void testRhsAssignWithHook2() {\n+    test(\"function Foo(){} var foo = null;\" +\n+        \"var f = window.a ? \" +\n+        \"    function () {return new Foo()} : function () {return foo};\",\n+        \"\");\n+  }\n+\n+  public void testRhsAssignWithHook3() {\n+    testSame(\"function Foo(){} var foo = null; var f = {};\" +\n+        \"f.b = window.a ? \" +\n+        \"    function () {return new Foo()} : function () {return foo}; f.b()\");\n+  }\n+\n+  public void testRhsAssignWithHook4() {\n+    test(\"function Foo(){} var foo = null; var f = {};\" +\n+        \"f.b = window.a ? \" +\n+        \"    function () {return new Foo()} : function () {return foo};\",\n+        \"\");\n+  }\n+\n+  public void testRhsAssignWithHook5() {\n+    testSame(\"function Foo(){} var foo = null; var f = {};\" +\n+        \"f.b = window.a ? function () {return new Foo()} :\" +\n+        \"    window.b ? function () {return foo} :\" +\n+        \"    function() { return Foo }; f.b()\");\n+  }\n+\n+  public void testRhsAssignWithHook6() {\n+    test(\"function Foo(){} var foo = null; var f = {};\" +\n+        \"f.b = window.a ? function () {return new Foo()} :\" +\n+        \"    window.b ? function () {return foo} :\" +\n+        \"    function() { return Foo };\",\n+        \"\");\n+  }\n+\n   public void testNestedAssign1() {\n     test(\"var a, b = a = 1, c = 2\", \"\");\n   }", "timestamp": 1294947515, "metainfo": ""}