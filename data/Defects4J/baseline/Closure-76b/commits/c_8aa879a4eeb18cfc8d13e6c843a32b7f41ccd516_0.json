{"sha": "8aa879a4eeb18cfc8d13e6c843a32b7f41ccd516", "log": "Change on 2010/06/03 by nicksantos  \tFor dangerous 'this' checking, allow prototype methods declared \twith GETELEM. \tFixes issue 125.  \tR=acleung \tDELTA=15  (11 added, 0 deleted, 4 changed)  Change on 2010/06/04 by nicksantos  \tallow global this in interfaces.  \tR=johnlenz \tDELTA=6  (6 added, 0 deleted, 0 changed)    Revision created by MOE tool push_codebase. MOE_MIGRATION=19001   ", "commit": "\n--- a/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n+++ b/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n       return size;\n     }\n     \n-    @Override\n+    @java.lang.Override\n     protected Object writeReplace() throws java.io.ObjectStreamException {\n       return super.writeReplace();\n     }\n       return size;\n     }\n     \n-    @Override\n+    @java.lang.Override\n     protected Object writeReplace() throws java.io.ObjectStreamException {\n       return super.writeReplace();\n     }\n     return size;\n   }\n   \n-  @Override\n+  @java.lang.Override\n   protected Object writeReplace() throws java.io.ObjectStreamException {\n     return super.writeReplace();\n   }\n--- a/gen/com/google/javascript/jscomp/Instrumentation.java\n+++ b/gen/com/google/javascript/jscomp/Instrumentation.java\n     return size;\n   }\n   \n-  @Override\n+  @java.lang.Override\n   protected Object writeReplace() throws java.io.ObjectStreamException {\n     return super.writeReplace();\n   }\n--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java\n+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java\n       JSDocInfo jsDoc = getFunctionJsDocInfo(n);\n       if (jsDoc != null &&\n           (jsDoc.isConstructor() ||\n+           jsDoc.isInterface() ||\n            jsDoc.hasThisType() ||\n            jsDoc.isOverride())) {\n         return false;\n       } else {\n         // Only traverse the right side if it's not an assignment to a prototype\n         // property or subproperty.\n-        if (lhs.getType() == Token.GETPROP) {\n-          if (lhs.getLastChild().getString().equals(\"prototype\")) {\n+        if (NodeUtil.isGet(lhs)) {\n+          if (lhs.getType() == Token.GETPROP &&\n+              lhs.getLastChild().getString().equals(\"prototype\")) {\n             return false;\n           }\n-          String leftName = lhs.getQualifiedName();\n-          if (leftName != null && leftName.contains(\".prototype.\")) {\n+          Node llhs = lhs.getFirstChild();\n+          if (llhs.getType() == Token.GETPROP &&\n+              llhs.getLastChild().getString().equals(\"prototype\")) {\n             return false;\n           }\n         }\n--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java\n     testSame(\"/** @constructor */a.A = function() { this.m2 = 5; }\");\n   }\n \n+  public void testInterface1() {\n+    testSame(\n+        \"/** @interface */function A() { /** @type {string} */ this.m2; }\");\n+  }\n+\n   public void testOverride1() {\n     testSame(\"/** @constructor */function A() { } var a = new A();\" +\n              \"/** @override */ a.foo = function() { this.bar = 5; };\");\n \n   public void testMethod3() {\n     testSame(\"a.b.c.D.prototype.m1 = function() { this.m2 = 5; }\");\n+  }\n+\n+  public void testMethod4() {\n+    testSame(\"a.prototype['x' + 'y'] =  function() { this.foo = 3; };\");\n+  }\n+\n+  public void testPropertyOfMethod() {\n+    testFailure(\"a.protoype.b = {}; \" +\n+        \"a.prototype.b.c = function() { this.foo = 3; };\");\n   }\n \n   public void testStaticMethod1() {", "timestamp": 1275677225, "metainfo": ""}