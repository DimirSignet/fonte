{"sha": "5d1678d8a421e212375f4716be6131d7e4584e31", "log": "Propose new API for sourceinfo copying  R=johnlenz DELTA=58  (58 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2931   ", "commit": "\n--- a/src/com/google/javascript/rhino/Node.java\n+++ b/src/com/google/javascript/rhino/Node.java\n    * debug information across node append and remove operations.\n    * @return this\n    */\n+  // TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n   public Node copyInformationFrom(Node other) {\n     if (getProp(ORIGINALNAME_PROP) == null) {\n         putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));\n    * entire tree rooted at this node.\n    * @return this\n    */\n+  // TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n   public Node copyInformationFromForTree(Node other) {\n     copyInformationFrom(other);\n     for (Node child = getFirstChild();\n          child != null; child = child.getNext()) {\n       child.copyInformationFromForTree(other);\n+    }\n+\n+    return this;\n+  }\n+\n+  /**\n+   * Overwrite all the source information in this node with\n+   * that of {@code other}.\n+   */\n+  public Node useSourceInfoFrom(Node other) {\n+    putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));\n+    putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));\n+    sourcePosition = other.sourcePosition;\n+    return this;\n+  }\n+\n+  /**\n+   * Overwrite all the source information in this node and its subtree with\n+   * that of {@code other}.\n+   */\n+  public Node useSourceInfoFromForTree(Node other) {\n+    useSourceInfoFrom(other);\n+    for (Node child = getFirstChild();\n+         child != null; child = child.getNext()) {\n+      child.useSourceInfoFromForTree(other);\n+    }\n+\n+    return this;\n+  }\n+\n+  /**\n+   * Overwrite all the source information in this node with\n+   * that of {@code other} iff the source info is missing.\n+   */\n+  public Node useSourceInfoIfMissingFrom(Node other) {\n+    if (getProp(ORIGINALNAME_PROP) == null) {\n+      putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));\n+    }\n+\n+    if (getProp(STATIC_SOURCE_FILE) == null) {\n+      putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));\n+      sourcePosition = other.sourcePosition;\n+    }\n+\n+    return this;\n+  }\n+\n+  /**\n+   * Overwrite all the source information in this node and its subtree with\n+   * that of {@code other} iff the source info is missing.\n+   */\n+  public Node useSourceInfoIfMissingFromForTree(Node other) {\n+    useSourceInfoIfMissingFrom(other);\n+    for (Node child = getFirstChild();\n+         child != null; child = child.getNext()) {\n+      child.useSourceInfoIfMissingFromForTree(other);\n     }\n \n     return this;", "timestamp": 1312844573, "metainfo": ""}