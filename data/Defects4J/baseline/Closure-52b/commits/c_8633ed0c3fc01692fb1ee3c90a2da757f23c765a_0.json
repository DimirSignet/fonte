{"sha": "8633ed0c3fc01692fb1ee3c90a2da757f23c765a", "log": "more pathological module test cases.  R=acleung DELTA=88  (88 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=77001   ", "commit": "\n--- a/test/com/google/javascript/jscomp/CompilerTestCase.java\n+++ b/test/com/google/javascript/jscomp/CompilerTestCase.java\n package com.google.javascript.jscomp;\n \n import com.google.common.base.Joiner;\n+import com.google.common.base.Preconditions;\n import com.google.common.collect.Lists;\n import com.google.javascript.jscomp.CodeChangeHandler.RecentChange;\n import com.google.javascript.rhino.Node;\n   }\n \n   /**\n+   * Generates a list of modules from a list of inputs, such that modules\n+   * form a bush formation. In a bush formation, module 2 depends\n+   * on module 1, and all other modules depend on module 2.\n+   */\n+  static JSModule[] createModuleBush(String ... inputs) {\n+    Preconditions.checkState(inputs.length > 2);\n+    JSModule[] modules = createModules(inputs);\n+    for (int i = 1; i < modules.length; i++) {\n+      modules[i].addDependency(modules[i == 1 ? 0 : 1]);\n+    }\n+    return modules;\n+  }\n+\n+  /**\n+   * Generates a list of modules from a list of inputs, such that modules\n+   * form a tree formation. In a tree formation, module N depends on\n+   * module `floor(N/2)`, So the modules form a balanced binary tree.\n+   */\n+  static JSModule[] createModuleTree(String ... inputs) {\n+    JSModule[] modules = createModules(inputs);\n+    for (int i = 1; i < modules.length; i++) {\n+      modules[i].addDependency(modules[(i - 1) / 2]);\n+    }\n+    return modules;\n+  }\n+\n+  /**\n    * Generates a list of modules from a list of inputs. Does not generate any\n    * dependencies between the modules.\n    */\n--- a/test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java\n+++ b/test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java\n       \"function g(){};\"));\n   }\n \n+  public void testVarMovement8() {\n+    JSModule[] modules = createModuleBush(\n+      // m1\n+      \"var a = 0;\",\n+      // m2 -> m1\n+      \"\",\n+      // m3 -> m2\n+      \"var x = a;\",\n+      // m4 -> m2\n+      \"var y = a;\"\n+    );\n+\n+    test(modules, new String[] {\n+      // m1\n+      \"\",\n+      // m2\n+      \"var a = 0;\",\n+      // m3\n+      \"var x = a;\",\n+      // m4\n+      \"var y = a;\"\n+    });\n+  }\n+\n+  public void testVarMovement9() {\n+    JSModule[] modules = createModuleTree(\n+      // m1\n+      \"var a = 0; var b = 1; var c = 3;\",\n+      // m2 -> m1\n+      \"\",\n+      // m3 -> m1\n+      \"\",\n+      // m4 -> m2\n+      \"a;\",\n+      // m5 -> m2\n+      \"a;c;\",\n+      // m6 -> m3\n+      \"b;\",\n+      // m7 -> m4\n+      \"b;c;\"\n+    );\n+\n+    test(modules, new String[] {\n+      // m1\n+      \"var c = 3;\",\n+      // m2\n+      \"var a = 0;\",\n+      // m3\n+      \"var b = 1;\",\n+      // m4\n+      \"a;\",\n+      // m5\n+      \"a;c;\",\n+      // m6\n+      \"b;\",\n+      // m7\n+      \"b;c;\"\n+    });\n+  }\n+\n   public void testClone1() {\n     test(createModuleChain(\n              // m1", "timestamp": 1280352600, "metainfo": ""}