{"sha": "c1c31ef4cad0af0c8f3524ff85a48053d00f97fb", "log": "As agreed, remove the redundant SOURCEFILE_PROP with the original SOURCENAME_PROP.  R=bowdidge DELTA=30  (0 added, 7 deleted, 23 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=162003   ", "commit": "\n--- a/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n+++ b/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n     \n     // required string source_name = 3;\n     boolean hasSourceName();\n-    java.lang.String getSourceName();\n+    String getSourceName();\n     \n     // required int32 line_number = 4;\n     boolean hasLineNumber();\n     \n     // required string module_name = 5;\n     boolean hasModuleName();\n-    java.lang.String getModuleName();\n+    String getModuleName();\n     \n     // required int32 size = 6;\n     boolean hasSize();\n     \n     // required string name = 7;\n     boolean hasName();\n-    java.lang.String getName();\n+    String getName();\n     \n     // required string compiled_source = 8;\n     boolean hasCompiledSource();\n-    java.lang.String getCompiledSource();\n+    String getCompiledSource();\n   }\n   public static final class Entry extends\n       com.google.protobuf.GeneratedMessage\n     public boolean hasSourceName() {\n       return ((bitField0_ & 0x00000002) == 0x00000002);\n     }\n-    public java.lang.String getSourceName() {\n+    public String getSourceName() {\n       Object ref = sourceName_;\n       if (ref instanceof String) {\n         return (String) ref;\n     public boolean hasModuleName() {\n       return ((bitField0_ & 0x00000008) == 0x00000008);\n     }\n-    public java.lang.String getModuleName() {\n+    public String getModuleName() {\n       Object ref = moduleName_;\n       if (ref instanceof String) {\n         return (String) ref;\n     public boolean hasName() {\n       return ((bitField0_ & 0x00000020) == 0x00000020);\n     }\n-    public java.lang.String getName() {\n+    public String getName() {\n       Object ref = name_;\n       if (ref instanceof String) {\n         return (String) ref;\n     public boolean hasCompiledSource() {\n       return ((bitField0_ & 0x00000040) == 0x00000040);\n     }\n-    public java.lang.String getCompiledSource() {\n+    public String getCompiledSource() {\n       Object ref = compiledSource_;\n       if (ref instanceof String) {\n         return (String) ref;\n           return (String) ref;\n         }\n       }\n-      public Builder setSourceName(java.lang.String value) {\n+      public Builder setSourceName(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n           return (String) ref;\n         }\n       }\n-      public Builder setModuleName(java.lang.String value) {\n+      public Builder setModuleName(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n           return (String) ref;\n         }\n       }\n-      public Builder setName(java.lang.String value) {\n+      public Builder setName(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n           return (String) ref;\n         }\n       }\n-      public Builder setCompiledSource(java.lang.String value) {\n+      public Builder setCompiledSource(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n     \n     // required string name = 102;\n     boolean hasName();\n-    java.lang.String getName();\n+    String getName();\n     \n     // required string compiled_source = 103;\n     boolean hasCompiledSource();\n-    java.lang.String getCompiledSource();\n+    String getCompiledSource();\n   }\n   public static final class Module extends\n       com.google.protobuf.GeneratedMessage\n     public boolean hasName() {\n       return ((bitField0_ & 0x00000001) == 0x00000001);\n     }\n-    public java.lang.String getName() {\n+    public String getName() {\n       Object ref = name_;\n       if (ref instanceof String) {\n         return (String) ref;\n     public boolean hasCompiledSource() {\n       return ((bitField0_ & 0x00000002) == 0x00000002);\n     }\n-    public java.lang.String getCompiledSource() {\n+    public String getCompiledSource() {\n       Object ref = compiledSource_;\n       if (ref instanceof String) {\n         return (String) ref;\n           return (String) ref;\n         }\n       }\n-      public Builder setName(java.lang.String value) {\n+      public Builder setName(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n           return (String) ref;\n         }\n       }\n-      public Builder setCompiledSource(java.lang.String value) {\n+      public Builder setCompiledSource(String value) {\n         if (value == null) {\n     throw new NullPointerException();\n   }\n--- a/gen/com/google/javascript/jscomp/Instrumentation.java\n+++ b/gen/com/google/javascript/jscomp/Instrumentation.java\n   public boolean hasReportDefined() {\n     return ((bitField0_ & 0x00000001) == 0x00000001);\n   }\n-  public java.lang.String getReportDefined() {\n+  public String getReportDefined() {\n     Object ref = reportDefined_;\n     if (ref instanceof String) {\n       return (String) ref;\n   public boolean hasReportCall() {\n     return ((bitField0_ & 0x00000002) == 0x00000002);\n   }\n-  public java.lang.String getReportCall() {\n+  public String getReportCall() {\n     Object ref = reportCall_;\n     if (ref instanceof String) {\n       return (String) ref;\n   public boolean hasReportExit() {\n     return ((bitField0_ & 0x00000004) == 0x00000004);\n   }\n-  public java.lang.String getReportExit() {\n+  public String getReportExit() {\n     Object ref = reportExit_;\n     if (ref instanceof String) {\n       return (String) ref;\n   // repeated string declaration_to_remove = 3;\n   public static final int DECLARATION_TO_REMOVE_FIELD_NUMBER = 3;\n   private com.google.protobuf.LazyStringList declarationToRemove_;\n-  public java.util.List<java.lang.String>\n+  public java.util.List<String>\n       getDeclarationToRemoveList() {\n     return declarationToRemove_;\n   }\n   public int getDeclarationToRemoveCount() {\n     return declarationToRemove_.size();\n   }\n-  public java.lang.String getDeclarationToRemove(int index) {\n+  public String getDeclarationToRemove(int index) {\n     return declarationToRemove_.get(index);\n   }\n   \n   // repeated string init = 4;\n   public static final int INIT_FIELD_NUMBER = 4;\n   private com.google.protobuf.LazyStringList init_;\n-  public java.util.List<java.lang.String>\n+  public java.util.List<String>\n       getInitList() {\n     return init_;\n   }\n   public int getInitCount() {\n     return init_.size();\n   }\n-  public java.lang.String getInit(int index) {\n+  public String getInit(int index) {\n     return init_.get(index);\n   }\n   \n   public boolean hasAppNameSetter() {\n     return ((bitField0_ & 0x00000008) == 0x00000008);\n   }\n-  public java.lang.String getAppNameSetter() {\n+  public String getAppNameSetter() {\n     Object ref = appNameSetter_;\n     if (ref instanceof String) {\n       return (String) ref;\n         return (String) ref;\n       }\n     }\n-    public Builder setReportDefined(java.lang.String value) {\n+    public Builder setReportDefined(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n         return (String) ref;\n       }\n     }\n-    public Builder setReportCall(java.lang.String value) {\n+    public Builder setReportCall(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n         return (String) ref;\n       }\n     }\n-    public Builder setReportExit(java.lang.String value) {\n+    public Builder setReportExit(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n         bitField0_ |= 0x00000008;\n        }\n     }\n-    public java.util.List<java.lang.String>\n+    public java.util.List<String>\n         getDeclarationToRemoveList() {\n       return java.util.Collections.unmodifiableList(declarationToRemove_);\n     }\n     public int getDeclarationToRemoveCount() {\n       return declarationToRemove_.size();\n     }\n-    public java.lang.String getDeclarationToRemove(int index) {\n+    public String getDeclarationToRemove(int index) {\n       return declarationToRemove_.get(index);\n     }\n     public Builder setDeclarationToRemove(\n-        int index, java.lang.String value) {\n+        int index, String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n       onChanged();\n       return this;\n     }\n-    public Builder addDeclarationToRemove(java.lang.String value) {\n+    public Builder addDeclarationToRemove(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n       return this;\n     }\n     public Builder addAllDeclarationToRemove(\n-        java.lang.Iterable<? extends java.lang.String> values) {\n+        java.lang.Iterable<String> values) {\n       ensureDeclarationToRemoveIsMutable();\n       super.addAll(values, declarationToRemove_);\n       onChanged();\n         bitField0_ |= 0x00000010;\n        }\n     }\n-    public java.util.List<java.lang.String>\n+    public java.util.List<String>\n         getInitList() {\n       return java.util.Collections.unmodifiableList(init_);\n     }\n     public int getInitCount() {\n       return init_.size();\n     }\n-    public java.lang.String getInit(int index) {\n+    public String getInit(int index) {\n       return init_.get(index);\n     }\n     public Builder setInit(\n-        int index, java.lang.String value) {\n+        int index, String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n       onChanged();\n       return this;\n     }\n-    public Builder addInit(java.lang.String value) {\n+    public Builder addInit(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n       return this;\n     }\n     public Builder addAllInit(\n-        java.lang.Iterable<? extends java.lang.String> values) {\n+        java.lang.Iterable<String> values) {\n       ensureInitIsMutable();\n       super.addAll(values, init_);\n       onChanged();\n         return (String) ref;\n       }\n     }\n-    public Builder setAppNameSetter(java.lang.String value) {\n+    public Builder setAppNameSetter(String value) {\n       if (value == null) {\n     throw new NullPointerException();\n   }\n--- a/gen/com/google/javascript/jscomp/InstrumentationOrBuilder.java\n+++ b/gen/com/google/javascript/jscomp/InstrumentationOrBuilder.java\n   \n   // optional string report_defined = 1;\n   boolean hasReportDefined();\n-  java.lang.String getReportDefined();\n+  String getReportDefined();\n   \n   // optional string report_call = 2;\n   boolean hasReportCall();\n-  java.lang.String getReportCall();\n+  String getReportCall();\n   \n   // optional string report_exit = 6;\n   boolean hasReportExit();\n-  java.lang.String getReportExit();\n+  String getReportExit();\n   \n   // repeated string declaration_to_remove = 3;\n-  java.util.List<java.lang.String> getDeclarationToRemoveList();\n+  java.util.List<String> getDeclarationToRemoveList();\n   int getDeclarationToRemoveCount();\n-  java.lang.String getDeclarationToRemove(int index);\n+  String getDeclarationToRemove(int index);\n   \n   // repeated string init = 4;\n-  java.util.List<java.lang.String> getInitList();\n+  java.util.List<String> getInitList();\n   int getInitCount();\n-  java.lang.String getInit(int index);\n+  String getInit(int index);\n   \n   // optional string app_name_setter = 5;\n   boolean hasAppNameSetter();\n-  java.lang.String getAppNameSetter();\n+  String getAppNameSetter();\n }\n--- a/src/com/google/javascript/jscomp/CodePrinter.java\n+++ b/src/com/google/javascript/jscomp/CodePrinter.java\n       Preconditions.checkState(sourceMapDetailLevel != null);\n       Preconditions.checkState(node != null);\n       if (createSrcMap\n-          && node.getProp(Node.SOURCEFILE_PROP) != null\n+          && node.getProp(Node.SOURCENAME_PROP) != null\n           && node.getLineno() > 0\n           && sourceMapDetailLevel.apply(node)) {\n         int line = getCurrentLineIndex();\n--- a/src/com/google/javascript/jscomp/NameReferenceGraphReport.java\n+++ b/src/com/google/javascript/jscomp/NameReferenceGraphReport.java\n    *     cannot be identified.\n    */\n   private String getSourceFile(Node node) {\n-    String filename = (String) node.getProp(Node.SOURCEFILE_PROP);\n+    String filename = (String) node.getProp(Node.SOURCENAME_PROP);\n     if (filename == null) {\n       return \"\";\n     }\n--- a/src/com/google/javascript/jscomp/ReplaceStrings.java\n+++ b/src/com/google/javascript/jscomp/ReplaceStrings.java\n \n     void addLocation(Node n) {\n       replacementLocations.add(new Location(\n-          (String)n.getProp(Node.SOURCEFILE_PROP),\n+          (String)n.getProp(Node.SOURCENAME_PROP),\n           n.getLineno(), n.getCharno()));\n     }\n   }\n--- a/src/com/google/javascript/jscomp/SourceInformationAnnotator.java\n+++ b/src/com/google/javascript/jscomp/SourceInformationAnnotator.java\n  *\n  * Information saved:\n  *\n- * - Annotates all nodes with a SOURCEFILE_PROP indicating the input\n- *   file from which it was generated.\n- *\n  * - Annotates all NAME nodes with an ORIGINALNAME_PROP indicating its original\n  *   name.\n  *\n     // Verify the source file is annotated.\n     if (doSanityChecks && sourceFile != null) {\n       Preconditions.checkState(sourceFile.equals(\n-          n.getProp(Node.SOURCEFILE_PROP)));\n+          n.getProp(Node.SOURCENAME_PROP)));\n     }\n \n     // Annotate the original name.\n--- a/src/com/google/javascript/jscomp/SourceMap.java\n+++ b/src/com/google/javascript/jscomp/SourceMap.java\n    * @param endPosition The position on the ending line.\n    */\n   void addMapping(Node node, Position startPosition, Position endPosition) {\n-    String sourceFile = (String)node.getProp(Node.SOURCEFILE_PROP);\n+    String sourceFile = (String)node.getProp(Node.SOURCENAME_PROP);\n \n     // If the node does not have an associated source file or\n     // its line number is -1, then the node does not have sufficient\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n   private Node createTemplateNode() {\n     // The Node type choice is arbitrary.\n     Node templateNode = new Node(Token.SCRIPT);\n-    templateNode.putProp(Node.SOURCEFILE_PROP, sourceName);\n+    templateNode.putProp(Node.SOURCENAME_PROP, sourceName);\n     return templateNode;\n   }\n \n         isUnnamedFunction = true;\n       }\n       Node node = newNode(Token.FUNCTION);\n-      node.putProp(Node.SOURCENAME_PROP, functionNode.getSourceName());\n       Node newName = transform(name);\n       if (isUnnamedFunction) {\n         // Old Rhino tagged the empty name node with the line number of the\n--- a/src/com/google/javascript/rhino/Node.java\n+++ b/src/com/google/javascript/rhino/Node.java\n       SYNTHETIC_BLOCK_PROP = 37,  // A synthetic block. Used to make\n                                   // processing simpler, and does not\n                                   // represent a real block in the source.\n-      SOURCEFILE_PROP    = 38,    // Contains the path of the source file\n-                                  // from which the current node was parsed.\n-      EMPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced\n+      EMPTY_BLOCK        = 38,    // Used to indicate BLOCK that replaced\n                                   // EMPTY nodes.\n-      ORIGINALNAME_PROP  = 40,    // The original name of the node, before\n+      ORIGINALNAME_PROP  = 39,    // The original name of the node, before\n                                   // renaming.\n-      BRACELESS_TYPE     = 41,    // The type syntax without curly braces.\n-      NO_SIDE_EFFECTS_CALL = 42,  // Function or constructor call has no\n+      BRACELESS_TYPE     = 40,    // The type syntax without curly braces.\n+      NO_SIDE_EFFECTS_CALL = 41,  // Function or constructor call has no\n                                   // side effects.\n       // Coding convention props\n-      IS_CONSTANT_NAME   = 43,    // The variable or property is constant.\n-      IS_OPTIONAL_PARAM  = 44,    // The parameter is optional.\n-      IS_VAR_ARGS_PARAM  = 45,    // The parameter is a var_args.\n-      IS_NAMESPACE       = 46,    // The variable creates a namespace.\n-      IS_DISPATCHER      = 47,    // The function is a dispatcher function,\n+      IS_CONSTANT_NAME   = 42,    // The variable or property is constant.\n+      IS_OPTIONAL_PARAM  = 43,    // The parameter is optional.\n+      IS_VAR_ARGS_PARAM  = 44,    // The parameter is a var_args.\n+      IS_NAMESPACE       = 45,    // The variable creates a namespace.\n+      IS_DISPATCHER      = 46,    // The function is a dispatcher function,\n                                   // probably generated from Java code, and\n                                   // should be resolved to the proper\n                                   // overload if possible.\n-      DIRECTIVES         = 48,    // The ES5 directives on this node.\n-      DIRECT_EVAL        = 49,    // ES5 distinguishes between direct and\n+      DIRECTIVES         = 47,    // The ES5 directives on this node.\n+      DIRECT_EVAL        = 48,    // ES5 distinguishes between direct and\n                                   // indirect calls to eval.\n-      SUPPRESSIONS       = 50,    // Used by the compiler to associate\n+      SUPPRESSIONS       = 49,    // Used by the compiler to associate\n                                   // @suppress directly with functions\n                                   // and scripts.\n-      FREE_CALL          = 51,    // A CALL without an explicit \"this\" value.\n+      FREE_CALL          = 50,    // A CALL without an explicit \"this\" value.\n                                   //\n-      LAST_PROP          = 51;\n+      LAST_PROP          = 50;\n \n   // values of ISNUMBER_PROP to specify\n   // which of the children are Number types\n         case QUOTED_PROP:        return \"quoted\";\n \n         case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n-        case SOURCEFILE_PROP: return \"sourcefile\";\n         case EMPTY_BLOCK: return \"empty_block\";\n         case ORIGINALNAME_PROP: return \"originalname\";\n         case NO_SIDE_EFFECTS_CALL: return \"no_side_effects_call\";\n         putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));\n     }\n \n-    if (getProp(SOURCEFILE_PROP) == null) {\n-        putProp(SOURCEFILE_PROP, other.getProp(SOURCEFILE_PROP));\n+    if (getProp(SOURCENAME_PROP) == null) {\n+        putProp(SOURCENAME_PROP, other.getProp(SOURCENAME_PROP));\n         sourcePosition = other.sourcePosition;\n     }\n ", "timestamp": 1282091143, "metainfo": ""}