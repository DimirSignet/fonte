{"sha": "c49ac6ab45a86109a8b95432a8a773d7a62068b4", "log": "When arguments arrays is used, don't remove assignments on parameter even if they appear to be dead.  R=nicksantos DELTA=18  (16 added, 1 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1769   ", "commit": "\n--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java\n             return;\n           }\n         } else {\n+\n+          // If arguments is escaped, we just assume the worst and continue\n+          // on all the parameters.\n+          if (\"arguments\".equals(n.getString()) && scope.isLocal()) {\n+            Node lp = scope.getRootNode().getFirstChild().getNext();\n+            for (Node a = lp.getFirstChild(); a != null; a = a.getNext()) {\n+              markReferencedVar(scope.getVar(a.getString()));\n+            }\n+          }\n+\n           // All name references that aren't declarations or assigns\n           // are references to other vars.\n           if (var != null) {\n--- a/test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java\n+++ b/test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java\n          \"var b=function(c,d){return c+d};b(2)\");\n   }\n \n+  public void testFunctionsDeadButEscaped() {\n+    testSame(\"function b(a) { a = 1; print(arguments[0]) }; b(6)\");\n+    testSame(\"function b(a) { a = 1; arguments=1; }; b(6)\");\n+    testSame(\"function b(a) { var c = 2; a = c; print(arguments[0]) }; b(6)\");\n+  }\n+\n   public void testVarInControlStructure() {\n     test(\"if (true) var b = 3;\", \"if(true);\");\n     test(\"if (true) var b = 3; else var c = 5;\", \"if(true);else;\");\n     test(\"var b=function(c,d){b(1,2);return d};b(3,4);b(5,6)\",\n          \"var b=function(d){b(2);return d};b(4);b(6)\");\n \n-    test(\"var b=function(c){return arguments};b(1,2);b(3,4)\",\n-         \"var b=function(){return arguments};b(1,2);b(3,4)\");\n+    testSame(\"var b=function(c){return arguments};b(1,2);b(3,4)\");\n \n     // remove all function arguments\n     test(\"var b=function(c,d){return};b(1,2)\",", "timestamp": 1304545371, "metainfo": ""}