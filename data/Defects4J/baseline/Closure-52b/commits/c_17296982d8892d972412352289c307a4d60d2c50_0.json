{"sha": "17296982d8892d972412352289c307a4d60d2c50", "log": "Don't looked into functions when trying to determine if a Token.NEW needs parenthese around it argument.  R=bowdidge DELTA=19  (16 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=58002   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n \n import com.google.common.base.Charsets;\n import com.google.common.base.Preconditions;\n+import com.google.javascript.jscomp.NodeUtil.MatchNotFunction;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n import com.google.javascript.rhino.TokenStream;\n         int precedence = NodeUtil.precedence(type);\n \n         // If the first child contains a CALL, then claim higher precedence\n-        // to force parens. Otherwise, when parsed, NEW will bind to the\n-        // first viable parens\n-        if (NodeUtil.containsCall(first)) {\n+        // to force parentheses. Otherwise, when parsed, NEW will bind to the\n+        // first viable parentheses (don't traverse into functions).\n+        if (NodeUtil.containsType(first, Token.CALL, new MatchNotFunction())) {\n           precedence = NodeUtil.precedence(first.getType()) + 1;\n         }\n         addExpr(first, precedence);\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n         new CodePrinter.Builder(n).setLineLengthThreshold(\n             CodePrinter.DEFAULT_LINE_LENGTH_THRESHOLD).build());\n   }\n+\n+  public void testFunctionWithCall() {\n+    assertPrint(\n+        \"var user = new function() {\"\n+        + \"alert(\\\"foo\\\")}\",\n+        \"var user=new function(){\"\n+        + \"alert(\\\"foo\\\")}\");\n+    assertPrint(\n+        \"var user = new function() {\"\n+        + \"this.name = \\\"foo\\\";\"\n+        + \"this.local = function(){alert(this.name)};}\", \n+        \"var user=new function(){\"\n+        + \"this.name=\\\"foo\\\";\"\n+        + \"this.local=function(){alert(this.name)}}\");\n+  }  \n \n   public void testLineLength() {\n     // list", "timestamp": 1279749748, "metainfo": ""}