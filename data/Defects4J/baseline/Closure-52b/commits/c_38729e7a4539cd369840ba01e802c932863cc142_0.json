{"sha": "38729e7a4539cd369840ba01e802c932863cc142", "log": "Merge DataTransfer into main html5 externs.  R=nicksantos DELTA=101  (47 added, 53 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=54001   ", "commit": "\n--- a/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n+++ b/gen/com/google/javascript/jscomp/FunctionInformationMap.java\n       return com.google.javascript.jscomp.FunctionInfo.internal_static_jscomp_FunctionInformationMap_Entry_fieldAccessorTable;\n     }\n     \n+    private int bitField0_;\n     // required int32 id = 2;\n     public static final int ID_FIELD_NUMBER = 2;\n-    private boolean hasId;\n     private int id_;\n     public boolean hasId() {\n-      return hasId;\n+      return ((bitField0_ & 0x00000001) == 0x00000001);\n     }\n     public int getId() {\n       return id_;\n     \n     // required string source_name = 3;\n     public static final int SOURCE_NAME_FIELD_NUMBER = 3;\n-    private boolean hasSourceName;\n     private java.lang.String sourceName_;\n     public boolean hasSourceName() {\n-      return hasSourceName;\n+      return ((bitField0_ & 0x00000002) == 0x00000002);\n     }\n     public java.lang.String getSourceName() {\n       return sourceName_;\n     \n     // required int32 line_number = 4;\n     public static final int LINE_NUMBER_FIELD_NUMBER = 4;\n-    private boolean hasLineNumber;\n     private int lineNumber_;\n     public boolean hasLineNumber() {\n-      return hasLineNumber;\n+      return ((bitField0_ & 0x00000004) == 0x00000004);\n     }\n     public int getLineNumber() {\n       return lineNumber_;\n     \n     // required string module_name = 5;\n     public static final int MODULE_NAME_FIELD_NUMBER = 5;\n-    private boolean hasModuleName;\n     private java.lang.String moduleName_;\n     public boolean hasModuleName() {\n-      return hasModuleName;\n+      return ((bitField0_ & 0x00000008) == 0x00000008);\n     }\n     public java.lang.String getModuleName() {\n       return moduleName_;\n     \n     // required int32 size = 6;\n     public static final int SIZE_FIELD_NUMBER = 6;\n-    private boolean hasSize;\n     private int size_;\n     public boolean hasSize() {\n-      return hasSize;\n+      return ((bitField0_ & 0x00000010) == 0x00000010);\n     }\n     public int getSize() {\n       return size_;\n     \n     // required string name = 7;\n     public static final int NAME_FIELD_NUMBER = 7;\n-    private boolean hasName;\n     private java.lang.String name_;\n     public boolean hasName() {\n-      return hasName;\n+      return ((bitField0_ & 0x00000020) == 0x00000020);\n     }\n     public java.lang.String getName() {\n       return name_;\n     \n     // required string compiled_source = 8;\n     public static final int COMPILED_SOURCE_FIELD_NUMBER = 8;\n-    private boolean hasCompiledSource;\n     private java.lang.String compiledSource_;\n     public boolean hasCompiledSource() {\n-      return hasCompiledSource;\n+      return ((bitField0_ & 0x00000040) == 0x00000040);\n     }\n     public java.lang.String getCompiledSource() {\n       return compiledSource_;\n       public Builder clear() {\n         super.clear();\n         id_ = 0;\n-        hasId = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n         sourceName_ = \"\";\n-        hasSourceName = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n         lineNumber_ = 0;\n-        hasLineNumber = false;\n+        bitField0_ = (bitField0_ & ~0x00000004);\n         moduleName_ = \"\";\n-        hasModuleName = false;\n+        bitField0_ = (bitField0_ & ~0x00000008);\n         size_ = 0;\n-        hasSize = false;\n+        bitField0_ = (bitField0_ & ~0x00000010);\n         name_ = \"\";\n-        hasName = false;\n+        bitField0_ = (bitField0_ & ~0x00000020);\n         compiledSource_ = \"\";\n-        hasCompiledSource = false;\n+        bitField0_ = (bitField0_ & ~0x00000040);\n         return this;\n       }\n       \n       \n       public com.google.javascript.jscomp.FunctionInformationMap.Entry buildPartial() {\n         com.google.javascript.jscomp.FunctionInformationMap.Entry result = new com.google.javascript.jscomp.FunctionInformationMap.Entry(this);\n-        result.hasId = hasId;\n+        if (((bitField0_ & 0x00000001) == 0x00000001)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000001);\n+        }\n         result.id_ = id_;\n-        result.hasSourceName = hasSourceName;\n+        if (((bitField0_ & 0x00000002) == 0x00000002)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000002);\n+        }\n         result.sourceName_ = sourceName_;\n-        result.hasLineNumber = hasLineNumber;\n+        if (((bitField0_ & 0x00000004) == 0x00000004)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000004);\n+        }\n         result.lineNumber_ = lineNumber_;\n-        result.hasModuleName = hasModuleName;\n+        if (((bitField0_ & 0x00000008) == 0x00000008)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000008);\n+        }\n         result.moduleName_ = moduleName_;\n-        result.hasSize = hasSize;\n+        if (((bitField0_ & 0x00000010) == 0x00000010)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000010);\n+        }\n         result.size_ = size_;\n-        result.hasName = hasName;\n+        if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000020);\n+        }\n         result.name_ = name_;\n-        result.hasCompiledSource = hasCompiledSource;\n+        if (((bitField0_ & 0x00000040) == 0x00000040)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000040);\n+        }\n         result.compiledSource_ = compiledSource_;\n         onBuilt();\n         return result;\n         }\n       }\n       \n+      private int bitField0_;\n       \n       // required int32 id = 2;\n-      private boolean hasId;\n       private int id_ ;\n       public boolean hasId() {\n-        return hasId;\n+        return ((bitField0_ & 0x00000001) == 0x00000001);\n       }\n       public int getId() {\n         return id_;\n       }\n       public Builder setId(int value) {\n-        hasId = true;\n+        bitField0_ = (bitField0_ | 0x00000001);\n         id_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearId() {\n-        hasId = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n         id_ = 0;\n         onChanged();\n         return this;\n       }\n       \n       // required string source_name = 3;\n-      private boolean hasSourceName;\n       private java.lang.String sourceName_ = \"\";\n       public boolean hasSourceName() {\n-        return hasSourceName;\n+        return ((bitField0_ & 0x00000002) == 0x00000002);\n       }\n       public java.lang.String getSourceName() {\n         return sourceName_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasSourceName = true;\n+  bitField0_ = (bitField0_ | 0x00000002);\n         sourceName_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearSourceName() {\n-        hasSourceName = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n         sourceName_ = getDefaultInstance().getSourceName();\n         onChanged();\n         return this;\n       }\n       \n       // required int32 line_number = 4;\n-      private boolean hasLineNumber;\n       private int lineNumber_ ;\n       public boolean hasLineNumber() {\n-        return hasLineNumber;\n+        return ((bitField0_ & 0x00000004) == 0x00000004);\n       }\n       public int getLineNumber() {\n         return lineNumber_;\n       }\n       public Builder setLineNumber(int value) {\n-        hasLineNumber = true;\n+        bitField0_ = (bitField0_ | 0x00000004);\n         lineNumber_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearLineNumber() {\n-        hasLineNumber = false;\n+        bitField0_ = (bitField0_ & ~0x00000004);\n         lineNumber_ = 0;\n         onChanged();\n         return this;\n       }\n       \n       // required string module_name = 5;\n-      private boolean hasModuleName;\n       private java.lang.String moduleName_ = \"\";\n       public boolean hasModuleName() {\n-        return hasModuleName;\n+        return ((bitField0_ & 0x00000008) == 0x00000008);\n       }\n       public java.lang.String getModuleName() {\n         return moduleName_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasModuleName = true;\n+  bitField0_ = (bitField0_ | 0x00000008);\n         moduleName_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearModuleName() {\n-        hasModuleName = false;\n+        bitField0_ = (bitField0_ & ~0x00000008);\n         moduleName_ = getDefaultInstance().getModuleName();\n         onChanged();\n         return this;\n       }\n       \n       // required int32 size = 6;\n-      private boolean hasSize;\n       private int size_ ;\n       public boolean hasSize() {\n-        return hasSize;\n+        return ((bitField0_ & 0x00000010) == 0x00000010);\n       }\n       public int getSize() {\n         return size_;\n       }\n       public Builder setSize(int value) {\n-        hasSize = true;\n+        bitField0_ = (bitField0_ | 0x00000010);\n         size_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearSize() {\n-        hasSize = false;\n+        bitField0_ = (bitField0_ & ~0x00000010);\n         size_ = 0;\n         onChanged();\n         return this;\n       }\n       \n       // required string name = 7;\n-      private boolean hasName;\n       private java.lang.String name_ = \"\";\n       public boolean hasName() {\n-        return hasName;\n+        return ((bitField0_ & 0x00000020) == 0x00000020);\n       }\n       public java.lang.String getName() {\n         return name_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasName = true;\n+  bitField0_ = (bitField0_ | 0x00000020);\n         name_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearName() {\n-        hasName = false;\n+        bitField0_ = (bitField0_ & ~0x00000020);\n         name_ = getDefaultInstance().getName();\n         onChanged();\n         return this;\n       }\n       \n       // required string compiled_source = 8;\n-      private boolean hasCompiledSource;\n       private java.lang.String compiledSource_ = \"\";\n       public boolean hasCompiledSource() {\n-        return hasCompiledSource;\n+        return ((bitField0_ & 0x00000040) == 0x00000040);\n       }\n       public java.lang.String getCompiledSource() {\n         return compiledSource_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasCompiledSource = true;\n+  bitField0_ = (bitField0_ | 0x00000040);\n         compiledSource_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearCompiledSource() {\n-        hasCompiledSource = false;\n+        bitField0_ = (bitField0_ & ~0x00000040);\n         compiledSource_ = getDefaultInstance().getCompiledSource();\n         onChanged();\n         return this;\n       return com.google.javascript.jscomp.FunctionInfo.internal_static_jscomp_FunctionInformationMap_Module_fieldAccessorTable;\n     }\n     \n+    private int bitField0_;\n     // required string name = 102;\n     public static final int NAME_FIELD_NUMBER = 102;\n-    private boolean hasName;\n     private java.lang.String name_;\n     public boolean hasName() {\n-      return hasName;\n+      return ((bitField0_ & 0x00000001) == 0x00000001);\n     }\n     public java.lang.String getName() {\n       return name_;\n     \n     // required string compiled_source = 103;\n     public static final int COMPILED_SOURCE_FIELD_NUMBER = 103;\n-    private boolean hasCompiledSource;\n     private java.lang.String compiledSource_;\n     public boolean hasCompiledSource() {\n-      return hasCompiledSource;\n+      return ((bitField0_ & 0x00000002) == 0x00000002);\n     }\n     public java.lang.String getCompiledSource() {\n       return compiledSource_;\n       public Builder clear() {\n         super.clear();\n         name_ = \"\";\n-        hasName = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n         compiledSource_ = \"\";\n-        hasCompiledSource = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n         return this;\n       }\n       \n       \n       public com.google.javascript.jscomp.FunctionInformationMap.Module buildPartial() {\n         com.google.javascript.jscomp.FunctionInformationMap.Module result = new com.google.javascript.jscomp.FunctionInformationMap.Module(this);\n-        result.hasName = hasName;\n+        if (((bitField0_ & 0x00000001) == 0x00000001)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000001);\n+        }\n         result.name_ = name_;\n-        result.hasCompiledSource = hasCompiledSource;\n+        if (((bitField0_ & 0x00000002) == 0x00000002)) {\n+          result.bitField0_ = (result.bitField0_ | 0x00000002);\n+        }\n         result.compiledSource_ = compiledSource_;\n         onBuilt();\n         return result;\n         }\n       }\n       \n+      private int bitField0_;\n       \n       // required string name = 102;\n-      private boolean hasName;\n       private java.lang.String name_ = \"\";\n       public boolean hasName() {\n-        return hasName;\n+        return ((bitField0_ & 0x00000001) == 0x00000001);\n       }\n       public java.lang.String getName() {\n         return name_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasName = true;\n+  bitField0_ = (bitField0_ | 0x00000001);\n         name_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearName() {\n-        hasName = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n         name_ = getDefaultInstance().getName();\n         onChanged();\n         return this;\n       }\n       \n       // required string compiled_source = 103;\n-      private boolean hasCompiledSource;\n       private java.lang.String compiledSource_ = \"\";\n       public boolean hasCompiledSource() {\n-        return hasCompiledSource;\n+        return ((bitField0_ & 0x00000002) == 0x00000002);\n       }\n       public java.lang.String getCompiledSource() {\n         return compiledSource_;\n         if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasCompiledSource = true;\n+  bitField0_ = (bitField0_ | 0x00000002);\n         compiledSource_ = value;\n         onChanged();\n         return this;\n       }\n       public Builder clearCompiledSource() {\n-        hasCompiledSource = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n         compiledSource_ = getDefaultInstance().getCompiledSource();\n         onChanged();\n         return this;\n     module_ = java.util.Collections.emptyList();\n   }\n   public final boolean isInitialized() {\n-    for (com.google.javascript.jscomp.FunctionInformationMap.Entry element : getEntryList()) {\n-      if (!element.isInitialized()) return false;\n-    }\n-    for (com.google.javascript.jscomp.FunctionInformationMap.Module element : getModuleList()) {\n-      if (!element.isInitialized()) return false;\n+    for (int i = 0; i < getEntryCount(); i++) {\n+      if (!getEntry(i).isInitialized()) return false;\n+    }\n+    for (int i = 0; i < getModuleCount(); i++) {\n+      if (!getModule(i).isInitialized()) return false;\n     }\n     return true;\n   }\n       super.clear();\n       if (entryBuilder_ == null) {\n         entry_ = java.util.Collections.emptyList();\n-        isEntryMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n       } else {\n         entryBuilder_.clear();\n       }\n       if (moduleBuilder_ == null) {\n         module_ = java.util.Collections.emptyList();\n-        isModuleMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n       } else {\n         moduleBuilder_.clear();\n       }\n     public com.google.javascript.jscomp.FunctionInformationMap buildPartial() {\n       com.google.javascript.jscomp.FunctionInformationMap result = new com.google.javascript.jscomp.FunctionInformationMap(this);\n       if (entryBuilder_ == null) {\n-        if (isEntryMutable) {\n+        if (((bitField0_ & 0x00000001) == 0x00000001)) {\n           entry_ = java.util.Collections.unmodifiableList(entry_);\n-          isEntryMutable = false;\n+          bitField0_ = (bitField0_ & ~0x00000001);\n         }\n         result.entry_ = entry_;\n       } else {\n         result.entry_ = entryBuilder_.build();\n       }\n       if (moduleBuilder_ == null) {\n-        if (isModuleMutable) {\n+        if (((bitField0_ & 0x00000002) == 0x00000002)) {\n           module_ = java.util.Collections.unmodifiableList(module_);\n-          isModuleMutable = false;\n+          bitField0_ = (bitField0_ & ~0x00000002);\n         }\n         result.module_ = module_;\n       } else {\n         if (!other.entry_.isEmpty()) {\n           if (entry_.isEmpty()) {\n             entry_ = other.entry_;\n-            isEntryMutable = false;\n+            bitField0_ = (bitField0_ & ~0x00000001);\n           } else {\n             ensureEntryIsMutable();\n             entry_.addAll(other.entry_);\n             entryBuilder_.dispose();\n             entryBuilder_ = null;\n             entry_ = other.entry_;\n-            isEntryMutable = false;\n+            bitField0_ = (bitField0_ & ~0x00000001);\n             entryBuilder_ = \n               com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?\n                  getEntryFieldBuilder() : null;\n         if (!other.module_.isEmpty()) {\n           if (module_.isEmpty()) {\n             module_ = other.module_;\n-            isModuleMutable = false;\n+            bitField0_ = (bitField0_ & ~0x00000002);\n           } else {\n             ensureModuleIsMutable();\n             module_.addAll(other.module_);\n             moduleBuilder_.dispose();\n             moduleBuilder_ = null;\n             module_ = other.module_;\n-            isModuleMutable = false;\n+            bitField0_ = (bitField0_ & ~0x00000002);\n             moduleBuilder_ = \n               com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?\n                  getModuleFieldBuilder() : null;\n     }\n     \n     public final boolean isInitialized() {\n-      for (com.google.javascript.jscomp.FunctionInformationMap.Entry element : getEntryList()) {\n-        if (!element.isInitialized()) return false;\n-      }\n-      for (com.google.javascript.jscomp.FunctionInformationMap.Module element : getModuleList()) {\n-        if (!element.isInitialized()) return false;\n+      for (int i = 0; i < getEntryCount(); i++) {\n+        if (!getEntry(i).isInitialized()) return false;\n+      }\n+      for (int i = 0; i < getModuleCount(); i++) {\n+        if (!getModule(i).isInitialized()) return false;\n       }\n       return true;\n     }\n       }\n     }\n     \n+    private int bitField0_;\n     \n     // repeated group Entry = 1 {\n     private java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Entry> entry_ =\n       java.util.Collections.emptyList();\n-    private boolean isEntryMutable;\n     private void ensureEntryIsMutable() {\n-      if (!isEntryMutable) {\n+      if (!((bitField0_ & 0x00000001) == 0x00000001)) {\n         entry_ = new java.util.ArrayList<com.google.javascript.jscomp.FunctionInformationMap.Entry>(entry_);\n-        isEntryMutable = true;\n+        bitField0_ = (bitField0_ | 0x00000001);\n        }\n     }\n     \n     public Builder clearEntry() {\n       if (entryBuilder_ == null) {\n         entry_ = java.util.Collections.emptyList();\n-        isEntryMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000001);\n         onChanged();\n       } else {\n         entryBuilder_.clear();\n         entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<\n             com.google.javascript.jscomp.FunctionInformationMap.Entry, com.google.javascript.jscomp.FunctionInformationMap.Entry.Builder>(\n                 entry_,\n-                isEntryMutable,\n+                ((bitField0_ & 0x00000001) == 0x00000001),\n                 getParentForChildren(),\n                 isClean());\n         entry_ = null;\n     // repeated group Module = 101 {\n     private java.util.List<com.google.javascript.jscomp.FunctionInformationMap.Module> module_ =\n       java.util.Collections.emptyList();\n-    private boolean isModuleMutable;\n     private void ensureModuleIsMutable() {\n-      if (!isModuleMutable) {\n+      if (!((bitField0_ & 0x00000002) == 0x00000002)) {\n         module_ = new java.util.ArrayList<com.google.javascript.jscomp.FunctionInformationMap.Module>(module_);\n-        isModuleMutable = true;\n+        bitField0_ = (bitField0_ | 0x00000002);\n        }\n     }\n     \n     public Builder clearModule() {\n       if (moduleBuilder_ == null) {\n         module_ = java.util.Collections.emptyList();\n-        isModuleMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000002);\n         onChanged();\n       } else {\n         moduleBuilder_.clear();\n         moduleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<\n             com.google.javascript.jscomp.FunctionInformationMap.Module, com.google.javascript.jscomp.FunctionInformationMap.Module.Builder>(\n                 module_,\n-                isModuleMutable,\n+                ((bitField0_ & 0x00000002) == 0x00000002),\n                 getParentForChildren(),\n                 isClean());\n         module_ = null;\n--- a/gen/com/google/javascript/jscomp/Instrumentation.java\n+++ b/gen/com/google/javascript/jscomp/Instrumentation.java\n     return com.google.javascript.jscomp.InstrumentationTemplate.internal_static_jscomp_Instrumentation_fieldAccessorTable;\n   }\n   \n+  private int bitField0_;\n   // optional string report_defined = 1;\n   public static final int REPORT_DEFINED_FIELD_NUMBER = 1;\n-  private boolean hasReportDefined;\n   private java.lang.String reportDefined_;\n   public boolean hasReportDefined() {\n-    return hasReportDefined;\n+    return ((bitField0_ & 0x00000001) == 0x00000001);\n   }\n   public java.lang.String getReportDefined() {\n     return reportDefined_;\n   \n   // optional string report_call = 2;\n   public static final int REPORT_CALL_FIELD_NUMBER = 2;\n-  private boolean hasReportCall;\n   private java.lang.String reportCall_;\n   public boolean hasReportCall() {\n-    return hasReportCall;\n+    return ((bitField0_ & 0x00000002) == 0x00000002);\n   }\n   public java.lang.String getReportCall() {\n     return reportCall_;\n   \n   // optional string report_exit = 6;\n   public static final int REPORT_EXIT_FIELD_NUMBER = 6;\n-  private boolean hasReportExit;\n   private java.lang.String reportExit_;\n   public boolean hasReportExit() {\n-    return hasReportExit;\n+    return ((bitField0_ & 0x00000004) == 0x00000004);\n   }\n   public java.lang.String getReportExit() {\n     return reportExit_;\n   \n   // optional string app_name_setter = 5;\n   public static final int APP_NAME_SETTER_FIELD_NUMBER = 5;\n-  private boolean hasAppNameSetter;\n   private java.lang.String appNameSetter_;\n   public boolean hasAppNameSetter() {\n-    return hasAppNameSetter;\n+    return ((bitField0_ & 0x00000008) == 0x00000008);\n   }\n   public java.lang.String getAppNameSetter() {\n     return appNameSetter_;\n     public Builder clear() {\n       super.clear();\n       reportDefined_ = \"\";\n-      hasReportDefined = false;\n+      bitField0_ = (bitField0_ & ~0x00000001);\n       reportCall_ = \"\";\n-      hasReportCall = false;\n+      bitField0_ = (bitField0_ & ~0x00000002);\n       reportExit_ = \"\";\n-      hasReportExit = false;\n+      bitField0_ = (bitField0_ & ~0x00000004);\n       declarationToRemove_ = java.util.Collections.emptyList();\n-      isDeclarationToRemoveMutable = false;\n+      bitField0_ = (bitField0_ & ~0x00000008);\n       init_ = java.util.Collections.emptyList();\n-      isInitMutable = false;\n+      bitField0_ = (bitField0_ & ~0x00000010);\n       appNameSetter_ = \"\";\n-      hasAppNameSetter = false;\n+      bitField0_ = (bitField0_ & ~0x00000020);\n       return this;\n     }\n     \n     \n     public com.google.javascript.jscomp.Instrumentation buildPartial() {\n       com.google.javascript.jscomp.Instrumentation result = new com.google.javascript.jscomp.Instrumentation(this);\n-      result.hasReportDefined = hasReportDefined;\n+      if (((bitField0_ & 0x00000001) == 0x00000001)) {\n+        result.bitField0_ = (result.bitField0_ | 0x00000001);\n+      }\n       result.reportDefined_ = reportDefined_;\n-      result.hasReportCall = hasReportCall;\n+      if (((bitField0_ & 0x00000002) == 0x00000002)) {\n+        result.bitField0_ = (result.bitField0_ | 0x00000002);\n+      }\n       result.reportCall_ = reportCall_;\n-      result.hasReportExit = hasReportExit;\n+      if (((bitField0_ & 0x00000004) == 0x00000004)) {\n+        result.bitField0_ = (result.bitField0_ | 0x00000004);\n+      }\n       result.reportExit_ = reportExit_;\n-      if (isDeclarationToRemoveMutable) {\n+      if (((bitField0_ & 0x00000008) == 0x00000008)) {\n         declarationToRemove_ = java.util.Collections.unmodifiableList(declarationToRemove_);\n-        isDeclarationToRemoveMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000008);\n       }\n       result.declarationToRemove_ = declarationToRemove_;\n-      if (isInitMutable) {\n+      if (((bitField0_ & 0x00000010) == 0x00000010)) {\n         init_ = java.util.Collections.unmodifiableList(init_);\n-        isInitMutable = false;\n+        bitField0_ = (bitField0_ & ~0x00000010);\n       }\n       result.init_ = init_;\n-      result.hasAppNameSetter = hasAppNameSetter;\n+      if (((bitField0_ & 0x00000020) == 0x00000020)) {\n+        result.bitField0_ = (result.bitField0_ | 0x00000008);\n+      }\n       result.appNameSetter_ = appNameSetter_;\n       onBuilt();\n       return result;\n       if (!other.declarationToRemove_.isEmpty()) {\n         if (declarationToRemove_.isEmpty()) {\n           declarationToRemove_ = other.declarationToRemove_;\n-          isDeclarationToRemoveMutable = false;\n+          bitField0_ = (bitField0_ & ~0x00000008);\n         } else {\n           ensureDeclarationToRemoveIsMutable();\n           declarationToRemove_.addAll(other.declarationToRemove_);\n       if (!other.init_.isEmpty()) {\n         if (init_.isEmpty()) {\n           init_ = other.init_;\n-          isInitMutable = false;\n+          bitField0_ = (bitField0_ & ~0x00000010);\n         } else {\n           ensureInitIsMutable();\n           init_.addAll(other.init_);\n       }\n     }\n     \n+    private int bitField0_;\n     \n     // optional string report_defined = 1;\n-    private boolean hasReportDefined;\n     private java.lang.String reportDefined_ = \"\";\n     public boolean hasReportDefined() {\n-      return hasReportDefined;\n+      return ((bitField0_ & 0x00000001) == 0x00000001);\n     }\n     public java.lang.String getReportDefined() {\n       return reportDefined_;\n       if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasReportDefined = true;\n+  bitField0_ = (bitField0_ | 0x00000001);\n       reportDefined_ = value;\n       onChanged();\n       return this;\n     }\n     public Builder clearReportDefined() {\n-      hasReportDefined = false;\n+      bitField0_ = (bitField0_ & ~0x00000001);\n       reportDefined_ = getDefaultInstance().getReportDefined();\n       onChanged();\n       return this;\n     }\n     \n     // optional string report_call = 2;\n-    private boolean hasReportCall;\n     private java.lang.String reportCall_ = \"\";\n     public boolean hasReportCall() {\n-      return hasReportCall;\n+      return ((bitField0_ & 0x00000002) == 0x00000002);\n     }\n     public java.lang.String getReportCall() {\n       return reportCall_;\n       if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasReportCall = true;\n+  bitField0_ = (bitField0_ | 0x00000002);\n       reportCall_ = value;\n       onChanged();\n       return this;\n     }\n     public Builder clearReportCall() {\n-      hasReportCall = false;\n+      bitField0_ = (bitField0_ & ~0x00000002);\n       reportCall_ = getDefaultInstance().getReportCall();\n       onChanged();\n       return this;\n     }\n     \n     // optional string report_exit = 6;\n-    private boolean hasReportExit;\n     private java.lang.String reportExit_ = \"\";\n     public boolean hasReportExit() {\n-      return hasReportExit;\n+      return ((bitField0_ & 0x00000004) == 0x00000004);\n     }\n     public java.lang.String getReportExit() {\n       return reportExit_;\n       if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasReportExit = true;\n+  bitField0_ = (bitField0_ | 0x00000004);\n       reportExit_ = value;\n       onChanged();\n       return this;\n     }\n     public Builder clearReportExit() {\n-      hasReportExit = false;\n+      bitField0_ = (bitField0_ & ~0x00000004);\n       reportExit_ = getDefaultInstance().getReportExit();\n       onChanged();\n       return this;\n     // repeated string declaration_to_remove = 3;\n     private java.util.List<java.lang.String> declarationToRemove_ =\n       java.util.Collections.emptyList();\n-    private boolean isDeclarationToRemoveMutable;\n     private void ensureDeclarationToRemoveIsMutable() {\n-      if (!isDeclarationToRemoveMutable) {\n+      if (!((bitField0_ & 0x00000008) == 0x00000008)) {\n         declarationToRemove_ = new java.util.ArrayList<java.lang.String>(declarationToRemove_);\n-        isDeclarationToRemoveMutable = true;\n+        bitField0_ = (bitField0_ | 0x00000008);\n        }\n     }\n     public java.util.List<java.lang.String>\n     }\n     public Builder clearDeclarationToRemove() {\n       declarationToRemove_ = java.util.Collections.emptyList();\n-      isDeclarationToRemoveMutable = false;\n+      bitField0_ = (bitField0_ & ~0x00000008);\n       onChanged();\n       return this;\n     }\n     // repeated string init = 4;\n     private java.util.List<java.lang.String> init_ =\n       java.util.Collections.emptyList();\n-    private boolean isInitMutable;\n     private void ensureInitIsMutable() {\n-      if (!isInitMutable) {\n+      if (!((bitField0_ & 0x00000010) == 0x00000010)) {\n         init_ = new java.util.ArrayList<java.lang.String>(init_);\n-        isInitMutable = true;\n+        bitField0_ = (bitField0_ | 0x00000010);\n        }\n     }\n     public java.util.List<java.lang.String>\n     }\n     public Builder clearInit() {\n       init_ = java.util.Collections.emptyList();\n-      isInitMutable = false;\n+      bitField0_ = (bitField0_ & ~0x00000010);\n       onChanged();\n       return this;\n     }\n     \n     // optional string app_name_setter = 5;\n-    private boolean hasAppNameSetter;\n     private java.lang.String appNameSetter_ = \"\";\n     public boolean hasAppNameSetter() {\n-      return hasAppNameSetter;\n+      return ((bitField0_ & 0x00000020) == 0x00000020);\n     }\n     public java.lang.String getAppNameSetter() {\n       return appNameSetter_;\n       if (value == null) {\n     throw new NullPointerException();\n   }\n-  hasAppNameSetter = true;\n+  bitField0_ = (bitField0_ | 0x00000020);\n       appNameSetter_ = value;\n       onChanged();\n       return this;\n     }\n     public Builder clearAppNameSetter() {\n-      hasAppNameSetter = false;\n+      bitField0_ = (bitField0_ & ~0x00000020);\n       appNameSetter_ = getDefaultInstance().getAppNameSetter();\n       onChanged();\n       return this;\n--- a/src/com/google/javascript/jscomp/JsMessageVisitor.java\n+++ b/src/com/google/javascript/jscomp/JsMessageVisitor.java\n \n   static final String MSG_PREFIX = \"MSG_\";\n \n-\n+  /**\n+   * Pattern for unnamed messages.\n+   * <p>\n+   * All jsmessages in js code should have unique name but messages in generated\n+   * code (i.e. from soy template) could have duplicated message names. Later we\n+   * replace the message names with ids constructed as a hash of the message\n+   * content.\n+   * <p>\n+   * <link href=\"http://code.google.com/p/closure-templates/\">\n+   * Soy</link> generates messages with names MSG_UNNAMED_<NUMBER> . This\n+   * pattern recognizes such messages.\n+   */\n   private static final Pattern MSG_UNNAMED_PATTERN =\n       Pattern.compile(\"MSG_UNNAMED_\\\\d+\");\n \n \n     // TODO(anatol): add flag that decides whether to process UNNAMED messages.\n     // Some projects would not want such functionality (unnamed) as they dont\n-\n+    // use SOY templates.\n   }\n \n   @Override", "timestamp": 1279569575, "metainfo": ""}