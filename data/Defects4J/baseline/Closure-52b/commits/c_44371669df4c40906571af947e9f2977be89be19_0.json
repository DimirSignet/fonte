{"sha": "44371669df4c40906571af947e9f2977be89be19", "log": "Make ant CompileTask sensible to last modified time Contributed by franck routier.  Fixes issue 282  Revision created by MOE tool push_codebase.  R=acleung DELTA=45  (38 added, 0 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1206098   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ant/CompileTask.java\n+++ b/src/com/google/javascript/jscomp/ant/CompileTask.java\n import java.io.IOException;\n import java.io.OutputStreamWriter;\n import java.nio.charset.Charset;\n+import java.util.Date;\n import java.util.List;\n import java.util.logging.Level;\n \n     JSSourceFile[] externs = findExternFiles();\n     JSSourceFile[] sources = findSourceFiles();\n \n-    log(\"Compiling \" + sources.length + \" file(s) with \" +\n-        externs.length + \" extern(s)\");\n-\n-    Result result = compiler.compile(externs, sources, options);\n-    if (result.success) {\n-      writeResult(compiler.toSource());\n+    if (isStale()) {\n+      log(\"Compiling \" + sources.length + \" file(s) with \" +\n+          externs.length + \" extern(s)\");\n+\n+      Result result = compiler.compile(externs, sources, options);\n+      if (result.success) {\n+        writeResult(compiler.toSource());\n+      } else {\n+        throw new BuildException(\"Compilation failed.\");\n+      }\n     } else {\n-      throw new BuildException(\"Compilation failed.\");\n+      log(\"None of the files changed. Compilation skipped.\");\n     }\n   }\n \n     log(\"Compiled javascript written to \" + this.outputFile.getAbsolutePath(),\n         Project.MSG_DEBUG);\n   }\n+\n+  /**\n+   * Determine if compilation must actually happen, i.e. if any input file\n+   * (extern or source) has changed after the outputFile was last modified.\n+   *\n+   * @return true if compilation should happen\n+   */\n+  private boolean isStale() {\n+    long lastRun = outputFile.lastModified();\n+    long sourcesLastModified = getLastModifiedTime(this.sourceFileLists);\n+    long externsLastModified = getLastModifiedTime(this.externFileLists);\n+\n+    return lastRun <= sourcesLastModified || lastRun <= externsLastModified;\n+  }\n+\n+  private long getLastModifiedTime(List<FileList> fileLists) {\n+    long lastModified = 0;\n+    for (FileList list : fileLists) {\n+      for (String fileName : list.getFiles(this.getProject())) {\n+        File path = list.getDir(this.getProject());\n+        File file = new File(path, fileName);\n+        long fileLastModified = file.lastModified();\n+        // If the file is absent, we don't know if it changed (maybe\n+        // was deleted), so assume it has just changed.\n+        if (fileLastModified == 0) {\n+          fileLastModified = new Date().getTime();\n+        }\n+        lastModified = Math.max(fileLastModified, lastModified);\n+      }\n+    }\n+    return lastModified;\n+  }\n }", "timestamp": 1289937287, "metainfo": ""}