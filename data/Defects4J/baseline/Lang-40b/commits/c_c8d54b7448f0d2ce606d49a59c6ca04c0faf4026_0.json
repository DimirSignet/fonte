{"sha": "c8d54b7448f0d2ce606d49a59c6ca04c0faf4026", "log": "Protected a Number test so it only runs in 1.3+. I suspect the JDK doesn't support the type of number we're throwing at it in 1.2:  \"1.1E-700F\" to BigDecimal.   ", "commit": "\n--- a/src/test/org/apache/commons/lang/NumberUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/NumberUtilsTest.java\n  *\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: NumberUtilsTest.java,v 1.2 2002/09/15 10:27:56 scolebourne Exp $\n+ * @version $Id: NumberUtilsTest.java,v 1.3 2002/11/22 23:30:32 bayard Exp $\n  */\n public class NumberUtilsTest extends TestCase {\n \n         assertEquals(\"createNumber(String) 12 failed\", new Float(\"1.1E20\"), NumberUtils.createNumber(\"1.1E20\"));\n         assertEquals(\"createNumber(String) 13 failed\", new Double(\"-1.1E200\"), NumberUtils.createNumber(\"-1.1E200\"));\n         assertEquals(\"createNumber(String) 14 failed\", new Double(\"1.1E-200\"), NumberUtils.createNumber(\"1.1E-200\"));\n-        assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils.createNumber(\"1.1E-700F\"));\n+\n+        // jdk 1.2 doesn't support this. unsure about jdk 1.2.2\n+        if(SystemUtils.isJavaVersionAtLeast(1.3f)) { \n+            assertEquals(\"createNumber(String) 15 failed\", new BigDecimal(\"1.1E-700\"), NumberUtils.createNumber(\"1.1E-700F\"));\n+        }\n         assertEquals(\n             \"createNumber(String) 16 failed\",\n             new Long(\"10\" + Integer.MAX_VALUE),", "timestamp": 1038007832, "metainfo": ""}