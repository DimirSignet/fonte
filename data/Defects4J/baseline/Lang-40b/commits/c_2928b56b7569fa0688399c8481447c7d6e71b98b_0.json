{"sha": "2928b56b7569fa0688399c8481447c7d6e71b98b", "log": "Change as recommended by findBugs (static variables private or final, and Boolean constructor optimisation)   ", "commit": "\n--- a/src/java/org/apache/commons/lang/BooleanUtils.java\n+++ b/src/java/org/apache/commons/lang/BooleanUtils.java\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  * @since 2.0\n- * @version $Id: BooleanUtils.java,v 1.8 2003/07/19 20:17:12 scolebourne Exp $\n+ * @version $Id: BooleanUtils.java,v 1.9 2003/07/25 23:06:58 scolebourne Exp $\n  */\n public class BooleanUtils {\n \n      * @throws IllegalArgumentException if <code>array</code> is empty.\n      */\n     public static Boolean xor(Boolean[] array) {\n-        return new Boolean(xor(ArrayUtils.toPrimitive(array)));\n+        return (xor(ArrayUtils.toPrimitive(array)) ? Boolean.TRUE : Boolean.FALSE);\n     }\n \n }\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n import org.apache.commons.lang.exception.NestableRuntimeException;\n \n /**\n- * <p>Escapes and unescapes <code>String</code>s for Java, Java Script, HTML, XML, and SQL.\n+ * <p>Escapes and unescapes <code>String</code>s for\n+ * Java, Java Script, HTML, XML, and SQL.</p>\n  *\n  * @author Apache Jakarta Turbine\n  * @author GenerationJavaCore library\n  * @author <a href=\"sean@boohai.com\">Sean Brown</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: StringEscapeUtils.java,v 1.18 2003/07/20 15:49:58 scolebourne Exp $\n+ * @version $Id: StringEscapeUtils.java,v 1.19 2003/07/25 23:06:58 scolebourne Exp $\n  */\n public class StringEscapeUtils {\n \n     /**\n      * The entity set to use when escaping and unescaping HTML.\n      */\n-    protected static Entities DEFAULT_ENTITIES = Entities.HTML40;\n+    private static final Entities DEFAULT_ENTITIES = Entities.HTML40;\n \n     /**\n      * <p><code>StringEscapeUtils</code> instances should NOT be constructed in\n--- a/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n+++ b/src/java/org/apache/commons/lang/exception/ExceptionUtils.java\n  * @author Stephen Colebourne\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: ExceptionUtils.java,v 1.26 2003/07/20 15:49:58 scolebourne Exp $\n+ * @version $Id: ExceptionUtils.java,v 1.27 2003/07/25 23:06:58 scolebourne Exp $\n  */\n public class ExceptionUtils {\n     \n      * <p>The names of methods commonly used to access a wrapped\n      * exception.</p>\n      */\n-    protected static String[] CAUSE_METHOD_NAMES = {\n+    private static String[] CAUSE_METHOD_NAMES = {\n         \"getCause\",\n         \"getNextException\",\n         \"getTargetException\",\n--- a/src/java/org/apache/commons/lang/math/RandomUtils.java\n+++ b/src/java/org/apache/commons/lang/math/RandomUtils.java\n  * \n  * @author Henri Yandell\n  * @since 2.0\n- * @version $Id: RandomUtils.java,v 1.3 2003/07/14 22:25:05 bayard Exp $\n+ * @version $Id: RandomUtils.java,v 1.4 2003/07/25 23:06:58 scolebourne Exp $\n  */\n public final class RandomUtils {\n \n-    public static Random JVM_RANDOM = new JVMRandom();\n+    public static final Random JVM_RANDOM = new JVMRandom();\n \n // should be possible for JVM_RANDOM?\n //    public static void nextBytes(byte[]) {", "timestamp": 1059174418, "metainfo": ""}