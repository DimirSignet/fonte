{"sha": "11ff5aa662b11ecdafe9c7d128f6e2211a234be3", "log": "corrected style issues (mostly empty blocks and missing javadocs)  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n      * to operate.</p>\n      */\n     public ArrayUtils() {\n+      ; // empty constructor\n     }\n     \n     // Basic methods handling multi-dimensional arrays\n--- a/src/java/org/apache/commons/lang/BooleanUtils.java\n+++ b/src/java/org/apache/commons/lang/BooleanUtils.java\n      * to operate.</p>\n      */\n     public BooleanUtils() {\n+      ; // empty constructor\n     }\n \n     // Boolean utilities\n--- a/src/java/org/apache/commons/lang/CharSetUtils.java\n+++ b/src/java/org/apache/commons/lang/CharSetUtils.java\n      * to operate.</p>\n      */\n     public CharSetUtils() {\n+      ; // empty constructor\n     }\n \n     // Factory\n--- a/src/java/org/apache/commons/lang/CharUtils.java\n+++ b/src/java/org/apache/commons/lang/CharUtils.java\n      * to operate.</p>\n      */\n     public CharUtils() {\n+      ; // empty constructor\n     }\n \n     //-----------------------------------------------------------------------\n--- a/src/java/org/apache/commons/lang/ClassUtils.java\n+++ b/src/java/org/apache/commons/lang/ClassUtils.java\n      * instance to operate.</p>\n      */\n     public ClassUtils() {\n+      ; // empty constructor\n     }\n \n     // Short class name\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n      * to operate.</p>\n      */\n     public NumberUtils() {\n+      ; // empty constructor\n     }\n \n     //--------------------------------------------------------------------\n                         }\n \n                     } catch (NumberFormatException nfe) {\n+                      ; // empty catch\n                     }\n                     //Fall through\n                 case 'd' :\n                             return d;\n                         }\n                     } catch (NumberFormatException nfe) {\n+                      ; // empty catch\n                     }\n                     try {\n                         return createBigDecimal(numeric);\n                     } catch (NumberFormatException e) {\n+                      ; // empty catch\n                     }\n                     //Fall through\n                 default :\n                 try {\n                     return createInteger(val);\n                 } catch (NumberFormatException nfe) {\n+                  ; // empty catch\n                 }\n                 try {\n                     return createLong(val);\n                 } catch (NumberFormatException nfe) {\n+                  ; // empty catch\n                 }\n                 return createBigInteger(val);\n \n                         return f;\n                     }\n                 } catch (NumberFormatException nfe) {\n+                  ; // empty catch\n                 }\n                 try {\n                     Double d = createDouble(val);\n                         return d;\n                     }\n                 } catch (NumberFormatException nfe) {\n+                  ; // empty catch\n                 }\n \n                 return createBigDecimal(val);\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n      * to operate.</p>\n      */\n     public ObjectUtils() {\n+      ; // empty constructor\n     }\n \n     // Defaulting\n          * Restricted constructor - singleton.\n          */\n         Null() {\n+          ; // empty constructor\n         }\n         \n         /**\n--- a/src/java/org/apache/commons/lang/RandomStringUtils.java\n+++ b/src/java/org/apache/commons/lang/RandomStringUtils.java\n      * to operate.</p>\n      */\n     public RandomStringUtils() {\n+      ; // empty constructor\n     }\n \n     // Random\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n      * instance to operate.</p>\n      */\n     public StringEscapeUtils() {\n+      ; // empty constructor\n     }\n \n     // Java and JavaScript\n         escapeJavaStyleString(out, str, true);\n     }\n \n+    /**\n+     * <p>Worker method for the {@link escapeJavaScript(String) method.</p>\n+     * \n+     * @param str String to escape values in, may be null\n+     * @param escapeSingleQuotes escapes single quotes if <code>true</code>\n+     * @return the escaped string\n+     */\n     private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\n         if (str == null) {\n             return null;\n         }\n     }\n \n+    /**\n+     * <p>Worker method for the {@link escapeJavaScript(String) method.</p>\n+     * \n+     * @param out write to receieve the escaped string\n+     * @param str String to escape values in, may be null\n+     * @param escapeSingleQuote escapes single quotes if <code>true</code>\n+     * @throws IOException if an IOException occurs\n+     */\n     private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n         if (out == null) {\n             throw new IllegalArgumentException(\"The Writer must not be null\");\n      *\n      * @param str  the <code>String</code> to unescape, may be null\n      * @return a new unescaped <code>String</code>, <code>null</code> if null string input\n-     * @see #escapeHtml(String)\n+     * @see #escapeHtml(Writer, String)\n      **/\n     public static String unescapeHtml(String str) {\n         if (str == null) {\n         }\n     }\n     \n+    /**\n+     * <p>Unescapes a string containing entity escapes to a string\n+     * containing the actual Unicode characters corresponding to the\n+     * escapes. Supports HTML 4.0 entities.</p>\n+     *\n+     * <p>For example, the string \"&amp;lt;Fran&amp;ccedil;ais&amp;gt;\"\n+     * will become \"&lt;Fran&ccedil;ais&gt;\"</p>\n+     *\n+     * <p>If an entity is unrecognized, it is left alone, and inserted\n+     * verbatim into the result string. e.g. \"&amp;gt;&amp;zzzz;x\" will\n+     * become \"&gt;&amp;zzzz;x\".</p>\n+     *\n+     * @param writer writer receiving the unescaped string\n+     * @param string  the <code>String</code> to unescape, may be null\n+     * @throws IOException if an IOException occurs\n+     * @see #escapeHtml(String)\n+     **/\n     public static void unescapeHtml(Writer writer, String string) throws IOException {\n         if (writer == null ) {\n             throw new IllegalArgumentException (\"The Writer must not be null.\");\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n      * StringUtils.splitByWholeSeparator(\"ab   de fg\", null, 0)    = [\"ab\", \"de\", \"fg\"]\n      * StringUtils.splitByWholeSeparator(\"ab:cd:ef\", \":\", 2)       = [\"ab\", \"cd\"]\n      * StringUtils.splitByWholeSeparator(\"abstemiouslyaeiouyabstemiously\", \"aeiouy\", 2) = [\"bst\", \"m\"]\n-     * StringUtils.splitByWholeSeparator(\"abstemiouslyaeiouyabstemiously\", \"aeiouy\", 2)  = [\"abstemiously\", \"abstemiously\"]\n+     * StringUtils.splitByWholeSeparator(\"abstemiouslyaeiouyabstemiously\", \"aeiouy\", 2) = \n+     * [\"abstemiously\", \"abstemiously\"]\n      * </pre>\n      *\n      * @param str  the String to parse, may be null\n--- a/src/java/org/apache/commons/lang/Validate.java\n+++ b/src/java/org/apache/commons/lang/Validate.java\n      * Constructor. This class should not normally be instantiated.\n      */\n     public Validate() {\n+      ; // empty constructor\n     }\n     \n     // isTrue\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n      * instance to operate.</p>\n      */\n     public WordUtils() {\n+      ; // empty constructor\n     }\n \n     // Wrapping", "timestamp": 1119807729, "metainfo": ""}