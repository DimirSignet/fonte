{"sha": "3cb05314cfe4745e02dc33f7ee6047c5a6688de1", "log": "testEscapeSql   ", "commit": "\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n  *\n  * @author of original StringUtilsTest.testEscape = ?\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n- * @version $Id: StringEscapeUtilsTest.java,v 1.7 2003/05/24 04:35:07 alex Exp $\n+ * @version $Id: StringEscapeUtilsTest.java,v 1.8 2003/06/29 03:05:45 alex Exp $\n  */\n public class StringEscapeUtilsTest extends TestCase {\n     private final static String FOO = \"foo\";\n \n     public void testEscapeHtml() {\n         for (int i = 0; i < htmlEscapes.length; ++i) {\n-            assertEquals(htmlEscapes[i][0], htmlEscapes[i][1], StringEscapeUtils.escapeHtml(htmlEscapes[i][2]));\n-            // todo: add test for (and implement) Writer-based version\n+            String message = htmlEscapes[i][0];\n+            String expected = htmlEscapes[i][1];\n+            String original = htmlEscapes[i][2];\n+            assertEquals(message, expected, StringEscapeUtils.escapeHtml(original));\n+            // todo: add test for (and implement) Writer-based version, something like this:\n+//            StringPrintWriter sw = new StringPrintWriter();\n+//            StringEscapeUtils.escapeHtml(sw, original);\n+//            assertEquals(expected, sw.getString());\n         }\n     }\n \n     // SQL\n     // see http://www.jguru.com/faq/view.jsp?EID=8881\n     //--------------------\n-    // sql doubles-up single-quotes\n-    //}\n+\n+    public void testEscapeSql() throws Exception\n+    {\n+        assertEquals(\"don''t stop\", StringEscapeUtils.escapeSql(\"don't stop\"));\n+    }\n }\n ", "timestamp": 1056855945, "metainfo": ""}