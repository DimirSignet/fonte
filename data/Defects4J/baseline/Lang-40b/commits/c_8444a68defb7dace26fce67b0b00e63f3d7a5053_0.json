{"sha": "8444a68defb7dace26fce67b0b00e63f3d7a5053", "log": "PR: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23174 Submitted by:\tMaarten Coene, Arun Mammen Thomas Reviewed by:\tGary Gregory   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/EqualsBuilder.java\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @author Pete Gieser\n+ * @author Arun Mammen Thomas\n  * @since 1.0\n- * @version $Id: EqualsBuilder.java,v 1.22 2003/12/26 22:04:49 ggregory Exp $\n+ * @version $Id: EqualsBuilder.java,v 1.23 2004/02/11 20:08:49 ggregory Exp $\n  */\n public class EqualsBuilder {\n     /**\n             return this;\n         }\n         for (int i = 0; i < lhs.length && isEquals; ++i) {\n-            Class lhsClass = lhs[i].getClass();\n-            if (!lhsClass.isInstance(rhs[i])) {\n-                isEquals = false; //If the types don't match, not equal\n-                break;\n-            }\n             append(lhs[i], rhs[i]);\n         }\n         return this;\n--- a/src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java\n  * @author <a href=\"mailto:sdowney@panix.com\">Steve Downey</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: EqualsBuilderTest.java,v 1.7 2003/08/18 02:22:26 bayard Exp $\n+ * @author Maarten Coene\n+ * @version $Id: EqualsBuilderTest.java,v 1.8 2004/02/11 20:08:49 ggregory Exp $\n  */\n public class EqualsBuilderTest extends TestCase {\n \n     }\n \n     public void testObjectArray() {\n-        TestObject[] obj1 = new TestObject[2];\n+        TestObject[] obj1 = new TestObject[3];\n         obj1[0] = new TestObject(4);\n         obj1[1] = new TestObject(5);\n-        TestObject[] obj2 = new TestObject[2];\n+        obj1[2] = null;\n+        TestObject[] obj2 = new TestObject[3];\n         obj2[0] = new TestObject(4);\n         obj2[1] = new TestObject(5);\n-        assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());\n+        obj2[2] = null;\n+        \n+        assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());\n+        assertTrue(new EqualsBuilder().append(obj2, obj2).isEquals());\n         assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());\n         obj1[1].setA(6);\n         assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());\n-\n+        obj1[1].setA(5);\n+        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());\n+        obj1[2] = obj1[1];\n+        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());\n+        obj1[2] = null;\n+        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());\n+                       \n         obj2 = null;\n         assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());\n         obj1 = null;", "timestamp": 1076530129, "metainfo": ""}