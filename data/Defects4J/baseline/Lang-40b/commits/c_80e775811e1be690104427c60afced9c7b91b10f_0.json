{"sha": "80e775811e1be690104427c60afced9c7b91b10f", "log": "Applying Hendrik Maryns' generics changes for Entities + Validate from LANG-336  ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n      *            array of entities to be added\n      */\n     public void addEntities(String[][] entityArray) {\n-        for (int i = 0; i < entityArray.length; ++i) {\n-            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));\n+        for (String[] element : entityArray) {\n+            addEntity(element[0], Integer.parseInt(element[1]));\n         }\n     }\n \n--- a/src/java/org/apache/commons/lang/Validate.java\n+++ b/src/java/org/apache/commons/lang/Validate.java\n      * @throws IllegalArgumentException if the array is empty\n      */\n     public static void notEmpty(Object[] array) {\n-        if (array == null || array.length == 0) {\n-            throw new IllegalArgumentException(\"The validated array is empty\");\n-        }\n+        notEmpty(array, \"The validated array is empty\");\n     }\n \n     // notEmpty collection\n      * @param message  the exception message you would like to see if the collection is empty\n      * @throws IllegalArgumentException if the collection is empty\n      */\n-    public static void notEmpty(Collection collection, String message) {\n+    public static void notEmpty(Collection<?> collection, String message) {\n         if (collection == null || collection.size() == 0) {\n             throw new IllegalArgumentException(message);\n         }\n      * @param collection  the collection to check is not empty\n      * @throws IllegalArgumentException if the collection is empty\n      */\n-    public static void notEmpty(Collection collection) {\n-        if (collection == null || collection.size() == 0) {\n-            throw new IllegalArgumentException(\"The validated collection is empty\");\n-        }\n+    public static void notEmpty(Collection<?> collection) {\n+        notEmpty(collection, \"The validated collection is empty\");\n     }\n \n     // notEmpty map\n      * @param message  the exception message you would like to see if the map is empty\n      * @throws IllegalArgumentException if the map is empty\n      */\n-    public static void notEmpty(Map map, String message) {\n+    public static void notEmpty(Map<?,?> map, String message) {\n         if (map == null || map.size() == 0) {\n             throw new IllegalArgumentException(message);\n         }\n      * @param map  the map to check is not empty\n      * @throws IllegalArgumentException if the map is empty\n      */\n-    public static void notEmpty(Map map) {\n-        if (map == null || map.size() == 0) {\n-            throw new IllegalArgumentException(\"The validated map is empty\");\n-        }\n+    public static void notEmpty(Map<?,?> map) {\n+        notEmpty(map, \"The validated map is empty\");\n     }\n \n     // notEmpty string\n      * @throws IllegalArgumentException if the string is empty\n      */\n     public static void notEmpty(String string) {\n-        if (string == null || string.length() == 0) {\n-            throw new IllegalArgumentException(\"The validated string is empty\");\n-        }\n+        notEmpty(string, \"The validated string is empty\");\n     }\n \n     // notNullElements array", "timestamp": 1241241644, "metainfo": ""}