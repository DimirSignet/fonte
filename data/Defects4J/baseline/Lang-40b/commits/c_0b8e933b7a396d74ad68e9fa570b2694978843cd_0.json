{"sha": "0b8e933b7a396d74ad68e9fa570b2694978843cd", "log": "Type doesn't need to be ArrayList, and updating for loops  ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java\n import java.lang.reflect.AccessibleObject;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n+\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.List;\n \n import org.apache.commons.lang.ArrayUtils;\n import org.apache.commons.lang.ClassUtils;\n      * @return The given array or a new array without null.\n      */\n     static String[] toNoNullStringArray(Object[] array) {\n-        ArrayList<String> list = new ArrayList<String>(array.length);\n-        for (int i = 0; i < array.length; i++) {\n-            Object e = array[i];\n+        List<String> list = new ArrayList<String>(array.length);\n+        for (Object e : array) {\n             if (e != null) {\n                 list.add(e.toString());\n             }\n         }\n         Field[] fields = clazz.getDeclaredFields();\n         AccessibleObject.setAccessible(fields, true);\n-        for (int i = 0; i < fields.length; i++) {\n-            Field field = fields[i];\n+        for (Field field : fields) {\n             String fieldName = field.getName();\n             if (this.accept(field)) {\n                 try {", "timestamp": 1241685721, "metainfo": ""}