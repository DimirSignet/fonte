{"sha": "87b88c0e15834d255aeea6b8c783ae20eaf79680", "log": "improving javadoc added apos entity to XML escape/unescape add test for \"unknown entity\" behavior   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n  * <a href=\"http://hotwired.lycos.com/webmonkey/reference/special_characters/\">WebMonkey</a>\n  * <a href=\"http://www.w3.org/TR/REC-html32#latin1\">HTML 3.2</a>\n  * <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html</a>HTML 4.0</a>\n- * </p>\n+ * <a href=\"http://www.w3.org/TR/html401/charset.html#h-5.3\"</a>Character references</a>\n+ * <a href=\"http://www.w3.org/TR/html401/charset.html#code-position</a>HTML 4.0: code positions</a>\n+/p>\n  *\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @since 2.0\n- * @version $Id: Entities.java,v 1.1 2003/04/09 20:55:32 alex Exp $\n+ * @version $Id: Entities.java,v 1.2 2003/04/09 21:30:18 alex Exp $\n  */\n class Entities {\n \n         {\"amp\", \"38\"}, // & - ampersand\n         {\"lt\", \"60\"}, // < - less-than\n         {\"gt\", \"62\"}, // > - greater-than\n+    };\n+\n+    static private Object[][] apos = {\n+        {\"apos\", \"39\"}, // XML apostrophe\n     };\n \n     static private Object[][] iso8859_1 = {\n     static {\n         XML = new Entities();\n         XML.addEntities(basic);\n+        XML.addEntities(apos);\n     }\n \n     static {\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n  * @author Helge Tesgaard\n  * @author <a href=\"sean@boohai.com\">Sean Brown</a>\n  * @since 2.0\n- * @version $Id: StringEscapeUtils.java,v 1.6 2003/04/09 20:55:32 alex Exp $\n+ * @version $Id: StringEscapeUtils.java,v 1.7 2003/04/09 21:30:18 alex Exp $\n  */\n public class StringEscapeUtils {\n \n      * For example: <tt>\"bread\" & \"butter\"</tt> => <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.\n      * </p>\n      * <p>Supports all known HTML 4.0 entities, including funky accents.\n-     * See the source code for more detail.\n-     * </p>\n-     * @see http://hotwired.lycos.com/webmonkey/reference/special_characters/\n+     * </p>\n+     * <p>\n+     * See <a href=\"http://hotwired.lycos.com/webmonkey/reference/special_characters/\">WebMonkey</a>\n+     * <a href=\"http://www.w3.org/TR/REC-html32#latin1\">HTML 3.2</a>\n+     * <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html</a>HTML 4.0</a>\n+     * <a href=\"http://www.w3.org/TR/html401/charset.html#h-5.3\"</a>Character references</a>\n+     * <a href=\"http://www.w3.org/TR/html401/charset.html#code-position</a>HTML 4.0: code positions</a>\n+     * </p>\n      * @see Entities\n      * @see #unescapeHtml(String)\n      **/\n     }\n \n     /**\n-     * Given a string containing entity escapes, returns a string\n+     * <p>Given a string containing entity escapes, returns a string\n      * containing the actual Unicode characters corresponding to the\n-     * escapes.\n+     * escapes.  Supports HTML 4.0 entities.</p>\n+     * <p>For example, the string \"&amp;lt;Fran&ccedilla;ais&amp;gt;\"\n+     * will become \"<Fran\\u00E7ais>\"</p>\n+     * <p>If an entity is unrecognized, it is left alone, and inserted\n+     * verbatim into the result string. e.g. \"&amp;gt;&amp;zzzz;x\" will\n+     * become \"&gt;&amp;zzzz;x\".</p>\n      *\n      * @see #escapeHtml(String)\n      **/\n     /**\n      * <p>Turns funky characters into XML entity equivalents.</p>\n      * <p>\n-     * For example: <tt>\"bread\" & \"butter\"</tt> => <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.\n+     * For example: <tt>\"bread\" & \"butter\"</tt> =>\n+     * <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>.\n      * </p>\n      * <p>\n      * Supports only the four basic XML entities (gt, lt, quot, amp).\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n  *\n  * @author of original StringUtilsTest.testEscape = ?\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n- * @version $Id: StringEscapeUtilsTest.java,v 1.4 2003/04/09 20:55:33 alex Exp $\n+ * @version $Id: StringEscapeUtilsTest.java,v 1.5 2003/04/09 21:30:18 alex Exp $\n  */\n public class StringEscapeUtilsTest extends TestCase {\n     private final static String FOO = \"foo\";\n         assertEquals(\"funny chars pass through OK\", \"Fran\\u00E7ais\", StringEscapeUtils.unescapeHtml(\"Fran\\u00E7ais\"));\n     }\n \n+    public void testUnescapeUnknownEntity() throws Exception\n+    {\n+        assertEquals(\"&zzzz;\", StringEscapeUtils.unescapeHtml(\"&zzzz;\"));\n+    }\n+\n     public void testEscapeHtmlVersions() throws Exception\n     {\n         assertEquals(\"&Beta;\", StringEscapeUtils.escapeHtml(\"\\u0392\"));\n                 \"&#161;\", StringEscapeUtils.escapeXml(\"\\u00A1\"));\n         assertEquals(\"XML should use numbers, not names for HTML entities\",\n                 \"\\u00A0\", StringEscapeUtils.unescapeXml(\"&#160;\"));\n+\n+        assertEquals(\"ain't\", StringEscapeUtils.unescapeXml(\"ain&apos;t\"));\n+        assertEquals(\"ain&apos;t\", StringEscapeUtils.escapeXml(\"ain't\"));\n     }\n \n     // SQL\n     // see http://www.jguru.com/faq/view.jsp?EID=8881\n     //--------------------\n-//    public void testEscapeSQL() throws Exception {\n     // sql doubles-up single-quotes\n-//    }\n+    //}\n }\n ", "timestamp": 1049923818, "metainfo": ""}