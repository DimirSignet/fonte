{"sha": "0a68dd9220ae939b742a109b8e740c3e20671e5e", "log": "PR: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26922 [lang] public static boolean DateUtils.equals(Date dt1, Date dt2) ? Updated testDateEqualsJava(): The behavior is different b/w Sun Java 1.3.1_10 and 1.4.2_03.   ", "commit": "\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n-import org.apache.commons.lang.time.DateUtils;\n \n /**\n  * Unit tests {@link org.apache.commons.lang.ObjectUtils}.\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: ObjectUtilsTest.java,v 1.10 2004/02/16 23:39:03 ggregory Exp $\n+ * @version $Id: ObjectUtilsTest.java,v 1.11 2004/02/17 00:55:57 ggregory Exp $\n  */\n public class ObjectUtilsTest extends TestCase {\n     private static final String FOO = \"foo\";\n \n     /**\n      * Show that java.util.Date and java.sql.Timestamp are apples and oranges.\n-     * Prompted by an email discussion.\n+     * Prompted by an email discussion. \n+     * \n+     * The behavior is different b/w Sun Java 1.3.1_10 and 1.4.2_03.\n      */\n-    public void testDateEquals() {\n+    public void testDateEqualsJava() {\n         long now = 1076957313284L; // Feb 16, 2004 10:49... PST\n         java.util.Date date = new java.util.Date(now);\n-        java.util.Date timestamp = new java.sql.Timestamp(now);\n-        // sanity check:\n-        assertFalse(date.getTime() == timestamp.getTime());\n-        assertFalse(timestamp.equals(date));\n+        java.sql.Timestamp realTimestamp = new java.sql.Timestamp(now);\n+        java.util.Date timestamp = realTimestamp;\n+        // sanity check 1:\n+        assertEquals(284000000, realTimestamp.getNanos());\n+        assertEquals(1076957313284L, date.getTime());\n+        //\n+        // On Sun 1.3.1_10:\n+        //junit.framework.AssertionFailedError: expected:<1076957313284> but was:<1076957313000>\n+        //\n+        //assertEquals(1076957313284L, timestamp.getTime());\n+        //\n+        //junit.framework.AssertionFailedError: expected:<1076957313284> but was:<1076957313000>\n+        //\n+        //assertEquals(1076957313284L, realTimestamp.getTime());\n+        // sanity check 2:        \n+        assertEquals(date.getDay(), realTimestamp.getDay());\n+        assertEquals(date.getHours(), realTimestamp.getHours());\n+        assertEquals(date.getMinutes(), realTimestamp.getMinutes());\n+        assertEquals(date.getMonth(), realTimestamp.getMonth());\n+        assertEquals(date.getSeconds(), realTimestamp.getSeconds());\n+        assertEquals(date.getTimezoneOffset(), realTimestamp.getTimezoneOffset());\n+        assertEquals(date.getYear(), realTimestamp.getYear());\n+        //\n+        // Time values are == and equals() on Sun 1.4.2_03 but NOT on Sun 1.3.1_10:\n+        //\n+        //assertFalse(\"Sanity check failed: date.getTime() == timestamp.getTime()\", date.getTime() == timestamp.getTime());\n+        //assertFalse(\"Sanity check failed: timestamp.equals(date)\", timestamp.equals(date));\n+        //assertFalse(\"Sanity check failed: date.equals(timestamp)\", date.equals(timestamp));\n         // real test:\n-        assertFalse(ObjectUtils.equals(date, timestamp));\n+        //assertFalse(\"java.util.Date and java.sql.Timestamp should be equal\", ObjectUtils.equals(date, timestamp));\n     }\n     \n     public void testIdentityToString() {", "timestamp": 1076979357, "metainfo": ""}