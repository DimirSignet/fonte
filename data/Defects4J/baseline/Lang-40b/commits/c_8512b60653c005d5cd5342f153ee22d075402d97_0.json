{"sha": "8512b60653c005d5cd5342f153ee22d075402d97", "log": "Javadoc comments for serialVersionUID.  ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharRange.java\n+++ b/src/java/org/apache/commons/lang/CharRange.java\n  */\n public final class CharRange implements Serializable {\n \n-    /** Serialization lock, Lang version 2.0. */\n+    /**\n+     * Required for serialization support. Lang version 2.0. \n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 8270183163158333422L;\n     \n     /** The first character, inclusive, in the range. */\n--- a/src/java/org/apache/commons/lang/CharSet.java\n+++ b/src/java/org/apache/commons/lang/CharSet.java\n  */\n public class CharSet implements Serializable {\n \n-    /** Serialization lock, Lang version 2.0. */\n+    /**\n+     * Required for serialization support. Lang version 2.0. \n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 5947847346149275958L;\n \n     /** \n--- a/src/java/org/apache/commons/lang/IllegalClassException.java\n+++ b/src/java/org/apache/commons/lang/IllegalClassException.java\n  */\n public class IllegalClassException extends IllegalArgumentException {\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 8063272569377254819L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/IncompleteArgumentException.java\n+++ b/src/java/org/apache/commons/lang/IncompleteArgumentException.java\n  */\n public class IncompleteArgumentException extends IllegalArgumentException {\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 4954193403612068178L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/NotImplementedException.java\n+++ b/src/java/org/apache/commons/lang/NotImplementedException.java\n \n     private static final String DEFAULT_MESSAGE = \"Code is not implemented\";\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -6894122266938754088L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/NullArgumentException.java\n+++ b/src/java/org/apache/commons/lang/NullArgumentException.java\n  */\n public class NullArgumentException extends IllegalArgumentException {\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1174360235354917591L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n      * cannot be stored.</p>\n      */\n     public static class Null implements Serializable {\n-        // declare serialization compatibility with Commons Lang 1.0\n+        /**\n+         * Required for serialization support. Declare serialization compatibility with Commons Lang 1.0\n+         * \n+         * @see java.io.Serializable\n+         */\n         private static final long serialVersionUID = 7092611880189329093L;\n         \n         /**\n--- a/src/java/org/apache/commons/lang/SerializationException.java\n+++ b/src/java/org/apache/commons/lang/SerializationException.java\n  */\n public class SerializationException extends NestableRuntimeException {\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 4029025366392702726L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/UnhandledException.java\n+++ b/src/java/org/apache/commons/lang/UnhandledException.java\n  */\n public class UnhandledException extends NestableRuntimeException {\n \n-    /** Serialization version. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1832101364842773720L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/builder/StandardToStringStyle.java\n+++ b/src/java/org/apache/commons/lang/builder/StandardToStringStyle.java\n  */\n public class StandardToStringStyle extends ToStringStyle {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n+++ b/src/java/org/apache/commons/lang/builder/ToStringStyle.java\n      */\n     private static final class DefaultToStringStyle extends ToStringStyle {\n \n+        /**\n+         * Required for serialization support.\n+         * \n+         * @see java.io.Serializable\n+         */\n         private static final long serialVersionUID = 1L;\n \n         /**\n--- a/src/java/org/apache/commons/lang/enum/Enum.java\n+++ b/src/java/org/apache/commons/lang/enum/Enum.java\n  */\n public abstract class Enum implements Comparable, Serializable {\n \n-    /** Lang version 1.0.1 serial compatibility */\n+    /**\n+     * Required for serialization support. Lang version 1.0.1 serial compatibility.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -487045951170455942L;\n     \n     // After discussion, the default size for HashMaps is used, as the\n--- a/src/java/org/apache/commons/lang/enum/ValuedEnum.java\n+++ b/src/java/org/apache/commons/lang/enum/ValuedEnum.java\n  */\n public abstract class ValuedEnum extends Enum {\n     \n-    /** Lang version 1.0.1 serial compatibility */\n+    /**\n+     * Required for serialization support. Lang version 1.0.1 serial compatibility.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -7129650521543789085L;\n     \n     /**\n--- a/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n  */\n public class NestableDelegate implements Serializable {\n \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/exception/NestableError.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableError.java\n  */\n public class NestableError extends Error implements Nestable {\n \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/exception/NestableException.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableException.java\n  */\n public class NestableException extends Exception implements Nestable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java\n  */\n public class NestableRuntimeException extends RuntimeException implements Nestable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/DoubleRange.java\n+++ b/src/java/org/apache/commons/lang/math/DoubleRange.java\n  */\n public final class DoubleRange extends Range implements Serializable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 71849363892740L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/FloatRange.java\n+++ b/src/java/org/apache/commons/lang/math/FloatRange.java\n  */\n public final class FloatRange extends Range implements Serializable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 71849363892750L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/Fraction.java\n+++ b/src/java/org/apache/commons/lang/math/Fraction.java\n  */\n public final class Fraction extends Number implements Serializable, Comparable {\n \n-    /** Serialization lock, Lang version 2.0 */\n+    /**\n+     * Required for serialization support. Lang version 2.0.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 65382027393090L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/IntRange.java\n+++ b/src/java/org/apache/commons/lang/math/IntRange.java\n  */\n public final class IntRange extends Range implements Serializable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 71849363892730L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/JVMRandom.java\n+++ b/src/java/org/apache/commons/lang/math/JVMRandom.java\n  */\n public final class JVMRandom extends Random {\n \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/LongRange.java\n+++ b/src/java/org/apache/commons/lang/math/LongRange.java\n  */\n public final class LongRange extends Range implements Serializable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 71849363892720L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/math/NumberRange.java\n+++ b/src/java/org/apache/commons/lang/math/NumberRange.java\n  */\n public final class NumberRange extends Range implements Serializable {\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 71849363892710L;\n \n     /**\n--- a/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n  */\n public class MutableBoolean implements Mutable, Serializable, Comparable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -4830728138360036487L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableByte.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableByte.java\n  */\n public class MutableByte extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -1585823265L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n  */\n public class MutableDouble extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1587163916L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n  */\n public class MutableFloat extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 5787169186L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableInt.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableInt.java\n  */\n public class MutableInt extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 512176391864L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableLong.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableLong.java\n  */\n public class MutableLong extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 62986528375L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableObject.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableObject.java\n  */\n public class MutableObject implements Mutable, Serializable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 86241875189L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/mutable/MutableShort.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableShort.java\n  */\n public class MutableShort extends Number implements Comparable, Mutable {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -2135791679L;\n \n     /** The mutable value. */\n--- a/src/java/org/apache/commons/lang/text/CompositeFormat.java\n+++ b/src/java/org/apache/commons/lang/text/CompositeFormat.java\n  */\n public class CompositeFormat extends Format {\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = -4329119827877627683L;\n \n     /** The parser to use. */\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n      */\n     static final int CAPACITY = 32;\n \n-    /** Serialization lock. */\n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 7628716375283629643L;\n \n     /** Internal data storage. */\n--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java\n     // taking the value and adding (mathematically) the ASCII value for '0'.\n     // So, don't change this code! It works and is very fast.\n     \n+    /**\n+     * Required for serialization support.\n+     * \n+     * @see java.io.Serializable\n+     */\n     private static final long serialVersionUID = 1L;\n \n     /**", "timestamp": 1154978071, "metainfo": ""}