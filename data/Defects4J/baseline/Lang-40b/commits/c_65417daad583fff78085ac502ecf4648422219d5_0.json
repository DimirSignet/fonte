{"sha": "65417daad583fff78085ac502ecf4648422219d5", "log": "Removing escapeSql per LANG-493  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n     }\n \n     //-----------------------------------------------------------------------\n-    /**\n-     * <p>Escapes the characters in a <code>String</code> to be suitable to pass to\n-     * an SQL query.</p>\n-     *\n-     * <p>For example,\n-     * <pre>statement.executeQuery(\"SELECT * FROM MOVIES WHERE TITLE='\" + \n-     *   StringEscapeUtils.escapeSql(\"McHale's Navy\") + \n-     *   \"'\");</pre>\n-     * </p>\n-     *\n-     * <p>At present, this method only turns single-quotes into doubled single-quotes\n-     * (<code>\"McHale's Navy\"</code> => <code>\"McHale''s Navy\"</code>). It does not\n-     * handle the cases of percent (%) or underscore (_) for use in LIKE clauses.</p>\n-     *\n-     * see http://www.jguru.com/faq/view.jsp?EID=8881\n-     * @param str  the string to escape, may be null\n-     * @return a new String, escaped for SQL, <code>null</code> if null string input\n-     */\n-    public static String escapeSql(String str) {\n-        if (str == null) {\n-            return null;\n-        }\n-        return StringUtils.replace(str, \"'\", \"''\");\n-    }\n-\n-    //-----------------------------------------------------------------------\n \n     /**\n      * <p>Returns a <code>String</code> value for a CSV column enclosed in double quotes,\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n         assertEquals(\"XML was unescaped incorrectly\", \"<abc>\", sw.toString() );\n     }\n \n-    // SQL\n-    // see http://www.jguru.com/faq/view.jsp?EID=8881\n-    //--------------------\n-\n-    public void testEscapeSql() throws Exception\n-    {\n-        assertEquals(\"don''t stop\", StringEscapeUtils.escapeSql(\"don't stop\"));\n-        assertEquals(\"\", StringEscapeUtils.escapeSql(\"\"));\n-        assertEquals(null, StringEscapeUtils.escapeSql(null));\n-    }\n-\n     // Tests issue #38569\n     // http://issues.apache.org/bugzilla/show_bug.cgi?id=38569\n     public void testStandaloneAmphersand() {", "timestamp": 1245562504, "metainfo": ""}