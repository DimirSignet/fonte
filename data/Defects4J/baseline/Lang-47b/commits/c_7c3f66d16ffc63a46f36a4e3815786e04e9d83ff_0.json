{"sha": "7c3f66d16ffc63a46f36a4e3815786e04e9d83ff", "log": "More tests. Note that testReplaceStringString fails.  ", "commit": "\n--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n         assertEquals(3, sb7.size());\n     }\n \n+    public void testDeleteChar() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.delete('X');\n+        assertEquals(\"abc\",sb.toString()); \n+        sb.delete('a');\n+        assertEquals(\"bc\",sb.toString()); \n+    }\n+    \n+    public void testDeleteIntInt() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.delete(0, 1);\n+        assertEquals(\"bc\",sb.toString()); \n+        sb.delete(1, 2);\n+        assertEquals(\"b\",sb.toString());\n+        sb.delete(0, 1);\n+        assertEquals(\"\",sb.toString()); \n+        sb.delete(0, 1);\n+        assertEquals(\"\",sb.toString()); \n+    }\n+    \n+    public void testDeleteString() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.delete(\"X\");\n+        assertEquals(\"abc\",sb.toString()); \n+        sb.delete(\"a\");\n+        assertEquals(\"bc\",sb.toString()); \n+    }\n+    \n+    public void testDeleteCharAt() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.deleteCharAt(0);\n+        assertEquals(\"bc\",sb.toString()); \n+    }\n+    \n+    public void testDeleteCharAtExceptions() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        try {\n+            sb.deleteCharAt(1000);\n+            fail(\"Expected StringIndexOutOfBoundsException\");\n+        } catch (StringIndexOutOfBoundsException e) {\n+            // Expected\n+        }\n+    }\n+    \n     //-----------------------------------------------------------------------\n     public void testCapacityAndLength() {\n         StrBuilder sb = new StrBuilder();\n         }\n     }\n \n+    public void testReplaceCharChar() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.replace('a', 'd');\n+        assertEquals(\"dbc\", sb.toString());\n+        sb.replace('a', 'd');\n+        assertEquals(\"dbc\", sb.toString());\n+        \n+        sb = new StrBuilder(\"aabbcc\");\n+        sb.replace('a', 'd');\n+        assertEquals(\"ddbbcc\", sb.toString());\n+        sb.replace('a', 'd');\n+        assertEquals(\"ddbbcc\", sb.toString());\n+    }\n+    \n+    public void testReplaceStringString() {\n+        StrBuilder sb = new StrBuilder(\"abc\");\n+        sb.replace(\"a\", \"d\");\n+        assertEquals(\"dbc\", sb.toString());\n+        sb.replace(\"a\", \"d\");\n+        assertEquals(\"dbc\", sb.toString());\n+        \n+        sb = new StrBuilder(\"aabbcc\");\n+        sb.replace(\"a\", \"d\");\n+        assertEquals(\"ddbbcc\", sb.toString());\n+        sb.replace(\"a\", \"d\");\n+        assertEquals(\"ddbbcc\", sb.toString());\n+    }\n+    \n     public void testSetCharAt() {\n         StrBuilder sb = new StrBuilder();\n         try {\n         assertEquals(\"bar\", sb.toString());\n     }\n \n+    public void testStartsWith() {\n+        this.testStartsWith(new StrBuilder());\n+        this.testStartsWith(new StrBuilder(\"\"));\n+        this.testStartsWith(new StrBuilder(null));\n+    }\n+    \n+    void testStartsWith(StrBuilder sb ) {\n+        assertFalse(sb.startsWith(\"a\"));\n+        assertFalse(sb.startsWith(null));\n+        assertTrue(sb.startsWith(\"\"));\n+        sb.append(\"abc\");\n+        assertTrue(sb.startsWith(\"a\"));\n+        assertTrue(sb.startsWith(\"ab\"));\n+        assertTrue(sb.startsWith(\"abc\"));\n+    }\n+    \n+    public void testEndsWith() {\n+        this.testEndsWith(new StrBuilder());\n+        this.testEndsWith(new StrBuilder(\"\"));\n+        this.testEndsWith(new StrBuilder(null));\n+    }\n+    \n+    void testEndsWith(StrBuilder sb) {\n+        assertFalse(sb.endsWith(\"a\"));\n+        assertFalse(sb.endsWith(\"c\"));\n+        assertTrue(sb.endsWith(\"\"));\n+        assertFalse(sb.endsWith(null));\n+        sb.append(\"abc\");\n+        assertTrue(sb.endsWith(\"c\"));\n+        assertTrue(sb.endsWith(\"bc\"));\n+        assertTrue(sb.endsWith(\"abc\"));\n+        assertFalse(sb.endsWith(\"abcd\"));\n+        assertFalse(sb.endsWith(\" abc\"));\n+        assertFalse(sb.endsWith(\"abc \"));\n+    }\n+    \n     //-----------------------------------------------------------------------\n     public void testNullText() {\n         StrBuilder sb = new StrBuilder();", "timestamp": 1122924859, "metainfo": ""}