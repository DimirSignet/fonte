{"sha": "f1f8d35a8adf1107d573a360800b4f1d00b44398", "log": "Javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author Arun Mammen Thomas\n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.44 2003/04/16 04:37:33 bayard Exp $\n+ * @version $Id: StringUtils.java,v 1.45 2003/05/30 01:00:24 ggregory Exp $\n  */\n public class StringUtils {\n \n      * @see java.lang.String#trim()\n      * @param str the String to check\n      * @return the trimmed text (never <code>null</code>)\n-     * @deprecated use the clearer named trimToEmpty(String)\n+     * @deprecated Use the clearer named {@link #trimToEmpty(String)}.\n      */\n     public static String clean(String str) {\n         return (str == null ? \"\" : str.trim());\n      *\n      * Note that this behavior has changed from 1.0.  It\n      * now more closely matches Perl chomp.  For the previous behavior,\n-     * use slice(String,String).\n+     * use {@link #slice(String,String)}.\n      *\n      * @param str string to chomp from\n      * @param separator separator string\n      * @param str String to chomp from\n      * @return String without chomped ending\n      * @throws NullPointerException if str is <code>null</code>\n-     * @deprecated use chomp(String) instead\n+     * @deprecated Use {@link #chomp(String)} instead.\n      */\n     public static String chompLast(String str) {\n         return chompLast(str, \"\\n\");\n      * @param sep String to chomp\n      * @return String without chomped ending\n      * @throws NullPointerException if str or sep is <code>null</code>\n-     * @deprecated use chomp(String,String) instead\n+     * @deprecated Use {@link #chomp(String,String)} instead.\n      */\n     public static String chompLast(String str, String sep) {\n         if (str.length() == 0) {\n      * @param sep String to chomp\n      * @return String chomped\n      * @throws NullPointerException if str or sep is <code>null</code>\n-     * @deprecated use sliceRemainder(String,String) instead\n+     * @deprecated Use {@link #sliceRemainder(String,String)} instead.\n      */\n     public static String getChomp(String str, String sep) {\n         int idx = str.lastIndexOf(sep);\n      * @param sep String to chomp\n      * @return String without chomped beginning\n      * @throws NullPointerException if str or sep is <code>null</code>\n-     * @deprecated use sliceFirstRemainder(String,String) instead\n+     * @deprecated Use {@link #sliceFirstRemainder(String,String)} instead.\n      */\n     public static String prechomp(String str, String sep) {\n         int idx = str.indexOf(sep);\n      * @param sep String to chomp\n      * @return String prechomped\n      * @throws NullPointerException if str or sep is <code>null</code>\n-     * @deprecated use sliceFirst(String) instead\n+     * @deprecated Use {@link #sliceFirst(String,String)} instead.\n      */\n     public static String getPrechomp(String str, String sep) {\n         int idx = str.indexOf(sep);\n      * @param str String to chop a newline from\n      * @return String without newline\n      * @throws NullPointerException if str is <code>null</code>\n-     * @deprecated use chomp(String) instead\n+     * @deprecated Use {@link #chomp(String)} instead.\n      */\n     public static String chopNewline(String str) {\n         int lastIdx = str.length() - 1;", "timestamp": 1054256424, "metainfo": ""}