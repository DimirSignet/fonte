{"sha": "62b59904cf9386a77b1eeb3da082cc9ae02aeb11", "log": "Added an ISO 8601 formatter for the date time extended format used in durations, with XML Schema durations particularly in mind. Note that the util class is still a package level class only.   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n  */\n package org.apache.commons.lang.time;\n \n+import java.util.Calendar;\n+import java.util.TimeZone;\n+\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n  * @author <a href=\"mailto:sbailliez@apache.org\">Stephane Bailliez</a>\n  * @author <a href=\"mailto:stefan.bodewig@epost.de\">Stefan Bodewig</a>\n  * @author Stephen Colebourne\n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  */\n public class DurationFormatUtilsTest extends TestCase {\n \n         time = 12789 + 62 * 60000;\n         assertEquals(\"1:02:12.789\", DurationFormatUtils.formatISO(time));\n     }\n+\n+    public void testISODurationFormat(){\n+        TimeZone timeZone = TimeZone.getTimeZone(\"GMT-3\");\n+        Calendar cal = Calendar.getInstance(timeZone);\n+        cal.set(2002, 1, 23, 9, 11, 12);\n+        cal.set(Calendar.MILLISECOND, 1);\n+        String text;\n+        // repeat a test from testDateTimeISO to compare extended and not extended.\n+        text = DateFormatUtils.ISO_DATETIME_TIMEZONE_FORMAT.format(cal);\n+        assertEquals(\"2002-02-23T09:11:12-03:00\", text);\n+        // test fixture is the same as above, but now with extended format.\n+        text = DurationFormatUtils.ISO_EXTENDED_FORMAT.format(cal);\n+        assertEquals(\"P2002Y2M23DT9H11M12.1S\", text);\n+        // test fixture from example in http://www.w3.org/TR/xmlschema-2/#duration\n+        cal.set(1, 1, 3, 10, 30, 0);\n+        cal.set(Calendar.MILLISECOND, 0);\n+        text = DurationFormatUtils.ISO_EXTENDED_FORMAT.format(cal);\n+        assertEquals(\"P1Y2M3DT10H30M0.0S\", text);\n+        // want a way to say 'don't print the seconds in format()' or other fields for that matter:\n+        //assertEquals(\"P1Y2M3DT10H30M\", text);\n+    }\n+\n     \n }", "timestamp": 1058547954, "metainfo": ""}