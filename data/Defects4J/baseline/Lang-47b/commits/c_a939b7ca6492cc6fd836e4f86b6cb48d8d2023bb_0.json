{"sha": "a939b7ca6492cc6fd836e4f86b6cb48d8d2023bb", "log": "corrected a couple of refactoring items missed:    - in testGetThrowableI, replaced construction of explicit class instance with getThrowable abstract method    - in testPrintPartialStackTrace, replaced class name in startsWith assert from explcit class name to class from getNestable abstract method    - in testPrintStackTrace, replaced class name in startsWith assert from explicit class name to class name from getThrowableClass abstract method    - in testPrintStackTrace, replaced class name in indexOf assert from explicit class name to class name from getNestable abstract method removed extranous commented code   ", "commit": "\n--- a/src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java\n  * interface.\n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: AbstractNestableTestCase.java,v 1.1 2002/09/11 18:16:10 stevencaswell Exp $\n+ * @version $Id: AbstractNestableTestCase.java,v 1.2 2002/09/11 19:40:14 stevencaswell Exp $\n  */\n public abstract class AbstractNestableTestCase extends TestCase\n {\n         throwables = new Class[2];\n         throwables[0] = getTester1Class();\n         throwables[1] = getThrowableClass();\n-        n = new NestableExceptionTester1(getThrowable(msgs[1]));\n+        n = getTester1(getThrowable(msgs[1]));\n         doNestableExceptionGetThrowableI(n, throwables, msgs);\n  \n         msgs = new String[5];\n         msgs[0] = null;\n         msgs[1] = \"level 2\";\n         throwables = new Class[2];\n-//        throwables[0] = NestableExceptionTester1.class;\n         throwables[0] = getTester1Class();\n         throwables[1] = getThrowableClass();\n         n = getTester1(getThrowable(msgs[1]));\n         PrintWriter pw2 = new PrintWriter(ps2, true);\n         ne9.printPartialStackTrace(pw2);\n         String stack2 = baos2.toString();\n-        assertTrue(\"stack trace startsWith == org.apache.commons.lang.exception.NestableException: ne9: ne9 exception\",\n-            stack2.startsWith(\"org.apache.commons.lang.exception.NestableException: ne9: ne9 exception\"));\n+        String startsWith = ne9.getClass().getName() + \": ne9: ne9 exception\";\n+        assertTrue(\"stack trace startsWith == \" + startsWith,\n+            stack2.startsWith(startsWith));\n         assertEquals(\"stack trace indexOf rethrown == -1\",\n             stack2.indexOf(\"rethrown\"), -1);\n     }\n         PrintWriter pw1 = new PrintWriter(ps1, true);\n         ne8.printStackTrace(ps1);\n         String stack1 = baos1.toString();\n-        assertTrue(\"stack trace startsWith == java.lang.Exception: ne8 exception\",\n-            stack1.startsWith(\"java.lang.Exception: ne8 exception\")); \n-        assertTrue(\"stack trace indexOf org.apache.commons.lang.exception.NestableException: ne8: ne8 exception > -1\",\n-            stack1.indexOf(\"org.apache.commons.lang.exception.NestableException: ne8: ne8 exception\") > -1); \n+        String startsWith = getThrowableClass().getName() + \": ne8 exception\";\n+        assertTrue(\"stack trace startsWith == \" + startsWith,\n+            stack1.startsWith(startsWith));\n+        String indexOf = ne8.getClass().getName() + \": ne8: ne8 exception\";\n+        assertTrue(\"stack trace indexOf \" + indexOf + \" > -1\",\n+            stack1.indexOf(indexOf) > -1); \n     }\n \n     /**", "timestamp": 1031773214, "metainfo": ""}