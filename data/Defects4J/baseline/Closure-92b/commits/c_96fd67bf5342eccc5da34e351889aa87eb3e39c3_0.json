{"sha": "96fd67bf5342eccc5da34e351889aa87eb3e39c3", "log": "Turn the symbol check off unless --warnings_level == VERBOSE    ", "commit": "\n--- a/src/com/google/javascript/jscomp/WarningLevel.java\n+++ b/src/com/google/javascript/jscomp/WarningLevel.java\n    * @param options The CompilerOptions object to set the options on.\n    */\n   private static void addDefaultWarnings(CompilerOptions options) {\n-    options.checkSymbols = true;\n     options.checkSuspiciousCode = true;\n     // TODO(user): This is deprecated. We should turn on the\n     // new one once it is default in command line JSCompiler.\n     // checkSuspiciousCode needs to be enabled for CheckGlobalThis to get run.\n     options.checkSuspiciousCode = true;\n     options.checkGlobalThisLevel = CheckLevel.WARNING;\n+    options.checkSymbols = true;\n \n     // checkTypes and checkFunctions have the side-effect of asserting that the\n     // correct number of arguments are passed to a function.\n--- a/test/com/google/javascript/jscomp/CompilerRunnerTest.java\n+++ b/test/com/google/javascript/jscomp/CompilerRunnerTest.java\n   public void testTypeCheckingOnWithVerbose() {\n     CompilerRunner.FLAG_warning_level.setForTest(WarningLevel.VERBOSE);\n     test(\"function f(x) { return x; } f();\", TypeCheck.WRONG_ARGUMENT_COUNT);\n+  }\n+\n+  public void testCheckSymbolsOffForDefault() {\n+    CompilerRunner.FLAG_warning_level.setForTest(WarningLevel.DEFAULT);\n+    testSame(\"x = 3;\");\n+  }\n+\n+  public void testCheckSymbolsOnForVerbose() {\n+    CompilerRunner.FLAG_warning_level.setForTest(WarningLevel.VERBOSE);\n+    test(\"x = 3;\", VarCheck.UNDEFINED_VAR_ERROR);\n   }\n \n   private void testSame(String original) {", "timestamp": 1257560814, "metainfo": ""}