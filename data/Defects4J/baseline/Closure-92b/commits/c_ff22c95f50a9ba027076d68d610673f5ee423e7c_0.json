{"sha": "ff22c95f50a9ba027076d68d610673f5ee423e7c", "log": "warnings fixit. (Nick) R=Alan DELTA=46  (21 added, 9 deleted, 16 changed)  LoggerErrorManager shouldn't print a warning/error summary if there are no warnings, errors, or type info. (Nick) R=Robert DELTA=4  (2 added, 0 deleted, 2 changed)  Revision created by MOE tool push_codebase. MOE_MIGRATION=   ", "commit": "\n--- a/src/com/google/javascript/jscomp/LoggerErrorManager.java\n+++ b/src/com/google/javascript/jscomp/LoggerErrorManager.java\n       logger.log(level, \"{0} error(s), {1} warning(s), {2,number,#.#}% typed\",\n           new Object[] {getErrorCount(), getWarningCount(), getTypedPercent()});\n     } else {\n-      logger.log(level, \"{0} error(s), {1} warning(s)\",\n-          new Object[] {getErrorCount(), getWarningCount()});\n+      if (getErrorCount() + getWarningCount() > 0) {\n+        logger.log(level, \"{0} error(s), {1} warning(s)\",\n+            new Object[] {getErrorCount(), getWarningCount()});\n+      }\n     }\n   }\n }\n--- a/test/com/google/javascript/jscomp/VariableMapTest.java\n+++ b/test/com/google/javascript/jscomp/VariableMapTest.java\n package com.google.javascript.jscomp;\n \n import com.google.common.base.Charsets;\n+import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Maps;\n \n import junit.framework.*;\n \n+import java.text.*;\n import java.util.*;\n-import java.text.*;\n \n /**\n  * Tests for {@link VariableMap}.\n public class VariableMapTest extends TestCase {\n \n   public void testToBytes() {\n-    VariableMap vm = new VariableMap(Maps.immutableMap(\"AAA\", \"a\", \"BBB\", \"b\"));\n+    VariableMap vm = new VariableMap(ImmutableMap.of(\"AAA\", \"a\", \"BBB\", \"b\"));\n     String serialized = new String(vm.toBytes(), Charsets.UTF_8);\n     assertTrue(serialized.endsWith(\"\\n\"));\n ", "timestamp": 1269270311, "metainfo": ""}