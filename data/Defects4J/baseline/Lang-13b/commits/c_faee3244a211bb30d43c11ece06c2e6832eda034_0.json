{"sha": "faee3244a211bb30d43c11ece06c2e6832eda034", "log": "Format consistently {}'s.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java\n     }\n \n     @Test\n-    public void testUnescapeUnknownEntity() throws Exception\n-    {\n+    public void testUnescapeUnknownEntity() throws Exception {\n         assertEquals(\"&zzzz;\", StringEscapeUtils.unescapeHtml4(\"&zzzz;\"));\n     }\n \n     @Test\n-    public void testEscapeHtmlVersions() throws Exception\n-    {\n+    public void testEscapeHtmlVersions() throws Exception {\n         assertEquals(\"&Beta;\", StringEscapeUtils.escapeHtml4(\"\\u0392\"));\n         assertEquals(\"\\u0392\", StringEscapeUtils.unescapeHtml4(\"&Beta;\"));\n \n         // TODO: refine API for escaping/unescaping specific HTML versions\n-\n     }\n \n     @Test\n     }\n \n     @Test\n-    public void testEscapeCsvString() throws Exception\n-    {\n+    public void testEscapeCsvString() throws Exception {\n         assertEquals(\"foo.bar\",          StringEscapeUtils.escapeCsv(\"foo.bar\"));\n         assertEquals(\"\\\"foo,bar\\\"\",      StringEscapeUtils.escapeCsv(\"foo,bar\"));\n         assertEquals(\"\\\"foo\\nbar\\\"\",     StringEscapeUtils.escapeCsv(\"foo\\nbar\"));\n     }\n \n     @Test\n-    public void testEscapeCsvWriter() throws Exception\n-    {\n+    public void testEscapeCsvWriter() throws Exception {\n         checkCsvEscapeWriter(\"foo.bar\",        \"foo.bar\");\n         checkCsvEscapeWriter(\"\\\"foo,bar\\\"\",    \"foo,bar\");\n         checkCsvEscapeWriter(\"\\\"foo\\nbar\\\"\",   \"foo\\nbar\");\n     }\n \n     @Test\n-    public void testUnescapeCsvString() throws Exception\n-    {\n+    public void testUnescapeCsvString() throws Exception {\n         assertEquals(\"foo.bar\",          StringEscapeUtils.unescapeCsv(\"foo.bar\"));\n         assertEquals(\"foo,bar\",      StringEscapeUtils.unescapeCsv(\"\\\"foo,bar\\\"\"));\n         assertEquals(\"foo\\nbar\",     StringEscapeUtils.unescapeCsv(\"\\\"foo\\nbar\\\"\"));\n     }\n \n     @Test\n-    public void testUnescapeCsvWriter() throws Exception\n-    {\n+    public void testUnescapeCsvWriter() throws Exception {\n         checkCsvUnescapeWriter(\"foo.bar\",        \"foo.bar\");\n         checkCsvUnescapeWriter(\"foo,bar\",    \"\\\"foo,bar\\\"\");\n         checkCsvUnescapeWriter(\"foo\\nbar\",   \"\\\"foo\\nbar\\\"\");", "timestamp": 1310855397, "metainfo": ""}