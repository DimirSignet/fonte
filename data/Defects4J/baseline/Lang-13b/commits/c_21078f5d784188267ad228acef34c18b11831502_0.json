{"sha": "21078f5d784188267ad228acef34c18b11831502", "log": "[LANG-734] The CHAR_ARRAY cache in CharUtils duplicates the cache in java.lang.Character. [LANG-735] Deprecate CharUtils.toCharacterObject(char) in favor of java.lang.Character.valueOf(char).  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/CharUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/CharUtils.java\n         \"\\u0078\\u0079\\u007a\\u007b\\u007c\\u007d\\u007e\\u007f\";\n     \n     private static final String[] CHAR_STRING_ARRAY = new String[128];\n-    private static final Character[] CHAR_ARRAY = new Character[128];\n     \n     /**\n      * {@code \\u000a} linefeed LF ('\\n').\n     static {\n         for (int i = 127; i >= 0; i--) {\n             CHAR_STRING_ARRAY[i] = CHAR_STRING.substring(i, i + 1);\n-            CHAR_ARRAY[i] = new Character((char) i);\n         }\n     }\n \n      *   CharUtils.toCharacterObject('A')  = 'A'\n      * </pre>\n      *\n+     * @deprecated Java 5 introduced {@link Character#valueOf(char)} which caches chars 0 through 127.\n      * @param ch  the character to convert\n      * @return a Character of the specified character\n      */\n+    @Deprecated\n     public static Character toCharacterObject(char ch) {\n-        if (ch < CHAR_ARRAY.length) {\n-            return CHAR_ARRAY[ch];\n-        }\n-        return new Character(ch);\n+        return Character.valueOf(ch);\n     }\n     \n     /**\n         if (StringUtils.isEmpty(str)) {\n             return null;\n         }\n-        return toCharacterObject(str.charAt(0));\n+        return Character.valueOf(str.charAt(0));\n     }\n     \n     //-----------------------------------------------------------------------", "timestamp": 1312308291, "metainfo": ""}