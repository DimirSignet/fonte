{"sha": "8d662b14f156d7b2f757f790f1a7183163e145c7", "log": "Add new methods stripToNull/stripToEmpty to provide alternative to trim versions   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Arun Mammen Thomas\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.67 2003/07/19 23:29:06 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.68 2003/07/20 00:04:12 scolebourne Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * <code>null</code>.</p>\n      * \n      * <p>The String is trimmed using {@link String#trim()}.\n-     * Trim removes start and end characters &lt;= 32.</p>\n+     * Trim removes start and end characters &lt;= 32.\n+     * To strip whitespace use {@link #strip(String)}.</p>\n      * \n      * <p>To trim your choice of characters, use the\n      * {@link #strip(String, String)} methods.</p>\n      * StringUtils.trim(\"\")            = \"\"\n      * </pre>\n      *\n-     * @see java.lang.String#trim()\n      * @param str  the String to be trimmed, may be null\n      * @return the trimmed string, <code>null</code> if null String input\n      */\n      * empty (\"\") after the trim or if it is <code>null</code>.\n      * \n      * <p>The String is trimmed using {@link String#trim()}.\n-     * Trim removes start and end characters &lt;= 32.</p>\n+     * Trim removes start and end characters &lt;= 32.\n+     * To strip whitespace use {@link #stripToNull(String)}.</p>\n      * \n      * <pre>\n      * StringUtils.trimToNull(null)          = null\n      * StringUtils.trimToNull(\"\")            = null\n      * </pre>\n      *  \n-     * @see java.lang.String#trim()\n      * @param str  the String to be trimmed, may be null\n      * @return the trimmed String, \n      *  <code>null</code> if only chars &lt;= 32, empty or null String input\n      * is empty (\"\") after the trim or if it is <code>null</code>.\n      * \n      * <p>The String is trimmed using {@link String#trim()}.\n-     * Trim removes start and end characters &lt;= 32.</p>\n+     * Trim removes start and end characters &lt;= 32.\n+     * To strip whitespace use {@link #stripToEmpty(String)}.</p>\n      * \n      * <pre>\n      * StringUtils.trimToEmpty(null)          = \"\"\n      * StringUtils.trimToEmpty(\"\")            = \"\"\n      * </pre>\n      *  \n-     * @see java.lang.String#trim()\n      * @param str  the String to be trimmed, may be null\n      * @return the trimmed String, or an empty String if <code>null</code> input\n      */\n     //-----------------------------------------------------------------------\n     \n     /**\n-     * <p>Strips whitespace from the start and end of a String.\n-     * This is similar to {@link String#trim()} but instead removes whitespace.\n+     * <p>Strips whitespace from the start and end of a String.</p>\n+     * \n+     * <p>This is similar to {@link String#trim()} but instead removes whitespace.\n      * Whitespace is defined by {@link Character#isWhitespace(char)}.</p>\n      * \n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      * \n      * <pre>\n      * StringUtils.strip(null)     = null\n+     * StringUtils.strip(\"\")       = \"\"\n+     * StringUtils.strip(\"   \")    = \"\"\n      * StringUtils.strip(\"abc\")    = \"abc\"\n      * StringUtils.strip(\"  abc\")  = \"abc\"\n      * StringUtils.strip(\"abc  \")  = \"abc\"\n      */\n     public static String strip(String str) {\n         return strip(str, null);\n+    }\n+    \n+    /** \n+     * <p>Strips whitespace from the start and end of a String  returning\n+     * <code>null</code> if the String is empty (\"\") after the strip.</p>\n+     * \n+     * <p>This is similar to {@link #trimToNull()} but instead removes whitespace.\n+     * Whitespace is defined by {@link Character#isWhitespace(char)}.</p>\n+     * \n+     * <pre>\n+     * StringUtils.strip(null)     = null\n+     * StringUtils.strip(\"\")       = null\n+     * StringUtils.strip(\"   \")    = null\n+     * StringUtils.strip(\"abc\")    = \"abc\"\n+     * StringUtils.strip(\"  abc\")  = \"abc\"\n+     * StringUtils.strip(\"abc  \")  = \"abc\"\n+     * StringUtils.strip(\" abc \")  = \"abc\"\n+     * StringUtils.strip(\" ab c \") = \"ab c\"\n+     * </pre>\n+     *  \n+     * @param str  the String to be stripped, may be null\n+     * @return the stripped String, \n+     *  <code>null</code> if whitespace, empty or null String input\n+     */\n+    public static String stripToNull(String str) {\n+        if (str == null) {\n+            return null;\n+        }\n+        str = strip(str, null);\n+        return (str.length() == 0 ? null : str);\n+    }\n+\n+    /** \n+     * <p>Strips whitespace from the start and end of a String  returning\n+     * an empty String if <code>null</code> input.</p>\n+     * \n+     * <p>This is similar to {@link #trimToEmpty()} but instead removes whitespace.\n+     * Whitespace is defined by {@link Character#isWhitespace(char)}.</p>\n+     * \n+     * <pre>\n+     * StringUtils.strip(null)     = \"\"\n+     * StringUtils.strip(\"\")       = \"\"\n+     * StringUtils.strip(\"   \")    = \"\"\n+     * StringUtils.strip(\"abc\")    = \"abc\"\n+     * StringUtils.strip(\"  abc\")  = \"abc\"\n+     * StringUtils.strip(\"abc  \")  = \"abc\"\n+     * StringUtils.strip(\" abc \")  = \"abc\"\n+     * StringUtils.strip(\" ab c \") = \"ab c\"\n+     * </pre>\n+     *  \n+     * @param str  the String to be stripped, may be null\n+     * @return the trimmed String, or an empty String if <code>null</code> input\n+     */\n+    public static String stripToEmpty(String str) {\n+        return (str == null ? \"\" : strip(str, null));\n     }\n     \n     /**\n      * @return the stripped String, <code>null</code> if null String input\n      */\n     public static String strip(String str, String stripChars) {\n+        if (str == null || str.length() == 0) {\n+            return str;\n+        }\n         str = stripStart(str, stripChars);\n         return stripEnd(str, stripChars);\n     }\n--- a/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java\n  *\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n- * @version $Id: StringUtilsTrimEmptyTest.java,v 1.12 2003/07/19 21:55:05 scolebourne Exp $\n+ * @version $Id: StringUtilsTrimEmptyTest.java,v 1.13 2003/07/20 00:04:12 scolebourne Exp $\n  */\n public class StringUtilsTrimEmptyTest extends TestCase {\n     private static final String FOO = \"foo\";\n         assertEquals(\"abc\", StringUtils.strip(\"  abc  \"));\n         assertEquals(StringUtilsTest.NON_WHITESPACE, \n             StringUtils.strip(StringUtilsTest.WHITESPACE + StringUtilsTest.NON_WHITESPACE + StringUtilsTest.WHITESPACE));\n+    }\n+    \n+    public void testStripToNull_String() {\n+        assertEquals(null, StringUtils.stripToNull(null));\n+        assertEquals(null, StringUtils.stripToNull(\"\"));\n+        assertEquals(null, StringUtils.stripToNull(\"        \"));\n+        assertEquals(null, StringUtils.stripToNull(StringUtilsTest.WHITESPACE));\n+        assertEquals(\"ab c\", StringUtils.stripToNull(\"  ab c  \"));\n+        assertEquals(StringUtilsTest.NON_WHITESPACE, \n+            StringUtils.stripToNull(StringUtilsTest.WHITESPACE + StringUtilsTest.NON_WHITESPACE + StringUtilsTest.WHITESPACE));\n+    }\n+    \n+    public void testStripToEmpty_String() {\n+        assertEquals(\"\", StringUtils.stripToEmpty(null));\n+        assertEquals(\"\", StringUtils.stripToEmpty(\"\"));\n+        assertEquals(\"\", StringUtils.stripToEmpty(\"        \"));\n+        assertEquals(\"\", StringUtils.stripToEmpty(StringUtilsTest.WHITESPACE));\n+        assertEquals(\"ab c\", StringUtils.stripToEmpty(\"  ab c  \"));\n+        assertEquals(StringUtilsTest.NON_WHITESPACE, \n+            StringUtils.stripToEmpty(StringUtilsTest.WHITESPACE + StringUtilsTest.NON_WHITESPACE + StringUtilsTest.WHITESPACE));\n     }\n     \n     public void testStrip_StringString() {", "timestamp": 1058659452, "metainfo": ""}