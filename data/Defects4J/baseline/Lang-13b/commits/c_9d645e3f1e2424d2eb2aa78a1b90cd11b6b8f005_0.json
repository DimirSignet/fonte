{"sha": "9d645e3f1e2424d2eb2aa78a1b90cd11b6b8f005", "log": "Test min and max are reflexive; test both nulls  ", "commit": "\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n     }\n \n     public void testNull() {\n-        assertTrue(ObjectUtils.NULL != null);\n+        assertNotNull(ObjectUtils.NULL);\n         assertTrue(ObjectUtils.NULL instanceof ObjectUtils.Null);\n         assertSame(ObjectUtils.NULL, SerializationUtils.clone(ObjectUtils.NULL));\n     }\n         assertSame( nonNullComparable1, ObjectUtils.max( null, nonNullComparable1 ) );\n         assertSame( nonNullComparable1, ObjectUtils.max( nonNullComparable1, null ) );\n         assertSame( nonNullComparable1, ObjectUtils.max( nonNullComparable1, nonNullComparable2 ) );\n+        assertSame( nonNullComparable2, ObjectUtils.max( nonNullComparable2, nonNullComparable1 ) );\n         assertSame( nonNullComparable1, ObjectUtils.max( nonNullComparable1, minComparable ) );\n         assertSame( nonNullComparable1, ObjectUtils.max( minComparable, nonNullComparable1 ) );\n+\n+        assertNull( ObjectUtils.max(null, null) );\n     }\n     \n     public void testMin() {\n         assertSame( nonNullComparable1, ObjectUtils.min( null, nonNullComparable1 ) );\n         assertSame( nonNullComparable1, ObjectUtils.min( nonNullComparable1, null ) );\n         assertSame( nonNullComparable1, ObjectUtils.min( nonNullComparable1, nonNullComparable2 ) );\n+        assertSame( nonNullComparable2, ObjectUtils.min( nonNullComparable2, nonNullComparable1 ) );\n         assertSame( minComparable, ObjectUtils.min( nonNullComparable1, minComparable ) );\n         assertSame( minComparable, ObjectUtils.min( minComparable, nonNullComparable1 ) );\n+\n+        assertNull( ObjectUtils.min(null, null) );\n     }\n }", "timestamp": 1237379583, "metainfo": ""}