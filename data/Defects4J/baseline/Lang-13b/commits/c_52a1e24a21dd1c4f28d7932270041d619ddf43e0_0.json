{"sha": "52a1e24a21dd1c4f28d7932270041d619ddf43e0", "log": "Moving to an IllegalArgumentException: LANG-710  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java\n      *\n      * For example, to support numeric entities without a ';':\n      *    new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptional)\n-     * and to throw a RuntimeException when they're missing:\n+     * and to throw an IllegalArgumentException when they're missing:\n      *    new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon)\n      *\n      * Note that the default behaviour is to ignore them. \n                     return 0;\n                 } else\n                 if(isSet(OPTION.errorIfNoSemiColon)) {\n-                    throw new RuntimeException(\"Semi-colon required at end of numeric entity\");\n+                    throw new IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n                 }\n             }\n \n--- a/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java\n \n         try {\n             result = neu.translate(input);\n-            fail(\"RuntimeException expected\");\n-        } catch(RuntimeException re) {\n+            fail(\"IllegalArgumentException expected\");\n+        } catch(IllegalArgumentException iae) {\n             // expected\n         }\n     }", "timestamp": 1310010437, "metainfo": ""}