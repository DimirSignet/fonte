{"sha": "5b77c4371cb12229c0e20272b07fef18a4c2cdb0", "log": "Add summary javadoc section to StringUtils class Rename reverseDelimitedString to reverseDelimited   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n /**\n  * <p>Common <code>String</code> manipulation routines that are \n  * <code>null</code> safe.</p>\n+ * \n+ * <ul>\n+ *  <li><b>IsEmpty/IsBlank</b>\n+ *      - checks if a String contains text\n+ *  <li><b>Trim/Strip</b>\n+ *      - remove leading and trailing whitespace\n+ *  <li><b>Equals</b>\n+ *      - compare two strings null-safe\n+ *  <li><b>IndexOf/LastIndexOf/Contains</b>\n+ *      - null-safe index of checks\n+ *  <li><b>IndexOfAny/LastIndexOfAny/IndexOfAnyBut/LastIndexOfAnyBut</b>\n+ *      - index of any of a set of Strings\n+ *  <li><b>ContainsOnly/ContainsNone</b>\n+ *      - does String contain only/none of these characters\n+ *  <li><b>SubString/Left/Right/Mid</b>\n+ *      - null-safe substring extraction\n+ *  <li><b>Split</b>\n+ *      - splits a String into an array of subtrings based on a separator\n+ *  <li><b>Join/Concatenate</b>\n+ *      - joins an array of Strings into one with optional separator\n+ *  <li><b>Replace/Delete/Overlay</b>\n+ *      - Searches a String and replaces one String with another\n+ *  <li><b>Chomp/Chop/Slice</b>\n+ *      - searches a String and returns the substring before/after the separator\n+ *  <li><b>LeftPad/RightPad/Center/Repeat</b>\n+ *      - pads a String\n+ *  <li><b>UpperCase/LowerCase/SwapCase/Capitalise/Uncapitalise</b>\n+ *      - change the case of a String\n+ *  <li><b>NestedString</b>\n+ *      - returns a substring nested within other Strings\n+ *  <li><b>CountMatches</b>\n+ *      - counts the number of occurrances of one String in another\n+ *  <li><b>IsAlpha/IsNumeric/IsWhitespace</b>\n+ *      - checks the characters in a String\n+ *  <li><b>DefaultString</b>\n+ *      - protects against a null input String\n+ *  <li><b>Reverse/ReverseDelimited</b>\n+ *      - reverses a String\n+ *  <li><b>Abbreviate</b>\n+ *      - abbreviates a string using ellipsis\n+ *  <li><b>Difference</b>\n+ *      - compares two Strings and reports on their differences\n+ *  <li><b>LevensteinDistance</b>\n+ *      - the number of changes needed to change one String into another\n+ * </ul>\n  *\n  * <p>The <code>StringUtils</code> class defines certain words related to\n  * String handling.</p>\n  * <ul>\n  *  <li>null - <code>null</code>\n  *  <li>empty - a zero-length string (<code>\"\"</code>)\n- *  <li>space - the space character (<code>' '</code>)(32)\n+ *  <li>space - the space character (<code>' '</code>)(char 32)\n  *  <li>whitespace - the characters defined by {@link Character#isWhitespace(char)}\n+ *  <li>trim - the characters &lt;= 32 as in {@link String#trim(String)}\n  * </ul>\n  * \n  * <p><code>StringUtils</code> handles <code>null</code> input Strings quietly.\n  * @author Arun Mammen Thomas\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.71 2003/07/20 10:29:22 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.72 2003/07/20 14:47:29 scolebourne Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * is <code>'.'</code>).</p>\n      * \n      * <pre>\n-     * StringUtils.reverseDelimitedString(null, '.')    = null\n-     * StringUtils.reverseDelimitedString(\"\", '.')      = \"\"\n-     * StringUtils.reverseDelimitedString(\"a.b.c\", 'x') = \"a.b.c\"\n-     * StringUtils.reverseDelimitedString(\"a.b.c\", \".\") = \"c.b.a\"\n+     * StringUtils.reverseDelimited(null, '.')    = null\n+     * StringUtils.reverseDelimited(\"\", '.')      = \"\"\n+     * StringUtils.reverseDelimited(\"a.b.c\", 'x') = \"a.b.c\"\n+     * StringUtils.reverseDelimited(\"a.b.c\", \".\") = \"c.b.a\"\n      * </pre>\n      * \n      * @param str  the String to reverse, may be null\n      * @param separatorChar  the separator character to use\n      * @return the reversed String, <code>null</code> if null String input\n      */\n-    public static String reverseDelimitedString(String str, char separatorChar) {\n+    public static String reverseDelimited(String str, char separatorChar) {\n         if (str == null) {\n             return null;\n         }\n      * @param str  the String to reverse, may be null\n      * @param separatorChars  the separator characters to use, null treated as whitespace\n      * @return the reversed String, <code>null</code> if null String input\n-     * @deprecated Use {@link #reverseDelimitedString(String, char)} instead.\n+     * @deprecated Use {@link #reverseDelimited(String, char)} instead.\n      *      This method is broken as the join doesn't know which char to use.\n      *      Method will be removed in Commons Lang 3.0.\n      * \n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n- * @version $Id: StringUtilsTest.java,v 1.32 2003/07/20 10:29:21 scolebourne Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.33 2003/07/20 14:47:29 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n     \n         assertEquals(\"sdrawkcab\", StringUtils.reverse(\"backwards\") );\n     }\n         \n-    public void testReverseDelimitedString_StringChar() {\n-        assertEquals(null, StringUtils.reverseDelimitedString(null, '.') );\n-        assertEquals(\"\", StringUtils.reverseDelimitedString(\"\", '.') );\n-        assertEquals(\"c.b.a\", StringUtils.reverseDelimitedString(\"a.b.c\", '.') );\n-        assertEquals(\"a b c\", StringUtils.reverseDelimitedString(\"a b c\", '.') );\n-        assertEquals(\"\", StringUtils.reverseDelimitedString(\"\", '.') );\n+    public void testReverseDelimited_StringChar() {\n+        assertEquals(null, StringUtils.reverseDelimited(null, '.') );\n+        assertEquals(\"\", StringUtils.reverseDelimited(\"\", '.') );\n+        assertEquals(\"c.b.a\", StringUtils.reverseDelimited(\"a.b.c\", '.') );\n+        assertEquals(\"a b c\", StringUtils.reverseDelimited(\"a b c\", '.') );\n+        assertEquals(\"\", StringUtils.reverseDelimited(\"\", '.') );\n     }\n \n     public void testReverseDelimitedString_StringString() {", "timestamp": 1058712449, "metainfo": ""}