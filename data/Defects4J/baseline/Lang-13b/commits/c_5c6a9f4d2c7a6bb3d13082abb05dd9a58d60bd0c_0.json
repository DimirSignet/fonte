{"sha": "5c6a9f4d2c7a6bb3d13082abb05dd9a58d60bd0c", "log": "Tab and trailing space removal  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n      * A regex pattern for recognizing blocks of whitespace characters.\n      */\n     private static final Pattern WHITESPACE_BLOCK = Pattern.compile(\"\\\\s+\");\n-    \n+\n     /**\n      * <p><code>StringUtils</code> instances should NOT be constructed in\n      * standard programming. Instead, the class should be used as\n             } else if (sunAvailable) {\n                 result = removeAccentsSUN(input);\n             } else {\n-            \tthrow new UnsupportedOperationException(\"The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM\");\n+                throw new UnsupportedOperationException(\"The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM\");\n             }\n             // Note that none of the above methods correctly remove ligatures...\n             return result;\n     }\n \n     /**\n-     * <p>Joins the provided elements into a single String, with the specified \n+     * <p>Joins the provided elements into a single String, with the specified\n      * separator between each element. </p>\n      *\n      * <p>No separator is added before or after the joined String.\n      * normalize. Additonally <code>{@link #trim(String)}</code> removes control characters (char &lt;= 32) from both\n      * ends of this String.\n      * </p>\n-     * \n+     *\n      * @see Pattern\n      * @see #trim(String)\n      * @see <a\n      *      href=\"http://www.w3.org/TR/xpath/#function-normalize-space\">http://www.w3.org/TR/xpath/#function-normalize-space</a>\n      * @param str the source String to normalize whitespaces from, may be null\n      * @return the modified string with whitespace normalized, <code>null</code> if null String input\n-     * \n+     *\n      * @since 3.0\n      */\n     public static String normalizeSpace(String str) {\n         if(str == null) {\n             return null;\n         }\n-        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll(\" \");         \n+        return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll(\" \");\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java\n+++ b/src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java\n      * Test the replace of a properties object\n      */\n     public void testSubstitutetDefaultProperties(){\n-    \tString org = \"${doesnotwork}\";\n+        String org = \"${doesnotwork}\";\n         System.setProperty(\"doesnotwork\", \"It work's!\");\n \n         // create a new Properties object with the System.getProperties as default", "timestamp": 1295307963, "metainfo": ""}