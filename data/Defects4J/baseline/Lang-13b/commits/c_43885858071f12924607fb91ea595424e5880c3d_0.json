{"sha": "43885858071f12924607fb91ea595424e5880c3d", "log": "Convert defaultIfEmpty from String to CharSequence.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n     }\n \n     /**\n-     * <p>Returns either the passed in String, or if the String is\n+     * <p>Returns either the passed in CharSequence, or if the CharSequence is\n      * empty or <code>null</code>, the value of <code>defaultStr</code>.</p>\n      *\n      * <pre>\n      * </pre>\n      *\n      * @see StringUtils#defaultString(String, String)\n-     * @param str  the String to check, may be null\n-     * @param defaultStr  the default String to return\n+     * @param str  the CharSequence to check, may be null\n+     * @param defaultStr  the default CharSequence to return\n      *  if the input is empty (\"\") or <code>null</code>, may be null\n-     * @return the passed in String, or the default\n-     */\n-    public static String defaultIfEmpty(String str, String defaultStr) {\n+     * @return the passed in CharSequence, or the default\n+     */\n+    public static CharSequence defaultIfEmpty(CharSequence str, CharSequence defaultStr) {\n         return StringUtils.isEmpty(str) ? defaultStr : str;\n     }\n \n--- a/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/StringUtilsTest.java\n \n import java.lang.reflect.Constructor;\n import java.lang.reflect.Modifier;\n+import java.nio.CharBuffer;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n         assertNull(StringUtils.defaultIfEmpty(\"\", null));\n     }\n \n+    public void testDefaultIfEmpty_StringBuilders() {\n+        assertEquals(\"NULL\", StringUtils.defaultIfEmpty(new StringBuilder(\"\"), new StringBuilder(\"NULL\")).toString());\n+        assertEquals(\"abc\", StringUtils.defaultIfEmpty(new StringBuilder(\"abc\"), new StringBuilder(\"NULL\")).toString());\n+        assertNull(StringUtils.defaultIfEmpty(new StringBuilder(\"\"), null));\n+    }\n+\n+    public void testDefaultIfEmpty_StringBuffers() {\n+        assertEquals(\"NULL\", StringUtils.defaultIfEmpty(new StringBuffer(\"\"), new StringBuffer(\"NULL\")).toString());\n+        assertEquals(\"abc\", StringUtils.defaultIfEmpty(new StringBuffer(\"abc\"), new StringBuffer(\"NULL\")).toString());\n+        assertNull(StringUtils.defaultIfEmpty(new StringBuffer(\"\"), null));\n+    }\n+\n+    public void testDefaultIfEmpty_CharBuffers() {\n+        assertEquals(\"NULL\", StringUtils.defaultIfEmpty(CharBuffer.wrap(\"\"), CharBuffer.wrap(\"NULL\")).toString());\n+        assertEquals(\"abc\", StringUtils.defaultIfEmpty(CharBuffer.wrap(\"abc\"), CharBuffer.wrap(\"NULL\")).toString());\n+        assertNull(StringUtils.defaultIfEmpty(CharBuffer.wrap(\"\"), null));\n+    }\n+\n     //-----------------------------------------------------------------------\n     public void testAbbreviate_StringInt() {\n         assertEquals(null, StringUtils.abbreviate(null, 10));", "timestamp": 1268019709, "metainfo": ""}