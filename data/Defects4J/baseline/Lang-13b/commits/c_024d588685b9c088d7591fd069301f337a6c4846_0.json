{"sha": "024d588685b9c088d7591fd069301f337a6c4846", "log": "Add primitive boolean/object conversions Bug 21068, from Matthew Hawthorne   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n  * @author Moritz Petersen\n  * @author <a href=\"mailto:fredrik@westermarck.com\">Fredrik Westermarck</a>\n  * @author Nikolay Metchev\n+ * @author Matthew Hawthorne\n  * @since 2.0\n- * @version $Id: ArrayUtils.java,v 1.14 2003/06/25 23:32:08 scolebourne Exp $\n+ * @version $Id: ArrayUtils.java,v 1.15 2003/06/25 23:33:47 scolebourne Exp $\n  */\n public class ArrayUtils {\n \n         return (indexOf(array, objectToFind) != -1);\n     }\n \n+    // Primitive/Object converters\n+    // ----------------------------------------------------------------------\n+    /**\n+     * <p>Converts an array of object Booleans to primitives.</p>\n+     *\n+     * <p>This method returns <code>null</code> if <code>null</code> input.</p>\n+     * \n+     * @param array  a <code>Boolean</code> array, may be <code>null</code>\n+     * @return a <code>boolean</code> array\n+     * @throws NullPointerException if array content is <code>null</code>\n+     */\n+    public static boolean[] toPrimitive(final Boolean[] array) {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return EMPTY_BOOLEAN_ARRAY;\n+        }\n+        final boolean[] result = new boolean[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            result[i] = array[i].booleanValue();\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * <p>Converts an array of object Booleans to primitives handling null.</p>\n+     * \n+     * <p>This method returns <code>null</code> if <code>null</code> input.</p>\n+     * \n+     * @param array  a <code>Boolean</code> array, may be <code>null</code>\n+     * @param valueForNull  the value to insert if <code>null</code> found\n+     * @return a <code>boolean</code> array\n+     */\n+    public static boolean[] toPrimitive(final Boolean[] array, final boolean valueForNull) {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return EMPTY_BOOLEAN_ARRAY;\n+        }\n+        final boolean[] result = new boolean[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            Boolean b = array[i];\n+            result[i] = (b == null ? valueForNull : b.booleanValue());\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * <p>Converts an array of primitive booleans to objects.</p>\n+     *\n+     * <p>This method returns <code>null</code> if <code>null</code> input.</p>\n+     * \n+     * @param array  a <code>boolean</code> array\n+     * @return a <code>Boolean</code> array\n+     */\n+    public static Boolean[] toObject(final boolean[] array) {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return EMPTY_BOOLEAN_OBJECT_ARRAY;\n+        }\n+        final Boolean[] result = new Boolean[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);\n+        }\n+        return result;\n+    }\n+\n }\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n /**\n  * Unit tests {@link org.apache.commons.lang.ArrayUtils}.\n  *\n- * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n+ * @author Stephen Colebourne\n  * @author Moritz Petersen\n  * @author Nikolay Metchev\n- * @version $Id: ArrayUtilsTest.java,v 1.6 2003/03/23 21:47:30 scolebourne Exp $\n+ * @author Matthew Hawthorne\n+ * @version $Id: ArrayUtilsTest.java,v 1.7 2003/06/25 23:33:47 scolebourne Exp $\n  */\n public class ArrayUtilsTest extends TestCase {\n \n     }\n \n     public static Test suite() {\n-    \tTestSuite suite = new TestSuite(ArrayUtilsTest.class);\n-    \tsuite.setName(\"ArrayUtils Tests\");\n+        TestSuite suite = new TestSuite(ArrayUtilsTest.class);\n+        suite.setName(\"ArrayUtils Tests\");\n         return suite;\n     }\n \n         assertEquals(true, ArrayUtils.contains(array, null));\n         assertEquals(false, ArrayUtils.contains(array, \"notInArray\"));\n     }\n+    \n+    // testToPrimitive/Object for boolean\n+    //  -----------------------------------------------------------------------\n+    public void testToPrimitive_boolean() {\n+        assertEquals(null, ArrayUtils.toPrimitive(null));\n+        assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.toPrimitive(new Boolean[0]));\n+        assertTrue(Arrays.equals(\n+            new boolean[] {true, false, true},\n+            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE}))\n+        );\n+\n+        try {\n+            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null});\n+            fail();\n+        } catch (NullPointerException ex) {}\n+    }\n+\n+    public void testToPrimitive_boolean_boolean() {\n+        assertEquals(null, ArrayUtils.toPrimitive(null, false));\n+        assertSame(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.toPrimitive(new Boolean[0], false));\n+        assertTrue(Arrays.equals(\n+            new boolean[] {true, false, true},\n+            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE}, false))\n+        );\n+        assertTrue(Arrays.equals(\n+            new boolean[] {true, false, false},\n+            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null, Boolean.FALSE}, false))\n+        );\n+        assertTrue(Arrays.equals(\n+            new boolean[] {true, true, false},\n+            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null, Boolean.FALSE}, true))\n+        );\n+    }\n+\n+    public void testToObject_boolean() {\n+        assertEquals(null, ArrayUtils.toObject(null));\n+        assertSame(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY, ArrayUtils.toObject(new boolean[0]));\n+        assertTrue(Arrays.equals(\n+            new Boolean[] {Boolean.TRUE, Boolean.FALSE, Boolean.TRUE},\n+            ArrayUtils.toObject(new boolean[] {true, false, true}))\n+        );\n+    }\n+\n }", "timestamp": 1056584027, "metainfo": ""}