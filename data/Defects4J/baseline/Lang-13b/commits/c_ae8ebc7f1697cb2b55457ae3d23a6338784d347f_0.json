{"sha": "ae8ebc7f1697cb2b55457ae3d23a6338784d347f", "log": "Exceptions not thrown  ", "commit": "\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n     }\n \n     // https://issues.apache.org/jira/browse/LANG-339\n-    public void testEscapeHiragana() throws java.io.UnsupportedEncodingException {\n+    public void testEscapeHiragana() {\n         // Some random Japanese unicode characters\n         String original = \"\\u304B\\u304C\\u3068\";\n         String escaped = StringEscapeUtils.escapeHtml4(original);\n--- a/src/test/org/apache/commons/lang/concurrent/BackgroundInitializerTest.java\n+++ b/src/test/org/apache/commons/lang/concurrent/BackgroundInitializerTest.java\n     /**\n      * Tests whether initialize() is invoked.\n      */\n-    public void testInitialize() throws ConcurrentException {\n+    public void testInitialize() {\n         BackgroundInitializerTestImpl init = new BackgroundInitializerTestImpl();\n         init.start();\n         checkInitialize(init);\n--- a/src/test/org/apache/commons/lang/concurrent/MultiBackgroundInitializerTest.java\n+++ b/src/test/org/apache/commons/lang/concurrent/MultiBackgroundInitializerTest.java\n      * Tests the behavior of the initializer if one of the child initializers\n      * throws a runtime exception.\n      */\n-    public void testInitializeRuntimeEx() throws ConcurrentException {\n+    public void testInitializeRuntimeEx() {\n         ChildBackgroundInitializer child = new ChildBackgroundInitializer();\n         child.ex = new RuntimeException();\n         initializer.addInitializer(CHILD_INIT, child);", "timestamp": 1258829937, "metainfo": ""}