{"sha": "23253d6d5b5bcc0daa3842f6d1495201cf2304a8", "log": "Fix clone() and add a unit test.  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrTokenizer.java\n+++ b/src/java/org/apache/commons/lang/text/StrTokenizer.java\n         try {\n             StrTokenizer cloned = (StrTokenizer) super.clone();\n             if (cloned.chars != null) {\n-                cloned.chars = cloned.chars;\n+                cloned.chars = (char[]) cloned.chars.clone();\n             }\n             cloned.reset();\n             return cloned;\n--- a/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n         assertEquals(tok, tok.setIgnoreEmptyTokens(false));\n     }\n \n-    //-----------------------------------------------------------------------\n+    public void testCloneNull() {\n+        StrTokenizer tokenizer = new StrTokenizer((char[]) null);\n+        // Start sanity check\n+        assertEquals(null, tokenizer.nextToken());\n+        tokenizer.reset();\n+        assertEquals(null, tokenizer.nextToken());\n+        // End sanity check\n+        StrTokenizer clonedTokenizer = (StrTokenizer) tokenizer.clone();\n+        tokenizer.reset();\n+        assertEquals(null, tokenizer.nextToken());\n+        assertEquals(null, clonedTokenizer.nextToken());\n+    }\n+\n+    public void testCloneReset() {\n+        char[] input = new char[]{'a'};\n+        StrTokenizer tokenizer = new StrTokenizer(input);\n+        // Start sanity check\n+        assertEquals(\"a\", tokenizer.nextToken());\n+        tokenizer.reset();\n+        assertEquals(\"a\", tokenizer.nextToken());\n+        // End sanity check\n+        StrTokenizer clonedTokenizer = (StrTokenizer) tokenizer.clone();\n+        input[0] = 'b';\n+        tokenizer.reset();\n+        assertEquals(\"b\", tokenizer.nextToken());\n+        assertEquals(\"a\", clonedTokenizer.nextToken());\n+    }\n+  \n+    // -----------------------------------------------------------------------\n     public void testConstructor_String() {\n         StrTokenizer tok = new StrTokenizer(\"a b\");\n         assertEquals(\"a\", tok.next());", "timestamp": 1124661421, "metainfo": ""}