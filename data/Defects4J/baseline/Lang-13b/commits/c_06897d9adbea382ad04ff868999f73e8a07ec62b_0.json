{"sha": "06897d9adbea382ad04ff868999f73e8a07ec62b", "log": "Fix up raw types  ", "commit": "\n--- a/src/test/org/apache/commons/lang3/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang3/ClassUtilsTest.java\n     \n     // -------------------------------------------------------------------------\n     public void test_convertClassNamesToClasses_List() {\n-        List list = new ArrayList();\n-        List result = ClassUtils.convertClassNamesToClasses(list);\n+        List<String> list = new ArrayList<String>();\n+        List<Class<?>> result = ClassUtils.convertClassNamesToClasses(list);\n         assertEquals(0, result.size());\n         \n         list.add(\"java.lang.String\");\n         assertEquals(null, result.get(1));\n         assertEquals(Object.class, result.get(2));\n \n-        list.add(new Object());\n+        @SuppressWarnings(\"unchecked\") // test what happens when non-gneric code adds wrong type of element\n+        List<Object> olist = (List<Object>)(List<?>)list; \n+        olist.add(new Object());\n         try {\n             ClassUtils.convertClassNamesToClasses(list);\n-            fail();\n-        } catch (ClassCastException ex) {}\n+            fail(\"Should not have been able to convert list\");\n+        } catch (ClassCastException expected) {}\n         assertEquals(null, ClassUtils.convertClassNamesToClasses(null));\n     }\n     \n     public void test_convertClassesToClassNames_List() {\n-        List list = new ArrayList();\n-        List result = ClassUtils.convertClassesToClassNames(list);\n+        List<Class<?>> list = new ArrayList<Class<?>>();\n+        List<String> result = ClassUtils.convertClassesToClassNames(list);\n         assertEquals(0, result.size());\n         \n         list.add(String.class);\n         assertEquals(null, result.get(1));\n         assertEquals(\"java.lang.Object\", result.get(2));\n \n-        list.add(new Object());\n+        @SuppressWarnings(\"unchecked\") // test what happens when non-gneric code adds wrong type of element\n+        List<Object> olist = (List<Object>)(List<?>)list; \n+        olist.add(new Object());\n         try {\n             ClassUtils.convertClassesToClassNames(list);\n-            fail();\n-        } catch (ClassCastException ex) {}\n+            fail(\"Should not have been able to convert list\");\n+        } catch (ClassCastException expected) {}\n         assertEquals(null, ClassUtils.convertClassesToClassNames(null));\n     }\n     ", "timestamp": 1260798846, "metainfo": ""}