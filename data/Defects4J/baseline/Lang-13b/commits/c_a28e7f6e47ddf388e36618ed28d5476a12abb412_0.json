{"sha": "a28e7f6e47ddf388e36618ed28d5476a12abb412", "log": "Adding test cases for null checks.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java\n+++ b/src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java\n  */\n public class EventListenerSupportTest extends TestCase\n {\n+    public void testAddNullListener()\n+    {\n+        EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);\n+        try\n+        {\n+            listenerSupport.addListener(null);\n+            fail(\"Should not be able to add a null listener.\");\n+        }\n+        catch (NullPointerException e)\n+        {\n+\n+        }\n+    }\n+\n+    public void testRemoveNullListener()\n+    {\n+        EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);\n+        try\n+        {\n+            listenerSupport.removeListener(null);\n+            fail(\"Should not be able to remove a null listener.\");\n+        }\n+        catch (NullPointerException e)\n+        {\n+\n+        }\n+    }\n+\n     public void testEventDispatchOrder()\n     {\n         EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);\n             EventListenerSupport.create(String.class);\n             fail(\"Should not be able to create using non-interface class.\");\n         }\n-        catch(IllegalArgumentException e)\n+        catch (IllegalArgumentException e)\n         {\n-            \n+\n         }\n     }\n \n             EventListenerSupport.create(null);\n             fail(\"Should not be able to create using null class.\");\n         }\n-        catch(NullPointerException e)\n+        catch (NullPointerException e)\n         {\n \n         }\n     }\n-    \n+\n     public void testRemoveListenerDuringEvent()\n     {\n         final EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);", "timestamp": 1279827620, "metainfo": ""}