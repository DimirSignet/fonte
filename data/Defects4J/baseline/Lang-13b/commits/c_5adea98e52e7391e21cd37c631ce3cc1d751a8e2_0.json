{"sha": "5adea98e52e7391e21cd37c631ce3cc1d751a8e2", "log": "Checkstyle and trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java\n  * The ASF licenses this file to You under the Apache License, Version 2.0\n  * (the \"License\"); you may not use this file except in compliance with\n  * the License.  You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n package org.apache.commons.lang3.text.translate;\n \n /**\n- * Class holding various entity data for HTML and XML - generally for use with \n+ * Class holding various entity data for HTML and XML - generally for use with\n  * the LookupTranslator.\n  * All arrays are of length [*][2].\n  *\n \n     /**\n      * Mapping to escape <a href=\"https://secure.wikimedia.org/wikipedia/en/wiki/ISO/IEC_8859-1\">ISO-8859-1</a>\n-     * characters to their named HTML 3.x equivalents. \n+     * characters to their named HTML 3.x equivalents.\n+     * @return the mapping table\n      */\n     public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); }\n     private static final String[][] ISO8859_1_ESCAPE = {\n \n     /**\n      * Reverse of {@link #ISO8859_1_ESCAPE()} for unescaping purposes.\n+     * @return the mapping table\n      */\n     public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); }\n     private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);\n \n     /**\n-     * Mapping to escape additional <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html\">character entity \n-     * references</a>. Note that this must be used with {@link #ISO8859_1_ESCAPE()} to get the full list of \n+     * Mapping to escape additional <a href=\"http://www.w3.org/TR/REC-html40/sgml/entities.html\">character entity\n+     * references</a>. Note that this must be used with {@link #ISO8859_1_ESCAPE()} to get the full list of\n      * HTML 4.0 character entities.\n+     * @return the mapping table\n      */\n     public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); }\n     private static final String[][] HTML40_EXTENDED_ESCAPE = {\n \n     /**\n      * Reverse of {@link #HTML40_EXTENDED_ESCAPE()} for unescaping purposes.\n+     * @return the mapping table\n      */\n     public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); }\n     private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);\n      * Mapping to escape the basic XML and HTML character entities.\n      *\n      * Namely: {@code \" & < >}\n+     * @return the mapping table\n      */\n     public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); }\n     private static final String[][] BASIC_ESCAPE = {\n \n     /**\n      * Reverse of {@link #BASIC_ESCAPE()} for unescaping purposes.\n+     * @return the mapping table\n      */\n     public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); }\n     private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);\n \n     /**\n-     * Mapping to escape the apostrophe character to its XML character entity. \n+     * Mapping to escape the apostrophe character to its XML character entity.\n+     * @return the mapping table\n      */\n     public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); }\n     private static final String[][] APOS_ESCAPE = {\n \n     /**\n      * Reverse of {@link #APOS_ESCAPE()} for unescaping purposes.\n+     * @return the mapping table\n      */\n     public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); }\n     private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);\n \n     /**\n-     * Mapping to escape the Java control characters. \n+     * Mapping to escape the Java control characters.\n      *\n      * Namely: {@code \\b \\n \\t \\f \\r}\n+     * @return the mapping table\n      */\n     public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); }\n     private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {\n \n     /**\n      * Reverse of {@link #JAVA_CTRL_CHARS_ESCAPE()} for unescaping purposes.\n+     * @return the mapping table\n      */\n     public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); }\n     private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);", "timestamp": 1300480162, "metainfo": ""}