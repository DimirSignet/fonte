{"sha": "0a720fba4c755b97ce33c6372c6d50ef39d2963e", "log": "Fix failing unit test of Contexted(Runtime)Exception, adjust formatted message.  ", "commit": "\n--- a/src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java\n+++ b/src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java\n         }\n         \n         if (contextKeyList.size() > 0) {\n-            buffer.append(SystemUtils.LINE_SEPARATOR);                 \n+            if (buffer.length() > 0l) {\n+                buffer.append(SystemUtils.LINE_SEPARATOR);\n+            }\n             buffer.append(\"Exception Context:\");\n             buffer.append(SystemUtils.LINE_SEPARATOR); \n             buffer.append(\"\\t\");  \n                 buffer.append(SystemUtils.LINE_SEPARATOR);  \n                 buffer.append(\"\\t\");  \n             }\n-            buffer.append(SystemUtils.LINE_SEPARATOR);\n-            buffer.append(\"\\t---------------------------------\");\n+            buffer.append(\"---------------------------------\");\n         }\n         return buffer.toString();\n     }\n--- a/src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java\n+++ b/src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java\n         assertTrue(message.indexOf(\"5\")>=0);\n         assertTrue(message.indexOf(\"Crap\")>=0);\n         \n-        String contextMessage = contextedException.getFormattedExceptionMessage(\"\");\n-        assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);\n-        assertTrue(message.contains(contextMessage));\n-        \n         assertTrue(contextedException.getLabeledValue(\"test1\") == null);\n         assertTrue(contextedException.getLabeledValue(\"test2\").equals(\"some value\"));\n         assertTrue(contextedException.getLabeledValue(\"crap\") == null);\n         assertTrue(contextedException.getLabelSet().contains(\"test Poorly written obj\"));\n         \n         assertTrue(!contextedException.getLabelSet().contains(\"crap\"));\n+\n+        contextedException.addLabeledValue(\"test Poorly written obj\", \"replacement\");\n+        \n+        String contextMessage = contextedException.getFormattedExceptionMessage(null);\n+        assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);\n+        assertTrue(contextedException.getMessage().endsWith(contextMessage));\n     }\n     \n     public void testNullExceptionPassing() {\n--- a/src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java\n+++ b/src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java\n         assertTrue(message.indexOf(\"5\")>=0);\n         assertTrue(message.indexOf(\"Crap\")>=0);\n         \n-        String contextMessage = contextedRuntimeException.getFormattedExceptionMessage(\"\");\n-        assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);\n-        assertTrue(message.contains(contextMessage));\n-        \n         assertTrue(contextedRuntimeException.getLabeledValue(\"test1\") == null);\n         assertTrue(contextedRuntimeException.getLabeledValue(\"test2\").equals(\"some value\"));\n         assertTrue(contextedRuntimeException.getLabeledValue(\"crap\") == null);\n         assertTrue(contextedRuntimeException.getLabelSet().contains(\"test Poorly written obj\"));\n         \n         assertTrue(!contextedRuntimeException.getLabelSet().contains(\"crap\"));\n+\n+        contextedRuntimeException.addLabeledValue(\"test Poorly written obj\", \"replacement\");\n+        \n+        String contextMessage = contextedRuntimeException.getFormattedExceptionMessage(null);\n+        assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);\n+        assertTrue(contextedRuntimeException.getMessage().endsWith(contextMessage));\n     }\n     \n     public void testNullExceptionPassing() {", "timestamp": 1249841218, "metainfo": ""}