{"sha": "0eeddbb617941e0d366cb600f29eef251cd4fc6b", "log": "Adding tests to ensure the public constructors remain  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java\n  */\n package org.apache.commons.lang3;\n \n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Modifier;\n+\n import junit.framework.Assert;\n import junit.framework.TestCase;\n \n  */\n public class CharSequenceUtilsTest extends TestCase {\n \n+    //-----------------------------------------------------------------------\n+    public void testConstructor() {\n+        assertNotNull(new CharSequenceUtils());\n+        Constructor<?>[] cons = CharSequenceUtils.class.getDeclaredConstructors();\n+        assertEquals(1, cons.length);\n+        assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n+        assertEquals(true, Modifier.isPublic(CharSequenceUtils.class.getModifiers()));\n+        assertEquals(false, Modifier.isFinal(CharSequenceUtils.class.getModifiers()));\n+    }\n+    \n+    //-----------------------------------------------------------------------\n     public void testSubSequence() {\n         //\n         // null input\n--- a/src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java\n import java.beans.PropertyChangeEvent;\n import java.beans.PropertyChangeListener;\n import java.beans.VetoableChangeListener;\n+import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationHandler;\n import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n import java.lang.reflect.Proxy;\n import java.util.Date;\n import java.util.Map;\n  */\n public class EventUtilsTest extends TestCase\n {\n+\n+    public void testConstructor() {\n+        assertNotNull(new EventUtils());\n+        Constructor<?>[] cons = EventUtils.class.getDeclaredConstructors();\n+        assertEquals(1, cons.length);\n+        assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n+        assertEquals(true, Modifier.isPublic(EventUtils.class.getModifiers()));\n+        assertEquals(false, Modifier.isFinal(EventUtils.class.getModifiers()));\n+    }\n+    \n     public void testAddEventListener()\n     {\n         final PropertyChangeSource src = new PropertyChangeSource();\n--- a/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/reflect/FieldUtilsTest.java\n  */\n package org.apache.commons.lang3.reflect;\n \n+import java.lang.reflect.Constructor;\n import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n \n import junit.framework.TestCase;\n \n         privatelyShadowedChild = new PrivatelyShadowedChild();\n     }\n \n+    public void testConstructor() {\n+        assertNotNull(new FieldUtils());\n+        Constructor<?>[] cons = FieldUtils.class.getDeclaredConstructors();\n+        assertEquals(1, cons.length);\n+        assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\n+        assertEquals(true, Modifier.isPublic(FieldUtils.class.getModifiers()));\n+        assertEquals(false, Modifier.isFinal(FieldUtils.class.getModifiers()));\n+    }\n+    \n     public void testGetField() {\n         assertEquals(Foo.class, FieldUtils.getField(PublicChild.class, \"VALUE\").getDeclaringClass());\n         assertEquals(parentClass, FieldUtils.getField(PublicChild.class, \"s\").getDeclaringClass());", "timestamp": 1296627713, "metainfo": ""}