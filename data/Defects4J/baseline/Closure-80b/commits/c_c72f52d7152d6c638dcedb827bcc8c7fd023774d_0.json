{"sha": "c72f52d7152d6c638dcedb827bcc8c7fd023774d", "log": "fix a subtle bug in warnings guard ordering.  R=johnlenz DELTA=44  (43 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=103006   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ComposeWarningsGuard.java\n+++ b/src/com/google/javascript/jscomp/ComposeWarningsGuard.java\n \n package com.google.javascript.jscomp;\n \n+import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n import com.google.javascript.jscomp.CheckLevel;\n \n \n   void addGuard(WarningsGuard guard) {\n     if (guard instanceof ComposeWarningsGuard) {\n-      addGuards(((ComposeWarningsGuard) guard).guards);\n+      // Reverse the guards, so that they have the same order in the result.\n+      addGuards(Iterables.reverse(((ComposeWarningsGuard) guard).guards));\n     } else {\n       int index = Collections.binarySearch(this.guards, guard, guardComparator);\n       if (index < 0) {\n     for (WarningsGuard guard : guards) {\n       if (guard.enables(group)) {\n         return true;\n+      } else if (guard.disables(group)) {\n+        return false;\n       }\n     }\n \n     return false;\n   }\n-  \n+\n   List<WarningsGuard> getGuards() {\n     return Collections.unmodifiableList(guards);\n   }", "timestamp": 1281657282, "metainfo": ""}