{"sha": "f255c8f6998bd3c277d79338a322625d7df9c72f", "log": "Adding the missing char/Character methods in ArrayUtils, as pointed out (and patched) by Andres Almiray in LANG-267  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n \n     // Primitive/Object array converters\n     // ----------------------------------------------------------------------\n+\n+    // Character array converters\n+    // ----------------------------------------------------------------------\n+    /**\n+     * <p>Converts an array of object Characters to primitives.</p>\n+     *\n+     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n+     * \n+     * @param array  a <code>Character</code> array, may be <code>null</code>\n+     * @return a <code>char</code> array, <code>null</code> if null array input\n+     * @throws NullPointerException if array content is <code>null</code>\n+     */\n+    public static char[] toPrimitive(Character[] array) {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return EMPTY_CHAR_ARRAY;\n+        }\n+        final char[] result = new char[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            result[i] = array[i].charValue();\n+        }\n+        return result;\n+    }\n+\n+    /**\n+     * <p>Converts an array of object Character to primitives handling <code>null</code>.</p>\n+     * \n+     * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n+     * \n+     * @param array  a <code>Character</code> array, may be <code>null</code>\n+     * @param valueForNull  the value to insert if <code>null</code> found\n+     * @return a <code>char</code> array, <code>null</code> if null array input\n+     */\n+    public static char[] toPrimitive(Character[] array, char valueForNull) {\n+        if (array == null) {\n+            return null;\n+        } else if (array.length == 0) {\n+            return EMPTY_CHAR_ARRAY;\n+        }\n+        final char[] result = new char[array.length];\n+        for (int i = 0; i < array.length; i++) {\n+            Character b = array[i];\n+            result[i] = (b == null ? valueForNull : b.charValue());\n+        }\n+        return result;\n+    }\n+    \n+    /**\n+     * Converts an array of primitive chars to objects.<br>\n+     * <p>\n+     * <strong>This is method is not in ArrayUtils.</strong>\n+     * </p>\n+     * <p>\n+     * This method returns <code>null</code> for a <code>null</code> input\n+     * array.\n+     * </p>\n+     * \n+     * @param array a <code>char</code> array\n+     * @return a <code>Character</code> array, <code>null</code> if null\n+     *         array input\n+     */\n+    public static Object[] toObject(char[] array) {\n+        if ( array == null ) {\n+            return null;\n+        }else if( array.length == 0 ){\n+            return EMPTY_CHARACTER_OBJECT_ARRAY;\n+        }\n+        final Character[] result = new Character[array.length];\n+        for( int i = 0; i < array.length; i++ ){\n+            result[i] = new Character( array[i] );\n+        }\n+        return result;\n+     }    \n     \n     // Long array converters\n     // ----------------------------------------------------------------------\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n         );\n     }\n \n+    // testToPrimitive/Object for byte\n+    //  -----------------------------------------------------------------------\n+    public void testToPrimitive_char() {\n+        final Character[] b = null;\n+        assertEquals(null, ArrayUtils.toPrimitive(b));\n+        \n+        assertSame(ArrayUtils.EMPTY_CHAR_ARRAY, ArrayUtils.toPrimitive(new Character[0]));\n+        \n+        assertTrue(Arrays.equals(\n+            new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},\n+            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), \n+                new Character(Character.MAX_VALUE), new Character('0')}))\n+        );\n+\n+        try {\n+            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null});\n+            fail();\n+        } catch (NullPointerException ex) {}\n+    }\n+\n+    public void testToPrimitive_char_char() {\n+        final Character[] b = null;\n+        assertEquals(null, ArrayUtils.toPrimitive(b, Character.MIN_VALUE));\n+        \n+        assertSame(ArrayUtils.EMPTY_CHAR_ARRAY, \n+            ArrayUtils.toPrimitive(new Character[0], (char)0));\n+        \n+        assertTrue(Arrays.equals(\n+            new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},\n+            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), \n+                new Character(Character.MAX_VALUE), new Character('0')}, \n+                Character.MIN_VALUE))\n+        );\n+        \n+        assertTrue(Arrays.equals(\n+            new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},\n+            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null, \n+                new Character('0')}, Character.MAX_VALUE))\n+        );\n+    }\n+\n+    public void testToObject_char() {\n+        final char[] b = null;\n+        assertEquals(null, ArrayUtils.toObject(b));\n+        \n+        assertSame(ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY, \n+            ArrayUtils.toObject(new char[0]));\n+        \n+        assertTrue(Arrays.equals(\n+            new Character[] {new Character(Character.MIN_VALUE), \n+                new Character(Character.MAX_VALUE), new Character('0')},\n+                ArrayUtils.toObject(new char[] {Character.MIN_VALUE, Character.MAX_VALUE, \n+                '0'} ))\n+        );\n+    }\n+    \n     // testToPrimitive/Object for byte\n     //  -----------------------------------------------------------------------\n     public void testToPrimitive_byte() {", "timestamp": 1152057868, "metainfo": ""}