{"sha": "7bb122026aeb008624e45c76461d937e55431c60", "log": "removed testing of deprecated methods getLength() and indexOfThrowable(int, Class)   ", "commit": "\n--- a/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java\n  * Tests the org.apache.commons.lang.exception.NestableException class.\n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: NestableExceptionTestCase.java,v 1.2 2002/07/26 20:30:58 stevencaswell Exp $\n+ * @version $Id: NestableExceptionTestCase.java,v 1.3 2002/08/25 13:21:24 stevencaswell Exp $\n  */\n public class NestableExceptionTestCase extends junit.framework.TestCase\n {\n             ne6.getCause()); \n     }\n \n-    public void testGetLength()\n-    {\n-        // test the deprecated method\n-        NestableException ne1 = new NestableException();\n-        assertEquals(\"ne1 length\", 1, ne1.getLength());\n-\n-        NestableException ne2 = new NestableException(\"ne2\");\n-        assertEquals(\"ne2 length\", 1, ne2.getLength());\n-        \n-        NestableException ne3 = new NestableException(new Exception(\"ne3 exception\"));\n-        assertEquals(\"ne3 length\", 2, ne3.getLength());\n-        \n-        NestableException ne4 = new NestableException(\"ne4\", new Exception(\"ne4 exception\"));\n-        assertEquals(\"ne4 length\", 2, ne4.getLength());\n-        \n-        NestableException ne5 = new NestableException(\"ne5\", null);\n-        assertEquals(\"ne 5 length\", 1, ne5.getLength());\n-        \n-        NestableException ne6 = new NestableException(null, new Exception(\"ne6 exception\"));\n-        assertEquals(\"ne 6 length\", 2, ne6.getLength());\n-        \n-        NestableException ne7 = new NestableException(\"ne7o\", new NestableException(\"ne7i\", new Exception(\"ne7 exception\")));\n-        assertEquals(\"ne 7 length\", 3, ne7.getLength());\n-\n-        NestableException ne8 = new NestableException(\"level 1\", new NestableException(\"level 2\", new NestableException(new NestableException(\"level 4\", new Exception(\"level 5\")))));\n-        assertEquals(\"ne 8 length\", 5, ne8.getLength());\n-    }\n-    \n     public void testGetThrowableCount()\n     {\n         NestableException ne1 = new NestableException();\n         {\n         }\n         \n-        // test the deprecated method\n-        int index = n.indexOfThrowable(-1, NestableExceptionTester1.class);\n-        assertEquals(\"deprecated method index\", 0, index);\n-        index = n.indexOfThrowable(999, Exception.class);\n-        assertEquals(\"deprecated method index\", 4, index);\n     }\n \n     private void doNestableExceptionIndexOfThrowableI(Nestable n, Class type, int fromIndex, int expectedIndex, String expectedMsg)\n             }\n         }\n         \n-        // test the deprecated method\n-        int index1 = n.indexOfThrowable(fromIndex, type);\n-        assertEquals(\"index of throwable \" + type.getName(), expectedIndex, index);\n-        if(expectedIndex > -1)\n-        {\n-            t = n.getThrowable(index1);\n-            if(expectedMsg != null)\n-            {\n-                String msg = null;\n-                if(Nestable.class.isInstance(t))\n-                {\n-                    msg = ((Nestable) t).getMessage(0);\n-                }\n-                else\n-                {\n-                    msg = t.getMessage();\n-                }\n-                assertEquals(\"message of indexed throwable\", expectedMsg, msg);\n-            }\n-        }\n     }\n     \n     public void testPrintPartialStackTrace()\n--- a/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java\n  * Tests the org.apache.commons.lang.exception.NestableRuntimeException class.\n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: NestableRuntimeExceptionTestCase.java,v 1.2 2002/07/26 20:30:58 stevencaswell Exp $\n+ * @version $Id: NestableRuntimeExceptionTestCase.java,v 1.3 2002/08/25 13:21:24 stevencaswell Exp $\n  */\n public class NestableRuntimeExceptionTestCase extends junit.framework.TestCase\n {\n         assertEquals(\"ne 8 throwable count\", 5, ne8.getThrowableCount());\n     }\n     \n-    public void testGetLength()\n-    {\n-        // test the deprecated method\n-        NestableRuntimeException ne1 = new NestableRuntimeException();\n-        assertEquals(\"ne1 length\", 1, ne1.getLength());\n-\n-        NestableRuntimeException ne2 = new NestableRuntimeException(\"ne2\");\n-        assertEquals(\"ne2 length\", 1, ne2.getLength());\n-        \n-        NestableRuntimeException ne3 = new NestableRuntimeException(new Exception(\"ne3 exception\"));\n-        assertEquals(\"ne3 length\", 2, ne3.getLength());\n-        \n-        NestableRuntimeException ne4 = new NestableRuntimeException(\"ne4\", new Exception(\"ne4 exception\"));\n-        assertEquals(\"ne4 length\", 2, ne4.getLength());\n-        \n-        NestableRuntimeException ne5 = new NestableRuntimeException(\"ne5\", null);\n-        assertEquals(\"ne 5 length\", 1, ne5.getLength());\n-        \n-        NestableRuntimeException ne6 = new NestableRuntimeException(null, new Exception(\"ne6 exception\"));\n-        assertEquals(\"ne 6 length\", 2, ne6.getLength());\n-        \n-        NestableRuntimeException ne7 = new NestableRuntimeException(\"ne7o\", new NestableRuntimeException(\"ne7i\", new Exception(\"ne7 exception\")));\n-        assertEquals(\"ne 7 length\", 3, ne7.getLength());\n-\n-        NestableRuntimeException ne8 = new NestableRuntimeException(\"level 1\", new NestableRuntimeException(\"level 2\", new NestableRuntimeException(new NestableRuntimeException(\"level 4\", new Exception(\"level 5\")))));\n-        assertEquals(\"ne 8 length\", 5, ne8.getLength());\n-    }\n-\n     public void testGetMessage()\n     {\n         NestableRuntimeException ne1 = new NestableRuntimeException();\n         {\n         }\n         \n-        // test the deprecated method\n-        int index = n.indexOfThrowable(-1, NestableRuntimeExceptionTester1.class);\n-        assertEquals(\"deprecated method index\", 0, index);\n-        index = n.indexOfThrowable(999, Exception.class);\n-        assertEquals(\"deprecated method index\", 4, index);\n     }\n \n     private void doNestableRuntimeExceptionIndexOfThrowableI(Nestable n, Class type, int fromIndex, int expectedIndex, String expectedMsg)\n             }\n         }\n         \n-        // test the deprecated method\n-        int index1 = n.indexOfThrowable(fromIndex, type);\n-        assertEquals(\"index of throwable \" + type.getName(), expectedIndex, index);\n-        if(expectedIndex > -1)\n-        {\n-            t = n.getThrowable(index);\n-            if(expectedMsg != null)\n-            {\n-                String msg = null;\n-                if(Nestable.class.isInstance(t))\n-                {\n-                    msg = ((Nestable) t).getMessage(0);\n-                }\n-                else\n-                {\n-                    msg = t.getMessage();\n-                }\n-                assertEquals(\"message of indexed throwable\", expectedMsg, msg);\n-            }\n-        }\n     }\n     \n     public void testPrintStackTrace()", "timestamp": 1030281684, "metainfo": ""}