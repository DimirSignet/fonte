{"sha": "8458c68fb8266f8370d62e701bb57c24d09cad63", "log": "few more tests to get 100% coverage for Token   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java\n           }, \n           DurationFormatUtils.lexx(DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN)\n         );\n+\n+        // test failures in equals\n+        DurationFormatUtils.Token token = new DurationFormatUtils.Token( DurationFormatUtils.y, 4 );\n+        assertFalse( \"Token equal to non-Token class. \", token.equals(new Object()) );\n+        assertFalse( \"Token equal to Token with wrong value class. \", token.equals(\n+            new DurationFormatUtils.Token( new Object() )\n+        ) );\n+        assertFalse( \"Token equal to Token with different count. \", token.equals(\n+            new DurationFormatUtils.Token( new Object(), 1 )\n+        ) );\n+        DurationFormatUtils.Token numToken = new DurationFormatUtils.Token( new Integer(1), 4 );\n+        assertTrue( \"Token with Number value not equal to itself. \", numToken.equals( numToken ) );\n     }\n     private void assertArrayEquals(DurationFormatUtils.Token[] obj1, DurationFormatUtils.Token[] obj2) {\n         assertEquals( \"Arrays are unequal length. \", obj1.length, obj2.length );", "timestamp": 1103426580, "metainfo": ""}