{"sha": "ec8f3c1ea3de563d6ed6ce7af198701f46aea338", "log": "template sections are now represented differently in the AST, so the control flow graph needs to reflect that.  R=acleung DELTA=39  (31 added, 3 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=176113   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n           break;\n         default:\n           if (node.getType() == Token.BLOCK && node.isSyntheticBlock()) {\n-            Node next = node.getLastChild();\n-            if (next != null) {\n-              createEdge(node, Branch.SYN_BLOCK, computeFallThrough(next));\n-            }\n+            createEdge(node, Branch.SYN_BLOCK, computeFollowNode(node, this));\n           }\n           break;\n       }\n--- a/test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java\n+++ b/test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java\n   }\n \n   public void testSynBlock() {\n-    String src = \"START(); var x; END()\";\n+    String src = \"START(); var x; END(); var y;\";\n     ControlFlowGraph<Node> cfg = createCfg(src, true);\n-    assertDownEdge(cfg, Token.BLOCK, Token.EXPR_RESULT, Branch.SYN_BLOCK);\n+    assertCrossEdge(cfg, Token.BLOCK, Token.EXPR_RESULT, Branch.SYN_BLOCK);\n   }\n \n   public void testPartialTraversalOfScope() {", "timestamp": 1282678143, "metainfo": ""}