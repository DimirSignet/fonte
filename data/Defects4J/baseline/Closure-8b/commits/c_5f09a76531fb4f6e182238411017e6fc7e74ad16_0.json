{"sha": "5f09a76531fb4f6e182238411017e6fc7e74ad16", "log": "Change on 2010/06/18 by nicksantos          fix a big where FoldConstants was reversing normalization.          R=johnlenz         DELTA=19  (10 added, 6 deleted, 3 changed)  Change on 2010/06/20 by jinwoo          Add @noalias annotation to 'google'.          R=nicksantos         DELTA=2  (2 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=33001   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n       }\n       parent.removeChild(block);\n       return true;\n-    } else if (parent.getType() == Token.LABEL && block.hasOneChild()) {\n-      parent.replaceChild(block, block.removeFirstChild());\n-      return true;\n     } else {\n       return false;\n     }\n--- a/test/com/google/javascript/jscomp/FoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/FoldConstantsTest.java\n \n   @Override\n   public void setUp() {\n-    super.enableLineNumberCheck(true);\n+    enableLineNumberCheck(true);\n+\n+    // TODO(nicksantos): Turn this on. There are some normalizations\n+    // that cause weirdness here.\n+    disableNormalize();\n   }\n \n   @Override\n   public void testFoldNegativeBug() {\n     fold(\"(-3);\", \"1;\");\n   }\n+\n+  public void testNoNormalizeLabeledExpr() {\n+    enableNormalize(true);\n+    foldSame(\"var x; foo:{x = 3;}\");\n+    foldSame(\"var x; foo:x = 3;\");\n+  }\n }\n--- a/test/com/google/javascript/jscomp/NodeUtilTest.java\n+++ b/test/com/google/javascript/jscomp/NodeUtilTest.java\n     Node parentLabel = actual.getFirstChild();\n     Node childBlock = parentLabel.getLastChild();\n \n-    assertTrue(NodeUtil.tryMergeBlock(childBlock));\n-    String expected = \"foo:a();\";\n-    String difference = parse(expected).checkTreeEquals(actual);\n-    assertNull(\"Nodes do not match:\\n\" + difference, difference);\n+    assertFalse(NodeUtil.tryMergeBlock(childBlock));\n   }\n \n   public void testMergeBlock3() {\n--- a/test/com/google/javascript/jscomp/RenameLabelsTest.java\n+++ b/test/com/google/javascript/jscomp/RenameLabelsTest.java\n          \"a:b:while(1){a(); continue b;break a;}\");\n \n     test(\"Foo:Bar:X:{ break Bar; }\",\n-         \"a:break a;\");\n+         \"a:{ break a; }\");\n     test(\"Foo:Bar:X:{ break Bar; break X; }\",\n          \"a:b:{ break a; break b;}\");\n     test(\"Foo:Bar:X:{ break Bar; break Foo; }\",", "timestamp": 1277150345, "metainfo": ""}