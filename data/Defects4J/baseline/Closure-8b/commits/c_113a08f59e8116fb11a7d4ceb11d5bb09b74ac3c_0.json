{"sha": "113a08f59e8116fb11a7d4ceb11d5bb09b74ac3c", "log": "Fix an edge case in how Array.prototype.join is collapsed. Fixes issue 106.    ", "commit": "\n--- a/src/com/google/javascript/jscomp/FoldConstants.java\n+++ b/src/com/google/javascript/jscomp/FoldConstants.java\n \n     String joinString = NodeUtil.getStringValue(right);\n     List<Node> arrayFoldedChildren = Lists.newLinkedList();\n-    StringBuilder sb = new StringBuilder();\n+    StringBuilder sb = null;\n     int foldedSize = 0;\n     Node elem = arrayNode.getFirstChild();\n     // Merges adjacent String nodes.\n     while (elem != null) {\n       if (NodeUtil.isImmutableValue(elem)) {\n-        if (sb.length() > 0) {\n+        if (sb == null) {\n+          sb = new StringBuilder();\n+        } else {\n           sb.append(joinString);\n         }\n         sb.append(NodeUtil.getStringValue(elem));\n       } else {\n-        if (sb.length() > 0) {\n+        if (sb != null) {\n           // + 2 for the quotes.\n           foldedSize += sb.length() + 2;\n           arrayFoldedChildren.add(Node.newString(sb.toString()));\n-          sb = new StringBuilder();\n+          sb = null;\n         }\n         foldedSize += InlineCostEstimator.getCost(elem);\n         arrayFoldedChildren.add(elem);\n       elem = elem.getNext();\n     }\n \n-    if (sb.length() > 0) {\n+    if (sb != null) {\n       // + 2 for the quotes.\n       foldedSize += sb.length() + 2;\n       arrayFoldedChildren.add(Node.newString(sb.toString()));\n--- a/test/com/google/javascript/jscomp/FoldConstantsTest.java\n+++ b/test/com/google/javascript/jscomp/FoldConstantsTest.java\n     // Only optimize if it's a size win.\n     fold(\"x = ['a', '5', 'c'].join('a very very very long chain')\",\n          \"x = [\\\"a\\\",\\\"5\\\",\\\"c\\\"].join(\\\"a very very very long chain\\\")\");\n-  }\n-\n+    \n+    // TODO(user): Its possible to fold this better.\n+    foldSame(\"x = ['', foo].join(',')\");\n+    foldSame(\"x = ['', foo, ''].join(',')\");\n+    \n+    fold(\"x = ['', '', foo, ''].join(',')\", \"x = [',', foo, ''].join(',')\");\n+    fold(\"x = ['', '', foo, '', ''].join(',')\",\n+         \"x = [',', foo, ','].join(',')\");\n+    \n+    fold(\"x = ['', '', foo, '', '', bar].join(',')\",\n+         \"x = [',', foo, ',', bar].join(',')\");\n+    \n+    fold(\"x = [1,2,3].join('abcdef')\",\n+         \"x = '1abcdef2abcdef3'\");\n+  }\n+  \n   public void testStringJoinAdd_b1992789() {\n     fold(\"x = ['a'].join('')\", \"x = \\\"a\\\"\");\n     fold(\"x = [foo()].join('')\", \"x = '' + foo()\");", "timestamp": 1265751190, "metainfo": ""}