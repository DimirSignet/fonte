{"sha": "7a8983042131c5a9c2b5421ae42075cbb8ef1aeb", "log": "Correct IR helpers for TRY nodes. Fixes issue 727.  R=nicksantos DELTA=100  (96 added, 0 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4780   ", "commit": "\n--- a/src/com/google/javascript/rhino/IR.java\n+++ b/src/com/google/javascript/rhino/IR.java\n     return block;\n   }\n \n+  private static Node blockUnchecked(Node stmt) {\n+    return new Node(Token.BLOCK, stmt);\n+  }\n+\n   public static Node script(Node ... stmts) {\n     // TODO(johnlenz): finish setting up the SCRIPT node\n     Node block = new Node(Token.SCRIPT);\n   }\n \n   public static Node tryFinally(Node tryBody, Node finallyBody) {\n-    Preconditions.checkState(tryBody.isLabelName());\n-    Preconditions.checkState(finallyBody.isLabelName());\n+    Preconditions.checkState(tryBody.isBlock());\n+    Preconditions.checkState(finallyBody.isBlock());\n     Node catchBody = block().copyInformationFrom(tryBody);\n     return new Node(Token.TRY, tryBody, catchBody, finallyBody);\n   }\n   public static Node tryCatch(Node tryBody, Node catchNode) {\n     Preconditions.checkState(tryBody.isBlock());\n     Preconditions.checkState(catchNode.isCatch());\n-    Node catchBody = block(catchNode).copyInformationFrom(catchNode);\n+    Node catchBody = blockUnchecked(catchNode).copyInformationFrom(catchNode);\n     return new Node(Token.TRY, tryBody, catchBody);\n   }\n \n-  public static Node tryCatchFinally(Node tryBody, Node catchNode, Node finallyBody) {\n+  public static Node tryCatchFinally(\n+      Node tryBody, Node catchNode, Node finallyBody) {\n     Preconditions.checkState(finallyBody.isBlock());\n     Node tryNode = tryCatch(tryBody, catchNode);\n     tryNode.addChildToBack(finallyBody);\n--- /dev/null\n+++ b/test/com/google/javascript/rhino/IRTest.java\n+/*\n+ *\n+ * ***** BEGIN LICENSE BLOCK *****\n+ * Version: MPL 1.1/GPL 2.0\n+ *\n+ * The contents of this file are subject to the Mozilla Public License Version\n+ * 1.1 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ * http://www.mozilla.org/MPL/\n+ *\n+ * Software distributed under the License is distributed on an \"AS IS\" basis,\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n+ * for the specific language governing rights and limitations under the\n+ * License.\n+ *\n+ * The Original Code is Rhino code, released\n+ * May 6, 1999.\n+ *\n+ * The Initial Developer of the Original Code is\n+ * Netscape Communications Corporation.\n+ * Portions created by the Initial Developer are Copyright (C) 1997-1999\n+ * the Initial Developer. All Rights Reserved.\n+ *\n+ * Contributor(s):\n+ *   John Lenz\n+ *\n+ * Alternatively, the contents of this file may be used under the terms of\n+ * the GNU General Public License Version 2 or later (the \"GPL\"), in which\n+ * case the provisions of the GPL are applicable instead of those above. If\n+ * you wish to allow use of your version of this file only under the terms of\n+ * the GPL and not to allow others to use your version of this file under the\n+ * MPL, indicate your decision by deleting the provisions above and replacing\n+ * them with the notice and other provisions required by the GPL. If you do\n+ * not delete the provisions above, a recipient may use your version of this\n+ * file under either the MPL or the GPL.\n+ *\n+ * ***** END LICENSE BLOCK ***** */\n+\n+package com.google.javascript.rhino;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * @author johnlenz@google.com (John Lenz)\n+ */\n+public class IRTest extends TestCase {\n+  public void testIssue727_1() {\n+    testIR(\n+        IR.tryFinally(\n+            IR.block(),\n+            IR.block()),\n+        \"TRY\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"    BLOCK\\n\");\n+  }\n+\n+  public void testIssue727_2() {\n+    testIR(\n+        IR.tryCatch(\n+            IR.block(),\n+            IR.catchNode(\n+                IR.name(\"e\"),\n+                IR.block())),\n+        \"TRY\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"        CATCH\\n\" +\n+        \"            NAME e\\n\" +\n+        \"            BLOCK\\n\");\n+  }\n+\n+  public void testIssue727_3() {\n+    testIR(\n+        IR.tryCatchFinally(\n+            IR.block(),\n+            IR.catchNode(IR.name(\"e\"), IR.block()),\n+            IR.block()),\n+        \"TRY\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"    BLOCK\\n\" +\n+        \"        CATCH\\n\" +\n+        \"            NAME e\\n\" +\n+        \"            BLOCK\\n\" +\n+        \"    BLOCK\\n\");\n+  }\n+\n+  private void testIR(Node node, String expectedStructure) {\n+    assertEquals(expectedStructure, node.toStringTree());\n+  }\n+}", "timestamp": 1337029400, "metainfo": ""}