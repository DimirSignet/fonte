{"sha": "309b4b8353342766fac7c446722d277cf19b6ac1", "log": "Add a flag for removing goog.asserts.  R=acleung DELTA=30  (27 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=113009   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n \n   /** Remove goog.abstractMethod assignments. */\n   boolean removeAbstractMethods;\n+\n+  /** Remove goog.asserts calls. */\n+  boolean removeClosureAsserts;\n \n   /** Gather CSS names (requires closurePass) */\n   public boolean gatherCssNames;\n     closurePass = false;\n     rewriteNewDateGoogNow = true;\n     removeAbstractMethods = true;\n+    removeClosureAsserts = false;\n     stripTypes = Collections.emptySet();\n     stripNameSuffixes = Collections.emptySet();\n     stripNamePrefixes = Collections.emptySet();\n     this.removeAbstractMethods = remove;\n   }\n \n+  public void setRemoveClosureAsserts(boolean remove) {\n+    this.removeClosureAsserts = remove;\n+  }\n+\n   /**\n    * If true, name anonymous functions only. All other passes will be skipped.\n    */\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n \n     // Abstract method removal works best on minimally modified code, and also\n     // only needs to run once.\n-    if (options.closurePass && options.removeAbstractMethods) {\n+    if (options.closurePass &&\n+        (options.removeAbstractMethods || options.removeClosureAsserts)) {\n       passes.add(closureCodeRemoval);\n     }\n \n       new PassFactory(\"closureCodeRemoval\", true) {\n     @Override\n     protected CompilerPass createInternal(final AbstractCompiler compiler) {\n-      // TODO(nicksantos): add flags.\n-      return new ClosureCodeRemoval(compiler, true, false);\n+      return new ClosureCodeRemoval(compiler, options.removeAbstractMethods,\n+          options.removeClosureAsserts);\n     }\n   };\n ", "timestamp": 1281724106, "metainfo": ""}