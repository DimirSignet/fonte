{"sha": "ea9bd8c329dc31baebf4e40373ae7a25df232903", "log": "Enforce overridden methods properly  Tested: yes  R=johnlenz DELTA=236  (169 added, 59 deleted, 8 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4824   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n       }\n     }\n \n-    if (!declaredOverride && !superClassHasProperty\n+    if (!declaredOverride\n+        && !superClassHasProperty\n         && !superInterfacesHasProperty) {\n       // nothing to do here, it's just a plain new property\n       return;\n           HIDDEN_SUPERCLASS_PROPERTY, propertyName,\n           topInstanceType.toString()));\n     }\n-    if (!declaredOverride) {\n-      // there's no @override to check\n-      return;\n-    }\n+\n     // @override is present and we have to check that it is ok\n     if (superClassHasProperty) {\n       // there is a superclass implementation\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"use @override to override it\");\n   }\n \n+  public void testInheritanceCheck17() throws Exception {\n+    // Make sure this warning still works, even when there's no\n+    // @override tag.\n+    reportMissingOverrides = CheckLevel.OFF;\n+    testTypes(\n+        \"var goog = {};\" +\n+        \"/** @constructor */goog.Super = function() {};\" +\n+        \"/** @param {number} x */ goog.Super.prototype.foo = function(x) {};\" +\n+        \"/** @constructor\\n @extends {goog.Super} */goog.Sub = function() {};\" +\n+        \"/** @param {string} x */ goog.Sub.prototype.foo = function(x) {};\",\n+        \"mismatch of the foo property type and the type of the property it \" +\n+        \"overrides from superclass goog.Super\\n\" +\n+        \"original: function (this:goog.Super, number): undefined\\n\" +\n+        \"override: function (this:goog.Sub, string): undefined\");\n+  }\n+\n   public void testInterfacePropertyOverride1() throws Exception {\n     testTypes(\n         \"/** @interface */function Super() {};\" +", "timestamp": 1337277070, "metainfo": ""}