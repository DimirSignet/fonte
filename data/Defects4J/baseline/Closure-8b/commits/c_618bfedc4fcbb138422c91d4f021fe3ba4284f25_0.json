{"sha": "618bfedc4fcbb138422c91d4f021fe3ba4284f25", "log": "add some tests for name anonymous functions, just to document the existing behavior. There are some cases where the function expression name will never get renamed, and i'm not sure what the correct behavior is.  R=johnlenz DELTA=38  (35 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4603   ", "commit": "\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n     assertNull(lastCompiler.getResult().namedAnonFunctionMap);\n   }\n \n+  public void testNameAnonymousFunctionsWithVarRemoval() {\n+    CompilerOptions options = createCompilerOptions();\n+    options.setRemoveUnusedVariables(CompilerOptions.Reach.LOCAL_ONLY);\n+    options.setInlineVariables(true);\n+    String code = \"var f = function longName() {}; var g = function() {};\" +\n+        \"function longerName() {} var i = longerName;\";\n+    test(options, code,\n+         \"var f = function() {}; var g = function() {}; \" +\n+         \"var i = function() {};\");\n+\n+    options.anonymousFunctionNaming = AnonymousFunctionNamingPolicy.MAPPED;\n+    test(options, code,\n+         \"var f = function longName() {}; var g = function $() {};\" +\n+         \"var i = function longerName(){};\");\n+    assertNotNull(lastCompiler.getResult().namedAnonFunctionMap);\n+\n+    options.anonymousFunctionNaming = AnonymousFunctionNamingPolicy.UNMAPPED;\n+    test(options, code,\n+         \"var f = function longName() {}; var g = function $g$() {};\" +\n+         \"var i = function longerName(){};\");\n+    assertNull(lastCompiler.getResult().namedAnonFunctionMap);\n+  }\n+\n   public void testExtractPrototypeMemberDeclarations() {\n     CompilerOptions options = createCompilerOptions();\n     String code = \"var f = function() {};\";", "timestamp": 1335196527, "metainfo": ""}