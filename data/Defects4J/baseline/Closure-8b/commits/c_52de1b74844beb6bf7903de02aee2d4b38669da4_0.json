{"sha": "52de1b74844beb6bf7903de02aee2d4b38669da4", "log": "Make sure that aliases on prototypes don't prevent classes from being removed.  R=johnlenz DELTA=30  (30 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5516   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n     private boolean maybeRecordAlias(\n         String name, Node parent,\n         NameInformation referring, String referringName) {\n+      // A common type of reference is\n+      // function F() {}\n+      // F.prototype.bar = goog.nullFunction;\n+      //\n+      // In this specific case, we do not want a reference to goog.nullFunction\n+      // to preserve F.\n+      //\n+      // In the general case, the user could do something like\n+      // function F() {}\n+      // F.prototype.bar = goog.nullFunction;\n+      // F.prototype.bar.baz = 3;\n+      // where it would not be safe to remove F.\n+      //\n+      // So we do not treat this alias as a backdoor for people to mutate the\n+      // original object. We think that this heuristic will always be\n+      // OK in real code.\n+      boolean isPrototypePropAssignment =\n+          parent.isAssign()\n+          && NodeUtil.isPrototypeProperty(parent.getFirstChild());\n+\n       if ((parent.isName() ||\n           parent.isAssign()) &&\n+          !isPrototypePropAssignment &&\n           referring != null &&\n           scopes.get(parent) == referring) {\n         recordAlias(referringName, name);\n--- a/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n+++ b/test/com/google/javascript/jscomp/NameAnalyzerTest.java\n     test(\"var x = {}; x.a.prototype = 1\", \"\");\n   }\n \n+  public void testRemovePrototypeAliases() {\n+    test(\n+        \"function g() {}\" +\n+        \"function F() {} F.prototype.bar = g;\" +\n+        \"window.g = g;\",\n+        \"function g() {}\" +\n+        \"window.g = g;\");\n+  }\n+\n   public void testIssue284() {\n     test(\n         \"var goog = {};\" +", "timestamp": 1348068866, "metainfo": ""}