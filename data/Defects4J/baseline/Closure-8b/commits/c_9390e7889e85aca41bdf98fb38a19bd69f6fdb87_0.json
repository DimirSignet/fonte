{"sha": "9390e7889e85aca41bdf98fb38a19bd69f6fdb87", "log": "Fix handling of SCRIPT nodes that are not marked as synthetic.  R=acleung DELTA=11  (11 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=198224   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n           throw new Error(\"Unexpected Node subclass.\");\n         }\n         boolean stripBlock = n.isSyntheticBlock() ||\n+            n.getType() == Token.SCRIPT ||\n             ((context != Context.PRESERVE_BLOCK) && (n.getChildCount() < 2));\n         if (!stripBlock) {\n           cc.beginBlock();\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n     call.putBooleanProp(Node.FREE_CALL, true);\n     assertPrintNode(\"(0,x.foo)(a)\", n);\n   }\n+\n+  public void testPrintScript() {\n+    // Verify that SCRIPT nodes not marked as synthetic are printed as\n+    // blocks.\n+    Node ast = new Node(Token.SCRIPT, \n+        new Node(Token.EXPR_RESULT, Node.newString(\"f\")), \n+        new Node(Token.EXPR_RESULT, Node.newString(\"g\"))); \n+    String result = new CodePrinter.Builder(ast).setPrettyPrint(true).build();    \n+    assertEquals(\"\\\"f\\\";\\n\\\"g\\\"\", result);\n+  }\n }", "timestamp": 1282949486, "metainfo": ""}