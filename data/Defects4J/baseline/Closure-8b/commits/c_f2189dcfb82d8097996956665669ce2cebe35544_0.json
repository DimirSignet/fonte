{"sha": "f2189dcfb82d8097996956665669ce2cebe35544", "log": "cleaner contrib/externs rules so that the next maps extern goes out  R=acleung DELTA=27  (9 added, 11 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=181030   ", "commit": "\n--- a/src/com/google/javascript/jscomp/NameReferenceGraphReport.java\n+++ b/src/com/google/javascript/jscomp/NameReferenceGraphReport.java\n     generateType(builder, defType);\n   }\n \n-\n   private void generateSourceReferenceLink(StringBuilder builder,\n     String sourceFile, int lineNumber, int columnNumber) {\n     assert(sourceFile != null);\n     builder.append(\"(\");\n \n \n-\n     // Print out the text path so the user knows where things come from.\n     builder.append(sourceFile + \":\" +\n         lineNumber + \",\" + columnNumber);\n-\n \n \n     builder.append(\")\");\n--- a/test/com/google/javascript/jscomp/FunctionInjectorTest.java\n+++ b/test/com/google/javascript/jscomp/FunctionInjectorTest.java\n         \"foo\", INLINE_BLOCK);\n   }\n \n-\n   public void testBug1897706() {\n     helperInlineReferenceToFunction(\n         \"function foo(a){}; foo(x())\",\n--- a/test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java\n+++ b/test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java\n public class OptimizeArgumentsArrayTest extends CompilerTestCase {\n \n   public OptimizeArgumentsArrayTest() {\n-\n     super(\"var arguments, alert\" /* Externs */);\n   }\n ", "timestamp": 1282579489, "metainfo": ""}