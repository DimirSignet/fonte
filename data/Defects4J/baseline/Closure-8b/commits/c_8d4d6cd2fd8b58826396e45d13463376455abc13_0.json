{"sha": "8d4d6cd2fd8b58826396e45d13463376455abc13", "log": "Only leave the finally blocks if try body blocks are empty.  Fixes issue 503.  R=acleung,johnlenz DELTA=23  (22 added, 1 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2503   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n+++ b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java\n   /**\n    * Remove try blocks without catch blocks and with empty or not\n    * existent finally blocks.\n+   * Or, only leave the finally blocks if try body blocks are empty\n    * @return the replacement node, if changed, or the original if not\n    */\n   private Node tryFoldTry(Node n) {\n-    // Removes TRYs that had its CATCH removed and/or empty FINALLY.\n     Preconditions.checkState(n.getType() == Token.TRY);\n     Node body = n.getFirstChild();\n     Node catchBlock = body.getNext();\n     Node finallyBlock = catchBlock.getNext();\n \n+    // Removes TRYs that had its CATCH removed and/or empty FINALLY.\n     if (!catchBlock.hasChildren() &&\n         (finallyBlock == null || !finallyBlock.hasChildren())) {\n       n.removeChild(body);\n       n.getParent().replaceChild(n, body);\n       reportCodeChange();\n       return body;\n+    }\n+\n+    // Only leave FINALLYs if TRYs are empty\n+    if (!body.hasChildren()) {\n+      NodeUtil.redeclareVarsInsideBranch(catchBlock);\n+      if (finallyBlock != null) {\n+        n.removeChild(finallyBlock);\n+        n.getParent().replaceChild(n, finallyBlock);\n+      } else {\n+        n.getParent().removeChild(n);\n+      }\n+      reportCodeChange();\n+      return finallyBlock;\n     }\n \n     return n;\n--- a/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java\n     testSame(\"try {var x = 1} finally {x()}\");\n     test(\"function f() { return; try{var x = 1}finally{} }\",\n         \"function f() { return; var x = 1; }\");\n+    test(\"try {} finally {x()}\", \"x()\");\n+    test(\"try {} catch (e) { bar()} finally {x()}\", \"x()\");\n+    test(\"try {} catch (e) { bar()}\", \"\");\n+    test(\"try {} catch (e) { var a = 0; } finally {x()}\", \"var a; x()\");\n+    test(\"try {} catch (e) {}\", \"\");\n+    test(\"try {} finally {}\", \"\");\n+    test(\"try {} catch (e) {} finally {}\", \"\");\n   }\n \n   public void testObjectLiteral() {", "timestamp": 1309958216, "metainfo": ""}