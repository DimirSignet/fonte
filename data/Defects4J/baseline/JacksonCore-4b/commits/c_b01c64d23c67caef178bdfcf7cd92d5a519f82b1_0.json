{"sha": "b01c64d23c67caef178bdfcf7cd92d5a519f82b1", "log": "trying to streamline name handling", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n         int ptr = _inputPtr;\n         int hash = _hashSeed;\n         final int inputLen = _inputEnd;\n-\n-        if (ptr < inputLen) {\n-            final int[] codes = _icLatin1;\n-            final int maxCode = codes.length;\n-\n-            do {\n-                int ch = _inputBuffer[ptr];\n-                if (ch < maxCode && codes[ch] != 0) {\n-                    if (ch == '\"') {\n-                        int start = _inputPtr;\n-                        _inputPtr = ptr+1; // to skip the quote\n-                        return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash);\n-                    }\n-                    break;\n-                }\n-                hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + ch;\n-                ++ptr;\n-            } while (ptr < inputLen);\n+        final int[] codes = _icLatin1;\n+        final int maxCode = codes.length;\n+\n+        while (ptr < inputLen) {\n+            int ch = _inputBuffer[ptr];\n+            if (ch < maxCode && codes[ch] != 0) {\n+                if (ch == '\"') {\n+                    int start = _inputPtr;\n+                    _inputPtr = ptr+1; // to skip the quote\n+                    return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash);\n+                }\n+                break;\n+            }\n+            hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + ch;\n+            ++ptr;\n         }\n \n         int start = _inputPtr;\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n \n         int i = _skipWSOrEnd();\n         if (i < 0) { // end-of-input\n-            /* 19-Feb-2009, tatu: Should actually close/release things\n-             *    like input source, symbol table and recyclable buffers now.\n-             */\n+            // Close/release things like input source, symbol table and recyclable buffers\n             close();\n             return (_currToken = null);\n         }\n \n-        /* First, need to ensure we know the starting location of token\n-         * after skipping leading white space\n-         */\n+        // First, need to ensure we know the starting location of token\n+        // after skipping leading white space\n         _tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n         _tokenInputRow = _currInputRow;\n         _tokenInputCol = _inputPtr - _currInputRowStart - 1;", "timestamp": 1398146375, "metainfo": ""}