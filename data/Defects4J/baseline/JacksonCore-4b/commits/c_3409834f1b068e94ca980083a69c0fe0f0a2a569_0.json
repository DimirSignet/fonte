{"sha": "3409834f1b068e94ca980083a69c0fe0f0a2a569", "log": "Fixed [JACKSON-853]", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java\n                 }\n                 outputBuffer = textBuffer.finishCurrentSegment();\n                 int second = length - first;\n-                System.arraycopy(_quoteBuffer, first, outputBuffer, outPtr, second);\n-                outPtr += second;\n+                System.arraycopy(_quoteBuffer, first, outputBuffer, 0, second);\n+                outPtr = second;\n             } else {\n                 System.arraycopy(_quoteBuffer, 0, outputBuffer, outPtr, length);\n                 outPtr += length;\n             }\n-            \n         }\n         textBuffer.setCurrentLength(outPtr);\n         return textBuffer.contentsAsArray();\n--- a/src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java\n+++ b/src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java\n         assertArrayEquals(\"\\\\\\\"x\\\\\\\"\".toCharArray(), result);\n     }\n \n+    // For [JACKSON-853]\n+    public void testQuoteLongAsString() throws Exception\n+    {\n+        JsonStringEncoder encoder = new JsonStringEncoder();\n+        StringBuilder sb = new StringBuilder();\n+        StringBuilder sb2 = new StringBuilder();\n+        for (int i = 0; i < 1111; ++i) {\n+            sb.append('\"');\n+            sb2.append(\"\\\\\\\"\");\n+        }\n+        String input = sb.toString();\n+        String exp = sb2.toString();\n+        char[] result = encoder.quoteAsString(input);\n+        assertEquals(2*input.length(), result.length);\n+        assertEquals(exp, new String(result));\n+        \n+    }\n+    \n     public void testQuoteAsUTF8() throws Exception\n     {\n         // In this case, let's actually use existing JsonGenerator to produce expected values", "timestamp": 1342375343, "metainfo": ""}