{"sha": "be4395d3ff5a06a751efbf7a34a359fab4513b73", "log": "...", "commit": "\n--- a/src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java\n+++ b/src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java\n         \"\\\"\\\"\\\"\", \"\\\\r)'\\\"\",\n         \"Longer text & other stuff:\\twith some\\r\\n\\r\\n random linefeeds etc added in to cause some \\\"special\\\" handling \\\\\\\\ to occur...\\n\"\n     };\n+ \n+    private final JsonFactory FACTORY = new JsonFactory();\n     \n     public void testBasicEscaping()\n         throws Exception\n         for (int i = 0; i < SAMPLES.length; ++i) {\n             String VALUE = SAMPLES[i];\n             StringWriter sw = new StringWriter();\n-            JsonGenerator gen = new JsonFactory().createGenerator(sw);\n+            JsonGenerator gen = FACTORY.createGenerator(sw);\n             gen.writeStartArray();\n             if (charArray) {\n                 char[] buf = new char[VALUE.length() + i];\n         throws Exception\n     {\n         ByteArrayOutputStream bow = new ByteArrayOutputStream(text.length());\n-        JsonGenerator gen = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);\n+        JsonGenerator gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);\n \n         gen.writeStartArray();\n         if (charArray) {\n         gen.writeEndArray();\n         gen.close();\n         byte[] docData = bow.toByteArray();\n-        JsonParser jp = new JsonFactory().createParser(new ByteArrayInputStream(docData));\n+        JsonParser jp = FACTORY.createParser(new ByteArrayInputStream(docData));\n         assertEquals(JsonToken.START_ARRAY, jp.nextToken());\n         JsonToken t = jp.nextToken();\n         assertEquals(JsonToken.VALUE_STRING, t);\n         throws Exception\n     {\n         ByteArrayOutputStream bow = new ByteArrayOutputStream(text.length());\n-        JsonGenerator gen = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);\n+        JsonGenerator gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);\n         gen.writeStartArray();\n \n         gen.writeString(text);\n         gen.writeEndArray();\n         gen.close();\n         \n-        gen = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);\n+        gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);\n         gen.writeStartArray();\n         gen.writeStartArray();\n \n         gen.writeEndArray();\n         gen.close();\n         byte[] docData = bow.toByteArray();\n-        JsonParser jp = new JsonFactory().createParser(new ByteArrayInputStream(docData));\n+        JsonParser jp = FACTORY.createParser(new ByteArrayInputStream(docData));\n         assertEquals(JsonToken.START_ARRAY, jp.nextToken());\n \n         offset = 0;", "timestamp": 1383967993, "metainfo": ""}