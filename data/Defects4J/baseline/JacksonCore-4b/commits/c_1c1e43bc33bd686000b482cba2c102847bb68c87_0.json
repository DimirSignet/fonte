{"sha": "1c1e43bc33bd686000b482cba2c102847bb68c87", "log": "prepare for rc1", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n         while (true) {\n             if (_inputPtr >= end) {\n                 // Long enough to be split across boundary, so:\n-                return _parserNumber2(outBuf, outPtr, negative, intLen);\n+                return _parseNumber2(outBuf, outPtr, negative, intLen);\n             }\n             c = (int) _inputBuffer[_inputPtr++] & 0xFF;\n             if (c < INT_0 || c > INT_9) {\n      * Method called to handle parsing when input is split across buffer boundary\n      * (or output is longer than segment used to store it)\n      */\n-    private final JsonToken _parserNumber2(char[] outBuf, int outPtr, boolean negative,\n+    private final JsonToken _parseNumber2(char[] outBuf, int outPtr, boolean negative,\n             int intPartLength) throws IOException\n     {\n         // Ok, parse the rest", "timestamp": 1398539691, "metainfo": ""}