{"sha": "c5b439369e998555922ea7b50cdd23e03c1c275f", "log": "remove unneeded constants", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java\n \n     final static double MIN_INT_D = (double) Integer.MIN_VALUE;\n     final static double MAX_INT_D = (double) Integer.MAX_VALUE;\n-    \n-    \n+\n     // Digits, numeric\n     final protected static int INT_0 = '0';\n     final protected static int INT_1 = '1';\n \n     final protected static int INT_MINUS = '-';\n     final protected static int INT_PLUS = '+';\n-    final protected static int INT_DECIMAL_POINT = '.';\n-\n-    final protected static int INT_e = 'e';\n-    final protected static int INT_E = 'E';\n \n     final protected static char CHAR_NULL = '\\0';\n     \n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n          throws IOException, JsonParseException\n      */\n \n-    // note: identical to one in Utf8StreamParser\n+    // note: identical to one in UTF8StreamJsonParser\n     @Override\n     public String nextTextValue()\n         throws IOException, JsonParseException\n             int fractLen = 0;\n             \n             // And then see if we get other parts\n-            if (ch == INT_DECIMAL_POINT) { // yes, fraction\n+            if (ch == '.') { // yes, fraction\n                 fract_loop:\n                 while (true) {\n                     if (ptr >= inputLen) {\n             }\n \n             int expLen = 0;\n-            if (ch == INT_e || ch == INT_E) { // and/or exponent\n+            if (ch == 'e' || ch == 'E') { // and/or exponent\n                 if (ptr >= inputLen) {\n                     break dummy_loop;\n                 }", "timestamp": 1379559830, "metainfo": ""}