{"sha": "abb4089e58f68c90c528597ac8c295a9539750ae", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n      */\n \n     @Override\n-    public void writeNumber(short s)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(short s) throws IOException\n     {\n         _verifyValueWrite(\"write number\");\n         if (_cfgNumbersAsStrings) {\n     }    \n \n     @Override\n-    public void writeNumber(int i)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(int i) throws IOException\n     {\n         _verifyValueWrite(\"write number\");\n         if (_cfgNumbersAsStrings) {\n     }    \n \n     @Override\n-    public void writeNumber(long l)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(long l) throws IOException\n     {\n         _verifyValueWrite(\"write number\");\n         if (_cfgNumbersAsStrings) {\n     // !!! 05-Aug-2008, tatus: Any ways to optimize these?\n \n     @Override\n-    public void writeNumber(BigInteger value)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(BigInteger value) throws IOException\n     {\n         _verifyValueWrite(\"write number\");\n         if (value == null) {\n \n     \n     @Override\n-    public void writeNumber(double d)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(double d) throws IOException\n     {\n         if (_cfgNumbersAsStrings ||\n             // [JACKSON-139]\n-            (((Double.isNaN(d) || Double.isInfinite(d))\n-                && isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))) {\n+                (isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS) && ((Double.isNaN(d) || Double.isInfinite(d))))) {\n             writeString(String.valueOf(d));\n             return;\n         }\n     }\n \n     @Override\n-    public void writeNumber(float f)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(float f) throws IOException\n     {\n         if (_cfgNumbersAsStrings ||\n             // [JACKSON-139]\n-            (((Float.isNaN(f) || Float.isInfinite(f))\n-                && isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))) {\n+                (isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS) && ((Float.isNaN(f) || Float.isInfinite(f))))) {\n             writeString(String.valueOf(f));\n             return;\n         }\n     }\n \n     @Override\n-    public void writeNumber(BigDecimal value)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(BigDecimal value) throws IOException\n     {\n         // Don't really know max length for big decimal, no point checking\n         _verifyValueWrite(\"write number\");\n     }\n \n     @Override\n-    public void writeNumber(String encodedValue)\n-        throws IOException, JsonGenerationException\n+    public void writeNumber(String encodedValue) throws IOException\n     {\n         _verifyValueWrite(\"write number\");\n         if (_cfgNumbersAsStrings) {\n     }\n     \n     @Override\n-    public void writeBoolean(boolean state)\n-        throws IOException, JsonGenerationException\n+    public void writeBoolean(boolean state) throws IOException\n     {\n         _verifyValueWrite(\"write boolean value\");\n         if ((_outputTail + 5) >= _outputEnd) {\n     }\n \n     @Override\n-    public void writeNull()\n-        throws IOException, JsonGenerationException\n-    {\n+    public void writeNull() throws IOException {\n         _verifyValueWrite(\"write null value\");\n         _writeNull();\n     }\n     /**********************************************************\n      */\n     \n-    private void _writeNull() throws IOException\n+    private final void _writeNull() throws IOException\n     {\n         if ((_outputTail + 4) >= _outputEnd) {\n             _flushBuffer();", "timestamp": 1398791840, "metainfo": ""}