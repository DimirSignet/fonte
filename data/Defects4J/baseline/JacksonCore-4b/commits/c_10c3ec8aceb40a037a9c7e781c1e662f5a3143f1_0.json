{"sha": "10c3ec8aceb40a037a9c7e781c1e662f5a3143f1", "log": "eclipse warning cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n      */\n \n     /**\n-     * This <code>ThreadLocal</code> contains a {@link java.lang.ref.SoftRerefence}\n+     * This <code>ThreadLocal</code> contains a {@link java.lang.ref.SoftReference}\n      * to a {@link BufferRecycler} used to provide a low-cost\n      * buffer recycling between reader and writer instances.\n      */\n--- a/src/main/java/com/fasterxml/jackson/core/JsonToken.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonToken.java\n     final byte[] _serializedBytes;\n \n     /**\n-     * @param Textual representation for this token, if there is a\n+     * @param token representation for this token, if there is a\n      *   single static representation; null otherwise\n      */\n     JsonToken(String token)\n--- a/src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java\n     private final static int INT_0 = '0';\n     \n     /**\n-     * This <code>ThreadLocal</code> contains a {@link java.lang.ref.SoftRerefence}\n+     * This <code>ThreadLocal</code> contains a {@link java.lang.ref.SoftReference}\n      * to a {@link BufferRecycler} used to provide a low-cost\n      * buffer recycling between reader and writer instances.\n      */\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestBase64Codec.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestBase64Codec.java\n         Assert.assertArrayEquals(exp, act);\n     }\n \n+    @SuppressWarnings(\"unused\")\n     public void testErrors() throws Exception\n     {\n         try {\n-            new Base64Variant(\"foobar\", \"xyz\", false, '!', 24);\n+            Base64Variant b = new Base64Variant(\"foobar\", \"xyz\", false, '!', 24);\n         } catch (IllegalArgumentException iae) {\n             verifyException(iae, \"length must be exactly\");\n         }", "timestamp": 1346899129, "metainfo": ""}