{"sha": "322fe4df08c5306f78a736d802f3fef6159c3882", "log": "minor improvement to token matching", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n             // been handled earlier\n             _reportUnexpectedChar(i, \"expected a value\");\n         case 't':\n-            _matchToken(\"true\", 1);\n+            _matchTrue();\n             t = JsonToken.VALUE_TRUE;\n             break;\n         case 'f':\n-            _matchToken(\"false\", 1);\n+            _matchFalse();\n             t = JsonToken.VALUE_FALSE;\n             break;\n         case 'n':\n-            _matchToken(\"null\", 1);\n+            _matchNull();\n             t = JsonToken.VALUE_NULL;\n             break;\n \n         return (char) value;\n     }\n     \n+    private final void _matchTrue() throws IOException {\n+        int ptr = _inputPtr;\n+        if ((ptr + 3) < _inputEnd) {\n+            final char[] b = _inputBuffer;\n+            if (b[ptr] == 'r' && b[++ptr] == 'u' && b[++ptr] == 'e') {\n+                char c = b[++ptr];\n+                if (c < '0' || c == ']' || c == '}') { // expected/allowed chars\n+                    _inputPtr = ptr;\n+                    return;\n+                }\n+            }\n+        }\n+        // buffer boundary, or problem, offline\n+        _matchToken(\"true\", 1);\n+    }\n+\n+    private final void _matchFalse() throws IOException {\n+        int ptr = _inputPtr;\n+        if ((ptr + 4) < _inputEnd) {\n+            final char[] b = _inputBuffer;\n+            if (b[ptr] == 'a' && b[++ptr] == 'l' && b[++ptr] == 's' && b[++ptr] == 'e') {\n+                char c = b[++ptr];\n+                if (c < '0' || c == ']' || c == '}') { // expected/allowed chars\n+                    _inputPtr = ptr;\n+                    return;\n+                }\n+            }\n+        }\n+        // buffer boundary, or problem, offline\n+        _matchToken(\"false\", 1);\n+    }\n+\n+    private final void _matchNull() throws IOException {\n+        int ptr = _inputPtr;\n+        if ((ptr + 3) < _inputEnd) {\n+            final char[] b = _inputBuffer;\n+            if (b[ptr] == 'u' && b[++ptr] == 'l' && b[++ptr] == 'l') {\n+                char c = b[++ptr];\n+                if (c < '0' || c == ']' || c == '}') { // expected/allowed chars\n+                    _inputPtr = ptr;\n+                    return;\n+                }\n+            }\n+        }\n+        // buffer boundary, or problem, offline\n+        _matchToken(\"null\", 1);\n+    }\n+\n     /**\n      * Helper method for checking whether input matches expected token\n      */", "timestamp": 1398740556, "metainfo": ""}