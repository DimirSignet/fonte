{"sha": "e78fc1f87402d04f2c32bde43722d8e78ad0cede", "log": "minor improvement to text buffer allocation", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/util/BufferRecycler.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/BufferRecycler.java\n  */\n public class BufferRecycler\n {\n-//    public final static int DEFAULT_WRITE_CONCAT_BUFFER_LEN = 2000;\n-\n     /**\n      * Buffer used for reading byte-based input.\n      */\n--- a/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java\n         _segments.add(_currentSegment);\n         int oldLen = _currentSegment.length;\n         _segmentSize += oldLen;\n+        _currentSize = 0;\n+\n         // Let's grow segments by 50%\n-        int newLen = Math.min(oldLen + (oldLen >> 1), MAX_SEGMENT_LEN);\n+        int newLen = oldLen + (oldLen >> 1);\n+        if (newLen < MIN_SEGMENT_LEN) {\n+            newLen = MIN_SEGMENT_LEN;\n+        } else if (newLen > MAX_SEGMENT_LEN) {\n+            newLen = MAX_SEGMENT_LEN;\n+        }\n         char[] curr = carr(newLen);\n-        _currentSize = 0;\n         _currentSegment = curr;\n         return curr;\n     }\n         _hasSegments = true;\n         _segments.add(curr);\n         _segmentSize += curr.length;\n+        _currentSize = 0;\n         int oldLen = curr.length;\n+        \n         // Let's grow segments by 50% minimum\n-        int sizeAddition = oldLen >> 1;\n-        if (sizeAddition < minNewSegmentSize) {\n-            sizeAddition = minNewSegmentSize;\n-        }\n-        _currentSize = 0;\n-        _currentSegment = carr(Math.min(MAX_SEGMENT_LEN, oldLen + sizeAddition));\n+        int newLen = oldLen + (oldLen >> 1);\n+        if (newLen < MIN_SEGMENT_LEN) {\n+            newLen = MIN_SEGMENT_LEN;\n+        } else if (newLen > MAX_SEGMENT_LEN) {\n+            newLen = MAX_SEGMENT_LEN;\n+        }\n+        _currentSegment = carr(newLen);\n     }\n \n     private char[] resultArray()", "timestamp": 1390631209, "metainfo": ""}