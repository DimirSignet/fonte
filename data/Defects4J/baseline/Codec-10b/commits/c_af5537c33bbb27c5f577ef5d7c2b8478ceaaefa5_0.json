{"sha": "af5537c33bbb27c5f577ef5d7c2b8478ceaaefa5", "log": "Added an implementation of the Soundex DIFFERENCE algorithm, a feature requested in http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25243. Note that this commit only covers adding the difference API to the Soundex class. See the ticket for comments.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/Soundex.java\n+++ b/src/java/org/apache/commons/codec/language/Soundex.java\n  * ====================================================================\n  * \n  * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n+ * \n+ * Copyright (c) 2001-2003 The Apache Software Foundation. All rights reserved.\n+ * \n  * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:  \n- *       \"This product includes software developed by the \n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowledgement may appear in the software itself,\n- *    if and wherever such third-party acknowledgements normally appear.\n- *\n- * 4. The names \"Apache\", \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written \n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache\" nor may \"Apache\" appear in their name without prior \n- *    written permission of the Apache Software Foundation.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n+ * modification, are permitted provided that the following conditions are met: 1.\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer. 2. Redistributions in\n+ * binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and/or other\n+ * materials provided with the distribution. 3. The end-user documentation\n+ * included with the redistribution, if any, must include the following\n+ * acknowledgement: \"This product includes software developed by the Apache\n+ * Software Foundation (http://www.apache.org/).\" Alternately, this\n+ * acknowledgement may appear in the software itself, if and wherever such\n+ * third-party acknowledgements normally appear. 4. The names \"Apache\", \"The\n+ * Jakarta Project\", \"Commons\", and \"Apache Software Foundation\" must not be\n+ * used to endorse or promote products derived from this software without prior\n+ * written permission. For written permission, please contact\n+ * apache@apache.org. 5. Products derived from this software may not be called\n+ * \"Apache\", \"Apache\" nor may \"Apache\" appear in their name without prior\n+ * written permission of the Apache Software Foundation.\n+ * \n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n+ * APACHE SOFTWARE FOUNDATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n- */ \n+ * \n+ * This software consists of voluntary contributions made by many individuals\n+ * on behalf of the Apache Software Foundation. For more information on the\n+ * Apache Software Foundation, please see <http://www.apache.org/> .\n+ *  \n+ */\n \n package org.apache.commons.codec.language;\n \n  * @author bayard@generationjava.com\n  * @author Tim O'Brien\n  * @author Gary Gregory\n- * @version $Id: Soundex.java,v 1.13 2003/11/12 19:02:57 ggregory Exp $\n+ * @version $Id: Soundex.java,v 1.14 2003/12/10 00:04:46 ggregory Exp $\n  */\n public class Soundex implements StringEncoder {\n \n     public static final char[] US_ENGLISH_MAPPING = \"01230120022455012623010202\".toCharArray();\n \n     /**\n+\t * Returns the difference between the Soundex values of two Strings. For\n+\t * Soundex, this return value ranges from 0 through 4: 0 indicates little or\n+\t * no similarity, and 4 indicates strong similarity or identical values.\n+\t * \n+\t * @param s1\n+\t *                  A String.\n+\t * @param s2\n+\t *                  A String.\n+\t * @return The return value ranges from 0 through 4: 0 indicates little or\n+\t *             no similarity, and 4 indicates strong similarity or identical\n+\t *             values.\n+\t * \n+     * @see #difference(StringEncoder,String,String)\n+\t * @see <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\">\n+\t *          MS T-SQL DIFFERENCE</a>\n+\t * \n+\t * @throws EncoderException\n+\t *                  if an error occurs encoding one of the strings\n+\t */\n+    public int difference(String s1, String s2) throws EncoderException {\n+        return difference(this, s1, s2);\n+    }\n+\n+    /**\n+\t * Returns the difference between the encoded values of two Strings. The\n+\t * higher the difference factor, the more similar the strings. For Soundex,\n+\t * this return value ranges from 0 through 4: 0 indicates little or no\n+\t * similarity, and 4 indicates strong similarity or identical values.\n+\t * \n+\t * @param encoder\n+\t *                  The encoder to use to encode the String parameters with.\n+\t * @param s1\n+\t *                  A String.\n+\t * @param s2\n+\t *                  A String.\n+\t * @return an integer from 0 to the length of the shorter string. The\n+\t *             smaller the number, the more different the strings are.\n+\t * \n+     * @see #differenceEncoded(String,String)\n+\t * @see <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\">\n+\t *          MS T-SQL DIFFERENCE</a>\n+\t * \n+\t * @throws EncoderException\n+\t *                  if an error occurs encoding one of the strings\n+\t */\n+    public static int difference(StringEncoder encoder, String s1, String s2) throws EncoderException {\n+        return differenceEncoded(encoder.encode(s1), encoder.encode(s2));\n+    }\n+\n+    /**\n+\t * Returns the difference between the values of two encoded Strings. The\n+\t * higher the difference factor, the more similar the strings. For Soundex,\n+\t * this return value ranges from 0 through 4: 0 indicates little or no\n+\t * similarity, and 4 indicates strong similarity or identical values.\n+\t * \n+\t * @param es1\n+\t *                  An encoded String.\n+\t * @param es2\n+\t *                  An encoded String.\n+\t * @return an integer from 0 to the length of the shorter string. The\n+\t *             smaller the number, the more different the strings are.\n+\t * \n+\t * @see <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\">\n+\t *          MS T-SQL DIFFERENCE</a>\n+\t */\n+    public static int differenceEncoded(String es1, String es2) {\n+\n+        if (es1 == null || es2 == null) {\n+            return 0;\n+        }\n+        int lengthToMatch = Math.min(es1.length(), es2.length());\n+        int diff = 0;\n+        for (int i = 0; i < lengthToMatch; i++) {\n+            if (es1.charAt(i) == es2.charAt(i)) {\n+                diff++;\n+            }\n+        }\n+        return diff;\n+    }\n+\n+    /**\n \t * The maximum length of a Soundex code - Soundex codes are only four\n \t * characters by definition.\n-     * \n-     * @deprecated This feature is not needed since the encoding size must be constant.\n+\t * \n+\t * @deprecated This feature is not needed since the encoding size must be\n+\t *                     constant.\n \t */\n     private int maxLength = 4;\n \n     /**\n \t * Cleans up the input string before Soundex processing by only returning\n \t * upper case letters.\n+\t * \n+\t * @param str\n+\t *                  The String to clean\n+\t * @return a clean String.\n \t */\n     private String clean(String str) {\n         if (str == null || str.length() == 0) {\n     /**\n \t * Returns the maxLength. Standard Soundex\n \t * \n-     * @deprecated This feature is not needed since the encoding size must be constant.\n+\t * @deprecated This feature is not needed since the encoding size must be\n+\t *                     constant.\n \t * @return int\n \t */\n     public int getMaxLength() {\n \n     /**\n \t * Maps the given upper-case character to it's Soudex code.\n+\t * \n+\t * @param c\n+\t *                  An upper-case character.\n+\t * @return A Soundex code.\n \t */\n     private char map(char c) {\n         return this.getSoundexMapping()[c - 'A'];\n     /**\n \t * Sets the maxLength.\n \t * \n-     * @deprecated This feature is not needed since the encoding size must be constant.\n+\t * @deprecated This feature is not needed since the encoding size must be\n+\t *                     constant.\n \t * @param maxLength\n \t *                  The maxLength to set\n \t */\n         if (str.length() == 0) {\n             return str;\n         }\n-        char out[] = { '0', '0', '0', '0' };\n+        char out[] = {'0', '0', '0', '0'};\n         char last, mapped;\n         int incount = 1, count = 1;\n         out[0] = str.charAt(0);\n         return new String(out);\n     }\n \n-}\n+}\n--- a/src/test/org/apache/commons/codec/language/SoundexTest.java\n+++ b/src/test/org/apache/commons/codec/language/SoundexTest.java\n \n import junit.framework.Test;\n import junit.framework.TestSuite;\n+import org.apache.commons.codec.EncoderException;\n import org.apache.commons.codec.StringEncoder;\n import org.apache.commons.codec.StringEncoderAbstractTest;\n \n /**\n  * Tests {@link Soundex}\n  * \n- * @version $Revision: 1.9 $ $Date: 2003/12/04 23:32:39 $\n+ * @version $Revision: 1.10 $ $Date: 2003/12/10 00:04:46 $\n  * @author Rodney Waldhoff\n  * @author Gary Gregory\n  */\n     public SoundexTest(String name) {\n         super(name);\n     }\n-    \n-    /**\n-\t * @return Returns the _encoder.\n-\t */\n-    public Soundex getEncoder() {\n-        return this.encoder;\n-    }\n-\n-    protected StringEncoder makeEncoder() {\n-        return new Soundex();\n-    }\n-\n-    /**\n-\t * @param encoder\n-\t *                  The encoder to set.\n-\t */\n-    public void setEncoder(Soundex encoder) {\n-        this.encoder = encoder;\n-    }\n-\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.setEncoder(new Soundex());\n-    }\n-\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.setEncoder(null);\n-    }\n \n     void encodeAll(String[] strings, String expectedEncoding) {\n         for (int i = 0; i < strings.length; i++) {\n             assertEquals(expectedEncoding, this.getEncoder().encode(strings[i]));\n         }\n+    }\n+    \n+    /**\n+\t * @return Returns the _encoder.\n+\t */\n+    public Soundex getEncoder() {\n+        return this.encoder;\n+    }\n+\n+    protected StringEncoder makeEncoder() {\n+        return new Soundex();\n+    }\n+\n+    /**\n+\t * @param encoder\n+\t *                  The encoder to set.\n+\t */\n+    public void setEncoder(Soundex encoder) {\n+        this.encoder = encoder;\n+    }\n+\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        this.setEncoder(new Soundex());\n+    }\n+\n+    public void tearDown() throws Exception {\n+        super.tearDown();\n+        this.setEncoder(null);\n     }\n \n     public void testB650() {\n             \"B650\");\n     }\n \n+    public void testDifference() throws EncoderException {\n+        // Edge cases\n+        assertEquals(this.getEncoder().difference(null, null), 0);\n+        assertEquals(this.getEncoder().difference(\"\", \"\"), 0);\n+        assertEquals(this.getEncoder().difference(\" \", \" \"), 0);\n+        // Normal cases\n+        assertEquals(this.getEncoder().difference(\"Smith\", \"Smythe\"), 4);\n+        assertEquals(this.getEncoder().difference(\"Ann\", \"Andrew\"), 2);\n+        assertEquals(this.getEncoder().difference(\"Margaret\", \"Andrew\"), 1);\n+        assertEquals(this.getEncoder().difference(\"Janet\", \"Margaret\"), 0);\n+        // Examples from http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\n+        assertEquals(this.getEncoder().difference(\"Green\", \"Greene\"), 4);\n+        assertEquals(this.getEncoder().difference(\"Blotchet-Halls\", \"Greene\"), 0);\n+        // Examples from http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_setu-sus_3o6w.asp\n+        assertEquals(this.getEncoder().difference(\"Smith\", \"Smythe\"), 4);\n+        assertEquals(this.getEncoder().difference(\"Smithers\", \"Smythers\"), 4);\n+        assertEquals(this.getEncoder().difference(\"Anothers\", \"Brothers\"), 2);        \n+    }\n+\n     public void testEncodeBasic() {\n         assertEquals(\"T235\", this.getEncoder().encode(\"testing\"));\n         assertEquals(\"T000\", this.getEncoder().encode(\"The\"));\n     public void testMsSqlServer2() {\n         this.encodeAll(new String[]{\"Erickson\", \"Erickson\", \"Erikson\", \"Ericson\", \"Ericksen\", \"Ericsen\"}, \"E625\");\n     }\n-    \n     /**\n      * Examples for MS SQLServer from\n      * http://databases.about.com/library/weekly/aa042901a.htm", "timestamp": 1071014686, "metainfo": ""}