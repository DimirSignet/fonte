{"sha": "bbe1346da2c2cf95a1aea114f6116b37f2ad3d95", "log": "Roundtrip tests (some commented out that fail) Applied https://issues.apache.org/jira/secure/attachment/12439949/codec-99-test-fixes.patch  ", "commit": "\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n      * @see <a href=\"http://tools.ietf.org/html/rfc4648\">http://tools.ietf.org/html/rfc4648</a>\n      */\n     public void testRfc4648Section10DecodeWithCrLf() {\n-        assertEquals(\"\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"\")));\n-        assertEquals(\"f\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zg==\" + Base64.CHUNK_SEPARATOR)));\n-        assertEquals(\"fo\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm8=\" + Base64.CHUNK_SEPARATOR)));\n-        //assertEquals(\"foo\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9v\" + Base64.CHUNK_SEPARATOR)));\n-        assertEquals(\"foob\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYg==\" + Base64.CHUNK_SEPARATOR)));\n-        assertEquals(\"fooba\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYmE=\" + Base64.CHUNK_SEPARATOR)));\n-        //assertEquals(\"foobar\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYmFy\" + Base64.CHUNK_SEPARATOR)));\n+        String CRLF = StringUtils.newStringUsAscii(Base64.CHUNK_SEPARATOR);\n+        assertEquals(\"\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"\" + CRLF)));\n+        assertEquals(\"f\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zg==\" + CRLF)));\n+        assertEquals(\"fo\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm8=\" + CRLF)));\n+        assertEquals(\"foo\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9v\" + CRLF)));\n+        assertEquals(\"foob\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYg==\" + CRLF)));\n+        assertEquals(\"fooba\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYmE=\" + CRLF)));\n+        assertEquals(\"foobar\", StringUtils.newStringUsAscii(Base64.decodeBase64(\"Zm9vYmFy\" + CRLF)));\n     }\n     \n     /**\n         //assertEquals(\"Zm9vYg==\", Base64.encodeBase64String(StringUtils.getBytesUtf8(\"foob\")));\n         //assertEquals(\"Zm9vYmE=\", Base64.encodeBase64String(StringUtils.getBytesUtf8(\"fooba\")));\n         //assertEquals(\"Zm9vYmFy\", Base64.encodeBase64String(StringUtils.getBytesUtf8(\"foobar\")));\n+    }\n+    \n+    /**\n+     * Tests RFC 4648 section 10 test vectors.\n+     * <ul>\n+     * <li>BASE64(\"\") = \"\"</li>\n+     * <li>BASE64(\"f\") = \"Zg==\"</li>\n+     * <li>BASE64(\"fo\") = \"Zm8=\"</li>\n+     * <li>BASE64(\"foo\") = \"Zm9v\"</li>\n+     * <li>BASE64(\"foob\") = \"Zm9vYg==\"</li>\n+     * <li>BASE64(\"fooba\") = \"Zm9vYmE=\"</li>\n+     * <li>BASE64(\"foobar\") = \"Zm9vYmFy\"</li>\n+     * </ul>\n+     * \n+     * @see <a href=\"http://tools.ietf.org/html/rfc4648\">http://tools.ietf.org/html/rfc4648</a>\n+     */\n+    public void testRfc4648Section10DecodeEncode() {\n+        testDecodeEncode(\"\");\n+        //testDecodeEncode(\"Zg==\");\n+        //testDecodeEncode(\"Zm8=\");\n+        //testDecodeEncode(\"Zm9v\");\n+        //testDecodeEncode(\"Zm9vYg==\");\n+        //testDecodeEncode(\"Zm9vYmE=\");\n+        //testDecodeEncode(\"Zm9vYmFy\");\n+    }\n+    \n+    private void testDecodeEncode(String encodedText) {\n+        String decodedText = StringUtils.newStringUsAscii(Base64.decodeBase64(encodedText));\n+        String encodedText2 = Base64.encodeBase64String(StringUtils.getBytesUtf8(decodedText));\n+        assertEquals(encodedText, encodedText2);\n+    }\n+\n+    /**\n+     * Tests RFC 4648 section 10 test vectors.\n+     * <ul>\n+     * <li>BASE64(\"\") = \"\"</li>\n+     * <li>BASE64(\"f\") = \"Zg==\"</li>\n+     * <li>BASE64(\"fo\") = \"Zm8=\"</li>\n+     * <li>BASE64(\"foo\") = \"Zm9v\"</li>\n+     * <li>BASE64(\"foob\") = \"Zm9vYg==\"</li>\n+     * <li>BASE64(\"fooba\") = \"Zm9vYmE=\"</li>\n+     * <li>BASE64(\"foobar\") = \"Zm9vYmFy\"</li>\n+     * </ul>\n+     * \n+     * @see <a href=\"http://tools.ietf.org/html/rfc4648\">http://tools.ietf.org/html/rfc4648</a>\n+     */\n+    public void testRfc4648Section10EncodeDecode() {\n+        testEncodeDecode(\"\");\n+        testEncodeDecode(\"f\");\n+        testEncodeDecode(\"fo\");\n+        testEncodeDecode(\"foo\");\n+        testEncodeDecode(\"foob\");\n+        testEncodeDecode(\"fooba\");\n+        testEncodeDecode(\"foobar\");\n+    }\n+    \n+    private void testEncodeDecode(String plainText) {\n+        String encodedText = Base64.encodeBase64String(StringUtils.getBytesUtf8(plainText));\n+        String decodedText = StringUtils.newStringUsAscii(Base64.decodeBase64(encodedText));\n+        assertEquals(plainText, decodedText);\n     }\n     \n     public void testSingletons() {", "timestamp": 1269670728, "metainfo": ""}