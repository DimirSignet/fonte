{"sha": "70e7d72322c4888627722baca43d672884d4a532", "log": "Clean up tests after debugging session.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n+++ b/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n     }\n \n     public void testExamples() {\n-        String[][] data = {{\"M\u00fcller-L\u00fcdenscheidt\", \"65752682\"}, {\"Breschnew\", \"17863\"}, {\"Wikipedia\", \"3412\"}};\n-        this.checkEncodings(data);\n-    }\n-\n-    public void testHyphen() {\n-        this.checkEncoding(\"174845214\", \"bergisch-gladbach\");\n-        // From the Javadoc example:\n-        this.checkEncoding(\"65752682\", \"Mller-Ldenscheidt\");\n-    }\n-\n-    public void testIsCologneEquals() {\n-        Assert.assertFalse(\"Cologne-phonetic encodings should not be equal\", this.colognePhonetic.isCologneEqual(\"Meyer\", \"M\u00fcller\"));\n-        Assert.assertTrue(\"Cologne-phonetic encodings should be equal\", this.colognePhonetic.isCologneEqual(\"Meyer\", \"Mayr\"));\n-    }\n-\n-    public void testIsCologneEqualsPhpData() {\n         String[][] data = {\n-            {\"house\", \"house\"},\n-            {\"House\", \"house\"},\n-            {\"Haus\", \"house\"},\n-            {\"ganz\", \"Gans\"},\n-            {\"ganz\", \"G\u00e4nse\"},\n-            {\"Miyagi\", \"Miyako\"}};\n-        for (int i = 0; i < data.length; i++) {\n-            this.colognePhonetic.isCologneEqual(data[i][1], data[i][0]);\n-        }\n-    }\n-\n-    /**\n-     * Test data from http://repo.magdev.de/src/Text_ColognePhonetic-0.2.2/test/Text_ColognePhoneticTest.php\n-     */\n-    public void testPhpData() {\n-        String[][] data = {\n+            {\"Breschnew\", \"17863\"},\n+            {\"Wikipedia\", \"3412\"},\n             {\"peter\", \"127\"},\n             {\"pharma\", \"376\"},\n-            {\"bergisch-gladbach\", \"174845214\"},\n             {\"m\u00f6nchengladbach\", \"64645214\"},\n             {\"deutsch\", \"28\"},\n             {\"deutz\", \"28\"},\n             {\"Arbeitsamt\", \"071862\"},\n             {\"Eberhard\", \"0172\"},\n             {\"Eberhardt\", \"0172\"},\n-            {\"heithabu\", \"021\"},\n-            {\"M\u00fcller-L\u00fcdenscheidt\", \"65752682\"},};\n+            {\"heithabu\", \"021\"}};\n         this.checkEncodings(data);\n+    }\n+\n+    public void testHyphen() {\n+        String[][] data = {{\"bergisch-gladbach\", \"174845214\"}, {\"M\u00fcller-L\u00fcdenscheidt\", \"65752682\"},\n+            // From the Javadoc example:\n+            {\"Mller-Ldenscheidt\", \"65752682\"}};\n+        this.checkEncodings(data);\n+\n+    }\n+\n+    public void testIsCologneEquals() {\n+        String[][] data = {\n+            {\"Meyer\", \"M\u00fcller\"},\n+            {\"Meyer\", \"Mayr\"},\n+            {\"house\", \"house\"},\n+            {\"House\", \"house\"},\n+            {\"Haus\", \"house\"},\n+            {\"ganz\", \"Gans\"},\n+            {\"ganz\", \"G\u00e4nse\"},\n+            {\"Miyagi\", \"Miyako\"}};\n+        for (int i = 0; i < data.length; i++) {\n+            this.colognePhonetic.isCologneEqual(data[i][1], data[i][0]);\n+        }\n     }\n \n     public void testVariations() {", "timestamp": 1298406367, "metainfo": ""}