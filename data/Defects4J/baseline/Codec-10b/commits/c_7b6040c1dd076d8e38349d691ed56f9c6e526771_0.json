{"sha": "7b6040c1dd076d8e38349d691ed56f9c6e526771", "log": "Comments  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base32.java\n+++ b/src/java/org/apache/commons/codec/binary/Base32.java\n             // Must be done after initialising the tables\n             if (containsAlphabetOrPad(lineSeparator)) {\n                 String sep = StringUtils.newStringUtf8(lineSeparator);\n-                throw new IllegalArgumentException(\"lineSeperator must not contain Base32 characters: [\" + sep + \"]\");\n+                throw new IllegalArgumentException(\"lineSeparator must not contain Base32 characters: [\" + sep + \"]\");\n             }\n             this.encodeSize = BYTES_PER_ENCODED_BLOCK + lineSeparator.length;\n             this.lineSeparator = new byte[lineSeparator.length];\n                 if (b < 0) {\n                     b += 256;\n                 }\n-                bitWorkArea = (bitWorkArea << 8) + b; // ??\n+                bitWorkArea = (bitWorkArea << 8) + b; // BITS_PER_BYTE\n                 if (0 == modulus) { // we have enough bytes to create our output \n                     buffer[pos++] = encodeTable[(int)(bitWorkArea >> 35) & MASK_5BITS];\n                     buffer[pos++] = encodeTable[(int)(bitWorkArea >> 30) & MASK_5BITS];", "timestamp": 1296179385, "metainfo": ""}