{"sha": "598c411603b7e1746771f3f536b06593e8b82291", "log": "Fix Javadoc nits.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/StringEncoderComparator.java\n+++ b/src/java/org/apache/commons/codec/StringEncoderComparator.java\n  * String are comparable, and this comparator allows \n  * you to configure it with an instance of a class\n  * which implements the StringEncoder.  This comparator\n- * is used to sort Strings by an encoding shceme such\n+ * is used to sort Strings by an encoding scheme such\n  * as Soundex, Metaphone, etc.  This class can come in\n  * handy if one need to sort Strings by an encoded\n  * form of a name such as Soundex.\n  *\n  * @author Tim O'Brien\n  * @author Gary Gregory\n- * @version $Id: StringEncoderComparator.java,v 1.9 2003/11/13 06:50:35 ggregory Exp $\n+ * @version $Id: StringEncoderComparator.java,v 1.10 2003/11/24 00:11:56 ggregory Exp $\n  */\n public class StringEncoderComparator implements Comparator {\n \n     }\n \n     /**\n-     * Constructs a new instance with the given soundex algorithm.\n+     * Constructs a new instance with the given algorithm.\n+     * @param stringEncoder the StringEncoder used for comparisons.\n      */\n-    public StringEncoderComparator(StringEncoder en) {\n-        this.stringEncoder = en;\n+    public StringEncoderComparator(StringEncoder stringEncoder) {\n+        this.stringEncoder = stringEncoder;\n     }\n \n     /**\n      * \n      * If an {@link EncoderException} is encountered, return <code>0</code>.\n      * \n+     * @param o1 the object to compare\n+     * @param o2 the object to compare to\n+     * @return the Comparable.compareTo() return code or 0 if an encoding error was caught.\n      * @see Comparable\n      */\n     public int compare(Object o1, Object o2) {\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n   * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n   * @author Tim O'Brien\n   * @since 1.0-dev\n-  * @version $Id: Base64.java,v 1.13 2003/11/06 16:32:30 ggregory Exp $\n+  * @version $Id: Base64.java,v 1.14 2003/11/24 00:11:56 ggregory Exp $\n   */\n public class Base64 implements BinaryEncoder, BinaryDecoder {\n \n      *\n      * @param pArray A byte array containing Base64 character data\n      * @return a byte array containing binary data\n-     * @throws DecoderException if there is an Decoder specific exception\n-     *                          during the decoding process\n      */\n     public byte[] decode(byte[] pArray) {\n         byte[] result;\n      *\n      * @param pArray a byte array containing binary data\n      * @return A byte array containing only Base64 character data\n-     * @throws EncoderException if there is an Encoder specific exception\n-     *                          during the encoding process\n      */\n     public byte[] encode(byte[] pArray) {\n         return (encodeBase64(pArray, false));\n--- a/src/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/java/org/apache/commons/codec/digest/DigestUtils.java\n     /**\n      * Returns a MessageDigest for the given <code>algorithm</code>.\n      *\n+     * @param algorithm The MessageDigest algorithm name.\n      * @return An MD5 digest instance.\n      * @throws RuntimeException when a {@link java.security.NoSuchAlgorithmException} is caught,\n      */\n--- a/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n+++ b/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n  * \n  * @author <a href=\"mailto:ben@walstrum.com\">Benjamin Walstrum</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n- * @version $Id: DoubleMetaphone.java,v 1.14 2003/11/07 23:12:54 ggregory Exp $\n+ * @version $Id: DoubleMetaphone.java,v 1.15 2003/11/24 00:11:56 ggregory Exp $\n  */\n public class DoubleMetaphone implements StringEncoder {\n \n      *\n      * @param value String to encode\n      * @return An encoded String\n-     * @throws EncoderException thrown if there is an exception during\n-     *         the encoding process.\n      */\n     public String encode(String value) {\n-        return (doubleMetaphone(value));   \n+        return doubleMetaphone(value);   \n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/language/Metaphone.java\n+++ b/src/java/org/apache/commons/codec/language/Metaphone.java\n  * @author bayard@generationjava.com\n  * @author Tim O'Brien\n  * @author Gary Gregory\n- * @version $Id: Metaphone.java,v 1.10 2003/11/07 23:12:54 ggregory Exp $\n+ * @version $Id: Metaphone.java,v 1.11 2003/11/24 00:11:56 ggregory Exp $\n  */\n public class Metaphone implements StringEncoder {\n \n      *\n      * @param pString String object to encode\n      * @return The metaphone code corresponding to the String supplied\n-     * @throws EncoderException thrown if a Metaphone specific exception\n-     *                          is encountered.\n      */\n     public String encode(String pString) {\n-        return (metaphone(pString));   \n+        return metaphone(pString);   \n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n+++ b/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n  * \n  * @author Tim O'Brien\n  * @author ggregory@seagullsw.com\n- * @version $Id: RefinedSoundex.java,v 1.11 2003/11/07 22:39:30 ggregory Exp $\n+ * @version $Id: RefinedSoundex.java,v 1.12 2003/11/24 00:11:56 ggregory Exp $\n  */\n public class RefinedSoundex implements StringEncoder {\n \n      *\n      * @param pString A String object to encode\n      * @return A Soundex code corresponding to the String supplied\n-     * @throws EncoderException throws exception if there is an\n-     *                          encoding-specific problem\n      */\n     public String encode(String pString) {\n-        return (soundex(pString));   \n+        return soundex(pString);   \n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n  * @author <a href=\"mailto:oleg@ural.ru\">Oleg Kalnichevski</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.2\n- * @version $Id: URLCodec.java,v 1.10 2003/11/08 01:52:25 ggregory Exp $\n+ * @version $Id: URLCodec.java,v 1.11 2003/11/24 00:11:56 ggregory Exp $\n  */\n \n public class URLCodec \n \n     /**\n      * Constructor which allows for the selection of an Encoding\n+     * \n+     * @param encoding the String encoding to use.\n      */\n     public URLCodec(String encoding) {\n         super();\n \n     /**\n      * Encodes a string into its URL safe form using the specified\n-     * character set. Unsafe characters are escaped.\n+     * encoding. Unsafe characters are escaped.\n      *\n      * @param pString string to convert to a URL safe form\n+     * @param encoding the encoding for pString\n      * @return URL safe string\n      * @throws UnsupportedEncodingException Thrown if charset is not\n      *                                      supported \n      */\n-    public String encode(String pString, String charset) \n+    public String encode(String pString, String encoding) \n         throws UnsupportedEncodingException  \n     {\n         if (pString == null) {\n             return null;\n         }\n-        return new String(encode(pString.getBytes(charset)), this.getEncoding());\n+        return new String(encode(pString.getBytes(encoding)), this.getEncoding());\n     }\n \n \n \n     /**\n      * Decodes a URL safe string into its original form using the \n-     * specified character set. Escaped characters are converted back \n+     * specified encoding. Escaped characters are converted back \n      * to their original representation.\n      *\n      * @param pString URL safe string to convert into its original form\n+     * @param encoding the original string encoding\n      * @return original string \n      * @throws DecoderException Thrown if URL decoding is unsuccessful\n      * @throws UnsupportedEncodingException Thrown if charset is not\n      *                                      supported \n      */\n-    public String decode(String pString, String charset) \n+    public String decode(String pString, String encoding) \n         throws DecoderException, UnsupportedEncodingException \n     {\n         if (pString == null) {\n             return null;\n         }\n-        return new String(decode(pString.getBytes(this.getEncoding())), charset);\n+        return new String(decode(pString.getBytes(this.getEncoding())), encoding);\n     }\n \n ", "timestamp": 1069632716, "metainfo": ""}