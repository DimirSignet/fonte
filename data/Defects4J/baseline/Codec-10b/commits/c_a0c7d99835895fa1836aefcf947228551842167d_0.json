{"sha": "a0c7d99835895fa1836aefcf947228551842167d", "log": "Hex now implements BinaryDecoder and BinaryEncoder, patch submitted by Christopher O'Brien   ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Hex.java\n+++ b/src/java/org/apache/commons/codec/binary/Hex.java\n-/* ====================================================================\n- * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgment:\n- *       \"This product includes software developed by the\n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowledgment may appear in the software itself,\n- *    if and wherever such third-party acknowledgments normally appear.\n- *\n- * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n- *    \"Apache Commons\" must not be used to endorse or promote products\n- *    derived from this software without prior written permission. For\n- *    written permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache Commons\", nor may \"Apache\" appear in their name, without\n- *    prior written permission of the Apache Software Foundation.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- */\n-\n-package org.apache.commons.codec.binary;\n-\n-/**\n- * Hex encoder/decoder\n- * \n- * @author <a href=\"mailto:siege@preoccupied.net\">Christopher O'Brien</a>\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- */\n-public class Hex {\n-\n-\n-    /** for building output as Hex */\n-    private static char[] digits = {\n-        '0', '1', '2', '3', '4', '5', '6', '7',\n-           '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'\n-    };\n-\n-\n-\n-    /**\n-     * Converts an array of bytes into an array of characters representing the\n-     * hexidecimal values of each byte in order. The returned array will be\n-     * double the length of the passed array, as it takes two characters to\n-     * represent any given byte.\n-     *\n-     * @param data array of byte to convert to Hex characters\n-     * @return A char[] containing hexidecimal characters\n-     */\n-    public static char[] encodeHex(byte[] data) {\n-\n-        int l = data.length;\n-\n-           char[] out = new char[l << 1];\n-\n-           // two characters form the hex value.\n-           for (int i = 0, j = 0; i < l; i++) {\n-               out[j++] = digits[(0xF0 & data[i]) >>> 4 ];\n-               out[j++] = digits[ 0x0F & data[i] ];\n-           }\n-\n-           return out;\n-    }\n-\n-\n-\n-    /**\n-     * Converts an array of characters representing hexidecimal values into an\n-     * array of bytes of those same values. The returned array will be half the\n-     * length of the passed array, as it takes two characters to represent any\n-     * given byte. An exception is thrown if the passed char array has an odd\n-     * number of elements.\n-     * \n-     * @param data An array of characters containing hexidecimal digits\n-     * @return A byte array array containing binary data decoded from\n-     *         the supplied char array.\n-     * @throws Exception Thrown if an odd number of characters is supplied\n-     *                   to this function\n-     */\n-    public static byte[] decodeHex(char[] data) throws Exception {\n-\n-        int l = data.length;\n-\n-           if ((l & 0x01) != 0) {\n-               throw new Exception(\"odd number of characters.\");\n-           }\n-\n-           byte[] out = new byte[l >> 1];\n-\n-           // two characters form the hex value.\n-           for (int i = 0, j = 0; j < l; i++) {\n-               int f = Character.digit(data[j++], 16) << 4;\n-               f = f | Character.digit(data[j++], 16);\n-               out[i] = (byte) (f & 0xFF);\n-           }\n-\n-           return out;\n-    }\n-\n-}\n-\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n+ *    \"Apache Commons\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    \"Apache Commons\", nor may \"Apache\" appear in their name, without\n+ *    prior written permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.commons.codec.binary;\n+\n+import org.apache.commons.codec.BinaryDecoder;\n+import org.apache.commons.codec.BinaryEncoder;\n+import org.apache.commons.codec.DecoderException;\n+import org.apache.commons.codec.EncoderException;\n+\n+/**\n+ * Hex encoder/decoder\n+ * \n+ * @author <a href=\"mailto:siege@preoccupied.net\">Christopher O'Brien</a>\n+ * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ */\n+public class Hex implements BinaryEncoder, BinaryDecoder {\n+\n+\n+    /** for building output as Hex */\n+    private static char[] digits = {\n+        '0', '1', '2', '3', '4', '5', '6', '7',\n+           '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'\n+    };\n+\n+\tpublic Object encode(Object pObject) throws EncoderException {\n+\t\tif(pObject instanceof String) {\n+\t\t    pObject = ((String) pObject).getBytes();\n+\t\t}\n+\t\n+\t\ttry {\n+\t\t\treturn encodeHex((byte[]) pObject);\n+\t\t} catch(Exception e) {\n+\t\t\tthrow new EncoderException(e.getMessage());\n+\t\t}\n+\t}\n+\t\n+\tpublic byte[] encode(byte[] pArray) {\n+\t\treturn new String(encodeHex(pArray)).getBytes();\n+\t}\n+\t\n+\tpublic Object decode(Object pObject) throws DecoderException {\n+\t\tif(pObject instanceof String) {\n+\t\t    pObject = ((String) pObject).getBytes();\n+\t\t}\n+\t\n+\t\ttry {\n+\t\t    return decodeHex((char[]) pObject);\n+\t\t} catch(Exception e) {\n+\t\t    throw new DecoderException(e.getMessage());\n+\t\t}\n+\t}\n+\t\n+\t\n+\t\n+\tpublic byte[] decode(byte[] pArray) throws DecoderException {\n+\t\treturn decodeHex(new String(pArray).toCharArray());\n+\t}\n+\n+    /**\n+     * Converts an array of bytes into an array of characters representing the\n+     * hexidecimal values of each byte in order. The returned array will be\n+     * double the length of the passed array, as it takes two characters to\n+     * represent any given byte.\n+     *\n+     * @param data array of byte to convert to Hex characters\n+     * @return A char[] containing hexidecimal characters\n+     */\n+    public static char[] encodeHex(byte[] data) {\n+\n+        int l = data.length;\n+\n+           char[] out = new char[l << 1];\n+\n+           // two characters form the hex value.\n+           for (int i = 0, j = 0; i < l; i++) {\n+               out[j++] = digits[(0xF0 & data[i]) >>> 4 ];\n+               out[j++] = digits[ 0x0F & data[i] ];\n+           }\n+\n+           return out;\n+    }\n+\n+\n+\n+    /**\n+     * Converts an array of characters representing hexidecimal values into an\n+     * array of bytes of those same values. The returned array will be half the\n+     * length of the passed array, as it takes two characters to represent any\n+     * given byte. An exception is thrown if the passed char array has an odd\n+     * number of elements.\n+     * \n+     * @param data An array of characters containing hexidecimal digits\n+     * @return A byte array array containing binary data decoded from\n+     *         the supplied char array.\n+     * @throws Exception Thrown if an odd number of characters is supplied\n+     *                   to this function\n+     */\n+    public static byte[] decodeHex(char[] data) throws DecoderException {\n+\n+        int l = data.length;\n+\n+           if ((l & 0x01) != 0) {\n+               throw new DecoderException(\"odd number of characters.\");\n+           }\n+\n+           byte[] out = new byte[l >> 1];\n+\n+           // two characters form the hex value.\n+           for (int i = 0, j = 0; j < l; i++) {\n+               int f = Character.digit(data[j++], 16) << 4;\n+               f = f | Character.digit(data[j++], 16);\n+               out[i] = (byte) (f & 0xFF);\n+           }\n+\n+           return out;\n+    }\n+\n+}\n+", "timestamp": 1057943220, "metainfo": ""}