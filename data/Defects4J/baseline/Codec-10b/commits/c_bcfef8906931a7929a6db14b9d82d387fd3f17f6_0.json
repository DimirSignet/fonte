{"sha": "bcfef8906931a7929a6db14b9d82d387fd3f17f6", "log": "JIRA: CODEC-89 new Base64().encode() appends a CRLF, and chunks results into 76 character lines   ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n     /**\n      * Creates a Base64 codec used for decoding (all modes) and encoding in URL-unsafe mode.\n      * <p>\n-     * When encoding the line length is 76, the line separator is CRLF, and the encoding table is STANDARD_ENCODE_TABLE.\n+     * When encoding the line length is 0 (no chunking), and the encoding table is STANDARD_ENCODE_TABLE.\n      * </p>\n      * \n      * <p>\n      * </p>\n      */\n     public Base64() {\n-        this(false);\n+        this(0);\n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/binary/Base64InputStream.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64InputStream.java\n     public Base64InputStream(InputStream in, boolean doEncode) {\n         super(in);\n         this.doEncode = doEncode;\n-        this.base64 = new Base64();\n+        this.base64 = new Base64(false);\n     }\n \n     /**\n--- a/src/java/org/apache/commons/codec/binary/Base64OutputStream.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64OutputStream.java\n     public Base64OutputStream(OutputStream out, boolean doEncode) {\n         super(out);\n         this.doEncode = doEncode;\n-        this.base64 = new Base64();\n+        this.base64 = new Base64(false);\n     }\n \n     /**", "timestamp": 1269648142, "metainfo": ""}