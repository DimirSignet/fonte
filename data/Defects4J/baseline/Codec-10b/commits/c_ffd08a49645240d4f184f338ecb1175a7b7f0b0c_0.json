{"sha": "ffd08a49645240d4f184f338ecb1175a7b7f0b0c", "log": "[CODEC-78] Base64: Improve Code Coverage. Patch applied: https://issues.apache.org/jira/secure/attachment/12415223/codec78-evenMoreCoverage.patch  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n      * @since 1.4\n      */\n     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {\n+        if (lineSeparator == null) {\n+            lineLength = 0;  // disable chunk-separating\n+            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored\n+        }\n         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;\n         this.lineSeparator = new byte[lineSeparator.length];\n         System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);\n         if (mod != 0) {\n             len += 4 - mod;\n         }\n-        if (chunkSize > 0 && chunkSeparator != null) {\n+        if (chunkSize > 0) {\n             boolean lenChunksPerfectly = len % chunkSize == 0;\n             len += (len / chunkSize) * chunkSeparator.length;\n             if (!lenChunksPerfectly) {\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n         byte[] encodedBytes = Base64.encodeBase64(StringUtils.getBytesUtf8(content));\n         encodedContent = StringUtils.newStringUtf8(encodedBytes);\n         assertTrue(\"encoding hello world\", encodedContent.equals(\"SGVsbG8gV29ybGQ=\"));\n+\n+        Base64 b64 = new Base64(76, null);  // null lineSeparator same as saying no-chunking\n+        encodedBytes = b64.encode(StringUtils.getBytesUtf8(content));\n+        encodedContent = StringUtils.newStringUtf8(encodedBytes);\n+        assertTrue(\"encoding hello world\", encodedContent.equals(\"SGVsbG8gV29ybGQ=\"));\n+\n+        b64 = new Base64(0, null);  // null lineSeparator same as saying no-chunking\n+        encodedBytes = b64.encode(StringUtils.getBytesUtf8(content));\n+        encodedContent = StringUtils.newStringUtf8(encodedBytes);\n+        assertTrue(\"encoding hello world\", encodedContent.equals(\"SGVsbG8gV29ybGQ=\"));\n+\n+        // bogus characters to decode (to skip actually)\n+        byte[] decode = b64.decode(\"SGVsbG{}8gV29ybGQ=\");\n+        String decodeString = StringUtils.newStringUtf8(decode);\n+        assertTrue(\"decode hello world\", decodeString.equals(\"Hello World\"));        \n     }\n \n     /**", "timestamp": 1249116484, "metainfo": ""}