{"sha": "3040f29dc4a84d5ff8e6d743f27240656bfebd82", "log": "Deprecate isArrayByteBase64 in favor of isBase64 to match other method names.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n      * @param arrayOctet\n      *            byte array to test\n      * @return <code>true</code> if all bytes are valid characters in the Base64 alphabet or if the byte array is empty;\n-     *         false, otherwise\n+     *         <code>false</code>, otherwise\n+     * @deprecated Use {@link #isBase64(byte[])}\n      */\n     public static boolean isArrayByteBase64(byte[] arrayOctet) {\n+        return isBase64(arrayOctet);\n+    }\n+    \n+    /**\n+     * Tests a given byte array to see if it contains only valid characters within the Base64 alphabet. Currently the\n+     * method treats whitespace as valid.\n+     * \n+     * @param arrayOctet\n+     *            byte array to test\n+     * @return <code>true</code> if all bytes are valid characters in the Base64 alphabet or if the byte array is empty;\n+     *         <code>false</code>, otherwise\n+     * @since 1.5\n+     */    \n+    public static boolean isBase64(byte[] arrayOctet) {\n         for (int i = 0; i < arrayOctet.length; i++) {\n             if (!isBase64(arrayOctet[i]) && !isWhiteSpace(arrayOctet[i])) {\n                 return false;\n      * \n      * @param arrayOctet\n      *            byte array to test\n-     * @return <code>true</code> if any byte is a valid character in the Base64 alphabet; false herwise\n+     * @return <code>true</code> if any byte is a valid character in the Base64 alphabet; <code>false</code> otherwise\n      */\n     private static boolean containsBase64Byte(byte[] arrayOctet) {\n         for (int i = 0; i < arrayOctet.length; i++) {", "timestamp": 1295972322, "metainfo": ""}