{"sha": "9c9e36e4e03925138de6088681ea647d69b4a4b1", "log": "This refactoring changes method names from \"put\" and \"drop\" to \"add\" and \"remove\". The names \"put\" would have been OK if used with a key like an index or map key. Here we just add one char with one call.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n+++ b/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n     private abstract class CologneBuffer {\n \n         protected final char[] data;\n+        \n         protected int length = 0;\n \n         public CologneBuffer(char[] data) {\n \n         public CologneLeftBuffer(int buffSize) {\n             super(buffSize);\n+        }\n+\n+        public void addRight(char chr) {\n+            data[length] = chr;\n+            length++;\n         }\n \n         protected char[] copyData(int start, final int length) {\n             System.arraycopy(data, start, retData, 0, length);\n             return retData;\n         }\n-\n-        public void putRight(char chr) {\n-            data[length] = chr;\n-            length++;\n-        }\n     }\n \n     private class CologneRightBuffer extends CologneBuffer {\n \n         public CologneRightBuffer(char[] data) {\n             super(data);\n+        }\n+\n+        public void addLeft(char ch) {\n+            length++;\n+            data[getNextPos()] = ch;\n         }\n \n         protected char[] copyData(int start, final int length) {\n             return newData;\n         }\n \n-        public char dropNext() {\n-            char ch = data[data.length - length];\n+        public char getNextChar() {\n+            return data[getNextPos()];\n+        }\n+\n+        protected int getNextPos() {\n+            return data.length - length;\n+        }\n+        \n+        public char removeNext() {\n+            char ch = getNextChar();\n             length--;\n             return ch;\n-        }\n-\n-        public char getNext() {\n-            return data[data.length - length];\n-        }\n-        \n-        public void putLeft(char ch) {\n-            length++;\n-            data[data.length - length] = ch;\n         }\n     }\n \n             new char[] { '\\u00DF', 'S' }      // \u00df\n     };\n \n-    public Object encode(Object pObject) throws EncoderException {\n-        if (!(pObject instanceof String)) {\n+    public Object encode(Object object) throws EncoderException {\n+        if (!(object instanceof String)) {\n             throw new EncoderException(\n                     \"This method\u2019s parameter was expected to be of the type \"\n                             + String.class.getName()\n                             + \". But actually it was of the type \"\n-                            + pObject.getClass().getName() + \".\");\n-        }\n-\n-        return encode((String) pObject);\n+                            + object.getClass().getName() + \".\");\n+        }\n+        return encode((String) object);\n     }\n \n     public String encode(String text) {\n         int rightLength = right.length();\n \n         while (rightLength > 0) {\n-            chr = right.dropNext();\n+            chr = right.removeNext();\n \n             if ((rightLength = right.length()) > 0) {\n-                nextChar = right.getNext();\n+                nextChar = right.getNextChar();\n             } else {\n                 nextChar = '-';\n             }\n             } else if (chr == 'X'\n                     && !arrayContains(new char[] { 'C', 'K', 'Q' }, lastChar)) {\n                 code = '4';\n-                right.putLeft('S');\n+                right.addLeft('S');\n                 rightLength++;\n             } else if (chr == 'S' || chr == 'Z') {\n                 code = '8';\n             if (code != '-'\n                     && (lastCode != code && (code != '0' || lastCode == '/')\n                             || code < '0' || code > '8')) {\n-                left.putRight(code);\n+                left.addRight(code);\n             }\n \n             lastChar = chr;", "timestamp": 1295980836, "metainfo": ""}