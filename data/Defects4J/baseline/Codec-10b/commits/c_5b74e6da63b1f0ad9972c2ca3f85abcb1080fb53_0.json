{"sha": "5b74e6da63b1f0ad9972c2ca3f85abcb1080fb53", "log": "Test truncated padding  ", "commit": "\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n     public void testDecodePadOnly() {\n         assertTrue(Base64.decodeBase64(\"====\".getBytes()).length == 0);\n         assertEquals(\"\", new String(Base64.decodeBase64(\"====\".getBytes())));\n+        // Test truncated padding\n+        assertTrue(Base64.decodeBase64(\"===\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"==\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"=\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"\".getBytes()).length == 0);\n     }\n     \n     public void testDecodePadOnlyChunked() {\n         assertTrue(Base64.decodeBase64(\"====\\n\".getBytes()).length == 0);\n         assertEquals(\"\", new String(Base64.decodeBase64(\"====\\n\".getBytes())));\n+        // Test truncated padding\n+        assertTrue(Base64.decodeBase64(\"===\\n\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"==\\n\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"=\\n\".getBytes()).length == 0);\n+        assertTrue(Base64.decodeBase64(\"\\n\".getBytes()).length == 0);\n     }\n     \n     // encode/decode random arrays from size 0 to size 11", "timestamp": 1214014922, "metainfo": ""}