{"sha": "00e030595183922b5157358ec502f4ce4f168753", "log": "Remove unnecessary code. Changed test from: if ((to == -1) || (to == termnator)) { to: if (to == termnator) { since we are guaranteed to find the separator because we have tested for its presence at the beginning of the method.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/net/RFC1522Codec.java\n+++ b/src/java/org/apache/commons/codec/net/RFC1522Codec.java\n         }\n         from = to + 1;\n         to = text.indexOf(SEP, from);\n-        if ((to == -1) || (to == termnator)) {\n+        if (to == termnator) {\n             throw new DecoderException(\"RFC 1522 violation: encoding token not found\");\n         }\n         String encoding = text.substring(from, to);\n--- a/src/test/org/apache/commons/codec/net/RFC1522CodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/RFC1522CodecTest.java\n  * @version $Id$\n  */\n public class RFC1522CodecTest extends TestCase {\n-    \n+\n     public RFC1522CodecTest(String name) {\n         super(name);\n     }\n \n-    static class RFC1522TestCodec extends RFC1522Codec { \n+    static class RFC1522TestCodec extends RFC1522Codec {\n \n         protected byte[] doDecoding(byte[] bytes) {\n             return bytes;\n         assertNull(testcodec.encodeText(null, CharEncoding.UTF_8));\n     }\n \n-    public void testDecodeInvalid() throws Exception {\n+    private void assertExpectedDecoderException(String s) throws Exception {\n         RFC1522TestCodec testcodec = new RFC1522TestCodec();\n         try {\n-            testcodec.decodeText(\"whatever\");\n+            testcodec.decodeText(s);\n             fail(\"DecoderException should have been thrown\");\n         } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=?stuff?=\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=?UTF-8?stuff?=\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=?UTF-8?T?stuff\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=??T?stuff?=\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=?UTF-8??stuff?=\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n-        }\n-        try {\n-            testcodec.decodeText(\"=?UTF-8?W?stuff?=\");\n-            fail(\"DecoderException should have been thrown\");\n-        } catch (DecoderException e) {\n-            // Expected. Move on\n+            // Expected.\n         }\n     }\n \n+    public void testDecodeInvalid() throws Exception {\n+        assertExpectedDecoderException(\"whatever\");\n+        assertExpectedDecoderException(\"=?\");\n+        assertExpectedDecoderException(\"?=\");\n+        assertExpectedDecoderException(\"==\");\n+        assertExpectedDecoderException(\"=??=\");\n+        assertExpectedDecoderException(\"=?stuff?=\");\n+        assertExpectedDecoderException(\"=?UTF-8??=\");\n+        assertExpectedDecoderException(\"=?UTF-8?stuff?=\");\n+        assertExpectedDecoderException(\"=?UTF-8?T?stuff\");\n+        assertExpectedDecoderException(\"=??T?stuff?=\");\n+        assertExpectedDecoderException(\"=?UTF-8??stuff?=\");\n+        assertExpectedDecoderException(\"=?UTF-8?W?stuff?=\");\n+    }\n+\n }", "timestamp": 1248766329, "metainfo": ""}