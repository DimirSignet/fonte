{"sha": "ddafa8f0cf6b44ff6df7ff176caeff84be8c260c", "log": "Fix for Bug 19860: Modified Base64 to remedy non-compliance with RFC 2045.  Non-Base64 characters were not being discarded during the decode.  RFC 2045 explicitly states that all characters outside of the base64 alphabet are to be ignored.  A new function discardNonBase64 is called prior to a decode.  Note that isArrayBase64 only discards whitespace before testing the contents of an encoded byte array.  Unit tests for Base64 were updated to reflect the changes related to discarding non-Base64 characters.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.2 2003/05/06 20:52:18 ggregory Exp $\n- * $Revision: 1.2 $\n- * $Date: 2003/05/06 20:52:18 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.3 2003/05/14 02:40:18 tobrien Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2003/05/14 02:40:18 $\n   *\n   * ====================================================================\n   *\n     }\n \n     public byte[] decode(byte[] pArray) throws DecoderException {\n-\n         byte[] result;\n-\n-        if (!isArrayByteBase64(pArray)) {\n-            throw new DecoderException(\n-                \"Parameter supplied to \"\n-                    + \"Base64 \"\n-                    + \"decode is not a valid base64 data.\");\n-        } \n-        else {\n-            result = decodeBase64((byte[]) pArray);\n-        }\n-\n+        result = decodeBase64((byte[]) pArray);\n         return (result);\n     }\n \n      * @return Array containing decoded data.\n      */\n     public static byte[] decodeBase64(byte[] base64Data) {\n-        // RFC 2045 suggests line wrapping at (no more than) 76\n-        // characters -- we may have embedded whitespace.\n-        base64Data = discardWhitespace(base64Data);\n+        // RFC 2045 requires that we discard ALL non-Base64 characters\n+        base64Data = discardNonBase64(base64Data);\n \n         // handle the edge case, so we don't have to worry about it later\n         if (base64Data.length == 0) {\n \n         return packedData;\n     }\n+    \n+\t/**\n+\t * Discards any characters outside of the base64 alphabet, per\n+\t * the requirements on page 25 of RFC 2045 - \"Any characters\n+\t * outside of the base64 alphabet are to be ignored in base64\n+\t * encoded data.\"\n+\t *\n+\t * @param data The base-64 encoded data to groom\n+\t * @return The data, less non-base64 characters (see RFC 2045).\n+\t */\n+\tstatic byte[] discardNonBase64(byte[] data) {\n+\t\tbyte groomedData[] = new byte[data.length];\n+\t\tint bytesCopied = 0;\n+\n+\t\tfor (int i = 0; i < data.length; i++) {\n+\t\t\tif( isBase64(data[i]) ) {\n+\t\t\t  groomedData[bytesCopied++] = data[i];\n+\t\t\t}\n+\t\t}\n+\n+\t\tbyte packedData[] = new byte[bytesCopied];\n+\n+\t\tSystem.arraycopy(groomedData, 0, packedData, 0, bytesCopied);\n+\n+\t\treturn packedData;\n+\t}\n+\n \n     // Implementation of the Encoder Interface\n \n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/Base64Test.java,v 1.2 2003/05/06 20:45:16 ggregory Exp $\n- * $Revision: 1.2 $\n- * $Date: 2003/05/06 20:45:16 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/Base64Test.java,v 1.3 2003/05/14 02:40:18 tobrien Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2003/05/14 02:40:18 $\n  *\n  * ====================================================================\n  *\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.2 $ $Date: 2003/05/06 20:45:16 $\n+ * @version $Revision: 1.3 $ $Date: 2003/05/14 02:40:18 $\n  * @author <a href=\"mailto:sanders@apache.org\">Scott Sanders</a>\n  * @author <a href=\"mailto:rwaldhoff@apache.org\">Rodney Waldhoff</a>\n  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n         assertEquals(\"xyzzy!\",new String(Base64.decodeBase64(\"eHl6enkh\".getBytes())));\n         } \n \n-    public void testNonBase64() throws Exception {\n-\n-        byte[] bArray = { '%' };\n-\n-        assertFalse( \"Invalid Base64 array was incorrectly validated as \" +\n-                     \"an array of Base64 encoded data\", \n-                     Base64.isArrayByteBase64( bArray ) );\n+\tpublic void testNonBase64Test() throws Exception {\n+\n+\t\tbyte[] bArray = { '%' };\n+\n+\t\tassertFalse( \"Invalid Base64 array was incorrectly validated as \" +\n+\t\t\t\t\t \"an array of Base64 encoded data\", \n+\t\t\t\t\t Base64.isArrayByteBase64( bArray ) );\n         \n-        boolean exceptionThrown = false;\n-\n-        try {\n-            Base64 b64 = new Base64();\n-            b64.decode( bArray );\n-        } \n-        catch( Exception e ) {\n-            exceptionThrown = true;\n-        }\n-\n-        assertTrue( \"Exception wasn't thrown when trying to decode \" +\n-                    \"invalid base64 encoded data\", exceptionThrown );\n-\n-    }\n+\t\tboolean exceptionThrown = false;\n+\n+\t\ttry {\n+\t\t\tBase64 b64 = new Base64();\n+\t\t\tbyte[] result = b64.decode( bArray );\n+            \n+\t\t\tassertTrue( \"The result should be empty as the test encoded content did \" +\n+\t\t\t\t\"not contain any valid base 64 characters\", result.length == 0);\n+\t\t} \n+\t\tcatch( Exception e ) {\n+\t\t\texceptionThrown = true;\n+\t\t}\n+\n+\t\tassertFalse( \"Exception was thrown when trying to decode \" +\n+\t\t\t\t\t\"invalid base64 encoded data - RFC 2045 requires that all \" +\n+\t\t\t\t\t\"non base64 character be discarded, an exception should not\" +\n+\t\t\t\t\t\" have been thrown\", exceptionThrown );\n+          \n+\n+\t}\n+    \n+\tpublic void testIgnoringNonBase64InDecode() throws Exception {\n+\t\tassertEquals(\"The quick brown fox jumped over the lazy dogs.\",new String(Base64.decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes())));\n+\t}\n \n     public void testObjectDecodeWithInvalidParameter() throws Exception {\n         boolean exceptionThrown = false;", "timestamp": 1052880018, "metainfo": ""}