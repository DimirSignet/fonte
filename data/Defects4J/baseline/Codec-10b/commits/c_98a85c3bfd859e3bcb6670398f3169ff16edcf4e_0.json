{"sha": "98a85c3bfd859e3bcb6670398f3169ff16edcf4e", "log": "Some more Base64 tests  ", "commit": "\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n         assertEquals(\"Zg==\",new String(Base64.encodeBase64(new byte[] { (byte)102 })));\n         assertEquals(\"Zw==\",new String(Base64.encodeBase64(new byte[] { (byte)103 })));\n         assertEquals(\"aA==\",new String(Base64.encodeBase64(new byte[] { (byte)104 })));\n+        for (int i = -128; i<=127; i++){\n+            byte test[]= {(byte)i};\n+            assertTrue(Arrays.equals(test,Base64.decodeBase64(Base64.encodeBase64(test))));\n+        }\n     }\n \n     public void testSingletonsChunked() {\n         assertEquals(\"aA==\\r\\n\",new String(Base64.encodeBase64Chunked(new byte[] { (byte)104 })));\n     }\n \n+    public void testPairs(){\n+        assertEquals(\"AAA=\",new String(Base64.encodeBase64(new byte[] { 0, 0 })));\n+        for (int i = -128; i<=127; i++){\n+            byte test[]= {(byte)i, (byte)i};\n+            assertTrue(Arrays.equals(test,Base64.decodeBase64(Base64.encodeBase64(test))));\n+        }\n+    }\n+\n     public void testTriplets() {\n         assertEquals(\"AAAA\",new String(Base64.encodeBase64(new byte[] { (byte)0, (byte)0, (byte)0 })));\n         assertEquals(\"AAAB\",new String(Base64.encodeBase64(new byte[] { (byte)0, (byte)0, (byte)1 })));", "timestamp": 1214013549, "metainfo": ""}