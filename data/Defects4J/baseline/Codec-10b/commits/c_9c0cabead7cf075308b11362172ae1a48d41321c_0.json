{"sha": "9c0cabead7cf075308b11362172ae1a48d41321c", "log": "Modifying the unit test for CODEC-57 to test for empty string, and added a note to the Metaphone javadoc that it does not match the PHP or Perl variants  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/Metaphone.java\n+++ b/src/java/org/apache/commons/codec/language/Metaphone.java\n  * <p>\n  * <CITE>Hanging on the Metaphone</CITE> by <CITE>Lawrence Philips</CITE> in <CITE>Computer Language of Dec. 1990, p\n  * 39.</CITE>\n+ * </p>\n+ * <p>\n+ * Note, that this does not match the algorithm that ships with PHP, or the algorithm \n+ * found in the Perl <a href=\"http://search.cpan.org/~mschwern/Text-Metaphone-1.96/Metaphone.pm\">Text:Metaphone-1.96</a>.\n+ * They have had undocumented changes from the originally published algorithm. \n  * </p>\n  * \n  * @author Apache Software Foundation\n--- a/src/test/org/apache/commons/codec/language/MetaphoneTest.java\n+++ b/src/test/org/apache/commons/codec/language/MetaphoneTest.java\n      * Tests (CODEC-57) Metaphone.metaphone(String) returns an empty string when passed the word \"why\"\n      */\n     public void testWhy() {\n-        assertEquals(\"H\", this.getMetaphone().metaphone(\"WHY\"));\n+        // PHP returns \"H\". The original metaphone returns an empty string. \n+        assertEquals(\"\", this.getMetaphone().metaphone(\"WHY\"));\n     }\n \n     public void testWordsWithCIA() {", "timestamp": 1209256386, "metainfo": ""}