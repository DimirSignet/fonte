{"sha": "fb24a15f937b40d0c890cb6bdba2290debd6aeb1", "log": "PR: 25995 Obtained from: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25995 Submitted by:\tolegk@apache.org (Oleg Kalnichevski) Reviewed by:\tGary D. Gregory   ", "commit": "\n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n  * @author <a href=\"mailto:oleg@ural.ru\">Oleg Kalnichevski</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.2\n- * @version $Id: URLCodec.java,v 1.12 2004/01/02 07:01:47 ggregory Exp $\n+ * @version $Id: URLCodec.java,v 1.13 2004/01/09 19:02:47 ggregory Exp $\n  */\n-\n public class URLCodec \n         implements BinaryEncoder, BinaryDecoder, \n                    StringEncoder, StringDecoder \n {\n     \n+    private final static String US_ASCII = \"US-ASCII\";\n+    \n     /**\n      * The <code>String</code> encoding used for decoding and encoding.\n      */\n-    protected String encoding = \"US-ASCII\";\n+    protected String encoding = \"UTF-8\";\n     \n     /**\n      * BitSet of www-form-url safe characters.\n         if (pString == null) {\n             return null;\n         }\n-        return new String(encode(pString.getBytes(encoding)), this.getEncoding());\n+        return new String(encode(pString.getBytes(encoding)), US_ASCII);\n     }\n \n \n             return null;\n         }\n         try {\n-            return new String(encode(pString.getBytes()), this.getEncoding());\n+            return encode(pString, this.encoding);\n         } catch(UnsupportedEncodingException e) {\n             throw new EncoderException(e.getMessage());\n         }\n         if (pString == null) {\n             return null;\n         }\n-        return new String(decode(pString.getBytes(this.getEncoding())), encoding);\n+        return new String(decode(pString.getBytes(US_ASCII)), encoding);\n     }\n \n \n             return null;\n         }\n         try {\n-            return new String(decode(pString.getBytes(this.getEncoding())));\n+            return decode(pString, this.encoding);\n         } catch(UnsupportedEncodingException e) {\n             throw new DecoderException(e.getMessage());\n         }\n     }\n-\n \n     /**\n      * Encodes an object into its URL safe form. Unsafe characters are \n--- a/src/test/org/apache/commons/codec/net/URLCodecTest.java\n+++ b/src/test/org/apache/commons/codec/net/URLCodecTest.java\n  * \n  * @author <a href=\"mailto:oleg@ural.ru\">Oleg Kalnichevski</a>\n  */\n-\n public class URLCodecTest extends TestCase {\n     \n     static final int SWISS_GERMAN_STUFF_UNICODE [] = {\n         URLCodec urlcodec = new URLCodec(\"NONSENSE\");\n            String plain = \"Hello there!\";\n             try {\n-               String encoded = urlcodec.encode(plain);\n+               urlcodec.encode(plain);\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n             } catch( EncoderException ee ) {\n             }\n             try {\n-               String decoded = urlcodec.decode(plain);\n+               urlcodec.decode(plain);\n                 fail( \"We set the encoding to a bogus NONSENSE vlaue, this shouldn't have worked.\");\n             } catch( DecoderException ee ) {\n             }\n         } catch( DecoderException ee ) {\n         }\n     }\n+\n+    public void testDefaultEncoding() throws Exception {\n+        String plain = \"Hello there!\";\n+        URLCodec urlcodec = new URLCodec(\"UnicodeBig\");\n+        urlcodec.encode(plain); // To work around a weird quirk in Java 1.2.2\n+        String encoded1 = urlcodec.encode(plain, \"UnicodeBig\");\n+        String encoded2 = urlcodec.encode(plain);\n+        assertEquals(encoded1, encoded2);\n+    }\n+\n }", "timestamp": 1073674967, "metainfo": ""}