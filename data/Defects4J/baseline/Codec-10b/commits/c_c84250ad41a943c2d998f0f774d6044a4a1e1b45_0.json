{"sha": "c84250ad41a943c2d998f0f774d6044a4a1e1b45", "log": "Sort members.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n+++ b/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n         return new ColognePhonetic();\n     }\n \n-    public void testExamples() {\n-        ColognePhonetic koellePhon = new ColognePhonetic();\n-        String[][] data = { { \"M\u00fcller-L\u00fcdenscheidt\", \"65752682\" },\n-                { \"Breschnew\", \"17863\" }, { \"Wikipedia\", \"3412\" } };\n-\n-        for (int i = 0; i < data.length; i++) {\n-            assertEquals(data[i][1], koellePhon.colognePhonetic(data[i][0]));\n-        }\n-    }\n-\n     public void testBorderCases() {\n         ColognePhonetic koellePhon = new ColognePhonetic();\n \n         }\n     }\n \n+    public void testExamples() {\n+        ColognePhonetic koellePhon = new ColognePhonetic();\n+        String[][] data = { { \"M\u00fcller-L\u00fcdenscheidt\", \"65752682\" },\n+                { \"Breschnew\", \"17863\" }, { \"Wikipedia\", \"3412\" } };\n+\n+        for (int i = 0; i < data.length; i++) {\n+            assertEquals(data[i][1], koellePhon.colognePhonetic(data[i][0]));\n+        }\n+    }\n+\n     public void testIsCologneEquals() {\n         ColognePhonetic koellePhon = new ColognePhonetic();\n         assertFalse(\"Cologne-phonetic encodings should not be equal\",", "timestamp": 1298347286, "metainfo": ""}