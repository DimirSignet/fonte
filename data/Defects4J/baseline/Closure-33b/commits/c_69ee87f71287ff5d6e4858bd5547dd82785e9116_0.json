{"sha": "69ee87f71287ff5d6e4858bd5547dd82785e9116", "log": "Delete undefined properties check  R=johnlenz DELTA=602  (16 added, 579 deleted, 7 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=2319   ", "commit": "\n--- a/src/com/google/javascript/jscomp/CompilerOptions.java\n+++ b/src/com/google/javascript/jscomp/CompilerOptions.java\n   public boolean checkControlStructures;\n \n   /** Checks for non-extern properties that are read but never set. */\n+  @Deprecated\n   public CheckLevel checkUndefinedProperties;\n \n   /**\n    * including libraries with methods that you don't use, so it is off by\n    * default.\n    */\n+  @Deprecated\n   public boolean checkUnusedPropertiesEarly;\n \n   /** Checks types on expressions */\n     strictMessageReplacement = false;\n     checkSuspiciousCode = false;\n     checkControlStructures = false;\n-    checkUndefinedProperties = CheckLevel.OFF;\n-    checkUnusedPropertiesEarly = false;\n     checkTypes = false;\n     tightenTypes = false;\n     inferTypesInGlobalScope = false;\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n       checks.add(checkGlobalNames);\n     }\n \n-    if (options.checkUndefinedProperties.isOn() ||\n-        options.checkUnusedPropertiesEarly) {\n-      checks.add(checkSuspiciousProperties);\n-    }\n-\n     if (options.getLanguageIn() == LanguageMode.ECMASCRIPT5_STRICT\n         || options.checkCaja\n         || options.checkEs5Strict) {\n               .injectNamespace(namespaceForChecks).process(externs, jsRoot);\n         }\n       };\n-    }\n-  };\n-\n-  /** Checks for properties that are not read or written */\n-  private final PassFactory checkSuspiciousProperties =\n-      new PassFactory(\"checkSuspiciousProperties\", true) {\n-    @Override\n-    protected CompilerPass createInternal(AbstractCompiler compiler) {\n-      return new SuspiciousPropertiesCheck(\n-          compiler,\n-          options.checkUndefinedProperties,\n-          options.checkUnusedPropertiesEarly ?\n-              CheckLevel.WARNING : CheckLevel.OFF);\n     }\n   };\n \n--- a/src/com/google/javascript/jscomp/WarningLevel.java\n+++ b/src/com/google/javascript/jscomp/WarningLevel.java\n    */\n   private static void addDefaultWarnings(CompilerOptions options) {\n     options.checkSuspiciousCode = true;\n-    // TODO(user): This is deprecated. We should turn on the\n-    // new one once it is default in command line JSCompiler.\n-    options.checkUndefinedProperties = CheckLevel.OFF;\n-    options.checkUnusedPropertiesEarly = false;\n     options.checkUnreachableCode = CheckLevel.WARNING;\n     options.checkControlStructures = true;\n   }", "timestamp": 1308254560, "metainfo": ""}