{"sha": "36bde82f28191b20e881b8461d48163d6157c726", "log": "fix node lengths on Names of Var sub-trees where the variable is initialized at declaration point.  R=nicksantos DELTA=12  (7 added, 1 deleted, 4 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3789   ", "commit": "\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n     Node processVariableInitializer(VariableInitializer initializerNode) {\n       Node node = transform(initializerNode.getTarget());\n       if (initializerNode.getInitializer() != null) {\n-        node.addChildToBack(transform(initializerNode.getInitializer()));\n-        node.setLineno(node.getLineno());\n-        maybeSetLengthFrom(node, initializerNode);\n+        Node initalizer = transform(initializerNode.getInitializer());\n+        node.addChildToBack(initalizer);\n       }\n       return node;\n     }\n--- a/test/com/google/javascript/jscomp/parsing/IRFactoryTest.java\n+++ b/test/com/google/javascript/jscomp/parsing/IRFactoryTest.java\n     Node varExpr = varName.getFirstChild();\n \n     assertNodePosition(1, 0, varDecl);\n-    assertNodePosition(2, 4, varName);\n-    assertNodePosition(3, 4, varExpr);\n+    assertNodePosition(2, 4, 1, varName);\n+    assertNodePosition(3, 4, 1, varExpr);\n   }\n \n   public void testReturnLocation() {\n     assertEquals(\"Column position\", charno, n.getCharno());\n   }\n \n+  private void assertNodePosition(int lineno, int charno, int length, Node n) {\n+    assertEquals(\"Line number\", lineno, n.getLineno());\n+    assertEquals(\"Column position\", charno, n.getCharno());\n+    assertEquals(\"Length\", length, n.getLength());\n+  }\n+\n+\n   private void testNewParser(String code, String expected) {\n     String actual = newParse(code).toStringTree();\n     assertEquals(expected, actual);", "timestamp": 1321911497, "metainfo": ""}