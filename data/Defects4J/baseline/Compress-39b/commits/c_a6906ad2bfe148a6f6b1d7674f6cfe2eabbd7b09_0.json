{"sha": "a6906ad2bfe148a6f6b1d7674f6cfe2eabbd7b09", "log": "Javadoc fixes  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n public class ArchiveStreamFactory {\n \n     /**\n-     * Constant used to identify the AR archive format.\n+     * Constant (value {@value}) used to identify the AR archive format.\n      * @since 1.1\n      */\n     public static final String AR = \"ar\";\n     /**\n-     * Constant used to identify the ARJ archive format.\n+     * Constant (value {@value}) used to identify the ARJ archive format.\n+     * Not supported as an output stream type.\n      * @since 1.6\n      */\n     public static final String ARJ = \"arj\";\n     /**\n-     * Constant used to identify the CPIO archive format.\n+     * Constant (value {@value}) used to identify the CPIO archive format.\n      * @since 1.1\n      */\n     public static final String CPIO = \"cpio\";\n     /**\n-     * Constant used to identify the Unix DUMP archive format.\n+     * Constant (value {@value}) used to identify the Unix DUMP archive format.\n+     * Not supported as an output stream type.\n      * @since 1.3\n      */\n     public static final String DUMP = \"dump\";\n     /**\n-     * Constant used to identify the JAR archive format.\n+     * Constant (value {@value}) used to identify the JAR archive format.\n      * @since 1.1\n      */\n     public static final String JAR = \"jar\";\n      */\n     public static final String TAR = \"tar\";\n     /**\n-     * Constant used to identify the ZIP archive format.\n+     * Constant (value {@value}) used to identify the ZIP archive format.\n      * @since 1.1\n      */\n     public static final String ZIP = \"zip\";\n     /**\n-     * Constant used to identify the 7z archive format.\n+     * Constant (value {@value}) used to identify the 7z archive format.\n      * @since 1.8\n      */\n     public static final String SEVEN_Z = \"7z\";\n     /**\n      * Create an archive input stream from an archiver name and an input stream.\n      * \n-     * @param archiverName the archive name, i.e. \"ar\", \"arj\", \"zip\", \"tar\", \"jar\", \"dump\" or \"cpio\"\n+     * @param archiverName the archive name,\n+     * i.e. {@value #AR}, {@value #ARJ}, {@value #ZIP}, {@value #TAR}, {@value #JAR}, {@value #CPIO}, {@value #DUMP} or {@value #SEVEN_Z}\n      * @param in the input stream\n      * @return the archive input stream\n      * @throws ArchiveException if the archiver name is not known\n     }\n \n     /**\n-     * Create an archive output stream from an archiver name and an input stream.\n+     * Create an archive output stream from an archiver name and an output stream.\n      * \n-     * @param archiverName the archive name, i.e. \"ar\", \"zip\", \"tar\", \"jar\" or \"cpio\"\n+     * @param archiverName the archive name,\n+     * i.e. {@value #AR}, {@value #ZIP}, {@value #TAR}, {@value #JAR}, {@value #CPIO} or {@value #SEVEN_Z} \n      * @param out the output stream\n      * @return the archive output stream\n      * @throws ArchiveException if the archiver name is not known", "timestamp": 1424025904, "metainfo": ""}