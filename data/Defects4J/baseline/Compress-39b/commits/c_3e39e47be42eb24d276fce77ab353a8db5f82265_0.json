{"sha": "3e39e47be42eb24d276fce77ab353a8db5f82265", "log": "COMPRESS-147 some cosmetics  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java\n     private static final int MAX_UNSKIPPABLE_TYPE = 0x7f;\n     private static final int MAX_SKIPPABLE_TYPE = 0xfd;\n \n+    private static final byte[] SZ_SIGNATURE = new byte[] {\n+        (byte) STREAM_IDENTIFIER_TYPE, // tag\n+        6, 0, 0, // length\n+        's', 'N', 'a', 'P', 'p', 'Y'\n+    };\n+\n     /** The underlying stream to read compressed data from */\n     private final PushbackInputStream in;\n \n     /** {@inheritDoc} */\n     @Override\n     public void close() throws IOException {\n+        if (currentCompressedChunk != null) {\n+            currentCompressedChunk.close();\n+            currentCompressedChunk = null;\n+        }\n         in.close();\n     }\n \n             long before = currentCompressedChunk.getBytesRead();\n             read = currentCompressedChunk.read(b, off, len);\n             if (read == -1) {\n+                currentCompressedChunk.close();\n                 currentCompressedChunk = null;\n             } else {\n                 count(currentCompressedChunk.getBytesRead() - before);\n     /**\n      * Checks if the signature matches what is expected for a .sz file.\n      *\n-     * <p>.sz files start with a chuck with tag 0xff and content sNaPpY.\n+     * <p>.sz files start with a chunk with tag 0xff and content sNaPpY.</p>\n      * \n      * @param signature the bytes to check\n      * @param length    the number of bytes to check\n      */\n     public static boolean matches(byte[] signature, int length) {\n \n-        if (length < 10) {\n+        if (length < SZ_SIGNATURE.length) {\n             return false;\n         }\n \n         byte[] shortenedSig = signature;\n-        if (signature.length > 10) {\n-            shortenedSig = new byte[10];\n-            System.arraycopy(signature, 0, shortenedSig, 0, 10);\n-        }\n-\n-        return Arrays.equals(shortenedSig, new byte[] {\n-                (byte) STREAM_IDENTIFIER_TYPE, // tag\n-                6, 0, 0, // length\n-                's', 'N', 'a', 'P', 'p', 'Y'\n-            });\n+        if (signature.length > SZ_SIGNATURE.length) {\n+            shortenedSig = new byte[SZ_SIGNATURE.length];\n+            System.arraycopy(signature, 0, shortenedSig, 0, SZ_SIGNATURE.length);\n+        }\n+\n+        return Arrays.equals(shortenedSig, SZ_SIGNATURE);\n     }\n \n }", "timestamp": 1385884508, "metainfo": ""}