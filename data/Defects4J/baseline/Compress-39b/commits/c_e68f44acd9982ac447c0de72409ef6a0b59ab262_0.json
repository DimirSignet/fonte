{"sha": "e68f44acd9982ac447c0de72409ef6a0b59ab262", "log": "add some javadocs, check argument to readBits  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/utils/BitInputStream.java\n         in.close();\n     }\n     \n+    /**\n+     * Clears the cache of bits that have been read from the\n+     * underlying stream but not yet provided via {@link #readBits}.\n+     */\n     public void clearBitCache() {\n         bitsCached = 0;\n         bitsCachedSize = 0;\n     }\n     \n+    /**\n+     * Returns at most 32 bits read from the underlying stream.\n+     *\n+     * @param count the number of bits to read, must be a positive\n+     * number not bigger than 32.\n+     * @return the bits concatenated as an integer using the stream's byte order.\n+     */\n     public int readBits(final int count) throws IOException {\n+        if (count < 0 || count > 32) {\n+            throw new IllegalArgumentException(\"count must be between 0 and 32\");\n+        }\n         while (bitsCachedSize < count) {\n             final int nextByte = in.read();\n             if (nextByte < 0) {", "timestamp": 1414841516, "metainfo": ""}