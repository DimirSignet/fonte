{"sha": "6140bf0a6d1cde677fadb3314ba718610911e386", "log": "Move header and trailer strings to ArArchiveEntry constants  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java\n  */\n public class ArArchiveEntry implements ArchiveEntry {\n \n+    /** The header for each entry */\n+    public static final String HEADER = \"!<arch>\\n\";\n+\n+    /** The trailer for each entry */\n+    public static final String TRAILER = \"`\\012\";\n+    \n     private final String name;\n \tprivate final int userId;\n \tprivate final int groupId;\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java\n     public ArArchiveEntry getNextArEntry() throws IOException {\n \n         if (offset == 0) {\n-            final byte[] expected = \"!<arch>\\n\".getBytes();\n+            final byte[] expected = ArArchiveEntry.HEADER.getBytes();\n             final byte[] realized = new byte[expected.length]; \n             final int read = read(realized);\n             if (read != expected.length) {\n         read(length);\n \n         {\n-            final byte[] expected = \"`\\012\".getBytes();\n+            final byte[] expected = ArArchiveEntry.TRAILER.getBytes();\n             final byte[] realized = new byte[expected.length]; \n             final int read = read(realized);\n             if (read != expected.length) {\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n     }\n \n     private long writeArchiveHeader() throws IOException {\n-        final String header = \"!<arch>\\n\";\n-        out.write(header.getBytes());\n-        return header.length();\n+        byte [] header = ArArchiveEntry.HEADER.getBytes();\n+        out.write(header);\n+        return header.length;\n     }\n \n     public void closeArchiveEntry() throws IOException {\n         if ((entryOffset % 2) != 0) {\n-            out.write('\\n');\n+            out.write('\\n'); // Pad byte\n             archiveOffset++;\n         }\n     }\n \n         offset = fill(offset, 58, ' ');\n \n-        offset += write(\"`\\012\");\n+        offset += write(ArArchiveEntry.TRAILER);\n \n         return offset;\n     }", "timestamp": 1238255295, "metainfo": ""}