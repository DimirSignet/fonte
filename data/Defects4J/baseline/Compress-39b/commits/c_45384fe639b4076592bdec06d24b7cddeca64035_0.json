{"sha": "45384fe639b4076592bdec06d24b7cddeca64035", "log": "adjust test expectations to the difference in InfoZIP's and ZipEntry's interpretation of the LFH time  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java\n                 ZipArchiveEntry zae = en.nextElement();\n                 String name = zae.getName();\n                 X5455_ExtendedTimestamp xf = (X5455_ExtendedTimestamp) zae.getExtraField(X5455);\n-\n-                Date z = zae.getLastModifiedDate();\n+                Date z = adjustFromGMTToExpectedOffset(zae.getLastModifiedDate());\n                 Date m = xf.getModifyJavaTime();\n                 Date a = xf.getAccessJavaTime();\n \n                         switch (year) {\n                             case 2107:\n                                 // Zip time is okay up to 2107.\n-                                assertEquals(year + \"-01-01/00:00:02 +0000\", zipTime);\n+                                assertEquals(year  + \"-01-01/00:00:02 +0000\", zipTime);\n                                 // But the X5455 data has overflowed:\n                                 assertEquals(\"1970-11-24/17:31:45 +0000\", modTime);\n                                 assertEquals(\"1970-11-24/17:31:47 +0000\", accTime);\n     }\n \n     private static boolean isFlagSet(byte data, byte flag) { return (data & flag) == flag; }\n+\n+    /**\n+     * InfoZIP seems to adjust the time stored inside the LFH and CD\n+     * to GMT when writing ZIPs while java.util.zip.ZipEntry thinks it\n+     * was in local time.\n+     *\n+     * The archive read in {@see #testSampleFile} has been created\n+     * with GMT-8 so we need to adjust for the difference.\n+     */\n+    private static Date adjustFromGMTToExpectedOffset(Date from) {\n+        Calendar cal = Calendar.getInstance();\n+        cal.setTime(from);\n+        // we may even need to take DST into account for the southern hemisphere\n+        cal.add(Calendar.MILLISECOND, cal.get(Calendar.ZONE_OFFSET));\n+        cal.add(Calendar.HOUR, 8);\n+        return cal.getTime();\n+    }\n }", "timestamp": 1357925266, "metainfo": ""}