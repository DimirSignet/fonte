{"sha": "7b117a459629338668b5f67cef99729606523c6f", "log": "use LinkedList explicitly for the tiny gain getFirst() provides over get(0)  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java\n     /**\n      * Maps String to list of ZipArchiveEntrys, name -> actual entries.\n      */\n-    private final Map<String, List<ZipArchiveEntry>> nameMap =\n-        new HashMap<String, List<ZipArchiveEntry>>(HASH_SIZE);\n+    private final Map<String, LinkedList<ZipArchiveEntry>> nameMap =\n+        new HashMap<String, LinkedList<ZipArchiveEntry>>(HASH_SIZE);\n \n     private static final class OffsetEntry {\n         private long headerOffset = -1;\n      * {@code null} if not present.\n      */\n     public ZipArchiveEntry getEntry(String name) {\n-        List<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);\n-        return entriesOfThatName != null ? entriesOfThatName.get(0) : null;\n+        LinkedList<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);\n+        return entriesOfThatName != null ? entriesOfThatName.getFirst() : null;\n     }\n \n     /**\n             }\n \n             String name = ze.getName();\n-            List<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);\n+            LinkedList<ZipArchiveEntry> entriesOfThatName = nameMap.get(name);\n             if (entriesOfThatName == null) {\n                 entriesOfThatName = new LinkedList<ZipArchiveEntry>();\n                 nameMap.put(name, entriesOfThatName);\n             }\n-            entriesOfThatName.add(ze);\n+            entriesOfThatName.addLast(ze);\n         }\n     }\n ", "timestamp": 1369832384, "metainfo": ""}