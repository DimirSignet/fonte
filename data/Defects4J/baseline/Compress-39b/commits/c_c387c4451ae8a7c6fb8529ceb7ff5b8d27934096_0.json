{"sha": "c387c4451ae8a7c6fb8529ceb7ff5b8d27934096", "log": "Should only delete directories if type = DELETE_DIRECTORY Fix corresponding errors in test cases  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n  * @Immutable\n  */\n public class ChangeSetPerformer {\n-    private Set changes = null;\n+    private final Set changes;\n     \n     /**\n      * Constructs a ChangeSetPerformer with the changes from this ChangeSet\n             for (Iterator it = workingSet.iterator(); it.hasNext();) {\n                 Change change = (Change) it.next();\n \n-                if (change.type() == Change.TYPE_DELETE && \n-                    entry.getName() != null) {\n-                    if (entry.getName().equals(change.targetFile())) {\n+                final int type = change.type();\n+                final String name = entry.getName();\n+                if (type == Change.TYPE_DELETE && name != null) {\n+                    if (name.equals(change.targetFile())) {\n                         copy = false;\n                         it.remove();\n                         break;\n                     }\n-                } else if(change.type() == Change.TYPE_DELETE_DIR && \n-                          entry.getName() != null) {\n-                    if (entry.getName().matches(\n+                } else if(type == Change.TYPE_DELETE_DIR && name != null) {\n+                    if (name.matches(\n                             change.targetFile() + \"/.*\")) {\n                         copy = false;\n                         break;\n         if (!workingSet.isEmpty()) {\n             for (Iterator it = workingSet.iterator(); it.hasNext();) {\n                 Change change = (Change) it.next();\n-                if (change.type() == Change.TYPE_DELETE || change.type() == Change.TYPE_DELETE_DIR) {\n+                final int type = change.type();\n+                if (type == Change.TYPE_DELETE || type == Change.TYPE_DELETE_DIR) {\n                     String target = change.targetFile();\n \n                     if (source.equals(target)) {\n                         return true;\n                     }\n \n-                    return source.matches(target + \"/.*\");\n+                    return (type == Change.TYPE_DELETE_DIR) && source.matches(target + \"/.*\");\n                 }\n             }\n         }\n--- a/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n  */\n public final class ChangeSetTestCase extends AbstractTestCase {\n     \n-    private void archiveListDelete(String prefix){\n+    // Delete a directory tree\n+    private void archiveListDeleteDir(String prefix){\n         Iterator it = archiveList.iterator();\n         while(it.hasNext()){\n             String entry = (String) it.next();\n         }\n     }\n \n+    // Delete a single file\n+    private void archiveListDelete(String prefix){\n+        Iterator it = archiveList.iterator();\n+        while(it.hasNext()){\n+            String entry = (String) it.next();\n+            if (entry.equals(prefix)){\n+                it.remove();\n+            }\n+        }\n+    }\n+\n     /**\n      * Tries to delete the folder \"bla\" from an archive file. This should result in\n      * the deletion of bla/*, which actually means bla/test4.xml should be\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n-            changes.delete(\"bla\");\n-            archiveListDelete(\"bla\");\n+            changes.deleteDir(\"bla\");\n+            archiveListDeleteDir(\"bla\");\n             ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n             performer.perform(ais, out);\n             is.close();\n                     new FileOutputStream(result));\n \n             ChangeSet changes = new ChangeSet();\n-            changes.delete(\"bla\");\n-            archiveListDelete(\"bla\");\n+            changes.deleteDir(\"bla\");\n+            archiveListDeleteDir(\"bla\");\n \n             // Add a file\n             final File file1 = getFile(\"test.txt\");\n             archiveList.add(\"blub/test.txt\");\n \n             changes.deleteDir(\"blub\");\n-            archiveListDelete(\"blub\");\n+            archiveListDeleteDir(\"blub\");\n \n             ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n             performer.perform(ais, out);\n             archiveList.add(\"bla/test.txt\");\n \n             changes.deleteDir(\"bla\");\n-            archiveListDelete(\"bla\");\n+            archiveListDeleteDir(\"bla\");\n \n             ChangeSetPerformer performer = new ChangeSetPerformer(changes);\n             performer.perform(ais, out);", "timestamp": 1239799749, "metainfo": ""}