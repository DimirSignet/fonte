{"sha": "7684a4b9dd50e71521c8e458e947b1b4e278db85", "log": "some comments still mention old Ant class name  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java\n      *\n      * @param inputLength\n      *            The length of the data which will be compressed by\n-     *            <tt>CBZip2OutputStream</tt>.\n+     *            <tt>BZip2CompressorOutputStream</tt>.\n      */\n     public static int chooseBlockSize(long inputLength) {\n         return (inputLength > 0) ? (int) Math\n     }\n \n     /**\n-     * Constructs a new <tt>CBZip2OutputStream</tt> with a blocksize of 900k.\n+     * Constructs a new <tt>BZip2CompressorOutputStream</tt> with a blocksize of 900k.\n      *\n      * @param out \n      *            the destination stream.\n     }\n \n     /**\n-     * Constructs a new <tt>CBZip2OutputStream</tt> with specified blocksize.\n+     * Constructs a new <tt>BZip2CompressorOutputStream</tt> with specified blocksize.\n      *\n      * @param out\n      *            the destination stream.\n         }\n \n         this.blockSize100k = blockSize;\n-        /* 20 is just a paranoia constant */\n-        this.allowableBlockSize = (this.blockSize100k * BZip2Constants.BASEBLOCKSIZE) - 20;\n         this.out = out;\n         init();\n     }\n         for (int i = 256; --i >= 0;) {\n             inUse[i] = false;\n         }\n+\n+        /* 20 is just a paranoia constant */\n+        this.allowableBlockSize = (this.blockSize100k * BZip2Constants.BASEBLOCKSIZE) - 20;\n     }\n \n     private void endBlock() throws IOException {", "timestamp": 1337574260, "metainfo": ""}