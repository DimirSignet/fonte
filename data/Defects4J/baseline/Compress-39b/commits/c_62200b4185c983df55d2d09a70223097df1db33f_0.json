{"sha": "62200b4185c983df55d2d09a70223097df1db33f", "log": "COMPRESS-221 make XZ for Jaca truely optional for CompressorStreamFactory, based on patch description by Matt Quigley  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n import org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream;\n import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;\n import org.apache.commons.compress.compressors.xz.XZCompressorOutputStream;\n+import org.apache.commons.compress.compressors.xz.XZUtils;\n import org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream;\n import org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream;\n \n                 return new GzipCompressorInputStream(in);\n             }\n \n-            if (XZCompressorInputStream.matches(signature, signatureLength)) {\n+            if (XZUtils.isXZCompressionAvailable() &&\n+                XZCompressorInputStream.matches(signature, signatureLength)) {\n                 return new XZCompressorInputStream(in);\n             }\n \n--- a/src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java\n     }\n \n     /**\n+     * Are the classes required to support XZ compression available?\n+     * @since Commons Compress 1.5\n+     */\n+    public static boolean isXZCompressionAvailable() {\n+        try {\n+            XZCompressorInputStream.matches(null, 0);\n+            return true;\n+        } catch (NoClassDefFoundError error) {\n+            return false;\n+        }\n+    }\n+\n+    /**\n      * Detects common xz suffixes in the given filename.\n      *\n      * @param filename name of a file", "timestamp": 1362672992, "metainfo": ""}