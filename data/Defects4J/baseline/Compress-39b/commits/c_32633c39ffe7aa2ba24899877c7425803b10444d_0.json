{"sha": "32633c39ffe7aa2ba24899877c7425803b10444d", "log": "COMPRESS-336 properly parse prefix in xstar tar headers", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n  * };\n  * </pre>\n  *\n+ * <p>\n+ * The C structure for a xstar (J\u00f6rg Schilling star) Tar Entry's header is:\n+ * <pre>\n+ * struct star_header {\n+ *  char name[100];\t\t// offset  0\n+ *  char mode[8];\t\t// offset100\n+ *  char uid[8];\t\t// offset108\n+ *  char gid[8];\t\t// offset116\n+ *  char size[12];\t\t// offset124\n+ *  char mtime[12];\t\t// offset136\n+ *  char chksum[8];\t\t// offset148\n+ *  char typeflag;\t\t// offset156\n+ *  char linkname[100];\t\t// offset157\n+ *  char magic[6];\t\t// offset257\n+ *  char version[2];\t\t// offset263\n+ *  char uname[32];\t\t// offset265\n+ *  char gname[32];\t\t// offset297\n+ *  char devmajor[8];\t\t// offset329\n+ *  char devminor[8];\t\t// offset337\n+ *  char prefix[131];\t\t// offset345\n+ *  char atime[12];             // offset476\n+ *  char ctime[12];             // offset488\n+ *  char mfill[8];              // offset500 \n+ *  char xmagic[4];             // offset508  \"tar\"\n+ * };\n+ * </pre>\n+ * which is identical to new-style POSIX up to the first 130 bytes of the prefix.</p>\n+ *\n  * @NotThreadSafe\n  */\n \n             offset += REALSIZELEN_GNU;\n             break;\n         }\n+        case FORMAT_XSTAR: {\n+            String xstarPrefix = oldStyle\n+                ? TarUtils.parseName(header, offset, PREFIXLEN_XSTAR)\n+                : TarUtils.parseName(header, offset, PREFIXLEN_XSTAR, encoding);\n+            if (xstarPrefix.length() > 0) {\n+                name = xstarPrefix + \"/\" + name;\n+            }\n+            break;\n+        }\n         case FORMAT_POSIX:\n         default: {\n             String prefix = oldStyle\n             return FORMAT_OLDGNU;\n         }\n         if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) {\n+            if (ArchiveUtils.matchAsciiBuffer(MAGIC_XSTAR, header, XSTAR_MAGIC_OFFSET,\n+                                              XSTAR_MAGIC_LEN)) {\n+                return FORMAT_XSTAR;\n+            }\n             return FORMAT_POSIX;\n         }\n         return 0;\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java\n     int    FORMAT_POSIX = 3;\n \n     /**\n+     * xstar format used by J\u00f6rg Schilling's star.\n+     */\n+    int    FORMAT_XSTAR = 4;\n+\n+    /**\n      * The length of the name field in a header buffer.\n      */\n     int    NAMELEN = 100;\n      */\n     String GNU_LONGLINK = \"././@LongLink\"; // TODO rename as LONGLINK_GNU ?\n \n+    /**\n+     * The magix string used in the last four bytes of the header to\n+     * identify the xstar format.\n+     */\n+    String MAGIC_XSTAR = \"tar\\0\";\n+\n+    /**\n+     * Offset inside the header for the xstar magic bytes.\n+     */\n+    int XSTAR_MAGIC_OFFSET = 508;\n+\n+    /**\n+     * Length of the XSTAR magic.\n+     */\n+    int XSTAR_MAGIC_LEN = 4;\n+\n+    /**\n+     * Length of the prefix field in xstar archives.\n+     * \n+     */\n+    int PREFIXLEN_XSTAR = 131;\n+\n+    /**\n+     * The length of the access time field in a xstar header buffer.\n+     * \n+     */\n+    int ATIMELEN_XSTAR = 12;\n+\n+    /**\n+     * The length of the created time field in a xstar header buffer.\n+     * \n+     */\n+    int CTIMELEN_XSTAR = 12;\n }", "timestamp": 1455447795, "metainfo": ""}