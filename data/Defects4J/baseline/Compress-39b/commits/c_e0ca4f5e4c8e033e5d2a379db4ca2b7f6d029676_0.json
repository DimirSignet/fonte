{"sha": "e0ca4f5e4c8e033e5d2a379db4ca2b7f6d029676", "log": "move PasswordRequiredException  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java\n import javax.crypto.SecretKey;\n import javax.crypto.spec.IvParameterSpec;\n import javax.crypto.spec.SecretKeySpec;\n+import org.apache.commons.compress.exceptions.PasswordRequiredException;\n \n class AES256SHA256Decoder extends CoderBase {\n     @Override\n--- /dev/null\n+++ b/src/main/java/org/apache/commons/compress/exceptions/PasswordRequiredException.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package org.apache.commons.compress.exceptions;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Exception thrown when trying to read an encrypted entry or file without\n+ * configuring a password.\n+ * @since 1.10\n+ */\n+public class PasswordRequiredException extends IOException {\n+\n+    /**\n+     * Create a new exception.\n+     *\n+     * @param name name of the archive containing encrypted streams or\n+     * the encrypted file.\n+     */\n+    public PasswordRequiredException(String name) {\n+        super(\"Cannot read encrypted content from \" + name + \" without a password.\");\n+    }\n+}\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n import java.util.Arrays;\n import javax.crypto.Cipher;\n import org.apache.commons.compress.AbstractTestCase;\n+import org.apache.commons.compress.exceptions.PasswordRequiredException;\n \n public class SevenZFileTest extends AbstractTestCase {\n     private static final String TEST2_CONTENT = \"<?xml version = '1.0'?>\\r\\n<!DOCTYPE\"\n         } catch (PasswordRequiredException ex) {\n             String msg = ex.getMessage();\n             assertTrue(\"Should start with whining about being unable to decrypt\",\n-                       msg.startsWith(\"Cannot read encrypted archive \"));\n+                       msg.startsWith(\"Cannot read encrypted content from \"));\n             assertTrue(\"Should finish the sentence properly\",\n                        msg.endsWith(\" without a password.\"));\n             assertTrue(\"Should contain archive's name\",", "timestamp": 1422101798, "metainfo": ""}