{"sha": "cf373458eb7696c657a19757da932686a26b41c8", "log": "Make format final - there is then no need to synch. on the field  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n \n     private boolean finished;\n \n-    private short entryFormat = FORMAT_NEW;\n+    private final short entryFormat;\n \n     private final HashMap names = new HashMap();\n \n      */\n     public CpioArchiveOutputStream(final OutputStream out, final short format) {\n         this.out = new FilterOutputStream(out);\n-        setFormat(format);\n-    }\n-\n-    /**\n-     * Construct the cpio output stream. The format for this CPIO stream is the\n-     * \"new\" format\n-     * \n-     * @param out\n-     *            The cpio stream\n-     */\n-    public CpioArchiveOutputStream(final OutputStream out) {\n-        this(out, FORMAT_NEW);\n-    }\n-\n-    /**\n-     * Check to make sure that this stream has not been closed\n-     * \n-     * @throws IOException\n-     *             if the stream is already closed\n-     */\n-    private void ensureOpen() throws IOException {\n-        if (this.closed) {\n-            throw new IOException(\"Stream closed\");\n-        }\n-    }\n-\n-    /**\n-     * Set a default header format. This will be used if no format is defined in\n-     * the cpioEntry given to putNextEntry().\n-     * \n-     * @param format\n-     *            A CPIO format\n-     */\n-    private void setFormat(final short format) {\n         switch (format) {\n         case FORMAT_NEW:\n         case FORMAT_NEW_CRC:\n         case FORMAT_OLD_BINARY:\n             break;\n         default:\n-            throw new IllegalArgumentException(\"Unknown header type\");\n-\n-        }\n-        synchronized (this) {\n-            this.entryFormat = format;\n+            throw new IllegalArgumentException(\"Unknown format: \"+format);\n+        \n+        }\n+        this.entryFormat = format;\n+    }\n+\n+    /**\n+     * Construct the cpio output stream. The format for this CPIO stream is the\n+     * \"new\" format\n+     * \n+     * @param out\n+     *            The cpio stream\n+     */\n+    public CpioArchiveOutputStream(final OutputStream out) {\n+        this(out, FORMAT_NEW);\n+    }\n+\n+    /**\n+     * Check to make sure that this stream has not been closed\n+     * \n+     * @throws IOException\n+     *             if the stream is already closed\n+     */\n+    private void ensureOpen() throws IOException {\n+        if (this.closed) {\n+            throw new IOException(\"Stream closed\");\n         }\n     }\n ", "timestamp": 1238081589, "metainfo": ""}