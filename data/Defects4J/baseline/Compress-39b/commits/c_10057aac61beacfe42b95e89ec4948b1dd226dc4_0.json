{"sha": "10057aac61beacfe42b95e89ec4948b1dd226dc4", "log": "Fixing the finally code which wasn't null-protecting, catching an exception in the code I'd previously 'fixed' and removing the outputStream variable as it was unused  ", "commit": "\n--- a/src/java/org/apache/commons/compress/AbstractCompressor.java\n+++ b/src/java/org/apache/commons/compress/AbstractCompressor.java\n \t * @see org.apache.commons.compress.Compressor#compressStream(java.io.FileInputStream)\n \t */\n \tpublic InputStream compress(InputStream input) throws CompressException {\n-\t\tFileOutputStream outputStream = null;\n \t\tFileOutputStream tempFileOutputStream = null;\n \t\ttry {\n \t\t\tFile temp = File.createTempFile(\"commons_\",\"jkt\");\n \t\t\tcompressTo(input, tempFileOutputStream);\n \t\t\treturn new FileInputStream(temp);\n \t\t} catch (IOException e) {\n-\t\t\tthrow new CompressException(\"An IO Exception has occured\", e);\n+\t\t\tthrow new CompressException(\"An I/O Exception has occured\", e);\n \t\t} finally {\n-\t\t\ttry {\n+            try {\n                 if(tempFileOutputStream != null) {\n-    \t\t\t\ttempFileOutputStream.close();\n+                    tempFileOutputStream.close();\n                 }\n-                if(outputStream != null) {\n-    \t\t\t\toutputStream.close();\n-                }\n-\t\t\t} catch (IOException e) {\n-\t\t\t\tthrow new CompressException(\"An IO Exception occured while closing the streams\", e);\n-\t\t\t}\n+            } catch (IOException e) {\n+                throw new CompressException(\"An I/O Exception occured while closing the streams\", e);\n+            }\n \t\t}\n \t}\n \n \t\t} catch (FileNotFoundException e) {\n \t\t\tthrow new CompressException(\"File could not be found\", e);\n \t\t} finally {\n-\t      \ttry {\n-\t\t\t\tinputStream.close();\n-\t\t\t\toutputStream.close();\n-\t\t\t} catch (IOException e1) {\n-\t\t\t\tthrow new CompressException(\"An I/O Exception has occured while closing a stream\", e1);\n-\t\t\t}\n+            try {\n+                if(inputStream != null) {\n+                    inputStream.close();\n+                }\n+            } catch (IOException e) {\n+                throw new CompressException(\"An I/O Exception occured while closing the streams\", e);\n+            } finally {\n+                try {\n+                    if(outputStream != null) {\n+                        outputStream.close();\n+                    }\n+                } catch (IOException e) {\n+                    throw new CompressException(\"An I/O Exception occured while closing the streams\", e);\n+                }\n+            }\n \t\t}\n \t}\n }", "timestamp": 1215320498, "metainfo": ""}