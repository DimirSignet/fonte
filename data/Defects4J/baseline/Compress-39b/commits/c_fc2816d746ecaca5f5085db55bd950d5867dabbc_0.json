{"sha": "fc2816d746ecaca5f5085db55bd950d5867dabbc", "log": "assert general purpose bit values, COMPRESS-151  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java\n                     // grab third entry, verify offset is\n                     // 0xFFFFFFFF and it has a ZIP64 extended\n                     // information extra field\n-                    byte[] header = new byte[8];\n+                    byte[] header = new byte[12];\n                     a.readFully(header);\n                     assertArrayEquals(new byte[] {\n                             // sig\n                             45, 0,\n                             // version needed to extract\n                             45, 0,\n+                            // GPB (EFS bit)\n+                            0, 8,\n+                            // method\n+                            0, 0\n                         }, header);\n-                    // ignore GPB, method, timestamp, CRC, compressed size\n-                    a.skipBytes(16);\n+                    // ignore timestamp, CRC, compressed size\n+                    a.skipBytes(12);\n                     byte[] rest = new byte[23];\n                     a.readFully(rest);\n                     assertArrayEquals(new byte[] {\n             }\n         };\n \n-    @Ignore\n     @Test public void write3EntriesCreatingBigArchiveFile() throws Throwable {\n         withTemporaryArchive(\"write3EntriesCreatingBigArchiveFile\",\n                              write3EntriesCreatingBigArchive,\n                              true);\n     }\n \n-    @Ignore\n     @Test public void write3EntriesCreatingBigArchiveStream() throws Throwable {\n         withTemporaryArchive(\"write3EntriesCreatingBigArchiveStream\",\n                              write3EntriesCreatingBigArchive,\n      *\n      * Creates a temporary archive of approx 5GB in size\n      */\n-    @Ignore\n     @Test public void writeBigStoredEntryToStream() throws Throwable {\n         withTemporaryArchive(\"writeBigStoredEntryToStream\",\n                              new ZipOutputTest() {\n                                          // sizes are 0xFFFFFFFF and\n                                          // it has a ZIP64 extended\n                                          // information extra field\n-                                         byte[] header = new byte[8];\n+                                         byte[] header = new byte[12];\n                                          a.readFully(header);\n                                          assertArrayEquals(new byte[] {\n                                                  // sig\n                                                  45, 0,\n                                                  // version needed to extract\n                                                  45, 0,\n+                                                 // GPB (EFS bit)\n+                                                 0, 8,\n+                                                 // method\n+                                                 0, 0\n                                              }, header);\n-                                         // ignore GPB, method, timestamp\n-                                         a.skipBytes(8);\n+                                         // ignore timestamp\n+                                         a.skipBytes(4);\n                                          byte[] rest = new byte[31];\n                                          a.readFully(rest);\n                                          assertArrayEquals(new byte[] {\n \n                                          // and now validate local file header\n                                          a.seek(0);\n-                                         header = new byte[6];\n+                                         header = new byte[10];\n                                          a.readFully(header);\n                                          assertArrayEquals(new byte[] {\n                                                  // sig\n                                                  (byte) 0x50, (byte) 0x4b, 3, 4,\n                                                  // version needed to extract\n                                                  45, 0,\n+                                                 // GPB (EFS bit)\n+                                                 0, 8,\n+                                                 // method\n+                                                 0, 0\n                                              }, header);\n-                                         // ignore GPB, method, timestamp\n-                                         a.skipBytes(8);\n+                                         // ignore timestamp\n+                                         a.skipBytes(4);\n                                          rest = new byte[17];\n                                          a.readFully(rest);\n                                          assertArrayEquals(new byte[] {\n      *\n      * Creates a temporary archive of approx 4MB in size\n      */\n+    @Ignore\n     @Test public void writeBigDeflatedEntryKnownSizeToStream()\n         throws Throwable {\n         withTemporaryArchive(\"writeBigDeflatedEntryKnownSizeToStream\",\n                                                  (byte) 0x50, (byte) 0x4b, 3, 4,\n                                                  // version needed to extract\n                                                  45, 0,\n-                                                 // GPB\n+                                                 // GPB (EFS + Data Descriptor)\n                                                  8, 8,\n                                                  // method\n                                                  8, 0,", "timestamp": 1312036879, "metainfo": ""}