{"sha": "ddb5fd6d8e4d5fa9f7fa659c93fb6eb04f238689", "log": "COMPRESS-279 detect a truncated tar archive and throw an exception  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n         numToRead = Math.min(numToRead, available());\n         \n         totalRead = is.read(buf, offset, numToRead);\n-        count(totalRead);\n         \n         if (totalRead == -1) {\n+            if (numToRead > 0) {\n+                throw new IOException(\"Truncated TAR archive\");\n+            }\n             hasHitEOF = true;\n         } else {\n+            count(totalRead);\n             entryOffset += totalRead;\n         }\n \n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n package org.apache.commons.compress.archivers.tar;\n \n import static org.apache.commons.compress.AbstractTestCase.getFile;\n+import static org.apache.commons.compress.AbstractTestCase.mkdir;\n+import static org.apache.commons.compress.AbstractTestCase.rmdir;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n+import java.io.File;\n import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Calendar;\n import java.util.zip.GZIPInputStream;\n \n import org.apache.commons.compress.utils.CharsetNames;\n+import org.apache.commons.compress.utils.IOUtils;\n import org.junit.Test;\n \n public class TarArchiveInputStreamTest {\n         }\n     }\n \n+    @Test(expected = IOException.class)\n+    public void shouldThrowAnExceptionOnTruncatedEntries() throws Exception {\n+        File dir = mkdir(\"COMPRESS-279\");\n+        TarArchiveInputStream is = getTestStream(\"/COMPRESS-279.tar\");\n+        FileOutputStream out = null;\n+        try {\n+            TarArchiveEntry entry = is.getNextTarEntry();\n+            int count = 0;\n+            while (entry != null) {\n+                out = new FileOutputStream(new File(dir, String.valueOf(count)));\n+                IOUtils.copy(is, out);\n+                out.close();\n+                out = null;\n+                count++;\n+                entry = is.getNextTarEntry();\n+            }\n+        } finally {\n+            is.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+        }\n+    }\n \n     private TarArchiveInputStream getTestStream(String name) {\n         return new TarArchiveInputStream(", "timestamp": 1398590133, "metainfo": ""}