{"sha": "26fc82f9fda2bded536ad203172506561a3bc90c", "log": "Changed the return type of CpioArchiveInputStream.getNextEntry() to avoid casting to CpioArchiveEntry  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java\n     }\n \n     @Override\n-    public ArchiveEntry getNextEntry() throws IOException {\n+    public CpioArchiveEntry getNextEntry() throws IOException {\n         return getNextCPIOEntry();\n     }\n \n--- a/src/test/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStreamTest.java\n public class CpioArchiveInputStreamTest extends AbstractTestCase {\n \n     public void testCpioUnarchive() throws Exception {\n-        StringBuffer expected = new StringBuffer();\n+        StringBuilder expected = new StringBuilder();\n         expected.append(\"./test1.xml<?xml version=\\\"1.0\\\"?>\\n\");\n         expected.append(\"<empty/>./test2.xml<?xml version=\\\"1.0\\\"?>\\n\");\n         expected.append(\"<empty/>\\n\");\n \n \n-        CpioArchiveInputStream in = \n-                new CpioArchiveInputStream(new FileInputStream(getFile(\"bla.cpio\")));\n-        CpioArchiveEntry entry= null;\n+        CpioArchiveInputStream in = new CpioArchiveInputStream(new FileInputStream(getFile(\"bla.cpio\")));\n+        CpioArchiveEntry entry;\n \n-        StringBuffer result = new StringBuffer();\n-        while ((entry = (CpioArchiveEntry) in.getNextEntry()) != null) {\n+        StringBuilder result = new StringBuilder();\n+        while ((entry = in.getNextEntry()) != null) {\n             result.append(entry.getName());\n             int tmp;\n             while ((tmp = in.read()) != -1) {\n                 result.append((char) tmp);\n-             }\n-         }\n-         in.close();\n-         assertEquals(result.toString(), expected.toString());\n+            }\n+        }\n+        in.close();\n+        assertEquals(result.toString(), expected.toString());\n     }\n }", "timestamp": 1375883520, "metainfo": ""}