{"sha": "0508270c67e412b6b5026b25254062ce3d6c2dc7", "log": "COMPRESS-277 share the buffer used in skip - concurrent writes to the buffer won't do any harm as the data is discarded ayway  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n \n     private static final int COPY_BUF_SIZE = 8024;\n     private static final int SKIP_BUF_SIZE = 4096;\n+    private static final byte[] SKIP_BUF = new byte[SKIP_BUF_SIZE];\n \n     /** Private constructor to prevent instantiation of this utility class. */\n     private IOUtils(){\n             numToSkip -= skipped;\n         }\n             \n-        if (numToSkip > 0) {\n-            byte[] skipBuf = new byte[SKIP_BUF_SIZE];\n-            while (numToSkip > 0) {\n-                int read = readFully(input, skipBuf, 0,\n-                                     (int) Math.min(numToSkip, SKIP_BUF_SIZE));\n-                if (read < 1) {\n-                    break;\n-                }\n-                numToSkip -= read;\n-            }\n+        while (numToSkip > 0) {\n+            int read = readFully(input, SKIP_BUF, 0,\n+                                 (int) Math.min(numToSkip, SKIP_BUF_SIZE));\n+            if (read < 1) {\n+                break;\n+            }\n+            numToSkip -= read;\n         }\n         return available - numToSkip;\n     }", "timestamp": 1397362040, "metainfo": ""}