{"sha": "3466783d6e0c1f4ae6dc690a7ea808a9933cf004", "log": "three more archives with 100k files generated by different archivers.  The archives themselves are linked from COMPRESS-36  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java\n     }\n \n     @Test public void read100KFilesUsingInputStream() throws Throwable {\n-        FileInputStream fin = new FileInputStream(get100KFileFile());\n-        ZipArchiveInputStream zin = null;\n-        try {\n-            zin = new ZipArchiveInputStream(fin);\n-            int files = 0;\n-            ZipArchiveEntry zae = null;\n-            while ((zae = zin.getNextZipEntry()) != null) {\n-                if (!zae.isDirectory()) {\n-                    files++;\n-                    assertEquals(0, zae.getSize());\n-                }\n-            }\n-            assertEquals(ONE_HUNDRED_THOUSAND, files);\n-        } finally {\n-            if (zin != null) {\n-                zin.close();\n-            }\n-            fin.close();\n-        }\n+        read100KFilesImpl(get100KFileFile());\n+    }\n+\n+    @Test public void read100KFilesGeneratedBy7ZIPUsingInputStream() throws Throwable {\n+        read100KFilesImpl(get100KFileFileGeneratedBy7ZIP());\n+    }\n+\n+    @Test public void read100KFilesGeneratedByWinCFUsingInputStream() throws Throwable {\n+        read100KFilesImpl(get100KFileFileGeneratedByWinCF());\n+    }\n+\n+    @Test public void read100KFilesGeneratedByJava7JarUsingInputStream() throws Throwable {\n+        read100KFilesImpl(get100KFileFileGeneratedByJava7Jar());\n     }\n \n     private static final ZipOutputTest write100KFiles =\n         return getFile(\"/100k_Files.zip\");\n     }\n \n+    private static File get100KFileFileGeneratedBy7ZIP() throws Throwable {\n+        return getFile(\"/100k_Files_7ZIP.zip\");\n+    }\n+\n+    private static File get100KFileFileGeneratedByWinCF() throws Throwable {\n+        return getFile(\"/100k_Files_WindowsCompressedFolders.zip\");\n+    }\n+\n+    private static File get100KFileFileGeneratedByJava7Jar() throws Throwable {\n+        return getFile(\"/100k_Files_jar.zip\");\n+    }\n+\n     private static File getTempFile(String testName) throws Throwable {\n         File f = File.createTempFile(\"commons-compress-\" + testName, \".zip\");\n         f.deleteOnExit();\n         }\n     }\n \n+    private static void read100KFilesImpl(File f) throws IOException {\n+        FileInputStream fin = new FileInputStream(f);\n+        ZipArchiveInputStream zin = null;\n+        try {\n+            zin = new ZipArchiveInputStream(fin);\n+            int files = 0;\n+            ZipArchiveEntry zae = null;\n+            while ((zae = zin.getNextZipEntry()) != null) {\n+                if (!zae.isDirectory()) {\n+                    files++;\n+                    assertEquals(0, zae.getSize());\n+                }\n+            }\n+            assertEquals(ONE_HUNDRED_THOUSAND, files);\n+        } finally {\n+            if (zin != null) {\n+                zin.close();\n+            }\n+            fin.close();\n+        }\n+    }\n+\n     private static long getLengthAndPositionAtCentralDirectory(RandomAccessFile a)\n         throws IOException {\n         final long end = a.length();", "timestamp": 1312198412, "metainfo": ""}