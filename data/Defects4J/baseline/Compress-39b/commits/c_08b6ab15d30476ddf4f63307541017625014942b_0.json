{"sha": "08b6ab15d30476ddf4f63307541017625014942b", "log": "note on 7z's limitations is outdated  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n  * The 7z file format is a flexible container\n  * that can contain many compression and\n  * encryption types, but at the moment only\n- * only Copy, LZMA2, BZIP2, and AES-256 + SHA-256\n- * are supported, and archive header compression\n- * (when it uses the unsupported LZMA\n- * compression) isn't. So the only archives\n- * that can be read are the following:\n- * <pre>\n- * 7z a -mhc=off [-mhe=on] -mx=0 [-ppassword] archive.7z files\n- * 7z a -mhc=off [-mhe=on] -m0=LZMA2 [-ppassword] archive.7z files\n- * 7z a -mhc=off [-mhe=on] -m0=BZIP2 [-ppassword] archive.7z files\n- * </pre>\n+ * only Copy, LZMA, LZMA2, BZIP2, and AES-256 + SHA-256\n+ * are supported.\n  * <p>\n  * The format is very Windows/Intel specific,\n  * so it uses little-endian byte order,", "timestamp": 1380308558, "metainfo": ""}