{"sha": "1ea7e01eb6776071eddf60f7783d650ec7d60e74", "log": "COMPRESS-278 all empty numeric fields should be ignored in tars  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n         while (start < end && (trailer == 0 || trailer == ' ')) {\n             end--;\n             trailer = buffer[end - 1];\n-        }\n-        if (start == end) {\n-            throw new IllegalArgumentException(\n-                    exceptionMessage(buffer, offset, length, start, trailer));\n         }\n \n         for ( ;start < end; start++) {\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n         buffer=new byte[]{0,' '};\n         value = TarUtils.parseOctal(buffer,0, buffer.length);\n         assertEquals(0, value);\n+        buffer=new byte[]{' ',0};\n+        value = TarUtils.parseOctal(buffer,0, buffer.length);\n+        assertEquals(0, value);\n     }\n \n     public void testParseOctalInvalid() throws Exception{\n         try {\n             TarUtils.parseOctal(buffer,0, buffer.length);\n             fail(\"Expected IllegalArgumentException - should be at least 2 bytes long\");\n-        } catch (IllegalArgumentException expected) {\n-        }\n-        buffer=new byte[]{' ',0,0,0}; // not all NULs\n-        try {\n-            TarUtils.parseOctal(buffer,0, buffer.length);\n-            fail(\"Expected IllegalArgumentException - not all NULs\");\n         } catch (IllegalArgumentException expected) {\n         }\n         buffer = \"abcdef \".getBytes(CharsetNames.UTF_8); // Invalid input", "timestamp": 1397887219, "metainfo": ""}