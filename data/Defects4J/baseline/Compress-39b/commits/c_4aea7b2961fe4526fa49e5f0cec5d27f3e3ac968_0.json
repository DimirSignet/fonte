{"sha": "4aea7b2961fe4526fa49e5f0cec5d27f3e3ac968", "log": "address most issues detected by findbugs  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveEntry.java\n             return null;\n     }\n \n+    @Override\n+    public boolean equals(Object o) {\n+        return super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return super.hashCode();\n+    }\n }\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java\n      * @return The utf-8 encoded name.\n      */\n     public byte[] getUnicodeName() {\n-        return unicodeName;\n+        byte[] b = null;\n+        if (unicodeName != null) {\n+            b = new byte[unicodeName.length];\n+            System.arraycopy(unicodeName, 0, b, 0, b.length);\n+        }\n+        return b;\n     }\n \n     /**\n      * @param unicodeName The utf-8 encoded name to set.\n      */\n     public void setUnicodeName(byte[] unicodeName) {\n-        this.unicodeName = unicodeName;\n+        if (unicodeName != null) {\n+            this.unicodeName = new byte[unicodeName.length];\n+            System.arraycopy(unicodeName, 0, this.unicodeName, 0,\n+                             unicodeName.length);\n+        } else {\n+            this.unicodeName = null;\n+        }\n         data = null;\n     }\n \n         if (data == null) {\n             this.assembleData();\n         }\n-        return data;\n+        byte[] b = null;\n+        if (data != null) {\n+            b = new byte[data.length];\n+            System.arraycopy(data, 0, b, 0, b.length);\n+        }\n+        return b;\n     }\n \n     /** {@inheritDoc} */\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java\n             return this.unicode - a.unicode;\n         }\n \n+        @Override\n         public String toString() {\n             return \"0x\" + Integer.toHexString(0xffff & unicode)\n                 + \"->0x\" + Integer.toHexString(0xff & code);\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (o instanceof Simple8BitChar) {\n+                Simple8BitChar other = (Simple8BitChar) o;\n+                return unicode == other.unicode && code == other.code;\n+            }\n+            return false;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return unicode;\n         }\n     }\n \n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n     public void setEncoding(final String encoding) {\n         this.encoding = encoding;\n         this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n-        useUTF8Flag &= ZipEncodingHelper.isUTF8(encoding);\n+        if (useUTF8Flag && !ZipEncodingHelper.isUTF8(encoding)) {\n+            useUTF8Flag = false;\n+        }\n     }\n \n     /**\n \n                     // * reset hasUsedZip64 if it has been set because\n                     //   of this entry\n-                    hasUsedZip64 &= !entry.causedUseOfZip64;\n+                    if (entry.causedUseOfZip64) {\n+                        hasUsedZip64 = false;\n+                    }\n                 }\n             }\n             raf.seek(save);\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java\n \n     private final BigInteger value;\n \n-    public static ZipEightByteInteger ZERO = new ZipEightByteInteger(0);\n+    public static final ZipEightByteInteger ZERO = new ZipEightByteInteger(0);\n \n     /**\n      * Create instance from a number.", "timestamp": 1312703779, "metainfo": ""}