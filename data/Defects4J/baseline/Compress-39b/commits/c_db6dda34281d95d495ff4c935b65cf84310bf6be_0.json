{"sha": "db6dda34281d95d495ff4c935b65cf84310bf6be", "log": "Fix up test failures caused by closing resources  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n         TarArchiveEntry e = tin.getNextTarEntry();\n         assertEquals(0100000000000L, e.getSize());\n         tin.close();\n-        tos.close();\n+        // generates IOE because of unclosed entries.\n+        // However we don't really want to create such large entries.\n+        closeQuietly(tos);\n     }\n \n     public void testBigNumberPosixMode() throws Exception {\n         TarArchiveEntry e = tin.getNextTarEntry();\n         assertEquals(0100000000000L, e.getSize());\n         tin.close();\n-        tos.close();\n+        // generates IOE because of unclosed entries.\n+        // However we don't really want to create such large entries.\n+        closeQuietly(tos);\n     }\n \n     public void testWriteSimplePaxHeaders() throws Exception {\n         cal.set(Calendar.MILLISECOND, 0);\n         assertEquals(cal.getTime(), e.getLastModifiedDate());\n         tin.close();\n-        tos.close();\n+        // generates IOE because of unclosed entries.\n+        // However we don't really want to create such large entries.\n+        closeQuietly(tos);\n     }\n \n     public void testOldEntryPosixMode() throws Exception {\n         cal.set(Calendar.MILLISECOND, 0);\n         assertEquals(cal.getTime(), e.getLastModifiedDate());\n         tin.close();\n-        tos.close();\n+        // generates IOE because of unclosed entries.\n+        // However we don't really want to create such large entries.\n+        closeQuietly(tos);\n     }\n \n     public void testOldEntryError() throws Exception {", "timestamp": 1342481978, "metainfo": ""}