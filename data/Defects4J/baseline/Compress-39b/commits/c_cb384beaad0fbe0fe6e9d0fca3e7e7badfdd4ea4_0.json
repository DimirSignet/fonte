{"sha": "cb384beaad0fbe0fe6e9d0fca3e7e7badfdd4ea4", "log": "Tests for Counting(In|Out)putStream  ", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/utils/CountingStreamTest.java\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.commons.compress.utils;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import org.junit.Test;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+\n+public class CountingStreamTest {\n+\n+    @Test\n+    public void output() throws Exception {\n+        // I don't like \"test all at once\" tests either, but the class\n+        // is soo trivial\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        CountingOutputStream o = new CountingOutputStream(bos);\n+        o.write(1);\n+        assertEquals(1, o.getBytesWritten());\n+        o.write(new byte[] { 2, 3 });\n+        assertEquals(3, o.getBytesWritten());\n+        o.write(new byte[] { 2, 3, 4, 5, }, 2, 1);\n+        assertEquals(4, o.getBytesWritten());\n+        o.count(-1);\n+        assertEquals(4, o.getBytesWritten());\n+        o.count(-2);\n+        assertEquals(2, o.getBytesWritten());\n+        o.close();\n+        assertArrayEquals(new byte[] { 1, 2, 3, 4 }, bos.toByteArray());\n+    }\n+\n+    @Test\n+    public void input() throws Exception {\n+        // I don't like \"test all at once\" tests either, but the class\n+        // is soo trivial\n+        ByteArrayInputStream bis =\n+            new ByteArrayInputStream(new byte[] { 1, 2, 3, 4 });\n+        CountingInputStream i = new CountingInputStream(bis);\n+        assertEquals(1, i.read());\n+        assertEquals(1, i.getBytesRead());\n+        byte[] b = new byte[2];\n+        i.read(b);\n+        assertEquals(3, i.getBytesRead());\n+        assertArrayEquals(new byte[] { 2, 3 }, b);\n+        b = new byte[3];\n+        i.read(b, 1, 1);\n+        assertArrayEquals(new byte[] { 0, 4, 0 }, b);\n+        assertEquals(4, i.getBytesRead());\n+        i.count(-1);\n+        assertEquals(4, i.getBytesRead());\n+        i.count(-2);\n+        assertEquals(2, i.getBytesRead());\n+        i.close();\n+    }\n+\n+}", "timestamp": 1319626585, "metainfo": ""}