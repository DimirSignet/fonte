{"sha": "4ae26e42e48c5461a2982dc09be3e958951a8c1d", "log": "test if end() is invoked when stream is closing", "commit": "\n--- /dev/null\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZNativeHeapTest.java\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package org.apache.commons.compress.archivers.sevenz;\n+\n+import org.apache.commons.compress.AbstractTestCase;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mockito;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.zip.Deflater;\n+import java.util.zip.Inflater;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest(Coders.DeflateDecoder.class)\n+public class SevenZNativeHeapTest extends AbstractTestCase {\n+\n+    @InjectMocks\n+    Coders.DeflateDecoder deflateDecoder;\n+\n+    @Test\n+    public void testEndDeflaterOnCloseStream() throws Exception {\n+        final Deflater deflater = PowerMockito.spy(new Deflater());\n+        PowerMockito.whenNew(Deflater.class).withAnyArguments().thenReturn(deflater);\n+\n+        final OutputStream outputStream = deflateDecoder.encode(new ByteArrayOutputStream(), 9);\n+        outputStream.close();\n+\n+        Mockito.verify(deflater).end();\n+    }\n+\n+    @Test\n+    public void testEndInflaterOnCloseStream() throws Exception {\n+        final Inflater inflater = PowerMockito.spy(new Inflater());\n+        PowerMockito.whenNew(Inflater.class).withAnyArguments().thenReturn(inflater);\n+\n+        final InputStream inputStream = deflateDecoder.decode(\"dummy\",new ByteArrayInputStream(new byte[0]),0,null,null);\n+        inputStream.close();\n+\n+        Mockito.verify(inflater).end();\n+    }\n+}", "timestamp": 1458206849, "metainfo": ""}