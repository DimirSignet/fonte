{"sha": "6b0229f14c2dfd5812e7634ec4fa5b6be3b99496", "log": "Use blocks.  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java\n             Change c = changes.getChanges().iterator().next();\n             assertEquals(in2, c.getInput());\n         } finally {\n-            if (in != null)\n+            if (in != null) {\n                 in.close();\n-            if (in2 != null)\n+            }\n+            if (in2 != null) {\n                 in2.close();\n+            }\n         }\n     }\n \n             Change c = changes.getChanges().iterator().next();\n             assertEquals(in, c.getInput());\n         } finally {\n-            if (in != null)\n+            if (in != null) {\n                 in.close();\n-            if (in2 != null)\n+            }\n+            if (in2 != null) {\n                 in2.close();\n+            }\n         }\n     }\n \n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         // Checks\n             assertTrue(results.getAddedFromStream().contains(\"test with spaces.txt\"));\n             assertEquals(6,results.getAddedFromStream().size());\n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         List<String> expected = new ArrayList<String>();\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n         List<String> expected = new ArrayList<String>();\n         expected.add(\"test1.xml\");\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n         List<String> expected = new ArrayList<String>();\n         expected.add(\"test1.xml\");\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n         List<String> expected = new ArrayList<String>();\n         expected.add(\"test1.xml\");\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n         List<String> expected = new ArrayList<String>();\n         expected.add(\"test1.xml\");\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         List<String> expected = new ArrayList<String>();\n             performer.perform(ais, out);\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n         List<String> expected = new ArrayList<String>();\n         expected.add(\"test1.xml\");\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);\n             is.close();\n \n         } finally {\n-            if (out != null)\n-                out.close();\n-            if (ais != null)\n-                ais.close();\n+            if (out != null) {\n+                out.close();\n+            }\n+            if (ais != null) {\n+                ais.close();\n+            }\n         }\n \n         this.checkArchiveContent(result, archiveList);", "timestamp": 1333286220, "metainfo": ""}