{"sha": "98f98c49c31b0760285a9d8a39712c7932f3a650", "log": "Unix mode bits were not being preserved in addRawEntry  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n     public void addRawArchiveEntry(ZipArchiveEntry entry, InputStream rawStream)\n             throws IOException {\n         ZipArchiveEntry ae = new ZipArchiveEntry((java.util.zip.ZipEntry)entry);\n+        ae.setUnixMode( entry.getUnixMode());\n         putArchiveEntry(ae);\n         copyFromZipInputStream(rawStream);\n         closeCopiedEntry();\n--- a/src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java\n  */\n package org.apache.commons.compress.archivers;\n \n+import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.FileInputStream; \t\n import java.io.FileOutputStream; \t\n import java.io.OutputStream;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.zip.ZipEntry;\n \n import org.apache.commons.compress.AbstractTestCase;\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n         zf2.close();\n     }\n \n+    public void testUnixModeInAddRaw() throws IOException {\n+\n+        File[] tmp = createTempDirAndFile();\n+\n+        File a1 = File.createTempFile(\"unixModeBits.\", \".zip\", tmp[0]);\n+        ZipArchiveOutputStream zos = new ZipArchiveOutputStream(a1);\n+\n+        ZipArchiveEntry archiveEntry = new ZipArchiveEntry(\"fred\");\n+        archiveEntry.setUnixMode(0664);\n+        archiveEntry.setMethod(ZipEntry.DEFLATED);\n+        zos.addRawArchiveEntry(archiveEntry, new ByteArrayInputStream(\"fud\".getBytes()));\n+        zos.close();\n+\n+        ZipFile zf1 = new ZipFile(a1);\n+        ZipArchiveEntry fred = zf1.getEntry(\"fred\");\n+        assertEquals(0664, fred.getUnixMode());\n+        zf1.close();\n+    }\n+\n     private File createReferenceFile(File directory) throws IOException {\n         File reference = File.createTempFile(\"expected.\", \".zip\", directory);\n         ZipArchiveOutputStream zos = new ZipArchiveOutputStream(reference);", "timestamp": 1420142896, "metainfo": ""}