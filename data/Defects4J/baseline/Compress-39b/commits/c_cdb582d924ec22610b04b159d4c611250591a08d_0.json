{"sha": "cdb582d924ec22610b04b159d4c611250591a08d", "log": "Remove unnecessary @SuppressWarnings; document necessary ones  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/ArchiveReadTests.java\n+++ b/src/test/java/org/apache/commons/compress/ArchiveReadTests.java\n     }\n \n     public void testArchive() throws Exception{\n-        @SuppressWarnings(\"unchecked\")\n+        @SuppressWarnings(\"unchecked\") // fileList is correct type already\n         ArrayList<String> expected= (ArrayList<String>) fileList.clone();\n         try {\n            checkArchiveContent(file, expected);\n--- a/src/test/java/org/apache/commons/compress/archivers/LongPathTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/LongPathTest.java\n     }\n     \n     public void testArchive() throws Exception {\n-        @SuppressWarnings(\"unchecked\")\n+        @SuppressWarnings(\"unchecked\") // fileList is of correct type\n         ArrayList<String> expected = (ArrayList<String>) fileList.clone();\n         String name = file.getName();\n         if (\"minotaur.jar\".equals(name) || \"minotaur-0.jar\".equals(name)){\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java\n \n     public void testCDOrder() throws Exception {\n         readOrderTest();\n-        @SuppressWarnings(\"unchecked\")\n         ArrayList<ZipArchiveEntry> l = Collections.list(zf.getEntries());\n         assertEntryName(l, 0, \"AbstractUnicodeExtraField\");\n         assertEntryName(l, 1, \"AsiExtraField\");\n \n     public void testPhysicalOrder() throws Exception {\n         readOrderTest();\n-        @SuppressWarnings(\"unchecked\")\n         ArrayList<ZipArchiveEntry> l = Collections.list(zf.getEntriesInPhysicalOrder());\n         assertEntryName(l, 0, \"AbstractUnicodeExtraField\");\n         assertEntryName(l, 1, \"AsiExtraField\");", "timestamp": 1313935056, "metainfo": ""}