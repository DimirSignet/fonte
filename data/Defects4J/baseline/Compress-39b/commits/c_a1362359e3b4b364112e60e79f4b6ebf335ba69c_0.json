{"sha": "a1362359e3b4b364112e60e79f4b6ebf335ba69c", "log": "use for loop rather than iterator  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n import java.nio.ByteBuffer;\n import java.util.Calendar;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n     private void writeCentralDirectoryInChunks() throws IOException {\n         int NUM_PER_WRITE = 1000;\n         ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(70 * NUM_PER_WRITE);\n-        Iterator<ZipArchiveEntry> iterator = entries.iterator();\n-        ZipArchiveEntry ze;\n         int count = 0;\n-        while (iterator.hasNext()){\n-            ze = iterator.next();\n+        for (ZipArchiveEntry ze : entries) {\n             byteArrayOutputStream.write(createCentralFileHeader(ze));\n-            count++;\n-            if (count > NUM_PER_WRITE){\n-                writeCounted( byteArrayOutputStream.toByteArray());\n+            if (++count > NUM_PER_WRITE){\n+                writeCounted(byteArrayOutputStream.toByteArray());\n                 byteArrayOutputStream.reset();\n                 count = 0;\n             }\n         }\n-        writeCounted( byteArrayOutputStream.toByteArray());\n+        writeCounted(byteArrayOutputStream.toByteArray());\n     }\n \n     /**", "timestamp": 1420825046, "metainfo": ""}