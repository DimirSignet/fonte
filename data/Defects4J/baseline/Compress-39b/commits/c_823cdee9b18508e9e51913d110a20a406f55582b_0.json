{"sha": "823cdee9b18508e9e51913d110a20a406f55582b", "log": "COMPRESS-356 properly deal with PAX header entries ending in slash  Suggested-by: Jeremy Gustie <jeremy at gustie dot com>", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n             return true;\n         }\n \n-        if (getName().endsWith(\"/\")) {\n+        if (!isPaxHeader() && !isGlobalPaxHeader() && getName().endsWith(\"/\")) {\n             return true;\n         }\n \n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java\n         }\n     }\n \n+    /**\n+     * @link \"https://issues.apache.org/jira/browse/COMPRESS-356\"\n+     */\n+    @Test\n+    public void survivesPaxHeaderWithNameEndingInSlash() throws Exception {\n+        final TarArchiveInputStream is = getTestStream(\"/COMPRESS-356.tar\");\n+        try {\n+            final TarArchiveEntry entry = is.getNextTarEntry();\n+            assertEquals(\"package/package.json\", entry.getName());\n+            assertNull(is.getNextTarEntry());\n+        } finally {\n+            is.close();\n+        }\n+    }\n+\n     private TarArchiveInputStream getTestStream(final String name) {\n         return new TarArchiveInputStream(\n                 TarArchiveInputStreamTest.class.getResourceAsStream(name));", "timestamp": 1463762530, "metainfo": ""}