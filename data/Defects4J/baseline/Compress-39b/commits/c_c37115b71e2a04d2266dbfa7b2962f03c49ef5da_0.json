{"sha": "c37115b71e2a04d2266dbfa7b2962f03c49ef5da", "log": "COMPRESS-347 support for global PAX headers", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n     // the provided encoding (for unit tests)\n     final String encoding;\n \n+    // the global PAX header\n+    private Map<String, String> globalPaxHeaders = new HashMap<String, String>();\n+\n     /**\n      * Constructor for TarInputStream.\n      * @param is the input stream to use\n             currEntry.setName(zipEncoding.decode(longNameData));\n         }\n \n+        if (currEntry.isGlobalPaxHeader()){ // Process Global Pax headers\n+            readGlobalPaxHeaders();\n+        }\n+\n         if (currEntry.isPaxHeader()){ // Process Pax headers\n             paxHeaders();\n+        } else if (!globalPaxHeaders.isEmpty()) {\n+            applyPaxHeadersToCurrentEntry(globalPaxHeaders);\n         }\n \n         if (currEntry.isOldGNUSparse()){ // Process sparse files\n         return record;\n     }\n \n+    private void readGlobalPaxHeaders() throws IOException {\n+        globalPaxHeaders = parsePaxHeaders(this);\n+        getNextEntry(); // Get the actual file entry\n+    }\n+\n     private void paxHeaders() throws IOException{\n         Map<String, String> headers = parsePaxHeaders(this);\n         getNextEntry(); // Get the actual file entry\n     // NOTE, using a Map here makes it impossible to ever support GNU\n     // sparse files using the PAX Format 0.0, see\n     // https://www.gnu.org/software/tar/manual/html_section/tar_92.html#SEC188\n-    Map<String, String> parsePaxHeaders(InputStream i) throws IOException {\n-        Map<String, String> headers = new HashMap<String, String>();\n+    Map<String, String> parsePaxHeaders(InputStream i)\n+        throws IOException {\n+        Map<String, String> headers = new HashMap<String, String>(globalPaxHeaders);\n         // Format is \"length keyword=value\\n\";\n         while(true){ // get length\n             int ch;", "timestamp": 1458762937, "metainfo": ""}