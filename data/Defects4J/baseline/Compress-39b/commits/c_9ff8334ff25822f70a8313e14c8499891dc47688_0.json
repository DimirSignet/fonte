{"sha": "9ff8334ff25822f70a8313e14c8499891dc47688", "log": "COMPRESS-341 listing of 7z archives", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n         return entry;\n     }\n     \n+    /**\n+     * Returns meta-data of all archive entries.\n+     *\n+     * <p>This method only provides meta-data, the entries can not be\n+     * used to read the contents, you still need to process all\n+     * entries in order using {@link #getNextEntry} for that.</p>\n+     *\n+     * <p>The content methods are only available for entries that have\n+     * already been reached via {@link #getNextEntry}.</p>\n+     *\n+     * @return meta-data of all archive entries.\n+     * @since 1.11\n+     */\n+    public Iterable<SevenZArchiveEntry> getEntries() {\n+        return Arrays.asList(archive.files);\n+    }\n+    \n     private Archive readHeaders(byte[] password) throws IOException {\n         final byte[] signature = new byte[6];\n         file.readFully(signature);\n--- a/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java\n import java.security.NoSuchAlgorithmException;\n import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.Map;\n import java.util.Random;\n \n         }\n     }\n \n+    @Test\n+    public void getEntriesOfUnarchiveTest() throws IOException {\n+        SevenZFile sevenZFile = new SevenZFile(getFile(\"bla.7z\"));\n+        try {\n+            Iterable<SevenZArchiveEntry> entries = sevenZFile.getEntries();\n+            Iterator<SevenZArchiveEntry> iter = entries.iterator();\n+            SevenZArchiveEntry entry = iter.next();\n+            assertEquals(\"test1.xml\", entry.getName());\n+            entry = iter.next();\n+            assertEquals(\"test2.xml\", entry.getName());\n+            assertFalse(iter.hasNext());\n+        } finally {\n+            sevenZFile.close();\n+        }\n+    }\n+    \n     private void test7zUnarchive(File f, SevenZMethod m, byte[] password) throws Exception {\n         SevenZFile sevenZFile = new SevenZFile(f, password);\n         try {", "timestamp": 1458504696, "metainfo": ""}