{"sha": "5106367b894952a348bcda32f14af74a821a9c83", "log": "cosmetic improvements  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n  */\n public class SevenZFile {\n     static final int SIGNATURE_HEADER_SIZE = 32;\n+\n+    private static final int DRAIN_BUF_SIZE = 64 * 1024;\n+\n     private RandomAccessFile file;\n     private final Archive archive;\n     private int currentEntryIndex = -1;\n         }\n         if (nid == NID.kHeader) {\n             readHeader(nextHeaderInputStream, archive);\n+            nextHeaderInputStream.close();\n         } else {\n             throw new IOException(\"Broken or unsupported archive: no Header\");\n         }\n     \n     private void drainPreviousEntry() throws IOException {\n         if (currentEntryInputStream != null) {\n-            final byte[] buffer = new byte[64*1024];\n+            final byte[] buffer = new byte[DRAIN_BUF_SIZE];\n             while (currentEntryInputStream.read(buffer) >= 0) { // NOPMD\n             }\n             currentEntryInputStream.close();\n--- a/src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java\n     @Override\n     public int read() throws IOException {\n         int ret = in.read();\n-        count(ret == -1 ? -1 : 1);\n+        count(ret == -1 ? 0 : 1);\n         return ret;\n     }\n ", "timestamp": 1381837996, "metainfo": ""}