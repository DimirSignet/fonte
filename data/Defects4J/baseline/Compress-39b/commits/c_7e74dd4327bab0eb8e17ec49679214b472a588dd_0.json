{"sha": "7e74dd4327bab0eb8e17ec49679214b472a588dd", "log": "formatting only  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n         Map<String, String> headers = new HashMap<String, String>();\n         // Format is \"length keyword=value\\n\";\n         try {\n-        while(true){ // get length\n-            int ch;\n-            int len=0;\n-            int read=0;\n-            while((ch = br.read()) != -1){\n-                read++;\n-                if (ch == ' '){ // End of length string\n-                    // Get keyword\n-                    StringBuffer sb = new StringBuffer();\n-                    while((ch = br.read()) != -1){\n-                        read++;\n-                        if (ch == '='){ // end of keyword\n-                            String keyword = sb.toString();\n-                            // Get rest of entry\n-                            char[] cbuf = new char[len-read];\n-                            int got = br.read(cbuf);\n-                            if (got != len-read){\n-                                throw new IOException(\"Failed to read Paxheader. Expected \"+(len-read)+\" chars, read \"+got);\n+            while(true){ // get length\n+                int ch;\n+                int len = 0;\n+                int read = 0;\n+                while((ch = br.read()) != -1){\n+                    read++;\n+                    if (ch == ' '){ // End of length string\n+                        // Get keyword\n+                        StringBuffer sb = new StringBuffer();\n+                        while((ch = br.read()) != -1){\n+                            read++;\n+                            if (ch == '='){ // end of keyword\n+                                String keyword = sb.toString();\n+                                // Get rest of entry\n+                                char[] cbuf = new char[len-read];\n+                                int got = br.read(cbuf);\n+                                if (got != len - read){\n+                                    throw new IOException(\"Failed to read \"\n+                                                          + \"Paxheader. Expected \"\n+                                                          + (len - read)\n+                                                          + \" chars, read \"\n+                                                          + got);\n+                                }\n+                                // Drop trailing NL\n+                                String value = new String(cbuf, 0,\n+                                                          len - read - 1);\n+                                headers.put(keyword, value);\n+                                break;\n                             }\n-                            String value = new String(cbuf, 0 , len-read-1); // Drop trailing NL\n-                            headers.put(keyword, value);\n-                            break;\n+                            sb.append((char) ch);\n                         }\n-                        sb.append((char)ch);\n+                        break; // Processed single header\n                     }\n-                    break; // Processed single header\n+                    len *= 10;\n+                    len += ch - '0';\n                 }\n-                len *= 10;\n-                len += ch - '0';\n-            }\n-            if (ch == -1){ // EOF\n-                break;\n-            }\n-        }\n+                if (ch == -1){ // EOF\n+                    break;\n+                }\n+            }\n         } finally {\n             // NO-OP but makes FindBugs happy\n             br.close();\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n         if (!hasUsedZip64\n             && (cdOffset >= ZIP64_MAGIC || cdLength >= ZIP64_MAGIC\n                 || entries.size() >= ZIP64_MAGIC_SHORT)) {\n-                // actually \"will use\"\n-                hasUsedZip64 = true;\n+            // actually \"will use\"\n+            hasUsedZip64 = true;\n         }\n \n         if (!hasUsedZip64) {", "timestamp": 1313300561, "metainfo": ""}