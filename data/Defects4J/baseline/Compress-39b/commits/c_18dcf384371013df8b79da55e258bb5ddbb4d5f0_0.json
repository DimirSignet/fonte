{"sha": "18dcf384371013df8b79da55e258bb5ddbb4d5f0", "log": "The static field should be accessed directly.", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreatorTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreatorTest.java\n import java.util.concurrent.Callable;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n+import java.util.zip.ZipEntry;\n \n import static org.apache.commons.compress.AbstractTestCase.tryHardToDelete;\n import static org.junit.Assert.*;\n     private ZipArchiveEntry createZipArchiveEntry(Map<String, byte[]> entries, int i, byte[] payloadBytes) {\n         ZipArchiveEntry za = new ZipArchiveEntry( \"file\" + i);\n         entries.put( za.getName(), payloadBytes);\n-        za.setMethod(ZipArchiveEntry.DEFLATED);\n+        za.setMethod(ZipEntry.DEFLATED);\n         za.setSize(payloadBytes.length);\n         za.setUnixMode(UnixStat.FILE_FLAG | 0664);\n         return za;\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStreamTest.java\n import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.InputStream;\n+import java.util.zip.ZipEntry;\n \n import static org.apache.commons.compress.AbstractTestCase.tryHardToDelete;\n import static org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.createZipArchiveEntryRequest;\n         final byte[] A_PAYLOAD = \"XAAY\".getBytes();\n \n         ZipArchiveEntry zab = new ZipArchiveEntry(\"b.txt\");\n-        zab.setMethod(ZipArchiveEntry.DEFLATED);\n+        zab.setMethod(ZipEntry.DEFLATED);\n         final ByteArrayInputStream payload = new ByteArrayInputStream(B_PAYLOAD);\n         scatterZipOutputStream.addArchiveEntry(createZipArchiveEntryRequest(zab, createPayloadSupplier(payload)));\n \n         ZipArchiveEntry zae = new ZipArchiveEntry(\"a.txt\");\n-        zae.setMethod(ZipArchiveEntry.DEFLATED);\n+        zae.setMethod(ZipEntry.DEFLATED);\n         ByteArrayInputStream payload1 = new ByteArrayInputStream(A_PAYLOAD);\n         scatterZipOutputStream.addArchiveEntry(createZipArchiveEntryRequest(zae, createPayloadSupplier(payload1)));\n ", "timestamp": 1459933600, "metainfo": ""}