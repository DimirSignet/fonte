{"sha": "7f35f894104c853b20590314c994356f942feb48", "log": "COMPRESS-147 test for available method  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java\n+++ b/src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java\n             }, out.toByteArray());\n     }\n \n+    public void testAvailable() throws Exception {\n+        final FileInputStream isSz = new FileInputStream(getFile(\"mixed.txt.sz\"));\n+        try {\n+            CompressorInputStream in = new FramedSnappyCompressorInputStream(isSz);\n+            assertEquals(0, in.available()); // no chunk read so far\n+            assertEquals('1', in.read());\n+            assertEquals(3, in.available()); // remainder of first uncompressed block\n+            assertEquals(3, in.read(new byte[5], 0, 3));\n+            assertEquals('5', in.read());\n+            assertEquals(4, in.available()); // remainder of literal\n+            assertEquals(4, in.read(new byte[5], 0, 4));\n+            assertEquals('5', in.read());\n+            assertEquals(19, in.available()); // remainder of copy\n+            in.close();\n+        } finally {\n+            isSz.close();\n+        }\n+    }\n+\n     private void testUnarchive(StreamWrapper<CompressorInputStream> wrapper) throws Exception {\n         final File input = getFile(\"bla.tar.sz\");\n         final File output = new File(dir, \"bla.tar\");", "timestamp": 1386430077, "metainfo": ""}