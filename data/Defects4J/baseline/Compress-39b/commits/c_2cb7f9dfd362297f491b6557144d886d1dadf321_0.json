{"sha": "2cb7f9dfd362297f491b6557144d886d1dadf321", "log": "Better ivar and param name (charsetName instead of charset).  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java\n     private static final int ARJ_MAGIC_1 = 0x60;\n     private static final int ARJ_MAGIC_2 = 0xEA;\n     private final DataInputStream in;\n-    private final String charset;\n+    private final String charsetName;\n     private final MainHeader mainHeader;\n     private LocalFileHeader currentLocalFileHeader = null;\n     private InputStream currentInputStream = null;\n     /**\n      * Constructs the ArjInputStream, taking ownership of the inputStream that is passed in.\n      * @param inputStream the underlying stream, whose ownership is taken\n-     * @param charset the charset used for file names and comments\n+     * @param charsetName the charset used for file names and comments\n      *   in the archive\n      * @throws ArchiveException\n      */\n     public ArjArchiveInputStream(final InputStream inputStream,\n-            final String charset) throws ArchiveException {\n+            final String charsetName) throws ArchiveException {\n         in = new DataInputStream(inputStream);\n-        this.charset = charset;\n+        this.charsetName = charsetName;\n         try {\n             mainHeader = readMainHeader();\n             if ((mainHeader.arjFlags & MainHeader.Flags.GARBLED) != 0) {\n         while ((nextByte = in.readUnsignedByte()) != 0) {\n             buffer.write(nextByte);\n         }\n-        if (charset != null) {\n-            return new String(buffer.toByteArray(), charset);\n+        if (charsetName != null) {\n+            return new String(buffer.toByteArray(), charsetName);\n         } else {\n             return new String(buffer.toByteArray());\n         }", "timestamp": 1382369498, "metainfo": ""}