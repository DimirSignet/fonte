{"sha": "ddb8f08c79b8568c9cba3af61fb5a613e0ccba22", "log": "COMPRESS-351 try to sanitize entry name in exception message", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n         while (remaining > 0) {\n             final long n = in.read(buf.array(), 0, (int) Math.min(buf.capacity(), remaining));\n             if (n < 0) {\n-                throw new EOFException(\"Truncated ZIP entry: \" + current.entry.getName());\n+                String name = current.entry.getName();\n+                int idx = firstUnprintableCharacter(current.entry.getName());\n+                if (idx >= 0) {\n+                    name = \"corrupted name starting with '\" + name.substring(0, idx) + \"'\";\n+                }\n+                throw new EOFException(\"Truncated ZIP entry: \" + name);\n             }\n             count(n);\n             remaining -= n;\n         return b == ZipArchiveOutputStream.EOCD_SIG[0];\n     }\n \n+    private int firstUnprintableCharacter(String name) {\n+        final char[] chars = name.toCharArray();\n+        final int len = chars.length;\n+        for (int i = 0; i < len; i++) {\n+            if (Character.isISOControl(chars[i]) || !Character.isDefined(chars[i])) {\n+                return i;\n+            }\n+        }\n+        return -1;\n+    }\n+\n     /**\n      * Structure collecting information for the entry that is\n      * currently being read.", "timestamp": 1460869584, "metainfo": ""}