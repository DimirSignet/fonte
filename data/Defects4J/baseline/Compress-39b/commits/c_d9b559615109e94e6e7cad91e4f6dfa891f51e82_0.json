{"sha": "d9b559615109e94e6e7cad91e4f6dfa891f51e82", "log": "COMPRESS-219 reading stored entries could try to read past the end of the internal buffer  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java\n             current.bytesReadFromStream += buf.lengthOfLastRead;\n         }\n \n-        int toRead = length > buf.lengthOfLastRead\n-            ? buf.lengthOfLastRead - buf.offsetInBuffer\n-            : length;\n+        int availableBytesInBuffer = buf.lengthOfLastRead - buf.offsetInBuffer;\n+        int toRead = Math.min(availableBytesInBuffer, length);\n         if ((csize - current.bytesRead) < toRead) {\n             // if it is smaller than toRead then it fits into an int\n             toRead = (int) (csize - current.bytesRead);\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java\n package org.apache.commons.compress.archivers.zip;\n \n import static org.apache.commons.compress.AbstractTestCase.getFile;\n+import static org.apache.commons.compress.AbstractTestCase.mkdir;\n+import static org.apache.commons.compress.AbstractTestCase.rmdir;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \n import java.io.BufferedInputStream;\n+import java.io.File;\n import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n \n import org.junit.Test;\n+import org.apache.commons.compress.utils.IOUtils;\n \n public class ZipArchiveInputStreamTest {\n \n         assertArrayEquals(expected, actual);\n         zip.close();\n     }\n+\n+    /**\n+     * @see \"https://issues.apache.org/jira/browse/COMPRESS-219\"\n+     */\n+    @Test\n+    public void shouldReadNestedZip() throws IOException {\n+        ZipArchiveInputStream in = null;\n+        try {\n+            in = new ZipArchiveInputStream(new FileInputStream(getFile(\"COMPRESS-219.zip\")));\n+            extractZipInputStream(in);\n+        } finally {\n+            if (in != null) {\n+                in.close();\n+            }\n+        }\n+    }\n+\n+    private void extractZipInputStream(final ZipArchiveInputStream in)\n+        throws IOException {\n+        ZipArchiveEntry zae = in.getNextZipEntry();\n+        while (zae != null) {\n+            if (zae.getName().endsWith(\".zip\")) {\n+                extractZipInputStream(new ZipArchiveInputStream(in));\n+            }\n+            zae = in.getNextZipEntry();\n+        }\n+    }\n }", "timestamp": 1361388159, "metainfo": ""}