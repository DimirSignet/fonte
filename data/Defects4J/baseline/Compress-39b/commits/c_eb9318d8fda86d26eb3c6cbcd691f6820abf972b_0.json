{"sha": "eb9318d8fda86d26eb3c6cbcd691f6820abf972b", "log": "[COMPRESS-240] ZipEncodingHelper.isUTF8(String) does not check all UTF-8 aliases.  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java\n import java.nio.charset.UnsupportedCharsetException;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n \n import org.apache.commons.compress.utils.CharsetNames;\n+import org.apache.commons.compress.utils.Charsets;\n \n /**\n  * Static helper functions for robustly encoding filenames in zip files. \n     static final String UTF8 = \"UTF8\";\n \n     /**\n-     * variant name of the encoding UTF-8 used for comparisions.\n-     */\n-    private static final String UTF_DASH_8 = CharsetNames.UTF_8;\n-\n-    /**\n      * name of the encoding UTF-8\n      */\n     static final ZipEncoding UTF8_ZIP_ENCODING = new FallbackZipEncoding(UTF8);\n     }\n \n     /**\n-     * Whether a given encoding - or the platform's default encoding\n-     * if the parameter is null - is UTF-8.\n-     */\n-    static boolean isUTF8(String encoding) {\n-        if (encoding == null) {\n+     * Returns whether a given encoding is UTF-8. If the given name is null, then check the platform's default encoding.\n+     * \n+     * @param charsetName\n+     *            If the given name is null, then check the platform's default encoding.\n+     */\n+    static boolean isUTF8(String charsetName) {\n+        if (charsetName == null) {\n             // check platform's default encoding\n-            encoding = System.getProperty(\"file.encoding\");\n-        }\n-        return UTF8.equalsIgnoreCase(encoding)\n-            || UTF_DASH_8.equalsIgnoreCase(encoding);\n+            charsetName = System.getProperty(\"file.encoding\");\n+        }\n+        if (Charsets.UTF_8.name().equalsIgnoreCase(charsetName)) {\n+            return true;\n+        }\n+        for (String alias : Charsets.UTF_8.aliases()) {\n+            if (alias.equalsIgnoreCase(charsetName)) {\n+                return true;\n+            }\n+        }\n+        return false;\n     }\n }", "timestamp": 1382372386, "metainfo": ""}