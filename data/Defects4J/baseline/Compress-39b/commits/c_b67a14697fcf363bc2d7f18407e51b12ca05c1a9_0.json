{"sha": "b67a14697fcf363bc2d7f18407e51b12ca05c1a9", "log": "Added buffering for random access which speeds up 7Z support. (by Dawid Weiss)  fixes https://github.com/apache/commons-compress/pull/7", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java\n  */\n package org.apache.commons.compress.archivers.sevenz;\n \n+import java.io.BufferedInputStream;\n import java.io.ByteArrayInputStream;\n import java.io.Closeable;\n import java.io.DataInput;\n     private InputStream buildDecoderStack(final Folder folder, final long folderOffset,\n                 final int firstPackStreamIndex, SevenZArchiveEntry entry) throws IOException {\n         file.seek(folderOffset);\n-        InputStream inputStreamStack = new BoundedRandomAccessFileInputStream(file,\n-                archive.packSizes[firstPackStreamIndex]);\n+        InputStream inputStreamStack =\n+            new BufferedInputStream(\n+              new BoundedRandomAccessFileInputStream(file,\n+                  archive.packSizes[firstPackStreamIndex]));\n         LinkedList<SevenZMethodConfiguration> methods = new LinkedList<SevenZMethodConfiguration>();\n         for (final Coder coder : folder.getOrderedCoders()) {\n             if (coder.numInStreams != 1 || coder.numOutStreams != 1) {", "timestamp": 1454509931, "metainfo": ""}