{"sha": "70d0fce30721b1ea616a7ca267e8e3be7e5a0e24", "log": "Use existing utility to simplify code and ensure string conversion uses fixed charset  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n \n import java.io.File;\n import java.io.IOException;\n-import java.nio.ByteBuffer;\n import java.util.Date;\n import java.util.Locale;\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n import org.apache.commons.compress.archivers.zip.ZipEncoding;\n+import org.apache.commons.compress.utils.ArchiveUtils;\n \n /**\n  * This class represents an entry in a Tar archive. It consists\n      * @return format type\n      */\n     private int evaluateType(byte[] header) {\n-        final ByteBuffer magic = ByteBuffer.wrap(header, MAGIC_OFFSET, MAGICLEN);\n-        if (magic.compareTo(ByteBuffer.wrap(MAGIC_GNU.getBytes())) == 0) {\n+        if (ArchiveUtils.matchAsciiBuffer(MAGIC_GNU, header, MAGIC_OFFSET, MAGICLEN)) {\n             return FORMAT_OLDGNU;\n         }\n-        if (magic.compareTo(ByteBuffer.wrap(MAGIC_POSIX.getBytes())) == 0) {\n+        if (ArchiveUtils.matchAsciiBuffer(MAGIC_POSIX, header, MAGIC_OFFSET, MAGICLEN)) {\n             return FORMAT_POSIX;\n         }\n         return 0;", "timestamp": 1333192750, "metainfo": ""}