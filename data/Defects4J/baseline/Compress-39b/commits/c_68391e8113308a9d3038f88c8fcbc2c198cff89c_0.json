{"sha": "68391e8113308a9d3038f88c8fcbc2c198cff89c", "log": "Don't use default encoding  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java\n         assertEquals('3', buffer[buffer.length-3]); // end of number\n     }\n     \n-    public void testNegative() {\n+    public void testNegative() throws Exception {\n         byte [] buffer = new byte[22];\n         TarUtils.formatUnsignedOctalString(-1, buffer, 0, buffer.length);\n-        assertEquals(\"1777777777777777777777\", new String(buffer));\n+        assertEquals(\"1777777777777777777777\", new String(buffer, \"UTF-8\"));\n     }\n \n-    public void testOverflow() {\n+    public void testOverflow() throws Exception {\n         byte [] buffer = new byte[8-1]; // a lot of the numbers have 8-byte buffers (nul term)\n         TarUtils.formatUnsignedOctalString(07777777L, buffer, 0, buffer.length);\n-        assertEquals(\"7777777\", new String(buffer));        \n+        assertEquals(\"7777777\", new String(buffer, \"UTF-8\"));        \n         try {\n             TarUtils.formatUnsignedOctalString(017777777L, buffer, 0, buffer.length);\n             fail(\"Should have cause IllegalArgumentException\");", "timestamp": 1329847580, "metainfo": ""}