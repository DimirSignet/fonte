{"sha": "44dbd93bc551ba4158024a3fa4f2defcf94b2b33", "log": "These classes are immutable, i.e. thread-safe  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n  * implementation from super of course)\n  * \n  * TODO add example here\n- * \n+ * @Immutable\n  */\n public class ArchiveStreamFactory {\n \n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioUtil.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioUtil.java\n  */\n package org.apache.commons.compress.archivers.cpio;\n \n+/**\n+ * Package private utility class for Cpio\n+ * \n+ * @Immutable\n+ */\n class CpioUtil {\n     /**\n      * Converts a byte array to a long. Halfwords can be swaped with setting\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java\n /**\n  * This class provides static utility methods to work with byte streams.\n  *\n+ * @Immutable\n  */\n // CheckStyle:HideUtilityClassConstructorCheck OFF (bc)\n public class TarUtils {\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/FallbackZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/FallbackZipEncoding.java\n  * available.</p>\n  * \n  * <p>The methods of this class are reentrant.</p>\n+ * @Immutable\n  */\n class FallbackZipEncoding implements ZipEncoding {\n     private final String charset;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/JarMarker.java\n /**\n  * If this extra field is added as the very first extra field of the\n  * archive, Solaris will consider it an executable jar file.\n+ * @Immutable\n  */\n public final class JarMarker implements ZipExtraField {\n \n--- a/src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java\n  * implementation, most notably the default ZIP encoding Cp437.</p>\n  * \n  * <p>The methods of this class are reentrant.</p>\n+ * @Immutable\n  */\n class NioZipEncoding implements ZipEncoding {\n     private final Charset charset;\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java\n /**\n  * Utility class that represents a four byte integer with conversion\n  * rules for the big endian byte order of ZIP files.\n+ * @Immutable\n  */\n public final class ZipLong implements Cloneable {\n \n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java\n /**\n  * Utility class that represents a two byte integer with conversion\n  * rules for the big endian byte order of ZIP files.\n- *\n+ * @Immutable\n  */\n public final class ZipShort implements Cloneable {\n     private static final int BYTE_MASK = 0xFF;\n--- a/src/main/java/org/apache/commons/compress/changes/Change.java\n+++ b/src/main/java/org/apache/commons/compress/changes/Change.java\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n \n-\n+/**\n+ * @Immutable\n+ */\n public class Change {\n \tprivate final String targetFile;\n \tprivate final ArchiveEntry entry;\n--- a/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java\n  * appropriate methods (and call their implementation from super of course)\n  * \n  * TODO add example here\n- * \n+ * @Immutable\n  */\n public class CompressorStreamFactory {\n \n--- a/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n+++ b/src/main/java/org/apache/commons/compress/utils/IOUtils.java\n import java.io.InputStream;\n import java.io.OutputStream;\n \n+/**\n+ * Utility functions\n+ * @Immutable\n+ */\n public final class IOUtils {\n \n \t/**", "timestamp": 1238198591, "metainfo": ""}