{"sha": "5dad11262d3331060cdb5fe1081079bdb5696f3f", "log": "Allow PAX headers to set sizes bigger than 8GiB.  COMPRESS-163.  Based on patch by John Kodis  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n     }\n \n     /**\n+     * Set this entry's file size.\n+     *\n+     * <p>Invoked by input stream when reading a PAX header.</p>\n+     * @throws IllegalArgumentException if the size is &lt; 0\n+     * @since Apache Commons Compress 1.4\n+     */\n+    void adjustSize(long size) {\n+        if (size < 0){\n+            throw new IllegalArgumentException(\"Size is out of range: \" + size);\n+        }\n+        this.size = size;\n+    }\n+\n+    /**\n      * Indicates in case of a sparse file if an extension sparse header\n      * follows.\n      *\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n             readGNUSparse();\n         }\n \n+        // If the size of the next element in the archive has changed\n+        // due to a new size being reported in the posix header\n+        // information, we update entrySize here so that it contains\n+        // the correct value.\n+        entrySize = currEntry.getSize();\n         return currEntry;\n     }\n \n             } else if (\"uname\".equals(key)){\n                 currEntry.setUserName(val);\n             } else if (\"size\".equals(key)){\n-                currEntry.setSize(Long.parseLong(val));\n+                currEntry.adjustSize(Long.parseLong(val));\n             }\n         }\n     }\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n         } catch (IllegalArgumentException expected) {\n         }\n     }\n+\n+    public void testAdjustFileSize(){\n+        TarArchiveEntry t = new TarArchiveEntry(\"\");\n+        t.adjustSize(0);\n+        t.adjustSize(1);\n+        try {\n+            t.adjustSize(-1);\n+            fail(\"Should have generated IllegalArgumentException\");\n+        } catch (IllegalArgumentException expected) {\n+        }\n+        t.adjustSize(077777777777L);\n+        t.adjustSize(0100000000000L);\n+    }\n }", "timestamp": 1323257674, "metainfo": ""}