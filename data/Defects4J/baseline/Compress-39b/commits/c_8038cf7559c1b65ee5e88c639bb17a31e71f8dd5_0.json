{"sha": "8038cf7559c1b65ee5e88c639bb17a31e71f8dd5", "log": "unused field  ", "commit": "\n--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java\n     public static final int LONGFILE_BSD = 1;\n \n     private final OutputStream out;\n-    private long archiveOffset = 0;\n     private long entryOffset = 0;\n     private ArArchiveEntry prevEntry;\n     private boolean haveUnclosedEntry = false;\n         }\n         if ((entryOffset % 2) != 0) {\n             out.write('\\n'); // Pad byte\n-            archiveOffset++;\n         }\n         haveUnclosedEntry = false;\n     }\n \n         ArArchiveEntry pArEntry = (ArArchiveEntry)pEntry;\n         if (prevEntry == null) {\n-            archiveOffset += writeArchiveHeader();\n+            writeArchiveHeader();\n         } else {\n             if (prevEntry.getLength() != entryOffset) {\n                 throw new IOException(\"length does not match entry (\" + prevEntry.getLength() + \" != \" + entryOffset);\n \n         prevEntry = pArEntry;\n \n-        archiveOffset += writeEntryHeader(pArEntry);\n+        writeEntryHeader(pArEntry);\n \n         entryOffset = 0;\n         haveUnclosedEntry = true;", "timestamp": 1319643305, "metainfo": ""}