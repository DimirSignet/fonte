{"sha": "a1d6b33f5f6c21f8f74a70edc3b05af42515e734", "log": "COMPRESS-351 Testcase", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import java.io.BufferedInputStream;\n+import java.io.EOFException;\n import java.io.FileInputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.util.Arrays;\n-import java.io.IOException;\n \n import org.apache.commons.compress.utils.IOUtils;\n import org.junit.Test;\n         }\n     }\n \n+    /**\n+     * Test case for\n+     * <a href=\"https://issues.apache.org/jira/browse/COMPRESS-351\"\n+     * >COMPRESS-351</a>.\n+     */\n+    @Test\n+    public void testMessageWithCorruptFileName() throws Exception {\n+        final ZipArchiveInputStream in = new ZipArchiveInputStream(new FileInputStream(getFile(\"COMPRESS-351.zip\")));\n+        try {\n+            ZipArchiveEntry ze = in.getNextZipEntry();\n+            while (ze != null) {\n+                ze = in.getNextZipEntry();\n+            }\n+            fail(\"expected EOFException\");\n+        } catch (EOFException ex) {\n+            String m = ex.getMessage();\n+            assertTrue(m.startsWith(\"Truncated ZIP entry: ?2016\")); // the first character is not printable\n+        } finally {\n+            in.close();\n+        }\n+    }\n+\n     @Test\n     public void testUnzipBZip2CompressedEntry() throws Exception {\n         final ZipArchiveInputStream in = new ZipArchiveInputStream(new FileInputStream(getFile(\"bzip2-zip.zip\")));", "timestamp": 1461570808, "metainfo": ""}