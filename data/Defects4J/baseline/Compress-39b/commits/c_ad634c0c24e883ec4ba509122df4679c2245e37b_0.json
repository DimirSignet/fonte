{"sha": "ad634c0c24e883ec4ba509122df4679c2245e37b", "log": "prepare for next development iteration  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java\n             .createArchiveOutputStream(ArchiveStreamFactory.TAR, fos);\n \n         File file1 = getFile(\"test1.xml\");\n-        TarArchiveEntry sEntry = new TarArchiveEntry(file1);\n+        TarArchiveEntry sEntry = new TarArchiveEntry(file1, file1.getName());\n         tarOut.putArchiveEntry(sEntry);\n \n         FileInputStream in = new FileInputStream(file1);\n         FileOutputStream fos = new FileOutputStream(f);\n         TarArchiveOutputStream tos = new TarArchiveOutputStream(fos);\n         File file1 = getFile(\"test1.xml\");\n-        TarArchiveEntry sEntry = new TarArchiveEntry(file1);\n+        TarArchiveEntry sEntry = new TarArchiveEntry(file1, file1.getName());\n         tos.putArchiveEntry(sEntry);\n         FileInputStream in = new FileInputStream(file1);\n         IOUtils.copy(in, tos);\n         in.close();\n         tos.closeArchiveEntry();\n         tos.close();\n-        // test1.xml is small enough to fit into the default blockv size\n+        // test1.xml is small enough to fit into the default block size\n         assertEquals(TarConstants.DEFAULT_BLKSIZE, f.length());\n     }\n ", "timestamp": 1390195229, "metainfo": ""}