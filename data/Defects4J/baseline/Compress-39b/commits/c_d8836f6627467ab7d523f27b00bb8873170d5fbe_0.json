{"sha": "d8836f6627467ab7d523f27b00bb8873170d5fbe", "log": "Exception not thrown  ", "commit": "\n--- a/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n+++ b/src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java\n         t.setSize(0100000000000L);\n     }\n \n-    public void testLinkFlagConstructor() throws IOException {\n+    public void testLinkFlagConstructor() {\n         TarArchiveEntry t = new TarArchiveEntry(\"/foo\", LF_GNUTYPE_LONGNAME);\n         assertGnuMagic(t);\n         assertEquals(\"foo\", t.getName());\n     }\n \n-    public void testLinkFlagConstructorWithFileFlag() throws IOException {\n+    public void testLinkFlagConstructorWithFileFlag() {\n         TarArchiveEntry t = new TarArchiveEntry(\"/foo\", LF_NORMAL);\n         assertPosixMagic(t);\n         assertEquals(\"foo\", t.getName());\n     }\n \n-    public void testLinkFlagConstructorWithPreserve() throws IOException {\n+    public void testLinkFlagConstructorWithPreserve() {\n         TarArchiveEntry t = new TarArchiveEntry(\"/foo\", LF_GNUTYPE_LONGNAME,\n                                                 true);\n         assertGnuMagic(t);\n         assertEquals(\"/foo\", t.getName());\n     }\n \n-    private void assertGnuMagic(TarArchiveEntry t) throws IOException {\n+    private void assertGnuMagic(TarArchiveEntry t) {\n         assertEquals(MAGIC_GNU + VERSION_GNU_SPACE, readMagic(t));\n     }\n \n-    private void assertPosixMagic(TarArchiveEntry t) throws IOException {\n+    private void assertPosixMagic(TarArchiveEntry t) {\n         assertEquals(MAGIC_POSIX + VERSION_POSIX, readMagic(t));\n     }\n \n-    private String readMagic(TarArchiveEntry t) throws IOException {\n+    private String readMagic(TarArchiveEntry t) {\n         byte[] buf = new byte[512];\n         t.writeEntryHeader(buf);\n         return new String(buf, MAGIC_OFFSET, MAGICLEN + VERSIONLEN);", "timestamp": 1357868864, "metainfo": ""}