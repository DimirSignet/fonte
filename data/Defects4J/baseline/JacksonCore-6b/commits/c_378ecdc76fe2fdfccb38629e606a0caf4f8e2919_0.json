{"sha": "378ecdc76fe2fdfccb38629e606a0caf4f8e2919", "log": "Improvements to JsonFactory.copy()", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n \n     public JsonFactory(ObjectCodec oc) { _objectCodec = oc; }\n \n+    /**\n+     * Method for constructing a new {@link JsonFactory} that has\n+     * the same settings as this instance, but is otherwise\n+     * independent (i.e. nothing is actually shared, symbol tables\n+     * are separate).\n+     * Note that {@link ObjectCodec} reference is not copied but is\n+     * set to null; caller typically needs to set it after calling\n+     * this method.\n+     * \n+     * @since 2.1\n+     */\n+    public JsonFactory copy()\n+    {\n+        _checkInvalidCopy(JsonFactory.class);\n+        return new JsonFactory(null);\n+    }\n+\n+    /**\n+     * @since 2.1\n+     * @param exp\n+     */\n+    protected void _checkInvalidCopy(Class<?> exp)\n+    {\n+        if (getClass() != exp) {\n+            throw new IllegalStateException(\"Failed copy(): \"+getClass().getName()\n+                    +\" (version: \"+version()+\") does not override copy(); it has to\");\n+        }\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Format detection functionality (since 1.8)", "timestamp": 1344122847, "metainfo": ""}