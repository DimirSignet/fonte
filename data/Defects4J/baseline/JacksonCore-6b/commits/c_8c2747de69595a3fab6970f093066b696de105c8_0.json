{"sha": "8c2747de69595a3fab6970f093066b696de105c8", "log": "Fix #55 in master", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n         maxRead = Math.min(maxRead, readBuffer.length);\n         \n         do {\n-            int count = in.read(readBuffer, inputEnd, maxRead - inputEnd);\n+            int length = maxRead - inputEnd;\n+            if (length == 0) {\n+                break;\n+            }\n+            int count = in.read(readBuffer, inputEnd, length);            \n             if (count < 0) {\n                 return inputEnd;\n             }\n--- a/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java\n         maxRead = Math.min(maxRead, readBuffer.length);\n         \n         do {\n-            int count = in.read(readBuffer, inputEnd, maxRead - inputEnd);\n+            int length = maxRead - inputEnd;\n+            if (length == 0) {\n+                break;\n+            }\n+            int count = in.read(readBuffer, inputEnd, length);            \n             if (count < 0) {\n                 return inputEnd;\n             }\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java\n     public void testStreamingWrites() throws Exception\n     {\n         final JsonFactory f = new JsonFactory();\n-//        _testStreamingWrites(f, true);\n+        _testStreamingWrites(f, true);\n         _testStreamingWrites(f, false);\n     }\n \n+    // For [#55]\n+    public void testIssue55() throws Exception\n+    {\n+        final JsonFactory f = new JsonFactory();\n+\n+        // First,  byte-backed:\n+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+\n+        JsonGenerator gen = f.createGenerator(bytes);\n+        ByteArrayInputStream data = new ByteArrayInputStream(new byte[2000]);\n+        gen.writeBinary(data, 1999);       \n+        gen.close();\n+\n+        final int EXP_LEN = 2670;\n+        \n+        assertEquals(EXP_LEN, bytes.size());\n+\n+        // Then char-backed\n+        StringWriter sw = new StringWriter();\n+        \n+        gen = f.createGenerator(sw);\n+        data = new ByteArrayInputStream(new byte[2000]);\n+        gen.writeBinary(data, 1999);       \n+        gen.close();\n+        \n+        assertEquals(EXP_LEN, sw.toString().length());\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Helper methods", "timestamp": 1361919072, "metainfo": ""}