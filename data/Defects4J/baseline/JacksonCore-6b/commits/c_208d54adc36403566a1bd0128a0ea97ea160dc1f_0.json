{"sha": "208d54adc36403566a1bd0128a0ea97ea160dc1f", "log": "Improve comment-handling for char-based sources too", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n         ++_currInputRow;\n         _currInputRowStart = _inputPtr;\n     }\n-\n-    /*\n-    private final int _skipCR(int ptr) throws IOException {\n-        if (ptr < _inputEnd) {\n-            if (_inputBuffer[ptr] == '\\n') {\n-                ++ptr;\n-            }\n-        } else {\n-            _inputPtr = ptr;\n-            if (loadMore()) {\n-                ptr = _inputPtr;\n-                if (_inputBuffer[ptr] == '\\n') {\n-                    ++ptr;\n-                }\n-            }\n-        }\n-        ++_currInputRow;\n-        _currInputRowStart = ptr;\n-        return ptr;\n-    }\n-    */\n     \n     private final int _skipColon() throws IOException\n     {\n         char c = _inputBuffer[_inputPtr];\n         if (c == ':') { // common case, no leading space\n             int i = _inputBuffer[++_inputPtr];\n-            if (i > 32) { // nor trailing\n+            if (i > INT_SPACE) { // nor trailing\n+                if (i == INT_SLASH || i == INT_HASH) {\n+                    return _skipColon2(true);\n+                }\n                 ++_inputPtr;\n                 return i;\n             }\n             if (i == INT_SPACE || i == INT_TAB) {\n                 i = (int) _inputBuffer[++_inputPtr];\n-                if (i > 32) {\n+                if (i > INT_SPACE) {\n+                    if (i == INT_SLASH || i == INT_HASH) {\n+                        return _skipColon2(true);\n+                    }\n                     ++_inputPtr;                    \n                     return i;\n                 }\n         }\n         if (c == ':') {\n             int i = _inputBuffer[++_inputPtr];\n-            if (i > 32) {\n+            if (i > INT_SPACE) {\n+                if (i == INT_SLASH || i == INT_HASH) {\n+                    return _skipColon2(true);\n+                }\n                 ++_inputPtr;\n                 return i;\n             }\n             if (i == INT_SPACE || i == INT_TAB) {\n                 i = (int) _inputBuffer[++_inputPtr];\n-                if (i > 32) {\n+                if (i > INT_SPACE) {\n+                    if (i == INT_SLASH || i == INT_HASH) {\n+                        return _skipColon2(true);\n+                    }\n                     ++_inputPtr;\n                     return i;\n                 }", "timestamp": 1398965430, "metainfo": ""}