{"sha": "d24c974d4dca29990958f9e8e3a2140f17c1ae9c", "log": "undo previous add: figured this should be done fully at databind level", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n      * additional processing on output during content generation.\n      */\n     protected OutputDecorator _outputDecorator;\n-\n-    /**\n-     * Default {@link Base64Variant} to use for encoding and decoding\n-     * Base64 content, unless variant is explicitly specified.\n-     * \n-     * @since 2.1\n-     */\n-    protected Base64Variant _defaultBase64 = Base64Variants.getDefaultVariant();\n     \n     /*\n     /**********************************************************\n \n     public ObjectCodec getCodec() { return _objectCodec; }\n \n-    /**\n-     * Method for overriding default {@link Base64Variant} to use\n-     * for Base64 encoding\n-     * \n-     * @since 2.1\n-     */\n-    public JsonFactory setDefaultBase64(Base64Variant v) {\n-        _defaultBase64 = (v == null) ? Base64Variants.getDefaultVariant() : v;\n-        return this;\n-    }\n-\n-    public Base64Variant getDefaultBase64() {\n-        return _defaultBase64;\n-    }\n-    \n     /*\n     /**********************************************************\n     /* Parser factories (new ones, as per [Issue-25])", "timestamp": 1344916128, "metainfo": ""}