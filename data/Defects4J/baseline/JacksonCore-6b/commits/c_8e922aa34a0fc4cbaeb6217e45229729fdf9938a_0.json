{"sha": "8e922aa34a0fc4cbaeb6217e45229729fdf9938a", "log": "Minor improvement to JsonProcessingException, to allow better exception msgs", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java\n {\n     final static long serialVersionUID = 123; // Stupid eclipse...\n \t\n-    protected JsonLocation mLocation;\n+    protected JsonLocation _location;\n \n     protected JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)\n     {\n         if (rootCause != null) {\n             initCause(rootCause);\n         }\n-        mLocation = loc;\n+        _location = loc;\n     }\n \n     protected JsonProcessingException(String msg)\n         this(null, null, rootCause);\n     }\n \n-    public JsonLocation getLocation()\n-    {\n-        return mLocation;\n+    public JsonLocation getLocation() {\n+        return _location;\n+    }\n+    \n+    /*\n+    /**********************************************************\n+    /* Methods for sub-classes to use, override\n+    /**********************************************************\n+     */\n+    \n+    /**\n+     * Accessor that sub-classes can override to append additional\n+     * information right after the main message, but before\n+     * source location information.\n+     */\n+    protected String getMessageSuffix() {\n+        return null;\n     }\n \n+    /*\n+    /**********************************************************\n+    /* Overrides of standard methods\n+    /**********************************************************\n+     */\n+    \n     /**\n      * Default method overridden so that we can add location information\n      */\n             msg = \"N/A\";\n         }\n         JsonLocation loc = getLocation();\n-        if (loc != null) {\n-            StringBuilder sb = new StringBuilder();\n+        String suffix = getMessageSuffix();\n+        // mild optimization, if nothing extra is needed:\n+        if (loc != null || suffix != null) {\n+            StringBuilder sb = new StringBuilder(100);\n             sb.append(msg);\n-            sb.append('\\n');\n-            sb.append(\" at \");\n-            sb.append(loc.toString());\n-            return sb.toString();\n+            if (suffix != null) {\n+                sb.append(suffix);\n+            }\n+            if (loc != null) {\n+                sb.append('\\n');\n+                sb.append(\" at \");\n+                sb.append(loc.toString());\n+            }\n+            msg = sb.toString();\n         }\n         return msg;\n     }", "timestamp": 1332201094, "metainfo": ""}