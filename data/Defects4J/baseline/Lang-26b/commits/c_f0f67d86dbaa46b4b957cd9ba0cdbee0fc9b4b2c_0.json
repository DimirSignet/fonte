{"sha": "f0f67d86dbaa46b4b957cd9ba0cdbee0fc9b4b2c", "log": "Add isTrue/isFalse methods  ", "commit": "\n--- a/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n \n     //-----------------------------------------------------------------------\n     /**\n+     * Checks if the current value is <code>true</code>.\n+     * \n+     * @return <code>true</code> if the current value is <code>true</code>\n+     */\n+    public boolean isTrue() {\n+        return value == true;\n+    }\n+\n+    /**\n+     * Checks if the current value is <code>false</code>.\n+     * \n+     * @return <code>true</code> if the current value is <code>false</code>\n+     */\n+    public boolean isFalse() {\n+        return value == false;\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Returns the value of this MutableBoolean as a boolean.\n      * \n      * @return the boolean value represented by this object.\n--- a/src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java\n         final MutableBoolean mutBool = new MutableBoolean(false);\n         assertEquals(Boolean.FALSE, mutBool.toBoolean());\n         assertEquals(false, mutBool.booleanValue());\n+        assertEquals(true, mutBool.isFalse());\n+        assertEquals(false, mutBool.isTrue());\n \n         mutBool.setValue(Boolean.TRUE);\n         assertEquals(Boolean.TRUE, mutBool.toBoolean());\n         assertEquals(true, mutBool.booleanValue());\n+        assertEquals(false, mutBool.isFalse());\n+        assertEquals(true, mutBool.isTrue());\n \n         mutBool.setValue(false);\n         assertEquals(false, mutBool.booleanValue());", "timestamp": 1256601221, "metainfo": ""}