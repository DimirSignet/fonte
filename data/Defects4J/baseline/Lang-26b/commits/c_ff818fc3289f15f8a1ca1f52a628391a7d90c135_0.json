{"sha": "ff818fc3289f15f8a1ca1f52a628391a7d90c135", "log": "add'l splitByCharacterType tests for single trailing characters  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n      * StringUtils.splitByCamelCase(\"ab de fg\")   = [\"ab\", \" \", \"de\", \" \", \"fg\"]\n      * StringUtils.splitByCamelCase(\"ab   de fg\") = [\"ab\", \"   \", \"de\", \" \", \"fg\"]\n      * StringUtils.splitByCamelCase(\"ab:cd:ef\")   = [\"ab\", \":\", \"cd\", \":\", \"ef\"]\n+     * StringUtils.splitByCamelCase(\"number5\")   = [\"number\", \"5\"]\n      * StringUtils.splitByCamelCase(\"fooBar\")     = [\"foo\", \"B\", \"ar\"]\n      * StringUtils.splitByCamelCase(\"foo200Bar\")  = [\"foo\", \"200\", \"B\", \"ar\"]\n      * StringUtils.splitByCamelCase(\"ASFRules\")   = [\"ASFR\", \"ules\"]\n      * StringUtils.splitByCamelCase(\"ab de fg\")   = [\"ab\", \" \", \"de\", \" \", \"fg\"]\n      * StringUtils.splitByCamelCase(\"ab   de fg\") = [\"ab\", \"   \", \"de\", \" \", \"fg\"]\n      * StringUtils.splitByCamelCase(\"ab:cd:ef\")   = [\"ab\", \":\", \"cd\", \":\", \"ef\"]\n+     * StringUtils.splitByCamelCase(\"number5\")   = [\"number\", \"5\"]\n      * StringUtils.splitByCamelCase(\"fooBar\")     = [\"foo\", \"Bar\"]\n      * StringUtils.splitByCamelCase(\"foo200Bar\")  = [\"foo\", \"200\", \"Bar\"]\n      * StringUtils.splitByCamelCase(\"ASFRules\")   = [\"ASF\", \"Rules\"]\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n \n         assertTrue(ArrayUtils.isEquals(new String[] { \"ab\", \":\", \"cd\", \":\",\n                 \"ef\" }, StringUtils.splitByCharacterType(\"ab:cd:ef\", camelCase)));\n+        \n+        assertTrue(ArrayUtils.isEquals(new String[] { \"number\", \"5\" },\n+                StringUtils.splitByCharacterType(\"number5\")));\n+        \n+        assertTrue(ArrayUtils.isEquals(new String[] { \"number\", \"5\" },\n+                StringUtils.splitByCharacterType(\"number5\", camelCase)));\n \n         assertTrue(ArrayUtils.isEquals(new String[] { \"foo\", \"B\", \"ar\" },\n                 StringUtils.splitByCharacterType(\"fooBar\")));\n \n         assertTrue(ArrayUtils.isEquals(new String[] { \"ASF\", \"Rules\" },\n                 StringUtils.splitByCharacterType(\"ASFRules\", camelCase)));\n-\n     }\n \n     public void testDeprecatedDeleteSpace_String() {", "timestamp": 1200083162, "metainfo": ""}