{"sha": "2309edc9e7ff3170a5bddc38f163ca078ae3c0ce", "log": "Add toString  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrTokenizer.java\n+++ b/src/java/org/apache/commons/lang/text/StrTokenizer.java\n      * @return the string content being parsed\n      */\n     public String getContent() {\n+        if (chars == null) {\n+            return null;\n+        }\n         return new String(chars);\n     }\n \n     //-----------------------------------------------------------------------\n     /**\n-     * Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token\n-     * list. If a {@link CloneNotSupportedException} is caught, return <code>null</code>.\n+     * Creates a new instance of this Tokenizer. The new instance is reset so\n+     * that it will be at the start of the token list.\n+     * If a {@link CloneNotSupportedException} is caught, return <code>null</code>.\n      * \n      * @return a new instance of this Tokenizer which has been reset.\n      */\n     }\n \n     /**\n-     * Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token\n-     * list.\n+     * Creates a new instance of this Tokenizer. The new instance is reset so that\n+     * it will be at the start of the token list.\n      * \n      * @return a new instance of this Tokenizer which has been reset.\n      * @throws CloneNotSupportedException if there is a problem cloning\n         return cloned;\n     }\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the String content that the tokenizer is parsing.\n+     *\n+     * @return the string content being parsed\n+     */\n+    public String toString() {\n+        if (tokens == null) {\n+            return \"StrTokenizer[not tokenized yet]\";\n+        } else {\n+            return \"StrTokenizer\" + getTokenList();\n+        }\n+    }\n+\n }\n--- a/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrTokenizerTest.java\n \n         tok = new StrTokenizer(input.toCharArray());\n         assertEquals(input, tok.getContent());\n+        \n+        tok = new StrTokenizer();\n+        assertEquals(null, tok.getContent());\n     }\n \n     //-----------------------------------------------------------------------\n         assertEquals(\"a\", tkn.next());\n     }\n \n+    //-----------------------------------------------------------------------\n+    public void testToString() {\n+        StrTokenizer tkn = new StrTokenizer(\"a b c d e\");\n+        assertEquals(\"StrTokenizer[not tokenized yet]\", tkn.toString());\n+        tkn.next();\n+        assertEquals(\"StrTokenizer[a, b, c, d, e]\", tkn.toString());\n+    }\n+\n }", "timestamp": 1153591767, "metainfo": ""}