{"sha": "1d99bf252bf815fd632d198d8358459763f0da59", "log": "Fix indexOf and lastIndexOf with null input  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n      */\n     public int indexOf(String str, int startIndex) {\n         startIndex = (startIndex < 0 ? 0 : startIndex);\n-        if (startIndex >= size) {\n+        if (str == null || startIndex >= size) {\n             return -1;\n         }\n-        int strLen = (str == null ? 0 : str.length());\n+        int strLen = str.length();\n         if (strLen > 0 && strLen <= size) {\n             if (strLen == 1) {\n                 return indexOf(str.charAt(0), startIndex);\n      */\n     public int lastIndexOf(String str, int startIndex) {\n         startIndex = (startIndex >= size ? size - 1 : startIndex);\n-        if (startIndex < 0) {\n+        if (str == null || startIndex < 0) {\n             return -1;\n         }\n-        int strLen = (str == null ? 0 : str.length());\n+        int strLen = str.length();\n         if (strLen > 0 && strLen <= size) {\n             if (strLen == 1) {\n                 return lastIndexOf(str.charAt(0), startIndex);\n--- a/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/text/StrBuilderTest.java\n     public void testIndexOfString() {\n         StrBuilder sb = new StrBuilder(\"abab\");\n         \n-        assertEquals (0, sb.indexOf(\"a\"));\n+        assertEquals(0, sb.indexOf(\"a\"));\n         //should work like String#indexOf\n-        assertEquals (\"abab\".indexOf(\"a\"), sb.indexOf(\"a\"));\n-        \n-        assertEquals (0, sb.indexOf(\"ab\"));\n+        assertEquals(\"abab\".indexOf(\"a\"), sb.indexOf(\"a\"));\n+        \n+        assertEquals(0, sb.indexOf(\"ab\"));\n         //should work like String#indexOf\n-        assertEquals (\"abab\".indexOf(\"ab\"), sb.indexOf(\"ab\"));\n+        assertEquals(\"abab\".indexOf(\"ab\"), sb.indexOf(\"ab\"));\n         \n         assertEquals(1, sb.indexOf(\"b\"));\n-        assertEquals (\"abab\".indexOf(\"b\"), sb.indexOf(\"b\"));\n+        assertEquals(\"abab\".indexOf(\"b\"), sb.indexOf(\"b\"));\n         \n         assertEquals(1, sb.indexOf(\"ba\"));\n-        assertEquals (\"abab\".indexOf(\"ba\"), sb.indexOf(\"ba\"));\n-        \n-        assertEquals (-1, sb.indexOf(\"z\"));\n+        assertEquals(\"abab\".indexOf(\"ba\"), sb.indexOf(\"ba\"));\n+        \n+        assertEquals(-1, sb.indexOf(\"z\"));\n+        \n+        assertEquals(-1, sb.indexOf((String) null));\n     }\n     \n     public void testLastIndexOfString() {\n         StrBuilder sb = new StrBuilder(\"abab\");\n         \n-        assertEquals (2, sb.lastIndexOf(\"a\"));\n+        assertEquals(2, sb.lastIndexOf(\"a\"));\n         //should work like String#lastIndexOf\n-        assertEquals (\"abab\".lastIndexOf(\"a\"), sb.lastIndexOf(\"a\"));\n-        \n-        assertEquals (2, sb.lastIndexOf(\"ab\"));\n+        assertEquals(\"abab\".lastIndexOf(\"a\"), sb.lastIndexOf(\"a\"));\n+        \n+        assertEquals(2, sb.lastIndexOf(\"ab\"));\n         //should work like String#lastIndexOf\n-        assertEquals (\"abab\".lastIndexOf(\"ab\"), sb.lastIndexOf(\"ab\"));\n+        assertEquals(\"abab\".lastIndexOf(\"ab\"), sb.lastIndexOf(\"ab\"));\n         \n         assertEquals(3, sb.lastIndexOf(\"b\"));\n-        assertEquals (\"abab\".lastIndexOf(\"b\"), sb.lastIndexOf(\"b\"));\n+        assertEquals(\"abab\".lastIndexOf(\"b\"), sb.lastIndexOf(\"b\"));\n         \n         assertEquals(1, sb.lastIndexOf(\"ba\"));\n-        assertEquals (\"abab\".lastIndexOf(\"ba\"), sb.lastIndexOf(\"ba\"));\n-        \n-        assertEquals (-1, sb.lastIndexOf(\"z\"));\n+        assertEquals(\"abab\".lastIndexOf(\"ba\"), sb.lastIndexOf(\"ba\"));\n+        \n+        assertEquals(-1, sb.lastIndexOf(\"z\"));\n+        \n+        assertEquals(-1, sb.lastIndexOf((String) null));\n     }\n     \n     public void testIndexOfStringInt() {\n         StrBuilder sb = new StrBuilder(\"abab\");\n         \n-        assertEquals (2, sb.indexOf(\"a\", 1));\n+        assertEquals(2, sb.indexOf(\"a\", 1));\n         //should work like String#indexOf\n         assertEquals (\"abab\".indexOf(\"a\", 1), sb.indexOf(\"a\", 1));\n         \n-        assertEquals (2, sb.indexOf(\"ab\", 1));\n+        assertEquals(2, sb.indexOf(\"ab\", 1));\n         //should work like String#indexOf\n-        assertEquals (\"abab\".indexOf(\"ab\", 1), sb.indexOf(\"ab\", 1));\n+        assertEquals(\"abab\".indexOf(\"ab\", 1), sb.indexOf(\"ab\", 1));\n         \n         assertEquals(3, sb.indexOf(\"b\", 2));\n-        assertEquals (\"abab\".indexOf(\"b\", 2), sb.indexOf(\"b\", 2));\n+        assertEquals(\"abab\".indexOf(\"b\", 2), sb.indexOf(\"b\", 2));\n         \n         assertEquals(1, sb.indexOf(\"ba\", 1));\n-        assertEquals (\"abab\".indexOf(\"ba\", 2), sb.indexOf(\"ba\", 2));\n-        \n-        assertEquals (-1, sb.indexOf(\"z\", 2));\n+        assertEquals(\"abab\".indexOf(\"ba\", 2), sb.indexOf(\"ba\", 2));\n+        \n+        assertEquals(-1, sb.indexOf(\"z\", 2));\n         \n         sb = new StrBuilder(\"xyzabc\");\n-        assertEquals (2, sb.indexOf(\"za\", 0));\n-        assertEquals (-1, sb.indexOf(\"za\", 3));\n+        assertEquals(2, sb.indexOf(\"za\", 0));\n+        assertEquals(-1, sb.indexOf(\"za\", 3));\n+        \n+        assertEquals(-1, sb.indexOf((String) null, 2));\n     }\n     \n     public void testLastIndexOfStringInt() {\n         StrBuilder sb = new StrBuilder(\"abab\");\n         \n-        assertEquals (0, sb.lastIndexOf(\"a\", 1));\n+        assertEquals(0, sb.lastIndexOf(\"a\", 1));\n         //should work like String#lastIndexOf\n-        assertEquals (\"abab\".lastIndexOf(\"a\", 1), sb.lastIndexOf(\"a\", 1));\n-        \n-        assertEquals (0, sb.lastIndexOf(\"ab\", 1));\n+        assertEquals(\"abab\".lastIndexOf(\"a\", 1), sb.lastIndexOf(\"a\", 1));\n+        \n+        assertEquals(0, sb.lastIndexOf(\"ab\", 1));\n         //should work like String#lastIndexOf\n-        assertEquals (\"abab\".lastIndexOf(\"ab\", 1), sb.lastIndexOf(\"ab\", 1));\n+        assertEquals(\"abab\".lastIndexOf(\"ab\", 1), sb.lastIndexOf(\"ab\", 1));\n         \n         assertEquals(1, sb.lastIndexOf(\"b\", 2));\n-        assertEquals (\"abab\".lastIndexOf(\"b\", 2), sb.lastIndexOf(\"b\", 2));\n+        assertEquals(\"abab\".lastIndexOf(\"b\", 2), sb.lastIndexOf(\"b\", 2));\n         \n         assertEquals(1, sb.lastIndexOf(\"ba\", 2));\n-        assertEquals (\"abab\".lastIndexOf(\"ba\", 2), sb.lastIndexOf(\"ba\", 2));\n-        \n-        assertEquals (-1, sb.lastIndexOf(\"z\", 2));\n+        assertEquals(\"abab\".lastIndexOf(\"ba\", 2), sb.lastIndexOf(\"ba\", 2));\n+        \n+        assertEquals(-1, sb.lastIndexOf(\"z\", 2));\n         \n         sb = new StrBuilder(\"xyzabc\");\n-        assertEquals (2, sb.lastIndexOf(\"za\", sb.length()));\n-        assertEquals (-1, sb.lastIndexOf(\"za\", 1));\n+        assertEquals(2, sb.lastIndexOf(\"za\", sb.length()));\n+        assertEquals(-1, sb.lastIndexOf(\"za\", 1));\n+        \n+        assertEquals(-1, sb.lastIndexOf((String) null, 2));\n     }\n     \n     public void testContainsChar() {", "timestamp": 1123542904, "metainfo": ""}