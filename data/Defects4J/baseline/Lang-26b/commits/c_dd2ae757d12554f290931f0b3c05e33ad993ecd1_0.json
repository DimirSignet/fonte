{"sha": "dd2ae757d12554f290931f0b3c05e33ad993ecd1", "log": "Applying Alexander Kjall's patch from LANG-480; along with a unit test made from his example. Fixes unicode conversion above U+00FFFF being done into 2 characters  ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n     public void escape(Writer writer, String str) throws IOException {\n         int len = str.length();\n         for (int i = 0; i < len; i++) {\n-            char c = str.charAt(i);\n+            int c = Character.codePointAt(str, i); \n             String entityName = this.entityName(c);\n             if (entityName == null) {\n-                if (c > 0x7F) {\n+                if (c >= 0x010000 && i < len - 1) {\n+                    writer.write(\"&#\");\n+                    writer.write(Integer.toString(c, 10));\n+                    writer.write(';');\n+                    i++;\n+                } else if (c > 0x7F) { \n                     writer.write(\"&#\");\n                     writer.write(Integer.toString(c, 10));\n                     writer.write(';');\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n             fail(\"Threw: \" + e);\n         }\n     }\n+\n+    // https://issues.apache.org/jira/browse/LANG-480\n+    public void testEscapeHtmlHighUnicode() throws java.io.UnsupportedEncodingException {\n+        // this is the utf8 representation of the character:\n+        // COUNTING ROD UNIT DIGIT THREE\n+        // in unicode\n+        // codepoint: U+1D362\n+        byte[] data = new byte[] { (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 };\n+\n+        String escaped = StringEscapeUtils.escapeHtml( new String(data, \"UTF8\") );\n+        String unescaped = StringEscapeUtils.unescapeHtml( escaped );\n+\n+        assertEquals( \"High unicode was not escaped correctly\", \"&#119650;\", escaped);\n+    }\n }", "timestamp": 1235940880, "metainfo": ""}