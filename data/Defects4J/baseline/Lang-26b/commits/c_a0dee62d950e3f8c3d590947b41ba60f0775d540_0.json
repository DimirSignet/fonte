{"sha": "a0dee62d950e3f8c3d590947b41ba60f0775d540", "log": "Add StringUtils.defaultIfEmpty  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n      * <code>null</code>, the value of <code>defaultStr</code>.</p>\n      *\n      * <pre>\n-     * StringUtils.defaultString(null, \"null\")  = \"null\"\n-     * StringUtils.defaultString(\"\", \"null\")    = \"\"\n-     * StringUtils.defaultString(\"bat\", \"null\") = \"bat\"\n+     * StringUtils.defaultString(null, \"NULL\")  = \"NULL\"\n+     * StringUtils.defaultString(\"\", \"NULL\")    = \"\"\n+     * StringUtils.defaultString(\"bat\", \"NULL\") = \"bat\"\n      * </pre>\n      *\n      * @see ObjectUtils#toString(Object,String)\n      */\n     public static String defaultString(String str, String defaultStr) {\n         return str == null ? defaultStr : str;\n+    }\n+\n+    /**\n+     * <p>Returns either the passed in String, or if the String is\n+     * empty or <code>null</code>, the value of <code>defaultStr</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.defaultIfEmpty(null, \"NULL\")  = \"NULL\"\n+     * StringUtils.defaultIfEmpty(\"\", \"NULL\")    = \"NULL\"\n+     * StringUtils.defaultIfEmpty(\"bat\", \"NULL\") = \"bat\"\n+     * </pre>\n+     *\n+     * @see StringUtils#defaultString(String, String)\n+     * @param str  the String to check, may be null\n+     * @param defaultStr  the default String to return\n+     *  if the input is empty (\"\") or <code>null</code>, may be null\n+     * @return the passed in String, or the default\n+     */\n+    public static String defaultIfEmpty(String str, String defaultStr) {\n+        return StringUtils.isEmpty(str) ? defaultStr : str;\n     }\n \n     // Reversing\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n \n     //-----------------------------------------------------------------------\n     public void testDefault_String() {\n-        assertEquals(\"\", StringUtils.defaultString(null) );\n-        assertEquals(\"\", StringUtils.defaultString(\"\") );\n-        assertEquals(\"abc\", StringUtils.defaultString(\"abc\") );\n-    }\n-            \n+        assertEquals(\"\", StringUtils.defaultString(null));\n+        assertEquals(\"\", StringUtils.defaultString(\"\"));\n+        assertEquals(\"abc\", StringUtils.defaultString(\"abc\"));\n+    }\n+\n     public void testDefault_StringString() {\n-        assertEquals(\"xyz\", StringUtils.defaultString(null, \"xyz\") );\n-        assertEquals(\"\", StringUtils.defaultString(\"\", \"xyz\") );\n-        assertEquals(\"abc\", StringUtils.defaultString(\"abc\", \"xyz\") );\n-    }\n-    \n+        assertEquals(\"NULL\", StringUtils.defaultString(null, \"NULL\"));\n+        assertEquals(\"\", StringUtils.defaultString(\"\", \"NULL\"));\n+        assertEquals(\"abc\", StringUtils.defaultString(\"abc\", \"NULL\"));\n+    }\n+\n+    public void testDefaultIfEmpty_StringString() {\n+        assertEquals(\"NULL\", StringUtils.defaultIfEmpty(null, \"NULL\"));\n+        assertEquals(\"NULL\", StringUtils.defaultIfEmpty(\"\", \"NULL\"));\n+        assertEquals(\"abc\", StringUtils.defaultIfEmpty(\"abc\", \"NULL\"));\n+    }\n+\n     //-----------------------------------------------------------------------\n     public void testEscapeFunctions_String() {\n         assertEquals(\"\", StringUtils.escape(\"\") );", "timestamp": 1113175525, "metainfo": ""}