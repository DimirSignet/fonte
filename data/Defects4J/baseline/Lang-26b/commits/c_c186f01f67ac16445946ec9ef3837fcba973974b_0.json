{"sha": "c186f01f67ac16445946ec9ef3837fcba973974b", "log": "corrected the test of parseCVS with \"h:mm z\" format by replacing the current date/time with a series of calls using hard-coded time values   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n         assertEquals(\"parseCVS format MMM d, yyyy h:mm a\",\n                   now, DateUtils.parseCVS(new SimpleDateFormat(\"MMM d, yyyy h:mm a\").format(now.getTime())), 50);\n         // h:mm z\n-        now = Calendar.getInstance();\n-        now.set(Calendar.MILLISECOND, 0);\n-        now.set(Calendar.SECOND, 0);\n-        now.set(Calendar.DAY_OF_MONTH, 1);\n-        now.set(Calendar.MONTH, Calendar.JANUARY);\n-        now.set(Calendar.YEAR, 1970);\n-        assertEquals(\"parseCVS format h:mm z\",\n-                  now, DateUtils.parseCVS(new SimpleDateFormat(\"H:mm z\").format(now.getTime())), 50);\n+        /*\n+         * This format is difficult to test using the current time because the\n+         * parseCVS method applies the default date of January 1, 1970 to the\n+         * parsed time. The most straightforward way to test the parse is to\n+         * pass in a known value, and test the output against this know value.\n+         */\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT\"));\n+        assertEquals(\"parseCVS format h:mm z 16:30 GMT\", \n+                  now, DateUtils.parseCVS(\"16:30 GMT\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 EST\"));\n+        assertEquals(\"parseCVS format h:mm z 16:30 EST\", \n+                  now, DateUtils.parseCVS(\"16:30 EST\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT-05:00\"));\n+        assertEquals(\"parseCVS format h:mm z 16:30 GMT-05:00\", \n+                  now, DateUtils.parseCVS(\"16:30 GMT-05:00\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT+01:00\"));\n+        assertEquals(\"parseCVS format h:mm z 16:30 GMT+01:00\", \n+                  now, DateUtils.parseCVS(\"16:30 GMT+01:00\"), 50);\n+        \n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT\"));\n+        assertEquals(\"parseCVS format h:mm z 06:30 GMT\", \n+                  now, DateUtils.parseCVS(\"06:30 GMT\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 EST\"));\n+        assertEquals(\"parseCVS format h:mm z 06:30 EST\", \n+                  now, DateUtils.parseCVS(\"06:30 EST\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT-05:00\"));\n+        assertEquals(\"parseCVS format h:mm z 06:30 GMT-05:00\", \n+                  now, DateUtils.parseCVS(\"06:30 GMT-05:00\"), 50);\n+        now = Calendar.getInstance();\n+        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT+01:00\"));\n+        assertEquals(\"parseCVS format h:mm z 06:30 GMT+01:00\", \n+                  now, DateUtils.parseCVS(\"06:30 GMT+01:00\"), 50);\n         \n         now = Calendar.getInstance();\n         now.add(Calendar.WEEK_OF_MONTH, -1);", "timestamp": 1060130576, "metainfo": ""}