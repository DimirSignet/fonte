{"sha": "5b6cb229ecb42f51524f4447ac3255d963987aa2", "log": "Improving javadoc for HashCodeBuilder.append(boolean) and the general class javadoc per LANG-628  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java\n+++ b/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java\n  * </p>\n  * \n  * <p>\n+ * The following is the approach taken. When appending a data field, the current total is multiplied by the \n+ * multiplier then a relevant value \n+ * for that data type is added. For example, if the current hashCode is 17, and the multiplier is 37, then \n+ * appending the integer 45 will create a hashcode of 674, namely 17 * 37 + 45. \n+ * </p>\n+ * \n+ * <p>\n  * All relevant fields from the object should be included in the <code>hashCode</code> method. Derived fields may be\n  * excluded. In general, any field used in the <code>equals</code> method must be used in the <code>hashCode</code>\n  * method.\n  * </p>\n- * \n+ *\n  * <p>\n  * To use this class write code as follows:\n  * </p>\n      * Append a <code>hashCode</code> for a <code>boolean</code>.\n      * </p>\n      * <p>\n-     * This adds <code>iConstant * 1</code> to the <code>hashCode</code> and not a <code>1231</code> or\n-     * <code>1237</code> as done in java.lang.Boolean. This is in accordance with the <quote>Effective Java</quote>\n+     * This adds <code>1</code> when true, and <code>0</code> when false to the <code>hashCode</code> \n+     * and not a <code>1231</code> or\n+     * <code>1237</code> as done in java.lang.Boolean (see java.lang.Boolean javadoc). This is in \n+     * accordance with the <quote>Effective Java</quote>\n      * design.\n      * </p>\n      * ", "timestamp": 1277867996, "metainfo": ""}