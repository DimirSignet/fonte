{"sha": "1064ab23a89b1dea9910869d3313d1dab7d47f89", "log": "Applying J\u00f6rg Gottschling's patch from LANG-358 with Thomas Menzel's naming from LANG-550 and some of his tests. This adds a firstNonNull method to ObjectUtils.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n         }\n     }\n \n+    /**\n+     * <p>Returns the first passed value which is not <code>null</code> or\n+     * <code>null</code> otherwise.</p>\n+     * \n+     * <pre>\n+     * ObjectUtils.firstNonNull(null, null)      = null\n+     * ObjectUtils.firstNonNull(null, \"\")        = \"\"\n+     * ObjectUtils.firstNonNull(null, null, \"\")  = \"\"\n+     * ObjectUtils.firstNonNull(null, \"zz\")      = \"zz\"\n+     * ObjectUtils.firstNonNull(\"abc\", *)        = \"abc\"\n+     * ObjectUtils.firstNonNull(null, \"xyz\", *)  = \"xyz\"\n+     * ObjectUtils.firstNonNull(Boolean.TRUE, *) = Boolean.TRUE\n+     * ObjectUtils.firstNonNull()                = null\n+     * </pre>\n+     *\n+     * @param values  the values to test, may be <code>null</code> or empty\n+     * \n+     * @return The first value from <code>values</code> which is not\n+     *         <code>null</code> or <code>null</code> otherwise.\n+     */\n+    public static <T> T firstNonNull(T... values) {\n+      // This is a trivial implementation. There may be faster ones.\n+      // According to the JRE Libraries, overloading the method with fixed\n+      // parameter sizes may be faster.\n+      for (T val : values) {\n+        if (val != null && val != ObjectUtils.NULL) {\n+          return val;\n+        }\n+      }\n+      return null;\n+    }\n+\n }\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n \n         assertNull( ObjectUtils.min((String)null, (String)null) );\n     }\n+\n+    public void testFirstNonNull() {\n+      assertEquals(null, ObjectUtils.firstNonNull(null, null));\n+      assertEquals(\"\", ObjectUtils.firstNonNull(null, \"\"));\n+      assertEquals(\"123\", ObjectUtils.firstNonNull(null, null, \"123\", \"456\"));\n+      assertEquals(\"123\", ObjectUtils.firstNonNull(\"123\", null, \"456\", null));\n+      assertEquals(null, ObjectUtils.firstNonNull());\n+      assertSame(Boolean.TRUE, ObjectUtils.firstNonNull(Boolean.TRUE));\n+      assertNull(ObjectUtils.firstNonNull());\n+      assertNull(ObjectUtils.firstNonNull(null, null));\n+      assertSame(\"123\", ObjectUtils.firstNonNull(null, ObjectUtils.NULL, \"123\", \"456\"));\n+      assertSame(\"456\", ObjectUtils.firstNonNull(ObjectUtils.NULL, \"456\", \"123\", null));\n+      assertNull(ObjectUtils.firstNonNull(null, null, ObjectUtils.NULL));\n+    }\n+\n }", "timestamp": 1257405954, "metainfo": ""}