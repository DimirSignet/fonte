{"sha": "be5fc24c26b0e0b6647715e80b9c45011b2f5cd9", "log": "Minor language tweaks (LANG-576)  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ObjectUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ObjectUtils.java\n \n     /**\n      * Clone an object if possible. This method is similar to {@link #clone(Object)}, but will\n-     * return the provided instance as return value instead of <code>null</code> if the instance\n-     * is not cloneable. This is convenient in case the caller will use different\n-     * implementations (e.g. of a service) and some of the instances do not allow concurrent\n-     * processing or have state. In such a case the implementation can simply provide a proper\n-     * clone implementation and the caller has not to take care, it will simply call this method\n-     * here.\n+     * return the provided instance as the return value instead of <code>null</code> if the instance\n+     * is not cloneable. This is more convenient if the caller uses different\n+     * implementations (e.g. of a service) and some of the implementations do not allow concurrent\n+     * processing or have state. In such cases the implementation can simply provide a proper\n+     * clone implementation and the caller's code does not have to change.\n      * \n      * @param <T> the type of the object\n      * @param o the object to clone", "timestamp": 1269800268, "metainfo": ""}