{"sha": "3f4fb7e518ecb9dd434db1f5be9b5124189f2b38", "log": "Add support for calling superclass compareTo   ", "commit": "\n--- a/src/java/org/apache/commons/lang/builder/CompareToBuilder.java\n+++ b/src/java/org/apache/commons/lang/builder/CompareToBuilder.java\n  *  public int comapareTo(Object o) {\n  *    MyClass rhs = (MyClass) o;\n  *    return new CompareToBuilder()\n+ *                 .appendSuper(super.compareTo(o)\n  *                 .append(field1, rhs.field1)\n  *                 .append(field2, rhs.field2)\n- *                 .appendb(field3, rhs.field3)\n+ *                 .append(field3, rhs.field3)\n  *                 .toComparison();\n  *  }\n  * </pre>\n  *\n  * @author <a href=\"mailto:steve.downey@netfolio.com\">Steve Downey</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: CompareToBuilder.java,v 1.6 2002/12/08 21:38:19 scolebourne Exp $\n+ * @version $Id: CompareToBuilder.java,v 1.7 2002/12/08 21:43:34 scolebourne Exp $\n  */\n public class CompareToBuilder {\n     \n         return compareToBuilder.toComparison();\n     }\n \n+    //-------------------------------------------------------------------------\n+    \n+    /**\n+     * <p>Adds the result of super.hashCode() to this builder.</p>\n+     *\n+     * @param superHashCode  the result of calling <code>super.equals()</code>\n+     * @return CompareToBuilder - used to chain calls.\n+     */\n+    public CompareToBuilder appendSuper(int superHashCode) {\n+        if (comparison != 0) {\n+            return this;\n+        }\n+        comparison = superHashCode;\n+        return this;\n+    }\n+    \n     //-------------------------------------------------------------------------\n     \n     /**\n--- a/src/test/org/apache/commons/lang/builder/CompareToBuilderTest.java\n+++ b/src/test/org/apache/commons/lang/builder/CompareToBuilderTest.java\n  *\n  * @author <a href=\"mailto:sdowney@panix.com\">Steve Downey</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: CompareToBuilderTest.java,v 1.2 2002/12/08 21:37:25 scolebourne Exp $\n+ * @version $Id: CompareToBuilderTest.java,v 1.3 2002/12/08 21:43:34 scolebourne Exp $\n  */\n public class CompareToBuilderTest extends TestCase {\n \n         } catch (ClassCastException ex) {}\n     }\n \n+    public void testAppendSuper() {\n+        TestObject o1 = new TestObject(4);\n+        TestObject o2 = new TestObject(5);\n+        assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o1).toComparison() == 0);\n+        assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o2).toComparison() < 0);\n+        assertTrue(new CompareToBuilder().appendSuper(0).append(o2, o1).toComparison() > 0);\n+        \n+        assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o1).toComparison() < 0);\n+        assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o2).toComparison() < 0);\n+        \n+        assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o1).toComparison() > 0);\n+        assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o2).toComparison() > 0);\n+    }\n+    \n     public void testObject() {\n         TestObject o1 = new TestObject(4);\n         TestObject o2 = new TestObject(4);", "timestamp": 1039383814, "metainfo": ""}