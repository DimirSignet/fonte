{"sha": "77fbf3607615d52fcea16a63fbe6629b5ca4483c", "log": "Keep javadoc generation happy   ", "commit": "\n--- a/src/java/org/apache/commons/lang/SystemUtils.java\n+++ b/src/java/org/apache/commons/lang/SystemUtils.java\n-package org.apache.commons.lang;\n-\n /* ====================================================================\n  * The Apache Software License, Version 1.1\n  *\n  * information on the Apache Software Foundation, please see\n  * <http://www.apache.org/>.\n  */\n+package org.apache.commons.lang;\n \n /**\n  * <p>Common <code>System</code> class helpers.</p>\n  * @author Based on code from Lucene\n  * @author <a href=\"mailto:scolebourne@apache.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:sdowney@panix.com\">Steve Downey</a>\n- * @version $Id: SystemUtils.java,v 1.5 2002/11/22 23:32:45 bayard Exp $\n+ * @version $Id: SystemUtils.java,v 1.6 2002/12/08 16:18:39 scolebourne Exp $\n  */\n public class SystemUtils {\n     \n     /**\n-     * <P>SystemUtils instances should NOT be constructed in standard\n+     * <p>SystemUtils instances should NOT be constructed in standard\n      * programming. Instead, the class should be used as\n      * <code>SystemUtils.FILE_SEPARATOR</code>.</p>\n      *\n     }\n \n     /**\n-     * System Property: file.separator\n+     * System Property - file.separator.\n      * File separator (\"/\" on UNIX).\n-     * First in version: 1.1\n+     * First in JDK version 1.1.\n      */\n     public static final String FILE_SEPARATOR = System.getProperty(\"file.separator\");\n     \n \n     /**\n-     * System Property: java.class.path\n+     * System Property - java.class.path.\n      * Java class path.\n-     * First in version: 1.1\n+     * First in JDK version 1.1.\n      */\n     public static final String JAVA_CLASS_PATH = System.getProperty(\"java.class.path\");\n     \n \n     /**\n-     * System Property: java.class.version\n+     * System Property - java.class.version.\n      * Java class format version number.\n-     * First in version: 1.1\n+     * First in JDK version 1.1.\n      */\n     public static final String JAVA_CLASS_VERSION = System.getProperty(\"java.class.version\");\n     \n \n     /**\n-     * System Property: java.compiler\n+     * System Property - java.compiler.\n      * Name of JIT compiler to use.\n-     * First in version: 1.4 \n+     * First in JDK version 1.4.\n      */\n     public static final String JAVA_COMPILER = System.getProperty(\"java.compiler\");\n     \n \n     /**\n-     * System Property: java.ext.dirs\n+     * System Property - java.ext.dirs.\n      * Path of extension directory or directories.\n-     * First in version: 1.3 \n+     * First in JDK version 1.3.\n      */\n     public static final String JAVA_EXT_DIRS = System.getProperty(\"java.ext.dirs\");\n     \n \n     /**\n-     * System Property: java.home\n+     * System Property - java.home.\n      * Java installation directory.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1.\n      */\n     public static final String JAVA_HOME = System.getProperty(\"java.home\");\n     \n \n     /**\n-     * System Property: java.io.tmpdir\n+     * System Property - java.io.tmpdir.\n      * Default temp file path.\n-     * First in version: 1.4 \n+     * First in JDK version 1.4.\n      */\n     public static final String JAVA_IO_TMPDIR = System.getProperty(\"java.io.tmpdir\");\n     \n \n     /**\n-     * System Property: java.library.path\n+     * System Property - java.library.path.\n      * List of paths to search when loading libraries.\n-     * First in version: 1.4 \n+     * First in JDK version 1.4.\n      */\n     public static final String JAVA_LIBRARY_PATH = System.getProperty(\"java.library.path\");\n     \n \n     /**\n-     * System Property: java.specification.name\n+     * System Property - java.specification.name.\n      * Java Runtime Environment specification name.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_SPECIFICATION_NAME = System.getProperty(\"java.specification.name\");\n     \n \n     /**\n-     * System Property: java.specification.vendor\n+     * System Property - java.specification.vendor.\n      * Java Runtime Environment specification vendor.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = System.getProperty(\"java.specification.vendor\");\n     \n \n     /**\n-     * System Property: java.specification.version\n+     * System Property - java.specification.version.\n      * Java Runtime Environment specification version.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = System.getProperty(\"java.specification.version\");\n     \n \n     /**\n-     * System Property: java.vendor\n+     * System Property - java.vendor.\n      * Java vendor-specific string.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1.\n      */\n     public static final String JAVA_VENDOR = System.getProperty(\"java.vendor\");\n     \n \n     /**\n-     * System Property: java.vendor.url\n+     * System Property - java.vendor.url.\n      * Java vendor URL.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String JAVA_VENDOR_URL = System.getProperty(\"java.vendor.url\");\n     \n \n     /**\n-     * System Property: java.version\n+     * System Property - java.version.\n      * Java version number.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String JAVA_VERSION = System.getProperty(\"java.version\");\n     \n \n     /**\n-     * System Property: java.vm.name\n+     * System Property - java.vm.name.\n      * Java Virtual Machine implementation name.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_NAME = System.getProperty(\"java.vm.name\");\n     \n \n     /**\n-     * System Property: java.vm.specification.name\n+     * System Property - java.vm.specification.name.\n      * Java Virtual Machine specification name.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = System.getProperty(\"java.vm.specification.name\");\n     \n \n     /**\n-     * System Property: java.vm.specification.vendor\n+     * System Property - java.vm.specification.vendor.\n      * Java Virtual Machine specification vendor.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = System.getProperty(\"java.vm.specification.vendor\");\n     \n \n     /**\n-     * System Property: java.vm.specification.version\n+     * System Property - java.vm.specification.version.\n      * Java Virtual Machine specification version.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = System.getProperty(\"java.vm.specification.version\");\n     \n \n     /**\n-     * System Property: java.vm.vendor\n+     * System Property - java.vm.vendor.\n      * Java Virtual Machine implementation vendor.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_VENDOR = System.getProperty(\"java.vm.vendor\");\n     \n \n     /**\n-     * System Property: java.vm.version\n+     * System Property - java.vm.version.\n      * Java Virtual Machine implementation version.\n-     * First in version: 1.2 \n+     * First in JDK version 1.2.\n      */\n     public static final String JAVA_VM_VERSION = System.getProperty(\"java.vm.version\");\n     \n \n     /**\n-     * System Property: line.separator\n+     * System Property - line.separator.\n      * Line separator (\"\\n\" on UNIX).\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");\n     \n \n     /**\n-     * System Property: os.arch\n+     * System Property - os.arch.\n      * Operating system architecture.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String OS_ARCH = System.getProperty(\"os.arch\");\n     \n \n     /**\n-     * System Property: os.name\n+     * System Property - os.name.\n      * Operating system name.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String OS_NAME = System.getProperty(\"os.name\");\n     \n \n     /**\n-     * System Property: os.version\n+     * System Property - os.version.\n      * Operating system version.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String OS_VERSION = System.getProperty(\"os.version\");\n     \n \n     /**\n-     * System Property: path.separator\n+     * System Property - path.separator.\n      * Path separator (\":\" on UNIX).\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String PATH_SEPARATOR = System.getProperty(\"path.separator\");\n     \n \n     /**\n-     * System Property: user.dir\n+     * System Property - user.dir.\n      * User's current working directory.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String USER_DIR = System.getProperty(\"user.dir\");\n     \n \n     /**\n-     * System Property: user.home\n+     * System Property - user.home.\n      * User's home directory.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String USER_HOME = System.getProperty(\"user.home\");\n     \n \n     /**\n-     * System Property: user.name\n+     * System Property - user.name.\n      * User's account name.\n-     * First in version: 1.1 \n+     * First in JDK version 1.1. \n      */\n     public static final String USER_NAME = System.getProperty(\"user.name\");\n     \n-    /** True iff this is Java version 1.1. */\n+    /** \n+     * True iff this is Java version 1.1. \n+     */\n     public static final boolean IS_JAVA_1_1 = JAVA_VERSION.startsWith(\"1.1.\");\n-    /** True iff this is Java version 1.2. */\n+    /** \n+     * True iff this is Java version 1.2. \n+     */\n     public static final boolean IS_JAVA_1_2 = JAVA_VERSION.startsWith(\"1.2.\");\n-    /** True iff this is Java version 1.3. */\n+    /** \n+     * True iff this is Java version 1.3. \n+     */\n     public static final boolean IS_JAVA_1_3 = JAVA_VERSION.startsWith(\"1.3.\");\n-    /** True iff this is Java version 1.4. */\n+    /** \n+     * True iff this is Java version 1.4. \n+     */\n     public static final boolean IS_JAVA_1_4 = JAVA_VERSION.startsWith(\"1.4.\");\n-    /** True iff this is Java version 1.5. */\n+    /** \n+     * True iff this is Java version 1.5. \n+     */\n     public static final boolean IS_JAVA_1_5 = JAVA_VERSION.startsWith(\"1.5.\");\n \n ", "timestamp": 1039364319, "metainfo": ""}