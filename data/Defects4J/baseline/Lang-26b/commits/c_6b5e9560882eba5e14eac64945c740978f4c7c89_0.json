{"sha": "6b5e9560882eba5e14eac64945c740978f4c7c89", "log": "Taking a stab at adding information on a Lang and Java 5.0 enum comparison  ", "commit": "\n--- a/src/java/org/apache/commons/lang/enums/Enum.java\n+++ b/src/java/org/apache/commons/lang/enums/Enum.java\n  * </pre>\n  * \n  * <p>For more details, see the 'Nested' test cases.\n+ *\n+ * <h4>Lang Enums and Java 5.0 Enums</h4>\n+ *\n+ * <p>Enums were added to Java in Java 5.0. The main differences between Lang's \n+ * implementation and the new official JDK implementation are: </p>\n+ * <ul>\n+ * <li>The standard Enum is a not just a superclass, but is a type baked into the \n+ * language. </li>\n+ * <li>The standard Enum does not support extension, so the standard methods that \n+ * are provided in the Lang enum are not available. </li>\n+ * <li>Lang mandates a String name, whereas the standard Enum uses the class \n+ * name as its name. getName() changes to name(). </li>\n+ * </ul>\n+ *\n+ * <p>Generally people should use the standard Enum. Migrating from the Lang \n+ * enum to the standard Enum is not as easy as it might be due to the lack of \n+ * class inheritence in standard Enums. This means that it's not possible \n+ * to provide a 'super-enum' which could provide the same utility methods \n+ * that the Lang enum does. The following utility class is a Java 5.0 \n+ * version of our EnumUtils class and provides those utility methods. </p>\n+ *\n+ * <pre>\n+ * import java.util.*;\n+ * \n+ * public class EnumUtils {\n+ * \n+ *   public static Enum getEnum(Class enumClass, String token) {\n+ *     return Enum.valueOf(enumClass, token);\n+ *   }\n+ * \n+ *   public static Map getEnumMap(Class enumClass) {\n+ *     HashMap map = new HashMap();\n+ *     Iterator itr = EnumUtils.iterator(enumClass);\n+ *     while(itr.hasNext()) {\n+ *       Enum enm = (Enum) itr.next();\n+ *       map.put( enm.name(), enm );\n+ *     }\n+ *     return map;\n+ *   }\n+ * \n+ *   public static List getEnumList(Class enumClass) {\n+ *     return new ArrayList( EnumSet.allOf(enumClass) );\n+ *   }\n+ * \n+ *   public static Iterator iterator(Class enumClass) {\n+ *     return EnumUtils.getEnumList(enumClass).iterator();\n+ *   }\n+ * }\n+ * </pre>\n  * \n  * @author Apache Avalon project\n  * @author Stephen Colebourne", "timestamp": 1161383781, "metainfo": ""}