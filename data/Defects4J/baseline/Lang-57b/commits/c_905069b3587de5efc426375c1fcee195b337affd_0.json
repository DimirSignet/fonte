{"sha": "905069b3587de5efc426375c1fcee195b337affd", "log": "Remove StringUtils.unescape Its deprecated, and wasn't in 1.0   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Arun Mammen Thomas\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.58 2003/07/16 21:19:22 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.59 2003/07/16 21:23:50 scolebourne Exp $\n  */\n public class StringUtils {\n \n      */\n     public static String escape(String str) {\n         return StringEscapeUtils.escapeJava(str);\n-    }\n-\n-    /**\n-     * <p>Unescapes any Java literals found in the String. For example,\n-     * it will turn a sequence of <code>'\\'</code> and <code>'n'</code>\n-     * into a newline character, unless the <code>'\\'</code> is preceded\n-     * by another <code>'\\'</code>.</p>\n-     *\n-     * <p>As of Lang 2.0, this calls {@link StringEscapeUtils#unescapeJava(java.lang.String)}\n-     * behind the scenes.</p>\n-     *\n-     * @see StringEscapeUtils#unescapeJava(java.lang.String)\n-     * @deprecated Use {@link StringEscapeUtils#unescapeJava(java.lang.String)}\n-     *             This method will be removed in Commons Lang 3.0\n-     */\n-    public static String unescape(String str) {\n-        return StringEscapeUtils.unescapeJava(str);\n     }\n \n     // Padding\n--- a/src/test/org/apache/commons/lang/StringUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsTest.java\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n  * @author Holger Krauth\n  * @author <a href=\"hps@intermeta.de\">Henning P. Schmiedehausen</a>\n- * @version $Id: StringUtilsTest.java,v 1.22 2003/07/15 23:41:54 scolebourne Exp $\n+ * @version $Id: StringUtilsTest.java,v 1.23 2003/07/16 21:23:50 scolebourne Exp $\n  */\n public class StringUtilsTest extends TestCase {\n \n                      \"\\\\u0234\", StringUtils.escape(\"\\u0234\") );\n         assertEquals(\"escape(String) failed\",\n                      \"\\\\u00FD\", StringUtils.escape(\"\\u00fd\") );\n-        assertEquals(\"unescape(String) failed\",\n-                     \"\", StringUtils.unescape(\"\") );\n-        assertEquals(\"unescape(String) failed\",\n-                     \"test\", StringUtils.unescape(\"test\") );\n-        assertEquals(\"unescape(String) failed\",\n-                     \"\\ntest\\b\", StringUtils.unescape(\"\\\\ntest\\\\b\") );\n-        assertEquals(\"unescape(String) failed\",\n-                     \"\\u123425foo\\ntest\\b\", StringUtils.unescape(\"\\\\u123425foo\\\\ntest\\\\b\") );\n-        assertEquals(\"unescape(String) failed with unicode as final char\",\n-                     \"\\u1234\", StringUtils.unescape(\"\\\\u1234\") );\n     }\n \n     public void testGetLevenshteinDistance() {", "timestamp": 1058390630, "metainfo": ""}