{"sha": "a7e9e315475892ac2941dfcd9826af85a75cc419", "log": "added guard around some rounding tests that do not work in JDK versions prior to 1.4  ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n+\n+import org.apache.commons.lang.SystemUtils;\n \n /**\n  * Unit tests {@link org.apache.commons.lang.time.DateUtils}.\n         assertEquals(\"round MET date across DST change-over\",\n                 dateTimeParser.parse(\"March 30, 2003 01:00:00.000\"),\n                 DateUtils.round((Object) cal4, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n-                DateUtils.round(date5, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n-                DateUtils.round((Object) cal5, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n-                DateUtils.round(date6, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n-                DateUtils.round((Object) cal6, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 04:00:00.000\"),\n-                DateUtils.round(date7, Calendar.HOUR_OF_DAY));\n-        assertEquals(\"round MET date across DST change-over\",\n-                dateTimeParser.parse(\"March 30, 2003 04:00:00.000\"),\n-                DateUtils.round((Object) cal7, Calendar.HOUR_OF_DAY));\n+        if (SystemUtils.isJavaVersionAtLeast(1.4f)) {\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n+                    DateUtils.round(date5, Calendar.HOUR_OF_DAY));\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n+                    DateUtils.round((Object) cal5, Calendar.HOUR_OF_DAY));\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n+                    DateUtils.round(date6, Calendar.HOUR_OF_DAY));\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 03:00:00.000\"),\n+                    DateUtils.round((Object) cal6, Calendar.HOUR_OF_DAY));\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 04:00:00.000\"),\n+                    DateUtils.round(date7, Calendar.HOUR_OF_DAY));\n+            assertEquals(\"round MET date across DST change-over\",\n+                    dateTimeParser.parse(\"March 30, 2003 04:00:00.000\"),\n+                    DateUtils.round((Object) cal7, Calendar.HOUR_OF_DAY));\n+        } else {\n+            this.warn(\"Some date rounding tests not run since the current version is \" + SystemUtils.JAVA_VERSION);\n+        }\n         TimeZone.setDefault(defaultZone);\n         dateTimeParser.setTimeZone(defaultZone);\n     }\n                     message + \" expected \" + cal1.getTime() + \" but got \" + cal2.getTime());\n         }\n     }\n+\n+    void warn(String msg) {\n+        System.err.println(msg);\n+    }\n }\n ", "timestamp": 1117329024, "metainfo": ""}