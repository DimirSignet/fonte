{"sha": "fa4c7827f8677b249009aa5d2fab8d508ceab8fa", "log": "Use default HashMap sizes as this is better across JDK versions   ", "commit": "\n--- a/src/java/org/apache/commons/lang/enum/Enum.java\n+++ b/src/java/org/apache/commons/lang/enum/Enum.java\n  * @author Chris Webb\n  * @author Mike Bowler\n  * @since 1.0\n- * @version $Id: Enum.java,v 1.9 2003/02/04 18:42:50 scolebourne Exp $\n+ * @version $Id: Enum.java,v 1.10 2003/02/06 20:13:07 scolebourne Exp $\n  */\n public abstract class Enum implements Comparable, Serializable {\n+    // After discussion, the default size for HashMaps is used, as the\n+    // sizing algorithm changes across the JDK versions\n+    \n     /**\n      * An empty map, as JDK1.2 didn't have an empty map\n      */\n-    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(1));\n+    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));\n     /**\n      * Map, key of class name, value of Entry.\n      */\n-    private static final Map cEnumClasses = new HashMap(61);\n+    private static final Map cEnumClasses = new HashMap();\n     /**\n      * The string representation of the Enum.\n      */\n      */\n     private static class Entry {\n         /** Map of Enum name to Enum */\n-        final Map map = new HashMap(61);\n+        final Map map = new HashMap();\n         /** List of Enums in source code order */\n         final List list = new ArrayList(25);\n ", "timestamp": 1044562387, "metainfo": ""}