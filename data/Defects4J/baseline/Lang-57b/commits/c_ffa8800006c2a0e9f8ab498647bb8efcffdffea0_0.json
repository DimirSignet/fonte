{"sha": "ffa8800006c2a0e9f8ab498647bb8efcffdffea0", "log": "Fix unescape to handle invalid entities bug 29149, from Dan Goldberg   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: Entities.java,v 1.18 2004/09/01 18:00:01 ggregory Exp $\n+ * @version $Id: Entities.java,v 1.19 2004/10/16 18:52:21 scolebourne Exp $\n  */\n class Entities {\n \n                 }\n                 String entityName = str.substring(i + 1, semi);\n                 int entityValue;\n-                if (entityName.charAt(0) == '#') {\n-                    char charAt1 = entityName.charAt(1);\n-                    if (charAt1 == 'x' || charAt1=='X') {\n-                        entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();\n+                if (entityName.length() == 0) {\n+                    entityValue = -1;\n+                } else if (entityName.charAt(0) == '#') {\n+                    if (entityName.length() == 1) {\n+                        entityValue = -1;\n                     } else {\n-                        entityValue = Integer.parseInt(entityName.substring(1));\n+                        char charAt1 = entityName.charAt(1);\n+                        try {\n+                            if (charAt1 == 'x' || charAt1=='X') {\n+                                entityValue = Integer.valueOf(entityName.substring(2), 16).intValue();\n+                            } else {\n+                                entityValue = Integer.parseInt(entityName.substring(1));\n+                            }\n+                        } catch (NumberFormatException ex) {\n+                            entityValue = -1;\n+                        }\n                     }\n                 } else {\n                     entityValue = this.entityValue(entityName);\n--- a/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/StringEscapeUtilsTest.java\n  *\n  * @author of original StringUtilsTest.testEscape = ?\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n- * @version $Id: StringEscapeUtilsTest.java,v 1.14 2004/02/18 23:06:19 ggregory Exp $\n+ * @version $Id: StringEscapeUtilsTest.java,v 1.15 2004/10/16 18:52:21 scolebourne Exp $\n  */\n public class StringEscapeUtilsTest extends TestCase {\n     private final static String FOO = \"foo\";\n         // note that the test string must be 7-bit-clean (unicode escaped) or else it will compile incorrectly\n         // on some locales        \n         assertEquals(\"funny chars pass through OK\", \"Fran\\u00E7ais\", StringEscapeUtils.unescapeHtml(\"Fran\\u00E7ais\"));\n+        \n+        assertEquals(\"Hello&;World\", StringEscapeUtils.unescapeHtml(\"Hello&;World\"));\n+        assertEquals(\"Hello&#;World\", StringEscapeUtils.unescapeHtml(\"Hello&#;World\"));\n+        assertEquals(\"Hello&# ;World\", StringEscapeUtils.unescapeHtml(\"Hello&# ;World\"));\n+        assertEquals(\"Hello&##;World\", StringEscapeUtils.unescapeHtml(\"Hello&##;World\"));\n     }\n \n     public void testUnescapeHexCharsHtml() {", "timestamp": 1097952741, "metainfo": ""}