{"sha": "7311ae8195012296f7f8d996f9f65cb5c0ae9a9c", "log": "Formatting changes (inserting missing {}s) in Entities, NestableDelagate, NumberUtils, MethodUtils. Added javadoc examples for string conversion methods in NumberUtils. Patch submitted by Fredrik Westermarck Reviewed by Phil Steitz   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Entities.java\n+++ b/src/java/org/apache/commons/lang/Entities.java\n  * @author <a href=\"mailto:alex@purpletech.com\">Alexander Day Chaffee</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: Entities.java,v 1.14 2003/09/07 14:32:34 psteitz Exp $\n+ * @version $Id: Entities.java,v 1.15 2003/09/13 03:11:29 psteitz Exp $\n  */\n class Entities {\n \n \n         public int value(String name) {\n             Object value = mapNameToValue.get(name);\n-            if (value == null)\n+            if (value == null) {\n                 return -1;\n+            }\n             return ((Integer) value).intValue();\n         }\n     }\n \n         public int value(String name) {\n             Object value = mapNameToValue.get(name);\n-            if (value == null)\n+            if (value == null) {\n                 return -1;\n+            }\n             return ((Integer) value).intValue();\n         }\n     }\n                 int mid = (low + high) >> 1;\n                 int midVal = values[mid];\n \n-                if (midVal < key)\n+                if (midVal < key) {\n                     low = mid + 1;\n-                else if (midVal > key)\n+                } else if (midVal > key) {\n                     high = mid - 1;\n-                else\n+                } else {\n                     return mid; // key found\n+                }\n             }\n             return -(low + 1);  // key not found.\n         }\n         public void add(String name, int value) {\n             ensureCapacity(size + 1);\n             int insertAt = binarySearch(value);\n-            if (insertAt > 0) return;    // note: this means you can't insert the same value twice\n+            if (insertAt > 0) {\n+                return;    // note: this means you can't insert the same value twice\n+            }\n             insertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one\n             System.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);\n             values[insertAt] = value;\n \n         public String name(int value) {\n             int index = binarySearch(value);\n-            if (index < 0) return null;\n+            if (index < 0) {\n+                return null;\n+            }\n             return names[index];\n         }\n     }\n--- a/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n+++ b/src/java/org/apache/commons/lang/exception/NestableDelegate.java\n  * @author Sean C. Sullivan\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: NestableDelegate.java,v 1.21 2003/09/07 14:32:35 psteitz Exp $\n+ * @version $Id: NestableDelegate.java,v 1.22 2003/09/13 03:11:30 psteitz Exp $\n  */\n public class NestableDelegate implements Serializable {\n \n         }\n \n         // Remove the repeated lines in the stack\n-        if (trimStackFrames) trimStackFrames(stacks);\n+        if (trimStackFrames) {\n+          trimStackFrames(stacks);\n+        }\n \n         synchronized (out) {\n             for (Iterator iter=stacks.iterator(); iter.hasNext();) {\n                 for (int i=0, len=st.length; i < len; i++) {\n                     out.println(st[i]);\n                 }\n-                if (iter.hasNext())\n+                if (iter.hasNext()) {\n                     out.print(separatorLine);\n+                }\n             }\n         }\n     }\n--- a/src/java/org/apache/commons/lang/math/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/math/NumberUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author <a href=\"mailto:fredrik@westermarck.com\">Fredrik Westermarck</a>\n  * @since 2.0\n- * @version $Id: NumberUtils.java,v 1.13 2003/09/07 14:32:35 psteitz Exp $\n+ * @version $Id: NumberUtils.java,v 1.14 2003/09/13 03:11:30 psteitz Exp $\n  */\n public class NumberUtils {\n     \n      *\n      * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n      * \n+     * <pre>\n+     *   NumberUtils.stringToInt(null) = 0\n+     *   NumberUtils.stringToInt(\"\")   = 0\n+     *   NumberUtils.stringToInt(\"1\")  = 1\n+     * </pre>\n+     *\n      * @param str  the string to convert, may be null\n      * @return the int represented by the string, or <code>zero</code> if\n      *  conversion fails\n      *\n      * <p>If the string is <code>null</code>, the default value is returned.</p>\n      * \n+     * <pre>\n+     *   NumberUtils.stringToInt(null, 1) = 1\n+     *   NumberUtils.stringToInt(\"\", 1)   = 1\n+     *   NumberUtils.stringToInt(\"1\", 0)  = 1\n+     * </pre>\n+     *\n      * @param str  the string to convert, may be null\n      * @param defaultValue  the default value\n      * @return the int represented by the string, or the default if conversion fails\n      *\n      * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n      *\n+     * <pre>\n+     *   NumberUtils.stringToLong(null) = 0L\n+     *   NumberUtils.stringToLong(\"\")   = 0L\n+     *   NumberUtils.stringToLong(\"1\")  = 1L\n+     * </pre>\n+     *\n      * @param str  the string to convert, may be null\n      * @return the long represented by the string, or <code>0</code> if\n      *  conversion fails\n      * default value if the conversion fails.</p>\n      *\n      * <p>If the string is <code>null</code>, the default value is returned.</p>\n+     *\n+     * <pre>\n+     *   NumberUtils.stringToLong(null, 1L) = 1L\n+     *   NumberUtils.stringToLong(\"\", 1L)   = 1L\n+     *   NumberUtils.stringToLong(\"1\", 0L)  = 1L\n+     * </pre>\n      *\n      * @param str  the string to convert, may be null\n      * @param defaultValue  the default value\n      * <p>If the string <code>str</code> is <code>null</code>,\n      * <code>0.0f</code> is returned.</p>\n      *\n+     * <pre>\n+     *   NumberUtils.stringToFloat(null)   = 0.0f\n+     *   NumberUtils.stringToFloat(\"\")     = 0.0f\n+     *   NumberUtils.stringToFloat(\"1.5\")  = 1.5f\n+     * </pre>\n+     *\n      * @param str the string to convert, may be <code>null</code>\n      * @return the float represented by the string, or <code>0.0f</code>\n      *  if conversion fails\n      *\n      * <p>If the string <code>str</code> is <code>null</code>, the default\n      * value is returned.</p>\n+     *\n+     * <pre>\n+     *   NumberUtils.stringToFloat(null, 1.1f)   = 1.0f\n+     *   NumberUtils.stringToFloat(\"\", 1.1f)     = 1.1f\n+     *   NumberUtils.stringToFloat(\"1.5\", 0.0f)  = 1.5f\n+     * </pre>\n      *\n      * @param str the string to convert, may be <code>null</code>\n      * @param defaultValue the default value\n      * @since 2.1\n      */\n     public static float stringToFloat(String str, float defaultValue) {\n-      if(str==null) {\n+      if (str == null) {\n           return defaultValue;\n       }     \n       try {\n      * <p>If the string <code>str</code> is <code>null</code>,\n      * <code>0.0d</code> is returned.</p>\n      *\n+     * <pre>\n+     *   NumberUtils.stringToDouble(null)   = 0.0d\n+     *   NumberUtils.stringToDouble(\"\")     = 0.0d\n+     *   NumberUtils.stringToDouble(\"1.5\")  = 1.5d\n+     * </pre>\n+     *\n      * @param str the string to convert, may be <code>null</code>\n      * @return the double represented by the string, or <code>0.0d</code>\n      *  if conversion fails\n      *\n      * <p>If the string <code>str</code> is <code>null</code>, the default\n      * value is returned.</p>\n+     *\n+     * <pre>\n+     *   NumberUtils.stringToDouble(null, 1.1d)   = 1.1d\n+     *   NumberUtils.stringToDouble(\"\", 1.1d)     = 1.1d\n+     *   NumberUtils.stringToDouble(\"1.5\", 0.0d)  = 1.5d\n+     * </pre>\n      *\n      * @param str the string to convert, may be <code>null</code>\n      * @param defaultValue the default value\n      * @since 2.1\n      */\n     public static double stringToDouble(String str, double defaultValue) {\n-      if(str==null) {\n+      if (str == null) {\n           return defaultValue;\n       }\n       try {\n--- a/src/java/org/apache/commons/lang/reflect/MethodUtils.java\n+++ b/src/java/org/apache/commons/lang/reflect/MethodUtils.java\n  * @author Jan Sorensen\n  * @author Robert Burrell Donkin\n  * @author Gary Gregory\n- * @version $Id: MethodUtils.java,v 1.16 2003/09/07 14:32:35 psteitz Exp $\n+ * @version $Id: MethodUtils.java,v 1.17 2003/09/13 03:11:30 psteitz Exp $\n  */\n public class MethodUtils {\n \n                 object.getClass(),\n                 methodName,\n                 parameterTypes);\n-        if (method == null)\n+        if (method == null) {\n             throw new ReflectionException(\"No such accessible method: \" +\n                     methodName + \"() on object: \" + object.getClass().getName());\n-        \n+        }\n+\n         try {\n         \n             return method.invoke(object, args);\n             for (int i = 0; i < interfaces.length; i++) {\n \n                 // Is this interface public?\n-                if (!Modifier.isPublic(interfaces[i].getModifiers()))\n+                if (!Modifier.isPublic(interfaces[i].getModifiers())) {\n                     continue;\n+                }\n \n                 // Does the method exist on this interface?\n                 try {\n                 } catch (NoSuchMethodException e) {\n                     // empty\n                 }\n-                if (method != null)\n+                if (method != null) {\n                     break;\n+                }\n \n                 // Recursively check our parent interfaces\n                 method =\n                         getAccessibleMethodFromInterfaceNest(interfaces[i],\n                                 methodName,\n                                 parameterTypes);\n-                if (method != null)\n+                if (method != null) {\n                     break;\n+                }\n \n             }\n ", "timestamp": 1063422690, "metainfo": ""}