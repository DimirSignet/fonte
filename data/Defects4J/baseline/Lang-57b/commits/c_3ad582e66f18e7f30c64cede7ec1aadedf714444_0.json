{"sha": "3ad582e66f18e7f30c64cede7ec1aadedf714444", "log": "testIsEmpty methods now tests for nulls.   ", "commit": "\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n  * @author Tim O'Brien\n  * @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n  * @author Fredrik Westermarck\n- * @version $Id: ArrayUtilsTest.java,v 1.20 2004/01/19 21:50:06 fredrik Exp $\n+ * @author Gary Gregory\n+ * @version $Id: ArrayUtilsTest.java,v 1.21 2004/01/19 22:55:05 ggregory Exp $\n  */\n public class ArrayUtilsTest extends TestCase {\n \n     public void testIsEmptyObject() {\n         Object[] emptyArray = new Object[] {};\n         Object[] notEmptyArray = new Object[] { new String(\"Value\") };\n+        assertEquals(true, ArrayUtils.isEmpty((Object[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyArray));\n     }\n     public void testIsEmptyPrimitives() {\n         long[] emptyLongArray = new long[] {};\n         long[] notEmptyLongArray = new long[] { 1L };\n+        assertEquals(true, ArrayUtils.isEmpty((long[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyLongArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyLongArray));\n \n         int[] emptyIntArray = new int[] {};\n         int[] notEmptyIntArray = new int[] { 1 };\n+        assertEquals(true, ArrayUtils.isEmpty((int[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyIntArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyIntArray));\n \n         short[] emptyShortArray = new short[] {};\n         short[] notEmptyShortArray = new short[] { 1 };\n+        assertEquals(true, ArrayUtils.isEmpty((short[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyShortArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyShortArray));\n \n         char[] emptyCharArray = new char[] {};\n         char[] notEmptyCharArray = new char[] { 1 };\n+        assertEquals(true, ArrayUtils.isEmpty((char[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyCharArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyCharArray));\n \n         byte[] emptyByteArray = new byte[] {};\n         byte[] notEmptyByteArray = new byte[] { 1 };\n+        assertEquals(true, ArrayUtils.isEmpty((byte[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyByteArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyByteArray));\n \n         double[] emptyDoubleArray = new double[] {};\n         double[] notEmptyDoubleArray = new double[] { 1.0 };\n+        assertEquals(true, ArrayUtils.isEmpty((double[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyDoubleArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyDoubleArray));\n \n         float[] emptyFloatArray = new float[] {};\n         float[] notEmptyFloatArray = new float[] { 1.0F };\n+        assertEquals(true, ArrayUtils.isEmpty((float[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyFloatArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyFloatArray));\n \n         boolean[] emptyBooleanArray = new boolean[] {};\n         boolean[] notEmptyBooleanArray = new boolean[] { true };\n+        assertEquals(true, ArrayUtils.isEmpty((boolean[])null));\n         assertEquals(true, ArrayUtils.isEmpty(emptyBooleanArray));\n         assertEquals(false, ArrayUtils.isEmpty(notEmptyBooleanArray));\n     }", "timestamp": 1074552905, "metainfo": ""}