{"sha": "1df3e07f73b1c68bf0537c15824734fb765321eb", "log": "Fix for zero-padding of years.  A commented out set of failing tests are added to the Unit Test and need to be addressed.  Submitted by:\tJerson Chua   ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java\n+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java\n  * @author Stephen Colebourne\n  * @author Nikolay Metchev\n  * @since 2.0\n- * @version $Id: FastDateFormat.java,v 1.20 2004/07/05 22:37:40 scolebourne Exp $\n+ * @version $Id: FastDateFormat.java,v 1.21 2004/09/12 05:03:26 bayard Exp $\n  */\n public class FastDateFormat extends Format {\n     // A lot of the speed in this class comes from caching, but some comes\n                 break;\n             case 'y': // year (number)\n                 if (tokenLen >= 4) {\n-                    rule = UnpaddedNumberField.INSTANCE_YEAR;\n+                    rule = selectNumberRule(Calendar.YEAR, tokenLen);\n                 } else {\n                     rule = TwoDigitYearField.INSTANCE;\n                 }\n--- a/src/test/org/apache/commons/lang/time/FastDateFormatTest.java\n+++ b/src/test/org/apache/commons/lang/time/FastDateFormatTest.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Fredrik Westermarck\n  * @since 2.0\n- * @version $Id: FastDateFormatTest.java,v 1.9 2004/07/05 22:37:40 scolebourne Exp $\n+ * @version $Id: FastDateFormatTest.java,v 1.10 2004/09/12 05:03:26 bayard Exp $\n  */\n public class FastDateFormatTest extends TestCase {\n \n         assertEquals(\"2004-02-03\", fdf.format(cal));\n \n     }\n+\n+    /**\n+     * Tests that pre-1000AD years get padded with yyyy\n+     */\n+    public void testLowYearPadding() {\n+        Calendar cal = Calendar.getInstance();\n+        FastDateFormat format = FastDateFormat.getInstance(\"yyyy/MM/DD\");\n+\n+        cal.set(1,0,1);\n+        assertEquals(\"0001/01/01\", format.format(cal));\n+        cal.set(10,0,1);\n+        assertEquals(\"0010/01/01\", format.format(cal));\n+        cal.set(100,0,1);\n+        assertEquals(\"0100/01/01\", format.format(cal));\n+        cal.set(999,0,1);\n+        assertEquals(\"0999/01/01\", format.format(cal));\n+    }\n+    /**\n+     * testLowYearPadding showed that the date was buggy\n+     * This test confirms it, getting 366 back as a date\n+     // TODO: Fix this problem\n+    public void testSimpleDate() {\n+        Calendar cal = Calendar.getInstance();\n+        FastDateFormat format = FastDateFormat.getInstance(\"yyyy/MM/DD\");\n+\n+        cal.set(2004,11,31);\n+        assertEquals(\"2004/12/31\", format.format(cal));\n+        cal.set(999,11,31);\n+        assertEquals(\"0999/12/31\", format.format(cal));\n+        cal.set(1,2,2);\n+        assertEquals(\"0001/03/02\", format.format(cal));\n+    }\n+    */\n }", "timestamp": 1094965406, "metainfo": ""}