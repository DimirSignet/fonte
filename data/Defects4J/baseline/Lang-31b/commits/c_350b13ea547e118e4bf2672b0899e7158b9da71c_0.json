{"sha": "350b13ea547e118e4bf2672b0899e7158b9da71c", "log": "Rename private variable to avoid shadowing  ", "commit": "\n--- a/src/java/org/apache/commons/lang/concurrent/BackgroundInitializer.java\n+++ b/src/java/org/apache/commons/lang/concurrent/BackgroundInitializer.java\n \n     private class InitializationTask implements Callable<T> {\n         /** Stores the executor service to be destroyed at the end. */\n-        private final ExecutorService executor;\n+        private final ExecutorService execFinally;\n \n         /**\n          * Creates a new instance of {@code InitializationTask} and initializes\n          * @param exec the {@code ExecutorService}\n          */\n         public InitializationTask(ExecutorService exec) {\n-            executor = exec;\n+            execFinally = exec;\n         }\n \n         /**\n             try {\n                 return initialize();\n             } finally {\n-                if (executor != null) {\n-                    executor.shutdown();\n+                if (execFinally != null) {\n+                    execFinally.shutdown();\n                 }\n             }\n         }", "timestamp": 1258830338, "metainfo": ""}