{"sha": "b2a360daf2034e2b78e493f355888e11aa86ff75", "log": "Fixing classes to not need UnhandledException and IllegalArgumentException  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java\n+++ b/src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java\n import java.io.Writer;\n import java.io.StringWriter;\n import java.util.Locale;\n-\n-import org.apache.commons.lang.UnhandledException;\n \n /**\n  * An API for translating text. \n             return writer.toString();\n         } catch (IOException ioe) {\n             // this should never ever happen while writing to a StringWriter\n-            throw new UnhandledException(ioe);\n+            throw new RuntimeException(ioe);\n         }\n     }\n \n--- a/src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java\n+++ b/src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java\n \n import java.io.IOException;\n import java.io.Writer;\n-\n-import org.apache.commons.lang.UnhandledException;\n \n /**\n  * Translates escaped unicode values of the form \\\\u+\\d\\d\\d\\d back to \n                         int value = Integer.parseInt(unicode.toString(), 16);\n                         out.write((char) value);\n                     } catch (NumberFormatException nfe) {\n-                        throw new UnhandledException(\"Unable to parse unicode value: \" + unicode, nfe);\n+                        throw new RuntimeException(\"Unable to parse unicode value: \" + unicode, nfe);\n                     }\n                     return i + 4;\n                 } else {\n--- a/src/test/org/apache/commons/lang/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ClassUtilsTest.java\n     }\n \n     public void testGetClassInvalidArguments() throws Exception {\n-        assertGetClassThrowsIllegalArgument( null );\n+        assertGetClassThrowsNullPointerException( null );\n         assertGetClassThrowsClassNotFound( \"[][][]\" );\n         assertGetClassThrowsClassNotFound( \"[[]\" );\n         assertGetClassThrowsClassNotFound( \"[\" );\n         }\n     }\n \n-    private void assertGetClassThrowsIllegalArgument( String className ) throws Exception {\n-        assertGetClassThrowsException( className, IllegalArgumentException.class );\n+    private void assertGetClassThrowsNullPointerException( String className ) throws Exception {\n+        assertGetClassThrowsException( className, NullPointerException.class );\n     }\n \n     private void assertGetClassThrowsClassNotFound( String className ) throws Exception {", "timestamp": 1248134130, "metainfo": ""}