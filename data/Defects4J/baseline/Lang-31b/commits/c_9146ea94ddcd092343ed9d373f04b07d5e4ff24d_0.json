{"sha": "9146ea94ddcd092343ed9d373f04b07d5e4ff24d", "log": "Remove deprecated methods  ", "commit": "\n--- a/src/java/org/apache/commons/lang/ObjectUtils.java\n+++ b/src/java/org/apache/commons/lang/ObjectUtils.java\n  * @since 1.0\n  * @version $Id$\n  */\n+//@Immutable\n public class ObjectUtils {\n \n     /**\n         buffer.append(object.getClass().getName())\n               .append('@')\n               .append(Integer.toHexString(System.identityHashCode(object)));\n-    }\n-\n-    /**\n-     * <p>Appends the toString that would be produced by <code>Object</code>\n-     * if a class did not override toString itself. <code>null</code>\n-     * will return <code>null</code>.</p>\n-     *\n-     * <pre>\n-     * ObjectUtils.appendIdentityToString(*, null)            = null\n-     * ObjectUtils.appendIdentityToString(null, \"\")           = \"java.lang.String@1e23\"\n-     * ObjectUtils.appendIdentityToString(null, Boolean.TRUE) = \"java.lang.Boolean@7fa\"\n-     * ObjectUtils.appendIdentityToString(buf, Boolean.TRUE)  = buf.append(\"java.lang.Boolean@7fa\")\n-     * </pre>\n-     *\n-     * @param buffer  the buffer to append to, may be <code>null</code>\n-     * @param object  the object to create a toString for, may be <code>null</code>\n-     * @return the default toString text, or <code>null</code> if\n-     *  <code>null</code> passed in\n-     * @since 2.0\n-     * @deprecated The design of this method is bad - see LANG-360. Instead, use identityToString(StringBuffer, Object).\n-     */\n-    public static StringBuffer appendIdentityToString(StringBuffer buffer, Object object) {\n-        if (object == null) {\n-            return null;\n-        }\n-        if (buffer == null) {\n-            buffer = new StringBuffer();\n-        }\n-        return buffer\n-            .append(object.getClass().getName())\n-            .append('@')\n-            .append(Integer.toHexString(System.identityHashCode(object)));\n     }\n \n     // ToString\n--- a/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ObjectUtilsTest.java\n         }\n     }\n \n-    public void testAppendIdentityToString() {\n-        assertEquals(null, ObjectUtils.appendIdentityToString(null, null));\n-        assertEquals(null, ObjectUtils.appendIdentityToString(new StringBuffer(), null));\n-        assertEquals(\n-            \"java.lang.String@\" + Integer.toHexString(System.identityHashCode(FOO)),\n-            ObjectUtils.appendIdentityToString(null, FOO).toString());\n-        assertEquals(\n-            \"java.lang.String@\" + Integer.toHexString(System.identityHashCode(FOO)),\n-            ObjectUtils.appendIdentityToString(new StringBuffer(), FOO).toString());\n-        Integer val = new Integer(90);\n-        assertEquals(\n-            \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(val)),\n-            ObjectUtils.appendIdentityToString(null, val).toString());\n-        assertEquals(\n-            \"java.lang.Integer@\" + Integer.toHexString(System.identityHashCode(val)),\n-            ObjectUtils.appendIdentityToString(new StringBuffer(), val).toString());\n-    }\n-\n     public void testToString_Object() {\n         assertEquals(\"\", ObjectUtils.toString((Object) null) );\n         assertEquals(Boolean.TRUE.toString(), ObjectUtils.toString(Boolean.TRUE) );", "timestamp": 1237065844, "metainfo": ""}