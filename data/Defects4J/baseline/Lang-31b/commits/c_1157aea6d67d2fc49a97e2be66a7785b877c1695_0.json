{"sha": "1157aea6d67d2fc49a97e2be66a7785b877c1695", "log": "Applying my fix from LANG-314  ", "commit": "\n--- a/src/test/org/apache/commons/lang/ClassUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ClassUtilsTest.java\n         assertGetClassThrowsException( className, ClassNotFoundException.class );\n     }\n \n-    /**\n-     * Creates a new instance of URLClassLoader with the system class loader's URLs and a <code>null</code> parent\n-     * class loader.\n-     * \n-     * @see ClassLoader#getSystemClassLoader()\n-     * @see URLClassLoader#newInstance(URL[], ClassLoader)\n-     * @return the resulting class loader\n-     */\n-    public static ClassLoader newSystemClassLoader() throws SecurityException, IllegalArgumentException {\n-        ClassLoader systemClassLoader = ClassLoader.getSystemClassLoader();\n-        ClassLoader myClassLoader = ClassUtilsTest.class.getClassLoader();\n-        if (!(myClassLoader instanceof URLClassLoader)) {\n-            fail(\"ClassUtilsTest ClassLoader = \" + (myClassLoader == null ? null : myClassLoader.getClass().getName()));\n-        }\n-        if (!(systemClassLoader instanceof URLClassLoader)) {\n-            fail(\"System  ClassLoader = \" + (systemClassLoader == null ? null : systemClassLoader.getClass().getName()));\n-        }\n-        if (!myClassLoader.equals(systemClassLoader)) {\n-            fail(\"ClassUtilsTest= \" + myClassLoader + \" System=\" + systemClassLoader);\n-        }\n-        URLClassLoader urlScl = (URLClassLoader) myClassLoader;\n-        return URLClassLoader.newInstance(urlScl.getURLs(), null);\n-    }\n-\n     // Show the Java bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4071957\n     // We may have to delete this if a JDK fixes the bug.\n     public void testShowJavaBug() throws Exception {\n--- a/src/test/org/apache/commons/lang/enum/EnumTest.java\n+++ b/src/test/org/apache/commons/lang/enum/EnumTest.java\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n \n-import org.apache.commons.lang.ClassUtilsTest;\n import org.apache.commons.lang.SerializationUtils;\n \n /**\n         assertTrue(colorEnum.equals(colorEnum));\n         assertNotNull(ColorEnum.class.getClassLoader());\n         // set up:\n-        ClassLoader classLoader = ClassUtilsTest.newSystemClassLoader();\n+        ClassLoader myClassLoader = EnumTest.class.getClassLoader();\n+        if (!(myClassLoader instanceof URLClassLoader)) {\n+            fail(\"EnumTest ClassLoader = \" + (myClassLoader == null ? null : myClassLoader.getClass().getName()));\n+        }\n+        ClassLoader classLoader = URLClassLoader.newInstance( ((URLClassLoader)myClassLoader).getURLs(), null);\n         Object enumObjectFromOtherClassLoader = this.getColorEnum(classLoader, colorEnum.getName());\n \n         // the real test, part 1.\n--- a/src/test/org/apache/commons/lang/enums/EnumTest.java\n+++ b/src/test/org/apache/commons/lang/enums/EnumTest.java\n import junit.framework.Test;\n import junit.framework.TestCase;\n import junit.framework.TestSuite;\n-import org.apache.commons.lang.ClassUtilsTest;\n import org.apache.commons.lang.SerializationUtils;\n \n /**\n         assertTrue(colorEnum.equals(colorEnum));\n         assertNotNull(ColorEnum.class.getClassLoader());\n         // set up:\n-        ClassLoader classLoader = ClassUtilsTest.newSystemClassLoader();\n+        ClassLoader myClassLoader = EnumTest.class.getClassLoader();\n+        if (!(myClassLoader instanceof URLClassLoader)) {\n+            fail(\"EnumTest ClassLoader = \" + (myClassLoader == null ? null : myClassLoader.getClass().getName()));\n+        }\n+        ClassLoader classLoader = URLClassLoader.newInstance( ((URLClassLoader)myClassLoader).getURLs(), null);\n         Object enumObjectFromOtherClassLoader = this.getColorEnum(classLoader, colorEnum.getName());\n \n         // the real test, part 1.", "timestamp": 1170195998, "metainfo": ""}