{"sha": "d7987f1cf84698ce67a7ac181d91d7f82329719a", "log": "Add additional constructor to complete the set   ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharRange.java\n+++ b/src/java/org/apache/commons/lang/CharRange.java\n  * @author Stephen Colebourne\n  * @author Chris Feldhacker\n  * @since 1.0\n- * @version $Id: CharRange.java,v 1.10 2003/08/02 18:18:33 scolebourne Exp $\n+ * @version $Id: CharRange.java,v 1.11 2003/08/04 00:46:24 scolebourne Exp $\n  */\n public final class CharRange implements Serializable {\n \n     }\n \n     /**\n+     * <p>Constructs a <code>CharRange</code> over a single character,\n+     * optionally negating the range.</p>\n+     *\n+     * <p>A negated range includes everything except the specified char.</p>\n+     *\n+     * @param ch  only character in this range\n+     * @param negated  true to express everything except the range\n+     */\n+    public CharRange(char ch, boolean negated) {\n+        this(ch, ch, negated);\n+    }\n+\n+    /**\n      * <p>Constructs a <code>CharRange</code> over a set of characters.</p>\n      *\n      * @param start  first character, inclusive, in this range\n--- a/src/test/org/apache/commons/lang/CharRangeTest.java\n+++ b/src/test/org/apache/commons/lang/CharRangeTest.java\n  * Unit tests {@link org.apache.commons.lang.CharRange}.\n  *\n  * @author Stephen Colebourne\n- * @version $Id: CharRangeTest.java,v 1.1 2003/08/02 18:18:33 scolebourne Exp $\n+ * @version $Id: CharRangeTest.java,v 1.2 2003/08/04 00:46:47 scolebourne Exp $\n  */\n public class CharRangeTest extends TestCase {\n     \n     //-----------------------------------------------------------------------\n     public void testConstructorAccessors_Char() {\n         CharRange rangea = new CharRange('a');\n-        CharRange rangeb = new CharRange('b');\n         assertEquals('a', rangea.getStart());\n         assertEquals('a', rangea.getEnd());\n         assertEquals(false, rangea.isNegated());\n         assertEquals(\"a\", rangea.toString());\n+    }\n+    \n+    public void testConstructorAccessors_CharBoolean_Normal() {\n+        CharRange rangea = new CharRange('a');\n+        assertEquals('a', rangea.getStart());\n+        assertEquals('a', rangea.getEnd());\n+        assertEquals(false, rangea.isNegated());\n+        assertEquals(\"a\", rangea.toString());\n+    }\n+    \n+    public void testConstructorAccessors_CharBoolean_Negated() {\n+        CharRange rangea = new CharRange('a', true);\n+        assertEquals('a', rangea.getStart());\n+        assertEquals('a', rangea.getEnd());\n+        assertEquals(true, rangea.isNegated());\n+        assertEquals(\"^a\", rangea.toString());\n     }\n     \n     public void testConstructorAccessors_CharChar_Same() {", "timestamp": 1059958007, "metainfo": ""}