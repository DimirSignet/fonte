{"sha": "2305419d7b9b735d8a37f882ec7a8cd4c36609e0", "log": "Fixing javadoc, unused import  ", "commit": "\n--- a/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableBoolean.java\n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *            the mutable to compare to\n      * @return zero if this object represents the same boolean value as the argument; a positive value if this object\n      *         represents true and the argument represents false; and a negative value if this object represents false\n--- a/src/java/org/apache/commons/lang/mutable/MutableByte.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableByte.java\n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *            the mutable to compare to\n      * @return negative if this is less, zero if equal, positive if greater\n      * @throws ClassCastException if the argument is not a MutableByte\n--- a/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableDouble.java\n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *            the mutable to compare to\n      * @return negative if this is less, zero if equal, positive if greater\n      * @throws ClassCastException if the argument is not a MutableDouble\n--- a/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableFloat.java\n  */\n package org.apache.commons.lang.mutable;\n \n-import org.apache.commons.lang.math.NumberUtils;\n-\n /**\n  * A mutable <code>float</code> wrapper.\n  * \n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *            the mutable to compare to\n      * @return negative if this is less, zero if equal, positive if greater\n      */\n--- a/src/java/org/apache/commons/lang/mutable/MutableInt.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableInt.java\n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *                  the mutable to compare to\n      * @return negative if this is less, zero if equal, positive if greater\n      * @throws ClassCastException if the argument is not a MutableInt\n--- a/src/java/org/apache/commons/lang/mutable/MutableShort.java\n+++ b/src/java/org/apache/commons/lang/mutable/MutableShort.java\n     /**\n      * Compares this mutable to another in ascending order.\n      * \n-     * @param obj\n+     * @param other\n      *                  the mutable to compare to\n      * @return negative if this is less, zero if equal, positive if greater\n      * @throws ClassCastException if the argument is not a MutableShort", "timestamp": 1242445587, "metainfo": ""}