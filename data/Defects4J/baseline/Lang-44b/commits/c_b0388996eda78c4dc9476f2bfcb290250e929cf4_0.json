{"sha": "b0388996eda78c4dc9476f2bfcb290250e929cf4", "log": "Add since tags for 2.1 and fix Javadoc   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Al Chou\n  * @author Michael Davey\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.135 2004/09/02 19:16:18 fredrik Exp $\n+ * @version $Id: StringUtils.java,v 1.136 2004/10/08 00:11:22 scolebourne Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * @param ordinal  the n-th <code>searchStr</code> to find\n      * @return the n-th index of the search String,\n      *  <code>-1</code> (<code>INDEX_NOT_FOUND</code>) if no match or <code>null</code> string input\n-     * @since 2.?.?\n+     * @since 2.1\n      */\n     public static int ordinalIndexOf(String str, String searchStr, int ordinal) {\n         if (str == null || searchStr == null || ordinal <= 0) {\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as one separator.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as one separator.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as one separator.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.\n      * A <code>null</code> separatorChars splits on whitespace.</p>\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as separators for empty tokens.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as separators for empty tokens.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      *\n      * <p>The separator is not included in the returned String array.\n      * Adjacent separators are treated as separators for empty tokens.\n-     * For more control over the split use the Tokenizer class.</p>\n+     * For more control over the split use the StrTokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.\n      * A <code>null</code> separatorChars splits on whitespace.</p>\n      * @param separatorChars  the characters used as the delimiters,\n      *  <code>null</code> splits on whitespace\n      * @return an array of parsed Strings, <code>null</code> if null String input\n+     * @since 2.1\n      */\n     public static String[] splitPreserveAllTokens(String str, String separatorChars) {\n         return splitWorker(str, separatorChars, -1, true);\n      * @param max  the maximum number of elements to include in the\n      *  array. A zero or negative value implies no limit\n      * @return an array of parsed Strings, <code>null</code> if null String input\n+     * @since 2.1\n      */\n     public static String[] splitPreserveAllTokens(String str, String separatorChars, int max) {\n         return splitWorker(str, separatorChars, max, true);", "timestamp": 1097194282, "metainfo": ""}