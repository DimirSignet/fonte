{"sha": "af56c9c24f8abfc0fe29cea7a76e51c54b705fa4", "log": "Add capitalizeFully() to deal with a whole string whatever its current state   ", "commit": "\n--- a/src/java/org/apache/commons/lang/WordUtils.java\n+++ b/src/java/org/apache/commons/lang/WordUtils.java\n  * @author <a href=\"mailto:hps@intermeta.de\">Henning P. Schmiedehausen</a>\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @since 2.0\n- * @version $Id: WordUtils.java,v 1.2 2003/08/17 22:56:11 scolebourne Exp $\n+ * @version $Id: WordUtils.java,v 1.3 2003/08/17 23:06:11 scolebourne Exp $\n  */\n public class WordUtils {\n \n     //-----------------------------------------------------------------------\n     /**\n      * <p>Capitalizes all the whitespace separated words in a String.\n-     * Only the first letter of each word is changed.</p>\n+     * Only the first letter of each word is changed. To change all letters to\n+     * the capitalized case, use {@link #capitalizeFully(String)}.</p>\n      *\n      * <p>Whitespace is defined by {@link Character#isWhitespace(char)}.\n      * A <code>null</code> input String returns <code>null</code>.\n      * \n      * @param str  the String to capitalize, may be null\n      * @return capitalized String, <code>null</code> if null String input\n+     * @see #capitalizeFully(String)\n      */\n     public static String capitalize(String str) {\n         int strLen;\n                 whitespace = false;\n             } else {\n                 buffer.append(ch);\n+            }\n+        }\n+        return buffer.toString();\n+    }\n+\n+    /**\n+     * <p>Capitalizes all the whitespace separated words in a String.\n+     * All letters are changed, so the resulting string will be fully changed.</p>\n+     *\n+     * <p>Whitespace is defined by {@link Character#isWhitespace(char)}.\n+     * A <code>null</code> input String returns <code>null</code>.\n+     * Capitalization uses the unicode title case, normally equivalent to\n+     * upper case.</p>\n+     *\n+     * <pre>\n+     * WordUtils.capitalize(null)        = null\n+     * WordUtils.capitalize(\"\")          = \"\"\n+     * WordUtils.capitalize(\"i am FINE\") = \"I Am Fine\"\n+     * </pre>\n+     * \n+     * @param str  the String to capitalize, may be null\n+     * @return capitalized String, <code>null</code> if null String input\n+     */\n+    public static String capitalizeFully(String str) {\n+        int strLen;\n+        if (str == null || (strLen = str.length()) == 0) {\n+            return str;\n+        }\n+        StringBuffer buffer = new StringBuffer(strLen);\n+        boolean whitespace = true;\n+        for (int i = 0; i < strLen; i++) {\n+            char ch = str.charAt(i);\n+            if (Character.isWhitespace(ch)) {\n+                buffer.append(ch);\n+                whitespace = true;\n+            } else if (whitespace) {\n+                buffer.append(Character.toTitleCase(ch));\n+                whitespace = false;\n+            } else {\n+                buffer.append(Character.toLowerCase(ch));\n             }\n         }\n         return buffer.toString();\n--- a/src/test/org/apache/commons/lang/WordUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/WordUtilsTest.java\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n  * @author Henri Yandell\n  * @author Stephen Colebourne\n- * @version $Id: WordUtilsTest.java,v 1.2 2003/08/17 22:56:11 scolebourne Exp $\n+ * @version $Id: WordUtilsTest.java,v 1.3 2003/08/17 23:06:11 scolebourne Exp $\n  */\n public class WordUtilsTest extends TestCase {\n \n         assertEquals(\"I AM HERE 123\", WordUtils.capitalize(\"I AM HERE 123\") );\n     }\n     \n+    public void testCapitalizeFully_String() {\n+        assertEquals(null, WordUtils.capitalizeFully(null));\n+        assertEquals(\"\", WordUtils.capitalizeFully(\"\"));\n+        assertEquals(\"  \", WordUtils.capitalizeFully(\"  \"));\n+        \n+        assertEquals(\"I\", WordUtils.capitalize(\"I\") );\n+        assertEquals(\"I\", WordUtils.capitalize(\"i\") );\n+        assertEquals(\"I Am Here 123\", WordUtils.capitalizeFully(\"i am here 123\") );\n+        assertEquals(\"I Am Here 123\", WordUtils.capitalizeFully(\"I Am Here 123\") );\n+        assertEquals(\"I Am Here 123\", WordUtils.capitalizeFully(\"i am HERE 123\") );\n+        assertEquals(\"I Am Here 123\", WordUtils.capitalizeFully(\"I AM HERE 123\") );\n+    }\n+    \n     public void testUncapitalize_String() {\n         assertEquals(null, WordUtils.uncapitalize(null));\n         assertEquals(\"\", WordUtils.uncapitalize(\"\"));", "timestamp": 1061161571, "metainfo": ""}