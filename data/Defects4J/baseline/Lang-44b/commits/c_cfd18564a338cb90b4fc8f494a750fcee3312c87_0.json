{"sha": "cfd18564a338cb90b4fc8f494a750fcee3312c87", "log": "Javadoc changes only  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringEscapeUtils.java\n+++ b/src/java/org/apache/commons/lang/StringEscapeUtils.java\n     //-----------------------------------------------------------------------\n \n     /**\n-     * <p>Returns a <code>String</code> value for a CSV column escaping with double quotes,\n+     * <p>Returns a <code>String</code> value for a CSV column enclosed in double quotes,\n      * if required.</p>\n      *\n      * <p>If the value contains a comma, newline or double quote, then the\n      *\n      * <p>Any double quote characters in the value are escaped with another double quote.</p>\n      *\n+     * <p>If the value does not contain a comma, newline or double quote, then the\n+     *    String value is returned unchanged.</p>\n+     * </p>\n+     *\n      * see <a href=\"http://en.wikipedia.org/wiki/Comma-separated_values\">Wikipedia</a> and\n      * <a href=\"http://tools.ietf.org/html/rfc4180\">RFC 4180</a>.\n      *\n-     * @param str  the string to escape, may be null\n-     * @return a new String, escaped for CSV, <code>null</code> if null string input\n+     * @param str the input CSV column String, may be null\n+     * @return the input String, enclosed in double quotes if the value contains a comma,\n+     * newline or double quote, <code>null</code> if null string input\n      * @since 2.4\n      */\n     public static String escapeCsv(String str) {\n     }\n \n     /**\n-     * <p>Writes a <code>String</code> value for a CSV column escaping with double quotes,\n+     * <p>Writes a <code>String</code> value for a CSV column enclosed in double quotes,\n      * if required.</p>\n      *\n      * <p>If the value contains a comma, newline or double quote, then the\n      *\n      * <p>Any double quote characters in the value are escaped with another double quote.</p>\n      *\n+     * <p>If the value does not contain a comma, newline or double quote, then the\n+     *    String value is written unchanged (null values are ignored).</p>\n+     * </p>\n+     *\n      * see <a href=\"http://en.wikipedia.org/wiki/Comma-separated_values\">Wikipedia</a> and\n      * <a href=\"http://tools.ietf.org/html/rfc4180\">RFC 4180</a>.\n      *\n-     * @param str  the string to escape, may be null\n-     * @param out  Writer to write escaped string into\n-     * in double quotes or only when the value contains double quotes, commas or newline\n-     * characters.\n+     * @param str the input CSV column String, may be null\n+     * @param out Writer to write input string to, enclosed in double quotes if it contains\n+     * a comma, newline or double quote\n      * @throws IOException if error occurs on underlying Writer\n      * @since 2.4\n      */", "timestamp": 1195187176, "metainfo": ""}