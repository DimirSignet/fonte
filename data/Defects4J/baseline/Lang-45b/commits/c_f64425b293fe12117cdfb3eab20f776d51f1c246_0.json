{"sha": "f64425b293fe12117cdfb3eab20f776d51f1c246", "log": "Some of the modifications Stephen wants.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/Notifier.java\n+++ b/src/java/org/apache/commons/lang/Notifier.java\n package org.apache.commons.lang;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.EventObject;\n import java.util.Iterator;\n+import java.util.List;\n \n import java.lang.reflect.Method;\n import java.lang.reflect.InvocationTargetException;\n     private String methodName;\n     private Class clss;\n \n-    public Notifier() {\n-    }\n-\n     public Notifier(Class listener) {\n+        if(listener == null) {\n+            throw new IllegalArgumentException(\"Illegal to have a null listener Class. \");\n+        }\n+        \n         this.clss = clss;\n         // now we check methods, if only one of them, then \n         // let's set it\n     }\n \n     /**\n-     * Set the name of the method to call upon the listeners.\n+     * Construct with the class and the name of the method to \n+     * call upon the listeners.\n      */\n-    public void setListenerMethod(String name) {\n+    public Notifier(Class clss, String name) {\n+        if(clss == null) {\n+            throw new IllegalArgumentException(\"Illegal to have a null Listener Class. \");\n+        }\n+        if(name == null) {\n+            throw new IllegalArgumentException(\"Illegal to have a null method name. \");\n+        }\n+        this.clss = clss;\n         this.methodName = name;\n-        if(this.clss != null) {\n-            try {\n-                // then we get the Method object\n-                this.listenerMethod = this.clss.getDeclaredMethod(name, new Class[] { EventObject.class} );\n-            } catch(NoSuchMethodException nsme) {\n-//                nsme.printStackTrace();\n-                throw new IllegalArgumentException(\"Method not on Class. \");\n-            }\n+        try {\n+            // then we get the Method object\n+            this.listenerMethod = this.clss.getDeclaredMethod(name, new Class[] { EventObject.class} );\n+        } catch(NoSuchMethodException nsme) {\n+//            nsme.printStackTrace();\n+        throw new IllegalArgumentException(\"Method not on Class. \");\n         }\n     }\n \n         this.listeners.remove(not);\n     }\n \n-    public ArrayList getListeners() {\n-        ArrayList cloned = new ArrayList();\n-        cloned.addAll(listeners);\n-        return cloned;\n+    public List getListeners() {\n+        ArrayList cloned = new ArrayList(listeners);\n+        return Collections.unmodifiableList(cloned);\n     }\n \n     /**\n      * This is usable when a Listener has more than one method and \n      * a single Notifier wants to be shared.\n      */\n-    public void notify(Method listenerMethod, EventObject event) throws NotifierException {\n+    private void notify(Method listenerMethod, EventObject event) throws NotifierException {\n         Iterator itr = getListeners().iterator();\n         while(itr.hasNext()) {\n             try {", "timestamp": 1037140619, "metainfo": ""}