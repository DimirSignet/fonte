{"sha": "ddf797902c406737d929b2a9e30ecde7ab34d647", "log": "add convenience isMatch(char[] buffer, int pos) that delegates using the entire buffer as bounds  ", "commit": "\n--- a/src/java/org/apache/commons/lang/text/StrMatcher.java\n+++ b/src/java/org/apache/commons/lang/text/StrMatcher.java\n      */\n     public abstract int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd);\n \n+    /**\n+     * Returns the number of matching characters, zero for no match.\n+     * <p>\n+     * This method is called to check for a match.\n+     * The parameter <code>pos</code> represents the current position to be\n+     * checked in the string <code>buffer</code> (a character array which must\n+     * not be changed).\n+     * The API guarantees that <code>pos</code> is a valid index for <code>buffer</code>.\n+     * <p>\n+     * The matching code may check one character or many.\n+     * It may check characters preceeding <code>pos</code> as well as those after.\n+     * <p>\n+     * It must return zero for no match, or a positive number if a match was found.\n+     * The number indicates the number of characters that matched.\n+     *\n+     * @param buffer  the text content to match against, do not change\n+     * @param pos  the starting position for the match, valid for buffer\n+     * @return the number of matching characters, zero for no match\n+     * @since Commons Lang 2.4\n+     */\n+    public int isMatch(char[] buffer, int pos) {\n+        return isMatch(buffer, pos, 0, buffer.length);\n+    }\n+\n     //-----------------------------------------------------------------------\n     /**\n      * Class used to define a set of characters for matching purposes.", "timestamp": 1193085935, "metainfo": ""}