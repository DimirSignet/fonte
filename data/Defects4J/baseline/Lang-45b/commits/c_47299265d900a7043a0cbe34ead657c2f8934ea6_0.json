{"sha": "47299265d900a7043a0cbe34ead657c2f8934ea6", "log": "Applying Scott Bassin's patch from LANG-371, adding unit tests that follow the approach of his previous patch to the documentation  ", "commit": "\n--- a/src/test/org/apache/commons/lang/builder/DefaultToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/DefaultToStringStyleTest.java\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n         assertEquals(baseStr + \"[a={}]\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"John Doe\";\n+        p.age = 33;\n+        p.smoker = false;\n+        String pBaseStr = p.getClass().getName() + \"@\" + Integer.toHexString(System.identityHashCode(p));\n+        assertEquals(pBaseStr + \"[name=John Doe,age=33,smoker=false]\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(baseStr + \"[3]\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(baseStr + \"[a=3]\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java\n import junit.textui.TestRunner;\n \n import org.apache.commons.lang.SystemUtils;\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n /**\n  * Unit tests {@link org.apache.commons.lang.builder.MultiLineToStringStyleTest}.\n         assertEquals(baseStr + \"[\" + SystemUtils.LINE_SEPARATOR + \"  a={}\" + SystemUtils.LINE_SEPARATOR + \"]\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"Jane Doe\";\n+        p.age = 25;\n+        p.smoker = true;\n+        String pBaseStr = p.getClass().getName() + \"@\" + Integer.toHexString(System.identityHashCode(p));\n+        assertEquals(pBaseStr + \"[\" + SystemUtils.LINE_SEPARATOR + \"  name=Jane Doe\" + SystemUtils.LINE_SEPARATOR + \"  age=25\" + SystemUtils.LINE_SEPARATOR + \"  smoker=true\" + SystemUtils.LINE_SEPARATOR + \"]\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(baseStr + \"[\" + SystemUtils.LINE_SEPARATOR + \"  3\" + SystemUtils.LINE_SEPARATOR + \"]\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(baseStr + \"[\" + SystemUtils.LINE_SEPARATOR + \"  a=3\" + SystemUtils.LINE_SEPARATOR + \"]\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n         assertEquals(baseStr + \"[{}]\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"Ron Paul\";\n+        p.age = 72;\n+        p.smoker = false;\n+        String pBaseStr = p.getClass().getName() + \"@\" + Integer.toHexString(System.identityHashCode(p));\n+        assertEquals(pBaseStr + \"[Ron Paul,72,false]\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(baseStr + \"[3]\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(baseStr + \"[3]\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n import junit.framework.TestCase;\n \n         assertEquals(baseStr + \"[a={}]\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"John Q. Public\";\n+        p.age = 45;\n+        p.smoker = true;\n+        String pBaseStr = p.getClass().getName();\n+        assertEquals(pBaseStr + \"[name=John Q. Public,age=45,smoker=true]\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(baseStr + \"[3]\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(baseStr + \"[a=3]\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n         assertEquals(\"{}\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"Jane Q. Public\";\n+        p.age = 47;\n+        p.smoker = false;\n+        assertEquals(\"Jane Q. Public,47,false\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(\"3\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(\"3\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+\n+import org.apache.commons.lang.builder.ToStringStyleTest.Person;\n \n import junit.framework.Test;\n import junit.framework.TestCase;\n         assertEquals(baseStr + \"[a=[]]\", new ToStringBuilder(base).append(\"a\", (Object) new String[0], true).toString());\n     }\n \n+    public void testPerson() {\n+        Person p = new Person();\n+        p.name = \"Suzy Queue\";\n+        p.age = 19;\n+        p.smoker = false;\n+        String pBaseStr = \"ToStringStyleTest.Person\";\n+        assertEquals(pBaseStr + \"[name=Suzy Queue,age=19,smoker=false]\", new ToStringBuilder(p).append(\"name\", p.name).append(\"age\", p.age).append(\"smoker\", p.smoker).toString());\n+    }\n+\n     public void testLong() {\n         assertEquals(baseStr + \"[3]\", new ToStringBuilder(base).append(3L).toString());\n         assertEquals(baseStr + \"[a=3]\", new ToStringBuilder(base).append(\"a\", 3L).toString());\n--- a/src/test/org/apache/commons/lang/builder/ToStringStyleTest.java\n+++ b/src/test/org/apache/commons/lang/builder/ToStringStyleTest.java\n         assertEquals(\"\", style.getSummaryObjectEndText());\n     }\n \n+    /**\n+     * An object used to test {@link ToStringStyle}.\n+     * \n+     * @author Scott Bassin\n+     */\n+    static class Person {\n+        /**\n+         * Test String field.\n+         */\n+        String name;\n+\n+        /**\n+         * Test integer field.\n+         */\n+        int age;\n+\n+        /**\n+         * Test boolean field.\n+         */\n+        boolean smoker;\n+    }\n }", "timestamp": 1194420330, "metainfo": ""}