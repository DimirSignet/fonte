{"sha": "7fe50e46bcfe485994a7fa112dfeb19e9e4b42c8", "log": "Try to report as many parse errors as we can  R=acleung DELTA=16  (13 added, 3 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1535   ", "commit": "\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n       boolean staleInputs = false;\n       for (CompilerInput input : inputs) {\n         Node n = input.getAstRoot(this);\n-        if (hasErrors()) {\n-          return null;\n-        }\n \n         // Inputs can have a null AST during initial parse.\n         if (n == null) {\n         jsRoot.addChildToBack(n);\n       }\n \n+      if (hasErrors()) {\n+        return null;\n+      }\n       return externAndJsRoot;\n     } finally {\n       stopTracer(tracer, \"parseInputs\");\n--- a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java\n+++ b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java\n        CheckAccessControls.DEPRECATED_NAME);\n   }\n \n+  public void testTwoParseErrors() {\n+    // If parse errors are reported in different files, make\n+    // sure all of them are reported.\n+    Compiler compiler = compile(new String[] {\n+      \"var a b;\",\n+      \"var b c;\"\n+    });\n+    assertEquals(2, compiler.getErrors().length);\n+  }\n+\n   /* Helper functions */\n \n   private void testSame(String original) {", "timestamp": 1303416234, "metainfo": ""}