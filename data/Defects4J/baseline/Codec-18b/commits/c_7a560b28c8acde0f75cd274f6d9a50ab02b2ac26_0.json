{"sha": "7a560b28c8acde0f75cd274f6d9a50ab02b2ac26", "log": "Remove unnecessary parentheses.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java\n+++ b/src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java\n \n         if (sumLength <= FOUR) {\n             minRating = FIVE;\n-        } else if ((sumLength >= FIVE) && (sumLength <= SEVEN)) {\n+        } else if (sumLength >= FIVE && sumLength <= SEVEN) {\n             minRating = FOUR;\n-        } else if ((sumLength >= EIGHT) && (sumLength <= ELEVEN)) {\n+        } else if (sumLength >= EIGHT && sumLength <= ELEVEN) {\n             minRating = THREE;\n         } else if (sumLength == TWELVE) {\n             minRating = TWO;\n             }\n \n             name1LtRStart = name1.substring(i, i + 1);\n-            name1LtREnd = name1.substring(name1Size - i, (name1Size - i) + 1);\n+            name1LtREnd = name1.substring(name1Size - i, name1Size - i + 1);\n \n             name2RtLStart = name2.substring(i, i + 1);\n-            name2RtLEnd = name2.substring(name2Size - i, (name2Size - i) + 1);\n+            name2RtLEnd = name2.substring(name2Size - i, name2Size - i + 1);\n \n             // Left to right...\n             if (name1LtRStart.equals(name2RtLStart)) {\n \n         // return isVowel(firstLetter) ? (firstLetter + name) : name;\n         if (isVowel(firstLetter)) {\n-            return (firstLetter + name);\n+            return firstLetter + name;\n         } else {\n             return name;\n         }", "timestamp": 1358795740, "metainfo": ""}