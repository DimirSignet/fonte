{"sha": "0dedfd955d332edb9c265f45e9819461bcdd0979", "log": "Add SVN EOL setting  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/Charsets.java\n+++ b/src/main/java/org/apache/commons/codec/Charsets.java\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.commons.codec;\n-\n-import java.nio.charset.Charset;\n-import java.nio.charset.UnsupportedCharsetException;\n-\n-/**\n- * Charsets required of every implementation of the Java platform.\n- *\n- * From the Java documentation <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard\n- * charsets</a>:\n- * <p>\n- * <cite>Every implementation of the Java platform is required to support the following character encodings. Consult the\n- * release documentation for your implementation to see if any other encodings are supported. Consult the release\n- * documentation for your implementation to see if any other encodings are supported. </cite>\n- * </p>\n- *\n- * <ul>\n- * <li><code>US-ASCII</code><br/>\n- * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</li>\n- * <li><code>ISO-8859-1</code><br/>\n- * ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</li>\n- * <li><code>UTF-8</code><br/>\n- * Eight-bit Unicode Transformation Format.</li>\n- * <li><code>UTF-16BE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, big-endian byte order.</li>\n- * <li><code>UTF-16LE</code><br/>\n- * Sixteen-bit Unicode Transformation Format, little-endian byte order.</li>\n- * <li><code>UTF-16</code><br/>\n- * Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n- * accepted on input, big-endian used on output.)</li>\n- * </ul>\n- *\n- * This perhaps would best belong in the Commons Lang project. Even if a similar class is defined in Commons Lang, it is\n- * not foreseen that Commons Codec would be made to depend on Commons Lang.\n- *\n- * <p>\n- * This class is immutable and thread-safe.\n- * </p>\n- *\n- * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n- * @since 1.7\n- * @version $Id: CharEncoding.java 1173287 2011-09-20 18:16:19Z ggregory $\n- */\n-public class Charsets {\n-\n-    //\n-    // This class should only contain Charset instances for required encodings. This guarantees that it will load\n-    // correctly and without delay on all Java platforms.\n-    //\n-\n-    /**\n-     * Returns the given Charset or the default Charset if the given Charset is null.\n-     *\n-     * @param charset\n-     *            A charset or null.\n-     * @return the given Charset or the default Charset if the given Charset is null\n-     */\n-    public static Charset toCharset(Charset charset) {\n-        return charset == null ? Charset.defaultCharset() : charset;\n-    }\n-\n-    /**\n-     * Returns a Charset for the named charset. If the name is null, return the default Charset.\n-     *\n-     * @param charset\n-     *            The name of the requested charset, may be null.\n-     * @return a Charset for the named charset\n-     * @throws UnsupportedCharsetException\n-     *             If the named charset is unavailable\n-     */\n-    public static Charset toCharset(String charset) {\n-        return charset == null ? Charset.defaultCharset() : Charset.forName(charset);\n-    }\n-\n-    /**\n-     * CharEncodingISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1. </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset ISO_8859_1 = Charset.forName(CharEncoding.ISO_8859_1);\n-\n-    /**\n-     * <p>\n-     * Seven-bit ASCII, also known as ISO646-US, also known as the Basic Latin block of the Unicode character set.\n-     * </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset US_ASCII = Charset.forName(CharEncoding.US_ASCII);\n-\n-    /**\n-     * <p>\n-     * Sixteen-bit Unicode Transformation Format, The byte order specified by a mandatory initial byte-order mark\n-     * (either order accepted on input, big-endian used on output)\n-     * </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset UTF_16 = Charset.forName(CharEncoding.UTF_16);\n-\n-    /**\n-     * <p>\n-     * Sixteen-bit Unicode Transformation Format, big-endian byte order.\n-     * </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset UTF_16BE = Charset.forName(CharEncoding.UTF_16BE);\n-\n-    /**\n-     * <p>\n-     * Sixteen-bit Unicode Transformation Format, little-endian byte order.\n-     * </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset UTF_16LE = Charset.forName(CharEncoding.UTF_16LE);\n-\n-    /**\n-     * <p>\n-     * Eight-bit Unicode Transformation Format.\n-     * </p>\n-     * <p>\n-     * Every implementation of the Java platform is required to support this character encoding.\n-     * </p>\n-     *\n-     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n-     */\n-    public static final Charset UTF_8 = Charset.forName(CharEncoding.UTF_8);\n-}\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.commons.codec;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.UnsupportedCharsetException;\n+\n+/**\n+ * Charsets required of every implementation of the Java platform.\n+ *\n+ * From the Java documentation <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard\n+ * charsets</a>:\n+ * <p>\n+ * <cite>Every implementation of the Java platform is required to support the following character encodings. Consult the\n+ * release documentation for your implementation to see if any other encodings are supported. Consult the release\n+ * documentation for your implementation to see if any other encodings are supported. </cite>\n+ * </p>\n+ *\n+ * <ul>\n+ * <li><code>US-ASCII</code><br/>\n+ * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.</li>\n+ * <li><code>ISO-8859-1</code><br/>\n+ * ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.</li>\n+ * <li><code>UTF-8</code><br/>\n+ * Eight-bit Unicode Transformation Format.</li>\n+ * <li><code>UTF-16BE</code><br/>\n+ * Sixteen-bit Unicode Transformation Format, big-endian byte order.</li>\n+ * <li><code>UTF-16LE</code><br/>\n+ * Sixteen-bit Unicode Transformation Format, little-endian byte order.</li>\n+ * <li><code>UTF-16</code><br/>\n+ * Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order\n+ * accepted on input, big-endian used on output.)</li>\n+ * </ul>\n+ *\n+ * This perhaps would best belong in the Commons Lang project. Even if a similar class is defined in Commons Lang, it is\n+ * not foreseen that Commons Codec would be made to depend on Commons Lang.\n+ *\n+ * <p>\n+ * This class is immutable and thread-safe.\n+ * </p>\n+ *\n+ * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+ * @since 1.7\n+ * @version $Id: CharEncoding.java 1173287 2011-09-20 18:16:19Z ggregory $\n+ */\n+public class Charsets {\n+\n+    //\n+    // This class should only contain Charset instances for required encodings. This guarantees that it will load\n+    // correctly and without delay on all Java platforms.\n+    //\n+\n+    /**\n+     * Returns the given Charset or the default Charset if the given Charset is null.\n+     *\n+     * @param charset\n+     *            A charset or null.\n+     * @return the given Charset or the default Charset if the given Charset is null\n+     */\n+    public static Charset toCharset(Charset charset) {\n+        return charset == null ? Charset.defaultCharset() : charset;\n+    }\n+\n+    /**\n+     * Returns a Charset for the named charset. If the name is null, return the default Charset.\n+     *\n+     * @param charset\n+     *            The name of the requested charset, may be null.\n+     * @return a Charset for the named charset\n+     * @throws UnsupportedCharsetException\n+     *             If the named charset is unavailable\n+     */\n+    public static Charset toCharset(String charset) {\n+        return charset == null ? Charset.defaultCharset() : Charset.forName(charset);\n+    }\n+\n+    /**\n+     * CharEncodingISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1. </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset ISO_8859_1 = Charset.forName(CharEncoding.ISO_8859_1);\n+\n+    /**\n+     * <p>\n+     * Seven-bit ASCII, also known as ISO646-US, also known as the Basic Latin block of the Unicode character set.\n+     * </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset US_ASCII = Charset.forName(CharEncoding.US_ASCII);\n+\n+    /**\n+     * <p>\n+     * Sixteen-bit Unicode Transformation Format, The byte order specified by a mandatory initial byte-order mark\n+     * (either order accepted on input, big-endian used on output)\n+     * </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset UTF_16 = Charset.forName(CharEncoding.UTF_16);\n+\n+    /**\n+     * <p>\n+     * Sixteen-bit Unicode Transformation Format, big-endian byte order.\n+     * </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset UTF_16BE = Charset.forName(CharEncoding.UTF_16BE);\n+\n+    /**\n+     * <p>\n+     * Sixteen-bit Unicode Transformation Format, little-endian byte order.\n+     * </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset UTF_16LE = Charset.forName(CharEncoding.UTF_16LE);\n+\n+    /**\n+     * <p>\n+     * Eight-bit Unicode Transformation Format.\n+     * </p>\n+     * <p>\n+     * Every implementation of the Java platform is required to support this character encoding.\n+     * </p>\n+     *\n+     * @see <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\">Standard charsets</a>\n+     */\n+    public static final Charset UTF_8 = Charset.forName(CharEncoding.UTF_8);\n+}\n--- a/src/test/java/org/apache/commons/codec/CharsetsTest.java\n+++ b/src/test/java/org/apache/commons/codec/CharsetsTest.java\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.commons.codec;\n-\n-import java.nio.charset.Charset;\n-\n-import junit.framework.Assert;\n-\n-import org.junit.Test;\n-\n-/**\n- * Sanity checks for {@link Charsets}.\n- *\n- * @version $Id: CharEncodingTest.java 1298985 2012-03-09 19:12:49Z ggregory $\n- */\n-public class CharsetsTest {\n-\n-    @Test\n-    public void testToCharset() {\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((String) null));\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((Charset) null));\n-        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset(Charset.defaultCharset()));\n-        Assert.assertEquals(Charset.forName(\"UTF-8\"), Charsets.toCharset(Charset.forName(\"UTF-8\")));\n-    }\n-\n-    @Test\n-    public void testIso8859_1() {\n-        Assert.assertEquals(\"ISO-8859-1\", Charsets.ISO_8859_1.name());\n-    }\n-\n-    @Test\n-    public void testUsAscii() {\n-        Assert.assertEquals(\"US-ASCII\", Charsets.US_ASCII.name());\n-    }\n-\n-    @Test\n-    public void testUtf16() {\n-        Assert.assertEquals(\"UTF-16\", Charsets.UTF_16.name());\n-    }\n-\n-    @Test\n-    public void testUtf16Be() {\n-        Assert.assertEquals(\"UTF-16BE\", Charsets.UTF_16BE.name());\n-    }\n-\n-    @Test\n-    public void testUtf16Le() {\n-        Assert.assertEquals(\"UTF-16LE\", Charsets.UTF_16LE.name());\n-    }\n-\n-    @Test\n-    public void testUtf8() {\n-        Assert.assertEquals(\"UTF-8\", Charsets.UTF_8.name());\n-    }\n-\n-}\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.codec;\n+\n+import java.nio.charset.Charset;\n+\n+import junit.framework.Assert;\n+\n+import org.junit.Test;\n+\n+/**\n+ * Sanity checks for {@link Charsets}.\n+ *\n+ * @version $Id: CharEncodingTest.java 1298985 2012-03-09 19:12:49Z ggregory $\n+ */\n+public class CharsetsTest {\n+\n+    @Test\n+    public void testToCharset() {\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((String) null));\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset((Charset) null));\n+        Assert.assertEquals(Charset.defaultCharset(), Charsets.toCharset(Charset.defaultCharset()));\n+        Assert.assertEquals(Charset.forName(\"UTF-8\"), Charsets.toCharset(Charset.forName(\"UTF-8\")));\n+    }\n+\n+    @Test\n+    public void testIso8859_1() {\n+        Assert.assertEquals(\"ISO-8859-1\", Charsets.ISO_8859_1.name());\n+    }\n+\n+    @Test\n+    public void testUsAscii() {\n+        Assert.assertEquals(\"US-ASCII\", Charsets.US_ASCII.name());\n+    }\n+\n+    @Test\n+    public void testUtf16() {\n+        Assert.assertEquals(\"UTF-16\", Charsets.UTF_16.name());\n+    }\n+\n+    @Test\n+    public void testUtf16Be() {\n+        Assert.assertEquals(\"UTF-16BE\", Charsets.UTF_16BE.name());\n+    }\n+\n+    @Test\n+    public void testUtf16Le() {\n+        Assert.assertEquals(\"UTF-16LE\", Charsets.UTF_16LE.name());\n+    }\n+\n+    @Test\n+    public void testUtf8() {\n+        Assert.assertEquals(\"UTF-8\", Charsets.UTF_8.name());\n+    }\n+\n+}", "timestamp": 1346341801, "metainfo": ""}