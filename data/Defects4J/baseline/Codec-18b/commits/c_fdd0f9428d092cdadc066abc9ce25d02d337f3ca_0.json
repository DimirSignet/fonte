{"sha": "fdd0f9428d092cdadc066abc9ce25d02d337f3ca", "log": "CologneBuffer does not need to implement CharSequence which then does not need to implement charAt and subSequence, which are themselves not used.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n+++ b/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n  */\n public class ColognePhonetic implements StringEncoder {\n \n-    private abstract class CologneBuffer implements CharSequence {\n+    private abstract class CologneBuffer {\n \n         protected final char[] data;\n         protected int length = 0;\n         }\n \n         public CologneBuffer(int buffSize) {\n-            data = new char[buffSize];\n-        }\n-\n-        public char charAt(int index) {\n-            if (index < length) {\n-                return data[index];\n-            } else {\n-                throw new IndexOutOfBoundsException();\n-            }\n+            this.data = new char[buffSize];\n+            this.length = 0;\n         }\n \n         protected abstract char[] copyData(int start, final int length);\n \n         public int length() {\n             return length;\n-        }\n-\n-        public CharSequence subSequence(int start, int end) {\n-            final int length = end - start;\n-            char[] newData = copyData(start, length);\n-            return createCologneBuffer(newData);\n         }\n \n         public String toString() {", "timestamp": 1295974615, "metainfo": ""}