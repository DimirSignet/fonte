{"sha": "c00b6e25b8c636d6bb29d0a2b712c24002915c07", "log": "Renamed urlencode to encodeUrl. Renamed urldecode to decodeUrl. Updates Javadocs to start method comments to use the verb form \"Decodes\" or \"Encodes\" instead of \"Converts\" to match method names. Refactored \"US-ASCII\" references to a static var.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/net/URLCodec.java,v 1.3 2003/07/31 20:09:21 tobrien Exp $\n- * $Revision: 1.3 $\n- * $Date: 2003/07/31 20:09:21 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/net/URLCodec.java,v 1.4 2003/08/14 06:59:31 ggregory Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2003/08/14 06:59:31 $\n  *\n  * ====================================================================\n  *\n import org.apache.commons.codec.StringEncoder;\n \n /**\n- * URLCodec implements 'www-form-urlencoded' encoding scheme, \n- * also misleadingly known as URL encoding. \n- * For more detailed information please refer to \n+ * <p>Implements the 'www-form-urlencoded' encoding scheme, \n+ * also misleadingly known as URL encoding.</p>\n+ *  \n+ * <p>For more detailed information please refer to \n  * <a href=\"http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1\">\n  * Chapter 17.13.4 'Form content types'</a> of the \n- * <a href=\"http://www.w3.org/TR/html4/\">HTML 4.01 Specification<a>\n+ * <a href=\"http://www.w3.org/TR/html4/\">HTML 4.01 Specification<a></p>\n  * \n  * <p> \n  * This codec is meant to be a replacement for standard Java classes\n  * </p>\n  * \n  * @author <a href=\"mailto:oleg@ural.ru\">Oleg Kalnichevski</a>\n- * @version $Id: URLCodec.java,v 1.3 2003/07/31 20:09:21 tobrien Exp $\n+ * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n+ * @version $Id: URLCodec.java,v 1.4 2003/08/14 06:59:31 ggregory Exp $\n  */\n \n public class URLCodec \n         implements BinaryEncoder, BinaryDecoder, \n                    StringEncoder, StringDecoder \n {\n+    \n+    /**\n+     * The <code>String</code> encoding used for decoding and encoding.\n+     */\n+    protected static final String ENCODING = \"US-ASCII\";\n     \n     /**\n      * BitSet of www-form-url safe characters.\n \n \n     /**\n-     * Default constructor\n+     * Default constructor.\n      */\n     public URLCodec() {\n         super();\n     }\n \n     /**\n-     * Converts an array of bytes into an array of URL safe 7-bit \n+     * Encodes an array of bytes into an array of URL safe 7-bit \n      * characters. Unsafe characters are escaped.\n      *\n      * @param urlsafe bitset of characters deemed URL safe\n      * @return array of bytes containing URL safe characters\n      * @throws EncoderException Thrown if URL encoding is unsuccessful\n      */\n-    public static final byte[] urlencode(BitSet urlsafe, byte[] pArray) \n+    public static final byte[] encodeUrl(BitSet urlsafe, byte[] pArray) \n         throws EncoderException\n     {\n         if (pArray == null) {\n \n \n     /**\n-     * Converts an array of URL safe 7-bit characters into an array of \n+     * Decodes an array of URL safe 7-bit characters into an array of \n      * original bytes. Escaped characters are converted back to their \n      * original representation.\n      *\n      * @return array of original bytes \n      * @throws DecoderException Thrown if URL decoding is unsuccessful\n      */\n-    public static final byte[] urldecode(byte[] pArray) \n+    public static final byte[] decodeUrl(byte[] pArray) \n          throws DecoderException\n     {\n         if (pArray == null) {\n \n \n     /**\n-     * Converts an array of bytes into an array of URL safe 7-bit \n+     * Encodes an array of bytes into an array of URL safe 7-bit \n      * characters. Unsafe characters are escaped.\n      *\n      * @param pArray array of bytes to convert to URL safe characters\n      * @throws EncoderException Thrown if URL encoding is unsuccessful\n      */\n     public byte[] encode(byte[] pArray) throws EncoderException {\n-        return urlencode(WWW_FORM_URL, pArray);\n-    }\n-\n-\n-    /**\n-     * Converts an array of URL safe 7-bit characters into an array of \n+        return encodeUrl(WWW_FORM_URL, pArray);\n+    }\n+\n+\n+    /**\n+     * Decodes an array of URL safe 7-bit characters into an array of \n      * original bytes. Escaped characters are converted back to their \n      * original representation.\n      *\n      * @throws DecoderException Thrown if URL decoding is unsuccessful\n      */\n     public byte[] decode(byte[] pArray) throws DecoderException {\n-        return urldecode(pArray);\n-    }\n-\n-\n-    /**\n-     * Converts a string into its URL safe form using the specified\n+        return decodeUrl(pArray);\n+    }\n+\n+\n+    /**\n+     * Encodes a string into its URL safe form using the specified\n      * character set. Unsafe characters are escaped.\n      *\n      * @param pString string to convert to a URL safe form\n         if (pString == null) {\n             return null;\n         }\n-        return new String(encode(pString.getBytes(charset)), \"US-ASCII\");\n-    }\n-\n-\n-    /**\n-     * Converts a string into its URL safe form. Unsafe characters are \n+        return new String(encode(pString.getBytes(charset)), ENCODING);\n+    }\n+\n+\n+    /**\n+     * Encodes a string into its URL safe form. Unsafe characters are \n      * escaped.\n      *\n      * @param pString string to convert to a URL safe form\n             return null;\n         }\n         try {\n-            return new String(encode(pString.getBytes()), \"US-ASCII\");\n+            return new String(encode(pString.getBytes()), ENCODING);\n         } catch(UnsupportedEncodingException e) {\n             throw new EncoderException(e.getMessage());\n         }\n \n \n     /**\n-     * Converts a URL safe string into its original form using the \n+     * Decodes a URL safe string into its original form using the \n      * specified character set. Escaped characters are converted back \n      * to their original representation.\n      *\n         if (pString == null) {\n             return null;\n         }\n-        return new String(decode(pString.getBytes(\"US-ASCII\")), charset);\n-    }\n-\n-\n-    /**\n-     * Converts a URL safe string into its original form. Escaped \n+        return new String(decode(pString.getBytes(ENCODING)), charset);\n+    }\n+\n+\n+    /**\n+     * Decodes a URL safe string into its original form. Escaped \n      * characters are converted back to their original representation.\n      *\n      * @param pString URL safe string to convert into its original form\n             return null;\n         }\n         try {\n-            return new String(decode(pString.getBytes(\"US-ASCII\")));\n+            return new String(decode(pString.getBytes(ENCODING)));\n         } catch(UnsupportedEncodingException e) {\n             throw new DecoderException(e.getMessage());\n         }\n \n \n     /**\n-     * Converts an object into its URL safe form. Unsafe characters are \n+     * Encodes an object into its URL safe form. Unsafe characters are \n      * escaped.\n      *\n      * @param pObject string to convert to a URL safe form\n     }\n \n     /**\n-     * Converts a URL safe object into its original form. Escaped \n+     * Decodes a URL safe object into its original form. Escaped \n      * characters are converted back to their original representation.\n      *\n      * @param pObject URL safe object to convert into its original form", "timestamp": 1060844371, "metainfo": ""}