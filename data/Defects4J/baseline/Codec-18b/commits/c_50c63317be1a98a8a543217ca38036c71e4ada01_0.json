{"sha": "50c63317be1a98a8a543217ca38036c71e4ada01", "log": "Exception not thrown  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/language/NysiisTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/NysiisTest.java\n         return new Nysiis();\n     }\n \n-    private void encodeAll(final String[] strings, final String expectedEncoding) throws EncoderException {\n+    private void encodeAll(final String[] strings, final String expectedEncoding) {\n         for (final String string : strings) {\n             Assert.assertEquals(\"Problem with \" + string, expectedEncoding, getStringEncoder().encode(string));\n         }\n     }\n \n     @Test\n-    public void testBran() throws EncoderException {\n+    public void testBran() {\n         encodeAll(new String[] { \"Brian\", \"Brown\", \"Brun\" }, \"BRAN\");\n     }\n \n     @Test\n-    public void testCap() throws EncoderException {\n+    public void testCap() {\n         this.encodeAll(new String[] { \"Capp\", \"Cope\", \"Copp\", \"Kipp\" }, \"CAP\");\n     }\n \n     @Test\n-    public void testDad() throws EncoderException {\n+    public void testDad() {\n         // Data Quality and Record Linkage Techniques P.121 claims this is DAN,\n         // but it should be DAD, verified also with dropby.com\n         this.encodeAll(new String[] { \"Dent\" }, \"DAD\");\n     }\n \n     @Test\n-    public void testDan() throws EncoderException {\n+    public void testDan() {\n         this.encodeAll(new String[] { \"Dane\", \"Dean\", \"Dionne\" }, \"DAN\");\n     }\n \n     }\n \n     @Test\n-    public void testFal() throws EncoderException {\n+    public void testFal() {\n         this.encodeAll(new String[] { \"Phil\" }, \"FAL\");\n     }\n \n                 new String[] { \"XAS\", \"X\" }); // Rules 5, 7\n     }\n     @Test\n-    public void testSnad() throws EncoderException {\n+    public void testSnad() {\n         // Data Quality and Record Linkage Techniques P.121 claims this is SNAT,\n         // but it should be SNAD\n         this.encodeAll(new String[] { \"Schmidt\" }, \"SNAD\");\n     }\n \n     @Test\n-    public void testSnat() throws EncoderException {\n+    public void testSnat() {\n         this.encodeAll(new String[] { \"Smith\", \"Schmit\" }, \"SNAT\");\n     }\n \n     @Test\n-    public void testSpecialBranches() throws EncoderException {\n+    public void testSpecialBranches() {\n         this.encodeAll(new String[] { \"Kobwick\" }, \"CABWAC\");\n         this.encodeAll(new String[] { \"Kocher\" }, \"CACAR\");\n         this.encodeAll(new String[] { \"Fesca\" }, \"FASC\");\n     }\n \n     @Test\n-    public void testTranan() throws EncoderException {\n+    public void testTranan() {\n         this.encodeAll(new String[] { \"Trueman\", \"Truman\" }, \"TRANAN\");\n     }\n ", "timestamp": 1359056986, "metainfo": ""}