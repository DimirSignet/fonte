{"sha": "298527f9ed4ed5b8b902238c7edcadbe8cdbabe2", "log": "Use final.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n \n         private final Set<Rule.Phoneme> phonemes;\n \n-        private PhonemeBuilder(Rule.Phoneme phoneme) {\n+        private PhonemeBuilder(final Rule.Phoneme phoneme) {\n             this.phonemes = new LinkedHashSet<Rule.Phoneme>();\n             this.phonemes.add(phoneme);\n         }\n         \n-        private PhonemeBuilder(Set<Rule.Phoneme> phonemes) {\n+        private PhonemeBuilder(final Set<Rule.Phoneme> phonemes) {\n             this.phonemes = phonemes;\n         }\n \n         public RulesApplication invoke() {\n             this.found = false;\n             int patternLength = 1;\n-            List<Rule> rules = this.finalRules.get(input.subSequence(i, i+patternLength));\n+            final List<Rule> rules = this.finalRules.get(input.subSequence(i, i+patternLength));\n             if (rules != null) {\n-            \tfor (Rule rule : rules) {\n+            \tfor (final Rule rule : rules) {\n \t            \tfinal String pattern = rule.getPattern();\n \t                patternLength = pattern.length();\n \t            \tif (rule.patternAndContextMatches(this.input, this.i)) {\n--- a/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n                                         return sb.toString();\n                                     }\n                                 };\n-                                String patternKey = r.pattern.substring(0,1);\n+                                final String patternKey = r.pattern.substring(0,1);\n                                 List<Rule> rules = lines.get(patternKey);\n                                 if (rules == null) {\n                                 \trules = new ArrayList<Rule>();\n--- a/src/test/java/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/java/org/apache/commons/codec/binary/Base64Test.java\n     @Test\n     public void testDecodeWithInnerPad() {\n         final String content = \"SGVsbG8gV29ybGQ=SGVsbG8gV29ybGQ=\";\n-        byte[] result = Base64.decodeBase64(content);\n-        byte[] shouldBe = StringUtils.getBytesUtf8(\"Hello World\");\n+        final byte[] result = Base64.decodeBase64(content);\n+        final byte[] shouldBe = StringUtils.getBytesUtf8(\"Hello World\");\n         assertTrue(\"decode should halt at pad (=)\", Arrays.equals(result, shouldBe));\n     }\n \n--- a/src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/bm/PhoneticEnginePerformanceTest.java\n \n     @Test\n     public void test() {\n-        PhoneticEngine engine = new PhoneticEngine(NameType.GENERIC, RuleType.APPROX, true);\n+        final PhoneticEngine engine = new PhoneticEngine(NameType.GENERIC, RuleType.APPROX, true);\n         final String input = \"Angelo\";\n         final long startMillis = System.currentTimeMillis();\n         for (int i = 0; i < LOOP; i++) {", "timestamp": 1383856580, "metainfo": ""}