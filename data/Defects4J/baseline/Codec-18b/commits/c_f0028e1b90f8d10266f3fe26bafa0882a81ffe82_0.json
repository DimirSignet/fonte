{"sha": "f0028e1b90f8d10266f3fe26bafa0882a81ffe82", "log": "[CODEC-224] Add convenience API org.apache.commons.codec.binary.Hex.encodeHexString(byte[]|ByteBuffer, boolean).  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/binary/Hex.java\n+++ b/src/main/java/org/apache/commons/codec/binary/Hex.java\n     }\n \n     /**\n+     * Converts an array of bytes into a String representing the hexadecimal values of each byte in order. The returned\n+     * String will be double the length of the passed array, as it takes two characters to represent any given byte.\n+     *\n+     * @param data\n+     *            a byte[] to convert to Hex characters\n+     * @param toLowerCase\n+     *            <code>true</code> converts to lowercase, <code>false</code> to uppercase\n+     * @return A String containing lower-case hexadecimal characters\n+     * @since 1.11\n+     */\n+    public static String encodeHexString(final byte[] data, boolean toLowerCase) {\n+        return new String(encodeHex(data, toLowerCase));\n+    }\n+\n+    /**\n      * Converts a byte buffer into a String representing the hexadecimal values of each byte in order. The returned\n      * String will be double the length of the passed array, as it takes two characters to represent any given byte.\n      *\n      */\n     public static String encodeHexString(final ByteBuffer data) {\n         return new String(encodeHex(data));\n+    }\n+\n+    /**\n+     * Converts a byte buffer into a String representing the hexadecimal values of each byte in order. The returned\n+     * String will be double the length of the passed array, as it takes two characters to represent any given byte.\n+     *\n+     * @param data\n+     *            a byte buffer to convert to Hex characters\n+     * @param toLowerCase\n+     *            <code>true</code> converts to lowercase, <code>false</code> to uppercase\n+     * @return A String containing lower-case hexadecimal characters\n+     * @since 1.11\n+     */\n+    public static String encodeHexString(final ByteBuffer data, boolean toLowerCase) {\n+        return new String(encodeHex(data, toLowerCase));\n     }\n \n     /**\n--- a/src/test/java/org/apache/commons/codec/binary/HexTest.java\n+++ b/src/test/java/org/apache/commons/codec/binary/HexTest.java\n     }\n \n     @Test\n+    public void testEncodeHexByteString_ByteArrayBoolean_ToLowerCase() {\n+        assertEquals(\"0a\", Hex.encodeHexString(new byte[] { 10 }, true));\n+    }\n+\n+    @Test\n+    public void testEncodeHexByteString_ByteArrayBoolean_ToUpperCase() {\n+        assertEquals(\"0A\", Hex.encodeHexString(new byte[] { 10 }, false));\n+    }\n+\n+    @Test\n+    public void testEncodeHexByteString_ByteBufferBoolean_ToLowerCase() {\n+        assertEquals(\"0a\", Hex.encodeHexString(ByteBuffer.wrap(new byte[] { 10 }), true));\n+    }\n+\n+    @Test\n+    public void testEncodeHexByteString_ByteBufferBoolean_ToUpperCase() {\n+        assertEquals(\"0A\", Hex.encodeHexString(ByteBuffer.wrap(new byte[] { 10 }), false));\n+    }\n+\n+    @Test\n     public void testEncodeStringEmpty() throws EncoderException {\n         assertTrue(Arrays.equals(new char[0], (char[]) new Hex().encode(\"\")));\n     }", "timestamp": 1469483439, "metainfo": ""}