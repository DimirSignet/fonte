{"sha": "2118816d94129503b695990224d9edff3560b3ef", "log": "Javadoc typos: ascii -> ASCII.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java\n+++ b/src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java\n         return str;\n     }\n \n-    /** Whether to use ascii folding prior to encoding. */\n+    /** Whether to use ASCII folding prior to encoding. */\n     private final boolean folding;\n \n     /**\n-     * Creates a new instance with ascii-folding enabled.\n+     * Creates a new instance with ASCII-folding enabled.\n      */\n     public DaitchMokotoffSoundex() {\n         this(true);\n     /**\n      * Creates a new instance.\n      * <p>\n-     * With ascii-folding enabled, certain accented characters will be transformed to equivalent ascii characters, e.g.\n+     * With ASCII-folding enabled, certain accented characters will be transformed to equivalent ASCII characters, e.g.\n      * \u00e8 -&gt; e.\n      *\n      * @param folding\n-     *            if ascii-folding shall be performed before encoding\n+     *            if ASCII-folding shall be performed before encoding\n      */\n     public DaitchMokotoffSoundex(final boolean folding) {\n         this.folding = folding;\n     /**\n      * Performs a cleanup of the input string before the actual soundex transformation.\n      * <p>\n-     * Removes all whitespace characters and performs ascii folding if enabled.\n+     * Removes all whitespace characters and performs ASCII folding if enabled.\n      *\n      * @param input\n      *            the input string to cleanup", "timestamp": 1415067892, "metainfo": ""}