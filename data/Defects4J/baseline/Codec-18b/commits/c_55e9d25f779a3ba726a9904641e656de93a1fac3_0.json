{"sha": "55e9d25f779a3ba726a9904641e656de93a1fac3", "log": "CODEC-195 - Support SHA-224 in DigestUtils on Java 8 Drop specific methods and provide sample code instead  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n  * However the MessageDigest instances it creates generally won't be.\n  * <p>\n  * The {@link MessageDigestAlgorithms} class provides constants for standard\n- * digest algorithms that can be used with the {@link #getDigest(String)} method.\n+ * digest algorithms that can be used with the {@link #getDigest(String)} method\n+ * and other methods that require the Digest algorithm name.\n+ * <p>\n+ * Note: the class has short-hand methods for all the algorithms present as standard in Java 6.\n+ * This approach requires lots of methods for each algorithm, and quickly becomes unwieldy.\n+ * The following code works with all algorithms:\n+ * <code>\n+ * <pre>\n+ * import static org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_224;\n+ * ...\n+ * byte [] digest = DigestUtils.digest(SHA_224, dataToDigest);\n+ * </pre>\n+ * </code>\n  * @see MessageDigestAlgorithms\n  * @version $Id$\n  */\n      */\n     public static byte[] digest(final MessageDigest messageDigest, final InputStream data) throws IOException {\n         return updateDigest(messageDigest, data).digest();\n+    }\n+\n+    /**\n+     * Reads through a byte array and returns the digest for the data.\n+     *\n+     * @param digestName\n+     *            The name of the algorithm to use (e.g. MessageDigestAlgoriths.MD5 or \"MD5\")\n+     * @param data\n+     *            Data to digest\n+     * @return the digest\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @since 1.11\n+     */\n+    public static byte[] digest(final String digestName, final byte[] data) {\n+        return digest(getDigest(digestName), data);\n+    }\n+\n+    /**\n+     * Reads through a ByteBuffer and returns the digest for the data\n+     *\n+     * @param digestName\n+     *            The name of the algorithm to use (e.g. MessageDigestAlgoriths.MD5 or \"MD5\")\n+     * @param data\n+     *            Data to digest\n+     * @return the digest\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @since 1.11\n+     */\n+    public static byte[] digest(final String digestName, final ByteBuffer data) {\n+        MessageDigest messageDigest = getDigest(digestName);\n+        messageDigest .update(data);\n+        return messageDigest.digest();\n+    }\n+\n+    /**\n+     * Reads through a File and returns the digest for the data\n+     *\n+     * @param digestName\n+     *            The name of the algorithm to use (e.g. MessageDigestAlgoriths.MD5 or \"MD5\")\n+     * @param data\n+     *            Data to digest\n+     * @return the digest\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @since 1.11\n+     */\n+    public static byte[] digest(final String digestName, final File data) throws IOException {\n+        return updateDigest(getDigest(digestName), data).digest();\n+    }\n+\n+    /**\n+     * Reads through an InputStream and returns the digest for the data\n+     *\n+     * @param digestName\n+     *            The name of the algorithm to use (e.g. MessageDigestAlgoriths.MD5 or \"MD5\")\n+     * @param data\n+     *            Data to digest\n+     * @return the digest\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @since 1.11\n+     */\n+    public static byte[] digest(final String digestName, final InputStream data) throws IOException {\n+        return updateDigest(getDigest(digestName), data).digest();\n     }\n \n     /**\n     }\n \n     /**\n-     * Returns an SHA-224 digest.\n-     * <p>\n-     * Java 8 only.\n-     * </p>\n-     *\n-     * @return An SHA-224 digest instance.\n-     * @throws IllegalArgumentException\n-     *             when a {@link NoSuchAlgorithmException} is caught on Java 7 and older, SHA-224 is a built-in\n-     *             algorithm on Java 8\n-     * @see MessageDigestAlgorithms#SHA_224\n-     * @since 1.11\n-     */\n-    public static MessageDigest getSha224Digest() {\n-        return getDigest(MessageDigestAlgorithms.SHA_224);\n-    }\n-\n-    /**\n      * Returns an SHA-256 digest.\n      * <p>\n      * Throws a <code>RuntimeException</code> on JRE versions prior to 1.4.0.\n     }\n \n     /**\n-     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static byte[] sha224(final byte[] data) {\n-        return digest(getSha224Digest(), data);\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static byte[] sha224(final ByteBuffer data) {\n-        return digest(getSha224Digest(), data);\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n-     * <p>\n-     * Throws a <code>RuntimeException</code> on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            File to digest\n-     * @return SHA-224 digest\n-     * @throws IOException\n-     *             On error reading from the stream\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static byte[] sha224(final File data) throws IOException {\n-        return digest(getSha224Digest(), data);\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest\n-     * @throws IOException\n-     *             On error reading from the stream\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static byte[] sha224(final InputStream data) throws IOException {\n-        return digest(getSha224Digest(), data);\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest; converted to bytes using {@link StringUtils#getBytesUtf8(String)}\n-     * @return SHA-224 digest\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static byte[] sha224(final String data) {\n-        return sha224(StringUtils.getBytesUtf8(data));\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a hex string.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest as a hex string\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static String sha224Hex(final byte[] data) {\n-        return Hex.encodeHexString(sha224(data));\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a hex string.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest as a hex string\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static String sha224Hex(final ByteBuffer data) {\n-        return Hex.encodeHexString(sha224(data));\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a hex string.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest as a hex string\n-     * @throws IOException\n-     *             On error reading from the stream\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static String sha224Hex(final File data) throws IOException {\n-        return Hex.encodeHexString(sha224(data));\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a hex string.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest as a hex string\n-     * @throws IOException\n-     *             On error reading from the stream\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static String sha224Hex(final InputStream data) throws IOException {\n-        return Hex.encodeHexString(sha224(data));\n-    }\n-\n-    /**\n-     * Calculates the SHA-224 digest and returns the value as a hex string.\n-     * <p>\n-     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.8.0.\n-     * </p>\n-     *\n-     * @param data\n-     *            Data to digest\n-     * @return SHA-224 digest as a hex string\n-     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n-     * @since 1.11\n-     */\n-    public static String sha224Hex(final String data) {\n-        return Hex.encodeHexString(sha224(data));\n-    }\n-\n-    /**\n      * Calculates the SHA-256 digest and returns the value as a <code>byte[]</code>.\n      * <p>\n      * Throws a <code>RuntimeException</code> on JRE versions prior to 1.4.0.", "timestamp": 1463578886, "metainfo": ""}