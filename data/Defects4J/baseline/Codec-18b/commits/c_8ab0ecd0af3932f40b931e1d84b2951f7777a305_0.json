{"sha": "8ab0ecd0af3932f40b931e1d84b2951f7777a305", "log": "Checkstyle  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/cli/Digest.java\n+++ b/src/main/java/org/apache/commons/codec/cli/Digest.java\n      * </p>\n      *\n      * @param args\n-     *            {@code args[0]} is one of {@link MessageDigestAlgorithms} name, {@link MessageDigest} name, {@code ALL}\n-     *            , or {@code *}.\n+     *            {@code args[0]} is one of {@link MessageDigestAlgorithms} name,\n+     *            {@link MessageDigest} name, {@code ALL}, or {@code *}.\n      *            {@code args[1+]} is a FILE/DIRECTORY/String.\n      * @throws IOException if an error occurs\n      */\n--- a/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java\n+++ b/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java\n      */\n     public static String[] values() {\n         // N.B. do not use a constant array here as that can be changed externally by accident or design\n-        return new String[] { MD2, MD5, SHA_1, SHA_224, SHA_256, SHA_384, SHA_512, SHA3_224, SHA3_256, SHA3_384, SHA3_512 };\n+        return new String[] {\n+            MD2, MD5, SHA_1, SHA_224, SHA_256, SHA_384, SHA_512, SHA3_224, SHA3_256, SHA3_384, SHA3_512\n+        };\n     }\n \n     private MessageDigestAlgorithms() {\n--- a/src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java\n+++ b/src/main/java/org/apache/commons/codec/digest/PureJavaCrc32.java\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n     final int remainder = len & 0x7;\n     int i = offset;\n     for(final int end = offset + len - remainder; i < end; i += 8) {\n-      final int x = localCrc\n-          ^ ((((b[i  ] << 24) >>> 24) + ((b[i+1] << 24) >>> 16))\n-           + (((b[i+2] << 24) >>> 8 ) +  (b[i+3] << 24)));\n-\n-      localCrc = ((T[((x << 24) >>> 24) + 0x700] ^ T[((x << 16) >>> 24) + 0x600])\n-                ^ (T[((x <<  8) >>> 24) + 0x500] ^ T[ (x        >>> 24) + 0x400]))\n-               ^ ((T[((b[i+4] << 24) >>> 24) + 0x300] ^ T[((b[i+5] << 24) >>> 24) + 0x200])\n-                ^ (T[((b[i+6] << 24) >>> 24) + 0x100] ^ T[((b[i+7] << 24) >>> 24)]));\n+      final int x = localCrc ^\n+          ((((b[i  ] << 24) >>> 24) + ((b[i+1] << 24) >>> 16)) +\n+          (((b[i+2] << 24) >>> 8 ) +  (b[i+3] << 24)));\n+\n+      localCrc = ((T[((x << 24) >>> 24) + 0x700] ^ T[((x << 16) >>> 24) + 0x600]) ^\n+                 (T[((x <<  8) >>> 24) + 0x500] ^ T[ (x        >>> 24) + 0x400])) ^\n+                 ((T[((b[i+4] << 24) >>> 24) + 0x300] ^ T[((b[i+5] << 24) >>> 24) + 0x200]) ^\n+                 (T[((b[i+6] << 24) >>> 24) + 0x100] ^ T[((b[i+7] << 24) >>> 24)]));\n     }\n \n     /* loop unroll - duff's device style */\n--- a/src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java\n+++ b/src/main/java/org/apache/commons/codec/digest/PureJavaCrc32C.java\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- *\n+ */\n+/*\n  * Some portions of this file Copyright (c) 2004-2006 Intel Corportation\n  * and licensed under the BSD license.\n  */\n       final int c1 =(b[off+1] ^ (localCrc >>>= 8)) & 0xff;\n       final int c2 =(b[off+2] ^ (localCrc >>>= 8)) & 0xff;\n       final int c3 =(b[off+3] ^ (localCrc >>>= 8)) & 0xff;\n-      localCrc = (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n-          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n+      localCrc = (T[T8_7_start + c0] ^ T[T8_6_start + c1]) ^\n+                 (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n \n       final int c4 = b[off+4] & 0xff;\n       final int c5 = b[off+5] & 0xff;\n       final int c6 = b[off+6] & 0xff;\n       final int c7 = b[off+7] & 0xff;\n \n-      localCrc ^= (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n-           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n+      localCrc ^= (T[T8_3_start + c4] ^ T[T8_2_start + c5]) ^\n+                  (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n \n       off += 8;\n       len -= 8;", "timestamp": 1463748958, "metainfo": ""}