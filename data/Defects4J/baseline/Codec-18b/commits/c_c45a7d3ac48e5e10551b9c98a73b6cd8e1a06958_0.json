{"sha": "c45a7d3ac48e5e10551b9c98a73b6cd8e1a06958", "log": "[CODEC-156] DigestUtils: add APIs named after standard alg name SHA-1.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n     }\n \n     /**\n+     * Calculates the SHA-1 digest and returns the value as a <code>byte[]</code>.\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-1 digest\n+     */\n+    public static byte[] sha1(String data) {\n+        return sha1(getBytesUtf8(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-1 digest and returns the value as a hex string.\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-1 digest as a hex string\n+     * @since 1.7\n+     */\n+    public static String sha1Hex(byte[] data) {\n+        return Hex.encodeHexString(sha1(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-1 digest and returns the value as a hex string.\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-1 digest as a hex string\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @since 1.7\n+     */\n+    public static String sha1Hex(InputStream data) throws IOException {\n+        return Hex.encodeHexString(sha1(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-1 digest and returns the value as a hex string.\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-1 digest as a hex string\n+     * @since 1.7\n+     */\n+    public static String sha1Hex(String data) {\n+        return Hex.encodeHexString(sha1(data));\n+    }\n+\n+    /**\n      * Calculates the SHA-256 digest and returns the value as a <code>byte[]</code>.\n      * <p>\n      * Throws a <code>RuntimeException</code> on JRE versions prior to 1.4.0.\n--- a/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n     }\n \n     @Test\n+    public void testSha1Hex() throws IOException {\n+        // Examples from FIPS 180-1\n+        assertEquals(\"a9993e364706816aba3e25717850c26c9cd0d89d\", DigestUtils.sha1Hex(\"abc\"));\n+\n+        assertEquals(\"a9993e364706816aba3e25717850c26c9cd0d89d\", DigestUtils.sha1Hex(getBytesUtf8(\"abc\")));\n+\n+        assertEquals(\n+            \"84983e441c3bd26ebaae4aa1f95129e5e54670f1\",\n+            DigestUtils.shaHex(\"abcdbcdecdefdefgefghfghighij\" + \"hijkijkljklmklmnlmnomnopnopq\"));\n+        assertEquals(DigestUtils.shaHex(testData),\n+                DigestUtils.shaHex(new ByteArrayInputStream(testData)));\n+    }\n+\n+    @Test\n     public void testSha1UpdateWithByteArray(){\n         final String d1 = \"C'est un homme qui rentre dans un caf\u00e9, et plouf\";\n         final String d2 = \"C'est un homme, c'est qu'une t\u00eate, on lui offre un cadeau: 'oh... encore un chapeau!'\";", "timestamp": 1346610724, "metainfo": ""}