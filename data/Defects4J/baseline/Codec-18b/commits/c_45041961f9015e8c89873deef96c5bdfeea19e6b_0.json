{"sha": "45041961f9015e8c89873deef96c5bdfeea19e6b", "log": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Apply Matthew's patch https://issues.apache.org/jira/secure/attachment/12489569/fixmeInvariant.patch. This patch hoists the l-invariant code out of the loop over l. The d'ortley test input string exercises this branch. The \"van helsing\" input string should be exercising the alternate branch. Thank you MP!  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n         input = input.toLowerCase(Locale.ENGLISH).replace('-', ' ').trim();\n \n         if (this.nameType == NameType.GENERIC) {\n+            if (input.length() >= 2 && input.substring(0, 2).equals(\"d'\")) { // check for d'\n+                String remainder = input.substring(2);\n+                String combined = \"d\" + remainder;\n+                return \"(\" + encode(remainder) + \")-(\" + encode(combined) + \")\";\n+            }\n             for (String l : NAME_PREFIXES.get(this.nameType)) {\n                 // handle generic prefixes\n                 if (input.startsWith(l + \" \")) {\n                     // check for any prefix in the words list\n                     String remainder = input.substring(l.length() + 1); // input without the prefix\n                     String combined = l + remainder; // input with prefix without space\n-                    return \"(\" + encode(remainder) + \")-(\" + encode(combined) + \")\";\n-                }\n-                // fixme: this case is invariant on l\n-                else if (input.length() >= 2 && input.substring(0, 2).equals(\"d'\")) { // check for d'\n-                    String remainder = input.substring(2);\n-                    String combined = \"d\" + remainder;\n                     return \"(\" + encode(remainder) + \")-(\" + encode(combined) + \")\";\n                 }\n             }", "timestamp": 1312649477, "metainfo": ""}