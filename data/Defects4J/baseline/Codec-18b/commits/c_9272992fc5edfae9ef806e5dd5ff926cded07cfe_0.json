{"sha": "9272992fc5edfae9ef806e5dd5ff926cded07cfe", "log": "Code clean ups.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/java/org/apache/commons/codec/language/bm/Rule.java\n      * @return a list of Rules that apply\n      */\n     public static List<Rule> instance(NameType nameType, RuleType rt, Languages.LanguageSet langs) {\n-        if (langs.isSingleton()) {\n-            return instance(nameType, rt, langs.getAny());\n-        } else {\n-            return instance(nameType, rt, Languages.ANY);\n-        }\n+        return langs.isSingleton() ? instance(nameType, rt, langs.getAny()) : instance(nameType, rt, Languages.ANY);\n     }\n \n     /**\n                     if (line.length() == 0) {\n                         continue; // empty lines can be safely skipped\n                     }\n-                    \n+\n                     if (line.startsWith(HASH_INCLUDE)) {\n                         // include statement\n                         String incl = line.substring(HASH_INCLUDE.length()).trim();\n     }\n \n     private static boolean startsWith(CharSequence input, CharSequence prefix) {\n-        if (prefix.length() > input.length())\n+        if (prefix.length() > input.length()) {\n             return false;\n+        }\n         for (int i = 0; i < prefix.length(); i++) {\n             if (input.charAt(i) != prefix.charAt(i)) {\n                 return false;\n     }\n \n     private static boolean endsWith(CharSequence input, CharSequence suffix) {\n-        if (suffix.length() > input.length())\n+        if (suffix.length() > input.length()) {\n             return false;\n+        }\n         for (int i = input.length() - 1, j = suffix.length() - 1; j >= 0; i--, j--) {\n             if (input.charAt(i) != suffix.charAt(j)) {\n                 return false;\n     }\n \n     private static class AppendableCharSeqeuence implements CharSequence {\n+        \n         private final CharSequence left;\n         private final CharSequence right;\n         private final int length;", "timestamp": 1312597766, "metainfo": ""}