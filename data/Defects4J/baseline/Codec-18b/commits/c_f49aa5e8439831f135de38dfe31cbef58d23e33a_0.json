{"sha": "f49aa5e8439831f135de38dfe31cbef58d23e33a", "log": "Remove trailing white spaces on all lines.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/Md5Crypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Md5Crypt.java\n      * Generates a libc6 crypt() \"$1$\" or Apache htpasswd \"$apr1$\" hash value.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} or {@link #apr1Crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext string to hash.\n      * @param salt May be null.\n--- a/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n  * into the Public Domain.\n  * <p>\n  * This class is immutable and thread-safe.\n- * \n+ *\n  * @version $Id$\n  * @since 1.7\n  */\n      * Generates a libc crypt() compatible \"$5$\" hash value with random salt.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext to hash\n      * @return complete hash value\n      * Generates a libc6 crypt() compatible \"$5$\" hash value.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext to hash\n      * @param salt\n      * description, the short C-style ones from the original C code and the ones with \"Remark\" from me.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext to hash\n      * @param salt\n      * Generates a libc crypt() compatible \"$6$\" hash value with random salt.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext to hash\n      * @return complete hash value\n      * Generates a libc6 crypt() compatible \"$6$\" hash value.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n-     * \n+     *\n      * @param keyBytes\n      *            plaintext to hash\n      * @param salt\n--- a/src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java\n     public final void testAccentRemoval_NINO_NoChange() {\n         assertEquals(\"\", this.getStringEncoder().removeAccents(\"\"));\n     }\n-    \n+\n     @Test\n     public final void testAccentRemoval_NullValue_ReturnNullSuccessfully() {\n         assertEquals(null, this.getStringEncoder().removeAccents(null));\n     public final void testGetMinRating_7_Return4_Successfully() {\n         assertEquals(4, this.getStringEncoder().getMinRating(7));\n     }\n-    \n+\n     @Test\n     public final void testGetMinRating_1_Returns5_Successfully() {\n         assertEquals(5, this.getStringEncoder().getMinRating(1));\n     public final void testGetMinRating_2_Returns5_Successfully() {\n         assertEquals(5, this.getStringEncoder().getMinRating(2));\n     }\n-    \n+\n     @Test\n     public final void testgetMinRating_5_Returns4_Successfully(){\n-        assertEquals(4, this.getStringEncoder().getMinRating(5)); \n-    }\n-    \n+        assertEquals(4, this.getStringEncoder().getMinRating(5));\n+    }\n+\n     @Test\n     public final void testgetMinRating_5_Returns4_Successfully2(){\n-        assertEquals(4, this.getStringEncoder().getMinRating(5)); \n-    }\n-    \n+        assertEquals(4, this.getStringEncoder().getMinRating(5));\n+    }\n+\n     @Test\n     public final void testgetMinRating_6_Returns4_Successfully(){\n-        assertEquals(4, this.getStringEncoder().getMinRating(6)); \n-    }\n-    \n+        assertEquals(4, this.getStringEncoder().getMinRating(6));\n+    }\n+\n     @Test\n     public final void testgetMinRating_7_Returns4_Successfully(){\n-        assertEquals(4, this.getStringEncoder().getMinRating(7)); \n-    }\n-    \n+        assertEquals(4, this.getStringEncoder().getMinRating(7));\n+    }\n+\n     @Test\n     public final void testgetMinRating_8_Returns3_Successfully(){\n         assertEquals(3, this.getStringEncoder().getMinRating(8));\n     }\n-    \n+\n     @Test\n     public final void testgetMinRating_10_Returns3_Successfully(){\n-        assertEquals(3, this.getStringEncoder().getMinRating(10)); \n-    }\n-    \n+        assertEquals(3, this.getStringEncoder().getMinRating(10));\n+    }\n+\n     @Test\n     public final void testgetMinRating_11_Returns_3_Successfully(){\n-        assertEquals(3, this.getStringEncoder().getMinRating(11)); \n+        assertEquals(3, this.getStringEncoder().getMinRating(11));\n     }\n \n     @Test\n     public final void testGetMinRating_13_Returns_1_Successfully() {\n         assertEquals(1, this.getStringEncoder().getMinRating(13));\n     }\n-    \n+\n     @Test\n     public final void testcleanName_SuccessfullyClean() {\n         assertEquals(\"THISISATEST\", this.getStringEncoder().cleanName(\"This-\u00eds   a t.,es &t\"));\n     }\n-    \n+\n     @Test\n     public final void testisVowel_SingleVowel_ReturnsTrue() {\n         assertTrue(this.getStringEncoder().isVowel((\"I\")));\n     }\n-    \n+\n     @Test\n     public final void testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"test\", \"\"));\n     public final void testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"\", \"test\"));\n     }\n-    \n+\n     @Test\n     public final void testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"test\", \" \"));\n     public final void testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\" \", \"test\"));\n     }\n-    \n+\n     @Test\n     public final void testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"test\", null));\n     public final void testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(null, \"test\"));\n     }\n-    \n+\n     @Test\n     public final void testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"t\", \"test\"));\n     public final void testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse() {\n         assertFalse(this.getStringEncoder().isEncodeEquals(\"test\", \"t\"));\n     }\n-    \n+\n     // ***** END REGION - TEST SUPPORT METHODS\n \n     // ***** BEGIN REGION - TEST GET MRA ENCODING\n     public final void testGetEncoding_One_Letter_to_Nothing() {\n         assertEquals(\"\", this.getStringEncoder().encode(\"E\"));\n     }\n-    \n+\n     @Test\n     public final void testCompareNameNullSpace_ReturnsFalseSuccessfully() {\n         assertFalse(getStringEncoder().isEncodeEquals(null, \" \"));\n     }\n-    \n+\n     @Test\n     public final void testCompareNameSameNames_ReturnsFalseSuccessfully() {\n         assertTrue(getStringEncoder().isEncodeEquals(\"John\", \"John\"));", "timestamp": 1387643219, "metainfo": ""}