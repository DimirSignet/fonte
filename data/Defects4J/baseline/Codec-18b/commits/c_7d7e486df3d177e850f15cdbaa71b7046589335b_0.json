{"sha": "7d7e486df3d177e850f15cdbaa71b7046589335b", "log": "[CODEC-174] Small (4-5%) but consistent performance gain with this patch from https://issues.apache.org/jira/secure/attachment/12613346/CODEC-174-refactor-join-method-in-Phoneme.patch  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n import java.util.Map;\n import java.util.Set;\n import java.util.TreeSet;\n+\n+import org.apache.commons.codec.language.bm.Languages.LanguageSet;\n+import org.apache.commons.codec.language.bm.Rule.Phoneme;\n \n /**\n  * Converts words into potential phonetic representations.\n \n             EXPR: for (final Rule.Phoneme left : this.phonemes) {\n                 for (final Rule.Phoneme right : phonemeExpr.getPhonemes()) {\n-                    final Rule.Phoneme join = left.join(right);\n-                    if (!join.getLanguages().isEmpty()) {\n+                \tLanguageSet languages = left.getLanguages().restrictTo(right.getLanguages());\n+                \tif (!languages.isEmpty()) {\n+                \t\tfinal Rule.Phoneme join = new Phoneme(left, right, languages);\n                         if (newPhonemes.size() < maxPhonemes) {\n                             newPhonemes.add(join);\n                         } else {\n--- a/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n         }\n         \n         public Phoneme(final Phoneme phonemeLeft, final Phoneme phonemeRight) {\n-            this.phonemeText = new StringBuilder(phonemeLeft.phonemeText);\n+            this(phonemeLeft.phonemeText, phonemeLeft.languages);\n             this.phonemeText.append(phonemeRight.phonemeText);\n-            this.languages = phonemeLeft.languages;\n+        }\n+\n+        public Phoneme(final Phoneme phonemeLeft, final Phoneme phonemeRight, final Languages.LanguageSet languages) {\n+            this(phonemeLeft.phonemeText, languages);\n+            this.phonemeText.append(phonemeRight.phonemeText);\n         }\n \n         public Phoneme  append(final CharSequence str) {\n \n         public CharSequence getPhonemeText() {\n             return this.phonemeText;\n-        }\n-\n-        public Phoneme join(final Phoneme right) {\n-            return new Phoneme(this.phonemeText.toString() + right.phonemeText.toString(),\n-                               this.languages.restrictTo(right.languages));\n         }\n     }\n ", "timestamp": 1384290371, "metainfo": ""}