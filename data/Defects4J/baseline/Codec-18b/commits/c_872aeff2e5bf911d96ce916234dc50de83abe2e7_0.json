{"sha": "872aeff2e5bf911d96ce916234dc50de83abe2e7", "log": "Javadoc  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base32OutputStream.java\n+++ b/src/java/org/apache/commons/codec/binary/Base32OutputStream.java\n import java.io.OutputStream;\n \n /**\n- * Provides Base64 encoding and decoding in a streaming fashion (unlimited size). When encoding the default lineLength\n+ * Provides Base32 encoding and decoding in a streaming fashion (unlimited size). When encoding the default lineLength\n  * is 76 characters and the default lineEnding is CRLF, but these can be overridden by using the appropriate\n  * constructor.\n  * <p>\n- * The default behaviour of the Base64OutputStream is to ENCODE, whereas the default behaviour of the Base64InputStream\n+ * The default behaviour of the Base32OutputStream is to ENCODE, whereas the default behaviour of the Base32InputStream\n  * is to DECODE. But this behaviour can be overridden by using a different constructor.\n- * </p>\n- * <p>\n- * This class implements section <cite>6.8. Base64 Content-Transfer-Encoding</cite> from RFC 2045 <cite>Multipurpose\n- * Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</cite> by Freed and Borenstein.\n  * </p>\n  * <p>\n  * Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode\n  * character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).\n  * </p>\n  * \n- * @author Apache Software Foundation\n- * @version $Id$\n- * @see <a href=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045</a>\n- * @since 1.4\n+ * @version $Revision$\n+ * @see <a href=\"http://www.ietf.org/rfc/rfc4648.txt\">RFC 4648</a>\n+ * @since 1.5\n  */\n public class Base32OutputStream extends BaseNCodecOutputStream {\n \n     /**\n-     * Creates a Base64OutputStream such that all data written is Base64-encoded to the original provided OutputStream.\n+     * Creates a Base32OutputStream such that all data written is Base32-encoded to the original provided OutputStream.\n      * \n      * @param out\n      *            OutputStream to wrap.\n     }\n \n     /**\n-     * Creates a Base64OutputStream such that all data written is either Base64-encoded or Base64-decoded to the\n+     * Creates a Base32OutputStream such that all data written is either Base32-encoded or Base32-decoded to the\n      * original provided OutputStream.\n      * \n      * @param out\n     }\n \n     /**\n-     * Creates a Base64OutputStream such that all data written is either Base64-encoded or Base64-decoded to the\n+     * Creates a Base32OutputStream such that all data written is either Base32-encoded or Base32-decoded to the\n      * original provided OutputStream.\n      * \n      * @param out", "timestamp": 1296138827, "metainfo": ""}