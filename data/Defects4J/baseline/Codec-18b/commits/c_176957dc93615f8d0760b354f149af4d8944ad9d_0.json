{"sha": "176957dc93615f8d0760b354f149af4d8944ad9d", "log": "Explicit boxing  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/language/bm/RuleTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/bm/RuleTest.java\n \n         @Override\n         public boolean matches(Object item) {\n-            return (Integer) item < 0;\n+            return ((Integer) item).intValue() < 0;\n         }\n     }\n \n                 for (int j = i + 1; j < phs.length; j++) {\n                     int c = Rule.Phoneme.COMPARATOR.compare(phs[i], phs[j]);\n \n-                    assertThat(\"Comparing \" + phs[i].getPhonemeText() + \" to \" + phs[j].getPhonemeText() + \" should be negative\", c,\n+                    assertThat(\"Comparing \" + phs[i].getPhonemeText() + \" to \" + phs[j].getPhonemeText() + \" should be negative\", Integer.valueOf(c),\n                             new NegativeIntegerBaseMatcher());\n                 }\n             }", "timestamp": 1347194044, "metainfo": ""}