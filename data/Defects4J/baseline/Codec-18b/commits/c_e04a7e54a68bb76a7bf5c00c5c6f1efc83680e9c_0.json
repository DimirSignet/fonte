{"sha": "e04a7e54a68bb76a7bf5c00c5c6f1efc83680e9c", "log": "Code clean ups.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/java/org/apache/commons/codec/language/bm/Rule.java\n  * @since 2.0\n  */\n public class Rule {\n+\n     public static class Phoneme implements PhonemeExpr, Comparable<Phoneme> {\n+\n         private final CharSequence phonemeText;\n         private final Languages.LanguageSet languages;\n \n \n         public int compareTo(Phoneme o) {\n             for (int i = 0; i < phonemeText.length(); i++) {\n-                if (i >= o.phonemeText.length())\n+                if (i >= o.phonemeText.length()) {\n                     return +1;\n+                }\n                 int c = phonemeText.charAt(i) - o.phonemeText.charAt(i);\n-                if (c != 0)\n+                if (c != 0) {\n                     return c;\n-            }\n-\n-            if (phonemeText.length() < o.phonemeText.length())\n+                }\n+            }\n+\n+            if (phonemeText.length() < o.phonemeText.length()) {\n                 return -1;\n+            }\n \n             return 0;\n         }\n                     // trim leading-trailing whitespace\n                     line = line.trim();\n \n-                    if (line.length() == 0)\n+                    if (line.length() == 0) {\n                         continue; // empty lines can be safely skipped\n-\n+                    }\n+                    \n                     if (line.startsWith(HASH_INCLUDE)) {\n                         // include statement\n                         String incl = line.substring(HASH_INCLUDE.length()).trim();", "timestamp": 1312597102, "metainfo": ""}