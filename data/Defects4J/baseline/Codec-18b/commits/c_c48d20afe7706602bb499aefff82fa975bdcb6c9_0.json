{"sha": "c48d20afe7706602bb499aefff82fa975bdcb6c9", "log": "Fix Ant Javadoc warnings.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base32.java\n+++ b/src/java/org/apache/commons/codec/binary/Base32.java\n \n     /**\n      * Convenience variable to help us determine when our buffer is going to run out of room and needs resizing.\n-     * <code>decodeSize = {@link BYTES_PER_ENCODED_BLOCK} - 1 + lineSeparator.length;</code>\n+     * <code>decodeSize = {@link #BYTES_PER_ENCODED_BLOCK} - 1 + lineSeparator.length;</code>\n      */\n     private final int decodeSize;\n \n \n     /**\n      * Convenience variable to help us determine when our buffer is going to run out of room and needs resizing.\n-     * <code>encodeSize = {@link BYTES_PER_ENCODED_BLOCK} + lineSeparator.length;</code>\n+     * <code>encodeSize = {@link #BYTES_PER_ENCODED_BLOCK} + lineSeparator.length;</code>\n      */\n     private final int encodeSize;\n \n      * @param inAvail\n      *            Amount of bytes available from input for encoding.\n      *\n-     * Output is written to {@link #buffer} as 8-bit octets, using {@link pos} as the buffer position\n+     * Output is written to {@link #buffer} as 8-bit octets, using {@link #pos} as the buffer position\n      */\n     void decode(byte[] in, int inPos, int inAvail) { // package protected for access from I/O streams\n         if (eof) {", "timestamp": 1301334764, "metainfo": ""}