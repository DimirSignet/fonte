{"sha": "c116dde41fd1c073f00093123f771c276e8af6d9", "log": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Don't need these new File APIs anymore.  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n                 DigestUtils.md2Hex(ByteBuffer.wrap(testData)));\n }\n \n-    @Test\n-    public void testMd2HexFile() throws IOException {\n-        assertEquals(DigestUtils.md2Hex(testData), DigestUtils.md2Hex(testFile));\n-    }\n-\n     /**\n      * An MD2 hash converted to hex should always be 32 characters.\n      */\n         assertEquals(DigestUtils.md5Hex(testData),\n                 DigestUtils.md5Hex(ByteBuffer.wrap(testData)));\n }\n-\n-    @Test\n-    public void testMd5HexFile() throws IOException {\n-        assertEquals(DigestUtils.md5Hex(testData), DigestUtils.md5Hex(testFile));\n-    }\n \n     /**\n      * An MD5 hash converted to hex should always be 32 characters.\n     }\n \n     @Test\n-    public void testSha1HexFile() throws IOException {\n-        assertEquals(DigestUtils.sha1Hex(testData), DigestUtils.sha1Hex(testFile));\n-    }\n-\n-    @Test\n     public void testSha1UpdateWithByteArray(){\n         final String d1 = \"C'est un homme qui rentre dans un caf\u00e9, et plouf\";\n         final String d2 = \"C'est un homme, c'est qu'une t\u00eate, on lui offre un cadeau: 'oh... encore un chapeau!'\";\n                 DigestUtils.sha224Hex(\"The quick brown fox jumps over the lazy dog\"));\n \n         // Examples from FIPS 180-4?\n-    }\n-\n-    @Test\n-    public void testSha224HexFile() throws IOException {\n-        assumeJava8();\n-        assertEquals(DigestUtils.sha224Hex(testData), DigestUtils.sha224Hex(testFile));\n     }\n \n     @Test\n             DigestUtils.sha256Hex(new ByteArrayInputStream(testData)));\n     assertEquals(DigestUtils.sha256Hex(testData),\n             DigestUtils.sha256Hex(ByteBuffer.wrap(testData)));\n-    }\n-\n-    @Test\n-    public void testSha256HexFile() throws IOException {\n-        assertEquals(DigestUtils.sha256Hex(testData), DigestUtils.sha256Hex(testFile));\n     }\n \n     @Test\n     }\n \n     @Test\n-    public void testSha384HexFile() throws IOException {\n-        assertEquals(DigestUtils.sha384Hex(testData), DigestUtils.sha384Hex(testFile));\n-    }\n-\n-    @Test\n     public void testSha512() throws IOException {\n     // Examples from FIPS 180-2\n     assertEquals(\"ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a\" +\n     }\n \n     @Test\n-    public void testSha512HexFile() throws IOException {\n-        assertEquals(DigestUtils.sha512Hex(testData), DigestUtils.sha512Hex(testFile));\n-    }\n-\n-    @Test\n     public void testSha512HexInputStream() throws IOException {\n         assertEquals(DigestUtils.sha512Hex(testData),\n                 DigestUtils.sha512Hex(new ByteArrayInputStream(testData)));", "timestamp": 1463432698, "metainfo": ""}