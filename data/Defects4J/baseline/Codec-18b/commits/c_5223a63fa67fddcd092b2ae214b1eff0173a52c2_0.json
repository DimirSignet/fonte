{"sha": "5223a63fa67fddcd092b2ae214b1eff0173a52c2", "log": "CODEC-110 - Add a String version of Base64.isArrayByteBase64()  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n     }\n \n     /**\n+     * Tests a given String to see if it contains only valid characters within the Base64 alphabet. Currently the\n+     * method treats whitespace as valid.\n+     * \n+     * @param base64\n+     *            String of (presumably) base64 characters to test\n+     * @return <code>true</code> if all characters in the String are valid characters in the Base64 alphabet or if\n+     *         the String is empty; false, otherwise\n+     */\n+    public static boolean isStringBase64(String base64) {\n+        return isArrayByteBase64(StringUtils.getBytesUtf8(base64));\n+    }\n+    \n+    /**\n      * Tests a given byte array to see if it contains only valid characters within the Base64 alphabet.\n      * \n      * @param arrayOctet\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n         return this._random;\n     }\n \n+    /**\n+     * Test the isStringBase64 method.\n+     */\n+    public void testIsStringBase64() {\n+        String nullString = null;\n+        String emptyString = \"\";\n+        String validString = \"abc===defg\\n\\r123456\\r789\\r\\rABC\\n\\nDEF==GHI\\r\\nJKL==============\";\n+        String invalidString = validString + ((char)0); // append null character\n+        \n+        try {\n+            Base64.isStringBase64(nullString);\n+            fail(\"Base64.isStringBase64() should not be null-safe.\");\n+        } catch (NullPointerException npe) {\n+            assertNotNull(\"Base64.isStringBase64() should not be null-safe.\", npe);\n+        }\n+        \n+        assertTrue(\"Base64.isStringBase64(empty-string) is true\", Base64.isStringBase64(emptyString));\n+        assertTrue(\"Base64.isStringBase64(valid-string) is true\", Base64.isStringBase64(validString));        \n+        assertFalse(\"Base64.isStringBase64(invalid-string) is false\", Base64.isStringBase64(invalidString));        \n+    }\n+    \n     /**\n      * Test the Base64 implementation\n      */", "timestamp": 1295918209, "metainfo": ""}