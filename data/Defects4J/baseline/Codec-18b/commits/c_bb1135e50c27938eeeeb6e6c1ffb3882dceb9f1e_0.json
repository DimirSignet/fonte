{"sha": "bb1135e50c27938eeeeb6e6c1ffb3882dceb9f1e", "log": "MessageDigestAlgorithm => MessageDigestAlgorithms as the former has been dropped  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/Digest.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Digest.java\n      * </p>\n      *\n      * @param args\n-     *            {@code args[0]} is one of {@link MessageDigestAlgorithm} name, {@link MessageDigest} name, {@code ALL}\n+     *            {@code args[0]} is one of {@link MessageDigestAlgorithms} name, {@link MessageDigest} name, {@code ALL}\n      *            , or {@code *}. {@code args[1]} is a FILE.\n      * @throws IOException\n      */\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because MD2 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#MD2\n+     * @see MessageDigestAlgorithms#MD2\n      * @since 1.7\n      */\n     public static MessageDigest getMd2Digest() {\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because MD5 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#MD5\n+     * @see MessageDigestAlgorithms#MD5\n      */\n     public static MessageDigest getMd5Digest() {\n         return getDigest(MessageDigestAlgorithms.MD5);\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-1 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#SHA_1\n+     * @see MessageDigestAlgorithms#SHA_1\n      * @since 1.7\n      */\n     public static MessageDigest getSha1Digest() {\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught on Java 7 and older, SHA-224 is a built-in\n      *             algorithm on Java 8\n-     * @see MessageDigestAlgorithm#SHA_224\n+     * @see MessageDigestAlgorithms#SHA_224\n      * @since 1.11\n      */\n     public static MessageDigest getSha224Digest() {\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-256 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#SHA_256\n+     * @see MessageDigestAlgorithms#SHA_256\n      */\n     public static MessageDigest getSha256Digest() {\n         return getDigest(MessageDigestAlgorithms.SHA_256);\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-384 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#SHA_384\n+     * @see MessageDigestAlgorithms#SHA_384\n      */\n     public static MessageDigest getSha384Digest() {\n         return getDigest(MessageDigestAlgorithms.SHA_384);\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-512 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithm#SHA_512\n+     * @see MessageDigestAlgorithms#SHA_512\n      */\n     public static MessageDigest getSha512Digest() {\n         return getDigest(MessageDigestAlgorithms.SHA_512);\n--- a/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n         mac.update(StringUtils.getBytesUtf8(valueToDigest));\n         return mac;\n     }\n+\n+    // Fluent interface code\n+\n+    private final Mac mac;\n+    \n+    private HmacUtils(Mac mac) {\n+        this.mac = mac;\n+    }\n+\n+    public static HmacUtils with(HmacAlgorithms algo, byte[] key) {\n+        return with(algo.getName(), key);\n+    }\n+\n+    public static HmacUtils with(String algo, byte[] key) {\n+        Mac mac = getInitializedMac(algo, key);\n+        return new HmacUtils(mac);\n+    }\n+\n+    public HmacUtils updateHmac(byte[] valueToDigest) {\n+        mac.update(valueToDigest);\n+        return this;\n+    }\n+\n+    public Mac getMac() {\n+        return mac;\n+    }\n+\n+    public byte[] doFinal() {\n+        return mac.doFinal();\n+    }\n }\n--- a/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n      *             if the given salt is <code>null</code> or does not match the allowed pattern\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught\n-     * @see MessageDigestAlgorithm\n+     * @see MessageDigestAlgorithms\n      */\n     private static String sha2Crypt(final byte[] keyBytes, final String salt, final String saltPrefix,\n             final int blocksize, final String algorithm) {\n--- a/src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java\n import org.junit.runners.Parameterized.Parameters;\n \n /**\n- * Tests {@link MessageDigestAlgorithm}.\n+ * Tests {@link MessageDigestAlgorithms}.\n  *\n  * @since 1.11\n  */", "timestamp": 1463568110, "metainfo": ""}