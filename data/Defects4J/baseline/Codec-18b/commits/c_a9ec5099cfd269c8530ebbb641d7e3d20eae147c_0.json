{"sha": "a9ec5099cfd269c8530ebbb641d7e3d20eae147c", "log": "Use Generics and Java 5 for loop.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n     \n     @Test\n     public void testComparatorWithDoubleMetaphone() throws Exception {\n-        StringEncoderComparator sCompare =\n-            new StringEncoderComparator( new DoubleMetaphone() );\n-            \n+        StringEncoderComparator sCompare = new StringEncoderComparator(new DoubleMetaphone());\n+\n         String[] testArray = { \"Jordan\", \"Sosa\", \"Prior\", \"Pryor\" };\n-        List testList = Arrays.asList( testArray );        \n-        \n+        List<String> testList = Arrays.asList(testArray);\n+\n         String[] controlArray = { \"Jordan\", \"Prior\", \"Pryor\", \"Sosa\" };\n \n-        Collections.sort( testList, sCompare);            \n-        \n+        Collections.sort(testList, sCompare);\n+\n         String[] resultArray = (String[]) testList.toArray(new String[0]);\n-        \n-        for( int i = 0; i < resultArray.length; i++) {\n-            assertEquals( \"Result Array not Equal to Control Array at index: \" + i, controlArray[i], resultArray[i] );\n+\n+        for (int i = 0; i < resultArray.length; i++) {\n+            assertEquals(\"Result Array not Equal to Control Array at index: \" + i, controlArray[i], resultArray[i]);\n         }\n     }\n \n--- a/src/test/org/apache/commons/codec/binary/HexTest.java\n+++ b/src/test/org/apache/commons/codec/binary/HexTest.java\n import java.io.UnsupportedEncodingException;\n import java.nio.charset.Charset;\n import java.util.Arrays;\n-import java.util.Iterator;\n import java.util.Random;\n-import java.util.Set;\n-import java.util.SortedMap;\n \n import junit.framework.Assert;\n \n \n     @Test\n     public void testCustomCharset() throws UnsupportedEncodingException, DecoderException {\n-        SortedMap map = Charset.availableCharsets();\n-        Set keys = map.keySet();\n-        Iterator iterator = keys.iterator();\n-        log(\"testCustomCharset: Checking \" + keys.size() + \" charsets...\");\n-        while (iterator.hasNext()) {\n-            String name = (String) iterator.next();\n-            testCustomCharset(name, \"testCustomCharset\");\n+        for (String name : Charset.availableCharsets().keySet()) {\n+            testCustomCharset(name, \"testCustomCharset\");            \n         }\n     }\n ", "timestamp": 1301883708, "metainfo": ""}