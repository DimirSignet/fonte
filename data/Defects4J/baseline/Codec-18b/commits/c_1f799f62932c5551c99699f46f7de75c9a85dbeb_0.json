{"sha": "1f799f62932c5551c99699f46f7de75c9a85dbeb", "log": "Remove unused exceptions.  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/binary/HexTest.java\n+++ b/src/test/java/org/apache/commons/codec/binary/HexTest.java\n     }\n \n     @Test\n-    public void testEncodeByteArrayEmpty() throws EncoderException {\n+    public void testEncodeByteArrayEmpty() {\n         assertTrue(Arrays.equals(new byte[0], new Hex().encode(new byte[0])));\n     }\n \n     }\n \n     @Test\n-    public void testEncodeByteBufferEmpty() throws EncoderException {\n+    public void testEncodeByteBufferEmpty() {\n         assertTrue(Arrays.equals(new byte[0], new Hex().encode(ByteBuffer.allocate(0))));\n     }\n \n     }\n \n     @Test\n-    public void testEncodeHexByteArrayEmpty() throws EncoderException {\n+    public void testEncodeHexByteArrayEmpty() {\n         assertTrue(Arrays.equals(new char[0], Hex.encodeHex(new byte[0])));\n         assertTrue(Arrays.equals(new byte[0], new Hex().encode(new byte[0])));\n     }\n     }\n \n     @Test\n-    public void testEncodeHexByteBufferEmpty() throws EncoderException {\n+    public void testEncodeHexByteBufferEmpty() {\n         assertTrue(Arrays.equals(new char[0], Hex.encodeHex(ByteBuffer.allocate(0))));\n         assertTrue(Arrays.equals(new byte[0], new Hex().encode(ByteBuffer.allocate(0))));\n     }\n     }\n \n     @Test\n-    public void testGetCharset() throws UnsupportedEncodingException, DecoderException {\n+    public void testGetCharset() {\n         Assert.assertEquals(Charsets.UTF_8, new Hex(Charsets.UTF_8).getCharset());\n     }\n \n     @Test\n-    public void testGetCharsetName() throws UnsupportedEncodingException, DecoderException {\n+    public void testGetCharsetName() {\n         Assert.assertEquals(Charsets.UTF_8.name(), new Hex(Charsets.UTF_8).getCharsetName());\n     }\n ", "timestamp": 1467739990, "metainfo": ""}