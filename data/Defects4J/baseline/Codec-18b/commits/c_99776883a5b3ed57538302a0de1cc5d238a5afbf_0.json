{"sha": "99776883a5b3ed57538302a0de1cc5d238a5afbf", "log": "Turned some variables that were effectively constants into private-static-finals  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/Metaphone.java\n+++ b/src/java/org/apache/commons/codec/language/Metaphone.java\n     /**\n      * Five values in the English language \n      */\n-    private String vowels = \"AEIOU\" ;\n+    private static final String VOWELS = \"AEIOU\" ;\n \n     /**\n      * Variable used in Metaphone algorithm\n      */\n-    private String frontv = \"EIY\"   ;\n+    private static final String FRONTV = \"EIY\"   ;\n \n     /**\n      * Variable used in Metaphone algorithm\n      */\n-    private String varson = \"CSPTG\" ;\n+    private static final String VARSON = \"CSPTG\" ;\n \n     /**\n      * The max code length for metaphone is 4\n                     /* discard if SCI, SCE or SCY */\n                     if ( isPreviousChar(local, n, 'S') && \n                          !isLastChar(wdsz, n) && \n-                         (this.frontv.indexOf(local.charAt(n + 1)) >= 0) ) { \n+                         (FRONTV.indexOf(local.charAt(n + 1)) >= 0) ) { \n                         break;\n                     }\n                     if (regionMatch(local, n, \"CIA\")) { // \"CIA\" -> X\n                         break;\n                     }\n                     if (!isLastChar(wdsz, n) && \n-                        (this.frontv.indexOf(local.charAt(n + 1)) >= 0)) {\n+                        (FRONTV.indexOf(local.charAt(n + 1)) >= 0)) {\n                         code.append('S');\n                         break; // CI,CE,CY -> S\n                     }\n                 case 'D' :\n                     if (!isLastChar(wdsz, n + 1) && \n                         isNextChar(local, n, 'G') && \n-                        (this.frontv.indexOf(local.charAt(n + 2)) >= 0)) { // DGE DGI DGY -> J \n+                        (FRONTV.indexOf(local.charAt(n + 2)) >= 0)) { // DGE DGI DGY -> J \n                         code.append('J'); n += 2 ;\n                     } else { \n                         code.append('T');\n                         hard = false ;\n                     }\n                     if (!isLastChar(wdsz, n) && \n-                        (this.frontv.indexOf(local.charAt(n + 1)) >= 0) && \n+                        (FRONTV.indexOf(local.charAt(n + 1)) >= 0) && \n                         (!hard)) {\n                         code.append('J');\n                     } else {\n                         break ; // terminal H\n                     }\n                     if ((n > 0) && \n-                        (this.varson.indexOf(local.charAt(n - 1)) >= 0)) {\n+                        (VARSON.indexOf(local.charAt(n - 1)) >= 0)) {\n                         break;\n                     }\n                     if (isVowel(local,n+1)) {\n     }\n \n \tprivate boolean isVowel(StringBuffer string, int index) {\n-\t\treturn this.vowels.indexOf(string.charAt(index)) >= 0;\n+\t\treturn VOWELS.indexOf(string.charAt(index)) >= 0;\n \t}\n \n \tprivate boolean isPreviousChar(StringBuffer string, int index, char c) {", "timestamp": 1191644083, "metainfo": ""}