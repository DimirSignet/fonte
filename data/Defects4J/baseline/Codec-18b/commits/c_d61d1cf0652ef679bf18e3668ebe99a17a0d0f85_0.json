{"sha": "d61d1cf0652ef679bf18e3668ebe99a17a0d0f85", "log": "Rename language to languages (it is a Set.)  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/java/org/apache/commons/codec/language/bm/Rule.java\n         return str;\n     }\n \n-    private final Set<String> language;\n+    private final Set<String> languages;\n \n     private final Pattern lContext;\n \n      *            the right context\n      * @param phoneme\n      *            the resulting phoneme\n-     * @param language\n+     * @param languages\n      *            the required languages\n      * @param logical\n      *            flag to indicate if all or only some languages must be in scope\n      */\n-    public Rule(String pattern, String lContext, String rContext, String phoneme, Set<String> language, String logical) {\n+    public Rule(String pattern, String lContext, String rContext, String phoneme, Set<String> languages, String logical) {\n         this.pattern = pattern;\n         this.lContext = Pattern.compile(lContext + \"$\");\n         this.rContext = Pattern.compile(\"^\" + rContext + \".*\");\n         this.phoneme = phoneme;\n-        this.language = language;\n+        this.languages = languages;\n         this.logical = logical;\n     }\n \n      * \n      * @return a Set of Strings giving the relevant languages\n      */\n-    public Set<String> getLanguage() {\n-        return this.language;\n+    public Set<String> getLanguages() {\n+        return this.languages;\n     }\n \n     /**\n      * @return true if these satistfy the language and logical restrictions on this rule, false otherwise\n      */\n     public boolean languageMatches(Set<String> languageArg) {\n-        if (!languageArg.contains(Languages.ANY) && !this.language.isEmpty()) {\n-            if (ALL.equals(this.logical) && !languageArg.containsAll(this.language)) {\n+        if (!languageArg.contains(Languages.ANY) && !this.languages.isEmpty()) {\n+            if (ALL.equals(this.logical) && !languageArg.containsAll(this.languages)) {\n                 return false;\n             } else {\n                 Set<String> isect = new HashSet<String>(languageArg);\n-                isect.retainAll(this.language);\n+                isect.retainAll(this.languages);\n                 return !isect.isEmpty();\n             }\n         } else {", "timestamp": 1311787414, "metainfo": ""}