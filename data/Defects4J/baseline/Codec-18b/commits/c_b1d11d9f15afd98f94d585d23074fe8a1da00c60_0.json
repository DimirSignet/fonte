{"sha": "b1d11d9f15afd98f94d585d23074fe8a1da00c60", "log": "Javadoc corrections  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java\n+++ b/src/main/java/org/apache/commons/codec/digest/HmacAlgorithms.java\n     HMAC_SHA_1(\"HmacSHA1\"),\n \n     /**\n-     * The HmacSHA256 Message Authentication Code (MAC) algorithm specified in RFC 2104 and FIPS PUB 180-2.\n-     * <p>\n-     * Every implementation of the Java platform is required to support this standard MAC algorithm.\n-     * </p>\n+     * The HmacSHA224 Message Authentication Code (MAC) algorithm specified in RFC 2104 and FIPS PUB 180-2.\n+     * <p>\n+     * Every implementation of the Java 8+ platform is required to support this standard MAC algorithm.\n+     * </p>\n+     * @since 1.11\n      */\n     HMAC_SHA_224(\"HmacSHA224\"),\n \n      * @see Mac#init(Key)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public Mac getHmac(final byte[] key) {\n         return HmacUtils.getInitializedMac(name, key);\n      * @see Mac#init(Key)\n      * @throws IllegalArgumentException\n      *             when key is null or invalid.\n+     * @since 1.11\n      */\n     public Mac getInitializedMac(final byte[] key) {\n         return HmacUtils.getInitializedMac(name, key);\n      * Gets the algorithm name.\n      *\n      * @return the algorithm name.\n+     * @since 1.11\n      */\n     public String getName() {\n         return name;\n      * @return HMAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public byte[] hmac(final byte[] key, final byte[] valueToDigest) {\n         try {\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public byte[] hmac(final byte[] key, final InputStream valueToDigest) throws IOException {\n         return HmacUtils.updateHmac(getHmac(key), valueToDigest).doFinal();\n      * @return HMAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public byte[] hmac(final String key, final String valueToDigest) {\n         return hmac(StringUtils.getBytesUtf8(key), StringUtils.getBytesUtf8(valueToDigest));\n      * @return HMAC for the given key and value as a hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public String hmacHex(final byte[] key, final byte[] valueToDigest) {\n         return Hex.encodeHexString(hmac(key, valueToDigest));\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public String hmacHex(final byte[] key, final InputStream valueToDigest) throws IOException {\n         return Hex.encodeHexString(hmac(key, valueToDigest));\n      * @return HMAC for the given key and value as a hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n+     * @since 1.11\n      */\n     public String hmacHex(final String key, final String valueToDigest) {\n         return Hex.encodeHexString(hmac(key, valueToDigest));\n      * Returns whether this algorithm is available\n      *\n      * @return whether this algorithm is available\n+     * @since 1.11\n      */\n     public boolean isAvailable() {\n         try {", "timestamp": 1463479449, "metainfo": ""}