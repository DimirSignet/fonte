{"sha": "1f0d32796cd7f4419069b1c6d738895c753c6916", "log": "Sort in AB order.  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n      * An MD5 hash converted to hex should always be 32 characters.\n      */\n     @Test\n+    public void testMd5HexLengthForByteBuffer() {\n+        String hashMe = \"this is some string that is longer than 32 characters\";\n+        String hash = DigestUtils.md5Hex(getByteBufferUtf8(hashMe));\n+        assertEquals(32, hash.length());\n+\n+        hashMe = \"length < 32\";\n+        hash = DigestUtils.md5Hex(getByteBufferUtf8(hashMe));\n+        assertEquals(32, hash.length());\n+    }\n+\n+    /**\n+     * An MD5 hash converted to hex should always be 32 characters.\n+     */\n+    @Test\n     public void testMd5HexLengthForBytes() {\n         String hashMe = \"this is some string that is longer than 32 characters\";\n         String hash = DigestUtils.md5Hex(getBytesUtf8(hashMe));\n     }\n \n     /**\n-     * An MD5 hash converted to hex should always be 32 characters.\n-     */\n-    @Test\n-    public void testMd5HexLengthForByteBuffer() {\n-        String hashMe = \"this is some string that is longer than 32 characters\";\n-        String hash = DigestUtils.md5Hex(getByteBufferUtf8(hashMe));\n-        assertEquals(32, hash.length());\n-\n-        hashMe = \"length < 32\";\n-        hash = DigestUtils.md5Hex(getByteBufferUtf8(hashMe));\n-        assertEquals(32, hash.length());\n+     * An MD5 hash should always be a 16 element byte[].\n+     */\n+    @Test\n+    public void testMd5LengthForByteBuffer() {\n+        String hashMe = \"this is some string that is longer than 16 characters\";\n+        byte[] hash = DigestUtils.md5(getByteBufferUtf8(hashMe));\n+        assertEquals(16, hash.length);\n+\n+        hashMe = \"length < 16\";\n+        hash = DigestUtils.md5(getByteBufferUtf8(hashMe));\n+        assertEquals(16, hash.length);\n     }\n \n     /**\n \n         hashMe = \"length < 16\";\n         hash = DigestUtils.md5(getBytesUtf8(hashMe));\n-        assertEquals(16, hash.length);\n-    }\n-\n-    /**\n-     * An MD5 hash should always be a 16 element byte[].\n-     */\n-    @Test\n-    public void testMd5LengthForByteBuffer() {\n-        String hashMe = \"this is some string that is longer than 16 characters\";\n-        byte[] hash = DigestUtils.md5(getByteBufferUtf8(hashMe));\n-        assertEquals(16, hash.length);\n-\n-        hashMe = \"length < 16\";\n-        hash = DigestUtils.md5(getByteBufferUtf8(hashMe));\n         assertEquals(16, hash.length);\n     }\n ", "timestamp": 1463168086, "metainfo": ""}