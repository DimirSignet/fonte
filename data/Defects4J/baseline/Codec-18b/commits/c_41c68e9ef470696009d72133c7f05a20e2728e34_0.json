{"sha": "41c68e9ef470696009d72133c7f05a20e2728e34", "log": "[CODEC-117] Caverphone encodes names starting and ending with \"mb\" incorrectly.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/Caverphone.java\n+++ b/src/java/org/apache/commons/codec/language/Caverphone.java\n         txt = txt.replaceAll(\"^enough\", \"enou2f\");  // 2.0 only\n         txt = txt.replaceAll(\"^trough\", \"trou2f\");  // 2.0 only - note the spec says ^enough here again, c+p error I assume\n         txt = txt.replaceAll(\"^gn\", \"2n\");\n-        txt = txt.replaceAll(\"^mb\", \"m2\");\n+\n+        // End \n+        txt = txt.replaceAll(\"mb$\", \"m2\");\n \n         // 4. Handle replacements\n         txt = txt.replaceAll(\"cq\", \"2q\");\n--- a/src/test/org/apache/commons/codec/language/CaverphoneTest.java\n+++ b/src/test/org/apache/commons/codec/language/CaverphoneTest.java\n      * \n      * @throws EncoderException\n      */\n-    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {\n-        this.checkEncodingVariations(\"TTA1111111\", new String[]{\n-            \"Darda\",\n-            \"Datha\",\n-            \"Dedie\",\n-            \"Deedee\",\n-            \"Deerdre\",\n-            \"Deidre\",\n-            \"Deirdre\",\n-            \"Detta\",\n-            \"Didi\",\n-            \"Didier\",\n-            \"Dido\",\n-            \"Dierdre\",\n-            \"Dieter\",\n-            \"Dita\",\n-            \"Ditter\",\n-            \"Dodi\",\n-            \"Dodie\",\n-            \"Dody\",\n-            \"Doherty\",\n-            \"Dorthea\",\n-            \"Dorthy\",\n-            \"Doti\",\n-            \"Dotti\",\n-            \"Dottie\",\n-            \"Dotty\",\n-            \"Doty\",\n-            \"Doughty\",\n-            \"Douty\",\n-            \"Dowdell\",\n-            \"Duthie\",\n-            \"Tada\",\n-            \"Taddeo\",\n-            \"Tadeo\",\n-            \"Tadio\",\n-            \"Tati\",\n-            \"Teador\",\n-            \"Tedda\",\n-            \"Tedder\",\n-            \"Teddi\",\n-            \"Teddie\",\n-            \"Teddy\",\n-            \"Tedi\",\n-            \"Tedie\",\n-            \"Teeter\",\n-            \"Teodoor\",\n-            \"Teodor\",\n-            \"Terti\",\n-            \"Theda\",\n-            \"Theodor\",\n-            \"Theodore\",\n-            \"Theta\",\n-            \"Thilda\",\n-            \"Thordia\",\n-            \"Tilda\",\n-            \"Tildi\",\n-            \"Tildie\",\n-            \"Tildy\",\n-            \"Tita\",\n-            \"Tito\",\n-            \"Tjader\",\n-            \"Toddie\",\n-            \"Toddy\",\n-            \"Torto\",\n-            \"Tuddor\",\n-            \"Tudor\",\n-            \"Turtle\",\n-            \"Tuttle\",\n-            \"Tutto\"});\n-    }\n-\n-    /**\n-     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf\n-     * \n-     * @throws EncoderException\n-     */\n     public void testDavidHoodRevisitedRandomNameTN11111111() throws EncoderException {\n         this.checkEncodingVariations(\"TN11111111\", new String[]{\n             \"Dan\",\n      * \n      * @throws EncoderException\n      */\n+    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {\n+        this.checkEncodingVariations(\"TTA1111111\", new String[]{\n+            \"Darda\",\n+            \"Datha\",\n+            \"Dedie\",\n+            \"Deedee\",\n+            \"Deerdre\",\n+            \"Deidre\",\n+            \"Deirdre\",\n+            \"Detta\",\n+            \"Didi\",\n+            \"Didier\",\n+            \"Dido\",\n+            \"Dierdre\",\n+            \"Dieter\",\n+            \"Dita\",\n+            \"Ditter\",\n+            \"Dodi\",\n+            \"Dodie\",\n+            \"Dody\",\n+            \"Doherty\",\n+            \"Dorthea\",\n+            \"Dorthy\",\n+            \"Doti\",\n+            \"Dotti\",\n+            \"Dottie\",\n+            \"Dotty\",\n+            \"Doty\",\n+            \"Doughty\",\n+            \"Douty\",\n+            \"Dowdell\",\n+            \"Duthie\",\n+            \"Tada\",\n+            \"Taddeo\",\n+            \"Tadeo\",\n+            \"Tadio\",\n+            \"Tati\",\n+            \"Teador\",\n+            \"Tedda\",\n+            \"Tedder\",\n+            \"Teddi\",\n+            \"Teddie\",\n+            \"Teddy\",\n+            \"Tedi\",\n+            \"Tedie\",\n+            \"Teeter\",\n+            \"Teodoor\",\n+            \"Teodor\",\n+            \"Terti\",\n+            \"Theda\",\n+            \"Theodor\",\n+            \"Theodore\",\n+            \"Theta\",\n+            \"Thilda\",\n+            \"Thordia\",\n+            \"Tilda\",\n+            \"Tildi\",\n+            \"Tildie\",\n+            \"Tildy\",\n+            \"Tita\",\n+            \"Tito\",\n+            \"Tjader\",\n+            \"Toddie\",\n+            \"Toddy\",\n+            \"Torto\",\n+            \"Tuddor\",\n+            \"Tudor\",\n+            \"Turtle\",\n+            \"Tuttle\",\n+            \"Tutto\"});\n+    }\n+\n+    /**\n+     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf\n+     * \n+     * @throws EncoderException\n+     */\n     public void testDavidHoodRevisitedRandomWords() throws EncoderException {\n         this.checkEncodingVariations(\"RTA1111111\", new String[]{\"rather\", \"ready\", \"writer\"});\n         this.checkEncoding(\"SSA1111111\", \"social\");\n         this.checkEncodingVariations(\"APA1111111\", new String[]{\"able\", \"appear\"});\n+    }\n+\n+    public void testEndMb() throws EncoderException {\n+        String[][] data = {{\"mb\", \"M111111111\"}, {\"mbmb\", \"MPM1111111\"}};\n+        this.checkEncodings(data);\n     }\n \n     // Caverphone Revisited", "timestamp": 1299002174, "metainfo": ""}