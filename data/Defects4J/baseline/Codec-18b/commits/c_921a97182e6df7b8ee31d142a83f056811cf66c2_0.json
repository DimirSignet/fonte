{"sha": "921a97182e6df7b8ee31d142a83f056811cf66c2", "log": "Refactor encoding tests.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n  */\n public abstract class StringEncoderAbstractTest extends TestCase {\n \n-    protected StringEncoder stringEncoder = createEncoder();\n+    protected StringEncoder stringEncoder = this.createStringEncoder();\n \n     public StringEncoderAbstractTest(String name) {\n         super(name);\n     }\n \n-    protected abstract StringEncoder createEncoder();\n-\n-    // ------------------------------------------------------------------------\n-\n-    public void testEncodeEmpty() throws Exception {\n-        Encoder encoder = createEncoder();\n-        encoder.encode(\"\");\n-        encoder.encode(\" \");\n-        encoder.encode(\"\\t\");\n-    }        \n-\n-    public void testEncodeNull() throws Exception {\n-        StringEncoder encoder = createEncoder();\n-        \n-        try {\n-            encoder.encode(null);\n-        } catch (EncoderException ee) {\n-            // An exception should be thrown\n-        }\n-    }        \n-\n-    public void testEncodeWithInvalidObject() throws Exception {\n-\n-        boolean exceptionThrown = false;\n-        try {\n-            StringEncoder encoder = createEncoder();\n-            encoder.encode( new Float( 3.4 ) );\n-        } catch (Exception e) {\n-            exceptionThrown = true;\n-        }\n-\n-        assertTrue( \"An exception was not thrown when we tried to encode \" +\n-                    \"a Float object\", exceptionThrown );\n-    }\n-\n-    public void testLocaleIndependence() throws Exception {\n-        StringEncoder encoder = createEncoder();\n-\n-        String[] data = { \"I\", \"i\", };\n-\n-        Locale orig = Locale.getDefault();\n-        Locale[] locales = { Locale.ENGLISH, new Locale(\"tr\"), Locale.getDefault() };\n-\n-        try {\n-            for (int i = 0; i < data.length; i++) {\n-                String ref = null;\n-                for (int j = 0; j < locales.length; j++) {\n-                    Locale.setDefault(locales[j]);\n-                    if (j <= 0) {\n-                        ref = encoder.encode(data[i]);\n-                    } else {\n-                        String cur = null;\n-                        try {\n-                            cur = encoder.encode(data[i]);\n-                        } catch (Exception e) {\n-                            fail(Locale.getDefault().toString() + \": \" + e.getMessage());\n-                        }\n-                        assertEquals(Locale.getDefault().toString() + \": \", ref, cur);\n-                    }\n-                }\n-            }\n-        } finally {\n-            Locale.setDefault(orig);\n-        }\n+    public void checkEncoding(String expected, String source) throws EncoderException {\n+        Assert.assertEquals(\"Source: \" + source, expected, this.getStringEncoder().encode(source));\n     }\n \n     protected void checkEncodings(String[][] data) throws EncoderException {\n         }\n     }\n \n-    public void checkEncoding(String expected, String source) throws EncoderException {\n-        Assert.assertEquals(\"Source: \" + source, expected, this.stringEncoder.encode(source));\n+    protected abstract StringEncoder createStringEncoder();\n+\n+    public StringEncoder getStringEncoder() {\n+        return this.stringEncoder;\n+    }\n+\n+    public void testEncodeEmpty() throws Exception {\n+        Encoder encoder = this.getStringEncoder();\n+        encoder.encode(\"\");\n+        encoder.encode(\" \");\n+        encoder.encode(\"\\t\");\n+    }\n+\n+    public void testEncodeNull() throws Exception {\n+        StringEncoder encoder = this.getStringEncoder();\n+        try {\n+            encoder.encode(null);\n+        } catch (EncoderException ee) {\n+            // An exception should be thrown\n+        }\n+    }\n+\n+    public void testEncodeWithInvalidObject() throws Exception {\n+\n+        boolean exceptionThrown = false;\n+        try {\n+            StringEncoder encoder = this.getStringEncoder();\n+            encoder.encode(new Float(3.4));\n+        } catch (Exception e) {\n+            exceptionThrown = true;\n+        }\n+\n+        Assert.assertTrue(\"An exception was not thrown when we tried to encode \" + \"a Float object\", exceptionThrown);\n+    }\n+\n+    public void testLocaleIndependence() throws Exception {\n+        StringEncoder encoder = this.getStringEncoder();\n+\n+        String[] data = {\"I\", \"i\",};\n+\n+        Locale orig = Locale.getDefault();\n+        Locale[] locales = {Locale.ENGLISH, new Locale(\"tr\"), Locale.getDefault()};\n+\n+        try {\n+            for (int i = 0; i < data.length; i++) {\n+                String ref = null;\n+                for (int j = 0; j < locales.length; j++) {\n+                    Locale.setDefault(locales[j]);\n+                    if (j <= 0) {\n+                        ref = encoder.encode(data[i]);\n+                    } else {\n+                        String cur = null;\n+                        try {\n+                            cur = encoder.encode(data[i]);\n+                        } catch (Exception e) {\n+                            Assert.fail(Locale.getDefault().toString() + \": \" + e.getMessage());\n+                        }\n+                        Assert.assertEquals(Locale.getDefault().toString() + \": \", ref, cur);\n+                    }\n+                }\n+            }\n+        } finally {\n+            Locale.setDefault(orig);\n+        }\n     }\n \n }\n--- a/src/test/org/apache/commons/codec/language/CaverphoneTest.java\n+++ b/src/test/org/apache/commons/codec/language/CaverphoneTest.java\n         super(name);\n     }\n \n-    protected StringEncoder createEncoder() {\n+    protected StringEncoder createStringEncoder() {\n         return new Caverphone();\n     }\n \n--- a/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n+++ b/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n         super(name);\n     }\n \n-    protected StringEncoder createEncoder() {\n+    protected StringEncoder createStringEncoder() {\n         return new ColognePhonetic();\n     }\n \n             {\"ganz\", \"G\u00e4nse\"},\n             {\"Miyagi\", \"Miyako\"}};\n         for (int i = 0; i < data.length; i++) {\n-            ((ColognePhonetic) this.stringEncoder).isEncodeEqual(data[i][1], data[i][0]);\n+            ((ColognePhonetic) this.getStringEncoder()).isEncodeEqual(data[i][1], data[i][0]);\n         }\n     }\n \n--- a/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java\n+++ b/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.commons.codec.language;\n \n-import junit.framework.TestCase;\n+import org.apache.commons.codec.StringEncoder;\n+import org.apache.commons.codec.StringEncoderAbstractTest;\n \n /**\n  * Tests {@link DoubleMetaphone}.\n  * <p>\n- * The test data was extracted from Stephen Woodbridge's\n- * <a href=\"http://swoodbridge.com/DoubleMetaPhone/surnames.txt\">PHP test program</a>.\n+ * The test data was extracted from Stephen Woodbridge's <a\n+ * href=\"http://swoodbridge.com/DoubleMetaPhone/surnames.txt\">PHP test program</a>.\n  * \n  * @see <a href=\"http://swoodbridge.com/DoubleMetaPhone/surnames.txt\">PHP test program</a>\n  * @version $Id$\n  */\n-public class DoubleMetaphone2Test extends TestCase {\n+public class DoubleMetaphone2Test extends StringEncoderAbstractTest {\n \n-    private DoubleMetaphone doubleMetaphone = null;\n+    private static final int ALTERNATE_INDEX = 2;\n+\n+    private static final int PRIMARY_INDEX = 1;\n+\n+    /** Test values and their expected primary & alternate Double Metaphone encodings */\n+    private static final String[][] TEST_DATA = new String[][]{\n+        {\"ALLERTON\", \"ALRT\", \"ALRT\"},\n+        {\"Acton\", \"AKTN\", \"AKTN\"},\n+        {\"Adams\", \"ATMS\", \"ATMS\"},\n+        {\"Aggar\", \"AKR\", \"AKR\"},\n+        {\"Ahl\", \"AL\", \"AL\"},\n+        {\"Aiken\", \"AKN\", \"AKN\"},\n+        {\"Alan\", \"ALN\", \"ALN\"},\n+        {\"Alcock\", \"ALKK\", \"ALKK\"},\n+        {\"Alden\", \"ALTN\", \"ALTN\"},\n+        {\"Aldham\", \"ALTM\", \"ALTM\"},\n+        {\"Allen\", \"ALN\", \"ALN\"},\n+        {\"Allerton\", \"ALRT\", \"ALRT\"},\n+        {\"Alsop\", \"ALSP\", \"ALSP\"},\n+        {\"Alwein\", \"ALN\", \"ALN\"},\n+        {\"Ambler\", \"AMPL\", \"AMPL\"},\n+        {\"Andevill\", \"ANTF\", \"ANTF\"},\n+        {\"Andrews\", \"ANTR\", \"ANTR\"},\n+        {\"Andreyco\", \"ANTR\", \"ANTR\"},\n+        {\"Andriesse\", \"ANTR\", \"ANTR\"},\n+        {\"Angier\", \"ANJ\", \"ANJR\"},\n+        {\"Annabel\", \"ANPL\", \"ANPL\"},\n+        {\"Anne\", \"AN\", \"AN\"},\n+        {\"Anstye\", \"ANST\", \"ANST\"},\n+        {\"Appling\", \"APLN\", \"APLN\"},\n+        {\"Apuke\", \"APK\", \"APK\"},\n+        {\"Arnold\", \"ARNL\", \"ARNL\"},\n+        {\"Ashby\", \"AXP\", \"AXP\"},\n+        {\"Astwood\", \"ASTT\", \"ASTT\"},\n+        {\"Atkinson\", \"ATKN\", \"ATKN\"},\n+        {\"Audley\", \"ATL\", \"ATL\"},\n+        {\"Austin\", \"ASTN\", \"ASTN\"},\n+        {\"Avenal\", \"AFNL\", \"AFNL\"},\n+        {\"Ayer\", \"AR\", \"AR\"},\n+        {\"Ayot\", \"AT\", \"AT\"},\n+        {\"Babbitt\", \"PPT\", \"PPT\"},\n+        {\"Bachelor\", \"PXLR\", \"PKLR\"},\n+        {\"Bachelour\", \"PXLR\", \"PKLR\"},\n+        {\"Bailey\", \"PL\", \"PL\"},\n+        {\"Baivel\", \"PFL\", \"PFL\"},\n+        {\"Baker\", \"PKR\", \"PKR\"},\n+        {\"Baldwin\", \"PLTN\", \"PLTN\"},\n+        {\"Balsley\", \"PLSL\", \"PLSL\"},\n+        {\"Barber\", \"PRPR\", \"PRPR\"},\n+        {\"Barker\", \"PRKR\", \"PRKR\"},\n+        {\"Barlow\", \"PRL\", \"PRLF\"},\n+        {\"Barnard\", \"PRNR\", \"PRNR\"},\n+        {\"Barnes\", \"PRNS\", \"PRNS\"},\n+        {\"Barnsley\", \"PRNS\", \"PRNS\"},\n+        {\"Barouxis\", \"PRKS\", \"PRKS\"},\n+        {\"Bartlet\", \"PRTL\", \"PRTL\"},\n+        {\"Basley\", \"PSL\", \"PSL\"},\n+        {\"Basset\", \"PST\", \"PST\"},\n+        {\"Bassett\", \"PST\", \"PST\"},\n+        {\"Batchlor\", \"PXLR\", \"PXLR\"},\n+        {\"Bates\", \"PTS\", \"PTS\"},\n+        {\"Batson\", \"PTSN\", \"PTSN\"},\n+        {\"Bayes\", \"PS\", \"PS\"},\n+        {\"Bayley\", \"PL\", \"PL\"},\n+        {\"Beale\", \"PL\", \"PL\"},\n+        {\"Beauchamp\", \"PXMP\", \"PKMP\"},\n+        {\"Beauclerc\", \"PKLR\", \"PKLR\"},\n+        {\"Beech\", \"PK\", \"PK\"},\n+        {\"Beers\", \"PRS\", \"PRS\"},\n+        {\"Beke\", \"PK\", \"PK\"},\n+        {\"Belcher\", \"PLXR\", \"PLKR\"},\n+        {\"Benjamin\", \"PNJM\", \"PNJM\"},\n+        {\"Benningham\", \"PNNK\", \"PNNK\"},\n+        {\"Bereford\", \"PRFR\", \"PRFR\"},\n+        {\"Bergen\", \"PRJN\", \"PRKN\"},\n+        {\"Berkeley\", \"PRKL\", \"PRKL\"},\n+        {\"Berry\", \"PR\", \"PR\"},\n+        {\"Besse\", \"PS\", \"PS\"},\n+        {\"Bessey\", \"PS\", \"PS\"},\n+        {\"Bessiles\", \"PSLS\", \"PSLS\"},\n+        {\"Bigelow\", \"PJL\", \"PKLF\"},\n+        {\"Bigg\", \"PK\", \"PK\"},\n+        {\"Bigod\", \"PKT\", \"PKT\"},\n+        {\"Billings\", \"PLNK\", \"PLNK\"},\n+        {\"Bimper\", \"PMPR\", \"PMPR\"},\n+        {\"Binker\", \"PNKR\", \"PNKR\"},\n+        {\"Birdsill\", \"PRTS\", \"PRTS\"},\n+        {\"Bishop\", \"PXP\", \"PXP\"},\n+        {\"Black\", \"PLK\", \"PLK\"},\n+        {\"Blagge\", \"PLK\", \"PLK\"},\n+        {\"Blake\", \"PLK\", \"PLK\"},\n+        {\"Blanck\", \"PLNK\", \"PLNK\"},\n+        {\"Bledsoe\", \"PLTS\", \"PLTS\"},\n+        {\"Blennerhasset\", \"PLNR\", \"PLNR\"},\n+        {\"Blessing\", \"PLSN\", \"PLSN\"},\n+        {\"Blewett\", \"PLT\", \"PLT\"},\n+        {\"Bloctgoed\", \"PLKT\", \"PLKT\"},\n+        {\"Bloetgoet\", \"PLTK\", \"PLTK\"},\n+        {\"Bloodgood\", \"PLTK\", \"PLTK\"},\n+        {\"Blossom\", \"PLSM\", \"PLSM\"},\n+        {\"Blount\", \"PLNT\", \"PLNT\"},\n+        {\"Bodine\", \"PTN\", \"PTN\"},\n+        {\"Bodman\", \"PTMN\", \"PTMN\"},\n+        {\"BonCoeur\", \"PNKR\", \"PNKR\"},\n+        {\"Bond\", \"PNT\", \"PNT\"},\n+        {\"Boscawen\", \"PSKN\", \"PSKN\"},\n+        {\"Bosworth\", \"PSR0\", \"PSRT\"},\n+        {\"Bouchier\", \"PX\", \"PKR\"},\n+        {\"Bowne\", \"PN\", \"PN\"},\n+        {\"Bradbury\", \"PRTP\", \"PRTP\"},\n+        {\"Bradder\", \"PRTR\", \"PRTR\"},\n+        {\"Bradford\", \"PRTF\", \"PRTF\"},\n+        {\"Bradstreet\", \"PRTS\", \"PRTS\"},\n+        {\"Braham\", \"PRHM\", \"PRHM\"},\n+        {\"Brailsford\", \"PRLS\", \"PRLS\"},\n+        {\"Brainard\", \"PRNR\", \"PRNR\"},\n+        {\"Brandish\", \"PRNT\", \"PRNT\"},\n+        {\"Braun\", \"PRN\", \"PRN\"},\n+        {\"Brecc\", \"PRK\", \"PRK\"},\n+        {\"Brent\", \"PRNT\", \"PRNT\"},\n+        {\"Brenton\", \"PRNT\", \"PRNT\"},\n+        {\"Briggs\", \"PRKS\", \"PRKS\"},\n+        {\"Brigham\", \"PRM\", \"PRM\"},\n+        {\"Brobst\", \"PRPS\", \"PRPS\"},\n+        {\"Brome\", \"PRM\", \"PRM\"},\n+        {\"Bronson\", \"PRNS\", \"PRNS\"},\n+        {\"Brooks\", \"PRKS\", \"PRKS\"},\n+        {\"Brouillard\", \"PRLR\", \"PRLR\"},\n+        {\"Brown\", \"PRN\", \"PRN\"},\n+        {\"Browne\", \"PRN\", \"PRN\"},\n+        {\"Brownell\", \"PRNL\", \"PRNL\"},\n+        {\"Bruley\", \"PRL\", \"PRL\"},\n+        {\"Bryant\", \"PRNT\", \"PRNT\"},\n+        {\"Brzozowski\", \"PRSS\", \"PRTS\"},\n+        {\"Buide\", \"PT\", \"PT\"},\n+        {\"Bulmer\", \"PLMR\", \"PLMR\"},\n+        {\"Bunker\", \"PNKR\", \"PNKR\"},\n+        {\"Burden\", \"PRTN\", \"PRTN\"},\n+        {\"Burge\", \"PRJ\", \"PRK\"},\n+        {\"Burgoyne\", \"PRKN\", \"PRKN\"},\n+        {\"Burke\", \"PRK\", \"PRK\"},\n+        {\"Burnett\", \"PRNT\", \"PRNT\"},\n+        {\"Burpee\", \"PRP\", \"PRP\"},\n+        {\"Bursley\", \"PRSL\", \"PRSL\"},\n+        {\"Burton\", \"PRTN\", \"PRTN\"},\n+        {\"Bushnell\", \"PXNL\", \"PXNL\"},\n+        {\"Buss\", \"PS\", \"PS\"},\n+        {\"Buswell\", \"PSL\", \"PSL\"},\n+        {\"Butler\", \"PTLR\", \"PTLR\"},\n+        {\"Calkin\", \"KLKN\", \"KLKN\"},\n+        {\"Canada\", \"KNT\", \"KNT\"},\n+        {\"Canmore\", \"KNMR\", \"KNMR\"},\n+        {\"Canney\", \"KN\", \"KN\"},\n+        {\"Capet\", \"KPT\", \"KPT\"},\n+        {\"Card\", \"KRT\", \"KRT\"},\n+        {\"Carman\", \"KRMN\", \"KRMN\"},\n+        {\"Carpenter\", \"KRPN\", \"KRPN\"},\n+        {\"Cartwright\", \"KRTR\", \"KRTR\"},\n+        {\"Casey\", \"KS\", \"KS\"},\n+        {\"Catterfield\", \"KTRF\", \"KTRF\"},\n+        {\"Ceeley\", \"SL\", \"SL\"},\n+        {\"Chambers\", \"XMPR\", \"XMPR\"},\n+        {\"Champion\", \"XMPN\", \"XMPN\"},\n+        {\"Chapman\", \"XPMN\", \"XPMN\"},\n+        {\"Chase\", \"XS\", \"XS\"},\n+        {\"Cheney\", \"XN\", \"XN\"},\n+        {\"Chetwynd\", \"XTNT\", \"XTNT\"},\n+        {\"Chevalier\", \"XFL\", \"XFLR\"},\n+        {\"Chillingsworth\", \"XLNK\", \"XLNK\"},\n+        {\"Christie\", \"KRST\", \"KRST\"},\n+        {\"Chubbuck\", \"XPK\", \"XPK\"},\n+        {\"Church\", \"XRX\", \"XRK\"},\n+        {\"Clark\", \"KLRK\", \"KLRK\"},\n+        {\"Clarke\", \"KLRK\", \"KLRK\"},\n+        {\"Cleare\", \"KLR\", \"KLR\"},\n+        {\"Clement\", \"KLMN\", \"KLMN\"},\n+        {\"Clerke\", \"KLRK\", \"KLRK\"},\n+        {\"Clibben\", \"KLPN\", \"KLPN\"},\n+        {\"Clifford\", \"KLFR\", \"KLFR\"},\n+        {\"Clivedon\", \"KLFT\", \"KLFT\"},\n+        {\"Close\", \"KLS\", \"KLS\"},\n+        {\"Clothilde\", \"KL0L\", \"KLTL\"},\n+        {\"Cobb\", \"KP\", \"KP\"},\n+        {\"Coburn\", \"KPRN\", \"KPRN\"},\n+        {\"Coburne\", \"KPRN\", \"KPRN\"},\n+        {\"Cocke\", \"KK\", \"KK\"},\n+        {\"Coffin\", \"KFN\", \"KFN\"},\n+        {\"Coffyn\", \"KFN\", \"KFN\"},\n+        {\"Colborne\", \"KLPR\", \"KLPR\"},\n+        {\"Colby\", \"KLP\", \"KLP\"},\n+        {\"Cole\", \"KL\", \"KL\"},\n+        {\"Coleman\", \"KLMN\", \"KLMN\"},\n+        {\"Collier\", \"KL\", \"KLR\"},\n+        {\"Compton\", \"KMPT\", \"KMPT\"},\n+        {\"Cone\", \"KN\", \"KN\"},\n+        {\"Cook\", \"KK\", \"KK\"},\n+        {\"Cooke\", \"KK\", \"KK\"},\n+        {\"Cooper\", \"KPR\", \"KPR\"},\n+        {\"Copperthwaite\", \"KPR0\", \"KPRT\"},\n+        {\"Corbet\", \"KRPT\", \"KRPT\"},\n+        {\"Corell\", \"KRL\", \"KRL\"},\n+        {\"Corey\", \"KR\", \"KR\"},\n+        {\"Corlies\", \"KRLS\", \"KRLS\"},\n+        {\"Corneliszen\", \"KRNL\", \"KRNL\"},\n+        {\"Cornelius\", \"KRNL\", \"KRNL\"},\n+        {\"Cornwallis\", \"KRNL\", \"KRNL\"},\n+        {\"Cosgrove\", \"KSKR\", \"KSKR\"},\n+        {\"Count of Brionne\", \"KNTF\", \"KNTF\"},\n+        {\"Covill\", \"KFL\", \"KFL\"},\n+        {\"Cowperthwaite\", \"KPR0\", \"KPRT\"},\n+        {\"Cowperwaite\", \"KPRT\", \"KPRT\"},\n+        {\"Crane\", \"KRN\", \"KRN\"},\n+        {\"Creagmile\", \"KRKM\", \"KRKM\"},\n+        {\"Crew\", \"KR\", \"KRF\"},\n+        {\"Crispin\", \"KRSP\", \"KRSP\"},\n+        {\"Crocker\", \"KRKR\", \"KRKR\"},\n+        {\"Crockett\", \"KRKT\", \"KRKT\"},\n+        {\"Crosby\", \"KRSP\", \"KRSP\"},\n+        {\"Crump\", \"KRMP\", \"KRMP\"},\n+        {\"Cunningham\", \"KNNK\", \"KNNK\"},\n+        {\"Curtis\", \"KRTS\", \"KRTS\"},\n+        {\"Cutha\", \"K0\", \"KT\"},\n+        {\"Cutter\", \"KTR\", \"KTR\"},\n+        {\"D'Aubigny\", \"TPN\", \"TPKN\"},\n+        {\"DAVIS\", \"TFS\", \"TFS\"},\n+        {\"Dabinott\", \"TPNT\", \"TPNT\"},\n+        {\"Dacre\", \"TKR\", \"TKR\"},\n+        {\"Daggett\", \"TKT\", \"TKT\"},\n+        {\"Danvers\", \"TNFR\", \"TNFR\"},\n+        {\"Darcy\", \"TRS\", \"TRS\"},\n+        {\"Davis\", \"TFS\", \"TFS\"},\n+        {\"Dawn\", \"TN\", \"TN\"},\n+        {\"Dawson\", \"TSN\", \"TSN\"},\n+        {\"Day\", \"T\", \"T\"},\n+        {\"Daye\", \"T\", \"T\"},\n+        {\"DeGrenier\", \"TKRN\", \"TKRN\"},\n+        {\"Dean\", \"TN\", \"TN\"},\n+        {\"Deekindaugh\", \"TKNT\", \"TKNT\"},\n+        {\"Dennis\", \"TNS\", \"TNS\"},\n+        {\"Denny\", \"TN\", \"TN\"},\n+        {\"Denton\", \"TNTN\", \"TNTN\"},\n+        {\"Desborough\", \"TSPR\", \"TSPR\"},\n+        {\"Despenser\", \"TSPN\", \"TSPN\"},\n+        {\"Deverill\", \"TFRL\", \"TFRL\"},\n+        {\"Devine\", \"TFN\", \"TFN\"},\n+        {\"Dexter\", \"TKST\", \"TKST\"},\n+        {\"Dillaway\", \"TL\", \"TL\"},\n+        {\"Dimmick\", \"TMK\", \"TMK\"},\n+        {\"Dinan\", \"TNN\", \"TNN\"},\n+        {\"Dix\", \"TKS\", \"TKS\"},\n+        {\"Doggett\", \"TKT\", \"TKT\"},\n+        {\"Donahue\", \"TNH\", \"TNH\"},\n+        {\"Dorfman\", \"TRFM\", \"TRFM\"},\n+        {\"Dorris\", \"TRS\", \"TRS\"},\n+        {\"Dow\", \"T\", \"TF\"},\n+        {\"Downey\", \"TN\", \"TN\"},\n+        {\"Downing\", \"TNNK\", \"TNNK\"},\n+        {\"Dowsett\", \"TST\", \"TST\"},\n+        {\"Duck?\", \"TK\", \"TK\"},\n+        {\"Dudley\", \"TTL\", \"TTL\"},\n+        {\"Duffy\", \"TF\", \"TF\"},\n+        {\"Dunn\", \"TN\", \"TN\"},\n+        {\"Dunsterville\", \"TNST\", \"TNST\"},\n+        {\"Durrant\", \"TRNT\", \"TRNT\"},\n+        {\"Durrin\", \"TRN\", \"TRN\"},\n+        {\"Dustin\", \"TSTN\", \"TSTN\"},\n+        {\"Duston\", \"TSTN\", \"TSTN\"},\n+        {\"Eames\", \"AMS\", \"AMS\"},\n+        {\"Early\", \"ARL\", \"ARL\"},\n+        {\"Easty\", \"AST\", \"AST\"},\n+        {\"Ebbett\", \"APT\", \"APT\"},\n+        {\"Eberbach\", \"APRP\", \"APRP\"},\n+        {\"Eberhard\", \"APRR\", \"APRR\"},\n+        {\"Eddy\", \"AT\", \"AT\"},\n+        {\"Edenden\", \"ATNT\", \"ATNT\"},\n+        {\"Edwards\", \"ATRT\", \"ATRT\"},\n+        {\"Eglinton\", \"AKLN\", \"ALNT\"},\n+        {\"Eliot\", \"ALT\", \"ALT\"},\n+        {\"Elizabeth\", \"ALSP\", \"ALSP\"},\n+        {\"Ellis\", \"ALS\", \"ALS\"},\n+        {\"Ellison\", \"ALSN\", \"ALSN\"},\n+        {\"Ellot\", \"ALT\", \"ALT\"},\n+        {\"Elny\", \"ALN\", \"ALN\"},\n+        {\"Elsner\", \"ALSN\", \"ALSN\"},\n+        {\"Emerson\", \"AMRS\", \"AMRS\"},\n+        {\"Empson\", \"AMPS\", \"AMPS\"},\n+        {\"Est\", \"AST\", \"AST\"},\n+        {\"Estabrook\", \"ASTP\", \"ASTP\"},\n+        {\"Estes\", \"ASTS\", \"ASTS\"},\n+        {\"Estey\", \"AST\", \"AST\"},\n+        {\"Evans\", \"AFNS\", \"AFNS\"},\n+        {\"Fallowell\", \"FLL\", \"FLL\"},\n+        {\"Farnsworth\", \"FRNS\", \"FRNS\"},\n+        {\"Feake\", \"FK\", \"FK\"},\n+        {\"Feke\", \"FK\", \"FK\"},\n+        {\"Fellows\", \"FLS\", \"FLS\"},\n+        {\"Fettiplace\", \"FTPL\", \"FTPL\"},\n+        {\"Finney\", \"FN\", \"FN\"},\n+        {\"Fischer\", \"FXR\", \"FSKR\"},\n+        {\"Fisher\", \"FXR\", \"FXR\"},\n+        {\"Fisk\", \"FSK\", \"FSK\"},\n+        {\"Fiske\", \"FSK\", \"FSK\"},\n+        {\"Fletcher\", \"FLXR\", \"FLXR\"},\n+        {\"Folger\", \"FLKR\", \"FLJR\"},\n+        {\"Foliot\", \"FLT\", \"FLT\"},\n+        {\"Folyot\", \"FLT\", \"FLT\"},\n+        {\"Fones\", \"FNS\", \"FNS\"},\n+        {\"Fordham\", \"FRTM\", \"FRTM\"},\n+        {\"Forstner\", \"FRST\", \"FRST\"},\n+        {\"Fosten\", \"FSTN\", \"FSTN\"},\n+        {\"Foster\", \"FSTR\", \"FSTR\"},\n+        {\"Foulke\", \"FLK\", \"FLK\"},\n+        {\"Fowler\", \"FLR\", \"FLR\"},\n+        {\"Foxwell\", \"FKSL\", \"FKSL\"},\n+        {\"Fraley\", \"FRL\", \"FRL\"},\n+        {\"Franceys\", \"FRNS\", \"FRNS\"},\n+        {\"Franke\", \"FRNK\", \"FRNK\"},\n+        {\"Frascella\", \"FRSL\", \"FRSL\"},\n+        {\"Frazer\", \"FRSR\", \"FRSR\"},\n+        {\"Fredd\", \"FRT\", \"FRT\"},\n+        {\"Freeman\", \"FRMN\", \"FRMN\"},\n+        {\"French\", \"FRNX\", \"FRNK\"},\n+        {\"Freville\", \"FRFL\", \"FRFL\"},\n+        {\"Frey\", \"FR\", \"FR\"},\n+        {\"Frick\", \"FRK\", \"FRK\"},\n+        {\"Frier\", \"FR\", \"FRR\"},\n+        {\"Froe\", \"FR\", \"FR\"},\n+        {\"Frorer\", \"FRRR\", \"FRRR\"},\n+        {\"Frost\", \"FRST\", \"FRST\"},\n+        {\"Frothingham\", \"FR0N\", \"FRTN\"},\n+        {\"Fry\", \"FR\", \"FR\"},\n+        {\"Gaffney\", \"KFN\", \"KFN\"},\n+        {\"Gage\", \"KJ\", \"KK\"},\n+        {\"Gallion\", \"KLN\", \"KLN\"},\n+        {\"Gallishan\", \"KLXN\", \"KLXN\"},\n+        {\"Gamble\", \"KMPL\", \"KMPL\"},\n+        {\"Garbrand\", \"KRPR\", \"KRPR\"},\n+        {\"Gardner\", \"KRTN\", \"KRTN\"},\n+        {\"Garrett\", \"KRT\", \"KRT\"},\n+        {\"Gassner\", \"KSNR\", \"KSNR\"},\n+        {\"Gater\", \"KTR\", \"KTR\"},\n+        {\"Gaunt\", \"KNT\", \"KNT\"},\n+        {\"Gayer\", \"KR\", \"KR\"},\n+        {\"Gerken\", \"KRKN\", \"JRKN\"},\n+        {\"Gerritsen\", \"KRTS\", \"JRTS\"},\n+        {\"Gibbs\", \"KPS\", \"JPS\"},\n+        {\"Giffard\", \"JFRT\", \"KFRT\"},\n+        {\"Gilbert\", \"KLPR\", \"JLPR\"},\n+        {\"Gill\", \"KL\", \"JL\"},\n+        {\"Gilman\", \"KLMN\", \"JLMN\"},\n+        {\"Glass\", \"KLS\", \"KLS\"},\n+        {\"Goddard\\\\Gifford\", \"KTRT\", \"KTRT\"},\n+        {\"Godfrey\", \"KTFR\", \"KTFR\"},\n+        {\"Godwin\", \"KTN\", \"KTN\"},\n+        {\"Goodale\", \"KTL\", \"KTL\"},\n+        {\"Goodnow\", \"KTN\", \"KTNF\"},\n+        {\"Gorham\", \"KRM\", \"KRM\"},\n+        {\"Goseline\", \"KSLN\", \"KSLN\"},\n+        {\"Gott\", \"KT\", \"KT\"},\n+        {\"Gould\", \"KLT\", \"KLT\"},\n+        {\"Grafton\", \"KRFT\", \"KRFT\"},\n+        {\"Grant\", \"KRNT\", \"KRNT\"},\n+        {\"Gray\", \"KR\", \"KR\"},\n+        {\"Green\", \"KRN\", \"KRN\"},\n+        {\"Griffin\", \"KRFN\", \"KRFN\"},\n+        {\"Grill\", \"KRL\", \"KRL\"},\n+        {\"Grim\", \"KRM\", \"KRM\"},\n+        {\"Grisgonelle\", \"KRSK\", \"KRSK\"},\n+        {\"Gross\", \"KRS\", \"KRS\"},\n+        {\"Guba\", \"KP\", \"KP\"},\n+        {\"Gybbes\", \"KPS\", \"JPS\"},\n+        {\"Haburne\", \"HPRN\", \"HPRN\"},\n+        {\"Hackburne\", \"HKPR\", \"HKPR\"},\n+        {\"Haddon?\", \"HTN\", \"HTN\"},\n+        {\"Haines\", \"HNS\", \"HNS\"},\n+        {\"Hale\", \"HL\", \"HL\"},\n+        {\"Hall\", \"HL\", \"HL\"},\n+        {\"Hallet\", \"HLT\", \"HLT\"},\n+        {\"Hallock\", \"HLK\", \"HLK\"},\n+        {\"Halstead\", \"HLST\", \"HLST\"},\n+        {\"Hammond\", \"HMNT\", \"HMNT\"},\n+        {\"Hance\", \"HNS\", \"HNS\"},\n+        {\"Handy\", \"HNT\", \"HNT\"},\n+        {\"Hanson\", \"HNSN\", \"HNSN\"},\n+        {\"Harasek\", \"HRSK\", \"HRSK\"},\n+        {\"Harcourt\", \"HRKR\", \"HRKR\"},\n+        {\"Hardy\", \"HRT\", \"HRT\"},\n+        {\"Harlock\", \"HRLK\", \"HRLK\"},\n+        {\"Harris\", \"HRS\", \"HRS\"},\n+        {\"Hartley\", \"HRTL\", \"HRTL\"},\n+        {\"Harvey\", \"HRF\", \"HRF\"},\n+        {\"Harvie\", \"HRF\", \"HRF\"},\n+        {\"Harwood\", \"HRT\", \"HRT\"},\n+        {\"Hathaway\", \"H0\", \"HT\"},\n+        {\"Haukeness\", \"HKNS\", \"HKNS\"},\n+        {\"Hawkes\", \"HKS\", \"HKS\"},\n+        {\"Hawkhurst\", \"HKRS\", \"HKRS\"},\n+        {\"Hawkins\", \"HKNS\", \"HKNS\"},\n+        {\"Hawley\", \"HL\", \"HL\"},\n+        {\"Heald\", \"HLT\", \"HLT\"},\n+        {\"Helsdon\", \"HLST\", \"HLST\"},\n+        {\"Hemenway\", \"HMN\", \"HMN\"},\n+        {\"Hemmenway\", \"HMN\", \"HMN\"},\n+        {\"Henck\", \"HNK\", \"HNK\"},\n+        {\"Henderson\", \"HNTR\", \"HNTR\"},\n+        {\"Hendricks\", \"HNTR\", \"HNTR\"},\n+        {\"Hersey\", \"HRS\", \"HRS\"},\n+        {\"Hewes\", \"HS\", \"HS\"},\n+        {\"Heyman\", \"HMN\", \"HMN\"},\n+        {\"Hicks\", \"HKS\", \"HKS\"},\n+        {\"Hidden\", \"HTN\", \"HTN\"},\n+        {\"Higgs\", \"HKS\", \"HKS\"},\n+        {\"Hill\", \"HL\", \"HL\"},\n+        {\"Hills\", \"HLS\", \"HLS\"},\n+        {\"Hinckley\", \"HNKL\", \"HNKL\"},\n+        {\"Hipwell\", \"HPL\", \"HPL\"},\n+        {\"Hobart\", \"HPRT\", \"HPRT\"},\n+        {\"Hoben\", \"HPN\", \"HPN\"},\n+        {\"Hoffmann\", \"HFMN\", \"HFMN\"},\n+        {\"Hogan\", \"HKN\", \"HKN\"},\n+        {\"Holmes\", \"HLMS\", \"HLMS\"},\n+        {\"Hoo\", \"H\", \"H\"},\n+        {\"Hooker\", \"HKR\", \"HKR\"},\n+        {\"Hopcott\", \"HPKT\", \"HPKT\"},\n+        {\"Hopkins\", \"HPKN\", \"HPKN\"},\n+        {\"Hopkinson\", \"HPKN\", \"HPKN\"},\n+        {\"Hornsey\", \"HRNS\", \"HRNS\"},\n+        {\"Houckgeest\", \"HKJS\", \"HKKS\"},\n+        {\"Hough\", \"H\", \"H\"},\n+        {\"Houstin\", \"HSTN\", \"HSTN\"},\n+        {\"How\", \"H\", \"HF\"},\n+        {\"Howe\", \"H\", \"H\"},\n+        {\"Howland\", \"HLNT\", \"HLNT\"},\n+        {\"Hubner\", \"HPNR\", \"HPNR\"},\n+        {\"Hudnut\", \"HTNT\", \"HTNT\"},\n+        {\"Hughes\", \"HS\", \"HS\"},\n+        {\"Hull\", \"HL\", \"HL\"},\n+        {\"Hulme\", \"HLM\", \"HLM\"},\n+        {\"Hume\", \"HM\", \"HM\"},\n+        {\"Hundertumark\", \"HNTR\", \"HNTR\"},\n+        {\"Hundley\", \"HNTL\", \"HNTL\"},\n+        {\"Hungerford\", \"HNKR\", \"HNJR\"},\n+        {\"Hunt\", \"HNT\", \"HNT\"},\n+        {\"Hurst\", \"HRST\", \"HRST\"},\n+        {\"Husbands\", \"HSPN\", \"HSPN\"},\n+        {\"Hussey\", \"HS\", \"HS\"},\n+        {\"Husted\", \"HSTT\", \"HSTT\"},\n+        {\"Hutchins\", \"HXNS\", \"HXNS\"},\n+        {\"Hutchinson\", \"HXNS\", \"HXNS\"},\n+        {\"Huttinger\", \"HTNK\", \"HTNJ\"},\n+        {\"Huybertsen\", \"HPRT\", \"HPRT\"},\n+        {\"Iddenden\", \"ATNT\", \"ATNT\"},\n+        {\"Ingraham\", \"ANKR\", \"ANKR\"},\n+        {\"Ives\", \"AFS\", \"AFS\"},\n+        {\"Jackson\", \"JKSN\", \"AKSN\"},\n+        {\"Jacob\", \"JKP\", \"AKP\"},\n+        {\"Jans\", \"JNS\", \"ANS\"},\n+        {\"Jenkins\", \"JNKN\", \"ANKN\"},\n+        {\"Jewett\", \"JT\", \"AT\"},\n+        {\"Jewitt\", \"JT\", \"AT\"},\n+        {\"Johnson\", \"JNSN\", \"ANSN\"},\n+        {\"Jones\", \"JNS\", \"ANS\"},\n+        {\"Josephine\", \"JSFN\", \"HSFN\"},\n+        {\"Judd\", \"JT\", \"AT\"},\n+        {\"June\", \"JN\", \"AN\"},\n+        {\"Kamarowska\", \"KMRS\", \"KMRS\"},\n+        {\"Kay\", \"K\", \"K\"},\n+        {\"Kelley\", \"KL\", \"KL\"},\n+        {\"Kelly\", \"KL\", \"KL\"},\n+        {\"Keymber\", \"KMPR\", \"KMPR\"},\n+        {\"Keynes\", \"KNS\", \"KNS\"},\n+        {\"Kilham\", \"KLM\", \"KLM\"},\n+        {\"Kim\", \"KM\", \"KM\"},\n+        {\"Kimball\", \"KMPL\", \"KMPL\"},\n+        {\"King\", \"KNK\", \"KNK\"},\n+        {\"Kinsey\", \"KNS\", \"KNS\"},\n+        {\"Kirk\", \"KRK\", \"KRK\"},\n+        {\"Kirton\", \"KRTN\", \"KRTN\"},\n+        {\"Kistler\", \"KSTL\", \"KSTL\"},\n+        {\"Kitchen\", \"KXN\", \"KXN\"},\n+        {\"Kitson\", \"KTSN\", \"KTSN\"},\n+        {\"Klett\", \"KLT\", \"KLT\"},\n+        {\"Kline\", \"KLN\", \"KLN\"},\n+        {\"Knapp\", \"NP\", \"NP\"},\n+        {\"Knight\", \"NT\", \"NT\"},\n+        {\"Knote\", \"NT\", \"NT\"},\n+        {\"Knott\", \"NT\", \"NT\"},\n+        {\"Knox\", \"NKS\", \"NKS\"},\n+        {\"Koeller\", \"KLR\", \"KLR\"},\n+        {\"La Pointe\", \"LPNT\", \"LPNT\"},\n+        {\"LaPlante\", \"LPLN\", \"LPLN\"},\n+        {\"Laimbeer\", \"LMPR\", \"LMPR\"},\n+        {\"Lamb\", \"LMP\", \"LMP\"},\n+        {\"Lambertson\", \"LMPR\", \"LMPR\"},\n+        {\"Lancto\", \"LNKT\", \"LNKT\"},\n+        {\"Landry\", \"LNTR\", \"LNTR\"},\n+        {\"Lane\", \"LN\", \"LN\"},\n+        {\"Langendyck\", \"LNJN\", \"LNKN\"},\n+        {\"Langer\", \"LNKR\", \"LNJR\"},\n+        {\"Langford\", \"LNKF\", \"LNKF\"},\n+        {\"Lantersee\", \"LNTR\", \"LNTR\"},\n+        {\"Laquer\", \"LKR\", \"LKR\"},\n+        {\"Larkin\", \"LRKN\", \"LRKN\"},\n+        {\"Latham\", \"LTM\", \"LTM\"},\n+        {\"Lathrop\", \"L0RP\", \"LTRP\"},\n+        {\"Lauter\", \"LTR\", \"LTR\"},\n+        {\"Lawrence\", \"LRNS\", \"LRNS\"},\n+        {\"Leach\", \"LK\", \"LK\"},\n+        {\"Leager\", \"LKR\", \"LJR\"},\n+        {\"Learned\", \"LRNT\", \"LRNT\"},\n+        {\"Leavitt\", \"LFT\", \"LFT\"},\n+        {\"Lee\", \"L\", \"L\"},\n+        {\"Leete\", \"LT\", \"LT\"},\n+        {\"Leggett\", \"LKT\", \"LKT\"},\n+        {\"Leland\", \"LLNT\", \"LLNT\"},\n+        {\"Leonard\", \"LNRT\", \"LNRT\"},\n+        {\"Lester\", \"LSTR\", \"LSTR\"},\n+        {\"Lestrange\", \"LSTR\", \"LSTR\"},\n+        {\"Lethem\", \"L0M\", \"LTM\"},\n+        {\"Levine\", \"LFN\", \"LFN\"},\n+        {\"Lewes\", \"LS\", \"LS\"},\n+        {\"Lewis\", \"LS\", \"LS\"},\n+        {\"Lincoln\", \"LNKL\", \"LNKL\"},\n+        {\"Lindsey\", \"LNTS\", \"LNTS\"},\n+        {\"Linher\", \"LNR\", \"LNR\"},\n+        {\"Lippet\", \"LPT\", \"LPT\"},\n+        {\"Lippincott\", \"LPNK\", \"LPNK\"},\n+        {\"Lockwood\", \"LKT\", \"LKT\"},\n+        {\"Loines\", \"LNS\", \"LNS\"},\n+        {\"Lombard\", \"LMPR\", \"LMPR\"},\n+        {\"Long\", \"LNK\", \"LNK\"},\n+        {\"Longespee\", \"LNJS\", \"LNKS\"},\n+        {\"Look\", \"LK\", \"LK\"},\n+        {\"Lounsberry\", \"LNSP\", \"LNSP\"},\n+        {\"Lounsbury\", \"LNSP\", \"LNSP\"},\n+        {\"Louthe\", \"L0\", \"LT\"},\n+        {\"Loveyne\", \"LFN\", \"LFN\"},\n+        {\"Lowe\", \"L\", \"L\"},\n+        {\"Ludlam\", \"LTLM\", \"LTLM\"},\n+        {\"Lumbard\", \"LMPR\", \"LMPR\"},\n+        {\"Lund\", \"LNT\", \"LNT\"},\n+        {\"Luno\", \"LN\", \"LN\"},\n+        {\"Lutz\", \"LTS\", \"LTS\"},\n+        {\"Lydia\", \"LT\", \"LT\"},\n+        {\"Lynne\", \"LN\", \"LN\"},\n+        {\"Lyon\", \"LN\", \"LN\"},\n+        {\"MacAlpin\", \"MKLP\", \"MKLP\"},\n+        {\"MacBricc\", \"MKPR\", \"MKPR\"},\n+        {\"MacCrinan\", \"MKRN\", \"MKRN\"},\n+        {\"MacKenneth\", \"MKN0\", \"MKNT\"},\n+        {\"MacMael nam Bo\", \"MKML\", \"MKML\"},\n+        {\"MacMurchada\", \"MKMR\", \"MKMR\"},\n+        {\"Macomber\", \"MKMP\", \"MKMP\"},\n+        {\"Macy\", \"MS\", \"MS\"},\n+        {\"Magnus\", \"MNS\", \"MKNS\"},\n+        {\"Mahien\", \"MHN\", \"MHN\"},\n+        {\"Malmains\", \"MLMN\", \"MLMN\"},\n+        {\"Malory\", \"MLR\", \"MLR\"},\n+        {\"Mancinelli\", \"MNSN\", \"MNSN\"},\n+        {\"Mancini\", \"MNSN\", \"MNSN\"},\n+        {\"Mann\", \"MN\", \"MN\"},\n+        {\"Manning\", \"MNNK\", \"MNNK\"},\n+        {\"Manter\", \"MNTR\", \"MNTR\"},\n+        {\"Marion\", \"MRN\", \"MRN\"},\n+        {\"Marley\", \"MRL\", \"MRL\"},\n+        {\"Marmion\", \"MRMN\", \"MRMN\"},\n+        {\"Marquart\", \"MRKR\", \"MRKR\"},\n+        {\"Marsh\", \"MRX\", \"MRX\"},\n+        {\"Marshal\", \"MRXL\", \"MRXL\"},\n+        {\"Marshall\", \"MRXL\", \"MRXL\"},\n+        {\"Martel\", \"MRTL\", \"MRTL\"},\n+        {\"Martha\", \"MR0\", \"MRT\"},\n+        {\"Martin\", \"MRTN\", \"MRTN\"},\n+        {\"Marturano\", \"MRTR\", \"MRTR\"},\n+        {\"Marvin\", \"MRFN\", \"MRFN\"},\n+        {\"Mary\", \"MR\", \"MR\"},\n+        {\"Mason\", \"MSN\", \"MSN\"},\n+        {\"Maxwell\", \"MKSL\", \"MKSL\"},\n+        {\"Mayhew\", \"MH\", \"MHF\"},\n+        {\"McAllaster\", \"MKLS\", \"MKLS\"},\n+        {\"McAllister\", \"MKLS\", \"MKLS\"},\n+        {\"McConnell\", \"MKNL\", \"MKNL\"},\n+        {\"McFarland\", \"MKFR\", \"MKFR\"},\n+        {\"McIlroy\", \"MSLR\", \"MSLR\"},\n+        {\"McNair\", \"MKNR\", \"MKNR\"},\n+        {\"McNair-Landry\", \"MKNR\", \"MKNR\"},\n+        {\"McRaven\", \"MKRF\", \"MKRF\"},\n+        {\"Mead\", \"MT\", \"MT\"},\n+        {\"Meade\", \"MT\", \"MT\"},\n+        {\"Meck\", \"MK\", \"MK\"},\n+        {\"Melton\", \"MLTN\", \"MLTN\"},\n+        {\"Mendenhall\", \"MNTN\", \"MNTN\"},\n+        {\"Mering\", \"MRNK\", \"MRNK\"},\n+        {\"Merrick\", \"MRK\", \"MRK\"},\n+        {\"Merry\", \"MR\", \"MR\"},\n+        {\"Mighill\", \"ML\", \"ML\"},\n+        {\"Miller\", \"MLR\", \"MLR\"},\n+        {\"Milton\", \"MLTN\", \"MLTN\"},\n+        {\"Mohun\", \"MHN\", \"MHN\"},\n+        {\"Montague\", \"MNTK\", \"MNTK\"},\n+        {\"Montboucher\", \"MNTP\", \"MNTP\"},\n+        {\"Moore\", \"MR\", \"MR\"},\n+        {\"Morrel\", \"MRL\", \"MRL\"},\n+        {\"Morrill\", \"MRL\", \"MRL\"},\n+        {\"Morris\", \"MRS\", \"MRS\"},\n+        {\"Morton\", \"MRTN\", \"MRTN\"},\n+        {\"Moton\", \"MTN\", \"MTN\"},\n+        {\"Muir\", \"MR\", \"MR\"},\n+        {\"Mulferd\", \"MLFR\", \"MLFR\"},\n+        {\"Mullins\", \"MLNS\", \"MLNS\"},\n+        {\"Mulso\", \"MLS\", \"MLS\"},\n+        {\"Munger\", \"MNKR\", \"MNJR\"},\n+        {\"Munt\", \"MNT\", \"MNT\"},\n+        {\"Murchad\", \"MRXT\", \"MRKT\"},\n+        {\"Murdock\", \"MRTK\", \"MRTK\"},\n+        {\"Murray\", \"MR\", \"MR\"},\n+        {\"Muskett\", \"MSKT\", \"MSKT\"},\n+        {\"Myers\", \"MRS\", \"MRS\"},\n+        {\"Myrick\", \"MRK\", \"MRK\"},\n+        {\"NORRIS\", \"NRS\", \"NRS\"},\n+        {\"Nayle\", \"NL\", \"NL\"},\n+        {\"Newcomb\", \"NKMP\", \"NKMP\"},\n+        {\"Newcomb(e)\", \"NKMP\", \"NKMP\"},\n+        {\"Newkirk\", \"NKRK\", \"NKRK\"},\n+        {\"Newton\", \"NTN\", \"NTN\"},\n+        {\"Niles\", \"NLS\", \"NLS\"},\n+        {\"Noble\", \"NPL\", \"NPL\"},\n+        {\"Noel\", \"NL\", \"NL\"},\n+        {\"Northend\", \"NR0N\", \"NRTN\"},\n+        {\"Norton\", \"NRTN\", \"NRTN\"},\n+        {\"Nutter\", \"NTR\", \"NTR\"},\n+        {\"Odding\", \"ATNK\", \"ATNK\"},\n+        {\"Odenbaugh\", \"ATNP\", \"ATNP\"},\n+        {\"Ogborn\", \"AKPR\", \"AKPR\"},\n+        {\"Oppenheimer\", \"APNM\", \"APNM\"},\n+        {\"Otis\", \"ATS\", \"ATS\"},\n+        {\"Oviatt\", \"AFT\", \"AFT\"},\n+        {\"PRUST?\", \"PRST\", \"PRST\"},\n+        {\"Paddock\", \"PTK\", \"PTK\"},\n+        {\"Page\", \"PJ\", \"PK\"},\n+        {\"Paine\", \"PN\", \"PN\"},\n+        {\"Paist\", \"PST\", \"PST\"},\n+        {\"Palmer\", \"PLMR\", \"PLMR\"},\n+        {\"Park\", \"PRK\", \"PRK\"},\n+        {\"Parker\", \"PRKR\", \"PRKR\"},\n+        {\"Parkhurst\", \"PRKR\", \"PRKR\"},\n+        {\"Parrat\", \"PRT\", \"PRT\"},\n+        {\"Parsons\", \"PRSN\", \"PRSN\"},\n+        {\"Partridge\", \"PRTR\", \"PRTR\"},\n+        {\"Pashley\", \"PXL\", \"PXL\"},\n+        {\"Pasley\", \"PSL\", \"PSL\"},\n+        {\"Patrick\", \"PTRK\", \"PTRK\"},\n+        {\"Pattee\", \"PT\", \"PT\"},\n+        {\"Patten\", \"PTN\", \"PTN\"},\n+        {\"Pawley\", \"PL\", \"PL\"},\n+        {\"Payne\", \"PN\", \"PN\"},\n+        {\"Peabody\", \"PPT\", \"PPT\"},\n+        {\"Peake\", \"PK\", \"PK\"},\n+        {\"Pearson\", \"PRSN\", \"PRSN\"},\n+        {\"Peat\", \"PT\", \"PT\"},\n+        {\"Pedersen\", \"PTRS\", \"PTRS\"},\n+        {\"Percy\", \"PRS\", \"PRS\"},\n+        {\"Perkins\", \"PRKN\", \"PRKN\"},\n+        {\"Perrine\", \"PRN\", \"PRN\"},\n+        {\"Perry\", \"PR\", \"PR\"},\n+        {\"Peson\", \"PSN\", \"PSN\"},\n+        {\"Peterson\", \"PTRS\", \"PTRS\"},\n+        {\"Peyton\", \"PTN\", \"PTN\"},\n+        {\"Phinney\", \"FN\", \"FN\"},\n+        {\"Pickard\", \"PKRT\", \"PKRT\"},\n+        {\"Pierce\", \"PRS\", \"PRS\"},\n+        {\"Pierrepont\", \"PRPN\", \"PRPN\"},\n+        {\"Pike\", \"PK\", \"PK\"},\n+        {\"Pinkham\", \"PNKM\", \"PNKM\"},\n+        {\"Pitman\", \"PTMN\", \"PTMN\"},\n+        {\"Pitt\", \"PT\", \"PT\"},\n+        {\"Pitts\", \"PTS\", \"PTS\"},\n+        {\"Plantagenet\", \"PLNT\", \"PLNT\"},\n+        {\"Platt\", \"PLT\", \"PLT\"},\n+        {\"Platts\", \"PLTS\", \"PLTS\"},\n+        {\"Pleis\", \"PLS\", \"PLS\"},\n+        {\"Pleiss\", \"PLS\", \"PLS\"},\n+        {\"Plisko\", \"PLSK\", \"PLSK\"},\n+        {\"Pliskovitch\", \"PLSK\", \"PLSK\"},\n+        {\"Plum\", \"PLM\", \"PLM\"},\n+        {\"Plume\", \"PLM\", \"PLM\"},\n+        {\"Poitou\", \"PT\", \"PT\"},\n+        {\"Pomeroy\", \"PMR\", \"PMR\"},\n+        {\"Poretiers\", \"PRTR\", \"PRTR\"},\n+        {\"Pote\", \"PT\", \"PT\"},\n+        {\"Potter\", \"PTR\", \"PTR\"},\n+        {\"Potts\", \"PTS\", \"PTS\"},\n+        {\"Powell\", \"PL\", \"PL\"},\n+        {\"Pratt\", \"PRT\", \"PRT\"},\n+        {\"Presbury\", \"PRSP\", \"PRSP\"},\n+        {\"Priest\", \"PRST\", \"PRST\"},\n+        {\"Prindle\", \"PRNT\", \"PRNT\"},\n+        {\"Prior\", \"PRR\", \"PRR\"},\n+        {\"Profumo\", \"PRFM\", \"PRFM\"},\n+        {\"Purdy\", \"PRT\", \"PRT\"},\n+        {\"Purefoy\", \"PRF\", \"PRF\"},\n+        {\"Pury\", \"PR\", \"PR\"},\n+        {\"Quinter\", \"KNTR\", \"KNTR\"},\n+        {\"Rachel\", \"RXL\", \"RKL\"},\n+        {\"Rand\", \"RNT\", \"RNT\"},\n+        {\"Rankin\", \"RNKN\", \"RNKN\"},\n+        {\"Ravenscroft\", \"RFNS\", \"RFNS\"},\n+        {\"Raynsford\", \"RNSF\", \"RNSF\"},\n+        {\"Reakirt\", \"RKRT\", \"RKRT\"},\n+        {\"Reaves\", \"RFS\", \"RFS\"},\n+        {\"Reeves\", \"RFS\", \"RFS\"},\n+        {\"Reichert\", \"RXRT\", \"RKRT\"},\n+        {\"Remmele\", \"RML\", \"RML\"},\n+        {\"Reynolds\", \"RNLT\", \"RNLT\"},\n+        {\"Rhodes\", \"RTS\", \"RTS\"},\n+        {\"Richards\", \"RXRT\", \"RKRT\"},\n+        {\"Richardson\", \"RXRT\", \"RKRT\"},\n+        {\"Ring\", \"RNK\", \"RNK\"},\n+        {\"Roberts\", \"RPRT\", \"RPRT\"},\n+        {\"Robertson\", \"RPRT\", \"RPRT\"},\n+        {\"Robson\", \"RPSN\", \"RPSN\"},\n+        {\"Rodie\", \"RT\", \"RT\"},\n+        {\"Rody\", \"RT\", \"RT\"},\n+        {\"Rogers\", \"RKRS\", \"RJRS\"},\n+        {\"Ross\", \"RS\", \"RS\"},\n+        {\"Rosslevin\", \"RSLF\", \"RSLF\"},\n+        {\"Rowland\", \"RLNT\", \"RLNT\"},\n+        {\"Ruehl\", \"RL\", \"RL\"},\n+        {\"Russell\", \"RSL\", \"RSL\"},\n+        {\"Ruth\", \"R0\", \"RT\"},\n+        {\"Ryan\", \"RN\", \"RN\"},\n+        {\"Rysse\", \"RS\", \"RS\"},\n+        {\"Sadler\", \"STLR\", \"STLR\"},\n+        {\"Salmon\", \"SLMN\", \"SLMN\"},\n+        {\"Salter\", \"SLTR\", \"SLTR\"},\n+        {\"Salvatore\", \"SLFT\", \"SLFT\"},\n+        {\"Sanders\", \"SNTR\", \"SNTR\"},\n+        {\"Sands\", \"SNTS\", \"SNTS\"},\n+        {\"Sanford\", \"SNFR\", \"SNFR\"},\n+        {\"Sanger\", \"SNKR\", \"SNJR\"},\n+        {\"Sargent\", \"SRJN\", \"SRKN\"},\n+        {\"Saunders\", \"SNTR\", \"SNTR\"},\n+        {\"Schilling\", \"XLNK\", \"XLNK\"},\n+        {\"Schlegel\", \"XLKL\", \"SLKL\"},\n+        {\"Scott\", \"SKT\", \"SKT\"},\n+        {\"Sears\", \"SRS\", \"SRS\"},\n+        {\"Segersall\", \"SJRS\", \"SKRS\"},\n+        {\"Senecal\", \"SNKL\", \"SNKL\"},\n+        {\"Sergeaux\", \"SRJ\", \"SRK\"},\n+        {\"Severance\", \"SFRN\", \"SFRN\"},\n+        {\"Sharp\", \"XRP\", \"XRP\"},\n+        {\"Sharpe\", \"XRP\", \"XRP\"},\n+        {\"Sharply\", \"XRPL\", \"XRPL\"},\n+        {\"Shatswell\", \"XTSL\", \"XTSL\"},\n+        {\"Shattack\", \"XTK\", \"XTK\"},\n+        {\"Shattock\", \"XTK\", \"XTK\"},\n+        {\"Shattuck\", \"XTK\", \"XTK\"},\n+        {\"Shaw\", \"X\", \"XF\"},\n+        {\"Sheldon\", \"XLTN\", \"XLTN\"},\n+        {\"Sherman\", \"XRMN\", \"XRMN\"},\n+        {\"Shinn\", \"XN\", \"XN\"},\n+        {\"Shirford\", \"XRFR\", \"XRFR\"},\n+        {\"Shirley\", \"XRL\", \"XRL\"},\n+        {\"Shively\", \"XFL\", \"XFL\"},\n+        {\"Shoemaker\", \"XMKR\", \"XMKR\"},\n+        {\"Short\", \"XRT\", \"XRT\"},\n+        {\"Shotwell\", \"XTL\", \"XTL\"},\n+        {\"Shute\", \"XT\", \"XT\"},\n+        {\"Sibley\", \"SPL\", \"SPL\"},\n+        {\"Silver\", \"SLFR\", \"SLFR\"},\n+        {\"Simes\", \"SMS\", \"SMS\"},\n+        {\"Sinken\", \"SNKN\", \"SNKN\"},\n+        {\"Sinn\", \"SN\", \"SN\"},\n+        {\"Skelton\", \"SKLT\", \"SKLT\"},\n+        {\"Skiffe\", \"SKF\", \"SKF\"},\n+        {\"Skotkonung\", \"SKTK\", \"SKTK\"},\n+        {\"Slade\", \"SLT\", \"XLT\"},\n+        {\"Slye\", \"SL\", \"XL\"},\n+        {\"Smedley\", \"SMTL\", \"XMTL\"},\n+        {\"Smith\", \"SM0\", \"XMT\"},\n+        {\"Snow\", \"SN\", \"XNF\"},\n+        {\"Soole\", \"SL\", \"SL\"},\n+        {\"Soule\", \"SL\", \"SL\"},\n+        {\"Southworth\", \"S0R0\", \"STRT\"},\n+        {\"Sowles\", \"SLS\", \"SLS\"},\n+        {\"Spalding\", \"SPLT\", \"SPLT\"},\n+        {\"Spark\", \"SPRK\", \"SPRK\"},\n+        {\"Spencer\", \"SPNS\", \"SPNS\"},\n+        {\"Sperry\", \"SPR\", \"SPR\"},\n+        {\"Spofford\", \"SPFR\", \"SPFR\"},\n+        {\"Spooner\", \"SPNR\", \"SPNR\"},\n+        {\"Sprague\", \"SPRK\", \"SPRK\"},\n+        {\"Springer\", \"SPRN\", \"SPRN\"},\n+        {\"St. Clair\", \"STKL\", \"STKL\"},\n+        {\"St. Claire\", \"STKL\", \"STKL\"},\n+        {\"St. Leger\", \"STLJ\", \"STLK\"},\n+        {\"St. Omer\", \"STMR\", \"STMR\"},\n+        {\"Stafferton\", \"STFR\", \"STFR\"},\n+        {\"Stafford\", \"STFR\", \"STFR\"},\n+        {\"Stalham\", \"STLM\", \"STLM\"},\n+        {\"Stanford\", \"STNF\", \"STNF\"},\n+        {\"Stanton\", \"STNT\", \"STNT\"},\n+        {\"Star\", \"STR\", \"STR\"},\n+        {\"Starbuck\", \"STRP\", \"STRP\"},\n+        {\"Starkey\", \"STRK\", \"STRK\"},\n+        {\"Starkweather\", \"STRK\", \"STRK\"},\n+        {\"Stearns\", \"STRN\", \"STRN\"},\n+        {\"Stebbins\", \"STPN\", \"STPN\"},\n+        {\"Steele\", \"STL\", \"STL\"},\n+        {\"Stephenson\", \"STFN\", \"STFN\"},\n+        {\"Stevens\", \"STFN\", \"STFN\"},\n+        {\"Stoddard\", \"STTR\", \"STTR\"},\n+        {\"Stodder\", \"STTR\", \"STTR\"},\n+        {\"Stone\", \"STN\", \"STN\"},\n+        {\"Storey\", \"STR\", \"STR\"},\n+        {\"Storrada\", \"STRT\", \"STRT\"},\n+        {\"Story\", \"STR\", \"STR\"},\n+        {\"Stoughton\", \"STFT\", \"STFT\"},\n+        {\"Stout\", \"STT\", \"STT\"},\n+        {\"Stow\", \"ST\", \"STF\"},\n+        {\"Strong\", \"STRN\", \"STRN\"},\n+        {\"Strutt\", \"STRT\", \"STRT\"},\n+        {\"Stryker\", \"STRK\", \"STRK\"},\n+        {\"Stuckeley\", \"STKL\", \"STKL\"},\n+        {\"Sturges\", \"STRJ\", \"STRK\"},\n+        {\"Sturgess\", \"STRJ\", \"STRK\"},\n+        {\"Sturgis\", \"STRJ\", \"STRK\"},\n+        {\"Suevain\", \"SFN\", \"SFN\"},\n+        {\"Sulyard\", \"SLRT\", \"SLRT\"},\n+        {\"Sutton\", \"STN\", \"STN\"},\n+        {\"Swain\", \"SN\", \"XN\"},\n+        {\"Swayne\", \"SN\", \"XN\"},\n+        {\"Swayze\", \"SS\", \"XTS\"},\n+        {\"Swift\", \"SFT\", \"XFT\"},\n+        {\"Taber\", \"TPR\", \"TPR\"},\n+        {\"Talcott\", \"TLKT\", \"TLKT\"},\n+        {\"Tarne\", \"TRN\", \"TRN\"},\n+        {\"Tatum\", \"TTM\", \"TTM\"},\n+        {\"Taverner\", \"TFRN\", \"TFRN\"},\n+        {\"Taylor\", \"TLR\", \"TLR\"},\n+        {\"Tenney\", \"TN\", \"TN\"},\n+        {\"Thayer\", \"0R\", \"TR\"},\n+        {\"Thember\", \"0MPR\", \"TMPR\"},\n+        {\"Thomas\", \"TMS\", \"TMS\"},\n+        {\"Thompson\", \"TMPS\", \"TMPS\"},\n+        {\"Thorne\", \"0RN\", \"TRN\"},\n+        {\"Thornycraft\", \"0RNK\", \"TRNK\"},\n+        {\"Threlkeld\", \"0RLK\", \"TRLK\"},\n+        {\"Throckmorton\", \"0RKM\", \"TRKM\"},\n+        {\"Thwaits\", \"0TS\", \"TTS\"},\n+        {\"Tibbetts\", \"TPTS\", \"TPTS\"},\n+        {\"Tidd\", \"TT\", \"TT\"},\n+        {\"Tierney\", \"TRN\", \"TRN\"},\n+        {\"Tilley\", \"TL\", \"TL\"},\n+        {\"Tillieres\", \"TLRS\", \"TLRS\"},\n+        {\"Tilly\", \"TL\", \"TL\"},\n+        {\"Tisdale\", \"TSTL\", \"TSTL\"},\n+        {\"Titus\", \"TTS\", \"TTS\"},\n+        {\"Tobey\", \"TP\", \"TP\"},\n+        {\"Tooker\", \"TKR\", \"TKR\"},\n+        {\"Towle\", \"TL\", \"TL\"},\n+        {\"Towne\", \"TN\", \"TN\"},\n+        {\"Townsend\", \"TNSN\", \"TNSN\"},\n+        {\"Treadway\", \"TRT\", \"TRT\"},\n+        {\"Trelawney\", \"TRLN\", \"TRLN\"},\n+        {\"Trinder\", \"TRNT\", \"TRNT\"},\n+        {\"Tripp\", \"TRP\", \"TRP\"},\n+        {\"Trippe\", \"TRP\", \"TRP\"},\n+        {\"Trott\", \"TRT\", \"TRT\"},\n+        {\"True\", \"TR\", \"TR\"},\n+        {\"Trussebut\", \"TRSP\", \"TRSP\"},\n+        {\"Tucker\", \"TKR\", \"TKR\"},\n+        {\"Turgeon\", \"TRJN\", \"TRKN\"},\n+        {\"Turner\", \"TRNR\", \"TRNR\"},\n+        {\"Tuttle\", \"TTL\", \"TTL\"},\n+        {\"Tyler\", \"TLR\", \"TLR\"},\n+        {\"Tylle\", \"TL\", \"TL\"},\n+        {\"Tyrrel\", \"TRL\", \"TRL\"},\n+        {\"Ua Tuathail\", \"AT0L\", \"ATTL\"},\n+        {\"Ulrich\", \"ALRX\", \"ALRK\"},\n+        {\"Underhill\", \"ANTR\", \"ANTR\"},\n+        {\"Underwood\", \"ANTR\", \"ANTR\"},\n+        {\"Unknown\", \"ANKN\", \"ANKN\"},\n+        {\"Valentine\", \"FLNT\", \"FLNT\"},\n+        {\"Van Egmond\", \"FNKM\", \"FNKM\"},\n+        {\"Van der Beek\", \"FNTR\", \"FNTR\"},\n+        {\"Vaughan\", \"FKN\", \"FKN\"},\n+        {\"Vermenlen\", \"FRMN\", \"FRMN\"},\n+        {\"Vincent\", \"FNSN\", \"FNSN\"},\n+        {\"Volentine\", \"FLNT\", \"FLNT\"},\n+        {\"Wagner\", \"AKNR\", \"FKNR\"},\n+        {\"Waite\", \"AT\", \"FT\"},\n+        {\"Walker\", \"ALKR\", \"FLKR\"},\n+        {\"Walter\", \"ALTR\", \"FLTR\"},\n+        {\"Wandell\", \"ANTL\", \"FNTL\"},\n+        {\"Wandesford\", \"ANTS\", \"FNTS\"},\n+        {\"Warbleton\", \"ARPL\", \"FRPL\"},\n+        {\"Ward\", \"ART\", \"FRT\"},\n+        {\"Warde\", \"ART\", \"FRT\"},\n+        {\"Ware\", \"AR\", \"FR\"},\n+        {\"Wareham\", \"ARHM\", \"FRHM\"},\n+        {\"Warner\", \"ARNR\", \"FRNR\"},\n+        {\"Warren\", \"ARN\", \"FRN\"},\n+        {\"Washburne\", \"AXPR\", \"FXPR\"},\n+        {\"Waterbury\", \"ATRP\", \"FTRP\"},\n+        {\"Watson\", \"ATSN\", \"FTSN\"},\n+        {\"WatsonEllithorpe\", \"ATSN\", \"FTSN\"},\n+        {\"Watts\", \"ATS\", \"FTS\"},\n+        {\"Wayne\", \"AN\", \"FN\"},\n+        {\"Webb\", \"AP\", \"FP\"},\n+        {\"Weber\", \"APR\", \"FPR\"},\n+        {\"Webster\", \"APST\", \"FPST\"},\n+        {\"Weed\", \"AT\", \"FT\"},\n+        {\"Weeks\", \"AKS\", \"FKS\"},\n+        {\"Wells\", \"ALS\", \"FLS\"},\n+        {\"Wenzell\", \"ANSL\", \"FNTS\"},\n+        {\"West\", \"AST\", \"FST\"},\n+        {\"Westbury\", \"ASTP\", \"FSTP\"},\n+        {\"Whatlocke\", \"ATLK\", \"ATLK\"},\n+        {\"Wheeler\", \"ALR\", \"ALR\"},\n+        {\"Whiston\", \"ASTN\", \"ASTN\"},\n+        {\"White\", \"AT\", \"AT\"},\n+        {\"Whitman\", \"ATMN\", \"ATMN\"},\n+        {\"Whiton\", \"ATN\", \"ATN\"},\n+        {\"Whitson\", \"ATSN\", \"ATSN\"},\n+        {\"Wickes\", \"AKS\", \"FKS\"},\n+        {\"Wilbur\", \"ALPR\", \"FLPR\"},\n+        {\"Wilcotes\", \"ALKT\", \"FLKT\"},\n+        {\"Wilkinson\", \"ALKN\", \"FLKN\"},\n+        {\"Willets\", \"ALTS\", \"FLTS\"},\n+        {\"Willett\", \"ALT\", \"FLT\"},\n+        {\"Willey\", \"AL\", \"FL\"},\n+        {\"Williams\", \"ALMS\", \"FLMS\"},\n+        {\"Williston\", \"ALST\", \"FLST\"},\n+        {\"Wilson\", \"ALSN\", \"FLSN\"},\n+        {\"Wimes\", \"AMS\", \"FMS\"},\n+        {\"Winch\", \"ANX\", \"FNK\"},\n+        {\"Winegar\", \"ANKR\", \"FNKR\"},\n+        {\"Wing\", \"ANK\", \"FNK\"},\n+        {\"Winsley\", \"ANSL\", \"FNSL\"},\n+        {\"Winslow\", \"ANSL\", \"FNSL\"},\n+        {\"Winthrop\", \"AN0R\", \"FNTR\"},\n+        {\"Wise\", \"AS\", \"FS\"},\n+        {\"Wood\", \"AT\", \"FT\"},\n+        {\"Woodbridge\", \"ATPR\", \"FTPR\"},\n+        {\"Woodward\", \"ATRT\", \"FTRT\"},\n+        {\"Wooley\", \"AL\", \"FL\"},\n+        {\"Woolley\", \"AL\", \"FL\"},\n+        {\"Worth\", \"AR0\", \"FRT\"},\n+        {\"Worthen\", \"AR0N\", \"FRTN\"},\n+        {\"Worthley\", \"AR0L\", \"FRTL\"},\n+        {\"Wright\", \"RT\", \"RT\"},\n+        {\"Wyer\", \"AR\", \"FR\"},\n+        {\"Wyere\", \"AR\", \"FR\"},\n+        {\"Wynkoop\", \"ANKP\", \"FNKP\"},\n+        {\"Yarnall\", \"ARNL\", \"ARNL\"},\n+        {\"Yeoman\", \"AMN\", \"AMN\"},\n+        {\"Yorke\", \"ARK\", \"ARK\"},\n+        {\"Young\", \"ANK\", \"ANK\"},\n+        {\"ab Wennonwen\", \"APNN\", \"APNN\"},\n+        {\"ap Llewellyn\", \"APLL\", \"APLL\"},\n+        {\"ap Lorwerth\", \"APLR\", \"APLR\"},\n+        {\"d'Angouleme\", \"TNKL\", \"TNKL\"},\n+        {\"de Audeham\", \"TTHM\", \"TTHM\"},\n+        {\"de Bavant\", \"TPFN\", \"TPFN\"},\n+        {\"de Beauchamp\", \"TPXM\", \"TPKM\"},\n+        {\"de Beaumont\", \"TPMN\", \"TPMN\"},\n+        {\"de Bolbec\", \"TPLP\", \"TPLP\"},\n+        {\"de Braiose\", \"TPRS\", \"TPRS\"},\n+        {\"de Braose\", \"TPRS\", \"TPRS\"},\n+        {\"de Briwere\", \"TPRR\", \"TPRR\"},\n+        {\"de Cantelou\", \"TKNT\", \"TKNT\"},\n+        {\"de Cherelton\", \"TXRL\", \"TKRL\"},\n+        {\"de Cherleton\", \"TXRL\", \"TKRL\"},\n+        {\"de Clare\", \"TKLR\", \"TKLR\"},\n+        {\"de Claremont\", \"TKLR\", \"TKLR\"},\n+        {\"de Clifford\", \"TKLF\", \"TKLF\"},\n+        {\"de Colville\", \"TKLF\", \"TKLF\"},\n+        {\"de Courtenay\", \"TKRT\", \"TKRT\"},\n+        {\"de Fauconberg\", \"TFKN\", \"TFKN\"},\n+        {\"de Forest\", \"TFRS\", \"TFRS\"},\n+        {\"de Gai\", \"TK\", \"TK\"},\n+        {\"de Grey\", \"TKR\", \"TKR\"},\n+        {\"de Guernons\", \"TKRN\", \"TKRN\"},\n+        {\"de Haia\", \"T\", \"T\"},\n+        {\"de Harcourt\", \"TRKR\", \"TRKR\"},\n+        {\"de Hastings\", \"TSTN\", \"TSTN\"},\n+        {\"de Hoke\", \"TK\", \"TK\"},\n+        {\"de Hooch\", \"TK\", \"TK\"},\n+        {\"de Hugelville\", \"TJLF\", \"TKLF\"},\n+        {\"de Huntingdon\", \"TNTN\", \"TNTN\"},\n+        {\"de Insula\", \"TNSL\", \"TNSL\"},\n+        {\"de Keynes\", \"TKNS\", \"TKNS\"},\n+        {\"de Lacy\", \"TLS\", \"TLS\"},\n+        {\"de Lexington\", \"TLKS\", \"TLKS\"},\n+        {\"de Lusignan\", \"TLSN\", \"TLSK\"},\n+        {\"de Manvers\", \"TMNF\", \"TMNF\"},\n+        {\"de Montagu\", \"TMNT\", \"TMNT\"},\n+        {\"de Montault\", \"TMNT\", \"TMNT\"},\n+        {\"de Montfort\", \"TMNT\", \"TMNT\"},\n+        {\"de Mortimer\", \"TMRT\", \"TMRT\"},\n+        {\"de Morville\", \"TMRF\", \"TMRF\"},\n+        {\"de Morvois\", \"TMRF\", \"TMRF\"},\n+        {\"de Neufmarche\", \"TNFM\", \"TNFM\"},\n+        {\"de Odingsells\", \"TTNK\", \"TTNK\"},\n+        {\"de Odyngsells\", \"TTNK\", \"TTNK\"},\n+        {\"de Percy\", \"TPRS\", \"TPRS\"},\n+        {\"de Pierrepont\", \"TPRP\", \"TPRP\"},\n+        {\"de Plessetis\", \"TPLS\", \"TPLS\"},\n+        {\"de Porhoet\", \"TPRT\", \"TPRT\"},\n+        {\"de Prouz\", \"TPRS\", \"TPRS\"},\n+        {\"de Quincy\", \"TKNS\", \"TKNS\"},\n+        {\"de Ripellis\", \"TRPL\", \"TRPL\"},\n+        {\"de Ros\", \"TRS\", \"TRS\"},\n+        {\"de Salisbury\", \"TSLS\", \"TSLS\"},\n+        {\"de Sanford\", \"TSNF\", \"TSNF\"},\n+        {\"de Somery\", \"TSMR\", \"TSMR\"},\n+        {\"de St. Hilary\", \"TSTL\", \"TSTL\"},\n+        {\"de St. Liz\", \"TSTL\", \"TSTL\"},\n+        {\"de Sutton\", \"TSTN\", \"TSTN\"},\n+        {\"de Toeni\", \"TTN\", \"TTN\"},\n+        {\"de Tony\", \"TTN\", \"TTN\"},\n+        {\"de Umfreville\", \"TMFR\", \"TMFR\"},\n+        {\"de Valognes\", \"TFLN\", \"TFLK\"},\n+        {\"de Vaux\", \"TF\", \"TF\"},\n+        {\"de Vere\", \"TFR\", \"TFR\"},\n+        {\"de Vermandois\", \"TFRM\", \"TFRM\"},\n+        {\"de Vernon\", \"TFRN\", \"TFRN\"},\n+        {\"de Vexin\", \"TFKS\", \"TFKS\"},\n+        {\"de Vitre\", \"TFTR\", \"TFTR\"},\n+        {\"de Wandesford\", \"TNTS\", \"TNTS\"},\n+        {\"de Warenne\", \"TRN\", \"TRN\"},\n+        {\"de Westbury\", \"TSTP\", \"TSTP\"},\n+        {\"di Saluzzo\", \"TSLS\", \"TSLT\"},\n+        {\"fitz Alan\", \"FTSL\", \"FTSL\"},\n+        {\"fitz Geoffrey\", \"FTSJ\", \"FTSK\"},\n+        {\"fitz Herbert\", \"FTSR\", \"FTSR\"},\n+        {\"fitz John\", \"FTSJ\", \"FTSJ\"},\n+        {\"fitz Patrick\", \"FTSP\", \"FTSP\"},\n+        {\"fitz Payn\", \"FTSP\", \"FTSP\"},\n+        {\"fitz Piers\", \"FTSP\", \"FTSP\"},\n+        {\"fitz Randolph\", \"FTSR\", \"FTSR\"},\n+        {\"fitz Richard\", \"FTSR\", \"FTSR\"},\n+        {\"fitz Robert\", \"FTSR\", \"FTSR\"},\n+        {\"fitz Roy\", \"FTSR\", \"FTSR\"},\n+        {\"fitz Scrob\", \"FTSS\", \"FTSS\"},\n+        {\"fitz Walter\", \"FTSL\", \"FTSL\"},\n+        {\"fitz Warin\", \"FTSR\", \"FTSR\"},\n+        {\"fitz Williams\", \"FTSL\", \"FTSL\"},\n+        {\"la Zouche\", \"LSX\", \"LSK\"},\n+        {\"le Botiller\", \"LPTL\", \"LPTL\"},\n+        {\"le Despenser\", \"LTSP\", \"LTSP\"},\n+        {\"le deSpencer\", \"LTSP\", \"LTSP\"},\n+        {\"of Allendale\", \"AFLN\", \"AFLN\"},\n+        {\"of Angouleme\", \"AFNK\", \"AFNK\"},\n+        {\"of Anjou\", \"AFNJ\", \"AFNJ\"},\n+        {\"of Aquitaine\", \"AFKT\", \"AFKT\"},\n+        {\"of Aumale\", \"AFML\", \"AFML\"},\n+        {\"of Bavaria\", \"AFPF\", \"AFPF\"},\n+        {\"of Boulogne\", \"AFPL\", \"AFPL\"},\n+        {\"of Brittany\", \"AFPR\", \"AFPR\"},\n+        {\"of Brittary\", \"AFPR\", \"AFPR\"},\n+        {\"of Castile\", \"AFKS\", \"AFKS\"},\n+        {\"of Chester\", \"AFXS\", \"AFKS\"},\n+        {\"of Clermont\", \"AFKL\", \"AFKL\"},\n+        {\"of Cologne\", \"AFKL\", \"AFKL\"},\n+        {\"of Dinan\", \"AFTN\", \"AFTN\"},\n+        {\"of Dunbar\", \"AFTN\", \"AFTN\"},\n+        {\"of England\", \"AFNK\", \"AFNK\"},\n+        {\"of Essex\", \"AFSK\", \"AFSK\"},\n+        {\"of Falaise\", \"AFFL\", \"AFFL\"},\n+        {\"of Flanders\", \"AFFL\", \"AFFL\"},\n+        {\"of Galloway\", \"AFKL\", \"AFKL\"},\n+        {\"of Germany\", \"AFKR\", \"AFJR\"},\n+        {\"of Gloucester\", \"AFKL\", \"AFKL\"},\n+        {\"of Heristal\", \"AFRS\", \"AFRS\"},\n+        {\"of Hungary\", \"AFNK\", \"AFNK\"},\n+        {\"of Huntington\", \"AFNT\", \"AFNT\"},\n+        {\"of Kiev\", \"AFKF\", \"AFKF\"},\n+        {\"of Kuno\", \"AFKN\", \"AFKN\"},\n+        {\"of Landen\", \"AFLN\", \"AFLN\"},\n+        {\"of Laon\", \"AFLN\", \"AFLN\"},\n+        {\"of Leinster\", \"AFLN\", \"AFLN\"},\n+        {\"of Lens\", \"AFLN\", \"AFLN\"},\n+        {\"of Lorraine\", \"AFLR\", \"AFLR\"},\n+        {\"of Louvain\", \"AFLF\", \"AFLF\"},\n+        {\"of Mercia\", \"AFMR\", \"AFMR\"},\n+        {\"of Metz\", \"AFMT\", \"AFMT\"},\n+        {\"of Meulan\", \"AFML\", \"AFML\"},\n+        {\"of Nass\", \"AFNS\", \"AFNS\"},\n+        {\"of Normandy\", \"AFNR\", \"AFNR\"},\n+        {\"of Ohningen\", \"AFNN\", \"AFNN\"},\n+        {\"of Orleans\", \"AFRL\", \"AFRL\"},\n+        {\"of Poitou\", \"AFPT\", \"AFPT\"},\n+        {\"of Polotzk\", \"AFPL\", \"AFPL\"},\n+        {\"of Provence\", \"AFPR\", \"AFPR\"},\n+        {\"of Ringelheim\", \"AFRN\", \"AFRN\"},\n+        {\"of Salisbury\", \"AFSL\", \"AFSL\"},\n+        {\"of Saxony\", \"AFSK\", \"AFSK\"},\n+        {\"of Scotland\", \"AFSK\", \"AFSK\"},\n+        {\"of Senlis\", \"AFSN\", \"AFSN\"},\n+        {\"of Stafford\", \"AFST\", \"AFST\"},\n+        {\"of Swabia\", \"AFSP\", \"AFSP\"},\n+        {\"of Tongres\", \"AFTN\", \"AFTN\"},\n+        {\"of the Tributes\", \"AF0T\", \"AFTT\"},\n+        {\"unknown\", \"ANKN\", \"ANKN\"},\n+        {\"van der Gouda\", \"FNTR\", \"FNTR\"},\n+        {\"von Adenbaugh\", \"FNTN\", \"FNTN\"},\n+        {\"ARCHITure\", \"ARKT\", \"ARKT\"},\n+        {\"Arnoff\", \"ARNF\", \"ARNF\"},\n+        {\"Arnow\", \"ARN\", \"ARNF\"},\n+        {\"DANGER\", \"TNJR\", \"TNKR\"},\n+        {\"Jankelowicz\", \"JNKL\", \"ANKL\"},\n+        {\"MANGER\", \"MNJR\", \"MNKR\"},\n+        {\"McClellan\", \"MKLL\", \"MKLL\"},\n+        {\"McHugh\", \"MK\", \"MK\"},\n+        {\"McLaughlin\", \"MKLF\", \"MKLF\"},\n+        {\"ORCHEStra\", \"ARKS\", \"ARKS\"},\n+        {\"ORCHID\", \"ARKT\", \"ARKT\"},\n+        {\"Pierce\", \"PRS\", \"PRS\"},\n+        {\"RANGER\", \"RNJR\", \"RNKR\"},\n+        {\"Schlesinger\", \"XLSN\", \"SLSN\"},\n+        {\"Uomo\", \"AM\", \"AM\"},\n+        {\"Vasserman\", \"FSRM\", \"FSRM\"},\n+        {\"Wasserman\", \"ASRM\", \"FSRM\"},\n+        {\"Womo\", \"AM\", \"FM\"},\n+        {\"Yankelovich\", \"ANKL\", \"ANKL\"},\n+        {\"accede\", \"AKST\", \"AKST\"},\n+        {\"accident\", \"AKST\", \"AKST\"},\n+        {\"adelsheim\", \"ATLS\", \"ATLS\"},\n+        {\"aged\", \"AJT\", \"AKT\"},\n+        {\"ageless\", \"AJLS\", \"AKLS\"},\n+        {\"agency\", \"AJNS\", \"AKNS\"},\n+        {\"aghast\", \"AKST\", \"AKST\"},\n+        {\"agio\", \"AJ\", \"AK\"},\n+        {\"agrimony\", \"AKRM\", \"AKRM\"},\n+        {\"album\", \"ALPM\", \"ALPM\"},\n+        {\"alcmene\", \"ALKM\", \"ALKM\"},\n+        {\"alehouse\", \"ALHS\", \"ALHS\"},\n+        {\"antique\", \"ANTK\", \"ANTK\"},\n+        {\"artois\", \"ART\", \"ARTS\"},\n+        {\"automation\", \"ATMX\", \"ATMX\"},\n+        {\"bacchus\", \"PKS\", \"PKS\"},\n+        {\"bacci\", \"PX\", \"PX\"},\n+        {\"bajador\", \"PJTR\", \"PHTR\"},\n+        {\"bellocchio\", \"PLX\", \"PLX\"},\n+        {\"bertucci\", \"PRTX\", \"PRTX\"},\n+        {\"biaggi\", \"PJ\", \"PK\"},\n+        {\"bough\", \"P\", \"P\"},\n+        {\"breaux\", \"PR\", \"PR\"},\n+        {\"broughton\", \"PRTN\", \"PRTN\"},\n+        {\"cabrillo\", \"KPRL\", \"KPR\"},\n+        {\"caesar\", \"SSR\", \"SSR\"},\n+        {\"cagney\", \"KKN\", \"KKN\"},\n+        {\"campbell\", \"KMPL\", \"KMPL\"},\n+        {\"carlisle\", \"KRLL\", \"KRLL\"},\n+        {\"carlysle\", \"KRLL\", \"KRLL\"},\n+        {\"chemistry\", \"KMST\", \"KMST\"},\n+        {\"chianti\", \"KNT\", \"KNT\"},\n+        {\"chorus\", \"KRS\", \"KRS\"},\n+        {\"cough\", \"KF\", \"KF\"},\n+        {\"czerny\", \"SRN\", \"XRN\"},\n+        {\"deffenbacher\", \"TFNP\", \"TFNP\"},\n+        {\"dumb\", \"TM\", \"TM\"},\n+        {\"edgar\", \"ATKR\", \"ATKR\"},\n+        {\"edge\", \"AJ\", \"AJ\"},\n+        {\"filipowicz\", \"FLPT\", \"FLPF\"},\n+        {\"focaccia\", \"FKX\", \"FKX\"},\n+        {\"gallegos\", \"KLKS\", \"KKS\"},\n+        {\"gambrelli\", \"KMPR\", \"KMPR\"},\n+        {\"geithain\", \"K0N\", \"JTN\"},\n+        {\"ghiradelli\", \"JRTL\", \"JRTL\"},\n+        {\"ghislane\", \"JLN\", \"JLN\"},\n+        {\"gough\", \"KF\", \"KF\"},\n+        {\"hartheim\", \"HR0M\", \"HRTM\"},\n+        {\"heimsheim\", \"HMSM\", \"HMSM\"},\n+        {\"hochmeier\", \"HKMR\", \"HKMR\"},\n+        {\"hugh\", \"H\", \"H\"},\n+        {\"hunger\", \"HNKR\", \"HNJR\"},\n+        {\"hungry\", \"HNKR\", \"HNKR\"},\n+        {\"island\", \"ALNT\", \"ALNT\"},\n+        {\"isle\", \"AL\", \"AL\"},\n+        {\"jose\", \"HS\", \"HS\"},\n+        {\"laugh\", \"LF\", \"LF\"},\n+        {\"mac caffrey\", \"MKFR\", \"MKFR\"},\n+        {\"mac gregor\", \"MKRK\", \"MKRK\"},\n+        {\"pegnitz\", \"PNTS\", \"PKNT\"},\n+        {\"piskowitz\", \"PSKT\", \"PSKF\"},\n+        {\"queen\", \"KN\", \"KN\"},\n+        {\"raspberry\", \"RSPR\", \"RSPR\"},\n+        {\"resnais\", \"RSN\", \"RSNS\"},\n+        {\"rogier\", \"RJ\", \"RJR\"},\n+        {\"rough\", \"RF\", \"RF\"},\n+        {\"san jacinto\", \"SNHS\", \"SNHS\"},\n+        {\"schenker\", \"XNKR\", \"SKNK\"},\n+        {\"schermerhorn\", \"XRMR\", \"SKRM\"},\n+        {\"schmidt\", \"XMT\", \"SMT\"},\n+        {\"schneider\", \"XNTR\", \"SNTR\"},\n+        {\"school\", \"SKL\", \"SKL\"},\n+        {\"schooner\", \"SKNR\", \"SKNR\"},\n+        {\"schrozberg\", \"XRSP\", \"SRSP\"},\n+        {\"schulman\", \"XLMN\", \"XLMN\"},\n+        {\"schwabach\", \"XPK\", \"XFPK\"},\n+        {\"schwarzach\", \"XRSK\", \"XFRT\"},\n+        {\"smith\", \"SM0\", \"XMT\"},\n+        {\"snider\", \"SNTR\", \"XNTR\"},\n+        {\"succeed\", \"SKST\", \"SKST\"},\n+        {\"sugarcane\", \"XKRK\", \"SKRK\"},\n+        {\"svobodka\", \"SFPT\", \"SFPT\"},\n+        {\"tagliaro\", \"TKLR\", \"TLR\"},\n+        {\"thames\", \"TMS\", \"TMS\"},\n+        {\"theilheim\", \"0LM\", \"TLM\"},\n+        {\"thomas\", \"TMS\", \"TMS\"},\n+        {\"thumb\", \"0M\", \"TM\"},\n+        {\"tichner\", \"TXNR\", \"TKNR\"},\n+        {\"tough\", \"TF\", \"TF\"},\n+        {\"umbrella\", \"AMPR\", \"AMPR\"},\n+        {\"vilshofen\", \"FLXF\", \"FLXF\"},\n+        {\"von schuller\", \"FNXL\", \"FNXL\"},\n+        {\"wachtler\", \"AKTL\", \"FKTL\"},\n+        {\"wechsler\", \"AKSL\", \"FKSL\"},\n+        {\"weikersheim\", \"AKRS\", \"FKRS\"},\n+        {\"zhao\", \"J\", \"J\"}};\n \n     /**\n      * Construct a new test case.\n-     *\n-     * @param name The name of the test\n+     * \n+     * @param name\n+     *            The name of the test\n      */\n     public DoubleMetaphone2Test(String name) {\n         super(name);\n     }\n \n-    /**\n-     * Set up.\n-     */\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.doubleMetaphone = new DoubleMetaphone();\n+    private void checkDoubleMetaphone(int typeIndex, boolean alternate) {\n+        for (int i = 0; i < TEST_DATA.length; i++) {\n+            String value = TEST_DATA[i][0];\n+            assertEquals(\"Test [\" + i + \"]=\" + value, TEST_DATA[i][typeIndex], this.getDoubleMetaphone().doubleMetaphone(value, alternate));\n+        }\n+    }\n+\n+    protected StringEncoder createStringEncoder() {\n+        return new DoubleMetaphone();\n     }\n \n     /**\n-     * Tear Down.\n+     * @return Returns the metaphone.\n      */\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.doubleMetaphone = null;\n+    private DoubleMetaphone getDoubleMetaphone() {\n+        return (DoubleMetaphone) this.getStringEncoder();\n+    }\n+\n+    /**\n+     * Test alternative encoding.\n+     */\n+    public void testDoubleMetaphoneAlternate() {\n+        this.checkDoubleMetaphone(ALTERNATE_INDEX, true);\n     }\n \n     /**\n      * Test primary encoding.\n      */\n     public void testDoubleMetaphonePrimary() {\n-        String value = null;\n-        for (int i = 0; i < TEST_DATA.length; i++) {\n-            value = TEST_DATA[i][0];\n-            assertEquals(\"Test [\" + i + \"]=\" + value, TEST_DATA[i][1], doubleMetaphone.doubleMetaphone(value, false));\n-        }\n+        this.checkDoubleMetaphone(PRIMARY_INDEX, false);\n     }\n-\n-    /**\n-     * Test alternative encoding.\n-     */\n-    public void testDoubleMetaphoneAlternate() {\n-        String value = null;\n-        for (int i = 0; i < TEST_DATA.length; i++) {\n-            value = TEST_DATA[i][0];\n-            assertEquals(\"Test [\" + i + \"]=\" + value, TEST_DATA[i][2], doubleMetaphone.doubleMetaphone(value, true));\n-        }\n-    }\n-\n-    /** Test values and their expected primary & alternate Double Metaphone encodings */\n-    private static final String[][] TEST_DATA = new String[][] {\n-        new String[] {\"ALLERTON\",    \"ALRT\", \"ALRT\"},\n-        new String[] {\"Acton\",       \"AKTN\", \"AKTN\"},\n-        new String[] {\"Adams\",       \"ATMS\", \"ATMS\"},\n-        new String[] {\"Aggar\",       \"AKR\",  \"AKR\"},\n-        new String[] {\"Ahl\",         \"AL\",   \"AL\"},\n-        new String[] {\"Aiken\",       \"AKN\",  \"AKN\"},\n-        new String[] {\"Alan\",        \"ALN\",  \"ALN\"},\n-        new String[] {\"Alcock\",      \"ALKK\", \"ALKK\"},\n-        new String[] {\"Alden\",       \"ALTN\", \"ALTN\"},\n-        new String[] {\"Aldham\",      \"ALTM\", \"ALTM\"},\n-        new String[] {\"Allen\",       \"ALN\",  \"ALN\"},\n-        new String[] {\"Allerton\",    \"ALRT\", \"ALRT\"},\n-        new String[] {\"Alsop\",       \"ALSP\", \"ALSP\"},\n-        new String[] {\"Alwein\",      \"ALN\",  \"ALN\"},\n-        new String[] {\"Ambler\",      \"AMPL\", \"AMPL\"},\n-        new String[] {\"Andevill\",    \"ANTF\", \"ANTF\"},\n-        new String[] {\"Andrews\",     \"ANTR\", \"ANTR\"},\n-        new String[] {\"Andreyco\",    \"ANTR\", \"ANTR\"},\n-        new String[] {\"Andriesse\",   \"ANTR\", \"ANTR\"},\n-        new String[] {\"Angier\",      \"ANJ\",  \"ANJR\"},\n-        new String[] {\"Annabel\",     \"ANPL\", \"ANPL\"},\n-        new String[] {\"Anne\",        \"AN\",   \"AN\"},\n-        new String[] {\"Anstye\",      \"ANST\", \"ANST\"},\n-        new String[] {\"Appling\",     \"APLN\", \"APLN\"},\n-        new String[] {\"Apuke\",       \"APK\",  \"APK\"},\n-        new String[] {\"Arnold\",      \"ARNL\", \"ARNL\"},\n-        new String[] {\"Ashby\",       \"AXP\",  \"AXP\"},\n-        new String[] {\"Astwood\",     \"ASTT\", \"ASTT\"},\n-        new String[] {\"Atkinson\",    \"ATKN\", \"ATKN\"},\n-        new String[] {\"Audley\",      \"ATL\",  \"ATL\"},\n-        new String[] {\"Austin\",      \"ASTN\", \"ASTN\"},\n-        new String[] {\"Avenal\",      \"AFNL\", \"AFNL\"},\n-        new String[] {\"Ayer\",        \"AR\",   \"AR\"},\n-        new String[] {\"Ayot\",        \"AT\",   \"AT\"},\n-        new String[] {\"Babbitt\",     \"PPT\",  \"PPT\"},\n-        new String[] {\"Bachelor\",    \"PXLR\", \"PKLR\"},\n-        new String[] {\"Bachelour\",   \"PXLR\", \"PKLR\"},\n-        new String[] {\"Bailey\",      \"PL\",   \"PL\"},\n-        new String[] {\"Baivel\",      \"PFL\",  \"PFL\"},\n-        new String[] {\"Baker\",       \"PKR\",  \"PKR\"},\n-        new String[] {\"Baldwin\",     \"PLTN\", \"PLTN\"},\n-        new String[] {\"Balsley\",     \"PLSL\", \"PLSL\"},\n-        new String[] {\"Barber\",      \"PRPR\", \"PRPR\"},\n-        new String[] {\"Barker\",      \"PRKR\", \"PRKR\"},\n-        new String[] {\"Barlow\",      \"PRL\",  \"PRLF\"},\n-        new String[] {\"Barnard\",     \"PRNR\", \"PRNR\"},\n-        new String[] {\"Barnes\",      \"PRNS\", \"PRNS\"},\n-        new String[] {\"Barnsley\",    \"PRNS\", \"PRNS\"},\n-        new String[] {\"Barouxis\",    \"PRKS\", \"PRKS\"},\n-        new String[] {\"Bartlet\",     \"PRTL\", \"PRTL\"},\n-        new String[] {\"Basley\",      \"PSL\",  \"PSL\"},\n-        new String[] {\"Basset\",      \"PST\",  \"PST\"},\n-        new String[] {\"Bassett\",     \"PST\",  \"PST\"},\n-        new String[] {\"Batchlor\",    \"PXLR\", \"PXLR\"},\n-        new String[] {\"Bates\",       \"PTS\",  \"PTS\"},\n-        new String[] {\"Batson\",      \"PTSN\", \"PTSN\"},\n-        new String[] {\"Bayes\",       \"PS\",   \"PS\"},\n-        new String[] {\"Bayley\",      \"PL\",   \"PL\"},\n-        new String[] {\"Beale\",       \"PL\",   \"PL\"},\n-        new String[] {\"Beauchamp\",   \"PXMP\", \"PKMP\"},\n-        new String[] {\"Beauclerc\",   \"PKLR\", \"PKLR\"},\n-        new String[] {\"Beech\",       \"PK\",   \"PK\"},\n-        new String[] {\"Beers\",       \"PRS\",  \"PRS\"},\n-        new String[] {\"Beke\",        \"PK\",   \"PK\"},\n-        new String[] {\"Belcher\",     \"PLXR\", \"PLKR\"},\n-        new String[] {\"Benjamin\",    \"PNJM\", \"PNJM\"},\n-        new String[] {\"Benningham\",  \"PNNK\", \"PNNK\"},\n-        new String[] {\"Bereford\",    \"PRFR\", \"PRFR\"},\n-        new String[] {\"Bergen\",      \"PRJN\", \"PRKN\"},\n-        new String[] {\"Berkeley\",    \"PRKL\", \"PRKL\"},\n-        new String[] {\"Berry\",       \"PR\",   \"PR\"},\n-        new String[] {\"Besse\",       \"PS\",   \"PS\"},\n-        new String[] {\"Bessey\",      \"PS\",   \"PS\"},\n-        new String[] {\"Bessiles\",    \"PSLS\", \"PSLS\"},\n-        new String[] {\"Bigelow\",     \"PJL\",  \"PKLF\"},\n-        new String[] {\"Bigg\",        \"PK\",   \"PK\"},\n-        new String[] {\"Bigod\",       \"PKT\",  \"PKT\"},\n-        new String[] {\"Billings\",    \"PLNK\", \"PLNK\"},\n-        new String[] {\"Bimper\",      \"PMPR\", \"PMPR\"},\n-        new String[] {\"Binker\",      \"PNKR\", \"PNKR\"},\n-        new String[] {\"Birdsill\",    \"PRTS\", \"PRTS\"},\n-        new String[] {\"Bishop\",      \"PXP\",  \"PXP\"},\n-        new String[] {\"Black\",       \"PLK\",  \"PLK\"},\n-        new String[] {\"Blagge\",      \"PLK\",  \"PLK\"},\n-        new String[] {\"Blake\",       \"PLK\",  \"PLK\"},\n-        new String[] {\"Blanck\",      \"PLNK\", \"PLNK\"},\n-        new String[] {\"Bledsoe\",     \"PLTS\", \"PLTS\"},\n-        new String[] {\"Blennerhasset\",\"PLNR\", \"PLNR\"},\n-        new String[] {\"Blessing\",    \"PLSN\", \"PLSN\"},\n-        new String[] {\"Blewett\",     \"PLT\",  \"PLT\"},\n-        new String[] {\"Bloctgoed\",   \"PLKT\", \"PLKT\"},\n-        new String[] {\"Bloetgoet\",   \"PLTK\", \"PLTK\"},\n-        new String[] {\"Bloodgood\",   \"PLTK\", \"PLTK\"},\n-        new String[] {\"Blossom\",     \"PLSM\", \"PLSM\"},\n-        new String[] {\"Blount\",      \"PLNT\", \"PLNT\"},\n-        new String[] {\"Bodine\",      \"PTN\",  \"PTN\"},\n-        new String[] {\"Bodman\",      \"PTMN\", \"PTMN\"},\n-        new String[] {\"BonCoeur\",    \"PNKR\", \"PNKR\"},\n-        new String[] {\"Bond\",        \"PNT\",  \"PNT\"},\n-        new String[] {\"Boscawen\",    \"PSKN\", \"PSKN\"},\n-        new String[] {\"Bosworth\",    \"PSR0\", \"PSRT\"},\n-        new String[] {\"Bouchier\",    \"PX\",   \"PKR\"},\n-        new String[] {\"Bowne\",       \"PN\",   \"PN\"},\n-        new String[] {\"Bradbury\",    \"PRTP\", \"PRTP\"},\n-        new String[] {\"Bradder\",     \"PRTR\", \"PRTR\"},\n-        new String[] {\"Bradford\",    \"PRTF\", \"PRTF\"},\n-        new String[] {\"Bradstreet\",  \"PRTS\", \"PRTS\"},\n-        new String[] {\"Braham\",      \"PRHM\", \"PRHM\"},\n-        new String[] {\"Brailsford\",  \"PRLS\", \"PRLS\"},\n-        new String[] {\"Brainard\",    \"PRNR\", \"PRNR\"},\n-        new String[] {\"Brandish\",    \"PRNT\", \"PRNT\"},\n-        new String[] {\"Braun\",       \"PRN\",  \"PRN\"},\n-        new String[] {\"Brecc\",       \"PRK\",  \"PRK\"},\n-        new String[] {\"Brent\",       \"PRNT\", \"PRNT\"},\n-        new String[] {\"Brenton\",     \"PRNT\", \"PRNT\"},\n-        new String[] {\"Briggs\",      \"PRKS\", \"PRKS\"},\n-        new String[] {\"Brigham\",     \"PRM\",  \"PRM\"},\n-        new String[] {\"Brobst\",      \"PRPS\", \"PRPS\"},\n-        new String[] {\"Brome\",       \"PRM\",  \"PRM\"},\n-        new String[] {\"Bronson\",     \"PRNS\", \"PRNS\"},\n-        new String[] {\"Brooks\",      \"PRKS\", \"PRKS\"},\n-        new String[] {\"Brouillard\",  \"PRLR\", \"PRLR\"},\n-        new String[] {\"Brown\",       \"PRN\",  \"PRN\"},\n-        new String[] {\"Browne\",      \"PRN\",  \"PRN\"},\n-        new String[] {\"Brownell\",    \"PRNL\", \"PRNL\"},\n-        new String[] {\"Bruley\",      \"PRL\",  \"PRL\"},\n-        new String[] {\"Bryant\",      \"PRNT\", \"PRNT\"},\n-        new String[] {\"Brzozowski\",  \"PRSS\", \"PRTS\"},\n-        new String[] {\"Buide\",       \"PT\",   \"PT\"},\n-        new String[] {\"Bulmer\",      \"PLMR\", \"PLMR\"},\n-        new String[] {\"Bunker\",      \"PNKR\", \"PNKR\"},\n-        new String[] {\"Burden\",      \"PRTN\", \"PRTN\"},\n-        new String[] {\"Burge\",       \"PRJ\",  \"PRK\"},\n-        new String[] {\"Burgoyne\",    \"PRKN\", \"PRKN\"},\n-        new String[] {\"Burke\",       \"PRK\",  \"PRK\"},\n-        new String[] {\"Burnett\",     \"PRNT\", \"PRNT\"},\n-        new String[] {\"Burpee\",      \"PRP\",  \"PRP\"},\n-        new String[] {\"Bursley\",     \"PRSL\", \"PRSL\"},\n-        new String[] {\"Burton\",      \"PRTN\", \"PRTN\"},\n-        new String[] {\"Bushnell\",    \"PXNL\", \"PXNL\"},\n-        new String[] {\"Buss\",        \"PS\",   \"PS\"},\n-        new String[] {\"Buswell\",     \"PSL\",  \"PSL\"},\n-        new String[] {\"Butler\",      \"PTLR\", \"PTLR\"},\n-        new String[] {\"Calkin\",      \"KLKN\", \"KLKN\"},\n-        new String[] {\"Canada\",      \"KNT\",  \"KNT\"},\n-        new String[] {\"Canmore\",     \"KNMR\", \"KNMR\"},\n-        new String[] {\"Canney\",      \"KN\",   \"KN\"},\n-        new String[] {\"Capet\",       \"KPT\",  \"KPT\"},\n-        new String[] {\"Card\",        \"KRT\",  \"KRT\"},\n-        new String[] {\"Carman\",      \"KRMN\", \"KRMN\"},\n-        new String[] {\"Carpenter\",   \"KRPN\", \"KRPN\"},\n-        new String[] {\"Cartwright\",  \"KRTR\", \"KRTR\"},\n-        new String[] {\"Casey\",       \"KS\",   \"KS\"},\n-        new String[] {\"Catterfield\", \"KTRF\", \"KTRF\"},\n-        new String[] {\"Ceeley\",      \"SL\",   \"SL\"},\n-        new String[] {\"Chambers\",    \"XMPR\", \"XMPR\"},\n-        new String[] {\"Champion\",    \"XMPN\", \"XMPN\"},\n-        new String[] {\"Chapman\",     \"XPMN\", \"XPMN\"},\n-        new String[] {\"Chase\",       \"XS\",   \"XS\"},\n-        new String[] {\"Cheney\",      \"XN\",   \"XN\"},\n-        new String[] {\"Chetwynd\",    \"XTNT\", \"XTNT\"},\n-        new String[] {\"Chevalier\",   \"XFL\",  \"XFLR\"},\n-        new String[] {\"Chillingsworth\",\"XLNK\", \"XLNK\"},\n-        new String[] {\"Christie\",    \"KRST\", \"KRST\"},\n-        new String[] {\"Chubbuck\",    \"XPK\",  \"XPK\"},\n-        new String[] {\"Church\",      \"XRX\",  \"XRK\"},\n-        new String[] {\"Clark\",       \"KLRK\", \"KLRK\"},\n-        new String[] {\"Clarke\",      \"KLRK\", \"KLRK\"},\n-        new String[] {\"Cleare\",      \"KLR\",  \"KLR\"},\n-        new String[] {\"Clement\",     \"KLMN\", \"KLMN\"},\n-        new String[] {\"Clerke\",      \"KLRK\", \"KLRK\"},\n-        new String[] {\"Clibben\",     \"KLPN\", \"KLPN\"},\n-        new String[] {\"Clifford\",    \"KLFR\", \"KLFR\"},\n-        new String[] {\"Clivedon\",    \"KLFT\", \"KLFT\"},\n-        new String[] {\"Close\",       \"KLS\",  \"KLS\"},\n-        new String[] {\"Clothilde\",   \"KL0L\", \"KLTL\"},\n-        new String[] {\"Cobb\",        \"KP\",   \"KP\"},\n-        new String[] {\"Coburn\",      \"KPRN\", \"KPRN\"},\n-        new String[] {\"Coburne\",     \"KPRN\", \"KPRN\"},\n-        new String[] {\"Cocke\",       \"KK\",   \"KK\"},\n-        new String[] {\"Coffin\",      \"KFN\",  \"KFN\"},\n-        new String[] {\"Coffyn\",      \"KFN\",  \"KFN\"},\n-        new String[] {\"Colborne\",    \"KLPR\", \"KLPR\"},\n-        new String[] {\"Colby\",       \"KLP\",  \"KLP\"},\n-        new String[] {\"Cole\",        \"KL\",   \"KL\"},\n-        new String[] {\"Coleman\",     \"KLMN\", \"KLMN\"},\n-        new String[] {\"Collier\",     \"KL\",   \"KLR\"},\n-        new String[] {\"Compton\",     \"KMPT\", \"KMPT\"},\n-        new String[] {\"Cone\",        \"KN\",   \"KN\"},\n-        new String[] {\"Cook\",        \"KK\",   \"KK\"},\n-        new String[] {\"Cooke\",       \"KK\",   \"KK\"},\n-        new String[] {\"Cooper\",      \"KPR\",  \"KPR\"},\n-        new String[] {\"Copperthwaite\",\"KPR0\", \"KPRT\"},\n-        new String[] {\"Corbet\",      \"KRPT\", \"KRPT\"},\n-        new String[] {\"Corell\",      \"KRL\",  \"KRL\"},\n-        new String[] {\"Corey\",       \"KR\",   \"KR\"},\n-        new String[] {\"Corlies\",     \"KRLS\", \"KRLS\"},\n-        new String[] {\"Corneliszen\", \"KRNL\", \"KRNL\"},\n-        new String[] {\"Cornelius\",   \"KRNL\", \"KRNL\"},\n-        new String[] {\"Cornwallis\",  \"KRNL\", \"KRNL\"},\n-        new String[] {\"Cosgrove\",    \"KSKR\", \"KSKR\"},\n-        new String[] {\"Count of Brionne\",\"KNTF\", \"KNTF\"},\n-        new String[] {\"Covill\",      \"KFL\",  \"KFL\"},\n-        new String[] {\"Cowperthwaite\",\"KPR0\", \"KPRT\"},\n-        new String[] {\"Cowperwaite\", \"KPRT\", \"KPRT\"},\n-        new String[] {\"Crane\",       \"KRN\",  \"KRN\"},\n-        new String[] {\"Creagmile\",   \"KRKM\", \"KRKM\"},\n-        new String[] {\"Crew\",        \"KR\",   \"KRF\"},\n-        new String[] {\"Crispin\",     \"KRSP\", \"KRSP\"},\n-        new String[] {\"Crocker\",     \"KRKR\", \"KRKR\"},\n-        new String[] {\"Crockett\",    \"KRKT\", \"KRKT\"},\n-        new String[] {\"Crosby\",      \"KRSP\", \"KRSP\"},\n-        new String[] {\"Crump\",       \"KRMP\", \"KRMP\"},\n-        new String[] {\"Cunningham\",  \"KNNK\", \"KNNK\"},\n-        new String[] {\"Curtis\",      \"KRTS\", \"KRTS\"},\n-        new String[] {\"Cutha\",       \"K0\",   \"KT\"},\n-        new String[] {\"Cutter\",      \"KTR\",  \"KTR\"},\n-        new String[] {\"D'Aubigny\",   \"TPN\",  \"TPKN\"},\n-        new String[] {\"DAVIS\",       \"TFS\",  \"TFS\"},\n-        new String[] {\"Dabinott\",    \"TPNT\", \"TPNT\"},\n-        new String[] {\"Dacre\",       \"TKR\",  \"TKR\"},\n-        new String[] {\"Daggett\",     \"TKT\",  \"TKT\"},\n-        new String[] {\"Danvers\",     \"TNFR\", \"TNFR\"},\n-        new String[] {\"Darcy\",       \"TRS\",  \"TRS\"},\n-        new String[] {\"Davis\",       \"TFS\",  \"TFS\"},\n-        new String[] {\"Dawn\",        \"TN\",   \"TN\"},\n-        new String[] {\"Dawson\",      \"TSN\",  \"TSN\"},\n-        new String[] {\"Day\",         \"T\",    \"T\"},\n-        new String[] {\"Daye\",        \"T\",    \"T\"},\n-        new String[] {\"DeGrenier\",   \"TKRN\", \"TKRN\"},\n-        new String[] {\"Dean\",        \"TN\",   \"TN\"},\n-        new String[] {\"Deekindaugh\", \"TKNT\", \"TKNT\"},\n-        new String[] {\"Dennis\",      \"TNS\",  \"TNS\"},\n-        new String[] {\"Denny\",       \"TN\",   \"TN\"},\n-        new String[] {\"Denton\",      \"TNTN\", \"TNTN\"},\n-        new String[] {\"Desborough\",  \"TSPR\", \"TSPR\"},\n-        new String[] {\"Despenser\",   \"TSPN\", \"TSPN\"},\n-        new String[] {\"Deverill\",    \"TFRL\", \"TFRL\"},\n-        new String[] {\"Devine\",      \"TFN\",  \"TFN\"},\n-        new String[] {\"Dexter\",      \"TKST\", \"TKST\"},\n-        new String[] {\"Dillaway\",    \"TL\",   \"TL\"},\n-        new String[] {\"Dimmick\",     \"TMK\",  \"TMK\"},\n-        new String[] {\"Dinan\",       \"TNN\",  \"TNN\"},\n-        new String[] {\"Dix\",         \"TKS\",  \"TKS\"},\n-        new String[] {\"Doggett\",     \"TKT\",  \"TKT\"},\n-        new String[] {\"Donahue\",     \"TNH\",  \"TNH\"},\n-        new String[] {\"Dorfman\",     \"TRFM\", \"TRFM\"},\n-        new String[] {\"Dorris\",      \"TRS\",  \"TRS\"},\n-        new String[] {\"Dow\",         \"T\",    \"TF\"},\n-        new String[] {\"Downey\",      \"TN\",   \"TN\"},\n-        new String[] {\"Downing\",     \"TNNK\", \"TNNK\"},\n-        new String[] {\"Dowsett\",     \"TST\",  \"TST\"},\n-        new String[] {\"Duck?\",       \"TK\",   \"TK\"},\n-        new String[] {\"Dudley\",      \"TTL\",  \"TTL\"},\n-        new String[] {\"Duffy\",       \"TF\",   \"TF\"},\n-        new String[] {\"Dunn\",        \"TN\",   \"TN\"},\n-        new String[] {\"Dunsterville\",\"TNST\", \"TNST\"},\n-        new String[] {\"Durrant\",     \"TRNT\", \"TRNT\"},\n-        new String[] {\"Durrin\",      \"TRN\",  \"TRN\"},\n-        new String[] {\"Dustin\",      \"TSTN\", \"TSTN\"},\n-        new String[] {\"Duston\",      \"TSTN\", \"TSTN\"},\n-        new String[] {\"Eames\",       \"AMS\",  \"AMS\"},\n-        new String[] {\"Early\",       \"ARL\",  \"ARL\"},\n-        new String[] {\"Easty\",       \"AST\",  \"AST\"},\n-        new String[] {\"Ebbett\",      \"APT\",  \"APT\"},\n-        new String[] {\"Eberbach\",    \"APRP\", \"APRP\"},\n-        new String[] {\"Eberhard\",    \"APRR\", \"APRR\"},\n-        new String[] {\"Eddy\",        \"AT\",   \"AT\"},\n-        new String[] {\"Edenden\",     \"ATNT\", \"ATNT\"},\n-        new String[] {\"Edwards\",     \"ATRT\", \"ATRT\"},\n-        new String[] {\"Eglinton\",    \"AKLN\", \"ALNT\"},\n-        new String[] {\"Eliot\",       \"ALT\",  \"ALT\"},\n-        new String[] {\"Elizabeth\",   \"ALSP\", \"ALSP\"},\n-        new String[] {\"Ellis\",       \"ALS\",  \"ALS\"},\n-        new String[] {\"Ellison\",     \"ALSN\", \"ALSN\"},\n-        new String[] {\"Ellot\",       \"ALT\",  \"ALT\"},\n-        new String[] {\"Elny\",        \"ALN\",  \"ALN\"},\n-        new String[] {\"Elsner\",      \"ALSN\", \"ALSN\"},\n-        new String[] {\"Emerson\",     \"AMRS\", \"AMRS\"},\n-        new String[] {\"Empson\",      \"AMPS\", \"AMPS\"},\n-        new String[] {\"Est\",         \"AST\",  \"AST\"},\n-        new String[] {\"Estabrook\",   \"ASTP\", \"ASTP\"},\n-        new String[] {\"Estes\",       \"ASTS\", \"ASTS\"},\n-        new String[] {\"Estey\",       \"AST\",  \"AST\"},\n-        new String[] {\"Evans\",       \"AFNS\", \"AFNS\"},\n-        new String[] {\"Fallowell\",   \"FLL\",  \"FLL\"},\n-        new String[] {\"Farnsworth\",  \"FRNS\", \"FRNS\"},\n-        new String[] {\"Feake\",       \"FK\",   \"FK\"},\n-        new String[] {\"Feke\",        \"FK\",   \"FK\"},\n-        new String[] {\"Fellows\",     \"FLS\",  \"FLS\"},\n-        new String[] {\"Fettiplace\",  \"FTPL\", \"FTPL\"},\n-        new String[] {\"Finney\",      \"FN\",   \"FN\"},\n-        new String[] {\"Fischer\",     \"FXR\",  \"FSKR\"},\n-        new String[] {\"Fisher\",      \"FXR\",  \"FXR\"},\n-        new String[] {\"Fisk\",        \"FSK\",  \"FSK\"},\n-        new String[] {\"Fiske\",       \"FSK\",  \"FSK\"},\n-        new String[] {\"Fletcher\",    \"FLXR\", \"FLXR\"},\n-        new String[] {\"Folger\",      \"FLKR\", \"FLJR\"},\n-        new String[] {\"Foliot\",      \"FLT\",  \"FLT\"},\n-        new String[] {\"Folyot\",      \"FLT\",  \"FLT\"},\n-        new String[] {\"Fones\",       \"FNS\",  \"FNS\"},\n-        new String[] {\"Fordham\",     \"FRTM\", \"FRTM\"},\n-        new String[] {\"Forstner\",    \"FRST\", \"FRST\"},\n-        new String[] {\"Fosten\",      \"FSTN\", \"FSTN\"},\n-        new String[] {\"Foster\",      \"FSTR\", \"FSTR\"},\n-        new String[] {\"Foulke\",      \"FLK\",  \"FLK\"},\n-        new String[] {\"Fowler\",      \"FLR\",  \"FLR\"},\n-        new String[] {\"Foxwell\",     \"FKSL\", \"FKSL\"},\n-        new String[] {\"Fraley\",      \"FRL\",  \"FRL\"},\n-        new String[] {\"Franceys\",    \"FRNS\", \"FRNS\"},\n-        new String[] {\"Franke\",      \"FRNK\", \"FRNK\"},\n-        new String[] {\"Frascella\",   \"FRSL\", \"FRSL\"},\n-        new String[] {\"Frazer\",      \"FRSR\", \"FRSR\"},\n-        new String[] {\"Fredd\",       \"FRT\",  \"FRT\"},\n-        new String[] {\"Freeman\",     \"FRMN\", \"FRMN\"},\n-        new String[] {\"French\",      \"FRNX\", \"FRNK\"},\n-        new String[] {\"Freville\",    \"FRFL\", \"FRFL\"},\n-        new String[] {\"Frey\",        \"FR\",   \"FR\"},\n-        new String[] {\"Frick\",       \"FRK\",  \"FRK\"},\n-        new String[] {\"Frier\",       \"FR\",   \"FRR\"},\n-        new String[] {\"Froe\",        \"FR\",   \"FR\"},\n-        new String[] {\"Frorer\",      \"FRRR\", \"FRRR\"},\n-        new String[] {\"Frost\",       \"FRST\", \"FRST\"},\n-        new String[] {\"Frothingham\", \"FR0N\", \"FRTN\"},\n-        new String[] {\"Fry\",         \"FR\",   \"FR\"},\n-        new String[] {\"Gaffney\",     \"KFN\",  \"KFN\"},\n-        new String[] {\"Gage\",        \"KJ\",   \"KK\"},\n-        new String[] {\"Gallion\",     \"KLN\",  \"KLN\"},\n-        new String[] {\"Gallishan\",   \"KLXN\", \"KLXN\"},\n-        new String[] {\"Gamble\",      \"KMPL\", \"KMPL\"},\n-        new String[] {\"Garbrand\",    \"KRPR\", \"KRPR\"},\n-        new String[] {\"Gardner\",     \"KRTN\", \"KRTN\"},\n-        new String[] {\"Garrett\",     \"KRT\",  \"KRT\"},\n-        new String[] {\"Gassner\",     \"KSNR\", \"KSNR\"},\n-        new String[] {\"Gater\",       \"KTR\",  \"KTR\"},\n-        new String[] {\"Gaunt\",       \"KNT\",  \"KNT\"},\n-        new String[] {\"Gayer\",       \"KR\",   \"KR\"},\n-        new String[] {\"Gerken\",      \"KRKN\", \"JRKN\"},\n-        new String[] {\"Gerritsen\",   \"KRTS\", \"JRTS\"},\n-        new String[] {\"Gibbs\",       \"KPS\",  \"JPS\"},\n-        new String[] {\"Giffard\",     \"JFRT\", \"KFRT\"},\n-        new String[] {\"Gilbert\",     \"KLPR\", \"JLPR\"},\n-        new String[] {\"Gill\",        \"KL\",   \"JL\"},\n-        new String[] {\"Gilman\",      \"KLMN\", \"JLMN\"},\n-        new String[] {\"Glass\",       \"KLS\",  \"KLS\"},\n-        new String[] {\"Goddard\\\\Gifford\",\"KTRT\", \"KTRT\"},\n-        new String[] {\"Godfrey\",     \"KTFR\", \"KTFR\"},\n-        new String[] {\"Godwin\",      \"KTN\",  \"KTN\"},\n-        new String[] {\"Goodale\",     \"KTL\",  \"KTL\"},\n-        new String[] {\"Goodnow\",     \"KTN\",  \"KTNF\"},\n-        new String[] {\"Gorham\",      \"KRM\",  \"KRM\"},\n-        new String[] {\"Goseline\",    \"KSLN\", \"KSLN\"},\n-        new String[] {\"Gott\",        \"KT\",   \"KT\"},\n-        new String[] {\"Gould\",       \"KLT\",  \"KLT\"},\n-        new String[] {\"Grafton\",     \"KRFT\", \"KRFT\"},\n-        new String[] {\"Grant\",       \"KRNT\", \"KRNT\"},\n-        new String[] {\"Gray\",        \"KR\",   \"KR\"},\n-        new String[] {\"Green\",       \"KRN\",  \"KRN\"},\n-        new String[] {\"Griffin\",     \"KRFN\", \"KRFN\"},\n-        new String[] {\"Grill\",       \"KRL\",  \"KRL\"},\n-        new String[] {\"Grim\",        \"KRM\",  \"KRM\"},\n-        new String[] {\"Grisgonelle\", \"KRSK\", \"KRSK\"},\n-        new String[] {\"Gross\",       \"KRS\",  \"KRS\"},\n-        new String[] {\"Guba\",        \"KP\",   \"KP\"},\n-        new String[] {\"Gybbes\",      \"KPS\",  \"JPS\"},\n-        new String[] {\"Haburne\",     \"HPRN\", \"HPRN\"},\n-        new String[] {\"Hackburne\",   \"HKPR\", \"HKPR\"},\n-        new String[] {\"Haddon?\",     \"HTN\",  \"HTN\"},\n-        new String[] {\"Haines\",      \"HNS\",  \"HNS\"},\n-        new String[] {\"Hale\",        \"HL\",   \"HL\"},\n-        new String[] {\"Hall\",        \"HL\",   \"HL\"},\n-        new String[] {\"Hallet\",      \"HLT\",  \"HLT\"},\n-        new String[] {\"Hallock\",     \"HLK\",  \"HLK\"},\n-        new String[] {\"Halstead\",    \"HLST\", \"HLST\"},\n-        new String[] {\"Hammond\",     \"HMNT\", \"HMNT\"},\n-        new String[] {\"Hance\",       \"HNS\",  \"HNS\"},\n-        new String[] {\"Handy\",       \"HNT\",  \"HNT\"},\n-        new String[] {\"Hanson\",      \"HNSN\", \"HNSN\"},\n-        new String[] {\"Harasek\",     \"HRSK\", \"HRSK\"},\n-        new String[] {\"Harcourt\",    \"HRKR\", \"HRKR\"},\n-        new String[] {\"Hardy\",       \"HRT\",  \"HRT\"},\n-        new String[] {\"Harlock\",     \"HRLK\", \"HRLK\"},\n-        new String[] {\"Harris\",      \"HRS\",  \"HRS\"},\n-        new String[] {\"Hartley\",     \"HRTL\", \"HRTL\"},\n-        new String[] {\"Harvey\",      \"HRF\",  \"HRF\"},\n-        new String[] {\"Harvie\",      \"HRF\",  \"HRF\"},\n-        new String[] {\"Harwood\",     \"HRT\",  \"HRT\"},\n-        new String[] {\"Hathaway\",    \"H0\",   \"HT\"},\n-        new String[] {\"Haukeness\",   \"HKNS\", \"HKNS\"},\n-        new String[] {\"Hawkes\",      \"HKS\",  \"HKS\"},\n-        new String[] {\"Hawkhurst\",   \"HKRS\", \"HKRS\"},\n-        new String[] {\"Hawkins\",     \"HKNS\", \"HKNS\"},\n-        new String[] {\"Hawley\",      \"HL\",   \"HL\"},\n-        new String[] {\"Heald\",       \"HLT\",  \"HLT\"},\n-        new String[] {\"Helsdon\",     \"HLST\", \"HLST\"},\n-        new String[] {\"Hemenway\",    \"HMN\",  \"HMN\"},\n-        new String[] {\"Hemmenway\",   \"HMN\",  \"HMN\"},\n-        new String[] {\"Henck\",       \"HNK\",  \"HNK\"},\n-        new String[] {\"Henderson\",   \"HNTR\", \"HNTR\"},\n-        new String[] {\"Hendricks\",   \"HNTR\", \"HNTR\"},\n-        new String[] {\"Hersey\",      \"HRS\",  \"HRS\"},\n-        new String[] {\"Hewes\",       \"HS\",   \"HS\"},\n-        new String[] {\"Heyman\",      \"HMN\",  \"HMN\"},\n-        new String[] {\"Hicks\",       \"HKS\",  \"HKS\"},\n-        new String[] {\"Hidden\",      \"HTN\",  \"HTN\"},\n-        new String[] {\"Higgs\",       \"HKS\",  \"HKS\"},\n-        new String[] {\"Hill\",        \"HL\",   \"HL\"},\n-        new String[] {\"Hills\",       \"HLS\",  \"HLS\"},\n-        new String[] {\"Hinckley\",    \"HNKL\", \"HNKL\"},\n-        new String[] {\"Hipwell\",     \"HPL\",  \"HPL\"},\n-        new String[] {\"Hobart\",      \"HPRT\", \"HPRT\"},\n-        new String[] {\"Hoben\",       \"HPN\",  \"HPN\"},\n-        new String[] {\"Hoffmann\",    \"HFMN\", \"HFMN\"},\n-        new String[] {\"Hogan\",       \"HKN\",  \"HKN\"},\n-        new String[] {\"Holmes\",      \"HLMS\", \"HLMS\"},\n-        new String[] {\"Hoo\",         \"H\",    \"H\"},\n-        new String[] {\"Hooker\",      \"HKR\",  \"HKR\"},\n-        new String[] {\"Hopcott\",     \"HPKT\", \"HPKT\"},\n-        new String[] {\"Hopkins\",     \"HPKN\", \"HPKN\"},\n-        new String[] {\"Hopkinson\",   \"HPKN\", \"HPKN\"},\n-        new String[] {\"Hornsey\",     \"HRNS\", \"HRNS\"},\n-        new String[] {\"Houckgeest\",  \"HKJS\", \"HKKS\"},\n-        new String[] {\"Hough\",       \"H\",    \"H\"},\n-        new String[] {\"Houstin\",     \"HSTN\", \"HSTN\"},\n-        new String[] {\"How\",         \"H\",    \"HF\"},\n-        new String[] {\"Howe\",        \"H\",    \"H\"},\n-        new String[] {\"Howland\",     \"HLNT\", \"HLNT\"},\n-        new String[] {\"Hubner\",      \"HPNR\", \"HPNR\"},\n-        new String[] {\"Hudnut\",      \"HTNT\", \"HTNT\"},\n-        new String[] {\"Hughes\",      \"HS\",   \"HS\"},\n-        new String[] {\"Hull\",        \"HL\",   \"HL\"},\n-        new String[] {\"Hulme\",       \"HLM\",  \"HLM\"},\n-        new String[] {\"Hume\",        \"HM\",   \"HM\"},\n-        new String[] {\"Hundertumark\",\"HNTR\", \"HNTR\"},\n-        new String[] {\"Hundley\",     \"HNTL\", \"HNTL\"},\n-        new String[] {\"Hungerford\",  \"HNKR\", \"HNJR\"},\n-        new String[] {\"Hunt\",        \"HNT\",  \"HNT\"},\n-        new String[] {\"Hurst\",       \"HRST\", \"HRST\"},\n-        new String[] {\"Husbands\",    \"HSPN\", \"HSPN\"},\n-        new String[] {\"Hussey\",      \"HS\",   \"HS\"},\n-        new String[] {\"Husted\",      \"HSTT\", \"HSTT\"},\n-        new String[] {\"Hutchins\",    \"HXNS\", \"HXNS\"},\n-        new String[] {\"Hutchinson\",  \"HXNS\", \"HXNS\"},\n-        new String[] {\"Huttinger\",   \"HTNK\", \"HTNJ\"},\n-        new String[] {\"Huybertsen\",  \"HPRT\", \"HPRT\"},\n-        new String[] {\"Iddenden\",    \"ATNT\", \"ATNT\"},\n-        new String[] {\"Ingraham\",    \"ANKR\", \"ANKR\"},\n-        new String[] {\"Ives\",        \"AFS\",  \"AFS\"},\n-        new String[] {\"Jackson\",     \"JKSN\", \"AKSN\"},\n-        new String[] {\"Jacob\",       \"JKP\",  \"AKP\"},\n-        new String[] {\"Jans\",        \"JNS\",  \"ANS\"},\n-        new String[] {\"Jenkins\",     \"JNKN\", \"ANKN\"},\n-        new String[] {\"Jewett\",      \"JT\",   \"AT\"},\n-        new String[] {\"Jewitt\",      \"JT\",   \"AT\"},\n-        new String[] {\"Johnson\",     \"JNSN\", \"ANSN\"},\n-        new String[] {\"Jones\",       \"JNS\",  \"ANS\"},\n-        new String[] {\"Josephine\",   \"JSFN\", \"HSFN\"},\n-        new String[] {\"Judd\",        \"JT\",   \"AT\"},\n-        new String[] {\"June\",        \"JN\",   \"AN\"},\n-        new String[] {\"Kamarowska\",  \"KMRS\", \"KMRS\"},\n-        new String[] {\"Kay\",         \"K\",    \"K\"},\n-        new String[] {\"Kelley\",      \"KL\",   \"KL\"},\n-        new String[] {\"Kelly\",       \"KL\",   \"KL\"},\n-        new String[] {\"Keymber\",     \"KMPR\", \"KMPR\"},\n-        new String[] {\"Keynes\",      \"KNS\",  \"KNS\"},\n-        new String[] {\"Kilham\",      \"KLM\",  \"KLM\"},\n-        new String[] {\"Kim\",         \"KM\",   \"KM\"},\n-        new String[] {\"Kimball\",     \"KMPL\", \"KMPL\"},\n-        new String[] {\"King\",        \"KNK\",  \"KNK\"},\n-        new String[] {\"Kinsey\",      \"KNS\",  \"KNS\"},\n-        new String[] {\"Kirk\",        \"KRK\",  \"KRK\"},\n-        new String[] {\"Kirton\",      \"KRTN\", \"KRTN\"},\n-        new String[] {\"Kistler\",     \"KSTL\", \"KSTL\"},\n-        new String[] {\"Kitchen\",     \"KXN\",  \"KXN\"},\n-        new String[] {\"Kitson\",      \"KTSN\", \"KTSN\"},\n-        new String[] {\"Klett\",       \"KLT\",  \"KLT\"},\n-        new String[] {\"Kline\",       \"KLN\",  \"KLN\"},\n-        new String[] {\"Knapp\",       \"NP\",   \"NP\"},\n-        new String[] {\"Knight\",      \"NT\",   \"NT\"},\n-        new String[] {\"Knote\",       \"NT\",   \"NT\"},\n-        new String[] {\"Knott\",       \"NT\",   \"NT\"},\n-        new String[] {\"Knox\",        \"NKS\",  \"NKS\"},\n-        new String[] {\"Koeller\",     \"KLR\",  \"KLR\"},\n-        new String[] {\"La Pointe\",   \"LPNT\", \"LPNT\"},\n-        new String[] {\"LaPlante\",    \"LPLN\", \"LPLN\"},\n-        new String[] {\"Laimbeer\",    \"LMPR\", \"LMPR\"},\n-        new String[] {\"Lamb\",        \"LMP\",  \"LMP\"},\n-        new String[] {\"Lambertson\",  \"LMPR\", \"LMPR\"},\n-        new String[] {\"Lancto\",      \"LNKT\", \"LNKT\"},\n-        new String[] {\"Landry\",      \"LNTR\", \"LNTR\"},\n-        new String[] {\"Lane\",        \"LN\",   \"LN\"},\n-        new String[] {\"Langendyck\",  \"LNJN\", \"LNKN\"},\n-        new String[] {\"Langer\",      \"LNKR\", \"LNJR\"},\n-        new String[] {\"Langford\",    \"LNKF\", \"LNKF\"},\n-        new String[] {\"Lantersee\",   \"LNTR\", \"LNTR\"},\n-        new String[] {\"Laquer\",      \"LKR\",  \"LKR\"},\n-        new String[] {\"Larkin\",      \"LRKN\", \"LRKN\"},\n-        new String[] {\"Latham\",      \"LTM\",  \"LTM\"},\n-        new String[] {\"Lathrop\",     \"L0RP\", \"LTRP\"},\n-        new String[] {\"Lauter\",      \"LTR\",  \"LTR\"},\n-        new String[] {\"Lawrence\",    \"LRNS\", \"LRNS\"},\n-        new String[] {\"Leach\",       \"LK\",   \"LK\"},\n-        new String[] {\"Leager\",      \"LKR\",  \"LJR\"},\n-        new String[] {\"Learned\",     \"LRNT\", \"LRNT\"},\n-        new String[] {\"Leavitt\",     \"LFT\",  \"LFT\"},\n-        new String[] {\"Lee\",         \"L\",    \"L\"},\n-        new String[] {\"Leete\",       \"LT\",   \"LT\"},\n-        new String[] {\"Leggett\",     \"LKT\",  \"LKT\"},\n-        new String[] {\"Leland\",      \"LLNT\", \"LLNT\"},\n-        new String[] {\"Leonard\",     \"LNRT\", \"LNRT\"},\n-        new String[] {\"Lester\",      \"LSTR\", \"LSTR\"},\n-        new String[] {\"Lestrange\",   \"LSTR\", \"LSTR\"},\n-        new String[] {\"Lethem\",      \"L0M\",  \"LTM\"},\n-        new String[] {\"Levine\",      \"LFN\",  \"LFN\"},\n-        new String[] {\"Lewes\",       \"LS\",   \"LS\"},\n-        new String[] {\"Lewis\",       \"LS\",   \"LS\"},\n-        new String[] {\"Lincoln\",     \"LNKL\", \"LNKL\"},\n-        new String[] {\"Lindsey\",     \"LNTS\", \"LNTS\"},\n-        new String[] {\"Linher\",      \"LNR\",  \"LNR\"},\n-        new String[] {\"Lippet\",      \"LPT\",  \"LPT\"},\n-        new String[] {\"Lippincott\",  \"LPNK\", \"LPNK\"},\n-        new String[] {\"Lockwood\",    \"LKT\",  \"LKT\"},\n-        new String[] {\"Loines\",      \"LNS\",  \"LNS\"},\n-        new String[] {\"Lombard\",     \"LMPR\", \"LMPR\"},\n-        new String[] {\"Long\",        \"LNK\",  \"LNK\"},\n-        new String[] {\"Longespee\",   \"LNJS\", \"LNKS\"},\n-        new String[] {\"Look\",        \"LK\",   \"LK\"},\n-        new String[] {\"Lounsberry\",  \"LNSP\", \"LNSP\"},\n-        new String[] {\"Lounsbury\",   \"LNSP\", \"LNSP\"},\n-        new String[] {\"Louthe\",      \"L0\",   \"LT\"},\n-        new String[] {\"Loveyne\",     \"LFN\",  \"LFN\"},\n-        new String[] {\"Lowe\",        \"L\",    \"L\"},\n-        new String[] {\"Ludlam\",      \"LTLM\", \"LTLM\"},\n-        new String[] {\"Lumbard\",     \"LMPR\", \"LMPR\"},\n-        new String[] {\"Lund\",        \"LNT\",  \"LNT\"},\n-        new String[] {\"Luno\",        \"LN\",   \"LN\"},\n-        new String[] {\"Lutz\",        \"LTS\",  \"LTS\"},\n-        new String[] {\"Lydia\",       \"LT\",   \"LT\"},\n-        new String[] {\"Lynne\",       \"LN\",   \"LN\"},\n-        new String[] {\"Lyon\",        \"LN\",   \"LN\"},\n-        new String[] {\"MacAlpin\",    \"MKLP\", \"MKLP\"},\n-        new String[] {\"MacBricc\",    \"MKPR\", \"MKPR\"},\n-        new String[] {\"MacCrinan\",   \"MKRN\", \"MKRN\"},\n-        new String[] {\"MacKenneth\",  \"MKN0\", \"MKNT\"},\n-        new String[] {\"MacMael nam Bo\",\"MKML\", \"MKML\"},\n-        new String[] {\"MacMurchada\", \"MKMR\", \"MKMR\"},\n-        new String[] {\"Macomber\",    \"MKMP\", \"MKMP\"},\n-        new String[] {\"Macy\",        \"MS\",   \"MS\"},\n-        new String[] {\"Magnus\",      \"MNS\",  \"MKNS\"},\n-        new String[] {\"Mahien\",      \"MHN\",  \"MHN\"},\n-        new String[] {\"Malmains\",    \"MLMN\", \"MLMN\"},\n-        new String[] {\"Malory\",      \"MLR\",  \"MLR\"},\n-        new String[] {\"Mancinelli\",  \"MNSN\", \"MNSN\"},\n-        new String[] {\"Mancini\",     \"MNSN\", \"MNSN\"},\n-        new String[] {\"Mann\",        \"MN\",   \"MN\"},\n-        new String[] {\"Manning\",     \"MNNK\", \"MNNK\"},\n-        new String[] {\"Manter\",      \"MNTR\", \"MNTR\"},\n-        new String[] {\"Marion\",      \"MRN\",  \"MRN\"},\n-        new String[] {\"Marley\",      \"MRL\",  \"MRL\"},\n-        new String[] {\"Marmion\",     \"MRMN\", \"MRMN\"},\n-        new String[] {\"Marquart\",    \"MRKR\", \"MRKR\"},\n-        new String[] {\"Marsh\",       \"MRX\",  \"MRX\"},\n-        new String[] {\"Marshal\",     \"MRXL\", \"MRXL\"},\n-        new String[] {\"Marshall\",    \"MRXL\", \"MRXL\"},\n-        new String[] {\"Martel\",      \"MRTL\", \"MRTL\"},\n-        new String[] {\"Martha\",      \"MR0\",  \"MRT\"},\n-        new String[] {\"Martin\",      \"MRTN\", \"MRTN\"},\n-        new String[] {\"Marturano\",   \"MRTR\", \"MRTR\"},\n-        new String[] {\"Marvin\",      \"MRFN\", \"MRFN\"},\n-        new String[] {\"Mary\",        \"MR\",   \"MR\"},\n-        new String[] {\"Mason\",       \"MSN\",  \"MSN\"},\n-        new String[] {\"Maxwell\",     \"MKSL\", \"MKSL\"},\n-        new String[] {\"Mayhew\",      \"MH\",   \"MHF\"},\n-        new String[] {\"McAllaster\",  \"MKLS\", \"MKLS\"},\n-        new String[] {\"McAllister\",  \"MKLS\", \"MKLS\"},\n-        new String[] {\"McConnell\",   \"MKNL\", \"MKNL\"},\n-        new String[] {\"McFarland\",   \"MKFR\", \"MKFR\"},\n-        new String[] {\"McIlroy\",     \"MSLR\", \"MSLR\"},\n-        new String[] {\"McNair\",      \"MKNR\", \"MKNR\"},\n-        new String[] {\"McNair-Landry\",\"MKNR\", \"MKNR\"},\n-        new String[] {\"McRaven\",     \"MKRF\", \"MKRF\"},\n-        new String[] {\"Mead\",        \"MT\",   \"MT\"},\n-        new String[] {\"Meade\",       \"MT\",   \"MT\"},\n-        new String[] {\"Meck\",        \"MK\",   \"MK\"},\n-        new String[] {\"Melton\",      \"MLTN\", \"MLTN\"},\n-        new String[] {\"Mendenhall\",  \"MNTN\", \"MNTN\"},\n-        new String[] {\"Mering\",      \"MRNK\", \"MRNK\"},\n-        new String[] {\"Merrick\",     \"MRK\",  \"MRK\"},\n-        new String[] {\"Merry\",       \"MR\",   \"MR\"},\n-        new String[] {\"Mighill\",     \"ML\",   \"ML\"},\n-        new String[] {\"Miller\",      \"MLR\",  \"MLR\"},\n-        new String[] {\"Milton\",      \"MLTN\", \"MLTN\"},\n-        new String[] {\"Mohun\",       \"MHN\",  \"MHN\"},\n-        new String[] {\"Montague\",    \"MNTK\", \"MNTK\"},\n-        new String[] {\"Montboucher\", \"MNTP\", \"MNTP\"},\n-        new String[] {\"Moore\",       \"MR\",   \"MR\"},\n-        new String[] {\"Morrel\",      \"MRL\",  \"MRL\"},\n-        new String[] {\"Morrill\",     \"MRL\",  \"MRL\"},\n-        new String[] {\"Morris\",      \"MRS\",  \"MRS\"},\n-        new String[] {\"Morton\",      \"MRTN\", \"MRTN\"},\n-        new String[] {\"Moton\",       \"MTN\",  \"MTN\"},\n-        new String[] {\"Muir\",        \"MR\",   \"MR\"},\n-        new String[] {\"Mulferd\",     \"MLFR\", \"MLFR\"},\n-        new String[] {\"Mullins\",     \"MLNS\", \"MLNS\"},\n-        new String[] {\"Mulso\",       \"MLS\",  \"MLS\"},\n-        new String[] {\"Munger\",      \"MNKR\", \"MNJR\"},\n-        new String[] {\"Munt\",        \"MNT\",  \"MNT\"},\n-        new String[] {\"Murchad\",     \"MRXT\", \"MRKT\"},\n-        new String[] {\"Murdock\",     \"MRTK\", \"MRTK\"},\n-        new String[] {\"Murray\",      \"MR\",   \"MR\"},\n-        new String[] {\"Muskett\",     \"MSKT\", \"MSKT\"},\n-        new String[] {\"Myers\",       \"MRS\",  \"MRS\"},\n-        new String[] {\"Myrick\",      \"MRK\",  \"MRK\"},\n-        new String[] {\"NORRIS\",      \"NRS\",  \"NRS\"},\n-        new String[] {\"Nayle\",       \"NL\",   \"NL\"},\n-        new String[] {\"Newcomb\",     \"NKMP\", \"NKMP\"},\n-        new String[] {\"Newcomb(e)\",  \"NKMP\", \"NKMP\"},\n-        new String[] {\"Newkirk\",     \"NKRK\", \"NKRK\"},\n-        new String[] {\"Newton\",      \"NTN\",  \"NTN\"},\n-        new String[] {\"Niles\",       \"NLS\",  \"NLS\"},\n-        new String[] {\"Noble\",       \"NPL\",  \"NPL\"},\n-        new String[] {\"Noel\",        \"NL\",   \"NL\"},\n-        new String[] {\"Northend\",    \"NR0N\", \"NRTN\"},\n-        new String[] {\"Norton\",      \"NRTN\", \"NRTN\"},\n-        new String[] {\"Nutter\",      \"NTR\",  \"NTR\"},\n-        new String[] {\"Odding\",      \"ATNK\", \"ATNK\"},\n-        new String[] {\"Odenbaugh\",   \"ATNP\", \"ATNP\"},\n-        new String[] {\"Ogborn\",      \"AKPR\", \"AKPR\"},\n-        new String[] {\"Oppenheimer\", \"APNM\", \"APNM\"},\n-        new String[] {\"Otis\",        \"ATS\",  \"ATS\"},\n-        new String[] {\"Oviatt\",      \"AFT\",  \"AFT\"},\n-        new String[] {\"PRUST?\",      \"PRST\", \"PRST\"},\n-        new String[] {\"Paddock\",     \"PTK\",  \"PTK\"},\n-        new String[] {\"Page\",        \"PJ\",   \"PK\"},\n-        new String[] {\"Paine\",       \"PN\",   \"PN\"},\n-        new String[] {\"Paist\",       \"PST\",  \"PST\"},\n-        new String[] {\"Palmer\",      \"PLMR\", \"PLMR\"},\n-        new String[] {\"Park\",        \"PRK\",  \"PRK\"},\n-        new String[] {\"Parker\",      \"PRKR\", \"PRKR\"},\n-        new String[] {\"Parkhurst\",   \"PRKR\", \"PRKR\"},\n-        new String[] {\"Parrat\",      \"PRT\",  \"PRT\"},\n-        new String[] {\"Parsons\",     \"PRSN\", \"PRSN\"},\n-        new String[] {\"Partridge\",   \"PRTR\", \"PRTR\"},\n-        new String[] {\"Pashley\",     \"PXL\",  \"PXL\"},\n-        new String[] {\"Pasley\",      \"PSL\",  \"PSL\"},\n-        new String[] {\"Patrick\",     \"PTRK\", \"PTRK\"},\n-        new String[] {\"Pattee\",      \"PT\",   \"PT\"},\n-        new String[] {\"Patten\",      \"PTN\",  \"PTN\"},\n-        new String[] {\"Pawley\",      \"PL\",   \"PL\"},\n-        new String[] {\"Payne\",       \"PN\",   \"PN\"},\n-        new String[] {\"Peabody\",     \"PPT\",  \"PPT\"},\n-        new String[] {\"Peake\",       \"PK\",   \"PK\"},\n-        new String[] {\"Pearson\",     \"PRSN\", \"PRSN\"},\n-        new String[] {\"Peat\",        \"PT\",   \"PT\"},\n-        new String[] {\"Pedersen\",    \"PTRS\", \"PTRS\"},\n-        new String[] {\"Percy\",       \"PRS\",  \"PRS\"},\n-        new String[] {\"Perkins\",     \"PRKN\", \"PRKN\"},\n-        new String[] {\"Perrine\",     \"PRN\",  \"PRN\"},\n-        new String[] {\"Perry\",       \"PR\",   \"PR\"},\n-        new String[] {\"Peson\",       \"PSN\",  \"PSN\"},\n-        new String[] {\"Peterson\",    \"PTRS\", \"PTRS\"},\n-        new String[] {\"Peyton\",      \"PTN\",  \"PTN\"},\n-        new String[] {\"Phinney\",     \"FN\",   \"FN\"},\n-        new String[] {\"Pickard\",     \"PKRT\", \"PKRT\"},\n-        new String[] {\"Pierce\",      \"PRS\",  \"PRS\"},\n-        new String[] {\"Pierrepont\",  \"PRPN\", \"PRPN\"},\n-        new String[] {\"Pike\",        \"PK\",   \"PK\"},\n-        new String[] {\"Pinkham\",     \"PNKM\", \"PNKM\"},\n-        new String[] {\"Pitman\",      \"PTMN\", \"PTMN\"},\n-        new String[] {\"Pitt\",        \"PT\",   \"PT\"},\n-        new String[] {\"Pitts\",       \"PTS\",  \"PTS\"},\n-        new String[] {\"Plantagenet\", \"PLNT\", \"PLNT\"},\n-        new String[] {\"Platt\",       \"PLT\",  \"PLT\"},\n-        new String[] {\"Platts\",      \"PLTS\", \"PLTS\"},\n-        new String[] {\"Pleis\",       \"PLS\",  \"PLS\"},\n-        new String[] {\"Pleiss\",      \"PLS\",  \"PLS\"},\n-        new String[] {\"Plisko\",      \"PLSK\", \"PLSK\"},\n-        new String[] {\"Pliskovitch\", \"PLSK\", \"PLSK\"},\n-        new String[] {\"Plum\",        \"PLM\",  \"PLM\"},\n-        new String[] {\"Plume\",       \"PLM\",  \"PLM\"},\n-        new String[] {\"Poitou\",      \"PT\",   \"PT\"},\n-        new String[] {\"Pomeroy\",     \"PMR\",  \"PMR\"},\n-        new String[] {\"Poretiers\",   \"PRTR\", \"PRTR\"},\n-        new String[] {\"Pote\",        \"PT\",   \"PT\"},\n-        new String[] {\"Potter\",      \"PTR\",  \"PTR\"},\n-        new String[] {\"Potts\",       \"PTS\",  \"PTS\"},\n-        new String[] {\"Powell\",      \"PL\",   \"PL\"},\n-        new String[] {\"Pratt\",       \"PRT\",  \"PRT\"},\n-        new String[] {\"Presbury\",    \"PRSP\", \"PRSP\"},\n-        new String[] {\"Priest\",      \"PRST\", \"PRST\"},\n-        new String[] {\"Prindle\",     \"PRNT\", \"PRNT\"},\n-        new String[] {\"Prior\",       \"PRR\",  \"PRR\"},\n-        new String[] {\"Profumo\",     \"PRFM\", \"PRFM\"},\n-        new String[] {\"Purdy\",       \"PRT\",  \"PRT\"},\n-        new String[] {\"Purefoy\",     \"PRF\",  \"PRF\"},\n-        new String[] {\"Pury\",        \"PR\",   \"PR\"},\n-        new String[] {\"Quinter\",     \"KNTR\", \"KNTR\"},\n-        new String[] {\"Rachel\",      \"RXL\",  \"RKL\"},\n-        new String[] {\"Rand\",        \"RNT\",  \"RNT\"},\n-        new String[] {\"Rankin\",      \"RNKN\", \"RNKN\"},\n-        new String[] {\"Ravenscroft\", \"RFNS\", \"RFNS\"},\n-        new String[] {\"Raynsford\",   \"RNSF\", \"RNSF\"},\n-        new String[] {\"Reakirt\",     \"RKRT\", \"RKRT\"},\n-        new String[] {\"Reaves\",      \"RFS\",  \"RFS\"},\n-        new String[] {\"Reeves\",      \"RFS\",  \"RFS\"},\n-        new String[] {\"Reichert\",    \"RXRT\", \"RKRT\"},\n-        new String[] {\"Remmele\",     \"RML\",  \"RML\"},\n-        new String[] {\"Reynolds\",    \"RNLT\", \"RNLT\"},\n-        new String[] {\"Rhodes\",      \"RTS\",  \"RTS\"},\n-        new String[] {\"Richards\",    \"RXRT\", \"RKRT\"},\n-        new String[] {\"Richardson\",  \"RXRT\", \"RKRT\"},\n-        new String[] {\"Ring\",        \"RNK\",  \"RNK\"},\n-        new String[] {\"Roberts\",     \"RPRT\", \"RPRT\"},\n-        new String[] {\"Robertson\",   \"RPRT\", \"RPRT\"},\n-        new String[] {\"Robson\",      \"RPSN\", \"RPSN\"},\n-        new String[] {\"Rodie\",       \"RT\",   \"RT\"},\n-        new String[] {\"Rody\",        \"RT\",   \"RT\"},\n-        new String[] {\"Rogers\",      \"RKRS\", \"RJRS\"},\n-        new String[] {\"Ross\",        \"RS\",   \"RS\"},\n-        new String[] {\"Rosslevin\",   \"RSLF\", \"RSLF\"},\n-        new String[] {\"Rowland\",     \"RLNT\", \"RLNT\"},\n-        new String[] {\"Ruehl\",       \"RL\",   \"RL\"},\n-        new String[] {\"Russell\",     \"RSL\",  \"RSL\"},\n-        new String[] {\"Ruth\",        \"R0\",   \"RT\"},\n-        new String[] {\"Ryan\",        \"RN\",   \"RN\"},\n-        new String[] {\"Rysse\",       \"RS\",   \"RS\"},\n-        new String[] {\"Sadler\",      \"STLR\", \"STLR\"},\n-        new String[] {\"Salmon\",      \"SLMN\", \"SLMN\"},\n-        new String[] {\"Salter\",      \"SLTR\", \"SLTR\"},\n-        new String[] {\"Salvatore\",   \"SLFT\", \"SLFT\"},\n-        new String[] {\"Sanders\",     \"SNTR\", \"SNTR\"},\n-        new String[] {\"Sands\",       \"SNTS\", \"SNTS\"},\n-        new String[] {\"Sanford\",     \"SNFR\", \"SNFR\"},\n-        new String[] {\"Sanger\",      \"SNKR\", \"SNJR\"},\n-        new String[] {\"Sargent\",     \"SRJN\", \"SRKN\"},\n-        new String[] {\"Saunders\",    \"SNTR\", \"SNTR\"},\n-        new String[] {\"Schilling\",   \"XLNK\", \"XLNK\"},\n-        new String[] {\"Schlegel\",    \"XLKL\", \"SLKL\"},\n-        new String[] {\"Scott\",       \"SKT\",  \"SKT\"},\n-        new String[] {\"Sears\",       \"SRS\",  \"SRS\"},\n-        new String[] {\"Segersall\",   \"SJRS\", \"SKRS\"},\n-        new String[] {\"Senecal\",     \"SNKL\", \"SNKL\"},\n-        new String[] {\"Sergeaux\",    \"SRJ\",  \"SRK\"},\n-        new String[] {\"Severance\",   \"SFRN\", \"SFRN\"},\n-        new String[] {\"Sharp\",       \"XRP\",  \"XRP\"},\n-        new String[] {\"Sharpe\",      \"XRP\",  \"XRP\"},\n-        new String[] {\"Sharply\",     \"XRPL\", \"XRPL\"},\n-        new String[] {\"Shatswell\",   \"XTSL\", \"XTSL\"},\n-        new String[] {\"Shattack\",    \"XTK\",  \"XTK\"},\n-        new String[] {\"Shattock\",    \"XTK\",  \"XTK\"},\n-        new String[] {\"Shattuck\",    \"XTK\",  \"XTK\"},\n-        new String[] {\"Shaw\",        \"X\",    \"XF\"},\n-        new String[] {\"Sheldon\",     \"XLTN\", \"XLTN\"},\n-        new String[] {\"Sherman\",     \"XRMN\", \"XRMN\"},\n-        new String[] {\"Shinn\",       \"XN\",   \"XN\"},\n-        new String[] {\"Shirford\",    \"XRFR\", \"XRFR\"},\n-        new String[] {\"Shirley\",     \"XRL\",  \"XRL\"},\n-        new String[] {\"Shively\",     \"XFL\",  \"XFL\"},\n-        new String[] {\"Shoemaker\",   \"XMKR\", \"XMKR\"},\n-        new String[] {\"Short\",       \"XRT\",  \"XRT\"},\n-        new String[] {\"Shotwell\",    \"XTL\",  \"XTL\"},\n-        new String[] {\"Shute\",       \"XT\",   \"XT\"},\n-        new String[] {\"Sibley\",      \"SPL\",  \"SPL\"},\n-        new String[] {\"Silver\",      \"SLFR\", \"SLFR\"},\n-        new String[] {\"Simes\",       \"SMS\",  \"SMS\"},\n-        new String[] {\"Sinken\",      \"SNKN\", \"SNKN\"},\n-        new String[] {\"Sinn\",        \"SN\",   \"SN\"},\n-        new String[] {\"Skelton\",     \"SKLT\", \"SKLT\"},\n-        new String[] {\"Skiffe\",      \"SKF\",  \"SKF\"},\n-        new String[] {\"Skotkonung\",  \"SKTK\", \"SKTK\"},\n-        new String[] {\"Slade\",       \"SLT\",  \"XLT\"},\n-        new String[] {\"Slye\",        \"SL\",   \"XL\"},\n-        new String[] {\"Smedley\",     \"SMTL\", \"XMTL\"},\n-        new String[] {\"Smith\",       \"SM0\",  \"XMT\"},\n-        new String[] {\"Snow\",        \"SN\",   \"XNF\"},\n-        new String[] {\"Soole\",       \"SL\",   \"SL\"},\n-        new String[] {\"Soule\",       \"SL\",   \"SL\"},\n-        new String[] {\"Southworth\",  \"S0R0\", \"STRT\"},\n-        new String[] {\"Sowles\",      \"SLS\",  \"SLS\"},\n-        new String[] {\"Spalding\",    \"SPLT\", \"SPLT\"},\n-        new String[] {\"Spark\",       \"SPRK\", \"SPRK\"},\n-        new String[] {\"Spencer\",     \"SPNS\", \"SPNS\"},\n-        new String[] {\"Sperry\",      \"SPR\",  \"SPR\"},\n-        new String[] {\"Spofford\",    \"SPFR\", \"SPFR\"},\n-        new String[] {\"Spooner\",     \"SPNR\", \"SPNR\"},\n-        new String[] {\"Sprague\",     \"SPRK\", \"SPRK\"},\n-        new String[] {\"Springer\",    \"SPRN\", \"SPRN\"},\n-        new String[] {\"St. Clair\",   \"STKL\", \"STKL\"},\n-        new String[] {\"St. Claire\",  \"STKL\", \"STKL\"},\n-        new String[] {\"St. Leger\",   \"STLJ\", \"STLK\"},\n-        new String[] {\"St. Omer\",    \"STMR\", \"STMR\"},\n-        new String[] {\"Stafferton\",  \"STFR\", \"STFR\"},\n-        new String[] {\"Stafford\",    \"STFR\", \"STFR\"},\n-        new String[] {\"Stalham\",     \"STLM\", \"STLM\"},\n-        new String[] {\"Stanford\",    \"STNF\", \"STNF\"},\n-        new String[] {\"Stanton\",     \"STNT\", \"STNT\"},\n-        new String[] {\"Star\",        \"STR\",  \"STR\"},\n-        new String[] {\"Starbuck\",    \"STRP\", \"STRP\"},\n-        new String[] {\"Starkey\",     \"STRK\", \"STRK\"},\n-        new String[] {\"Starkweather\",\"STRK\", \"STRK\"},\n-        new String[] {\"Stearns\",     \"STRN\", \"STRN\"},\n-        new String[] {\"Stebbins\",    \"STPN\", \"STPN\"},\n-        new String[] {\"Steele\",      \"STL\",  \"STL\"},\n-        new String[] {\"Stephenson\",  \"STFN\", \"STFN\"},\n-        new String[] {\"Stevens\",     \"STFN\", \"STFN\"},\n-        new String[] {\"Stoddard\",    \"STTR\", \"STTR\"},\n-        new String[] {\"Stodder\",     \"STTR\", \"STTR\"},\n-        new String[] {\"Stone\",       \"STN\",  \"STN\"},\n-        new String[] {\"Storey\",      \"STR\",  \"STR\"},\n-        new String[] {\"Storrada\",    \"STRT\", \"STRT\"},\n-        new String[] {\"Story\",       \"STR\",  \"STR\"},\n-        new String[] {\"Stoughton\",   \"STFT\", \"STFT\"},\n-        new String[] {\"Stout\",       \"STT\",  \"STT\"},\n-        new String[] {\"Stow\",        \"ST\",   \"STF\"},\n-        new String[] {\"Strong\",      \"STRN\", \"STRN\"},\n-        new String[] {\"Strutt\",      \"STRT\", \"STRT\"},\n-        new String[] {\"Stryker\",     \"STRK\", \"STRK\"},\n-        new String[] {\"Stuckeley\",   \"STKL\", \"STKL\"},\n-        new String[] {\"Sturges\",     \"STRJ\", \"STRK\"},\n-        new String[] {\"Sturgess\",    \"STRJ\", \"STRK\"},\n-        new String[] {\"Sturgis\",     \"STRJ\", \"STRK\"},\n-        new String[] {\"Suevain\",     \"SFN\",  \"SFN\"},\n-        new String[] {\"Sulyard\",     \"SLRT\", \"SLRT\"},\n-        new String[] {\"Sutton\",      \"STN\",  \"STN\"},\n-        new String[] {\"Swain\",       \"SN\",   \"XN\"},\n-        new String[] {\"Swayne\",      \"SN\",   \"XN\"},\n-        new String[] {\"Swayze\",      \"SS\",   \"XTS\"},\n-        new String[] {\"Swift\",       \"SFT\",  \"XFT\"},\n-        new String[] {\"Taber\",       \"TPR\",  \"TPR\"},\n-        new String[] {\"Talcott\",     \"TLKT\", \"TLKT\"},\n-        new String[] {\"Tarne\",       \"TRN\",  \"TRN\"},\n-        new String[] {\"Tatum\",       \"TTM\",  \"TTM\"},\n-        new String[] {\"Taverner\",    \"TFRN\", \"TFRN\"},\n-        new String[] {\"Taylor\",      \"TLR\",  \"TLR\"},\n-        new String[] {\"Tenney\",      \"TN\",   \"TN\"},\n-        new String[] {\"Thayer\",      \"0R\",   \"TR\"},\n-        new String[] {\"Thember\",     \"0MPR\", \"TMPR\"},\n-        new String[] {\"Thomas\",      \"TMS\",  \"TMS\"},\n-        new String[] {\"Thompson\",    \"TMPS\", \"TMPS\"},\n-        new String[] {\"Thorne\",      \"0RN\",  \"TRN\"},\n-        new String[] {\"Thornycraft\", \"0RNK\", \"TRNK\"},\n-        new String[] {\"Threlkeld\",   \"0RLK\", \"TRLK\"},\n-        new String[] {\"Throckmorton\",\"0RKM\", \"TRKM\"},\n-        new String[] {\"Thwaits\",     \"0TS\",  \"TTS\"},\n-        new String[] {\"Tibbetts\",    \"TPTS\", \"TPTS\"},\n-        new String[] {\"Tidd\",        \"TT\",   \"TT\"},\n-        new String[] {\"Tierney\",     \"TRN\",  \"TRN\"},\n-        new String[] {\"Tilley\",      \"TL\",   \"TL\"},\n-        new String[] {\"Tillieres\",   \"TLRS\", \"TLRS\"},\n-        new String[] {\"Tilly\",       \"TL\",   \"TL\"},\n-        new String[] {\"Tisdale\",     \"TSTL\", \"TSTL\"},\n-        new String[] {\"Titus\",       \"TTS\",  \"TTS\"},\n-        new String[] {\"Tobey\",       \"TP\",   \"TP\"},\n-        new String[] {\"Tooker\",      \"TKR\",  \"TKR\"},\n-        new String[] {\"Towle\",       \"TL\",   \"TL\"},\n-        new String[] {\"Towne\",       \"TN\",   \"TN\"},\n-        new String[] {\"Townsend\",    \"TNSN\", \"TNSN\"},\n-        new String[] {\"Treadway\",    \"TRT\",  \"TRT\"},\n-        new String[] {\"Trelawney\",   \"TRLN\", \"TRLN\"},\n-        new String[] {\"Trinder\",     \"TRNT\", \"TRNT\"},\n-        new String[] {\"Tripp\",       \"TRP\",  \"TRP\"},\n-        new String[] {\"Trippe\",      \"TRP\",  \"TRP\"},\n-        new String[] {\"Trott\",       \"TRT\",  \"TRT\"},\n-        new String[] {\"True\",        \"TR\",   \"TR\"},\n-        new String[] {\"Trussebut\",   \"TRSP\", \"TRSP\"},\n-        new String[] {\"Tucker\",      \"TKR\",  \"TKR\"},\n-        new String[] {\"Turgeon\",     \"TRJN\", \"TRKN\"},\n-        new String[] {\"Turner\",      \"TRNR\", \"TRNR\"},\n-        new String[] {\"Tuttle\",      \"TTL\",  \"TTL\"},\n-        new String[] {\"Tyler\",       \"TLR\",  \"TLR\"},\n-        new String[] {\"Tylle\",       \"TL\",   \"TL\"},\n-        new String[] {\"Tyrrel\",      \"TRL\",  \"TRL\"},\n-        new String[] {\"Ua Tuathail\", \"AT0L\", \"ATTL\"},\n-        new String[] {\"Ulrich\",      \"ALRX\", \"ALRK\"},\n-        new String[] {\"Underhill\",   \"ANTR\", \"ANTR\"},\n-        new String[] {\"Underwood\",   \"ANTR\", \"ANTR\"},\n-        new String[] {\"Unknown\",     \"ANKN\", \"ANKN\"},\n-        new String[] {\"Valentine\",   \"FLNT\", \"FLNT\"},\n-        new String[] {\"Van Egmond\",  \"FNKM\", \"FNKM\"},\n-        new String[] {\"Van der Beek\",\"FNTR\", \"FNTR\"},\n-        new String[] {\"Vaughan\",     \"FKN\",  \"FKN\"},\n-        new String[] {\"Vermenlen\",   \"FRMN\", \"FRMN\"},\n-        new String[] {\"Vincent\",     \"FNSN\", \"FNSN\"},\n-        new String[] {\"Volentine\",   \"FLNT\", \"FLNT\"},\n-        new String[] {\"Wagner\",      \"AKNR\", \"FKNR\"},\n-        new String[] {\"Waite\",       \"AT\",   \"FT\"},\n-        new String[] {\"Walker\",      \"ALKR\", \"FLKR\"},\n-        new String[] {\"Walter\",      \"ALTR\", \"FLTR\"},\n-        new String[] {\"Wandell\",     \"ANTL\", \"FNTL\"},\n-        new String[] {\"Wandesford\",  \"ANTS\", \"FNTS\"},\n-        new String[] {\"Warbleton\",   \"ARPL\", \"FRPL\"},\n-        new String[] {\"Ward\",        \"ART\",  \"FRT\"},\n-        new String[] {\"Warde\",       \"ART\",  \"FRT\"},\n-        new String[] {\"Ware\",        \"AR\",   \"FR\"},\n-        new String[] {\"Wareham\",     \"ARHM\", \"FRHM\"},\n-        new String[] {\"Warner\",      \"ARNR\", \"FRNR\"},\n-        new String[] {\"Warren\",      \"ARN\",  \"FRN\"},\n-        new String[] {\"Washburne\",   \"AXPR\", \"FXPR\"},\n-        new String[] {\"Waterbury\",   \"ATRP\", \"FTRP\"},\n-        new String[] {\"Watson\",      \"ATSN\", \"FTSN\"},\n-        new String[] {\"WatsonEllithorpe\",\"ATSN\", \"FTSN\"},\n-        new String[] {\"Watts\",       \"ATS\",  \"FTS\"},\n-        new String[] {\"Wayne\",       \"AN\",   \"FN\"},\n-        new String[] {\"Webb\",        \"AP\",   \"FP\"},\n-        new String[] {\"Weber\",       \"APR\",  \"FPR\"},\n-        new String[] {\"Webster\",     \"APST\", \"FPST\"},\n-        new String[] {\"Weed\",        \"AT\",   \"FT\"},\n-        new String[] {\"Weeks\",       \"AKS\",  \"FKS\"},\n-        new String[] {\"Wells\",       \"ALS\",  \"FLS\"},\n-        new String[] {\"Wenzell\",     \"ANSL\", \"FNTS\"},\n-        new String[] {\"West\",        \"AST\",  \"FST\"},\n-        new String[] {\"Westbury\",    \"ASTP\", \"FSTP\"},\n-        new String[] {\"Whatlocke\",   \"ATLK\", \"ATLK\"},\n-        new String[] {\"Wheeler\",     \"ALR\",  \"ALR\"},\n-        new String[] {\"Whiston\",     \"ASTN\", \"ASTN\"},\n-        new String[] {\"White\",       \"AT\",   \"AT\"},\n-        new String[] {\"Whitman\",     \"ATMN\", \"ATMN\"},\n-        new String[] {\"Whiton\",      \"ATN\",  \"ATN\"},\n-        new String[] {\"Whitson\",     \"ATSN\", \"ATSN\"},\n-        new String[] {\"Wickes\",      \"AKS\",  \"FKS\"},\n-        new String[] {\"Wilbur\",      \"ALPR\", \"FLPR\"},\n-        new String[] {\"Wilcotes\",    \"ALKT\", \"FLKT\"},\n-        new String[] {\"Wilkinson\",   \"ALKN\", \"FLKN\"},\n-        new String[] {\"Willets\",     \"ALTS\", \"FLTS\"},\n-        new String[] {\"Willett\",     \"ALT\",  \"FLT\"},\n-        new String[] {\"Willey\",      \"AL\",   \"FL\"},\n-        new String[] {\"Williams\",    \"ALMS\", \"FLMS\"},\n-        new String[] {\"Williston\",   \"ALST\", \"FLST\"},\n-        new String[] {\"Wilson\",      \"ALSN\", \"FLSN\"},\n-        new String[] {\"Wimes\",       \"AMS\",  \"FMS\"},\n-        new String[] {\"Winch\",       \"ANX\",  \"FNK\"},\n-        new String[] {\"Winegar\",     \"ANKR\", \"FNKR\"},\n-        new String[] {\"Wing\",        \"ANK\",  \"FNK\"},\n-        new String[] {\"Winsley\",     \"ANSL\", \"FNSL\"},\n-        new String[] {\"Winslow\",     \"ANSL\", \"FNSL\"},\n-        new String[] {\"Winthrop\",    \"AN0R\", \"FNTR\"},\n-        new String[] {\"Wise\",        \"AS\",   \"FS\"},\n-        new String[] {\"Wood\",        \"AT\",   \"FT\"},\n-        new String[] {\"Woodbridge\",  \"ATPR\", \"FTPR\"},\n-        new String[] {\"Woodward\",    \"ATRT\", \"FTRT\"},\n-        new String[] {\"Wooley\",      \"AL\",   \"FL\"},\n-        new String[] {\"Woolley\",     \"AL\",   \"FL\"},\n-        new String[] {\"Worth\",       \"AR0\",  \"FRT\"},\n-        new String[] {\"Worthen\",     \"AR0N\", \"FRTN\"},\n-        new String[] {\"Worthley\",    \"AR0L\", \"FRTL\"},\n-        new String[] {\"Wright\",      \"RT\",   \"RT\"},\n-        new String[] {\"Wyer\",        \"AR\",   \"FR\"},\n-        new String[] {\"Wyere\",       \"AR\",   \"FR\"},\n-        new String[] {\"Wynkoop\",     \"ANKP\", \"FNKP\"},\n-        new String[] {\"Yarnall\",     \"ARNL\", \"ARNL\"},\n-        new String[] {\"Yeoman\",      \"AMN\",  \"AMN\"},\n-        new String[] {\"Yorke\",       \"ARK\",  \"ARK\"},\n-        new String[] {\"Young\",       \"ANK\",  \"ANK\"},\n-        new String[] {\"ab Wennonwen\",\"APNN\", \"APNN\"},\n-        new String[] {\"ap Llewellyn\",\"APLL\", \"APLL\"},\n-        new String[] {\"ap Lorwerth\", \"APLR\", \"APLR\"},\n-        new String[] {\"d'Angouleme\", \"TNKL\", \"TNKL\"},\n-        new String[] {\"de Audeham\",  \"TTHM\", \"TTHM\"},\n-        new String[] {\"de Bavant\",   \"TPFN\", \"TPFN\"},\n-        new String[] {\"de Beauchamp\",\"TPXM\", \"TPKM\"},\n-        new String[] {\"de Beaumont\", \"TPMN\", \"TPMN\"},\n-        new String[] {\"de Bolbec\",   \"TPLP\", \"TPLP\"},\n-        new String[] {\"de Braiose\",  \"TPRS\", \"TPRS\"},\n-        new String[] {\"de Braose\",   \"TPRS\", \"TPRS\"},\n-        new String[] {\"de Briwere\",  \"TPRR\", \"TPRR\"},\n-        new String[] {\"de Cantelou\", \"TKNT\", \"TKNT\"},\n-        new String[] {\"de Cherelton\",\"TXRL\", \"TKRL\"},\n-        new String[] {\"de Cherleton\",\"TXRL\", \"TKRL\"},\n-        new String[] {\"de Clare\",    \"TKLR\", \"TKLR\"},\n-        new String[] {\"de Claremont\",\"TKLR\", \"TKLR\"},\n-        new String[] {\"de Clifford\", \"TKLF\", \"TKLF\"},\n-        new String[] {\"de Colville\", \"TKLF\", \"TKLF\"},\n-        new String[] {\"de Courtenay\",\"TKRT\", \"TKRT\"},\n-        new String[] {\"de Fauconberg\",\"TFKN\", \"TFKN\"},\n-        new String[] {\"de Forest\",   \"TFRS\", \"TFRS\"},\n-        new String[] {\"de Gai\",      \"TK\",   \"TK\"},\n-        new String[] {\"de Grey\",     \"TKR\",  \"TKR\"},\n-        new String[] {\"de Guernons\", \"TKRN\", \"TKRN\"},\n-        new String[] {\"de Haia\",     \"T\",    \"T\"},\n-        new String[] {\"de Harcourt\", \"TRKR\", \"TRKR\"},\n-        new String[] {\"de Hastings\", \"TSTN\", \"TSTN\"},\n-        new String[] {\"de Hoke\",     \"TK\",   \"TK\"},\n-        new String[] {\"de Hooch\",    \"TK\",   \"TK\"},\n-        new String[] {\"de Hugelville\",\"TJLF\", \"TKLF\"},\n-        new String[] {\"de Huntingdon\",\"TNTN\", \"TNTN\"},\n-        new String[] {\"de Insula\",   \"TNSL\", \"TNSL\"},\n-        new String[] {\"de Keynes\",   \"TKNS\", \"TKNS\"},\n-        new String[] {\"de Lacy\",     \"TLS\",  \"TLS\"},\n-        new String[] {\"de Lexington\",\"TLKS\", \"TLKS\"},\n-        new String[] {\"de Lusignan\", \"TLSN\", \"TLSK\"},\n-        new String[] {\"de Manvers\",  \"TMNF\", \"TMNF\"},\n-        new String[] {\"de Montagu\",  \"TMNT\", \"TMNT\"},\n-        new String[] {\"de Montault\", \"TMNT\", \"TMNT\"},\n-        new String[] {\"de Montfort\", \"TMNT\", \"TMNT\"},\n-        new String[] {\"de Mortimer\", \"TMRT\", \"TMRT\"},\n-        new String[] {\"de Morville\", \"TMRF\", \"TMRF\"},\n-        new String[] {\"de Morvois\",  \"TMRF\", \"TMRF\"},\n-        new String[] {\"de Neufmarche\",\"TNFM\", \"TNFM\"},\n-        new String[] {\"de Odingsells\",\"TTNK\", \"TTNK\"},\n-        new String[] {\"de Odyngsells\",\"TTNK\", \"TTNK\"},\n-        new String[] {\"de Percy\",    \"TPRS\", \"TPRS\"},\n-        new String[] {\"de Pierrepont\",\"TPRP\", \"TPRP\"},\n-        new String[] {\"de Plessetis\",\"TPLS\", \"TPLS\"},\n-        new String[] {\"de Porhoet\",  \"TPRT\", \"TPRT\"},\n-        new String[] {\"de Prouz\",    \"TPRS\", \"TPRS\"},\n-        new String[] {\"de Quincy\",   \"TKNS\", \"TKNS\"},\n-        new String[] {\"de Ripellis\", \"TRPL\", \"TRPL\"},\n-        new String[] {\"de Ros\",      \"TRS\",  \"TRS\"},\n-        new String[] {\"de Salisbury\",\"TSLS\", \"TSLS\"},\n-        new String[] {\"de Sanford\",  \"TSNF\", \"TSNF\"},\n-        new String[] {\"de Somery\",   \"TSMR\", \"TSMR\"},\n-        new String[] {\"de St. Hilary\",\"TSTL\", \"TSTL\"},\n-        new String[] {\"de St. Liz\",  \"TSTL\", \"TSTL\"},\n-        new String[] {\"de Sutton\",   \"TSTN\", \"TSTN\"},\n-        new String[] {\"de Toeni\",    \"TTN\",  \"TTN\"},\n-        new String[] {\"de Tony\",     \"TTN\",  \"TTN\"},\n-        new String[] {\"de Umfreville\",\"TMFR\", \"TMFR\"},\n-        new String[] {\"de Valognes\", \"TFLN\", \"TFLK\"},\n-        new String[] {\"de Vaux\",     \"TF\",   \"TF\"},\n-        new String[] {\"de Vere\",     \"TFR\",  \"TFR\"},\n-        new String[] {\"de Vermandois\",\"TFRM\", \"TFRM\"},\n-        new String[] {\"de Vernon\",   \"TFRN\", \"TFRN\"},\n-        new String[] {\"de Vexin\",    \"TFKS\", \"TFKS\"},\n-        new String[] {\"de Vitre\",    \"TFTR\", \"TFTR\"},\n-        new String[] {\"de Wandesford\",\"TNTS\", \"TNTS\"},\n-        new String[] {\"de Warenne\",  \"TRN\",  \"TRN\"},\n-        new String[] {\"de Westbury\", \"TSTP\", \"TSTP\"},\n-        new String[] {\"di Saluzzo\",  \"TSLS\", \"TSLT\"},\n-        new String[] {\"fitz Alan\",   \"FTSL\", \"FTSL\"},\n-        new String[] {\"fitz Geoffrey\",\"FTSJ\", \"FTSK\"},\n-        new String[] {\"fitz Herbert\",\"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz John\",   \"FTSJ\", \"FTSJ\"},\n-        new String[] {\"fitz Patrick\",\"FTSP\", \"FTSP\"},\n-        new String[] {\"fitz Payn\",   \"FTSP\", \"FTSP\"},\n-        new String[] {\"fitz Piers\",  \"FTSP\", \"FTSP\"},\n-        new String[] {\"fitz Randolph\",\"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz Richard\",\"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz Robert\", \"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz Roy\",    \"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz Scrob\",  \"FTSS\", \"FTSS\"},\n-        new String[] {\"fitz Walter\", \"FTSL\", \"FTSL\"},\n-        new String[] {\"fitz Warin\",  \"FTSR\", \"FTSR\"},\n-        new String[] {\"fitz Williams\",\"FTSL\", \"FTSL\"},\n-        new String[] {\"la Zouche\",   \"LSX\",  \"LSK\"},\n-        new String[] {\"le Botiller\", \"LPTL\", \"LPTL\"},\n-        new String[] {\"le Despenser\",\"LTSP\", \"LTSP\"},\n-        new String[] {\"le deSpencer\",\"LTSP\", \"LTSP\"},\n-        new String[] {\"of Allendale\",\"AFLN\", \"AFLN\"},\n-        new String[] {\"of Angouleme\",\"AFNK\", \"AFNK\"},\n-        new String[] {\"of Anjou\",    \"AFNJ\", \"AFNJ\"},\n-        new String[] {\"of Aquitaine\",\"AFKT\", \"AFKT\"},\n-        new String[] {\"of Aumale\",   \"AFML\", \"AFML\"},\n-        new String[] {\"of Bavaria\",  \"AFPF\", \"AFPF\"},\n-        new String[] {\"of Boulogne\", \"AFPL\", \"AFPL\"},\n-        new String[] {\"of Brittany\", \"AFPR\", \"AFPR\"},\n-        new String[] {\"of Brittary\", \"AFPR\", \"AFPR\"},\n-        new String[] {\"of Castile\",  \"AFKS\", \"AFKS\"},\n-        new String[] {\"of Chester\",  \"AFXS\", \"AFKS\"},\n-        new String[] {\"of Clermont\", \"AFKL\", \"AFKL\"},\n-        new String[] {\"of Cologne\",  \"AFKL\", \"AFKL\"},\n-        new String[] {\"of Dinan\",    \"AFTN\", \"AFTN\"},\n-        new String[] {\"of Dunbar\",   \"AFTN\", \"AFTN\"},\n-        new String[] {\"of England\",  \"AFNK\", \"AFNK\"},\n-        new String[] {\"of Essex\",    \"AFSK\", \"AFSK\"},\n-        new String[] {\"of Falaise\",  \"AFFL\", \"AFFL\"},\n-        new String[] {\"of Flanders\", \"AFFL\", \"AFFL\"},\n-        new String[] {\"of Galloway\", \"AFKL\", \"AFKL\"},\n-        new String[] {\"of Germany\",  \"AFKR\", \"AFJR\"},\n-        new String[] {\"of Gloucester\",\"AFKL\", \"AFKL\"},\n-        new String[] {\"of Heristal\", \"AFRS\", \"AFRS\"},\n-        new String[] {\"of Hungary\",  \"AFNK\", \"AFNK\"},\n-        new String[] {\"of Huntington\",\"AFNT\", \"AFNT\"},\n-        new String[] {\"of Kiev\",     \"AFKF\", \"AFKF\"},\n-        new String[] {\"of Kuno\",     \"AFKN\", \"AFKN\"},\n-        new String[] {\"of Landen\",   \"AFLN\", \"AFLN\"},\n-        new String[] {\"of Laon\",     \"AFLN\", \"AFLN\"},\n-        new String[] {\"of Leinster\", \"AFLN\", \"AFLN\"},\n-        new String[] {\"of Lens\",     \"AFLN\", \"AFLN\"},\n-        new String[] {\"of Lorraine\", \"AFLR\", \"AFLR\"},\n-        new String[] {\"of Louvain\",  \"AFLF\", \"AFLF\"},\n-        new String[] {\"of Mercia\",   \"AFMR\", \"AFMR\"},\n-        new String[] {\"of Metz\",     \"AFMT\", \"AFMT\"},\n-        new String[] {\"of Meulan\",   \"AFML\", \"AFML\"},\n-        new String[] {\"of Nass\",     \"AFNS\", \"AFNS\"},\n-        new String[] {\"of Normandy\", \"AFNR\", \"AFNR\"},\n-        new String[] {\"of Ohningen\", \"AFNN\", \"AFNN\"},\n-        new String[] {\"of Orleans\",  \"AFRL\", \"AFRL\"},\n-        new String[] {\"of Poitou\",   \"AFPT\", \"AFPT\"},\n-        new String[] {\"of Polotzk\",  \"AFPL\", \"AFPL\"},\n-        new String[] {\"of Provence\", \"AFPR\", \"AFPR\"},\n-        new String[] {\"of Ringelheim\",\"AFRN\", \"AFRN\"},\n-        new String[] {\"of Salisbury\",\"AFSL\", \"AFSL\"},\n-        new String[] {\"of Saxony\",   \"AFSK\", \"AFSK\"},\n-        new String[] {\"of Scotland\", \"AFSK\", \"AFSK\"},\n-        new String[] {\"of Senlis\",   \"AFSN\", \"AFSN\"},\n-        new String[] {\"of Stafford\", \"AFST\", \"AFST\"},\n-        new String[] {\"of Swabia\",   \"AFSP\", \"AFSP\"},\n-        new String[] {\"of Tongres\",  \"AFTN\", \"AFTN\"},\n-        new String[] {\"of the Tributes\",\"AF0T\", \"AFTT\"},\n-        new String[] {\"unknown\",     \"ANKN\", \"ANKN\"},\n-        new String[] {\"van der Gouda\",\"FNTR\", \"FNTR\"},\n-        new String[] {\"von Adenbaugh\",\"FNTN\", \"FNTN\"},\n-        new String[] {\"ARCHITure\",   \"ARKT\", \"ARKT\"},\n-        new String[] {\"Arnoff\",      \"ARNF\", \"ARNF\"},\n-        new String[] {\"Arnow\",       \"ARN\",  \"ARNF\"},\n-        new String[] {\"DANGER\",      \"TNJR\", \"TNKR\"},\n-        new String[] {\"Jankelowicz\", \"JNKL\", \"ANKL\"},\n-        new String[] {\"MANGER\",      \"MNJR\", \"MNKR\"},\n-        new String[] {\"McClellan\",   \"MKLL\", \"MKLL\"},\n-        new String[] {\"McHugh\",      \"MK\",   \"MK\"},\n-        new String[] {\"McLaughlin\",  \"MKLF\", \"MKLF\"},\n-        new String[] {\"ORCHEStra\",   \"ARKS\", \"ARKS\"},\n-        new String[] {\"ORCHID\",      \"ARKT\", \"ARKT\"},\n-        new String[] {\"Pierce\",      \"PRS\",  \"PRS\"},\n-        new String[] {\"RANGER\",      \"RNJR\", \"RNKR\"},\n-        new String[] {\"Schlesinger\", \"XLSN\", \"SLSN\"},\n-        new String[] {\"Uomo\",        \"AM\",   \"AM\"},\n-        new String[] {\"Vasserman\",   \"FSRM\", \"FSRM\"},\n-        new String[] {\"Wasserman\",   \"ASRM\", \"FSRM\"},\n-        new String[] {\"Womo\",        \"AM\",   \"FM\"},\n-        new String[] {\"Yankelovich\", \"ANKL\", \"ANKL\"},\n-        new String[] {\"accede\",      \"AKST\", \"AKST\"},\n-        new String[] {\"accident\",    \"AKST\", \"AKST\"},\n-        new String[] {\"adelsheim\",   \"ATLS\", \"ATLS\"},\n-        new String[] {\"aged\",        \"AJT\",  \"AKT\"},\n-        new String[] {\"ageless\",     \"AJLS\", \"AKLS\"},\n-        new String[] {\"agency\",      \"AJNS\", \"AKNS\"},\n-        new String[] {\"aghast\",      \"AKST\", \"AKST\"},\n-        new String[] {\"agio\",        \"AJ\",   \"AK\"},\n-        new String[] {\"agrimony\",    \"AKRM\", \"AKRM\"},\n-        new String[] {\"album\",       \"ALPM\", \"ALPM\"},\n-        new String[] {\"alcmene\",     \"ALKM\", \"ALKM\"},\n-        new String[] {\"alehouse\",    \"ALHS\", \"ALHS\"},\n-        new String[] {\"antique\",     \"ANTK\", \"ANTK\"},\n-        new String[] {\"artois\",      \"ART\",  \"ARTS\"},\n-        new String[] {\"automation\",  \"ATMX\", \"ATMX\"},\n-        new String[] {\"bacchus\",     \"PKS\",  \"PKS\"},\n-        new String[] {\"bacci\",       \"PX\",   \"PX\"},\n-        new String[] {\"bajador\",     \"PJTR\", \"PHTR\"},\n-        new String[] {\"bellocchio\",  \"PLX\",  \"PLX\"},\n-        new String[] {\"bertucci\",    \"PRTX\", \"PRTX\"},\n-        new String[] {\"biaggi\",      \"PJ\",   \"PK\"},\n-        new String[] {\"bough\",       \"P\",    \"P\"},\n-        new String[] {\"breaux\",      \"PR\",   \"PR\"},\n-        new String[] {\"broughton\",   \"PRTN\", \"PRTN\"},\n-        new String[] {\"cabrillo\",    \"KPRL\", \"KPR\"},\n-        new String[] {\"caesar\",      \"SSR\",  \"SSR\"},\n-        new String[] {\"cagney\",      \"KKN\",  \"KKN\"},\n-        new String[] {\"campbell\",    \"KMPL\", \"KMPL\"},\n-        new String[] {\"carlisle\",    \"KRLL\", \"KRLL\"},\n-        new String[] {\"carlysle\",    \"KRLL\", \"KRLL\"},\n-        new String[] {\"chemistry\",   \"KMST\", \"KMST\"},\n-        new String[] {\"chianti\",     \"KNT\",  \"KNT\"},\n-        new String[] {\"chorus\",      \"KRS\",  \"KRS\"},\n-        new String[] {\"cough\",       \"KF\",   \"KF\"},\n-        new String[] {\"czerny\",      \"SRN\",  \"XRN\"},\n-        new String[] {\"deffenbacher\",\"TFNP\", \"TFNP\"},\n-        new String[] {\"dumb\",        \"TM\",   \"TM\"},\n-        new String[] {\"edgar\",       \"ATKR\", \"ATKR\"},\n-        new String[] {\"edge\",        \"AJ\",   \"AJ\"},\n-        new String[] {\"filipowicz\",  \"FLPT\", \"FLPF\"},\n-        new String[] {\"focaccia\",    \"FKX\",  \"FKX\"},\n-        new String[] {\"gallegos\",    \"KLKS\", \"KKS\"},\n-        new String[] {\"gambrelli\",   \"KMPR\", \"KMPR\"},\n-        new String[] {\"geithain\",    \"K0N\",  \"JTN\"},\n-        new String[] {\"ghiradelli\",  \"JRTL\", \"JRTL\"},\n-        new String[] {\"ghislane\",    \"JLN\",  \"JLN\"},\n-        new String[] {\"gough\",       \"KF\",   \"KF\"},\n-        new String[] {\"hartheim\",    \"HR0M\", \"HRTM\"},\n-        new String[] {\"heimsheim\",   \"HMSM\", \"HMSM\"},\n-        new String[] {\"hochmeier\",   \"HKMR\", \"HKMR\"},\n-        new String[] {\"hugh\",        \"H\",    \"H\"},\n-        new String[] {\"hunger\",      \"HNKR\", \"HNJR\"},\n-        new String[] {\"hungry\",      \"HNKR\", \"HNKR\"},\n-        new String[] {\"island\",      \"ALNT\", \"ALNT\"},\n-        new String[] {\"isle\",        \"AL\",   \"AL\"},\n-        new String[] {\"jose\",        \"HS\",   \"HS\"},\n-        new String[] {\"laugh\",       \"LF\",   \"LF\"},\n-        new String[] {\"mac caffrey\", \"MKFR\", \"MKFR\"},\n-        new String[] {\"mac gregor\",  \"MKRK\", \"MKRK\"},\n-        new String[] {\"pegnitz\",     \"PNTS\", \"PKNT\"},\n-        new String[] {\"piskowitz\",   \"PSKT\", \"PSKF\"},\n-        new String[] {\"queen\",       \"KN\",   \"KN\"},\n-        new String[] {\"raspberry\",   \"RSPR\", \"RSPR\"},\n-        new String[] {\"resnais\",     \"RSN\",  \"RSNS\"},\n-        new String[] {\"rogier\",      \"RJ\",   \"RJR\"},\n-        new String[] {\"rough\",       \"RF\",   \"RF\"},\n-        new String[] {\"san jacinto\", \"SNHS\", \"SNHS\"},\n-        new String[] {\"schenker\",    \"XNKR\", \"SKNK\"},\n-        new String[] {\"schermerhorn\",\"XRMR\", \"SKRM\"},\n-        new String[] {\"schmidt\",     \"XMT\",  \"SMT\"},\n-        new String[] {\"schneider\",   \"XNTR\", \"SNTR\"},\n-        new String[] {\"school\",      \"SKL\",  \"SKL\"},\n-        new String[] {\"schooner\",    \"SKNR\", \"SKNR\"},\n-        new String[] {\"schrozberg\",  \"XRSP\", \"SRSP\"},\n-        new String[] {\"schulman\",    \"XLMN\", \"XLMN\"},\n-        new String[] {\"schwabach\",   \"XPK\",  \"XFPK\"},\n-        new String[] {\"schwarzach\",  \"XRSK\", \"XFRT\"},\n-        new String[] {\"smith\",       \"SM0\",  \"XMT\"},\n-        new String[] {\"snider\",      \"SNTR\", \"XNTR\"},\n-        new String[] {\"succeed\",     \"SKST\", \"SKST\"},\n-        new String[] {\"sugarcane\",   \"XKRK\", \"SKRK\"},\n-        new String[] {\"svobodka\",    \"SFPT\", \"SFPT\"},\n-        new String[] {\"tagliaro\",    \"TKLR\", \"TLR\"},\n-        new String[] {\"thames\",      \"TMS\",  \"TMS\"},\n-        new String[] {\"theilheim\",   \"0LM\",  \"TLM\"},\n-        new String[] {\"thomas\",      \"TMS\",  \"TMS\"},\n-        new String[] {\"thumb\",       \"0M\",   \"TM\"},\n-        new String[] {\"tichner\",     \"TXNR\", \"TKNR\"},\n-        new String[] {\"tough\",       \"TF\",   \"TF\"},\n-        new String[] {\"umbrella\",    \"AMPR\", \"AMPR\"},\n-        new String[] {\"vilshofen\",   \"FLXF\", \"FLXF\"},\n-        new String[] {\"von schuller\",\"FNXL\", \"FNXL\"},\n-        new String[] {\"wachtler\",    \"AKTL\", \"FKTL\"},\n-        new String[] {\"wechsler\",    \"AKSL\", \"FKSL\"},\n-        new String[] {\"weikersheim\", \"AKRS\", \"FKRS\"},\n-        new String[] {\"zhao\",        \"J\",    \"J\"}\n-    };\n }\n--- a/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n+++ b/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n             \"wundeews\", \"windows\" }, {\n             \"yeild\", \"yield\" }, };\n \n-    private DoubleMetaphone doubleMetaphone = null;\n-\n     public DoubleMetaphoneTest(String name) {\n         super(name);\n     }\n     }\n \n     private DoubleMetaphone getDoubleMetaphone() {\n-        return this.doubleMetaphone;\n-    }\n-\n-    protected StringEncoder createEncoder() {\n-        return new Metaphone();\n-    }\n-\n-    private void setDoubleMetaphone(DoubleMetaphone doubleMetaphone) {\n-        this.doubleMetaphone = doubleMetaphone;\n-    }\n-\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.setDoubleMetaphone(new DoubleMetaphone());\n-    }\n-\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.setDoubleMetaphone(null);\n+        return (DoubleMetaphone) this.getStringEncoder();\n+    }\n+\n+    protected StringEncoder createStringEncoder() {\n+        return new DoubleMetaphone();\n     }\n \n     public void testDoubleMetaphone() {\n--- a/src/test/org/apache/commons/codec/language/MetaphoneTest.java\n+++ b/src/test/org/apache/commons/codec/language/MetaphoneTest.java\n  */\n public class MetaphoneTest extends StringEncoderAbstractTest {\n \n-    private Metaphone metaphone = null;\n-\n     public MetaphoneTest(String name) {\n         super(name);\n     }\n             assertTrue(failMsg, this.getMetaphone().isMetaphoneEqual(name1, name0));\n         }\n     }\n+    \n     /**\n      * @return Returns the metaphone.\n      */\n     private Metaphone getMetaphone() {\n-        return this.metaphone;\n-    }\n-\n-    protected StringEncoder createEncoder() {\n+        return (Metaphone) this.getStringEncoder();\n+    }\n+\n+    protected StringEncoder createStringEncoder() {\n         return new Metaphone();\n-    }\n-\n-    /**\n-     * @param metaphone\n-     *                  The metaphone to set.\n-     */\n-    private void setMetaphone(Metaphone metaphone) {\n-        this.metaphone = metaphone;\n-    }\n-\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.setMetaphone(new Metaphone());\n-    }\n-\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.setMetaphone(null);\n     }\n \n     public void testIsMetaphoneEqual1() {\n--- a/src/test/org/apache/commons/codec/language/RefinedSoundexTest.java\n+++ b/src/test/org/apache/commons/codec/language/RefinedSoundexTest.java\n  */\n public class RefinedSoundexTest extends StringEncoderAbstractTest {\n \n-    private RefinedSoundex encoder = null;\n-\n     public RefinedSoundexTest(String name) {\n         super(name);\n+    }\n+\n+    protected StringEncoder createStringEncoder() {\n+        return new RefinedSoundex();\n     }\n \n     /**\n      * @return Returns the encoder.\n      */\n-    private RefinedSoundex getEncoder() {\n-        return this.encoder;\n-    }\n-\n-    protected StringEncoder createEncoder() {\n-        return new RefinedSoundex();\n-    }\n-\n-    /**\n-     * @param encoder\n-     *                  The encoder to set.\n-     */\n-    private void setEncoder(RefinedSoundex encoder) {\n-        this.encoder = encoder;\n-    }\n-\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.setEncoder(new RefinedSoundex());\n-    }\n-\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.setEncoder(null);\n+    private RefinedSoundex getRefinedSoundex() {\n+        return (RefinedSoundex)this.getStringEncoder();\n     }\n \n     public void testDifference() throws EncoderException {\n         // Edge cases\n-        assertEquals(0, this.getEncoder().difference(null, null));\n-        assertEquals(0, this.getEncoder().difference(\"\", \"\"));\n-        assertEquals(0, this.getEncoder().difference(\" \", \" \"));\n+        assertEquals(0, this.getRefinedSoundex().difference(null, null));\n+        assertEquals(0, this.getRefinedSoundex().difference(\"\", \"\"));\n+        assertEquals(0, this.getRefinedSoundex().difference(\" \", \" \"));\n         // Normal cases\n-        assertEquals(6, this.getEncoder().difference(\"Smith\", \"Smythe\"));\n-        assertEquals(3, this.getEncoder().difference(\"Ann\", \"Andrew\"));\n-        assertEquals(1, this.getEncoder().difference(\"Margaret\", \"Andrew\"));\n-        assertEquals(1, this.getEncoder().difference(\"Janet\", \"Margaret\"));\n+        assertEquals(6, this.getRefinedSoundex().difference(\"Smith\", \"Smythe\"));\n+        assertEquals(3, this.getRefinedSoundex().difference(\"Ann\", \"Andrew\"));\n+        assertEquals(1, this.getRefinedSoundex().difference(\"Margaret\", \"Andrew\"));\n+        assertEquals(1, this.getRefinedSoundex().difference(\"Janet\", \"Margaret\"));\n         // Examples from\n         // http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\n-        assertEquals(5, this.getEncoder().difference(\"Green\", \"Greene\"));\n-        assertEquals(1, this.getEncoder().difference(\"Blotchet-Halls\", \"Greene\"));\n+        assertEquals(5, this.getRefinedSoundex().difference(\"Green\", \"Greene\"));\n+        assertEquals(1, this.getRefinedSoundex().difference(\"Blotchet-Halls\", \"Greene\"));\n         // Examples from\n         // http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_setu-sus_3o6w.asp\n-        assertEquals(6, this.getEncoder().difference(\"Smith\", \"Smythe\"));\n-        assertEquals(8, this.getEncoder().difference(\"Smithers\", \"Smythers\"));\n-        assertEquals(5, this.getEncoder().difference(\"Anothers\", \"Brothers\"));\n+        assertEquals(6, this.getRefinedSoundex().difference(\"Smith\", \"Smythe\"));\n+        assertEquals(8, this.getRefinedSoundex().difference(\"Smithers\", \"Smythers\"));\n+        assertEquals(5, this.getRefinedSoundex().difference(\"Anothers\", \"Brothers\"));\n     }\n \n     public void testEncode() {\n-        assertEquals(\"T6036084\", this.getEncoder().encode(\"testing\"));\n-        assertEquals(\"T6036084\", this.getEncoder().encode(\"TESTING\"));\n-        assertEquals(\"T60\", this.getEncoder().encode(\"The\"));\n-        assertEquals(\"Q503\", this.getEncoder().encode(\"quick\"));\n-        assertEquals(\"B1908\", this.getEncoder().encode(\"brown\"));\n-        assertEquals(\"F205\", this.getEncoder().encode(\"fox\"));\n-        assertEquals(\"J408106\", this.getEncoder().encode(\"jumped\"));\n-        assertEquals(\"O0209\", this.getEncoder().encode(\"over\"));\n-        assertEquals(\"T60\", this.getEncoder().encode(\"the\"));\n-        assertEquals(\"L7050\", this.getEncoder().encode(\"lazy\"));\n-        assertEquals(\"D6043\", this.getEncoder().encode(\"dogs\"));\n+        assertEquals(\"T6036084\", this.getRefinedSoundex().encode(\"testing\"));\n+        assertEquals(\"T6036084\", this.getRefinedSoundex().encode(\"TESTING\"));\n+        assertEquals(\"T60\", this.getRefinedSoundex().encode(\"The\"));\n+        assertEquals(\"Q503\", this.getRefinedSoundex().encode(\"quick\"));\n+        assertEquals(\"B1908\", this.getRefinedSoundex().encode(\"brown\"));\n+        assertEquals(\"F205\", this.getRefinedSoundex().encode(\"fox\"));\n+        assertEquals(\"J408106\", this.getRefinedSoundex().encode(\"jumped\"));\n+        assertEquals(\"O0209\", this.getRefinedSoundex().encode(\"over\"));\n+        assertEquals(\"T60\", this.getRefinedSoundex().encode(\"the\"));\n+        assertEquals(\"L7050\", this.getRefinedSoundex().encode(\"lazy\"));\n+        assertEquals(\"D6043\", this.getRefinedSoundex().encode(\"dogs\"));\n \n         // Testing CODEC-56\n         assertEquals(\"D6043\", RefinedSoundex.US_ENGLISH.encode(\"dogs\"));\n     }\n \n     public void testGetMappingCodeNonLetter() {\n-        char code = this.getEncoder().getMappingCode('#');\n+        char code = this.getRefinedSoundex().getMappingCode('#');\n         assertEquals(\"Code does not equals zero\", 0, code);\n     }\n     \n--- a/src/test/org/apache/commons/codec/language/SoundexTest.java\n+++ b/src/test/org/apache/commons/codec/language/SoundexTest.java\n  */\n \n // (FYI: Formatted and sorted with Eclipse)\n+\n package org.apache.commons.codec.language;\n+\n+import junit.framework.Assert;\n \n import org.apache.commons.codec.EncoderException;\n import org.apache.commons.codec.StringEncoder;\n \n /**\n  * Tests {@link Soundex}\n- *\n+ * \n  * @author Apache Software Foundation\n  * @version $Id$\n  */\n public class SoundexTest extends StringEncoderAbstractTest {\n \n-    private Soundex encoder = null;\n-\n     public SoundexTest(String name) {\n         super(name);\n     }\n \n-    void encodeAll(String[] strings, String expectedEncoding) {\n-        for (int i = 0; i < strings.length; i++) {\n-            assertEquals(expectedEncoding, this.getEncoder().encode(strings[i]));\n-        }\n-    }\n-\n-    /**\n-     * @return Returns the _encoder.\n-     */\n-    public Soundex getEncoder() {\n-        return this.encoder;\n-    }\n-\n-    protected StringEncoder createEncoder() {\n+    protected StringEncoder createStringEncoder() {\n         return new Soundex();\n     }\n \n     /**\n-     * @param encoder\n-     *                  The encoder to set.\n-     */\n-    public void setEncoder(Soundex encoder) {\n-        this.encoder = encoder;\n-    }\n-\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        this.setEncoder(new Soundex());\n-    }\n-\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-        this.setEncoder(null);\n-    }\n-\n-    public void testB650() {\n-        this.encodeAll(\n-            new String[] {\n-                \"BARHAM\",\n-                \"BARONE\",\n-                \"BARRON\",\n-                \"BERNA\",\n-                \"BIRNEY\",\n-                \"BIRNIE\",\n-                \"BOOROM\",\n-                \"BOREN\",\n-                \"BORN\",\n-                \"BOURN\",\n-                \"BOURNE\",\n-                \"BOWRON\",\n-                \"BRAIN\",\n-                \"BRAME\",\n-                \"BRANN\",\n-                \"BRAUN\",\n-                \"BREEN\",\n-                \"BRIEN\",\n-                \"BRIM\",\n-                \"BRIMM\",\n-                \"BRINN\",\n-                \"BRION\",\n-                \"BROOM\",\n-                \"BROOME\",\n-                \"BROWN\",\n-                \"BROWNE\",\n-                \"BRUEN\",\n-                \"BRUHN\",\n-                \"BRUIN\",\n-                \"BRUMM\",\n-                \"BRUN\",\n-                \"BRUNO\",\n-                \"BRYAN\",\n-                \"BURIAN\",\n-                \"BURN\",\n-                \"BURNEY\",\n-                \"BYRAM\",\n-                \"BYRNE\",\n-                \"BYRON\",\n-                \"BYRUM\" },\n-            \"B650\");\n+     * @return Returns the encoder.\n+     */\n+    public Soundex getSoundexEncoder() {\n+        return (Soundex)this.getStringEncoder();\n+    }\n+\n+    public void testB650() throws EncoderException {\n+        this.checkEncodingVariations(\"B650\", (new String[]{\n+            \"BARHAM\",\n+            \"BARONE\",\n+            \"BARRON\",\n+            \"BERNA\",\n+            \"BIRNEY\",\n+            \"BIRNIE\",\n+            \"BOOROM\",\n+            \"BOREN\",\n+            \"BORN\",\n+            \"BOURN\",\n+            \"BOURNE\",\n+            \"BOWRON\",\n+            \"BRAIN\",\n+            \"BRAME\",\n+            \"BRANN\",\n+            \"BRAUN\",\n+            \"BREEN\",\n+            \"BRIEN\",\n+            \"BRIM\",\n+            \"BRIMM\",\n+            \"BRINN\",\n+            \"BRION\",\n+            \"BROOM\",\n+            \"BROOME\",\n+            \"BROWN\",\n+            \"BROWNE\",\n+            \"BRUEN\",\n+            \"BRUHN\",\n+            \"BRUIN\",\n+            \"BRUMM\",\n+            \"BRUN\",\n+            \"BRUNO\",\n+            \"BRYAN\",\n+            \"BURIAN\",\n+            \"BURN\",\n+            \"BURNEY\",\n+            \"BYRAM\",\n+            \"BYRNE\",\n+            \"BYRON\",\n+            \"BYRUM\"}));\n+    }\n+\n+    public void testBadCharacters() {\n+        Assert.assertEquals(\"H452\", this.getSoundexEncoder().encode(\"HOL>MES\"));\n+\n     }\n \n     public void testDifference() throws EncoderException {\n         // Edge cases\n-        assertEquals(0, this.getEncoder().difference(null, null));\n-        assertEquals(0, this.getEncoder().difference(\"\", \"\"));\n-        assertEquals(0, this.getEncoder().difference(\" \", \" \"));\n+        Assert.assertEquals(0, this.getSoundexEncoder().difference(null, null));\n+        Assert.assertEquals(0, this.getSoundexEncoder().difference(\"\", \"\"));\n+        Assert.assertEquals(0, this.getSoundexEncoder().difference(\" \", \" \"));\n         // Normal cases\n-        assertEquals(4, this.getEncoder().difference(\"Smith\", \"Smythe\"));\n-        assertEquals(2, this.getEncoder().difference(\"Ann\", \"Andrew\"));\n-        assertEquals(1, this.getEncoder().difference(\"Margaret\", \"Andrew\"));\n-        assertEquals(0, this.getEncoder().difference(\"Janet\", \"Margaret\"));\n+        Assert.assertEquals(4, this.getSoundexEncoder().difference(\"Smith\", \"Smythe\"));\n+        Assert.assertEquals(2, this.getSoundexEncoder().difference(\"Ann\", \"Andrew\"));\n+        Assert.assertEquals(1, this.getSoundexEncoder().difference(\"Margaret\", \"Andrew\"));\n+        Assert.assertEquals(0, this.getSoundexEncoder().difference(\"Janet\", \"Margaret\"));\n         // Examples from http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\n-        assertEquals(4, this.getEncoder().difference(\"Green\", \"Greene\"));\n-        assertEquals(0, this.getEncoder().difference(\"Blotchet-Halls\", \"Greene\"));\n+        Assert.assertEquals(4, this.getSoundexEncoder().difference(\"Green\", \"Greene\"));\n+        Assert.assertEquals(0, this.getSoundexEncoder().difference(\"Blotchet-Halls\", \"Greene\"));\n         // Examples from http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_setu-sus_3o6w.asp\n-        assertEquals(4, this.getEncoder().difference(\"Smith\", \"Smythe\"));\n-        assertEquals(4, this.getEncoder().difference(\"Smithers\", \"Smythers\"));\n-        assertEquals(2, this.getEncoder().difference(\"Anothers\", \"Brothers\"));\n+        Assert.assertEquals(4, this.getSoundexEncoder().difference(\"Smith\", \"Smythe\"));\n+        Assert.assertEquals(4, this.getSoundexEncoder().difference(\"Smithers\", \"Smythers\"));\n+        Assert.assertEquals(2, this.getSoundexEncoder().difference(\"Anothers\", \"Brothers\"));\n     }\n \n     public void testEncodeBasic() {\n-        assertEquals(\"T235\", this.getEncoder().encode(\"testing\"));\n-        assertEquals(\"T000\", this.getEncoder().encode(\"The\"));\n-        assertEquals(\"Q200\", this.getEncoder().encode(\"quick\"));\n-        assertEquals(\"B650\", this.getEncoder().encode(\"brown\"));\n-        assertEquals(\"F200\", this.getEncoder().encode(\"fox\"));\n-        assertEquals(\"J513\", this.getEncoder().encode(\"jumped\"));\n-        assertEquals(\"O160\", this.getEncoder().encode(\"over\"));\n-        assertEquals(\"T000\", this.getEncoder().encode(\"the\"));\n-        assertEquals(\"L200\", this.getEncoder().encode(\"lazy\"));\n-        assertEquals(\"D200\", this.getEncoder().encode(\"dogs\"));\n-    }\n-\n-    /**\n-     * Examples from\n-     * http://www.bradandkathy.com/genealogy/overviewofsoundex.html\n+        Assert.assertEquals(\"T235\", this.getSoundexEncoder().encode(\"testing\"));\n+        Assert.assertEquals(\"T000\", this.getSoundexEncoder().encode(\"The\"));\n+        Assert.assertEquals(\"Q200\", this.getSoundexEncoder().encode(\"quick\"));\n+        Assert.assertEquals(\"B650\", this.getSoundexEncoder().encode(\"brown\"));\n+        Assert.assertEquals(\"F200\", this.getSoundexEncoder().encode(\"fox\"));\n+        Assert.assertEquals(\"J513\", this.getSoundexEncoder().encode(\"jumped\"));\n+        Assert.assertEquals(\"O160\", this.getSoundexEncoder().encode(\"over\"));\n+        Assert.assertEquals(\"T000\", this.getSoundexEncoder().encode(\"the\"));\n+        Assert.assertEquals(\"L200\", this.getSoundexEncoder().encode(\"lazy\"));\n+        Assert.assertEquals(\"D200\", this.getSoundexEncoder().encode(\"dogs\"));\n+    }\n+\n+    /**\n+     * Examples from http://www.bradandkathy.com/genealogy/overviewofsoundex.html\n      */\n     public void testEncodeBatch2() {\n-        assertEquals(\"A462\", this.getEncoder().encode(\"Allricht\"));\n-        assertEquals(\"E166\", this.getEncoder().encode(\"Eberhard\"));\n-        assertEquals(\"E521\", this.getEncoder().encode(\"Engebrethson\"));\n-        assertEquals(\"H512\", this.getEncoder().encode(\"Heimbach\"));\n-        assertEquals(\"H524\", this.getEncoder().encode(\"Hanselmann\"));\n-        assertEquals(\"H431\", this.getEncoder().encode(\"Hildebrand\"));\n-        assertEquals(\"K152\", this.getEncoder().encode(\"Kavanagh\"));\n-        assertEquals(\"L530\", this.getEncoder().encode(\"Lind\"));\n-        assertEquals(\"L222\", this.getEncoder().encode(\"Lukaschowsky\"));\n-        assertEquals(\"M235\", this.getEncoder().encode(\"McDonnell\"));\n-        assertEquals(\"M200\", this.getEncoder().encode(\"McGee\"));\n-        assertEquals(\"O155\", this.getEncoder().encode(\"Opnian\"));\n-        assertEquals(\"O155\", this.getEncoder().encode(\"Oppenheimer\"));\n-        assertEquals(\"R355\", this.getEncoder().encode(\"Riedemanas\"));\n-        assertEquals(\"Z300\", this.getEncoder().encode(\"Zita\"));\n-        assertEquals(\"Z325\", this.getEncoder().encode(\"Zitzmeinn\"));\n-    }\n-\n-    /**\n-     * Examples from\n-     * http://www.archives.gov/research_room/genealogy/census/soundex.html\n+        Assert.assertEquals(\"A462\", this.getSoundexEncoder().encode(\"Allricht\"));\n+        Assert.assertEquals(\"E166\", this.getSoundexEncoder().encode(\"Eberhard\"));\n+        Assert.assertEquals(\"E521\", this.getSoundexEncoder().encode(\"Engebrethson\"));\n+        Assert.assertEquals(\"H512\", this.getSoundexEncoder().encode(\"Heimbach\"));\n+        Assert.assertEquals(\"H524\", this.getSoundexEncoder().encode(\"Hanselmann\"));\n+        Assert.assertEquals(\"H431\", this.getSoundexEncoder().encode(\"Hildebrand\"));\n+        Assert.assertEquals(\"K152\", this.getSoundexEncoder().encode(\"Kavanagh\"));\n+        Assert.assertEquals(\"L530\", this.getSoundexEncoder().encode(\"Lind\"));\n+        Assert.assertEquals(\"L222\", this.getSoundexEncoder().encode(\"Lukaschowsky\"));\n+        Assert.assertEquals(\"M235\", this.getSoundexEncoder().encode(\"McDonnell\"));\n+        Assert.assertEquals(\"M200\", this.getSoundexEncoder().encode(\"McGee\"));\n+        Assert.assertEquals(\"O155\", this.getSoundexEncoder().encode(\"Opnian\"));\n+        Assert.assertEquals(\"O155\", this.getSoundexEncoder().encode(\"Oppenheimer\"));\n+        Assert.assertEquals(\"R355\", this.getSoundexEncoder().encode(\"Riedemanas\"));\n+        Assert.assertEquals(\"Z300\", this.getSoundexEncoder().encode(\"Zita\"));\n+        Assert.assertEquals(\"Z325\", this.getSoundexEncoder().encode(\"Zitzmeinn\"));\n+    }\n+\n+    /**\n+     * Examples from http://www.archives.gov/research_room/genealogy/census/soundex.html\n      */\n     public void testEncodeBatch3() {\n-        assertEquals(\"W252\", this.getEncoder().encode(\"Washington\"));\n-        assertEquals(\"L000\", this.getEncoder().encode(\"Lee\"));\n-        assertEquals(\"G362\", this.getEncoder().encode(\"Gutierrez\"));\n-        assertEquals(\"P236\", this.getEncoder().encode(\"Pfister\"));\n-        assertEquals(\"J250\", this.getEncoder().encode(\"Jackson\"));\n-        assertEquals(\"T522\", this.getEncoder().encode(\"Tymczak\"));\n+        Assert.assertEquals(\"W252\", this.getSoundexEncoder().encode(\"Washington\"));\n+        Assert.assertEquals(\"L000\", this.getSoundexEncoder().encode(\"Lee\"));\n+        Assert.assertEquals(\"G362\", this.getSoundexEncoder().encode(\"Gutierrez\"));\n+        Assert.assertEquals(\"P236\", this.getSoundexEncoder().encode(\"Pfister\"));\n+        Assert.assertEquals(\"J250\", this.getSoundexEncoder().encode(\"Jackson\"));\n+        Assert.assertEquals(\"T522\", this.getSoundexEncoder().encode(\"Tymczak\"));\n         // For VanDeusen: D-250 (D, 2 for the S, 5 for the N, 0 added) is also\n         // possible.\n-        assertEquals(\"V532\", this.getEncoder().encode(\"VanDeusen\"));\n+        Assert.assertEquals(\"V532\", this.getSoundexEncoder().encode(\"VanDeusen\"));\n     }\n \n     /**\n      * Examples from: http://www.myatt.demon.co.uk/sxalg.htm\n      */\n     public void testEncodeBatch4() {\n-        assertEquals(\"H452\", this.getEncoder().encode(\"HOLMES\"));\n-        assertEquals(\"A355\", this.getEncoder().encode(\"ADOMOMI\"));\n-        assertEquals(\"V536\", this.getEncoder().encode(\"VONDERLEHR\"));\n-        assertEquals(\"B400\", this.getEncoder().encode(\"BALL\"));\n-        assertEquals(\"S000\", this.getEncoder().encode(\"SHAW\"));\n-        assertEquals(\"J250\", this.getEncoder().encode(\"JACKSON\"));\n-        assertEquals(\"S545\", this.getEncoder().encode(\"SCANLON\"));\n-        assertEquals(\"S532\", this.getEncoder().encode(\"SAINTJOHN\"));\n-\n-    }\n-\n-    public void testBadCharacters() {\n-        assertEquals(\"H452\", this.getEncoder().encode(\"HOL>MES\"));\n-\n-    }\n-\n-    public void testEncodeIgnoreApostrophes() {\n-        this.encodeAll(new String[] { \"OBrien\", \"'OBrien\", \"O'Brien\", \"OB'rien\", \"OBr'ien\", \"OBri'en\", \"OBrie'n\", \"OBrien'\" }, \"O165\");\n+        Assert.assertEquals(\"H452\", this.getSoundexEncoder().encode(\"HOLMES\"));\n+        Assert.assertEquals(\"A355\", this.getSoundexEncoder().encode(\"ADOMOMI\"));\n+        Assert.assertEquals(\"V536\", this.getSoundexEncoder().encode(\"VONDERLEHR\"));\n+        Assert.assertEquals(\"B400\", this.getSoundexEncoder().encode(\"BALL\"));\n+        Assert.assertEquals(\"S000\", this.getSoundexEncoder().encode(\"SHAW\"));\n+        Assert.assertEquals(\"J250\", this.getSoundexEncoder().encode(\"JACKSON\"));\n+        Assert.assertEquals(\"S545\", this.getSoundexEncoder().encode(\"SCANLON\"));\n+        Assert.assertEquals(\"S532\", this.getSoundexEncoder().encode(\"SAINTJOHN\"));\n+\n+    }\n+\n+    public void testEncodeIgnoreApostrophes() throws EncoderException {\n+        this.checkEncodingVariations(\"O165\", (new String[]{\n+            \"OBrien\",\n+            \"'OBrien\",\n+            \"O'Brien\",\n+            \"OB'rien\",\n+            \"OBr'ien\",\n+            \"OBri'en\",\n+            \"OBrie'n\",\n+            \"OBrien'\"}));\n     }\n \n     /**\n      * Test data from http://www.myatt.demon.co.uk/sxalg.htm\n-     */\n-    public void testEncodeIgnoreHyphens() {\n-        this.encodeAll(\n-            new String[] {\n-                \"KINGSMITH\",\n-                \"-KINGSMITH\",\n-                \"K-INGSMITH\",\n-                \"KI-NGSMITH\",\n-                \"KIN-GSMITH\",\n-                \"KING-SMITH\",\n-                \"KINGS-MITH\",\n-                \"KINGSM-ITH\",\n-                \"KINGSMI-TH\",\n-                \"KINGSMIT-H\",\n-                \"KINGSMITH-\" },\n-            \"K525\");\n+     * \n+     * @throws EncoderException\n+     */\n+    public void testEncodeIgnoreHyphens() throws EncoderException {\n+        this.checkEncodingVariations(\"K525\", (new String[]{\n+            \"KINGSMITH\",\n+            \"-KINGSMITH\",\n+            \"K-INGSMITH\",\n+            \"KI-NGSMITH\",\n+            \"KIN-GSMITH\",\n+            \"KING-SMITH\",\n+            \"KINGS-MITH\",\n+            \"KINGSM-ITH\",\n+            \"KINGSMI-TH\",\n+            \"KINGSMIT-H\",\n+            \"KINGSMITH-\"}));\n     }\n \n     public void testEncodeIgnoreTrimmable() {\n-        assertEquals(\"W252\", this.getEncoder().encode(\" \\t\\n\\r Washington \\t\\n\\r \"));\n-    }\n-\n-    /**\n-     * Consonants from the same code group separated by W or H are treated as\n-     * one.\n+        Assert.assertEquals(\"W252\", this.getSoundexEncoder().encode(\" \\t\\n\\r Washington \\t\\n\\r \"));\n+    }\n+\n+    /**\n+     * Consonants from the same code group separated by W or H are treated as one.\n      */\n     public void testHWRuleEx1() {\n         // From\n         // http://www.archives.gov/research_room/genealogy/census/soundex.html:\n         // Ashcraft is coded A-261 (A, 2 for the S, C ignored, 6 for the R, 1\n         // for the F). It is not coded A-226.\n-        assertEquals(\"A261\", this.getEncoder().encode(\"Ashcraft\"));\n-    }\n-\n-    /**\n-     * Consonants from the same code group separated by W or H are treated as\n-     * one.\n-     *\n+        Assert.assertEquals(\"A261\", this.getSoundexEncoder().encode(\"Ashcraft\"));\n+    }\n+\n+    /**\n+     * Consonants from the same code group separated by W or H are treated as one.\n+     * \n      * Test data from http://www.myatt.demon.co.uk/sxalg.htm\n      */\n     public void testHWRuleEx2() {\n-        assertEquals(\"B312\", this.getEncoder().encode(\"BOOTHDAVIS\"));\n-        assertEquals(\"B312\", this.getEncoder().encode(\"BOOTH-DAVIS\"));\n-    }\n-\n-    /**\n-     * Consonants from the same code group separated by W or H are treated as\n-     * one.\n-     */\n-    public void testHWRuleEx3() {\n-        assertEquals(\"S460\", this.getEncoder().encode(\"Sgler\"));\n-        assertEquals(\"S460\", this.getEncoder().encode(\"Swhgler\"));\n+        Assert.assertEquals(\"B312\", this.getSoundexEncoder().encode(\"BOOTHDAVIS\"));\n+        Assert.assertEquals(\"B312\", this.getSoundexEncoder().encode(\"BOOTH-DAVIS\"));\n+    }\n+\n+    /**\n+     * Consonants from the same code group separated by W or H are treated as one.\n+     * \n+     * @throws EncoderException\n+     */\n+    public void testHWRuleEx3() throws EncoderException {\n+        Assert.assertEquals(\"S460\", this.getSoundexEncoder().encode(\"Sgler\"));\n+        Assert.assertEquals(\"S460\", this.getSoundexEncoder().encode(\"Swhgler\"));\n         // Also S460:\n-        this.encodeAll(\n-            new String[] {\n-                \"SAILOR\",\n-                \"SALYER\",\n-                \"SAYLOR\",\n-                \"SCHALLER\",\n-                \"SCHELLER\",\n-                \"SCHILLER\",\n-                \"SCHOOLER\",\n-                \"SCHULER\",\n-                \"SCHUYLER\",\n-                \"SEILER\",\n-                \"SEYLER\",\n-                \"SHOLAR\",\n-                \"SHULER\",\n-                \"SILAR\",\n-                \"SILER\",\n-                \"SILLER\" },\n-            \"S460\");\n+        this.checkEncodingVariations(\"S460\", (new String[]{\n+            \"SAILOR\",\n+            \"SALYER\",\n+            \"SAYLOR\",\n+            \"SCHALLER\",\n+            \"SCHELLER\",\n+            \"SCHILLER\",\n+            \"SCHOOLER\",\n+            \"SCHULER\",\n+            \"SCHUYLER\",\n+            \"SEILER\",\n+            \"SEYLER\",\n+            \"SHOLAR\",\n+            \"SHULER\",\n+            \"SILAR\",\n+            \"SILER\",\n+            \"SILLER\"}));\n     }\n \n     public void testMaxLength() throws Exception {\n         Soundex soundex = new Soundex();\n         soundex.setMaxLength(soundex.getMaxLength());\n-        assertEquals(\"S460\", this.getEncoder().encode(\"Sgler\"));\n+        Assert.assertEquals(\"S460\", this.getSoundexEncoder().encode(\"Sgler\"));\n     }\n \n     public void testMaxLengthLessThan3Fix() throws Exception {\n         Soundex soundex = new Soundex();\n         soundex.setMaxLength(2);\n-        assertEquals(\"S460\", soundex.encode(\"SCHELLER\"));\n+        Assert.assertEquals(\"S460\", soundex.encode(\"SCHELLER\"));\n     }\n \n     /**\n      * http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_setu-sus_3o6w.asp\n      */\n     public void testMsSqlServer1() {\n-        assertEquals(\"S530\", this.getEncoder().encode(\"Smith\"));\n-        assertEquals(\"S530\", this.getEncoder().encode(\"Smythe\"));\n+        Assert.assertEquals(\"S530\", this.getSoundexEncoder().encode(\"Smith\"));\n+        Assert.assertEquals(\"S530\", this.getSoundexEncoder().encode(\"Smythe\"));\n     }\n \n     /**\n      * Examples for MS SQLServer from\n-     * http://support.microsoft.com/default.aspx?scid=http://support.microsoft.com:80/support/kb/articles/Q100/3/65.asp&NoWebContent=1\n-     */\n-    public void testMsSqlServer2() {\n-        this.encodeAll(new String[]{\"Erickson\", \"Erickson\", \"Erikson\", \"Ericson\", \"Ericksen\", \"Ericsen\"}, \"E625\");\n-    }\n-    /**\n-     * Examples for MS SQLServer from\n-     * http://databases.about.com/library/weekly/aa042901a.htm\n+     * http://support.microsoft.com/default.aspx?scid=http://support.microsoft.com:80/support\n+     * /kb/articles/Q100/3/65.asp&NoWebContent=1\n+     * \n+     * @throws EncoderException\n+     */\n+    public void testMsSqlServer2() throws EncoderException {\n+        this.checkEncodingVariations(\"E625\", (new String[]{\"Erickson\", \"Erickson\", \"Erikson\", \"Ericson\", \"Ericksen\", \"Ericsen\"}));\n+    }\n+\n+    /**\n+     * Examples for MS SQLServer from http://databases.about.com/library/weekly/aa042901a.htm\n      */\n     public void testMsSqlServer3() {\n-        assertEquals(\"A500\", this.getEncoder().encode(\"Ann\"));\n-        assertEquals(\"A536\", this.getEncoder().encode(\"Andrew\"));\n-        assertEquals(\"J530\", this.getEncoder().encode(\"Janet\"));\n-        assertEquals(\"M626\", this.getEncoder().encode(\"Margaret\"));\n-        assertEquals(\"S315\", this.getEncoder().encode(\"Steven\"));\n-        assertEquals(\"M240\", this.getEncoder().encode(\"Michael\"));\n-        assertEquals(\"R163\", this.getEncoder().encode(\"Robert\"));\n-        assertEquals(\"L600\", this.getEncoder().encode(\"Laura\"));\n-        assertEquals(\"A500\", this.getEncoder().encode(\"Anne\"));\n+        Assert.assertEquals(\"A500\", this.getSoundexEncoder().encode(\"Ann\"));\n+        Assert.assertEquals(\"A536\", this.getSoundexEncoder().encode(\"Andrew\"));\n+        Assert.assertEquals(\"J530\", this.getSoundexEncoder().encode(\"Janet\"));\n+        Assert.assertEquals(\"M626\", this.getSoundexEncoder().encode(\"Margaret\"));\n+        Assert.assertEquals(\"S315\", this.getSoundexEncoder().encode(\"Steven\"));\n+        Assert.assertEquals(\"M240\", this.getSoundexEncoder().encode(\"Michael\"));\n+        Assert.assertEquals(\"R163\", this.getSoundexEncoder().encode(\"Robert\"));\n+        Assert.assertEquals(\"L600\", this.getSoundexEncoder().encode(\"Laura\"));\n+        Assert.assertEquals(\"A500\", this.getSoundexEncoder().encode(\"Anne\"));\n+    }\n+\n+    /**\n+     * https://issues.apache.org/jira/browse/CODEC-54 https://issues.apache.org/jira/browse/CODEC-56\n+     */\n+    public void testNewInstance() {\n+        Assert.assertEquals(\"W452\", new Soundex().soundex(\"Williams\"));\n+    }\n+\n+    public void testNewInstance2() {\n+        Assert.assertEquals(\"W452\", new Soundex(Soundex.US_ENGLISH_MAPPING_STRING.toCharArray()).soundex(\"Williams\"));\n+    }\n+\n+    public void testNewInstance3() {\n+        Assert.assertEquals(\"W452\", new Soundex(Soundex.US_ENGLISH_MAPPING_STRING).soundex(\"Williams\"));\n+    }\n+\n+    public void testSoundexUtilsConstructable() {\n+        new SoundexUtils();\n+    }\n+\n+    public void testSoundexUtilsNullBehaviour() {\n+        Assert.assertEquals(null, SoundexUtils.clean(null));\n+        Assert.assertEquals(\"\", SoundexUtils.clean(\"\"));\n+        Assert.assertEquals(0, SoundexUtils.differenceEncoded(null, \"\"));\n+        Assert.assertEquals(0, SoundexUtils.differenceEncoded(\"\", null));\n+    }\n+\n+    /**\n+     * https://issues.apache.org/jira/browse/CODEC-54 https://issues.apache.org/jira/browse/CODEC-56\n+     */\n+    public void testUsEnglishStatic() {\n+        Assert.assertEquals(\"W452\", Soundex.US_ENGLISH.soundex(\"Williams\"));\n     }\n \n     /**\n      * Fancy characters are not mapped by the default US mapping.\n-     *\n+     * \n      * http://issues.apache.org/bugzilla/show_bug.cgi?id=29080\n      */\n-    public void testUsMappingOWithDiaeresis() {\n-        assertEquals(\"O000\", this.getEncoder().encode(\"o\"));\n-        if ( Character.isLetter('') ) {\n+    public void testUsMappingEWithAcute() {\n+        Assert.assertEquals(\"E000\", this.getSoundexEncoder().encode(\"e\"));\n+        if (Character.isLetter('')) {\n             try {\n-                assertEquals(\"000\", this.getEncoder().encode(\"\"));\n-                fail(\"Expected IllegalArgumentException not thrown\");\n+                Assert.assertEquals(\"000\", this.getSoundexEncoder().encode(\"\"));\n+                Assert.fail(\"Expected IllegalArgumentException not thrown\");\n             } catch (IllegalArgumentException e) {\n                 // expected\n             }\n         } else {\n-            assertEquals(\"\", this.getEncoder().encode(\"\"));\n+            Assert.assertEquals(\"\", this.getSoundexEncoder().encode(\"\"));\n         }\n     }\n \n     /**\n      * Fancy characters are not mapped by the default US mapping.\n-     *\n+     * \n      * http://issues.apache.org/bugzilla/show_bug.cgi?id=29080\n      */\n-    public void testUsMappingEWithAcute() {\n-        assertEquals(\"E000\", this.getEncoder().encode(\"e\"));\n-        if ( Character.isLetter('') ) {\n+    public void testUsMappingOWithDiaeresis() {\n+        Assert.assertEquals(\"O000\", this.getSoundexEncoder().encode(\"o\"));\n+        if (Character.isLetter('')) {\n             try {\n-                assertEquals(\"000\", this.getEncoder().encode(\"\"));\n-                fail(\"Expected IllegalArgumentException not thrown\");\n+                Assert.assertEquals(\"000\", this.getSoundexEncoder().encode(\"\"));\n+                Assert.fail(\"Expected IllegalArgumentException not thrown\");\n             } catch (IllegalArgumentException e) {\n                 // expected\n             }\n         } else {\n-            assertEquals(\"\", this.getEncoder().encode(\"\"));\n+            Assert.assertEquals(\"\", this.getSoundexEncoder().encode(\"\"));\n         }\n     }\n-    \n-    /**\n-     * https://issues.apache.org/jira/browse/CODEC-54\n-     * https://issues.apache.org/jira/browse/CODEC-56\n-     */\n-    public void testUsEnglishStatic() {\n-        assertEquals(\"W452\", Soundex.US_ENGLISH.soundex(\"Williams\"));\n-    }\n-\n-    /**\n-     * https://issues.apache.org/jira/browse/CODEC-54\n-     * https://issues.apache.org/jira/browse/CODEC-56\n-     */\n-    public void testNewInstance() {\n-        assertEquals(\"W452\", new Soundex().soundex(\"Williams\"));\n-    }\n-    \n-    public void testNewInstance2() {\n-        assertEquals(\"W452\", new Soundex(Soundex.US_ENGLISH_MAPPING_STRING.toCharArray()).soundex(\"Williams\"));\n-    }\n-    \n-    public void testNewInstance3() {\n-        assertEquals(\"W452\", new Soundex(Soundex.US_ENGLISH_MAPPING_STRING).soundex(\"Williams\"));\n-    }\n-\n-    public void testSoundexUtilsNullBehaviour() {\n-        assertEquals(null, SoundexUtils.clean(null));\n-        assertEquals(\"\", SoundexUtils.clean(\"\"));\n-        assertEquals(0, SoundexUtils.differenceEncoded(null, \"\"));\n-        assertEquals(0, SoundexUtils.differenceEncoded(\"\", null));\n-    }\n-    public void testSoundexUtilsConstructable() {\n-        new SoundexUtils();\n-    }\n }", "timestamp": 1298913015, "metainfo": ""}