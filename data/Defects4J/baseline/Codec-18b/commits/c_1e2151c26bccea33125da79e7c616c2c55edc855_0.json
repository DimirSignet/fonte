{"sha": "1e2151c26bccea33125da79e7c616c2c55edc855", "log": "Replace magic number (-1) with EOF constant.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodec.java\n+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodec.java\n  */\n public abstract class BaseNCodec implements BinaryEncoder, BinaryDecoder {\n \n+    static final int EOF = -1;\n+\n     /**\n      *  MIME chunk size per RFC 2045 section 6.8.\n      *\n             }\n             return len;\n         }\n-        return eof ? -1 : 0;\n+        return eof ? EOF : 0;\n     }\n \n     /**\n             return pArray;\n         }\n         decode(pArray, 0, pArray.length);\n-        decode(pArray, 0, -1); // Notify decoder of EOF.\n+        decode(pArray, 0, EOF); // Notify decoder of EOF.\n         byte[] result = new byte[pos];\n         readResults(result, 0, result.length);\n         return result;\n             return pArray;\n         }\n         encode(pArray, 0, pArray.length);\n-        encode(pArray, 0, -1); // Notify encoder of EOF.\n+        encode(pArray, 0, EOF); // Notify encoder of EOF.\n         byte[] buf = new byte[pos - readPos];\n         readResults(buf, 0, buf.length);\n         return buf;\n--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java\n+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java\n  */\n \n package org.apache.commons.codec.binary;\n+\n+import static org.apache.commons.codec.binary.BaseNCodec.EOF;\n \n import java.io.FilterInputStream;\n import java.io.IOException;\n             final byte b = singleByte[0];\n             return b < 0 ? 256 + b : b;\n         }\n-        return -1;\n+        return EOF;\n     }\n \n     /**\n--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java\n+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java\n  */\n \n package org.apache.commons.codec.binary;\n+\n+import static org.apache.commons.codec.binary.BaseNCodec.EOF;\n \n import java.io.FilterOutputStream;\n import java.io.IOException;\n     public void close() throws IOException {\n         // Notify encoder of EOF (-1).\n         if (doEncode) {\n-            baseNCodec.encode(singleByte, 0, -1);\n+            baseNCodec.encode(singleByte, 0, EOF);\n         } else {\n-            baseNCodec.decode(singleByte, 0, -1);\n+            baseNCodec.decode(singleByte, 0, EOF);\n         }\n         flush();\n         out.close();", "timestamp": 1331931018, "metainfo": ""}