{"sha": "c38480da2f7e5447389494a10032b99810085185", "log": "author tag change, removed my email address from author tags   ", "commit": "\n--- a/src/java/org/apache/commons/codec/BinaryDecoder.java\n+++ b/src/java/org/apache/commons/codec/BinaryDecoder.java\n  * This interface defines common decoding methods for decoders\n  * which decode byte arrays.\n  *\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: BinaryDecoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: BinaryDecoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface BinaryDecoder extends Decoder {\n \n--- a/src/java/org/apache/commons/codec/BinaryEncoder.java\n+++ b/src/java/org/apache/commons/codec/BinaryEncoder.java\n  * A binary encoder contains methods common to all\n  * encoders for binary data. \n  * \n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: BinaryEncoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: BinaryEncoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface BinaryEncoder extends Encoder {\n     \n--- a/src/java/org/apache/commons/codec/Decoder.java\n+++ b/src/java/org/apache/commons/codec/Decoder.java\n  * which allows a user to pass a generic Object to any\n  * Decoder implementation in the codec package.\n  * \n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: Decoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: Decoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface Decoder {\n \n--- a/src/java/org/apache/commons/codec/DecoderException.java\n+++ b/src/java/org/apache/commons/codec/DecoderException.java\n  * The DecoderException is thrown when a Decoder has\n  * encounter a failure condition during a decode. \n  * \n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: DecoderException.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: DecoderException.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public class DecoderException extends Exception {\n \n--- a/src/java/org/apache/commons/codec/Encoder.java\n+++ b/src/java/org/apache/commons/codec/Encoder.java\n  * the highest level of abstraction for Encoders.  All\n  * Encoders implement this common generic interface.\n  *\n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: Encoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: Encoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface Encoder {\n     \n--- a/src/java/org/apache/commons/codec/EncoderException.java\n+++ b/src/java/org/apache/commons/codec/EncoderException.java\n  * An EncoderException is thrown when there is a\n  * failure condition during the encoding process.\n  * \n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: EncoderException.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: EncoderException.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public class EncoderException extends Exception {\n \n--- a/src/java/org/apache/commons/codec/StringDecoder.java\n+++ b/src/java/org/apache/commons/codec/StringDecoder.java\n  * a method parameter and one that produces a String as the\n  * output of the decoding process.\n  *\n- * @author tobrien@transolutions.net\n- * @version $Id: StringDecoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: StringDecoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface StringDecoder extends Decoder {\n     \n--- a/src/java/org/apache/commons/codec/StringEncoder.java\n+++ b/src/java/org/apache/commons/codec/StringEncoder.java\n  * a method parameter and one that produces a String as the\n  * output of the Encoding process.\n  *\n- * @author tobrien@transolutions.net\n- * @version $Id: StringEncoder.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: StringEncoder.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public interface StringEncoder extends Encoder {\n     \n--- a/src/java/org/apache/commons/codec/StringEncoderComparator.java\n+++ b/src/java/org/apache/commons/codec/StringEncoderComparator.java\n  * handy if one need to sort Strings by an encoded\n  * form of a name such as Soundex.\n  *\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: StringEncoderComparator.java,v 1.2 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: StringEncoderComparator.java,v 1.3 2003/07/30 22:34:17 tobrien Exp $\n  */\n public class StringEncoderComparator implements Comparator {\n \n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.6 2003/07/25 22:48:11 ggregory Exp $\n- * $Revision: 1.6 $\n- * $Date: 2003/07/25 22:48:11 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.7 2003/07/30 22:34:17 tobrien Exp $\n+ * $Revision: 1.7 $\n+ * $Date: 2003/07/30 22:34:17 $\n   *\n   * ====================================================================\n   *\n   * Internet Message Bodies. Reference 1996.\n   *\n   * @author Jeffrey Rodriguez\n-  * @author <a href=\"dlr@apache.org\">Daniel Rall</a>\n-  * @author <a href=\"m.redington@ucl.ac.uk\">Martin Redington</a>\n+  * @author <a href=\"mailto:dlr@apache.org\">Daniel Rall</a>\n+  * @author <a href=\"mailto:m.redington@ucl.ac.uk\">Martin Redington</a>\n   * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n-  * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+  * @author Tim O'Brien\n   * @since 1.0-dev\n-  * @version $Id: Base64.java,v 1.6 2003/07/25 22:48:11 ggregory Exp $\n+  * @version $Id: Base64.java,v 1.7 2003/07/30 22:34:17 tobrien Exp $\n   */\n public class Base64 implements BinaryEncoder, BinaryDecoder {\n \n--- a/src/java/org/apache/commons/codec/binary/Hex.java\n+++ b/src/java/org/apache/commons/codec/binary/Hex.java\n  * Hex encoder/decoder.\n  * \n  * @author <a href=\"mailto:siege@preoccupied.net\">Christopher O'Brien</a>\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- * @version $Id: Hex.java,v 1.5 2003/07/25 22:56:22 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: Hex.java,v 1.6 2003/07/30 22:34:17 tobrien Exp $\n  */\n public class Hex implements BinaryEncoder, BinaryDecoder {\n \n--- a/src/java/org/apache/commons/codec/language/Metaphone.java\n+++ b/src/java/org/apache/commons/codec/language/Metaphone.java\n  * \n  * @author wbrogden@bga.com\n  * @author bayard@generationjava.com\n- * @author tobrien@transolutions.net\n- * @version $Id: Metaphone.java,v 1.3 2003/07/25 22:48:11 ggregory Exp $\n+ * @author Tim O'Brien\n+ * @version $Id: Metaphone.java,v 1.4 2003/07/30 22:34:18 tobrien Exp $\n  */\n public class Metaphone implements StringEncoder {\n \n--- a/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n+++ b/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n  * \"Soundex\" method originally developed by Margaret Odell and \n  * Robert Russell\n  * \n- * @author tobrien@transolutions.net\n+ * @author Tim O'Brien\n  * @author ggregory@seagullsw.com\n- * @version $Id: RefinedSoundex.java,v 1.6 2003/07/25 22:48:11 ggregory Exp $\n+ * @version $Id: RefinedSoundex.java,v 1.7 2003/07/30 22:34:18 tobrien Exp $\n  */\n public class RefinedSoundex implements StringEncoder {\n \n--- a/src/java/org/apache/commons/codec/language/Soundex.java\n+++ b/src/java/org/apache/commons/codec/language/Soundex.java\n  * scheme to find word with similar phonemes. \n  * \n  * @author bayard@generationjava.com\n- * @author tobrien@transolutions.net\n+ * @author Tim O'Brien\n  * @author ggregory@seagullsw.com\n- * @version $Id: Soundex.java,v 1.5 2003/07/25 22:48:11 ggregory Exp $\n+ * @version $Id: Soundex.java,v 1.6 2003/07/30 22:34:18 tobrien Exp $\n  */\n public class Soundex implements StringEncoder {\n \n--- a/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java\n+++ b/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java,v 1.1 2003/04/25 17:50:56 tobrien Exp $\n- * $Revision: 1.1 $\n- * $Date: 2003/04/25 17:50:56 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java,v 1.2 2003/07/30 22:34:18 tobrien Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2003/07/30 22:34:18 $\n  *\n  * ====================================================================\n  *\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.1 $ $Date: 2003/04/25 17:50:56 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/30 22:34:18 $\n  * @author Rodney Waldhoff\n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n+ * @author Tim O'Brien\n  */\n public abstract class BinaryEncoderAbstractTest extends TestCase {\n \n--- a/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,v 1.1 2003/04/25 17:50:56 tobrien Exp $\n- * $Revision: 1.1 $\n- * $Date: 2003/04/25 17:50:56 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,v 1.2 2003/07/30 22:34:18 tobrien Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2003/07/30 22:34:18 $\n  *\n  * ====================================================================\n  *\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.1 $ $Date: 2003/04/25 17:50:56 $\n+ * @version $Revision: 1.2 $ $Date: 2003/07/30 22:34:18 $\n  * @author Rodney Waldhoff\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @author Tim O'Brien\n  */\n public abstract class StringEncoderAbstractTest extends TestCase {\n \n--- a/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n-/*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,v 1.1 2003/04/25 17:50:56 tobrien Exp $\n- * $Revision: 1.1 $\n- * $Date: 2003/04/25 17:50:56 $\n- *\n- * ====================================================================\n- *\n- * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n- *       \"This product includes software developed by the\n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n- *\n- * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written\n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\"\n- *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n- */\n-package org.apache.commons.codec;\n-\n-import junit.framework.TestCase;\n-\n-import org.apache.commons.codec.language.Soundex;\n-\n-/**\n- * @version $Revision: 1.1 $ $Date: 2003/04/25 17:50:56 $\n- * @author <a href=\"tobrien@apache.org\">Tim O'Brien</a>\n- */\n-public class StringEncoderComparatorTest extends TestCase {\n-\n-    public StringEncoderComparatorTest(String name) {\n-        super(name);\n-    }\n-\n-    public void testComparatorNoArgCon() throws Exception {\n-        new StringEncoderComparator();\n-    }        \n-\n-    public void testComparatorWithSoundex() throws Exception {\n-        StringEncoderComparator sCompare = \n-            new StringEncoderComparator( new Soundex() );\n-\n-        assertTrue( \"O'Brien and O'Brian didn't come out with \" +\n-                    \"the same Soundex, something must be wrong here\",\n-                    0 == sCompare.compare( \"O'Brien\", \"O'Brian\" ) );\n-\n-    }\n-\n-}\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,v 1.2 2003/07/30 22:34:18 tobrien Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2003/07/30 22:34:18 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.codec;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.commons.codec.language.Soundex;\n+\n+/**\n+ * @version $Revision: 1.2 $ $Date: 2003/07/30 22:34:18 $\n+ * @author Tim O'Brien\n+ */\n+public class StringEncoderComparatorTest extends TestCase {\n+\n+    public StringEncoderComparatorTest(String name) {\n+        super(name);\n+    }\n+\n+    public void testComparatorNoArgCon() throws Exception {\n+        new StringEncoderComparator();\n+    }        \n+\n+    public void testComparatorWithSoundex() throws Exception {\n+        StringEncoderComparator sCompare = \n+            new StringEncoderComparator( new Soundex() );\n+\n+        assertTrue( \"O'Brien and O'Brian didn't come out with \" +\n+                    \"the same Soundex, something must be wrong here\",\n+                    0 == sCompare.compare( \"O'Brien\", \"O'Brian\" ) );\n+\n+    }\n+\n+}\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/Base64Test.java,v 1.4 2003/07/25 22:57:35 ggregory Exp $\n- * $Revision: 1.4 $\n- * $Date: 2003/07/25 22:57:35 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/Base64Test.java,v 1.5 2003/07/30 22:34:18 tobrien Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2003/07/30 22:34:18 $\n  *\n  * ====================================================================\n  *\n import junit.framework.TestCase;\n \n /**\n- * @version $Revision: 1.4 $ $Date: 2003/07/25 22:57:35 $\n+ * @version $Revision: 1.5 $ $Date: 2003/07/30 22:34:18 $\n  * @author <a href=\"mailto:sanders@apache.org\">Scott Sanders</a>\n  * @author <a href=\"mailto:rwaldhoff@apache.org\">Rodney Waldhoff</a>\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n+ * @author Tim O'Brien\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  */\n public class Base64Test extends TestCase {\n--- a/src/test/org/apache/commons/codec/binary/HexTest.java\n+++ b/src/test/org/apache/commons/codec/binary/HexTest.java\n-/*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/HexTest.java,v 1.1 2003/04/25 17:50:56 tobrien Exp $\n- * $Revision: 1.1 $\n- * $Date: 2003/04/25 17:50:56 $\n- *\n- * ====================================================================\n- *\n- * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 2003 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution, if\n- *    any, must include the following acknowlegement:\n- *       \"This product includes software developed by the\n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowlegement may appear in the software itself,\n- *    if and wherever such third-party acknowlegements normally appear.\n- *\n- * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written\n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\"\n- *    nor may \"Apache\" appear in their names without prior written\n- *    permission of the Apache Group.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n- * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n- */\n-package org.apache.commons.codec.binary;\n-\n-import java.util.Arrays;\n-import java.util.Random;\n-\n-import junit.framework.TestCase;\n-\n-/**\n- * \n- * @author <a href=\"mailto:siege@preoccupied.net\">Christopher O'Brien</a>\n- * @author <a href=\"mailto:tobrien@apache.org\">Tim O'Brien</a>\n- */\n-\n-public class HexTest extends TestCase {\n-\n-    public HexTest(String name) {\n-        super(name);\n-    }\n-\n-    public void testEncodeEmpty() throws Exception {\n-        char[] c = Hex.encodeHex(new byte[0]);\n-        assertTrue(Arrays.equals(new char[0], c));\n-    }\n-\n-    public void testEncodeZeroes() throws Exception {\n-        char[] c = Hex.encodeHex(new byte[36]);\n-        assertEquals(\n-            \"000000000000000000000000000000000000\"\n-                + \"000000000000000000000000000000000000\",\n-            new String(c));\n-    }\n-\n-    public void testHelloWorld() throws Exception {\n-        byte[] b = \"Hello World\".getBytes();\n-        char[] c = Hex.encodeHex(b);\n-        assertEquals(\"48656c6c6f20576f726c64\", new String(c));\n-    }\n-\n-    public void testEncodeDecodeRandom() throws Exception {\n-        Random random = new Random();\n-\n-        for (int i = 5; i > 0; i--) {\n-            byte[] data = new byte[random.nextInt(10000) + 1];\n-            random.nextBytes(data);\n-\n-            char[] enc = Hex.encodeHex(data);\n-            byte[] data2 = Hex.decodeHex(enc);\n-\n-            assertTrue(Arrays.equals(data, data2));\n-        }\n-    }\n-\n-    public void testOddCharacters() throws Exception {\n-\n-        boolean exceptionThrown = false;\n-\n-        try {\n-            char[] singleChar = new char[1];\n-            singleChar[0] = 'a';\n-\n-            Hex.decodeHex( singleChar );\n-        }\n-        catch (Exception e) {\n-            exceptionThrown = true;\n-        }\n-\n-        assertTrue( \"An exception wasn't thrown when trying to \" +\n-                    \"decode an odd number of characters\", exceptionThrown );\n-\n-\n-    }\n-\n-}\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/binary/HexTest.java,v 1.2 2003/07/30 22:34:18 tobrien Exp $\n+ * $Revision: 1.2 $\n+ * $Date: 2003/07/30 22:34:18 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.codec.binary;\n+\n+import java.util.Arrays;\n+import java.util.Random;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * \n+ * @author <a href=\"mailto:siege@preoccupied.net\">Christopher O'Brien</a>\n+ * @author Tim O'Brien\n+ */\n+\n+public class HexTest extends TestCase {\n+\n+    public HexTest(String name) {\n+        super(name);\n+    }\n+\n+    public void testEncodeEmpty() throws Exception {\n+        char[] c = Hex.encodeHex(new byte[0]);\n+        assertTrue(Arrays.equals(new char[0], c));\n+    }\n+\n+    public void testEncodeZeroes() throws Exception {\n+        char[] c = Hex.encodeHex(new byte[36]);\n+        assertEquals(\n+            \"000000000000000000000000000000000000\"\n+                + \"000000000000000000000000000000000000\",\n+            new String(c));\n+    }\n+\n+    public void testHelloWorld() throws Exception {\n+        byte[] b = \"Hello World\".getBytes();\n+        char[] c = Hex.encodeHex(b);\n+        assertEquals(\"48656c6c6f20576f726c64\", new String(c));\n+    }\n+\n+    public void testEncodeDecodeRandom() throws Exception {\n+        Random random = new Random();\n+\n+        for (int i = 5; i > 0; i--) {\n+            byte[] data = new byte[random.nextInt(10000) + 1];\n+            random.nextBytes(data);\n+\n+            char[] enc = Hex.encodeHex(data);\n+            byte[] data2 = Hex.decodeHex(enc);\n+\n+            assertTrue(Arrays.equals(data, data2));\n+        }\n+    }\n+\n+    public void testOddCharacters() throws Exception {\n+\n+        boolean exceptionThrown = false;\n+\n+        try {\n+            char[] singleChar = new char[1];\n+            singleChar[0] = 'a';\n+\n+            Hex.decodeHex( singleChar );\n+        }\n+        catch (Exception e) {\n+            exceptionThrown = true;\n+        }\n+\n+        assertTrue( \"An exception wasn't thrown when trying to \" +\n+                    \"decode an odd number of characters\", exceptionThrown );\n+\n+\n+    }\n+\n+}", "timestamp": 1059604458, "metainfo": ""}