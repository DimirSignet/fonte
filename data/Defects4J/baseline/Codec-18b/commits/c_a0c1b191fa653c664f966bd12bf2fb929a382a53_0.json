{"sha": "a0c1b191fa653c664f966bd12bf2fb929a382a53", "log": "Fix some typos. Tidy test cases.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n import java.util.Arrays;\n import java.util.Random;\n import java.math.BigInteger;\n+\n+import org.apache.commons.codec.DecoderException;\n+import org.apache.commons.codec.EncoderException;\n+\n import junit.framework.TestCase;\n \n /**\n+ * Testcases for Base64 class.\n+ * \n  * @author Apache Software Foundation\n  * @version $Id$\n  */\n                      \"an array of Base64 encoded data\", \n                      Base64.isArrayByteBase64( bArray ) );\n         \n-        boolean exceptionThrown = false;\n-\n         try {\n             Base64 b64 = new Base64();\n             byte[] result = b64.decode( bArray );\n                 \"not contain any valid base 64 characters\", result.length == 0);\n         } \n         catch( Exception e ) {\n-            exceptionThrown = true;\n-        }\n-\n-        assertFalse( \"Exception was thrown when trying to decode \" +\n+            fail( \"Exception was thrown when trying to decode \" +\n                     \"invalid base64 encoded data - RFC 2045 requires that all \" +\n                     \"non base64 character be discarded, an exception should not\" +\n-                    \" have been thrown\", exceptionThrown );\n-          \n-\n+                    \" have been thrown\");\n+        }\n     }\n     \n     public void testIgnoringNonBase64InDecode() throws Exception {\n     }\n \n     public void testObjectDecodeWithInvalidParameter() throws Exception {\n-        boolean exceptionThrown = false;\n-\n         Base64 b64 = new Base64();\n \n         try {\n-            Object o = \"Yadayadayada\";\n-            b64.decode( o );\n-        } catch( Exception e ) {\n-            exceptionThrown = true;\n+            b64.decode( \"Yadayadayada\");\n+            fail( \"decode(Object) didn't throw an exception when passed a String object\");\n+        } catch( DecoderException e ) {\n+            // ignored\n         }\n \n-        assertTrue( \"decode(Object) didn't throw an exception when passed a \" +\n-                    \"String object\", exceptionThrown );\n     }\n \n     public void testObjectDecodeWithValidParameter() throws Exception {\n         byte[] baDecoded = (byte[]) oDecoded;\n         String dest = new String( baDecoded );\n \n-        assertTrue( \"dest string down not equal original\",\n+        assertTrue( \"dest string does not equal original\",\n                     dest.equals( original ) );\n     }\n \n     public void testObjectEncodeWithInvalidParameter() throws Exception {\n-        boolean exceptionThrown = false;\n-\n         Base64 b64 = new Base64();\n \n         try {\n-            Object o = \"Yadayadayada\";\n-            b64.encode( o );\n-        } catch( Exception e ) {\n-            exceptionThrown = true;\n+            b64.encode( \"Yadayadayada\" );\n+            fail( \"encode(Object) didn't throw an exception when passed a String object\");\n+        } catch( EncoderException e ) {\n         }\n-\n-        assertTrue( \"encode(Object) didn't throw an exception when passed a \" +\n-                    \"String object\", exceptionThrown );\n     }\n \n     public void testObjectEncodeWithValidParameter() throws Exception {\n             Base64.decodeBase64( (byte[]) oEncoded );\n         String dest = new String( bArray );\n \n-        assertTrue( \"dest string down not equal original\",\n+        assertTrue( \"dest string does not equal original\",\n                     dest.equals( original ) );\n     }\n ", "timestamp": 1213909615, "metainfo": ""}