{"sha": "3e7120c8fa69249a264face69d3f69e57b8e9c2b", "log": "ASF Bugzilla Bug 30825 [codec] Under some circumstances Base64.isArrayByteBase64() throws a ArrayIndexOutOfBoundsException. http://issues.apache.org/bugzilla/show_bug.cgi?id=30825   ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n  * @see <a href=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045</a>\n  * @author Apache Software Foundation\n  * @since 1.0-dev\n- * @version $Id: Base64.java,v 1.22 2004/10/30 00:18:57 ggregory Exp $\n+ * @version $Id: Base64.java,v 1.23 2004/11/24 19:23:25 ggregory Exp $\n  */\n public class Base64 implements BinaryEncoder, BinaryDecoder {\n \n         lookUpBase64Alphabet[63] = (byte) '/';\n     }\n \n+    /**\n+     * Returns whether or not the <code>octect</code> is in the base 64 alphabet.\n+     * \n+     * @param octect The value to test\n+     * @return <code>true</code> if the value is defined in the the base 64 alphabet, <code>false</code> otherwise.\n+     */\n     private static boolean isBase64(byte octect) {\n         if (octect == PAD) {\n             return true;\n-        } else if (base64Alphabet[octect] == -1) {\n+        } else if (octect < 0 || base64Alphabet[octect] == -1) {\n             return false;\n         } else {\n             return true;\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n import junit.framework.TestCase;\n \n /**\n- * @version $Id: Base64Test.java,v 1.15 2004/04/19 01:14:29 ggregory Exp $\n+ * @version $Id: Base64Test.java,v 1.16 2004/11/24 19:23:25 ggregory Exp $\n  * @author Apache Software Foundation\n  */\n public class Base64Test extends TestCase {\n \t\tassertEquals(\"The quick brown fox jumped over the lazy dogs.\",new String(Base64.decodeBase64(\"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\\n\\r\\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg==\".getBytes())));\n \t}\n \n+    public void testIsArrayByteBase64() {        \n+        assertFalse(Base64.isArrayByteBase64(new byte[] {Byte.MIN_VALUE}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {-125}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {-10}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {0}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {64, Byte.MAX_VALUE}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {Byte.MAX_VALUE}));\n+        assertTrue(Base64.isArrayByteBase64(new byte[] {'A'}));\n+        assertFalse(Base64.isArrayByteBase64(new byte[] {'A', Byte.MIN_VALUE}));\n+    }\n+\n     public void testObjectDecodeWithInvalidParameter() throws Exception {\n         boolean exceptionThrown = false;\n ", "timestamp": 1101324205, "metainfo": ""}