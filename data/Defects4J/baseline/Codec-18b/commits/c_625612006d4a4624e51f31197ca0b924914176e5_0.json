{"sha": "625612006d4a4624e51f31197ca0b924914176e5", "log": "Refactor common code and complete test coverage (100%, see clover report). Javadoc.   ", "commit": "\n--- a/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n  * ====================================================================\n  * \n  * The Apache Software License, Version 1.1\n- *\n- * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n- * reserved.\n- *\n+ * \n+ * Copyright (c) 2001-2003 The Apache Software Foundation. All rights reserved.\n+ * \n  * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer. \n- *\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and/or other materials provided with the\n- *    distribution.\n- *\n- * 3. The end-user documentation included with the redistribution,\n- *    if any, must include the following acknowledgement:  \n- *       \"This product includes software developed by the \n- *        Apache Software Foundation (http://www.apache.org/).\"\n- *    Alternately, this acknowledgement may appear in the software itself,\n- *    if and wherever such third-party acknowledgements normally appear.\n- *\n- * 4. The names \"Apache\", \"The Jakarta Project\", \"Commons\", and \"Apache Software\n- *    Foundation\" must not be used to endorse or promote products derived\n- *    from this software without prior written permission. For written \n- *    permission, please contact apache@apache.org.\n- *\n- * 5. Products derived from this software may not be called \"Apache\",\n- *    \"Apache\" nor may \"Apache\" appear in their name without prior \n- *    written permission of the Apache Software Foundation.\n- *\n- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n- * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n- * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n- * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n- * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n- * SUCH DAMAGE.\n+ * modification, are permitted provided that the following conditions are met:\n+ *  1. Redistributions of source code must retain the above copyright notice,\n+ * this list of conditions and the following disclaimer.\n+ *  2. Redistributions in binary form must reproduce the above copyright\n+ * notice, this list of conditions and the following disclaimer in the\n+ * documentation and/or other materials provided with the distribution.\n+ *  3. The end-user documentation included with the redistribution, if any,\n+ * must include the following acknowledgement: \"This product includes software\n+ * developed by the Apache Software Foundation (http://www.apache.org/).\"\n+ * Alternately, this acknowledgement may appear in the software itself, if and\n+ * wherever such third-party acknowledgements normally appear.\n+ *  4. The names \"Apache\", \"The Jakarta Project\", \"Commons\", and \"Apache\n+ * Software Foundation\" must not be used to endorse or promote products derived\n+ * from this software without prior written permission. For written permission,\n+ * please contact apache@apache.org.\n+ *  5. Products derived from this software may not be called \"Apache\", \"Apache\"\n+ * nor may \"Apache\" appear in their name without prior written permission of\n+ * the Apache Software Foundation.\n+ * \n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n+ * APACHE SOFTWARE FOUNDATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  * ====================================================================\n- *\n- * This software consists of voluntary contributions made by many\n- * individuals on behalf of the Apache Software Foundation.  For more\n- * information on the Apache Software Foundation, please see\n- * <http://www.apache.org/>.\n- *\n- */ \n+ * \n+ * This software consists of voluntary contributions made by many individuals\n+ * on behalf of the Apache Software Foundation. For more information on the\n+ * Apache Software Foundation, please see <http://www.apache.org/> .\n+ *  \n+ */\n \n package org.apache.commons.codec.digest;\n \n \n /**\n  * Tests Digest methods.\n- *\n+ * \n  * @author Dave Dribin\n  * @author David Graham\n+ * @author Gary Gregory\n  */\n public class DigestUtilsTest extends TestCase {\n \n-\tpublic void testMd5Hex() {\n-\t\t// Examples from RFC 1321\n-\t\tassertEquals(\"d41d8cd98f00b204e9800998ecf8427e\", DigestUtils.md5Hex(\"\"));\n+    public void testInternalNoSuchAlgorithmException() {\n+        try {\n+            DigestUtils.getDigest(\"Bogus Bogus\");\n+            fail(\"A RuntimeException should have been thrown.\");\n+        } catch (RuntimeException e) {\n+            // Expected exception.\n+        }\n+    }\n \n-\t\tassertEquals(\"0cc175b9c0f1b6a831c399e269772661\", DigestUtils.md5Hex(\"a\"));\n+    public void testMd5Hex() {\n+        // Examples from RFC 1321\n+        assertEquals(\"d41d8cd98f00b204e9800998ecf8427e\", DigestUtils.md5Hex(\"\"));\n \n-\t\tassertEquals(\"900150983cd24fb0d6963f7d28e17f72\", DigestUtils.md5Hex(\"abc\"));\n+        assertEquals(\"0cc175b9c0f1b6a831c399e269772661\", DigestUtils.md5Hex(\"a\"));\n \n-\t\tassertEquals(\n-\t\t\t\"f96b697d7cb7938d525a2f31aaf161d0\",\n-\t\t\tDigestUtils.md5Hex(\"message digest\"));\n+        assertEquals(\"900150983cd24fb0d6963f7d28e17f72\", DigestUtils.md5Hex(\"abc\"));\n \n-\t\tassertEquals(\n-\t\t\t\"c3fcd3d76192e4007dfb496cca67e13b\",\n-\t\t\tDigestUtils.md5Hex(\"abcdefghijklmnopqrstuvwxyz\"));\n+        assertEquals(\"f96b697d7cb7938d525a2f31aaf161d0\", DigestUtils.md5Hex(\"message digest\"));\n \n-\t\tassertEquals(\n-\t\t\t\"d174ab98d277d9f5a5611c2c9f419d9f\",\n-\t\t\tDigestUtils.md5Hex(\n-\t\t\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n-\t\t\t\t\t+ \"abcdefghijklmnopqrstuvwxyz\"\n-\t\t\t\t\t+ \"0123456789\"));\n+        assertEquals(\"c3fcd3d76192e4007dfb496cca67e13b\", DigestUtils.md5Hex(\"abcdefghijklmnopqrstuvwxyz\"));\n \n-\t\tassertEquals(\n-\t\t\t\"57edf4a22be3c955ac49da2e2107b67a\",\n-\t\t\tDigestUtils.md5Hex(\n-\t\t\t\t\"1234567890123456789012345678901234567890\"\n-\t\t\t\t\t+ \"1234567890123456789012345678901234567890\"));\n-\t}\n+        assertEquals(\n+            \"d174ab98d277d9f5a5611c2c9f419d9f\",\n+            DigestUtils.md5Hex(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz\" + \"0123456789\"));\n \n-\t/**\n+        assertEquals(\n+            \"57edf4a22be3c955ac49da2e2107b67a\",\n+            DigestUtils.md5Hex(\"1234567890123456789012345678901234567890\" + \"1234567890123456789012345678901234567890\"));\n+    }\n+\n+    /**\n \t * An MD5 hash converted to hex should always be 32 characters.\n \t */\n-\tpublic void testMD5HexLength() {\n-\t\tString hashMe = \"this is some string that is longer than 32 characters\";\n-\t\tString hash = DigestUtils.md5Hex(hashMe.getBytes());\n-\t\tassertEquals(32, hash.length());\n+    public void testMD5HexLength() {\n+        String hashMe = \"this is some string that is longer than 32 characters\";\n+        String hash = DigestUtils.md5Hex(hashMe.getBytes());\n+        assertEquals(32, hash.length());\n \n-\t\thashMe = \"length < 32\";\n-\t\thash = DigestUtils.md5Hex(hashMe.getBytes());\n-\t\tassertEquals(32, hash.length());\n-\t}\n+        hashMe = \"length < 32\";\n+        hash = DigestUtils.md5Hex(hashMe.getBytes());\n+        assertEquals(32, hash.length());\n+    }\n \n-\t/**\n+    /**\n \t * An MD5 hash should always be a 16 element byte[].\n \t */\n-\tpublic void testMD5Length() {\n-\t\tString hashMe = \"this is some string that is longer than 16 characters\";\n-\t\tbyte[] hash = DigestUtils.md5(hashMe.getBytes());\n-\t\tassertEquals(16, hash.length);\n+    public void testMD5Length() {\n+        String hashMe = \"this is some string that is longer than 16 characters\";\n+        byte[] hash = DigestUtils.md5(hashMe.getBytes());\n+        assertEquals(16, hash.length);\n \n-\t\thashMe = \"length < 16\";\n-\t\thash = DigestUtils.md5(hashMe.getBytes());\n-\t\tassertEquals(16, hash.length);\n-\t}\n+        hashMe = \"length < 16\";\n+        hash = DigestUtils.md5(hashMe.getBytes());\n+        assertEquals(16, hash.length);\n+    }\n \n-\tpublic void testShaHex() {\n-\t\t// Examples from FIPS 180-1\n-\t\tassertEquals(\n-\t\t\t\"a9993e364706816aba3e25717850c26c9cd0d89d\",\n-\t\t\tDigestUtils.shaHex(\"abc\"));\n+    public void testShaHex() {\n+        // Examples from FIPS 180-1\n+        assertEquals(\"a9993e364706816aba3e25717850c26c9cd0d89d\", DigestUtils.shaHex(\"abc\"));\n+\n+        assertEquals(\"a9993e364706816aba3e25717850c26c9cd0d89d\", DigestUtils.shaHex(\"abc\".getBytes()));\n \n         assertEquals(\n-            \"a9993e364706816aba3e25717850c26c9cd0d89d\",\n-            DigestUtils.shaHex(\"abc\".getBytes()));\n+            \"84983e441c3bd26ebaae4aa1f95129e5e54670f1\",\n+            DigestUtils.shaHex(\"abcdbcdecdefdefgefghfghighij\" + \"hijkijkljklmklmnlmnomnopnopq\"));\n+    }\n \n-\t\tassertEquals(\n-\t\t\t\"84983e441c3bd26ebaae4aa1f95129e5e54670f1\",\n-\t\t\tDigestUtils.shaHex(\n-\t\t\t\t\"abcdbcdecdefdefgefghfghighij\"\n-\t\t\t\t\t+ \"hijkijkljklmklmnlmnomnopnopq\"));\n-\t}\n-    \n }", "timestamp": 1067832506, "metainfo": ""}