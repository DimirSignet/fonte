{"sha": "caa142d0399f10ce3ec6fb843e679e2d8c07c43f", "log": "[CODEC-130] Added unit test for Base32InputStream, improved Base64 unit test.  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java\n+++ b/src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java\n import static org.junit.Assert.fail;\n \n import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Arrays;\n \n+import org.junit.Ignore;\n import org.junit.Test;\n \n public class Base32InputStreamTest {\n     private final static byte[] CRLF = { (byte) '\\r', (byte) '\\n' };\n \n     private final static byte[] LF = { (byte) '\\n' };\n+\n+    private static final String STRING_FIXTURE = \"Hello World\";\n+\n+    /**\n+     * Tests the problem reported in CODEC-130. Missing / wrong implementation of skip.\n+     */\n+    @Test\n+    @Ignore\n+    public void testCodec130() throws IOException {\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        Base32OutputStream base32os = new Base32OutputStream(bos);\n+\n+        base32os.write(StringUtils.getBytesUtf8(STRING_FIXTURE));\n+        base32os.close();\n+\n+        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());\n+        Base32InputStream ins = new Base32InputStream(bis);\n+\n+        // we skip the first character read from the reader\n+        ins.skip(1);\n+        byte[] decodedBytes = Base32TestData.streamToBytes(ins, new byte[64]);\n+        String str = StringUtils.newStringUtf8(decodedBytes);\n+\n+        assertEquals(STRING_FIXTURE.substring(1), str);\n+    }\n \n     /**\n      * Tests the bug reported in CODEC-105. Bad interactions with InputStream when reading one byte at a time.\n--- a/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java\n+++ b/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java\n         ByteArrayOutputStream bos = new ByteArrayOutputStream();\n         Base64OutputStream base64os = new Base64OutputStream(bos);\n \n-        base64os.write(STRING_FIXTURE.getBytes());\n+        base64os.write(StringUtils.getBytesUtf8(STRING_FIXTURE));\n+        base64os.close();\n \n         ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());\n         Base64InputStream ins = new Base64InputStream(bis);\n \n         // we skip the first character read from the reader\n         ins.skip(1);\n-        StringBuffer sb = new StringBuffer();\n-        int len = 0;\n-        byte[] bytes = new byte[10];\n-        while ((len = ins.read(bytes)) != -1) {\n-            String s = new String(bytes, 0, len, \"iso-8859-1\");\n-            sb.append(s);\n-        }\n-        String str = sb.toString();\n+        byte[] decodedBytes = Base64TestData.streamToBytes(ins, new byte[64]);\n+        String str = StringUtils.newStringUtf8(decodedBytes);\n \n         assertEquals(STRING_FIXTURE.substring(1), str);\n     }", "timestamp": 1332107143, "metainfo": ""}