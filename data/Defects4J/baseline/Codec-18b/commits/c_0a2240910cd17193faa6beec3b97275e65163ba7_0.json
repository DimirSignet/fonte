{"sha": "0a2240910cd17193faa6beec3b97275e65163ba7", "log": "Javadoc: Use the active voice and small typos.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java\n  * @since 1.6\n  */\n public class BeiderMorseEncoder implements StringEncoder {\n-    // implementation note: This class is a spring-friendly facade to PhoneticEngine. It allows read/write configuration\n+    // Implementation note: This class is a spring-friendly facade to PhoneticEngine. It allows read/write configuration\n     // of an immutable PhoneticEngine instance that will be delegated to for the actual encoding.\n \n     // a cached object\n--- a/src/main/java/org/apache/commons/codec/language/bm/Lang.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Lang.java\n  * @since 1.6\n  */\n public class Lang {\n-    // implementation note: This class is divided into two sections. The first part is a static factory interface that\n+    // Implementation note: This class is divided into two sections. The first part is a static factory interface that\n     // exposes the LANGUAGE_RULES_RN resource as a Lang instance. The second part is the Lang instance methods that\n     // encapsulate a particular language-guessing rule table and the language guessing itself.\n     //\n--- a/src/main/java/org/apache/commons/codec/language/bm/Languages.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Languages.java\n  * @since 1.6\n  */\n public class Languages {\n-    // implementation note: This class is divided into two sections. The first part is a static factory interface that\n+    // Iimplementation note: This class is divided into two sections. The first part is a static factory interface that\n     // exposes org/apache/commons/codec/language/bm/%s_languages.txt for %s in NameType.* as a list of supported\n     // languages, and a second part that provides instance methods for accessing this set fo supported languages.\n \n--- a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n         }\n \n         /**\n-         * Create a new phoneme builder containing all phonemes in this one extended by <code>str</code>.\n+         * Creates a new phoneme builder containing all phonemes in this one extended by <code>str</code>.\n          *\n          * @param str   the characters to append to the phonemes\n          * @return  a new phoneme builder lenghened by <code>str</code>\n         }\n \n         /**\n-         * Create a new phoneme builder containing the application of the expression to all phonemes in this builder.\n+         * Creates a new phoneme builder containing the application of the expression to all phonemes in this builder.\n          *\n          * This will lengthen phonemes that have compatible language sets to the expression, and drop those that are\n          * incompatible.\n         }\n \n         /**\n-         * The underlying phoneme set. Please don't mutate.\n+         * Gets underlying phoneme set. Please don't mutate.\n          *\n          * @return  the phoneme set\n          */\n         }\n \n         /**\n-         * Stringify the phoneme set. This produces a single string of the strings of each phoneme, joined with a pipe.\n+         * Stringifies the phoneme set. This produces a single string of the strings of each phoneme, joined with a pipe.\n          * This is explicitly provied in place of toString as it is a potentially expensive operation, which should be\n          * avoided when debugging.\n          *\n         }\n \n         /**\n-         * This invokes the rules. It loops over the rules list, stopping at the first one that has a matching context\n-         * and pattern. It then applies this rule to the phoneme builder to produce updated phonemes. If there was no\n+         * Invokes the rules. Loops over the rules list, stopping at the first one that has a matching context\n+         * and pattern. Then applies this rule to the phoneme builder to produce updated phonemes. If there was no\n          * match, <code>i</code> is advanced one and the character is silently dropped from the phonetic spelling.\n          *\n          * @return <code>this</code>\n     }\n \n     /**\n-     * Join some strings with an internal separater.\n+     * Joins some strings with an internal separator.\n      * @param strings   Strings to join\n      * @param sep       String to separate them with\n      * @return          a single String consisting of each element of <code>strings</code> interlieved by <code>sep</code>\n     }\n \n     /**\n-     * Apply the final rules to convert from a language-specific phonetic representation to a language-independent\n+     * Applies the final rules to convert from a language-specific phonetic representation to a language-independent\n      * representation.\n      *\n      * @param phonemeBuilder", "timestamp": 1321218570, "metainfo": ""}