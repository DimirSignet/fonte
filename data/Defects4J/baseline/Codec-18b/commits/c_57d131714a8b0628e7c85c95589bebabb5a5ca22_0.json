{"sha": "57d131714a8b0628e7c85c95589bebabb5a5ca22", "log": "Javadoc.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/Soundex.java\n+++ b/src/java/org/apache/commons/codec/language/Soundex.java\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- */ \n+ */\n \n package org.apache.commons.codec.language;\n \n import org.apache.commons.codec.StringEncoder;\n \n /**\n- * Encodes a string into a soundex value. Soundex is an encoding used to relate\n- * similar names, but can also be used as a general purpose scheme to find word\n- * with similar phonemes.\n+ * Encodes a string into a soundex value. Soundex is an encoding used to relate similar names, but can also be used as a\n+ * general purpose scheme to find word with similar phonemes.\n  * \n  * @author Apache Software Foundation\n- * @version $Id: Soundex.java,v 1.22 2004/06/02 00:55:29 ggregory Exp $\n+ * @version $Id: Soundex.java,v 1.23 2004/06/05 00:43:32 ggregory Exp $\n  */\n public class Soundex implements StringEncoder {\n \n     /**\n-\t * This static variable contains an instance of the Soundex using the\n-\t * US_ENGLISH mapping.\n-\t */\n+     * An instance of Soundex using the US_ENGLISH_MAPPING mapping.\n+     * \n+     * @see #US_ENGLISH_MAPPING\n+     */\n     public static final Soundex US_ENGLISH = new Soundex();\n \n     /**\n-\t * This is a default mapping of the 26 letters used in US english. A value\n-\t * of <code>0</code> for a letter position means do not encode.\n-\t */\n+     * This is a default mapping of the 26 letters used in US English. A value of <code>0</code> for a letter position\n+     * means do not encode.\n+     * \n+     * @see Soundex#Soundex(char[])\n+     */\n     public static final char[] US_ENGLISH_MAPPING = \"01230120022455012623010202\".toCharArray();\n \n     /**\n-\t * Encodes the Strings and returns the number of characters in the two\n-\t * encoded Strings that are the same. This return value ranges from 0\n-\t * through 4: 0 indicates little or no similarity, and 4 indicates strong\n-\t * similarity or identical values.\n-\t * \n-\t * @param s1\n-\t *                  A String that will be encoded and compared.\n-\t * @param s2\n-\t *                  A String that will be encoded and compared.\n-\t * @return The number of characters in the two encoded Strings that are the\n-\t *             same from 0 to 4.\n-\t * \n-\t * @see SoundexUtils#difference(StringEncoder,String,String)\n-\t * @see <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\">\n-\t *          MS T-SQL DIFFERENCE</a>\n-\t * \n-\t * @throws EncoderException\n-\t *                  if an error occurs encoding one of the strings\n+     * Encodes the Strings and returns the number of characters in the two encoded Strings that are the same. This\n+     * return value ranges from 0 through 4: 0 indicates little or no similarity, and 4 indicates strong similarity or\n+     * identical values.\n+     * \n+     * @param s1\n+     *                  A String that will be encoded and compared.\n+     * @param s2\n+     *                  A String that will be encoded and compared.\n+     * @return The number of characters in the two encoded Strings that are the same from 0 to 4.\n+     * \n+     * @see SoundexUtils#difference(StringEncoder,String,String)\n+     * @see <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_de-dz_8co5.asp\"> MS\n+     *          T-SQL DIFFERENCE </a>\n+     * \n+     * @throws EncoderException\n+     *                  if an error occurs encoding one of the strings\n      * @since 1.3\n-\t */\n+     */\n     public int difference(String s1, String s2) throws EncoderException {\n         return SoundexUtils.difference(this, s1, s2);\n     }\n \n     /**\n-\t * The maximum length of a Soundex code - Soundex codes are only four\n-\t * characters by definition.\n-\t * \n-\t * @deprecated This feature is not needed since the encoding size must be\n-\t *                     constant.\n-\t */\n+     * The maximum length of a Soundex code - Soundex codes are only four characters by definition.\n+     * \n+     * @deprecated This feature is not needed since the encoding size must be constant.\n+     */\n     private int maxLength = 4;\n \n     /**\n-\t * Every letter of the alphabet is \"mapped\" to a numerical value. This char\n-\t * array holds the values to which each letter is mapped. This\n-\t * implementation contains a default map for US_ENGLISH\n-\t */\n+     * Every letter of the alphabet is \"mapped\" to a numerical value. This char array holds the values to which each\n+     * letter is mapped. This implementation contains a default map for US_ENGLISH\n+     */\n     private char[] soundexMapping;\n \n     /**\n-\t * Creates an instance of the Soundex object using the default US_ENGLISH\n-\t * mapping.\n-\t */\n+     * Creates an instance using US_ENGLISH_MAPPING\n+     * \n+     * @see Soundex#Soundex(char[])\n+     * @see Soundex#US_ENGLISH_MAPPING\n+     */\n     public Soundex() {\n         this(US_ENGLISH_MAPPING);\n     }\n \n     /**\n-\t * Creates a soundex instance using a custom mapping. This constructor can\n-\t * be used to customize the mapping, and/or possibly provide an\n-\t * internationalized mapping for a non-Western character set.\n-\t * \n-\t * @param mapping\n-\t *                  Mapping array to use when finding the corresponding code for\n-\t *                  a given character\n-\t */\n+     * Creates a soundex instance using the given mapping. This constructor can be used to customize the mapping, and/or\n+     * possibly provide an internationalized mapping for a non-Western character set.\n+     * \n+     * Every letter of the alphabet is \"mapped\" to a numerical value. This char array holds the values to which each\n+     * letter is mapped. This implementation contains a default map for US_ENGLISH\n+     * \n+     * @param mapping\n+     *                  Mapping array to use when finding the corresponding code for a given character\n+     */\n     public Soundex(char[] mapping) {\n         this.setSoundexMapping(mapping);\n     }\n \n     /**\n-\t * Encodes an Object using the soundex algorithm. This method is provided\n-\t * in order to satisfy the requirements of the Encoder interface, and will\n-\t * throw an EncoderException if the supplied object is not of type\n-\t * java.lang.String.\n-\t * \n-\t * @param pObject\n-\t *                  Object to encode\n-\t * @return An object (or type java.lang.String) containing the soundex code\n-\t *             which corresponds to the String supplied.\n-\t * @throws EncoderException\n-\t *                  if the parameter supplied is not of type java.lang.String\n-\t */\n+     * Encodes an Object using the soundex algorithm. This method is provided in order to satisfy the requirements of\n+     * the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String.\n+     * \n+     * @param pObject\n+     *                  Object to encode\n+     * @return An object (or type java.lang.String) containing the soundex code which corresponds to the String\n+     *             supplied.\n+     * @throws EncoderException\n+     *                  if the parameter supplied is not of type java.lang.String\n+     * @throws IllegalArgumentException\n+     *                  if a character is not mapped\n+     */\n     public Object encode(Object pObject) throws EncoderException {\n         if (!(pObject instanceof String)) {\n             throw new EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n-        } \n+        }\n         return soundex((String) pObject);\n     }\n \n     /**\n-\t * Encodes a String using the soundex algorithm.\n-\t * \n-\t * @param pString\n-\t *                  A String object to encode\n-\t * @return A Soundex code corresponding to the String supplied\n-\t */\n+     * Encodes a String using the soundex algorithm.\n+     * \n+     * @param pString\n+     *                  A String object to encode\n+     * @return A Soundex code corresponding to the String supplied\n+     * @throws IllegalArgumentException\n+     *                  if a character is not mapped\n+     */\n     public String encode(String pString) {\n         return soundex(pString);\n     }\n \n     /**\n-\t * Used internally by the SoundEx algorithm.\n-\t * \n-\t * Consonants from the same code group separated by W or H are treated as\n-\t * one.\n-\t * \n-\t * @param str\n-\t *                  the cleaned working string to encode (in upper case).\n-\t * @param index\n-\t *                  the character position to encode\n-\t * @return Mapping code for a particular character\n-\t */\n+     * Used internally by the SoundEx algorithm.\n+     * \n+     * Consonants from the same code group separated by W or H are treated as one.\n+     * \n+     * @param str\n+     *                  the cleaned working string to encode (in upper case).\n+     * @param index\n+     *                  the character position to encode\n+     * @return Mapping code for a particular character\n+     * @throws IllegalArgumentException\n+     *                  if the character is not mapped\n+     */\n     private char getMappingCode(String str, int index) {\n         char mappedChar = this.map(str.charAt(index));\n         // HW rule check\n     }\n \n     /**\n-\t * Returns the maxLength. Standard Soundex\n-\t * \n-\t * @deprecated This feature is not needed since the encoding size must be\n-\t *                     constant.\n-\t * @return int\n-\t */\n+     * Returns the maxLength. Standard Soundex\n+     * \n+     * @deprecated This feature is not needed since the encoding size must be constant.\n+     * @return int\n+     */\n     public int getMaxLength() {\n         return this.maxLength;\n     }\n \n     /**\n      * Returns the soundex mapping.\n-\t * @return soundexMapping.\n-\t */\n+     * \n+     * @return soundexMapping.\n+     */\n     private char[] getSoundexMapping() {\n         return this.soundexMapping;\n     }\n \n     /**\n-\t * Maps the given upper-case character to it's Soudex code.\n-\t * \n-\t * @param c\n-\t *                  An upper-case character.\n-\t * @return A Soundex code.\n-\t */\n-    private char map(char c) {\n-    \tint index = c - 'A';\n-    \tif (index < 0 || index >= this.getSoundexMapping().length) {\n-    \t\tthrow new IllegalArgumentException(\"The character is not mapped: \" + c);\n-    \t}\n+     * Maps the given upper-case character to it's Soudex code.\n+     * \n+     * @param ch\n+     *                  An upper-case character.\n+     * @return A Soundex code.\n+     * @throws IllegalArgumentException\n+     *                  Thrown if <code>ch</code> is not mapped.\n+     */\n+    private char map(char ch) {\n+        int index = ch - 'A';\n+        if (index < 0 || index >= this.getSoundexMapping().length) {\n+            throw new IllegalArgumentException(\"The character is not mapped: \" + ch);\n+        }\n         return this.getSoundexMapping()[index];\n     }\n \n     /**\n-\t * Sets the maxLength.\n-\t * \n-\t * @deprecated This feature is not needed since the encoding size must be\n-\t *                     constant.\n-\t * @param maxLength\n-\t *                  The maxLength to set\n-\t */\n+     * Sets the maxLength.\n+     * \n+     * @deprecated This feature is not needed since the encoding size must be constant.\n+     * @param maxLength\n+     *                  The maxLength to set\n+     */\n     public void setMaxLength(int maxLength) {\n         this.maxLength = maxLength;\n     }\n \n     /**\n      * Sets the soundexMapping.\n-\t * @param soundexMapping\n-\t *                  The soundexMapping to set.\n-\t */\n+     * \n+     * @param soundexMapping\n+     *                  The soundexMapping to set.\n+     */\n     private void setSoundexMapping(char[] soundexMapping) {\n         this.soundexMapping = soundexMapping;\n     }\n \n     /**\n-\t * Retreives the Soundex code for a given String object.\n-\t * \n-\t * @param str\n-\t *                  String to encode using the Soundex algorithm\n-\t * @return A soundex code for the String supplied\n-\t */\n+     * Retreives the Soundex code for a given String object.\n+     * \n+     * @param str\n+     *                  String to encode using the Soundex algorithm\n+     * @return A soundex code for the String supplied\n+     * @throws IllegalArgumentException\n+     *                  if a character is not mapped\n+     */\n     public String soundex(String str) {\n         if (str == null) {\n             return null;\n         return new String(out);\n     }\n \n-}\n+}", "timestamp": 1086396212, "metainfo": ""}