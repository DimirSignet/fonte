{"sha": "6f73fb162af41879fa801d86ae2772a9ac14121c", "log": "CODEC-127 Convert to use Unicode except in comments Also simplify test  ", "commit": "\n--- a/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java\n+++ b/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java\n package org.apache.commons.codec.language.bm;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n \n import org.apache.commons.codec.EncoderException;\n import org.apache.commons.codec.StringEncoder;\n     @Test\n     public void testEncodeAtzNotEmpty() throws EncoderException {\n         BeiderMorseEncoder bmpm = createGenericApproxEncoder();\n-        String[] names = { \"\u00e1cz\", \"\u00e1tz\", \"Ign\u00e1cz\", \"Ign\u00e1tz\", \"Ign\u00e1c\" };\n+        //String[] names = { \"\u00e1cz\", \"\u00e1tz\", \"Ign\u00e1cz\", \"Ign\u00e1tz\", \"Ign\u00e1c\" };\n+        String[] names = { \"\\u00e1cz\", \"\\u00e1tz\", \"Ign\\u00e1cz\", \"Ign\\u00e1tz\", \"Ign\\u00e1c\" };\n         for (String name : names) {\n             assertNotEmpty(bmpm, name);\n         }\n     public void testSetConcat() {\n         BeiderMorseEncoder bmpm = new BeiderMorseEncoder();\n         bmpm.setConcat(false);\n-        assertEquals(\"Should be able to set concat to false\", false, bmpm.isConcat());\n+        assertFalse(\"Should be able to set concat to false\", bmpm.isConcat());\n     }\n \n     @Test", "timestamp": 1313436921, "metainfo": ""}