{"sha": "d542ac38c91731d1fd91feefee6301d90aa44957", "log": "A DoubleMetaphoneTest was contributed by Mindbridge and contains test data from the original Lawrence Phillips article.   ", "commit": "\n--- /dev/null\n+++ b/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n+/*\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,v 1.1 2003/10/04 15:14:08 tobrien Exp $\n+ * $Revision: 1.1 $\n+ * $Date: 2003/10/04 15:14:08 $\n+ *\n+ * ====================================================================\n+ *\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowledgement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgement may appear in the software itself,\n+ *    if and wherever such third-party acknowledgements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Commons\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ *\n+ */\n+package org.apache.commons.codec.language;\n+\n+import junit.framework.Test;\n+import junit.framework.TestSuite;\n+\n+import org.apache.commons.codec.StringEncoder;\n+import org.apache.commons.codec.StringEncoderAbstractTest;\n+\n+/**\n+ * Testcase for DoubleMetaphone\n+ * \n+ * @author Mindbridge\n+ */\n+public class DoubleMetaphoneTest extends StringEncoderAbstractTest\n+{\n+\n+    public DoubleMetaphoneTest(String name)\n+    {\n+        super(name);\n+    }\n+\n+    public static Test suite()\n+    {\n+        return (new TestSuite(DoubleMetaphoneTest.class));\n+    }\n+\n+    public void setUp() throws Exception\n+    {\n+        super.setUp();\n+        _doubleMetaphone = new DoubleMetaphone();\n+    }\n+\n+    public void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        _doubleMetaphone = null;\n+    }\n+\n+    protected StringEncoder makeEncoder()\n+    {\n+        return new Metaphone();\n+    }\n+\n+    // ------------------------------------------------------------------------\n+\n+    public void testDoubleMetaphone()\n+    {\n+        assertEquals(\"TSTN\", _doubleMetaphone.doubleMetaphone(\"testing\"));\n+        assertEquals(\"0\", _doubleMetaphone.doubleMetaphone(\"The\"));\n+        assertEquals(\"KK\", _doubleMetaphone.doubleMetaphone(\"quick\"));\n+        assertEquals(\"PRN\", _doubleMetaphone.doubleMetaphone(\"brown\"));\n+        assertEquals(\"FKS\", _doubleMetaphone.doubleMetaphone(\"fox\"));\n+        assertEquals(\"JMPT\", _doubleMetaphone.doubleMetaphone(\"jumped\"));\n+        assertEquals(\"AFR\", _doubleMetaphone.doubleMetaphone(\"over\"));\n+        assertEquals(\"0\", _doubleMetaphone.doubleMetaphone(\"the\"));\n+        assertEquals(\"LS\", _doubleMetaphone.doubleMetaphone(\"lazy\"));\n+        assertEquals(\"TKS\", _doubleMetaphone.doubleMetaphone(\"dogs\"));\n+        assertEquals(\"MKFR\", _doubleMetaphone.doubleMetaphone(\"MacCafferey\"));\n+\n+        assertEquals(\"TSTN\", _doubleMetaphone.doubleMetaphone(\"testing\", true));\n+        assertEquals(\"T\", _doubleMetaphone.doubleMetaphone(\"The\", true));\n+        assertEquals(\"KK\", _doubleMetaphone.doubleMetaphone(\"quick\", true));\n+        assertEquals(\"PRN\", _doubleMetaphone.doubleMetaphone(\"brown\", true));\n+        assertEquals(\"FKS\", _doubleMetaphone.doubleMetaphone(\"fox\", true));\n+        assertEquals(\"AMPT\", _doubleMetaphone.doubleMetaphone(\"jumped\", true));\n+        assertEquals(\"AFR\", _doubleMetaphone.doubleMetaphone(\"over\", true));\n+        assertEquals(\"T\", _doubleMetaphone.doubleMetaphone(\"the\", true));\n+        assertEquals(\"LS\", _doubleMetaphone.doubleMetaphone(\"lazy\", true));\n+        assertEquals(\"TKS\", _doubleMetaphone.doubleMetaphone(\"dogs\", true));\n+        assertEquals(\"MKFR\", _doubleMetaphone.doubleMetaphone(\"MacCafferey\", true));\n+    }\n+\n+    public void testIsDoubleMetaphoneEqual()\n+    {\n+        doubleMetaphoneEqualTest(false);\n+        doubleMetaphoneEqualTest(true);\n+    }\n+\n+    public void doubleMetaphoneEqualTest(boolean alternate)\n+    {\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"Case\", \"case\", alternate));\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"CASE\", \"Case\", alternate));\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"caSe\", \"cAsE\", alternate));\n+\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"cookie\", \"quick\", alternate));\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"quick\", \"cookie\", alternate));\n+\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"Bryan\", \"Brian\", alternate));\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"Brian\", \"Bryan\", alternate));\n+\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"Otto\", \"Auto\", alternate));\n+        assertTrue(_doubleMetaphone.isDoubleMetaphoneEqual(\"Auto\", \"Otto\", alternate));\n+\n+        assertTrue(!_doubleMetaphone.isDoubleMetaphoneEqual(\"Brain\", \"Band\", alternate));\n+        assertTrue(!_doubleMetaphone.isDoubleMetaphoneEqual(\"Band\", \"Brain\", alternate));\n+    }\n+\n+    private DoubleMetaphone _doubleMetaphone = null;\n+}", "timestamp": 1065280448, "metainfo": ""}