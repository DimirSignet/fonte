{"sha": "2dfd03934382a9dba4c39dd248b8b6adbeb181e5", "log": "Checkstyle: binary op should be on the previous line.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/UnixCrypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/UnixCrypt.java\n         if (salt == null) {\n             Random randomGenerator = new Random();\n             int numSaltChars = SALT_CHARS.length;\n-            salt = \"\" + SALT_CHARS[randomGenerator.nextInt(numSaltChars)]\n-                    + SALT_CHARS[randomGenerator.nextInt(numSaltChars)];\n+            salt = \"\" + SALT_CHARS[randomGenerator.nextInt(numSaltChars)] +\n+                    SALT_CHARS[randomGenerator.nextInt(numSaltChars)];\n         } else if (!salt.matches(\"^[\" + B64.B64T + \"]{2,}$\")) {\n             throw new IllegalArgumentException(\"Invalid salt value: \" + salt);\n         }\n         u = u ^ u << 16 ^ r ^ sArr[s];\n         int t = v ^ v << 16 ^ r ^ sArr[s + 1];\n         t = t >>> 4 | t << 28;\n-        el ^= SPTRANS[1][t & 0x3f] | SPTRANS[3][t >>> 8 & 0x3f] | SPTRANS[5][t >>> 16 & 0x3f]\n-                | SPTRANS[7][t >>> 24 & 0x3f] | SPTRANS[0][u & 0x3f] | SPTRANS[2][u >>> 8 & 0x3f]\n-                | SPTRANS[4][u >>> 16 & 0x3f] | SPTRANS[6][u >>> 24 & 0x3f];\n+        el ^= SPTRANS[1][t & 0x3f] | SPTRANS[3][t >>> 8 & 0x3f] | SPTRANS[5][t >>> 16 & 0x3f] |\n+                SPTRANS[7][t >>> 24 & 0x3f] | SPTRANS[0][u & 0x3f] | SPTRANS[2][u >>> 8 & 0x3f] |\n+                SPTRANS[4][u >>> 16 & 0x3f] | SPTRANS[6][u >>> 24 & 0x3f];\n         return el;\n     }\n \n             }\n             c &= 0xfffffff;\n             d &= 0xfffffff;\n-            int s = SKB[0][c & 0x3f] | SKB[1][c >>> 6 & 0x3 | c >>> 7 & 0x3c]\n-                    | SKB[2][c >>> 13 & 0xf | c >>> 14 & 0x30]\n-                    | SKB[3][c >>> 20 & 0x1 | c >>> 21 & 0x6 | c >>> 22 & 0x38];\n-            int t = SKB[4][d & 0x3f] | SKB[5][d >>> 7 & 0x3 | d >>> 8 & 0x3c] | SKB[6][d >>> 15 & 0x3f]\n-                    | SKB[7][d >>> 21 & 0xf | d >>> 22 & 0x30];\n+            int s = SKB[0][c & 0x3f] | SKB[1][c >>> 6 & 0x3 | c >>> 7 & 0x3c] |\n+                    SKB[2][c >>> 13 & 0xf | c >>> 14 & 0x30] |\n+                    SKB[3][c >>> 20 & 0x1 | c >>> 21 & 0x6 | c >>> 22 & 0x38];\n+            int t = SKB[4][d & 0x3f] | SKB[5][d >>> 7 & 0x3 | d >>> 8 & 0x3c] | SKB[6][d >>> 15 & 0x3f] |\n+                    SKB[7][d >>> 21 & 0xf | d >>> 22 & 0x30];\n             schedule[j++] = (t << 16 | s & 0xffff);\n             s = s >>> 16 | t & 0xffff0000;\n             s = s << 4 | s >>> 28;", "timestamp": 1346608135, "metainfo": ""}