{"sha": "9bc3701fc327a1730381bea688f62da60891fd40", "log": "[CODEC-195] Support SHA-224 in DigestUtils on Java 8.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n     }\n \n     /**\n+     * Returns an SHA-224 digest.\n+     * <p>\n+     * Java 8 only.\n+     * </p>\n+     *\n+     * @return An SHA-224 digest instance.\n+     * @throws IllegalArgumentException\n+     *             when a {@link NoSuchAlgorithmException} is caught on Java 7 and older, SHA-224 is a built-in\n+     *             algorithm on Java 8\n+     * @see MessageDigestAlgorithms#SHA_224\n+     */\n+    public static MessageDigest getSha224Digest() {\n+        return getDigest(MessageDigestAlgorithms.SHA_224);\n+    }\n+\n+    /**\n      * Returns an SHA-256 digest.\n      * <p>\n      * Throws a <code>RuntimeException</code> on JRE versions prior to 1.4.0.\n     }\n \n     /**\n+     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static byte[] sha224(final byte[] data) {\n+        return getSha224Digest().digest(data);\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static byte[] sha224(final ByteBuffer data) {\n+        return digest(getSha224Digest(), data);\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static byte[] sha224(final InputStream data) throws IOException {\n+        return digest(getSha224Digest(), data);\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a <code>byte[]</code>.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest; converted to bytes using {@link StringUtils#getBytesUtf8(String)}\n+     * @return SHA-224 digest\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static byte[] sha224(final String data) {\n+        return sha224(StringUtils.getBytesUtf8(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a hex string.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest as a hex string\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static String sha224Hex(final byte[] data) {\n+        return Hex.encodeHexString(sha224(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a hex string.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest as a hex string\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static String sha224Hex(final ByteBuffer data) {\n+        return Hex.encodeHexString(sha224(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a hex string.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest as a hex string\n+     * @throws IOException\n+     *             On error reading from the stream\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static String sha224Hex(final InputStream data) throws IOException {\n+        return Hex.encodeHexString(sha224(data));\n+    }\n+\n+    /**\n+     * Calculates the SHA-224 digest and returns the value as a hex string.\n+     * <p>\n+     * Throws a {@link IllegalArgumentException} on JRE versions prior to 1.4.0.\n+     * </p>\n+     *\n+     * @param data\n+     *            Data to digest\n+     * @return SHA-224 digest as a hex string\n+     * @throws IllegalArgumentException thrown on JRE versions prior to 1.8.0.\n+     * @since 1.11\n+     */\n+    public static String sha224Hex(final String data) {\n+        return Hex.encodeHexString(sha224(data));\n+    }\n+    \n+    /**\n      * Calculates the SHA-256 digest and returns the value as a <code>byte[]</code>.\n      * <p>\n      * Throws a <code>RuntimeException</code> on JRE versions prior to 1.4.0.\n--- a/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java\n+++ b/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java\n     public static final String SHA_1 = \"SHA-1\";\n \n     /**\n+     * The SHA-224 hash algorithm defined in the FIPS PUB 180-4. \n+     * <p>\n+     * Java 8 only.\n+     * </p>\n+     * \n+     * @since 1.11\n+     */\n+    public static final String SHA_224 = \"SHA-224\";\n+\n+    /**\n      * The SHA-256 hash algorithm defined in the FIPS PUB 180-2.\n      */\n     public static final String SHA_256 = \"SHA-256\";\n--- a/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java\n \n import org.apache.commons.codec.binary.Hex;\n import org.apache.commons.codec.binary.StringUtils;\n+import org.apache.commons.lang3.JavaVersion;\n+import org.apache.commons.lang3.SystemUtils;\n+import org.junit.Assume;\n import org.junit.Test;\n \n /**\n         final String actualResult = Hex.encodeHexString(messageDigest.digest());\n \n         assertEquals(expectedResult, actualResult);\n+    }\n+\n+    @Test\n+    public void testSha224() throws IOException {\n+        Assume.assumeTrue(SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_8));\n+        assertEquals(\"d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f\", DigestUtils.sha224Hex(\"\"));\n+        assertEquals(\"730e109bd7a8a32b1cb9d9a09aa2325d2430587ddbc0c38bad911525\",\n+                DigestUtils.sha224Hex(\"The quick brown fox jumps over the lazy dog\"));\n+\n+        // Examples from FIPS 180-4?\n     }\n \n     @Test", "timestamp": 1415638049, "metainfo": ""}