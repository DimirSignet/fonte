{"sha": "c5291ab1ca4d4d7a041874a66b1c05b7d5c02ccb", "log": "CODEC-112 Base64.encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) throws IAE for valid maxResultSize if isChunked is false  ", "commit": "\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n             return binaryData;\n         }\n \n-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);\n+        long len = getEncodeLength(binaryData, isChunked ? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);\n         if (len > maxResultSize) {\n             throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n                 len +\n--- a/src/test/org/apache/commons/codec/binary/Base64Test.java\n+++ b/src/test/org/apache/commons/codec/binary/Base64Test.java\n         testEncodeOverMaxSize(1);\n         testEncodeOverMaxSize(2);\n     }\n+    \n+    public void testCodec112() { // size calculation assumes always chunked\n+        byte[] in = new byte[] {0};\n+        byte[] out=Base64.encodeBase64(in);\n+        Base64.encodeBase64(in, false, false, out.length);\n+    }\n \n     private void testEncodeOverMaxSize(int maxSize) throws Exception {\n         try {\n             Base64.encodeBase64(Base64TestData.DECODED, true, false, maxSize);\n             fail(\"Expected \" + IllegalArgumentException.class.getName());\n         } catch (IllegalArgumentException e) {\n-            // Expceted\n+            // Expected\n         }\n     }\n ", "timestamp": 1296085225, "metainfo": ""}