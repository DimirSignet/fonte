{"sha": "c0fdc948182f1d21cc4eb1448f764e63b6c48792", "log": "Javadoc fixes  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/cli/Digest.java\n+++ b/src/main/java/org/apache/commons/codec/cli/Digest.java\n      *            {@code args[0]} is one of {@link MessageDigestAlgorithms} name, {@link MessageDigest} name, {@code ALL}\n      *            , or {@code *}. \n      *            {@code args[1+]} is a FILE/DIRECTORY/String.\n-     * @throws IOException\n+     * @throws IOException if an error occurs\n      */\n     public static void main(String[] args) throws IOException {\n         new Digest(args).run();\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n  * Note: the class has short-hand methods for all the algorithms present as standard in Java 6.\n  * This approach requires lots of methods for each algorithm, and quickly becomes unwieldy.\n  * The following code works with all algorithms:\n- * <code>\n  * <pre>\n  * import static org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_224;\n  * ...\n  * byte [] digest = DigestUtils.with(SHA_224).update(dataToDigest).done();\n  * String hdigest = DigestUtils.with(SHA_224).update(new File(\"pom.xml\")).asHex();\n  * </pre>\n- * </code>\n  * @see MessageDigestAlgorithms\n  * @version $Id$\n  */\n      * @param data\n      *            Data to digest\n      * @return the digest\n-     * @throws IOException\n-     *             On error reading from the stream\n      * @since 1.11\n      */\n     public static byte[] digest(final MessageDigest messageDigest, final byte[] data) {\n      * Returns a fluent instance for the digest algorithm.\n      * Does not reset the digest before use.\n      * @param digest the digest instance to use\n-     * @return\n+     * @return the fluent instance\n      */\n     public static DigestUtils with(MessageDigest digest) {\n         return new DigestUtils(digest);\n      * Creates a {@link MessageDigest} and returns a fluent instance.\n      *\n      * @param name the name of digest algorithm to create, e.g. {@link MessageDigestAlgorithms#MD5}\n-     * @return\n+     * @return the fluent instance\n      */\n     public static DigestUtils with(String name) {\n         return new DigestUtils(getDigest(name));\n--- a/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n      * @see Mac#init(Key)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@link HmacAlgorithms#getInitializedMac(byte[])}.\n+     * @deprecated Use {@link HmacAlgorithms#getHmac(byte[])}.\n      */\n     @Deprecated\n     public static Mac getInitializedMac(final HmacAlgorithms algorithm, final byte[] key) {\n      * key must be provided using the {@link #key(byte[])} method\n      * before it can be used further.\n      *\n-     * @param algorithm to be used.\n+     * @param mac the {@link Mac} to be used.\n      * @return the instance\n      * @since 1.11\n      */\n--- a/src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java\n+++ b/src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java\n      *\n      * @param name1\n      *            name2\n-     * @return\n+     * @return the length as above\n      */\n     int leftToRightThenRightToLeftProcessing(final String name1, final String name2) {\n         final char[] name1Char = name1.toCharArray();\n--- a/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java\n  * splitting on pipe (<code>|</code>) and indexing under each of these alternatives.\n  * <p>\n  * <b>Note</b>: this version of the Beider-Morse encoding is equivalent with v3.4 of the reference implementation.\n- *\n+ * </p>\n  * @see <a href=\"http://stevemorse.org/phonetics/bmpm.htm\">Beider-Morse Phonetic Matching</a>\n  * @see <a href=\"http://stevemorse.org/phoneticinfo.htm\">Reference implementation</a>\n  *\n  * <p>\n  * This class is Not ThreadSafe\n- *\n+ * </p>\n  * @since 1.6\n  * @version $Id$\n  */", "timestamp": 1463747044, "metainfo": ""}