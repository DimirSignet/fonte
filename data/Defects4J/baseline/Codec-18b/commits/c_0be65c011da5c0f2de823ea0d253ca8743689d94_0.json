{"sha": "0be65c011da5c0f2de823ea0d253ca8743689d94", "log": "Change isColognEqual to isEncodeEqual. We can add isEncodeEqual in a superclass later.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n+++ b/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n         return colognePhonetic(text);\n     }\n \n-    public boolean isCologneEqual(String text1, String text2) {\n+    public boolean isEncodeEqual(String text1, String text2) {\n         return colognePhonetic(text1).equals(colognePhonetic(text2));\n     }\n \n--- a/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n+++ b/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n \n     }\n \n-    public void testIsCologneEquals() {\n+    public void testIsEncodeEquals() {\n         String[][] data = {\n             {\"Meyer\", \"M\u00fcller\"},\n             {\"Meyer\", \"Mayr\"},\n             {\"ganz\", \"G\u00e4nse\"},\n             {\"Miyagi\", \"Miyako\"}};\n         for (int i = 0; i < data.length; i++) {\n-            this.colognePhonetic.isCologneEqual(data[i][1], data[i][0]);\n+            this.colognePhonetic.isEncodeEqual(data[i][1], data[i][0]);\n         }\n     }\n ", "timestamp": 1298411607, "metainfo": ""}