{"sha": "86beeafa9acb781ddd7cfd82c60f9bcb94743264", "log": "Refactor test for less test fixture construction noise.  ", "commit": "\n--- a/src/test/java/org/apache/commons/codec/language/NysiisTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/NysiisTest.java\n         // 8.  Collapse all strings of repeated characters\n         // 9.  Add original first character of name as first character of key\n \n-        List<String[]> testValues =\n-                Arrays.asList(\n-                        // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n-                        // 1. Transcode first characters of name\n-                        new String[] { \"MACINTOSH\", \"MCANT\" },\n-                        // violates 4j: the second N should not be added, as the first\n-                        //              key char is already a N\n-                        new String[] { \"KNUTH\", \"NAT\" }, // Original: NNAT; modified: NATH\n-                        // O and E are transcoded to A because of rule 4a\n-                        // H also to A because of rule 4h\n-                        // the N gets mysteriously lost, maybe because of a wrongly implemented rule 4h\n-                        // that skips the next char in such a case?\n-                        // the remaining A is removed because of rule 7\n-                        new String[] { \"KOEHN\", \"CAN\" }, // Original: C\n-                        // violates 4j: see also KNUTH\n-                        new String[] { \"PHILLIPSON\", \"FALAPSAN\" }, // Original: FFALAP[SAN]\n-                        // violates 4j: see also KNUTH\n-                        new String[] { \"PFEISTER\", \"FASTAR\" }, // Original: FFASTA[R]\n-                        // violates 4j: see also KNUTH\n-                        new String[] { \"SCHOENHOEFT\", \"SANAFT\" }, // Original: SSANAF[T]\n-                        // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n-                        // 2.Transcode last characters of name: \n-                        new String[] { \"MCKEE\", \"MCY\" },\n-                        new String[] { \"MACKIE\", \"MCY\" },\n-                        new String[] { \"HEITSCHMIDT\", \"HATSNAD\" },\n-                        new String[] { \"BART\", \"BAD\" },\n-                        new String[] { \"HURD\", \"HAD\" },\n-                        new String[] { \"HUNT\", \"HAD\" },\n-                        new String[] { \"WESTERLUND\", \"WASTARLAD\" },\n-                        // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n-                        // 4. Transcode remaining characters by following these rules, incrementing by one character each time: \n-                        new String[] { \"CASSTEVENS\", \"CASTAFAN\" },\n-                        new String[] { \"VASQUEZ\", \"VASG\" },\n-                        new String[] { \"FRAZIER\", \"FRASAR\" },\n-                        new String[] { \"BOWMAN\", \"BANAN\" },\n-                        new String[] { \"MCKNIGHT\", \"MCNAGT\" },\n-                        new String[] { \"RICKERT\", \"RACAD\" },\n-                        // violates 5: the last S is not removed\n-                        // when comparing to DEUTS, which is phonetically similar\n-                        // the result it also DAT, which is correct for DEUTSCH too imo\n-                        new String[] { \"DEUTSCH\", \"DAT\" }, // Original: DATS\n-                        new String[] { \"WESTPHAL\", \"WASTFAL\" },\n-                        // violates 4h: the H should be transcoded to S and thus ignored as\n-                        // the first key character is also S\n-                        new String[] { \"SHRIVER\", \"SRAVAR\" }, // Original: SHRAVA[R]\n-                        // same as KOEHN, the L gets mysteriously lost\n-                        new String[] { \"KUHL\", \"CAL\" }, // Original: C\n-                        new String[] { \"RAWSON\", \"RASAN\" },\n-                        // If last character is S, remove it\n-                        new String[] { \"JILES\", \"JAL\" },\n-                        // violates 6: if the last two characters are AY, remove A\n-                        new String[] { \"CARRAWAY\", \"CARY\" }, // Original: CARAY\n-                        new String[] { \"YAMADA\", \"YANAD\" });\n-\n-        for (String[] arr : testValues) {\n-            Assert.assertEquals(\"Problem with \" + arr[0], arr[1], this.fullNysiis.encode(arr[0]));\n-        }\n+        this.assertEncodings(\n+                // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n+                // 1. Transcode first characters of name\n+                new String[] { \"MACINTOSH\", \"MCANT\" },\n+                // violates 4j: the second N should not be added, as the first\n+                //              key char is already a N\n+                new String[] { \"KNUTH\", \"NAT\" }, // Original: NNAT; modified: NATH\n+                // O and E are transcoded to A because of rule 4a\n+                // H also to A because of rule 4h\n+                // the N gets mysteriously lost, maybe because of a wrongly implemented rule 4h\n+                // that skips the next char in such a case?\n+                // the remaining A is removed because of rule 7\n+                new String[] { \"KOEHN\", \"CAN\" }, // Original: C\n+                // violates 4j: see also KNUTH\n+                new String[] { \"PHILLIPSON\", \"FALAPSAN\" }, // Original: FFALAP[SAN]\n+                // violates 4j: see also KNUTH\n+                new String[] { \"PFEISTER\", \"FASTAR\" }, // Original: FFASTA[R]\n+                // violates 4j: see also KNUTH\n+                new String[] { \"SCHOENHOEFT\", \"SANAFT\" }, // Original: SSANAF[T]\n+                // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n+                // 2.Transcode last characters of name: \n+                new String[] { \"MCKEE\", \"MCY\" },\n+                new String[] { \"MACKIE\", \"MCY\" },\n+                new String[] { \"HEITSCHMIDT\", \"HATSNAD\" },\n+                new String[] { \"BART\", \"BAD\" },\n+                new String[] { \"HURD\", \"HAD\" },\n+                new String[] { \"HUNT\", \"HAD\" },\n+                new String[] { \"WESTERLUND\", \"WASTARLAD\" },\n+                // http://www.dropby.com/indexLF.html?content=/NYSIIS.html\n+                // 4. Transcode remaining characters by following these rules, incrementing by one character each time: \n+                new String[] { \"CASSTEVENS\", \"CASTAFAN\" },\n+                new String[] { \"VASQUEZ\", \"VASG\" },\n+                new String[] { \"FRAZIER\", \"FRASAR\" },\n+                new String[] { \"BOWMAN\", \"BANAN\" },\n+                new String[] { \"MCKNIGHT\", \"MCNAGT\" },\n+                new String[] { \"RICKERT\", \"RACAD\" },\n+                // violates 5: the last S is not removed\n+                // when comparing to DEUTS, which is phonetically similar\n+                // the result it also DAT, which is correct for DEUTSCH too imo\n+                new String[] { \"DEUTSCH\", \"DAT\" }, // Original: DATS\n+                new String[] { \"WESTPHAL\", \"WASTFAL\" },\n+                // violates 4h: the H should be transcoded to S and thus ignored as\n+                // the first key character is also S\n+                new String[] { \"SHRIVER\", \"SRAVAR\" }, // Original: SHRAVA[R]\n+                // same as KOEHN, the L gets mysteriously lost\n+                new String[] { \"KUHL\", \"CAL\" }, // Original: C\n+                new String[] { \"RAWSON\", \"RASAN\" },\n+                // If last character is S, remove it\n+                new String[] { \"JILES\", \"JAL\" },\n+                // violates 6: if the last two characters are AY, remove A\n+                new String[] { \"CARRAWAY\", \"CARY\" }, // Original: CARAY\n+                new String[] { \"YAMADA\", \"YANAD\" });\n     }\n \n     @Test", "timestamp": 1331248223, "metainfo": ""}