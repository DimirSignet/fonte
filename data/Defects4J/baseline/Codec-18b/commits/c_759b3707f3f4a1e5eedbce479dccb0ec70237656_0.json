{"sha": "759b3707f3f4a1e5eedbce479dccb0ec70237656", "log": "Replace \"<code>null</code>\" with \"{@code null}\"  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/DecoderException.java\n+++ b/src/main/java/org/apache/commons/codec/DecoderException.java\n     private static final long serialVersionUID = 1L;\n \n     /**\n-     * Constructs a new exception with <code>null</code> as its detail message. The cause is not initialized, and may\n+     * Constructs a new exception with {@code null} as its detail message. The cause is not initialized, and may\n      * subsequently be initialized by a call to {@link #initCause}.\n      * \n      * @since 1.4\n      * @param message\n      *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.\n      * @param cause\n-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A {@code null}\n      *            value is permitted, and indicates that the cause is nonexistent or unknown.\n      * @since 1.4\n      */\n      * This constructor is useful for exceptions that are little more than wrappers for other throwables.\n      * \n      * @param cause\n-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A {@code null}\n      *            value is permitted, and indicates that the cause is nonexistent or unknown.\n      * @since 1.4\n      */\n--- a/src/main/java/org/apache/commons/codec/EncoderException.java\n+++ b/src/main/java/org/apache/commons/codec/EncoderException.java\n     private static final long serialVersionUID = 1L;\n \n     /**\n-     * Constructs a new exception with <code>null</code> as its detail message. The cause is not initialized, and may\n+     * Constructs a new exception with {@code null} as its detail message. The cause is not initialized, and may\n      * subsequently be initialized by a call to {@link #initCause}.\n      * \n      * @since 1.4\n      * @param message\n      *            The detail message which is saved for later retrieval by the {@link #getMessage()} method.\n      * @param cause\n-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A {@code null}\n      *            value is permitted, and indicates that the cause is nonexistent or unknown.\n      * @since 1.4\n      */\n      * This constructor is useful for exceptions that are little more than wrappers for other throwables.\n      * \n      * @param cause\n-     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A <code>null</code>\n+     *            The cause which is saved for later retrieval by the {@link #getCause()} method. A {@code null}\n      *            value is permitted, and indicates that the cause is nonexistent or unknown.\n      * @since 1.4\n      */\n--- a/src/main/java/org/apache/commons/codec/binary/BinaryCodec.java\n+++ b/src/main/java/org/apache/commons/codec/binary/BinaryCodec.java\n     }\n \n     /**\n-     * Returns <code>true</code> if the given array is <code>null</code> or empty (size 0.)\n+     * Returns <code>true</code> if the given array is {@code null} or empty (size 0.)\n      * \n      * @param array\n      *            the source array\n-     * @return <code>true</code> if the given array is <code>null</code> or empty (size 0.)\n+     * @return <code>true</code> if the given array is {@code null} or empty (size 0.)\n      */\n     private static boolean isEmpty(byte[] array) {\n         return array == null || array.length == 0;\n--- a/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n+++ b/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n      * byte array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * </p>\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n+     *            the String to encode, may be {@code null}\n      * @param charsetName\n      *            The name of a required {@link java.nio.charset.Charset}\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws IllegalStateException\n      *             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a\n      *             required charset name.\n      * array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#US_ASCII} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16BE} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16LE} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * array.\n      * \n      * @param string\n-     *            the String to encode, may be <code>null</code>\n-     * @return encoded bytes, or <code>null</code> if the input string was <code>null</code>\n+     *            the String to encode, may be {@code null}\n+     * @return encoded bytes, or {@code null} if the input string was {@code null}\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param charset\n      *            The {@link Charset} to encode the {@code String}\n      * @return A new <code>String</code> decoded from the specified array of bytes using the given charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * </p>\n      * \n      * @param bytes\n-     *            The bytes to be decoded into characters, may be <code>null</code>\n+     *            The bytes to be decoded into characters, may be {@code null}\n      * @param charsetName\n      *            The name of a required {@link java.nio.charset.Charset}\n      * @return A new <code>String</code> decoded from the specified array of bytes using the given charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws IllegalStateException\n      *             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a\n      *             required charset name.\n      * Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.\n      * \n      * @param bytes\n-     *            The bytes to be decoded into characters, may be <code>null</code>\n+     *            The bytes to be decoded into characters, may be {@code null}\n      * @return A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or\n-     *         <code>null</code> if the input byte array was <code>null</code>.\n+     *         {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param bytes\n      *            The bytes to be decoded into characters\n      * @return A new <code>String</code> decoded from the specified array of bytes using the US-ASCII charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#US_ASCII} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param bytes\n      *            The bytes to be decoded into characters\n      * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-16 charset\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param bytes\n      *            The bytes to be decoded into characters\n      * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-16BE charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16BE} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param bytes\n      *            The bytes to be decoded into characters\n      * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-16LE charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_16LE} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n      * @param bytes\n      *            The bytes to be decoded into characters\n      * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-8 charset,\n-     *         or <code>null</code> if the input byte array was <code>null</code>.\n+     *         or {@code null} if the input byte array was {@code null}.\n      * @throws NullPointerException\n      *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is\n      *             required by the Java platform specification.\n--- a/src/main/java/org/apache/commons/codec/net/RFC1522Codec.java\n+++ b/src/main/java/org/apache/commons/codec/net/RFC1522Codec.java\n      * {@link #doEncoding(byte [])} method of a concrete class to perform the specific decoding.\n      * \n      * @param text a string to decode\n-     * @return A new decoded String or <code>null</code> if the input is <code>null</code>.\n+     * @return A new decoded String or {@code null} if the input is {@code null}.\n      * \n      * @throws DecoderException thrown if there is an error condition during the decoding \n      *  process.", "timestamp": 1332948668, "metainfo": ""}