{"sha": "71e7260746a902d1070a190fd78bd560464860b9", "log": "stringEncoder variable is now final to tighten it up, the empty constructor is deprecated as it will only lead to a broken NPE producing comparator and I've removed the unnecessary casting  ", "commit": "\n--- a/src/java/org/apache/commons/codec/StringEncoderComparator.java\n+++ b/src/java/org/apache/commons/codec/StringEncoderComparator.java\n     /**\n      * Internal encoder instance.\n      */\n-    private StringEncoder stringEncoder;\n+    private final StringEncoder stringEncoder;\n \n     /**\n      * Constructs a new instance.\n+     * @deprecated as creating without a StringEncoder will lead to a \n+     *             broken NullPointerException creating comparator.\n      */\n     public StringEncoderComparator() {\n-        // no init.\n+        stringEncoder = null;   // Trying to use this will cause things to break\n     }\n \n     /**\n         int compareCode = 0;\n \n         try {\n-            Comparable s1 = (Comparable) ((Encoder) this.stringEncoder).encode(o1);\n-            Comparable s2 = (Comparable) ((Encoder) this.stringEncoder).encode(o2);\n+            Comparable s1 = (Comparable) this.stringEncoder.encode(o1);\n+            Comparable s2 = (Comparable) this.stringEncoder.encode(o2);\n             compareCode = s1.compareTo(s2);\n         } \n         catch (EncoderException ee) {", "timestamp": 1191643848, "metainfo": ""}