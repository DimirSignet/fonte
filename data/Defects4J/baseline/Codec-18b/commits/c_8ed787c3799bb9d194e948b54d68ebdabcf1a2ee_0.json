{"sha": "8ed787c3799bb9d194e948b54d68ebdabcf1a2ee", "log": "[CODEC-211] Create enum MessageDigestAlgorithm and deprecate class MessageDigestAlgorithms. Rename MessageDigestAlgorithm.getAlgorithm() to getName().  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/Digest.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Digest.java\n         for (int i = 0; i < digestAlgorithms.length; i++) {\n             final MessageDigestAlgorithm messageDigestAlgorithm = digestAlgorithms[i];\n             if (messageDigestAlgorithm.isAvailable()) {\n-                run(messageDigestAlgorithm.getAlgorithm() + \" \", messageDigestAlgorithm);\n+                run(messageDigestAlgorithm.getName() + \" \", messageDigestAlgorithm);\n             }\n         }\n     }\n--- a/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/DigestUtils.java\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because MD2 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#MD2\n+     * @see MessageDigestAlgorithm#MD2\n      * @since 1.7\n      */\n     public static MessageDigest getMd2Digest() {\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because MD5 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#MD5\n+     * @see MessageDigestAlgorithm#MD5\n      */\n     public static MessageDigest getMd5Digest() {\n         return MessageDigestAlgorithm.MD5.getMessageDigest();\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-1 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#SHA_1\n+     * @see MessageDigestAlgorithm#SHA_1\n      * @since 1.7\n      */\n     public static MessageDigest getSha1Digest() {\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught on Java 7 and older, SHA-224 is a built-in\n      *             algorithm on Java 8\n-     * @see MessageDigestAlgorithms#SHA_224\n+     * @see MessageDigestAlgorithm#SHA_224\n      */\n     public static MessageDigest getSha224Digest() {\n         return MessageDigestAlgorithm.SHA_224.getMessageDigest();\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-256 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#SHA_256\n+     * @see MessageDigestAlgorithm#SHA_256\n      */\n     public static MessageDigest getSha256Digest() {\n         return MessageDigestAlgorithm.SHA_256.getMessageDigest();\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-384 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#SHA_384\n+     * @see MessageDigestAlgorithm#SHA_384\n      */\n     public static MessageDigest getSha384Digest() {\n         return MessageDigestAlgorithm.SHA_384.getMessageDigest();\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught, which should never happen because SHA-512 is a\n      *             built-in algorithm\n-     * @see MessageDigestAlgorithms#SHA_512\n+     * @see MessageDigestAlgorithm#SHA_512\n      */\n     public static MessageDigest getSha512Digest() {\n         return MessageDigestAlgorithm.SHA_512.getMessageDigest();\n--- a/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java\n+++ b/src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithm.java\n      *\n      * @return the algorithm name.\n      */\n-    public String getAlgorithm() {\n+    public String getName() {\n         return algorithm;\n     }\n \n--- a/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n         if (salt == null) {\n             salt = SHA256_PREFIX + B64.getRandomSalt(8);\n         }\n-        return sha2Crypt(keyBytes, salt, SHA256_PREFIX, SHA256_BLOCKSIZE, MessageDigestAlgorithm.SHA_256.getAlgorithm());\n+        return sha2Crypt(keyBytes, salt, SHA256_PREFIX, SHA256_BLOCKSIZE, MessageDigestAlgorithm.SHA_256.getName());\n     }\n \n     /**\n         if (salt == null) {\n             salt = SHA512_PREFIX + B64.getRandomSalt(8);\n         }\n-        return sha2Crypt(keyBytes, salt, SHA512_PREFIX, SHA512_BLOCKSIZE, MessageDigestAlgorithm.SHA_512.getAlgorithm());\n+        return sha2Crypt(keyBytes, salt, SHA512_PREFIX, SHA512_BLOCKSIZE, MessageDigestAlgorithm.SHA_512.getName());\n     }\n }\n--- a/src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java\n+++ b/src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmTest.java\n \n     @Test\n     public void testAlgorithm() throws IOException, NoSuchAlgorithmException {\n-        final String algorithm = messageDigestAlgorithm.getAlgorithm();\n+        final String algorithm = messageDigestAlgorithm.getName();\n         Assert.assertNotNull(algorithm);\n         Assert.assertFalse(algorithm.isEmpty());\n         Assume.assumeTrue(messageDigestAlgorithm.isAvailable());\n     public void testGetMessageDigest() throws IOException, NoSuchAlgorithmException {\n         Assume.assumeTrue(messageDigestAlgorithm.isAvailable());\n         final MessageDigest messageDigest = messageDigestAlgorithm.getMessageDigest();\n-        Assert.assertEquals(messageDigestAlgorithm.getAlgorithm(), messageDigest.getAlgorithm());\n+        Assert.assertEquals(messageDigestAlgorithm.getName(), messageDigest.getAlgorithm());\n     }\n \n }", "timestamp": 1463336400, "metainfo": ""}