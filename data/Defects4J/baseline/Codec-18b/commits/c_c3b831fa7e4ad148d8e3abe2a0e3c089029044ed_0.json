{"sha": "c3b831fa7e4ad148d8e3abe2a0e3c089029044ed", "log": "Treat parameter as a string if it's not a file or a directory Show file name rather than directory name when listing contents Don't append '-' for non-file digests  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/cli/Digest.java\n+++ b/src/main/java/org/apache/commons/codec/cli/Digest.java\n \n import java.io.File;\n import java.io.IOException;\n+import java.nio.charset.Charset;\n import java.security.MessageDigest;\n import java.util.Arrays;\n import java.util.Locale;\n import org.apache.commons.codec.digest.MessageDigestAlgorithms;\n \n /**\n- * A minimal command line to run digest over files.\n+ * A minimal command line to run digest over files, directories or a string\n  *\n  * @see #main(String[])\n  * @since 1.11\n      *\n      * @param args\n      *            {@code args[0]} is one of {@link MessageDigestAlgorithms} name, {@link MessageDigest} name, {@code ALL}\n-     *            , or {@code *}. {@code args[1]} is a FILE.\n+     *            , or {@code *}. \n+     *            {@code args[1]} is a FILE.\n      * @throws IOException\n      */\n     public static void main(String[] args) throws IOException {\n         source = args.length == 1 ? null : args[1];\n     }\n \n-    private void println(String prefix, final byte[] digest) {\n-        final String sourceDesc = source == null ? \"-\" : source;\n+    private void println(final String prefix, final byte[] digest) {\n+        println(prefix, digest, null);\n+    }\n+\n+    private void println(final String prefix, final byte[] digest, String fileName) {\n         // The standard appears to be to print\n-        // hex, space, then either space or '*' followed by file\n+        // hex, space, then either space or '*' followed by filename\n         // where '*' is used for binary files\n         // shasum(1) has a -b option which generates \" *\" separator\n-        System.out.println(prefix + Hex.encodeHexString(digest) + \"  \" + sourceDesc);\n+        // we don't distinguish binary files at present\n+        System.out.println(prefix + Hex.encodeHexString(digest) + (fileName != null ? \"  \" + fileName : \"\"));\n     }\n \n     private void run() throws IOException {\n         }\n         final File file = new File(source);\n         if (file.isFile()) {\n-            println(prefix, DigestUtils.digest(messageDigest, file));\n+            println(prefix, DigestUtils.digest(messageDigest, file), source);\n         } else if (file.isDirectory()) {\n             run(prefix, messageDigest, file.listFiles());\n         } else {\n-            System.err.println(\"Parameter is file nor directory: '\" + file + \"'\");\n+            // use the default charset for the command-line parameter\n+            final byte[] bytes = source.getBytes(Charset.defaultCharset());\n+            println(prefix, DigestUtils.digest(messageDigest, bytes));\n         }\n     }\n \n     private void run(String prefix, MessageDigest messageDigest, File[] files) throws IOException {\n         for (File file : files) {\n             if (file.isFile()) {\n-                println(prefix, DigestUtils.digest(messageDigest, file));\n+                println(prefix, DigestUtils.digest(messageDigest, file), file.getName());\n             }\n         }\n     }", "timestamp": 1463742469, "metainfo": ""}