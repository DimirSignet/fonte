{"sha": "a5dfe5cbc95d7f3ce0b4829756690c2cb8439f4c", "log": "[CODEC-84] Double Metaphone bugs in alternative encoding. Apply patch. Thank you Niall.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n+++ b/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n             if ((contains(value, 0 ,4, \"VAN \", \"VON \") || contains(value, 0, 3, \"SCH\")) || contains(value, index + 1, 2, \"ET\")) {\n                 //-- obvious germanic --//\n                 result.append('K');\n-            } else if (contains(value, index + 1, 4, \"IER\")) {\n+            } else if (contains(value, index + 1, 3, \"IER\")) {\n                 result.append('J');\n             } else {\n                 result.append('J', 'K');\n     private int handleL(String value, \n                         DoubleMetaphoneResult result, \n                         int index) {\n-        result.append('L');\n         if (charAt(value, index + 1) == 'L') {\n             if (conditionL0(value, index)) {\n-                result.appendAlternate(' ');\n+                result.appendPrimary('L');\n+            } else {\n+                result.append('L');\n             }\n             index += 2;\n         } else {\n             index++;\n+            result.append('L');\n         }\n         return index;\n     }\n         if (index == value.length() - 3 && \n             contains(value, index - 1, 4, \"ILLO\", \"ILLA\", \"ALLE\")) {\n             return true;\n-        } else if ((contains(value, index - 1, 2, \"AS\", \"OS\") || \n+        } else if ((contains(value, value.length() - 2, 2, \"AS\", \"OS\") || \n                     contains(value, value.length() - 1, 1, \"A\", \"O\")) &&\n                    contains(value, index - 1, 4, \"ALLE\")) {\n             return true;\n     }\n     \n     /**\n-     * Determines whether <code>value</code> contains any of the criteria \n-     starting\n-     * at index <code>start</code> and matching up to length <code>length</code>\n-     */    \n+     * Determines whether <code>value</code> contains any of the criteria starting at index <code>start</code> and\n+     * matching up to length <code>length</code>\n+     */\n     protected static boolean contains(String value, int start, int length, \n                                       String[] criteria) {\n         boolean result = false;\n--- a/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java\n+++ b/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java\n         new String[] {\"Andrews\",     \"ANTR\", \"ANTR\"},\n         new String[] {\"Andreyco\",    \"ANTR\", \"ANTR\"},\n         new String[] {\"Andriesse\",   \"ANTR\", \"ANTR\"},\n-//        new String[] {\"Angier\",      \"ANJ\",  \"ANJR\"}, /* Failing Secondary, result=ANKR */\n+        new String[] {\"Angier\",      \"ANJ\",  \"ANJR\"},\n         new String[] {\"Annabel\",     \"ANPL\", \"ANPL\"},\n         new String[] {\"Anne\",        \"AN\",   \"AN\"},\n         new String[] {\"Anstye\",      \"ANST\", \"ANST\"},\n         new String[] {\"bough\",       \"P\",    \"P\"},\n         new String[] {\"breaux\",      \"PR\",   \"PR\"},\n         new String[] {\"broughton\",   \"PRTN\", \"PRTN\"},\n-//        new String[] {\"cabrillo\",    \"KPRL\", \"KPR\"}, /* Failing Secondary, result=KPRL */\n+        new String[] {\"cabrillo\",    \"KPRL\", \"KPR\"},\n         new String[] {\"caesar\",      \"SSR\",  \"SSR\"},\n         new String[] {\"cagney\",      \"KKN\",  \"KKN\"},\n         new String[] {\"campbell\",    \"KMPL\", \"KMPL\"},\n         new String[] {\"edge\",        \"AJ\",   \"AJ\"},\n         new String[] {\"filipowicz\",  \"FLPT\", \"FLPF\"},\n         new String[] {\"focaccia\",    \"FKX\",  \"FKX\"},\n-//        new String[] {\"gallegos\",    \"KLKS\", \"KKS\"}, /* Failing Secondary, result=KLKS */\n+        new String[] {\"gallegos\",    \"KLKS\", \"KKS\"},\n         new String[] {\"gambrelli\",   \"KMPR\", \"KMPR\"},\n         new String[] {\"geithain\",    \"K0N\",  \"JTN\"},\n         new String[] {\"ghiradelli\",  \"JRTL\", \"JRTL\"},\n         new String[] {\"queen\",       \"KN\",   \"KN\"},\n         new String[] {\"raspberry\",   \"RSPR\", \"RSPR\"},\n         new String[] {\"resnais\",     \"RSN\",  \"RSNS\"},\n-//        new String[] {\"rogier\",      \"RJ\",   \"RJR\"}, /* Failing Secondary, result=RKR */\n+        new String[] {\"rogier\",      \"RJ\",   \"RJR\"},\n         new String[] {\"rough\",       \"RF\",   \"RF\"},\n         new String[] {\"san jacinto\", \"SNHS\", \"SNHS\"},\n         new String[] {\"schenker\",    \"XNKR\", \"SKNK\"},", "timestamp": 1249253130, "metainfo": ""}