{"sha": "03fd13821d6f12e60af9de8959584975376c6b36", "log": "Javadoc and minor formating.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n+++ b/src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java\n  * Based on the C implementation released into the Public Domain by Ulrich Drepper &lt;drepper@redhat.com&gt;\n  * http://www.akkadia.org/drepper/SHA-crypt.txt\n  * <p>\n- * Conversion to Kotlin and from there to Java in 2012 by Christian Hammers &lt;ch@lathspell.de&gt;\n- * and likewise put into the Public Domain.\n+ * Conversion to Kotlin and from there to Java in 2012 by Christian Hammers &lt;ch@lathspell.de&gt; and likewise put\n+ * into the Public Domain.\n  * <p>\n  * This class is immutable and thread-safe.\n  *\n     static final String SHA512_PREFIX = \"$6$\";\n \n     /** The pattern to match valid salt values. */\n-    private static final Pattern SALT_PATTERN =\n-            Pattern.compile(\"^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\");\n+    private static final Pattern SALT_PATTERN = Pattern\n+            .compile(\"^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\");\n \n     /**\n      * Generates a libc crypt() compatible \"$5$\" hash value with random salt.\n      * See {@link Crypt#crypt(String, String)} for details.\n      *\n      * @throws RuntimeException\n-     *              when a {@link java.security.NoSuchAlgorithmException} is caught.\n+     *             when a {@link java.security.NoSuchAlgorithmException} is caught.\n      */\n     public static String sha256Crypt(byte[] keyBytes) {\n         return sha256Crypt(keyBytes, null);\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n      *\n-     * @throws IllegalArgumentException if the salt does not match the allowed pattern\n+     * @throws IllegalArgumentException\n+     *             if the salt does not match the allowed pattern\n      * @throws RuntimeException\n-     *              when a {@link java.security.NoSuchAlgorithmException} is caught.\n+     *             when a {@link java.security.NoSuchAlgorithmException} is caught.\n      */\n     public static String sha256Crypt(byte[] keyBytes, String salt) {\n         if (salt == null) {\n     /**\n      * Generates a libc6 crypt() compatible \"$5$\" or \"$6$\" SHA2 based hash value.\n      * <p>\n-     * This is a nearly line by line conversion of the original C function. The numbered comments\n-     * are from the algorithm description, the short C-style ones from the original C code and the\n-     * ones with \"Remark\" from me.\n+     * This is a nearly line by line conversion of the original C function. The numbered comments are from the\n+     * algorithm description, the short C-style ones from the original C code and the ones with \"Remark\" from me.\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n      *\n      * @param algorithm\n      *            {@link MessageDigest} algorithm identifier string\n      * @return complete hash value including prefix and salt\n-     * @throws IllegalArgumentException if the given salt is {@code null} or does not match the allowed pattern\n+     * @throws IllegalArgumentException\n+     *             if the given salt is {@code null} or does not match the allowed pattern\n      * @throws RuntimeException\n-     *              when a {@link java.security.NoSuchAlgorithmException} is caught.\n+     *             when a {@link java.security.NoSuchAlgorithmException} is caught.\n      */\n-    private static String sha2Crypt(byte[] keyBytes, String salt, String saltPrefix, int blocksize, String algorithm)\n-            {\n+    private static String sha2Crypt(byte[] keyBytes, String salt, String saltPrefix, int blocksize, String algorithm) {\n \n         int keyLen = keyBytes.length;\n \n      * See {@link Crypt#crypt(String, String)} for details.\n      *\n      * @throws RuntimeException\n-     *              when a {@link java.security.NoSuchAlgorithmException} is caught.\n+     *             when a {@link java.security.NoSuchAlgorithmException} is caught.\n      */\n     public static String sha512Crypt(byte[] keyBytes) {\n         return sha512Crypt(keyBytes, null);\n      * <p>\n      * See {@link Crypt#crypt(String, String)} for details.\n      *\n-     * @throws IllegalArgumentException if the salt does not match the allowed pattern\n+     * @throws IllegalArgumentException\n+     *             if the salt does not match the allowed pattern\n      * @throws RuntimeException\n-     *              when a {@link java.security.NoSuchAlgorithmException} is caught.\n+     *             when a {@link java.security.NoSuchAlgorithmException} is caught.\n      */\n     public static String sha512Crypt(byte[] keyBytes, String salt) {\n         if (salt == null) {", "timestamp": 1346518860, "metainfo": ""}