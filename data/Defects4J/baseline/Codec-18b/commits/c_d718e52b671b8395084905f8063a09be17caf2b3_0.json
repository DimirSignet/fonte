{"sha": "d718e52b671b8395084905f8063a09be17caf2b3", "log": "Added the ability to customize the Provider which is used to get an instance of MD5 and SHA.  By default, this Utils class will search the list of available Provider objects for implementations, but if you want to supply your own Provider object you may do so by calling the static method setProvider on DigestUtils. + Also, brought test coverage of DigestUtils up to 100%   ", "commit": "\n--- a/src/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/java/org/apache/commons/codec/digest/DigestUtils.java\n \n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n+import java.security.Provider;\n+import java.security.Security;\n \n import org.apache.commons.codec.binary.Hex;\n \n  * @author David Graham\n  */\n public class DigestUtils {\n+    \n+    /**\n+     * This is the provider which DigestUtils uses to get instances of the MD5 and SHA \n+     * algorithms.  This variable is altered if a users wishes to customize the implementation\n+     * of an algorithm.\n+     */\n+    private static Provider provider = null;\n \n \t/**\n \t * Returns an MD5 MessageDigest.\n \t */\n \tprivate static MessageDigest getMd5Digest() {\n \t\ttry {\n-\t\t\treturn MessageDigest.getInstance(\"MD5\");\n-\n+            if( provider != null ) {\n+    \t\t\treturn MessageDigest.getInstance(\"MD5\", provider);\n+            } else {\n+                return MessageDigest.getInstance(\"MD5\");\n+            }\n \t\t} catch (NoSuchAlgorithmException e) {\n-\t\t\tthrow new InternalError(e.getMessage());\n+\t\t\tthrow new RuntimeException(\"Unable to get instance of MD5 message digest in DigestUtils\" + e.getMessage());\n \t\t}\n \t}\n \n \t */\n \tprivate static MessageDigest getShaDigest() {\n \t\ttry {\n-\t\t\treturn MessageDigest.getInstance(\"SHA\");\n-\n+            if( provider != null) {\n+                return MessageDigest.getInstance(\"SHA\", provider);\n+            } else {\n+                return MessageDigest.getInstance(\"SHA\");\n+            }\n \t\t} catch (NoSuchAlgorithmException e) {\n-\t\t\tthrow new InternalError(e.getMessage());\n+            throw new RuntimeException(\"Unable to get instance of SHA message digest in DigestUtils\" + e.getMessage());\n \t\t}\n \t}\n \n \tpublic static String shaHex(String data) {\n \t\treturn new String(Hex.encodeHex(sha(data)));\n \t}\n-\n+    \n+    /**\n+     * Allows for the replacement of the default Provider from which the DigestUtils\n+     * retrieves the implementations of MD5 and SHA.\n+     * \n+     * @param provider an instance of a Provider\n+     */\n+    public static void setProvider(Provider pProvider) {\n+        provider = pProvider;\n+    }\n }\n--- a/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n  */ \n \n package org.apache.commons.codec.digest;\n+\n+import java.security.MessageDigest;\n+import java.security.MessageDigestSpi;\n+import java.security.Security;\n+\n+import org.apache.commons.codec.EncoderException;\n \n import junit.framework.TestCase;\n \n \t\t\t\"a9993e364706816aba3e25717850c26c9cd0d89d\",\n \t\t\tDigestUtils.shaHex(\"abc\"));\n \n+        assertEquals(\n+            \"a9993e364706816aba3e25717850c26c9cd0d89d\",\n+            DigestUtils.shaHex(\"abc\".getBytes()));\n+\n \t\tassertEquals(\n \t\t\t\"84983e441c3bd26ebaae4aa1f95129e5e54670f1\",\n \t\t\tDigestUtils.shaHex(\n \t\t\t\t\"abcdbcdecdefdefgefghfghighij\"\n \t\t\t\t\t+ \"hijkijkljklmklmnlmnomnopnopq\"));\n \t}\n+    \n+    public void testMd5NoAvailable() {\n+        DigestUtils.setProvider( Security.getProviders()[3]);\n \n+        try {        \n+            DigestUtils.md5(\"test\");\n+            fail( \"The provider does not supply the MD5 algorithm, this operation should have failed\");\n+        } catch( RuntimeException re ) {\n+            \n+        }\n+    \n+    }\n+\n+    public void testSHANoAvailable() {\n+        DigestUtils.setProvider( Security.getProviders()[3]);\n+\n+        try {        \n+            DigestUtils.sha(\"test\");\n+            fail( \"The provider does not supply the SHA algorithm, this operation should have failed\");\n+        } catch( RuntimeException re ) {\n+            \n+        }\n+    \n+    }\n }", "timestamp": 1065927280, "metainfo": ""}