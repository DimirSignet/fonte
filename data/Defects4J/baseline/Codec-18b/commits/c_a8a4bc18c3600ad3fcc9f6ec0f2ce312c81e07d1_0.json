{"sha": "a8a4bc18c3600ad3fcc9f6ec0f2ce312c81e07d1", "log": "Tab police  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n          */\n         public void append(final CharSequence str) {\n             for (final Rule.Phoneme ph : this.phonemes) {\n-            \tph.append(str);\n+                ph.append(str);\n             }\n         }\n \n             int patternLength = 1;\n             final List<Rule> rules = this.finalRules.get(input.subSequence(i, i+patternLength));\n             if (rules != null) {\n-            \tfor (final Rule rule : rules) {\n-\t            \tfinal String pattern = rule.getPattern();\n-\t                patternLength = pattern.length();\n-\t            \tif (rule.patternAndContextMatches(this.input, this.i)) {\n-\t\t                this.phonemeBuilder = this.phonemeBuilder.apply(rule.getPhoneme(), maxPhonemes);\n-\t\t                this.found = true;\n-\t\t                break;\n-\t            \t}\n-            \t}\n+                for (final Rule rule : rules) {\n+                    final String pattern = rule.getPattern();\n+                    patternLength = pattern.length();\n+                    if (rule.patternAndContextMatches(this.input, this.i)) {\n+                        this.phonemeBuilder = this.phonemeBuilder.apply(rule.getPhoneme(), maxPhonemes);\n+                        this.found = true;\n+                        break;\n+                    }\n+                }\n             }\n \n             if (!this.found) {", "timestamp": 1383955676, "metainfo": ""}