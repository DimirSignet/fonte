{"sha": "b5955f5948a973a248731b774773bd225af39c82", "log": "Simplify  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n+++ b/src/main/java/org/apache/commons/codec/digest/HmacUtils.java\n  * import static HmacAlgorithms.*;\n  * byte[] key = {1,2,3,4}; // don't use this actual key!\n  * String valueToDigest = \"The quick brown fox jumps over the lazy dog\";\n- * byte[] hmac = HmacUtils.use(HMAC_SHA_224, key).hmac(valueToDigest);\n+ * byte[] hmac = new HmacUtils(HMAC_SHA_224, key).hmac(valueToDigest);\n  * // Mac re-use\n- * HmacUtils hm1 = HmacUtils.use(\"HmacAlgoName\", key); // use a valid name here!\n+ * HmacUtils hm1 = new HmacUtils(\"HmacAlgoName\", key); // use a valid name here!\n  * String hexPom = hm1.hmacHex(new File(\"pom.xml\"));\n  * String hexNot = hm1.hmacHex(new File(\"NOTICE.txt\"));\n  * </pre>\n      * @return HmacMD5 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, byte[]).hmac(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, byte[]).hmac(byte[])}\n      */\n     @Deprecated\n     public static byte[] hmacMd5(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, byte[]).hmac(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, byte[]).hmac(InputStream)}\n      */\n     @Deprecated\n     public static byte[] hmacMd5(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacMD5 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, String).hmac(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, String).hmac(String)}\n      */\n     @Deprecated\n     public static byte[] hmacMd5(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacMD5 MAC for the given key and value as a hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, byte[]).hmacHex(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, byte[]).hmacHex(byte[])}\n      */\n     @Deprecated\n     public static String hmacMd5Hex(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, byte[]).hmacHex(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, byte[]).hmacHex(InputStream)}\n      */\n     @Deprecated\n     public static String hmacMd5Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      * @return HmacMD5 MAC for the given key and value as a hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_MD5, String).hmacHex(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_MD5, String).hmacHex(String)}\n      */\n     @Deprecated\n     public static String hmacMd5Hex(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n     }\n \n     // hmacSha1\n      * @return HmacSHA1 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, byte[]).hmac(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, byte[]).hmac(byte[])}\n      */\n     @Deprecated\n     public static byte[] hmacSha1(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, byte[]).hmac(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, byte[]).hmac(InputStream)}\n      */\n     @Deprecated\n     public static byte[] hmacSha1(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA1 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, String).hmac(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, String).hmac(String)}\n      */\n     @Deprecated\n     public static byte[] hmacSha1(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA1 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, byte[]).hmacHex(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, byte[]).hmacHex(byte[])}\n      */\n     @Deprecated\n     public static String hmacSha1Hex(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, byte[]).hmacHex(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, byte[]).hmacHex(InputStream)}\n      */\n     @Deprecated\n     public static String hmacSha1Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA1 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, String).hmacHex(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_1, String).hmacHex(String)}\n      */\n     @Deprecated\n     public static String hmacSha1Hex(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n     }\n \n     // hmacSha256\n      * @return HmacSHA256 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, byte[]).hmac(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, byte[]).hmac(byte[])}\n      */\n     @Deprecated\n     public static byte[] hmacSha256(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, byte[]).hmac(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, byte[]).hmac(InputStream)}\n      */\n     @Deprecated\n     public static byte[] hmacSha256(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA256 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, String).hmac(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, String).hmac(String)}\n      */\n     @Deprecated\n     public static byte[] hmacSha256(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA256 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, byte[]).hmacHex(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, byte[]).hmacHex(byte[])}\n      */\n     @Deprecated\n     public static String hmacSha256Hex(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, byte[]).hmacHex(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, byte[]).hmacHex(InputStream)}\n      */\n     @Deprecated\n     public static String hmacSha256Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA256 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, String).hmacHex(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_256, String).hmacHex(String)}\n      */\n     @Deprecated\n     public static String hmacSha256Hex(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n     }\n \n     // hmacSha384\n      * @return HmacSHA384 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, byte[]).hmac(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, byte[]).hmac(byte[])}\n      */\n     @Deprecated\n     public static byte[] hmacSha384(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, byte[]).hmac(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, byte[]).hmac(InputStream)}\n      */\n     @Deprecated\n     public static byte[] hmacSha384(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA384 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, String).hmac(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, String).hmac(String)}\n      */\n     @Deprecated\n     public static byte[] hmacSha384(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA384 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, byte[]).hmacHex(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, byte[]).hmacHex(byte[])}\n      */\n     @Deprecated\n     public static String hmacSha384Hex(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, byte[]).hmacHex(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, byte[]).hmacHex(InputStream)}\n      */\n     @Deprecated\n     public static String hmacSha384Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA384 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, String).hmacHex(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_384, String).hmacHex(String)}\n      */\n     @Deprecated\n     public static String hmacSha384Hex(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n     }\n \n     // hmacSha512\n      * @return HmacSHA512 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, byte[]).hmac(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, byte[]).hmac(byte[])}\n      */\n     @Deprecated\n     public static byte[] hmacSha512(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, byte[]).hmac(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, byte[]).hmac(InputStream)}\n      */\n     @Deprecated\n     public static byte[] hmacSha512(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA512 MAC for the given key and value\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, String).hmac(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, String).hmac(String)}\n      */\n     @Deprecated\n     public static byte[] hmacSha512(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA512 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, byte[]).hmacHex(byte[])}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, byte[]).hmacHex(byte[])}\n      */\n     @Deprecated\n     public static String hmacSha512Hex(final byte[] key, final byte[] valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      *             If an I/O error occurs.\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, byte[]).hmacHex(InputStream)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, byte[]).hmacHex(InputStream)}\n      */\n     @Deprecated\n     public static String hmacSha512Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n     }\n \n     /**\n      * @return HmacSHA512 MAC for the given key and value as hex string (lowercase)\n      * @throws IllegalArgumentException\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n-     * @deprecated Use {@code HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, String).hmacHex(String)}\n+     * @deprecated Use {@code new HmacUtils(HmacAlgorithms.HMAC_SHA_512, String).hmacHex(String)}\n      */\n     @Deprecated\n     public static String hmacSha512Hex(final String key, final String valueToDigest) {\n-        return HmacUtils.use(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n     }\n \n     // update\n         this(null);\n     }\n \n-    // Fluent interface\n-\n     private final Mac mac;\n \n     private HmacUtils(final Mac mac) {\n         this.mac = mac;\n     }\n-\n-    private HmacUtils(final String algorithm, final byte[] key) {\n-        this(getInitializedMac(algorithm, key));\n-    }\n-\n \n     /**\n      * Creates an instance using the provided algorithm type.\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n      * @since 1.11\n      */\n-    public static HmacUtils use(final String algorithm, final byte[] key) {\n-        return new HmacUtils(algorithm, key);\n+    public HmacUtils(final String algorithm, final byte[] key) {\n+        this(getInitializedMac(algorithm, key));\n     }\n \n     /**\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n      * @since 1.11\n      */\n-    public static HmacUtils use(final String algorithm, final String key) {\n-        return new HmacUtils(algorithm, StringUtils.getBytesUtf8(key));\n+    public HmacUtils(final String algorithm, final String key) {\n+        this(algorithm, StringUtils.getBytesUtf8(key));\n     }\n \n     /**\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n      * @since 1.11\n      */\n-    public static HmacUtils use(final HmacAlgorithms algorithm, final String key) {\n-        return new HmacUtils(algorithm.getName(), StringUtils.getBytesUtf8(key));\n+    public HmacUtils(final HmacAlgorithms algorithm, final String key) {\n+        this(algorithm.getName(), StringUtils.getBytesUtf8(key));\n     }\n \n     /**\n      *             when a {@link NoSuchAlgorithmException} is caught or key is null or key is invalid.\n      * @since 1.11\n      */\n-    public static HmacUtils use(final HmacAlgorithms algorithm, final byte[] key) {\n-        return use(algorithm.getName(), key);\n+    public HmacUtils(final HmacAlgorithms algorithm, final byte[] key) {\n+        this(algorithm.getName(), key);\n     }\n \n     /**", "timestamp": 1464003835, "metainfo": ""}