{"sha": "83b6dedef42ab67db1faef06f8595c651f03160d", "log": "Added more tests to the StringEncoderComparator class and increased coverage.   ", "commit": "\n--- a/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n+++ b/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n \n package org.apache.commons.codec;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n import junit.framework.TestCase;\n \n+import org.apache.commons.codec.language.DoubleMetaphone;\n import org.apache.commons.codec.language.Soundex;\n \n /**\n- * @version $Revision: 1.5 $ $Date: 2003/10/05 21:45:49 $\n+ * Test cases for the StingEncoderComparator.\n+ * \n+ * @version $Revision: 1.6 $ $Date: 2003/10/12 01:35:17 $\n  * @author Tim O'Brien\n  */\n public class StringEncoderComparatorTest extends TestCase {\n         assertTrue( \"O'Brien and O'Brian didn't come out with \" +\n                     \"the same Soundex, something must be wrong here\",\n                     0 == sCompare.compare( \"O'Brien\", \"O'Brian\" ) );\n+    }\n+    \n+    public void testComparatorWithDoubleMetaphone() throws Exception {\n+        StringEncoderComparator sCompare =\n+            new StringEncoderComparator( new DoubleMetaphone() );\n+            \n+        String[] testArray = { \"Jordan\", \"Sosa\", \"Prior\", \"Pryor\" };\n+        List testList = Arrays.asList( testArray );        \n+        \n+        String[] controlArray = { \"Jordan\", \"Prior\", \"Pryor\", \"Sosa\" };\n \n+        Collections.sort( testList, sCompare);            \n+        \n+        String[] resultArray = (String[]) testList.toArray(new String[0]);\n+        \n+        for( int i = 0; i < resultArray.length; i++) {\n+            assertEquals( \"Result Array not Equal to Control Array at index: \" + i, controlArray[i], resultArray[i] );\n+        }\n     }\n \n+    public void testComparatorWithDoubleMetaphoneAndInvalidInput() throws Exception {\n+        StringEncoderComparator sCompare =\n+            new StringEncoderComparator( new DoubleMetaphone() );\n+           \n+        int compare = sCompare.compare(new Double(3.0), new Long(3));\n+        assertEquals( \"Trying to compare objects that make no sense to the underlying encoder should return a zero compare code\",\n+                                0, compare);        \n+        \n+    }\n }", "timestamp": 1065922517, "metainfo": ""}