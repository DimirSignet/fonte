{"sha": "71191d319734c1ddb804a0ffdcb318db41ff619b", "log": "Refactor comoon code. URLCodec test coverage now 100%/100%.  ", "commit": "\n--- a/src/java/org/apache/commons/codec/net/URLCodec.java\n+++ b/src/java/org/apache/commons/codec/net/URLCodec.java\n public class URLCodec implements BinaryEncoder, BinaryDecoder, StringEncoder, StringDecoder {\n     \n     /**\n+     * Radix used in encoding and decoding.\n+     */\n+    private static final int RADIX = 16;\n+    \n+    /**\n      * The default charset used for string decoding and encoding. Consider this field final. The next major release may\n      * break compatibility and make this field be final.\n      */\n             } else {\n                 buffer.write('%');\n                 char hex1 = Character.toUpperCase(\n-                  Character.forDigit((b >> 4) & 0xF, 16));\n+                  Character.forDigit((b >> 4) & 0xF, RADIX));\n                 char hex2 = Character.toUpperCase(\n-                  Character.forDigit(b & 0xF, 16));\n+                  Character.forDigit(b & 0xF, RADIX));\n                 buffer.write(hex1);\n                 buffer.write(hex2);\n             }\n      * @return array of original bytes \n      * @throws DecoderException Thrown if URL decoding is unsuccessful\n      */\n-    public static final byte[] decodeUrl(byte[] bytes) \n-         throws DecoderException\n-    {\n+    public static final byte[] decodeUrl(byte[] bytes) throws DecoderException {\n         if (bytes == null) {\n             return null;\n         }\n-        ByteArrayOutputStream buffer = new ByteArrayOutputStream(); \n+        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n         for (int i = 0; i < bytes.length; i++) {\n             int b = bytes[i];\n             if (b == '+') {\n                 buffer.write(' ');\n             } else if (b == '%') {\n                 try {\n-                    int u = Character.digit((char)bytes[++i], 16);\n-                    int l = Character.digit((char)bytes[++i], 16);\n-                    if (u == -1 || l == -1) {\n-                        throw new DecoderException(\"Invalid URL encoding\");\n-                    }\n-                    buffer.write((char)((u << 4) + l));\n+                    int u = toCharacterDigit(bytes[++i]);\n+                    int l = toCharacterDigit(bytes[++i]);\n+                    buffer.write((char) ((u << 4) + l));\n                 } catch (ArrayIndexOutOfBoundsException e) {\n-                    throw new DecoderException(\"Invalid URL encoding\");\n+                    throw new DecoderException(\"Invalid URL encoding: \");\n                 }\n             } else {\n                 buffer.write(b);\n             }\n         }\n-        return buffer.toByteArray(); \n-    }\n-\n-\n+        return buffer.toByteArray();\n+    }\n+\n+    private static int toCharacterDigit(byte b) throws DecoderException {\n+        int i = Character.digit((char) b, RADIX);\n+        if (i == -1) {\n+            throw new DecoderException(\"Invalid URL encoding: not a valid digit (radix \" + RADIX + \"): \" + b);\n+        }\n+        return i;\n+    }\n     /**\n      * Encodes an array of bytes into an array of URL safe 7-bit \n      * characters. Unsafe characters are escaped.", "timestamp": 1248473777, "metainfo": ""}