{"sha": "9a2c8207033ef96ba390009ac971a0c0bbc797f7", "log": "CODEC-138 Complete FilterInputStream interface for BaseNCodecInputStream   ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java\n+++ b/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java\n     }\n \n     /**\n+     * Marks the current position in this input stream.\n+     * <p>The {@link #mark} method of {@link BaseNCodecInputStream} does nothing.</p>\n+     *\n+     * @param readLimit the maximum limit of bytes that can be read before the mark position becomes invalid.\n+     */\n+    @Override\n+    public synchronized void mark(int readLimit) {\n+    }\n+\n+    /**\n      * {@inheritDoc}\n-     * \n-     * @return false\n+     *\n+     * @return always returns <code>false</code>\n      */\n     @Override\n     public boolean markSupported() {\n         return false; // not an easy job to support marks\n     }\n+\n     /**\n      * Reads one <code>byte</code> from this input stream.\n      * \n     }\n \n     /**\n+     * Repositions this stream to the position at the time the mark method was last called on this input stream.\n+     * <p>The {@link #reset} method of {@link BaseNCodecInputStream} does nothing except throw an {@link IOException}.</p>\n+     *\n+     * @throws IOException if this method is invoked\n+     */\n+    @Override\n+    public synchronized void reset() throws IOException {\n+        throw new IOException(\"mark/reset not supported\");\n+    }\n+\n+    /**\n      * {@inheritDoc}\n      *\n      * @throws IllegalArgumentException if the provided skip length is negative", "timestamp": 1333407099, "metainfo": ""}