{"sha": "591a2ecaf3fd08b8f77d2f1e2e15f2258b583fae", "log": "Rename test method.  ", "commit": "\n--- a/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java\n+++ b/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java\n import static org.junit.Assert.assertEquals;\n \n import java.util.Collections;\n+import java.util.Random;\n \n import org.apache.commons.codec.EncoderException;\n import org.apache.commons.codec.StringEncoder;\n      */\n     @Ignore\n     @Test\n-    public void encodeGna() throws EncoderException {\n+    public void testEncodeGna() throws EncoderException {\n         BeiderMorseEncoder bmpm = new BeiderMorseEncoder();\n         bmpm.setNameType(NameType.GENERIC);\n         bmpm.setRuleType(RuleType.APPROX);\n         BeiderMorseEncoder bmpm = new BeiderMorseEncoder();\n         bmpm.setRuleType(RuleType.RULES);\n     }\n+    \n+    @Ignore\n+    @Test\n+    public void testSpeedCheck() throws EncoderException {\n+        char[] chars = new char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'o','u' };\n+        BeiderMorseEncoder bmpm = new BeiderMorseEncoder();\n+        bmpm.setNameType(NameType.GENERIC);\n+        bmpm.setRuleType(RuleType.APPROX);\n+        StringBuffer stringBuffer = new StringBuffer();\n+        Random rand = new Random();\n+        stringBuffer.append(chars[rand.nextInt(chars.length)]);\n+        long start;\n+        for (int i = 0; i < 20; i++) {\n+            start = System.currentTimeMillis();\n+            System.out.println(\"String to encode:\" + stringBuffer.toString());\n+            bmpm.encode(stringBuffer.toString());\n+            stringBuffer.append(chars[rand.nextInt(chars.length)]);\n+            System.out.println(\"Elapsed time in ms:\"\n+                    + (System.currentTimeMillis() - start));\n+        }\n+    }\n }", "timestamp": 1311787790, "metainfo": ""}