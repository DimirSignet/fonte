{"sha": "e983a64122755c52935c514c784b85036d685c07", "log": "Removed the 1.4 method call on MessageDigest  from DigestUtils.   ", "commit": "\n--- a/src/java/org/apache/commons/codec/digest/DigestUtils.java\n+++ b/src/java/org/apache/commons/codec/digest/DigestUtils.java\n \n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n-import java.security.Provider;\n-import java.security.Security;\n \n import org.apache.commons.codec.binary.Hex;\n \n  * @author David Graham\n  */\n public class DigestUtils {\n-    \n-    /**\n-     * This is the provider which DigestUtils uses to get instances of the MD5 and SHA \n-     * algorithms.  This variable is altered if a users wishes to customize the implementation\n-     * of an algorithm.\n-     */\n-    private static Provider provider = null;\n \n \t/**\n \t * Returns an MD5 MessageDigest.\n \t */\n \tprivate static MessageDigest getMd5Digest() {\n \t\ttry {\n-            if( provider != null ) {\n-    \t\t\treturn MessageDigest.getInstance(\"MD5\", provider);\n-            } else {\n-                return MessageDigest.getInstance(\"MD5\");\n-            }\n+\t\t\treturn MessageDigest.getInstance(\"MD5\");\n+\n \t\t} catch (NoSuchAlgorithmException e) {\n-\t\t\tthrow new RuntimeException(\"Unable to get instance of MD5 message digest in DigestUtils\" + e.getMessage());\n+\t\t\tthrow new RuntimeException(e.getMessage());\n \t\t}\n \t}\n \n \t */\n \tprivate static MessageDigest getShaDigest() {\n \t\ttry {\n-            if( provider != null) {\n-                return MessageDigest.getInstance(\"SHA\", provider);\n-            } else {\n-                return MessageDigest.getInstance(\"SHA\");\n-            }\n+\t\t\treturn MessageDigest.getInstance(\"SHA\");\n+\n \t\t} catch (NoSuchAlgorithmException e) {\n-            throw new RuntimeException(\"Unable to get instance of SHA message digest in DigestUtils\" + e.getMessage());\n+\t\t\tthrow new RuntimeException(e.getMessage());\n \t\t}\n \t}\n \n \tpublic static String shaHex(String data) {\n \t\treturn new String(Hex.encodeHex(sha(data)));\n \t}\n-    \n-    /**\n-     * Allows for the replacement of the default Provider from which the DigestUtils\n-     * retrieves the implementations of MD5 and SHA.\n-     * \n-     * @param provider an instance of a Provider\n-     */\n-    public static void setProvider(Provider pProvider) {\n-        provider = pProvider;\n-    }\n+\n }\n--- a/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n+++ b/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n \t\t\t\t\t+ \"hijkijkljklmklmnlmnomnopnopq\"));\n \t}\n     \n-    public void testMd5NoAvailable() {\n-        DigestUtils.setProvider( Security.getProviders()[3]);\n-\n-        try {        \n-            DigestUtils.md5(\"test\");\n-            fail( \"The provider does not supply the MD5 algorithm, this operation should have failed\");\n-        } catch( RuntimeException re ) {\n-            \n-        }\n-    \n-    }\n-\n-    public void testSHANoAvailable() {\n-        DigestUtils.setProvider( Security.getProviders()[3]);\n-\n-        try {        \n-            DigestUtils.sha(\"test\");\n-            fail( \"The provider does not supply the SHA algorithm, this operation should have failed\");\n-        } catch( RuntimeException re ) {\n-            \n-        }\n-    \n-    }\n }", "timestamp": 1066183828, "metainfo": ""}