{"sha": "9164cd83b44ae9e83bd11c50a5e59e8c6887771e", "log": "Checkstyle: Remove trailing spaces.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n+++ b/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n      * <p>\n      * Compares two CharSequences, returning <code>true</code> if they represent equal sequences of characters.\n      * </p>\n-     * \n+     *\n      * <p>\n      * <code>null</code>s are handled without exceptions. Two <code>null</code> references are considered to be equal.\n      * The comparison is case sensitive.\n      * </p>\n-     * \n+     *\n      * <pre>\n      * StringUtils.equals(null, null)   = true\n      * StringUtils.equals(null, \"abc\")  = false\n      * StringUtils.equals(\"abc\", \"abc\") = true\n      * StringUtils.equals(\"abc\", \"ABC\") = false\n      * </pre>\n-     * \n+     *\n      * <p>\n      * Copied from Apache Commons Lang r1583482 on April 10, 2014 (day of 3.3.2 release).\n      * </p>\n-     * \n+     *\n      * @see Object#equals(Object)\n      * @param cs1\n      *            the first CharSequence, may be <code>null</code>\n--- a/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n \n         /**\n          * Deprecated since 1.9.\n-         * \n-         * @param right the Phoneme to join \n-         * @return a new Phoneme \n+         *\n+         * @param right the Phoneme to join\n+         * @return a new Phoneme\n          * @deprecated since 1.9\n          */\n         @Deprecated\n--- a/src/test/java/org/apache/commons/codec/binary/Base32Test.java\n+++ b/src/test/java/org/apache/commons/codec/binary/Base32Test.java\n         {\"fooba\"  ,\"MZXW6YTB\"},\n         {\"foobar\" ,\"MZXW6YTBOI%%%%%%\"},\n     };\n-    \n+\n     @Test\n     public void testBase32Samples() throws Exception {\n         final Base32 codec = new Base32();\n             //assertEquals(b[0],codec.decode(b[1]));\n         }\n     }\n-    \n+\n     @Test\n     public void testBase32SamplesNonDefaultPadding() throws Exception {\n         final Base32 codec = new Base32((byte)0x25); // '%' <=> 0x25\n-        \n+\n         for (final String[] element : BASE32_PAD_TEST_CASES) {\n                 assertEquals(element[1], codec.encodeAsString(element[0].getBytes(Charsets.UTF_8)));\n         }\n--- a/src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java\n+++ b/src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java\n //    public void testGetEncodedLength() {\n //        fail(\"Not yet implemented\");\n //    }\n-    \n+\n     @Test\n     public void testProvidePaddingByte() {\n         // Given\n             void decode(final byte[] pArray, final int i, final int length, final Context context) {\n             }\n         };\n-        \n+\n         // When\n         byte actualPaddingByte = codec.pad;\n-        \n+\n         // Then\n         assertEquals(0x25, actualPaddingByte);\n     }\n--- a/src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n+++ b/src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n \n     @Test\n     public void testIsDoubleMetaphoneEqualBasic() {\n-        final String[][] testFixture = new String[][] { { \n+        final String[][] testFixture = new String[][] { {\n                 \"\", \"\" }, {\n                 \"Case\", \"case\" }, {\n                 \"CASE\", \"Case\" }, {", "timestamp": 1414387616, "metainfo": ""}