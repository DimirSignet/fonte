{"sha": "38cc09c6bc617c0bb6ebbe32756e39cb3ea35d1b", "log": "Fix Javadoc 8 errors.  ", "commit": "\n--- a/src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java\n+++ b/src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java\n  * <p>\n  * The Daitch-Mokotoff Soundex algorithm is a refinement of the Russel and American Soundex algorithms, yielding greater\n  * accuracy in matching especially Slavish and Yiddish surnames with similar pronunciation but differences in spelling.\n+ * </p>\n  * <p>\n  * The main differences compared to the other soundex variants are:\n+ * </p>\n  * <ul>\n  * <li>coded names are 6 digits long\n  * <li>the initial character of the name is coded\n  * Note: this implementation has additional branching rules compared to the original description of the algorithm. The\n  * rules can be customized by overriding the default rules contained in the resource file\n  * {@code org/apache/commons/codec/language/dmrules.txt}.\n+ * </p>\n  * <p>\n  * This class is thread-safe.\n+ * </p>\n  *\n  * @see Soundex\n  * @see <a href=\"http://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex\"> Wikipedia - Daitch-Mokotoff Soundex</a>\n      * <p>\n      * With ASCII-folding enabled, certain accented characters will be transformed to equivalent ASCII characters, e.g.\n      * \u00e8 -&gt; e.\n+     * </p>\n      *\n      * @param folding\n      *            if ASCII-folding shall be performed before encoding\n      * Performs a cleanup of the input string before the actual soundex transformation.\n      * <p>\n      * Removes all whitespace characters and performs ASCII folding if enabled.\n+     * </p>\n      *\n      * @param input\n      *            the input string to cleanup\n      * <p>\n      * This method is provided in order to satisfy the requirements of the Encoder interface, and will throw an\n      * EncoderException if the supplied object is not of type java.lang.String.\n+     * </p>\n      *\n      * @see #soundex(String)\n      *\n      *\n      * @see #soundex(String)\n      *\n-     * @param str\n+     * @param source\n      *            A String object to encode\n      * @return A DM Soundex code corresponding to the String supplied\n      * @throws IllegalArgumentException\n      * <p>\n      * In case a string is encoded into multiple codes (see branching rules), the result will contain all codes,\n      * separated by '|'.\n+     * </p>\n      * <p>\n      * Example: the name \"AUERBACH\" is encoded as both\n+     * </p>\n      * <ul>\n      * <li>097400</li>\n      * <li>097500</li>\n      * </ul>\n+     * <p>\n      * Thus the result will be \"097400|097500\".\n-     *\n-     * @param str\n+     * </p>\n+     *\n+     * @param source\n      *            A String object to encode\n      * @return A string containing a set of DM Soundex codes corresponding to the String supplied\n      * @throws IllegalArgumentException\n     }\n \n     /**\n-     * Perform the actual DM soundex algorithm on the input string.\n+     * Perform the actual DM Soundex algorithm on the input string.\n      *\n      * @param source\n      *            A String object to encode", "timestamp": 1415068247, "metainfo": ""}