{"sha": "f08f203b92fae7018df069398b3c5f4ab773b62a", "log": "moved testParseCVS to sandbox DateFormatterTest.java   ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateUtilsTest.java\n         dateTimeParser.setTimeZone(defaultZone);\n     }\n \n-    // TODO: Decide whether this code is removed or goes into 2.1\n-    /*\n-     * Tests the parse method, which is supposed to handle various strings\n-     * as flexibly as CVS supports.\n-    public void testParseCVS() throws Exception {\n-        try {\n-            DateUtils.parseCVS(null);\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            DateUtils.parseCVS(\"gobbledegook\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            DateUtils.parseCVS(\"ago\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            DateUtils.parseCVS(\"1 junk ago\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            DateUtils.parseCVS(\"1month ago\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-        try {\n-            DateUtils.parseCVS(\"last month\");\n-            fail();\n-        } catch (IllegalArgumentException ex) {}\n-\n-\n-        //This is difficult to test since the \"now\" used in the\n-        //  parse function cannot be controlled.  We could possibly control\n-        //  it by trying before and after and making sure the value we expect\n-        //  is between the two values calculated.\n-        //For now we're just using the custom assertEquals that takes a delta\n-\n-        Calendar now = null;\n-\n-        // M/dd/yy H:mm:ss z\n-        now = Calendar.getInstance();\n-        now.set(Calendar.MILLISECOND, 0);\n-        assertEquals(\"parseCVS format M/dd/yy H:mm:ss z\",\n-                  now, DateUtils.parseCVS(new SimpleDateFormat(\"M/dd/yy H:mm:ss z\").format(now.getTime())), 50);\n-        // MMM d, yyyy h:mm a\n-        now = Calendar.getInstance();\n-        now.set(Calendar.MILLISECOND, 0);\n-        now.set(Calendar.SECOND, 0);\n-        assertEquals(\"parseCVS format MMM d, yyyy h:mm a\",\n-                  now, DateUtils.parseCVS(new SimpleDateFormat(\"MMM d, yyyy h:mm a\").format(now.getTime())), 50);\n-        // h:mm z\n-        //\n-        // This format is difficult to test using the current time because the\n-        // parseCVS method applies the default date of January 1, 1970 to the\n-        // parsed time. The most straightforward way to test the parse is to\n-        // pass in a known value, and test the output against this know value.\n-        // \n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT\"));\n-        assertEquals(\"parseCVS format h:mm z 16:30 GMT\", \n-                  now, DateUtils.parseCVS(\"16:30 GMT\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 EST\"));\n-        assertEquals(\"parseCVS format h:mm z 16:30 EST\", \n-                  now, DateUtils.parseCVS(\"16:30 EST\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT-05:00\"));\n-        assertEquals(\"parseCVS format h:mm z 16:30 GMT-05:00\", \n-                  now, DateUtils.parseCVS(\"16:30 GMT-05:00\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"16:30 GMT+01:00\"));\n-        assertEquals(\"parseCVS format h:mm z 16:30 GMT+01:00\", \n-                  now, DateUtils.parseCVS(\"16:30 GMT+01:00\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT\"));\n-        assertEquals(\"parseCVS format h:mm z 06:30 GMT\", \n-                  now, DateUtils.parseCVS(\"06:30 GMT\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 EST\"));\n-        assertEquals(\"parseCVS format h:mm z 06:30 EST\", \n-                  now, DateUtils.parseCVS(\"06:30 EST\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT-05:00\"));\n-        assertEquals(\"parseCVS format h:mm z 06:30 GMT-05:00\", \n-                  now, DateUtils.parseCVS(\"06:30 GMT-05:00\"), 50);\n-        now = Calendar.getInstance();\n-        now.setTime(new SimpleDateFormat(\"h:mm z\").parse(\"06:30 GMT+01:00\"));\n-        assertEquals(\"parseCVS format h:mm z 06:30 GMT+01:00\", \n-                  now, DateUtils.parseCVS(\"06:30 GMT+01:00\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        now.add(Calendar.WEEK_OF_MONTH, -1);\n-        assertEquals(\"parseCVS a week ago\",\n-                now, DateUtils.parseCVS(\"a week ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.WEEK_OF_MONTH, -1);\n-        assertEquals(\"parseCVS an week ago\",\n-                now, DateUtils.parseCVS(\"an week ago\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        now.add(Calendar.DAY_OF_MONTH, -14);\n-        assertEquals(\"parseCVS 1 fortnight ago\",\n-                now, DateUtils.parseCVS(\"1 fortnight ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.DAY_OF_MONTH, -14);\n-        assertEquals(\"parseCVS 1 fortnights ago\",\n-                now, DateUtils.parseCVS(\"1 fortnights ago\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        now.add(Calendar.MINUTE, -1);\n-        assertEquals(\"parseCVS 1 minute ago\",\n-                now, DateUtils.parseCVS(\"1 minute ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.MINUTE, -8);\n-        assertEquals(\"parseCVS 8 minutes ago\",\n-                now, DateUtils.parseCVS(\"8 minutes ago\"), 50);\n-\n-        now = Calendar.getInstance();\n-        now.add(Calendar.MILLISECOND, -1);\n-        assertEquals(\"parseCVS 1 millisecond ago\",\n-                now, DateUtils.parseCVS(\"1 millisecond ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.MILLISECOND, -100);\n-        assertEquals(\"parseCVS 1 milliseconds ago\",\n-                now, DateUtils.parseCVS(\"100 milliseconds ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.SECOND, -30);\n-        assertEquals(\"parseCVS 30 second ago\",\n-                now, DateUtils.parseCVS(\"30 second ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.SECOND, -30);\n-        assertEquals(\"parseCVS 30 seconds ago\",\n-                now, DateUtils.parseCVS(\"30 seconds ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.HOUR, -2);\n-        assertEquals(\"parseCVS 2 hour ago\",\n-                now, DateUtils.parseCVS(\"2 hour ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.HOUR, -2);\n-        assertEquals(\"parseCVS 2 hours ago\",\n-                now, DateUtils.parseCVS(\"2 hours ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.DAY_OF_MONTH, -2);\n-        assertEquals(\"parseCVS 2 day ago\",\n-                now, DateUtils.parseCVS(\"2 day ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.DAY_OF_MONTH, -2);\n-        assertEquals(\"parseCVS 2 days ago\",\n-                now, DateUtils.parseCVS(\"2 days ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.MONTH, -2);\n-        assertEquals(\"parseCVS 2 month ago\",\n-                now, DateUtils.parseCVS(\"2 month ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.MONTH, -2);\n-        assertEquals(\"parseCVS 2 months ago\",\n-                now, DateUtils.parseCVS(\"2 months ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.YEAR, -2);\n-        assertEquals(\"parseCVS 2 year ago\",\n-                now, DateUtils.parseCVS(\"2 year ago\"), 50);\n-        now = Calendar.getInstance();\n-        now.add(Calendar.YEAR, -2);\n-        assertEquals(\"parseCVS 2 years ago\",\n-                now, DateUtils.parseCVS(\"2 years ago\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        now.add(Calendar.DATE, -1);\n-        assertEquals(\"parseCVS yesterday\",\n-                now, DateUtils.parseCVS(\"yesterday\"), 50);\n-\n-        now = Calendar.getInstance();\n-        now.add(Calendar.DATE, 1);\n-        assertEquals(\"parseCVS tomorrow\",\n-                now, DateUtils.parseCVS(\"tomorrow\"), 50);\n-\n-        now = Calendar.getInstance();\n-        //Sunday would be 1, Saturday would be 7, so we walk back up to 6 days.\n-        if (now.get(Calendar.DAY_OF_WEEK) == 1) {\n-            //If Sunday already, we go back a full week\n-            now.add(Calendar.DATE, -7);\n-        } else {\n-            now.add(Calendar.DATE, 1 - now.get(Calendar.DAY_OF_WEEK));\n-        }\n-        assertEquals(\"parseCVS last Sunday\",\n-                now, DateUtils.parseCVS(\"last Sunday\"), 50);\n-\n-        now = Calendar.getInstance();\n-        now.add(Calendar.DATE, -7);\n-        assertEquals(\"parseCVS last week\",\n-                now, DateUtils.parseCVS(\"last week\"), 50);\n-        \n-        now = Calendar.getInstance();\n-        //January would be 0, December would be 11, so we walk back up to 11 months\n-        if (now.get(Calendar.MONTH) == 0) {\n-            //If January already, we go back a full year\n-            now.add(Calendar.MONTH, -12);\n-        } else {\n-            now.add(Calendar.MONTH, 0 - now.get(Calendar.MONTH));\n-        }\n-        assertEquals(\"parseCVS last January\",\n-                now, DateUtils.parseCVS(\"last January\"), 50);\n-    }\n-     */\n-\n     /**\n      * Tests the iterator exceptions\n      */", "timestamp": 1089571235, "metainfo": ""}