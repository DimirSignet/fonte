{"sha": "193e4d8420c3f5718ce67d67e85827e5f5895f77", "log": "Add comment about new Tokenizer class in split method   ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author Phil Steitz\n  * @author Al Chou\n  * @since 1.0\n- * @version $Id: StringUtils.java,v 1.122 2003/12/24 01:33:30 scolebourne Exp $\n+ * @version $Id: StringUtils.java,v 1.123 2004/02/13 23:32:39 scolebourne Exp $\n  */\n public class StringUtils {\n     // Performance testing notes (JDK 1.4, Jul03, scolebourne)\n      * Whitespace is defined by {@link Character#isWhitespace(char)}.</p>\n      *\n      * <p>The separator is not included in the returned String array.\n-     * Adjacent separators are treated as one separator.</p>\n+     * Adjacent separators are treated as one separator.\n+     * For more control over the split use the Tokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      * This is an alternative to using StringTokenizer.</p>\n      *\n      * <p>The separator is not included in the returned String array.\n-     * Adjacent separators are treated as one separator.</p>\n+     * Adjacent separators are treated as one separator.\n+     * For more control over the split use the Tokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.</p>\n      *\n      * This is an alternative to using StringTokenizer.</p>\n      *\n      * <p>The separator is not included in the returned String array.\n-     * Adjacent separators are treated as one separator.</p>\n+     * Adjacent separators are treated as one separator.\n+     * For more control over the split use the Tokenizer class.</p>\n      *\n      * <p>A <code>null</code> input String returns <code>null</code>.\n      * A <code>null</code> separatorChars splits on whitespace.</p>", "timestamp": 1076715159, "metainfo": ""}