{"sha": "62af886d8d44c0520389783787c402945644e160", "log": "- Handle a minor case in fallbacks slightly differently - Verify an error is emitted if you try to assign the result of goog.getMsgWithFallback to an MSG variable.  R=kai DELTA=44  (34 added, 7 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5653   ", "commit": "\n--- a/src/com/google/javascript/jscomp/ReplaceMessages.java\n+++ b/src/com/google/javascript/jscomp/ReplaceMessages.java\n \n package com.google.javascript.jscomp;\n \n-import com.google.common.collect.Iterables;\n import com.google.javascript.rhino.IR;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n   @Override\n   void processMessageFallback(\n       Node callNode, JsMessage message1, JsMessage message2) {\n-    boolean isEmptyBundle = Iterables.isEmpty(bundle.getAllMessages());\n     boolean isFirstMessageTranslated =\n         (bundle.getMessage(message1.getId()) != null);\n-    Node replacementNode = isFirstMessageTranslated || isEmptyBundle ?\n-        callNode.getChildAtIndex(1) : callNode.getChildAtIndex(2);\n+    boolean isSecondMessageTranslated =\n+        (bundle.getMessage(message2.getId()) != null);\n+    Node replacementNode =\n+        isSecondMessageTranslated && !isFirstMessageTranslated ?\n+        callNode.getChildAtIndex(2) : callNode.getChildAtIndex(1);\n     callNode.getParent().replaceChild(callNode,\n         replacementNode.detachFromParent());\n   }\n--- a/test/com/google/javascript/jscomp/JsMessageVisitorTest.java\n+++ b/test/com/google/javascript/jscomp/JsMessageVisitorTest.java\n         \"(function () {/** @desc Hello2 */ var MSG_HELLO = goog.getMsg('a')})\");\n \n     assertEquals(0, compiler.getWarningCount());\n-\n-    String errors = Joiner.on(\"\\n\").join(compiler.getErrors());\n-    assertEquals(\"There should be one error. \" + errors,\n-        1, compiler.getErrorCount());\n-    assertEquals(errors, JsMessageVisitor.MESSAGE_DUPLICATE_KEY,\n-        compiler.getErrors()[0].getType());\n+    assertOneError(JsMessageVisitor.MESSAGE_DUPLICATE_KEY);\n   }\n \n   public void testNoDuplicateErrorOnExternMessage() {\n         \"var MSG_EXTERNAL_2 = goog.getMsg('a')})\");\n   }\n \n+  public void testErrorWhenUsingMsgPrefixWithFallback() {\n+    extractMessages(\n+        \"/** @desc Hello */ var MSG_HELLO_1 = goog.getMsg('hello');\\n\" +\n+        \"/** @desc Hello */ var MSG_HELLO_2 = goog.getMsg('hello');\\n\" +\n+        \"/** @desc Hello */ \" +\n+        \"var MSG_HELLO_3 = goog.getMsgWithFallback(MSG_HELLO_1, MSG_HELLO_2);\");\n+    assertOneError(JsMessageVisitor.MESSAGE_TREE_MALFORMED);\n+  }\n+\n+  private void assertOneError(DiagnosticType type) {\n+    String errors = Joiner.on(\"\\n\").join(compiler.getErrors());\n+    assertEquals(\"There should be one error. \" + errors,\n+        1, compiler.getErrorCount());\n+    JSError error = compiler.getErrors()[0];\n+    assertEquals(type, error.getType());\n+  }\n+\n   private void extractMessagesSafely(String input) {\n     extractMessages(input);\n     JSError[] errors = compiler.getErrors();\n--- a/test/com/google/javascript/jscomp/ReplaceMessagesTest.java\n+++ b/test/com/google/javascript/jscomp/ReplaceMessagesTest.java\n          \"var x = MSG_A;\");\n   }\n \n+  public void testNoUseFallback2() {\n+    registerMessage(new JsMessage.Builder(\"MSG_C\")\n+        .appendStringPart(\"translated\")\n+        .build());\n+    test(\"/** @desc d */\\n\" +\n+         \"var MSG_A = goog.getMsg('msg A');\" +\n+         \"/** @desc d */\\n\" +\n+         \"var MSG_B = goog.getMsg('msg B');\" +\n+         \"var x = goog.getMsgWithFallback(MSG_A, MSG_B);\",\n+         \"var MSG_A = 'msg A';\" +\n+         \"var MSG_B = 'msg B';\" +\n+         \"var x = MSG_A;\");\n+  }\n+\n   private void registerMessage(JsMessage message) {\n     messages.put(message.getKey(), message);\n   }", "timestamp": 1350333623, "metainfo": ""}