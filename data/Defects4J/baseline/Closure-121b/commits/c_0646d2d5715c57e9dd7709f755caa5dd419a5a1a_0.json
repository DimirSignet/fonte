{"sha": "0646d2d5715c57e9dd7709f755caa5dd419a5a1a", "log": "Fixes the issue when @ngInject applied to non-supported node type and closure compiler throws an exception instead of displaying an error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49457166", "commit": "\n--- a/src/com/google/javascript/jscomp/AngularPass.java\n+++ b/src/com/google/javascript/jscomp/AngularPass.java\n         target = n;\n         break;\n     }\n+    // checks that it is a function declaration.\n+    if (fn == null || !fn.isFunction()) {\n+      compiler.report(t.makeError(n, INJECT_NON_FUNCTION_ERROR));\n+      return;\n+    }\n     // checks that the declaration took place in a block or in a global scope.\n     if (!target.getParent().isScript() && !target.getParent().isBlock()) {\n       compiler.report(t.makeError(n, INJECT_IN_NON_GLOBAL_OR_BLOCK_ERROR));\n-      return;\n-    }\n-    // checks that it is a function declaration.\n-    if (fn == null || !fn.isFunction()) {\n-      compiler.report(t.makeError(n, INJECT_NON_FUNCTION_ERROR));\n       return;\n     }\n     // checks that name is present, which must always be the case unless the\n--- a/test/com/google/javascript/jscomp/AngularPassTest.java\n+++ b/test/com/google/javascript/jscomp/AngularPassTest.java\n   }\n \n   public void testNgInjectNonFunction() throws Exception {\n+    test(\"var ns = {}; ns.subns = {};\" +\n+        \"ns.subns.fake = function(x, y){};\" +\n+        \"/** @ngInject */ ns.subns.fake(1);\",\n+        null, AngularPass.INJECT_NON_FUNCTION_ERROR);\n+\n     test(\"/** @ngInject */ var a = 10\",\n          null, AngularPass.INJECT_NON_FUNCTION_ERROR);\n ", "timestamp": 1374018443, "metainfo": ""}