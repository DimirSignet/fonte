{"sha": "dc8e627390bcd4568447aa6875946ff1506e28b4", "log": "enforce the 'new' keyword correctly   Tested: yes  R=acleung DELTA=102  (64 added, 37 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3081   ", "commit": "\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n         ensureTyped(t, n);\n       }\n     } else {\n-      // TODO(user): add support for namespaced objects.\n-      if (constructor.getType() != Token.GETPROP) {\n-        // TODO(user): make the constructor node have lineno/charno\n-        // and use constructor for a more precise error indication.\n-        // It seems that GETPROP nodes are missing this information.\n-        Node line;\n-        if (constructor.getLineno() < 0 || constructor.getCharno() < 0) {\n-          line = n;\n-        } else {\n-          line = constructor;\n-        }\n-        report(t, line, NOT_A_CONSTRUCTOR);\n-      }\n+      report(t, n, NOT_A_CONSTRUCTOR);\n       ensureTyped(t, n);\n     }\n   }\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"actual parameter 1 of Foo does not match formal parameter\\n\" +\n         \"found   : number\\n\" +\n         \"required: string\");\n+  }\n+\n+  public void testNew17() throws Exception {\n+    testTypes(\"var goog = {}; goog.x = 3; new goog.x\",\n+              \"cannot instantiate non-constructor\");\n+  }\n+\n+  public void testNew18() throws Exception {\n+    testTypes(\"var goog = {};\" +\n+              \"/** @constructor */ goog.F = function() {};\" +\n+              \"/** @constructor */ goog.G = goog.F;\");\n   }\n \n   public void testName1() throws Exception {", "timestamp": 1313784117, "metainfo": ""}