{"sha": "11dfeeca23ed8e81cc10a80f646a333d28f31b24", "log": "goog.inherits should not prevent aliases from being inlined. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50241583", "commit": "\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n import com.google.common.collect.ImmutableSet;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Sets;\n+import com.google.javascript.jscomp.CodingConvention.SubclassRelationship;\n import com.google.javascript.rhino.JSDocInfo;\n import com.google.javascript.rhino.Node;\n import com.google.javascript.rhino.Token;\n           case Token.NEG:\n             break;\n           case Token.CALL:\n-            type = n == parent.getFirstChild()\n-                   ? Ref.Type.CALL_GET\n-                   : Ref.Type.ALIASING_GET;\n+            if (n == parent.getFirstChild()) {\n+              // It is a call target\n+              type = Ref.Type.CALL_GET;\n+            } else if (isClassDefiningCall(parent)) {\n+              type = Ref.Type.DIRECT_GET;\n+            } else {\n+              type = Ref.Type.ALIASING_GET;\n+            }\n             break;\n           case Token.NEW:\n             type = n == parent.getFirstChild()\n       }\n \n       handleGet(module, scope, n, parent, name, type);\n+    }\n+\n+    private boolean isClassDefiningCall(Node callNode) {\n+      SubclassRelationship classes =\n+          compiler.getCodingConvention().getClassesDefinedByCall(callNode);\n+      return classes != null;\n     }\n \n     /**\n--- a/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n+++ b/test/com/google/javascript/jscomp/CollapsePropertiesTest.java\n         \"}\",\n         null);\n   }\n+\n+  public void testCollapsePropertiesOfClass1() {\n+    test(\n+        \"/** @constructor */\\n\" +\n+        \"var namespace = function() {};\\n\" +\n+        \"goog.inherits(namespace, Object);\\n\" +\n+        \"\\n\" +\n+        \"namespace.includeExtraParam = true;\\n\" +\n+        \"\\n\" +\n+        \"/** @enum {number} */\\n\" +\n+        \"namespace.Param = {\\n\" +\n+        \"  param1: 1,\\n\" +\n+        \"  param2: 2\\n\" +\n+        \"};\\n\" +\n+        \"\\n\" +\n+        \"if (namespace.includeExtraParam) {\\n\" +\n+        \"  namespace.Param.optParam = 3;\\n\" +\n+        \"}\\n\" +\n+        \"\\n\" +\n+        \"function f() {\\n\" +\n+        \"  var Param = namespace.Param;\\n\" +\n+        \"  log(namespace.Param.optParam);\\n\" +\n+        \"  log(Param.optParam);\\n\" +\n+        \"}\",\n+        \"var namespace = function() {};\\n\" +\n+        \"goog.inherits(namespace, Object);\\n\" +\n+        \"var namespace$includeExtraParam = true;\\n\" +\n+        \"var namespace$Param$param1 = 1;\\n\" +\n+        \"var namespace$Param$param2 = 2;\\n\" +\n+        \"if (namespace$includeExtraParam) {\\n\" +\n+        \"  var namespace$Param$optParam = 3;\\n\" +\n+        \"}\\n\" +\n+        \"function f() {\\n\" +\n+        \"  var Param = null;\\n\" +\n+        \"  log(namespace$Param$optParam);\\n\" +\n+        \"  log(namespace$Param$optParam);\\n\" +\n+        \"}\");\n+  }\n }", "timestamp": 1375753523, "metainfo": ""}