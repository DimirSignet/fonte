{"sha": "c4f38043f0aa21e74c341f3056a0d9b556a44c3e", "log": "Fix bug with IN inside FOR in CodeGenerator.  This was exposed by the new MinimizeConditions algorithm. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46735852", "commit": "\n--- a/src/com/google/javascript/jscomp/CodeGenerator.java\n+++ b/src/com/google/javascript/jscomp/CodeGenerator.java\n \n       case Token.COMMA:\n         Preconditions.checkState(childCount == 2);\n-        unrollBinaryOperator(n, Token.COMMA, \",\", context, Context.OTHER, 0, 0);\n+        unrollBinaryOperator(n, Token.COMMA, \",\", context,\n+            getContextForNoInOperator(context), 0, 0);\n         break;\n \n       case Token.NUMBER:\n         addExpr(n, isArrayOrFunctionArgument ? 1 : 0, lhsContext);\n       } else {\n         cc.listSeparator();\n-        addExpr(n, isArrayOrFunctionArgument ? 1 : 0, Context.OTHER);\n+        addExpr(n, isArrayOrFunctionArgument ? 1 : 0,\n+            getContextForNoInOperator(lhsContext));\n       }\n     }\n   }\n--- a/test/com/google/javascript/jscomp/CodePrinterTest.java\n+++ b/test/com/google/javascript/jscomp/CodePrinterTest.java\n     // Test we correctly handle an in operator in the test clause.\n     assertPrint(\"var a={}; for (;(\\\"length\\\" in a);) {}\",\n         \"var a={};for(;\\\"length\\\"in a;);\");\n+\n+    // Test we correctly handle an in operator inside a comma.\n+    assertPrintSame(\"for(x,(y in z);;)foo()\");\n+    assertPrintSame(\"for(var x,w=(y in z);;)foo()\");\n   }\n \n   public void testLiteralProperty() {", "timestamp": 1368838203, "metainfo": ""}