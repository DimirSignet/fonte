{"sha": "4373657ffcbe25d3344c3dd81602c7c1b244abb6", "log": "If we have both a lexical symbol (\"property b of variable a\") and a property-slot symbol (\"property b of the type of a\") then we should remove the lexical one.  R=acleung DELTA=25  (19 added, 3 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4141   ", "commit": "\n--- a/src/com/google/javascript/jscomp/SymbolTable.java\n+++ b/src/com/google/javascript/jscomp/SymbolTable.java\n       return false;\n     }\n \n+    // Try to remove a reference by its fully qualified name.\n+    // If the symbol has no references left, remove it completely.\n+    private void tryRemoveLexicalQualifiedNameRef(String name, Node n) {\n+      if (name != null) {\n+        Symbol lexicalSym = getEnclosingScope(n).getQualifiedSlot(name);\n+        if (lexicalSym != null &&\n+            lexicalSym.isLexicalVariable() &&\n+            lexicalSym.getDeclaration().getNode() == n) {\n+          removeSymbol(lexicalSym);\n+        }\n+      }\n+    }\n+\n     private boolean maybeDefineTypedReference(\n         Node n, String propName, JSType owner) {\n       if (owner.isGlobalThisType()) {\n               n, n.getLastChild().getString(), owner);\n \n           if (defined) {\n+            tryRemoveLexicalQualifiedNameRef(n.getQualifiedName(), n);\n             return;\n           }\n         }\n               maybeDefineTypedReference(n, n.getString(), owner);\n \n           if (defined) {\n+            tryRemoveLexicalQualifiedNameRef(\n+                NodeUtil.getBestLValueName(n), n);\n             return;\n           }\n         }\n--- a/test/com/google/javascript/jscomp/SymbolTableTest.java\n+++ b/test/com/google/javascript/jscomp/SymbolTableTest.java\n         \"})();\\n\");\n \n     Symbol ab = getGlobalVar(table, \"a.b\");\n-    assertNotNull(ab);\n-    assertEquals(1, table.getReferenceList(ab).size());\n+    assertNull(ab);\n+\n+    Symbol propB = getGlobalVar(table, \"A.prototype.b\");\n+    assertNotNull(propB);\n+    assertEquals(5, table.getReferenceList(propB).size());\n   }\n \n   public void testRemovalOfNamespacedReferencesOfProperties()\n         getGlobalVar(table, \"DomHelper.prototype.prop\");\n     assertEquals(3, table.getReferenceList(prop).size());\n \n-    Symbol thisDotProp =\n-        getLocalVar(table, \"this.prop\");\n-    assertEquals(\n-        1, table.getReferenceList(thisDotProp).size());\n+    assertNull(getLocalVar(table, \"this.prop\"));\n   }\n \n   public void testFieldReferences() throws Exception {", "timestamp": 1327680950, "metainfo": ""}