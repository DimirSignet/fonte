{"sha": "39acb3cf4078c1e4be6460a0a6d3eeb6832c11da", "log": "Don't remove exported class properties.  R=acleung DELTA=26  (23 added, 0 deleted, 3 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5074   ", "commit": "\n--- a/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java\n   @Override\n   public void visit(NodeTraversal t, Node n, Node parent) {\n      switch (n.getType()) {\n-       case Token.GETPROP:\n-         if (inExterns || isPinningPropertyUse(n)) {\n-           used.add(n.getLastChild().getString());\n+       case Token.GETPROP: {\n+         String propName = n.getLastChild().getString();\n+         if (inExterns || isPinningPropertyUse(n) ||\n+             compiler.getCodingConvention().isExported(propName)) {\n+           used.add(propName);\n          } else {\n            // This is a definition of a property but it is only removable\n            // if it is defined on \"this\".\n            }\n          }\n          break;\n+       }\n \n        case Token.CALL:\n          // Look for properties referenced through \"JSCompiler_propertyRename\".", "timestamp": 1340745392, "metainfo": ""}