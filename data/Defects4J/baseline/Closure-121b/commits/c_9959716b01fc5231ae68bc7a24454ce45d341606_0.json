{"sha": "9959716b01fc5231ae68bc7a24454ce45d341606", "log": "Fix edge case in InlineObjectLiteral. Fixes issue 545  R=nicksantos,johnlenz DELTA=32  (14 added, 4 deleted, 14 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3244   ", "commit": "\n--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java\n+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java\n                    NodeUtil.newUndefinedNode(null)));\n       }\n \n-      // All assignments evaluate to true, so make sure that the\n-      // expr statement evaluates to true in case it matters.\n-      nodes.add(new Node(Token.TRUE));\n-\n-      // Join these using COMMA.  A COMMA node must have 2 children, so we\n-      // create a tree. In the tree the first child be the COMMA to match\n-      // the parser, otherwise tree equality tests fail.\n-      nodes = Lists.reverse(nodes);\n-      Node replacement = new Node(Token.COMMA);\n-      Node cur = replacement;\n-      int i;\n-      for (i = 0; i < nodes.size() - 2; i++) {\n+      Node replacement;\n+      if (nodes.isEmpty()) {\n+        replacement = new Node(Token.TRUE);\n+      } else {\n+        // All assignments evaluate to true, so make sure that the\n+        // expr statement evaluates to true in case it matters.\n+        nodes.add(new Node(Token.TRUE));\n+\n+        // Join these using COMMA.  A COMMA node must have 2 children, so we\n+        // create a tree. In the tree the first child be the COMMA to match\n+        // the parser, otherwise tree equality tests fail.\n+        nodes = Lists.reverse(nodes);\n+        replacement = new Node(Token.COMMA);\n+        Node cur = replacement;\n+        int i;\n+        for (i = 0; i < nodes.size() - 2; i++) {\n+          cur.addChildToFront(nodes.get(i));\n+          Node t = new Node(Token.COMMA);\n+          cur.addChildToFront(t);\n+          cur = t;\n+        }\n         cur.addChildToFront(nodes.get(i));\n-        Node t = new Node(Token.COMMA);\n-        cur.addChildToFront(t);\n-        cur = t;\n-      }\n-      cur.addChildToFront(nodes.get(i));\n-      cur.addChildToFront(nodes.get(i + 1));\n+        cur.addChildToFront(nodes.get(i + 1));\n+      }\n \n       Node replace = ref.getParent();\n       replacement.copyInformationFromForTree(replace);\n--- a/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java\n+++ b/test/com/google/javascript/jscomp/InlineObjectLiteralsTest.java\n          \"new JSCompiler_object_inline_b_0.c\");\n   }\n \n+  public void testBug545() {\n+    testLocal(\"var a = {}\", \"\");\n+    testLocal(\"var a; a = {}\", \"true\");\n+  }\n+\n   private final String LOCAL_PREFIX = \"function local(){\";\n   private final String LOCAL_POSTFIX = \"}\";\n ", "timestamp": 1315867072, "metainfo": ""}