{"sha": "ce86cc8e460060e1280f365f22ccd5c375e2f5ed", "log": "Prototype properties should not be auto-declared as non-object types. Fixes issue 1042. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49400223", "commit": "\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n     declareNativeType(scope, name, typeRegistry.getNativeType(tId));\n   }\n \n-  private void declareNativeType(Scope scope, String name, JSType t) {\n+  private static void declareNativeType(Scope scope, String name, JSType t) {\n     scope.declare(name, null, t, null, false);\n   }\n \n         return true;\n       }\n \n-      // Prototype sets are always declared.\n+      // Prototypes of constructors and interfaces are always declared.\n       if (qName != null && qName.endsWith(\".prototype\")) {\n-        return false;\n+        String className = qName.substring(0, qName.lastIndexOf(\".prototype\"));\n+        Var slot = scope.getSlot(className);\n+        JSType classType = slot == null ? null : slot.getType();\n+        if (classType != null\n+            && (classType.isConstructor() || classType.isInterface())) {\n+          return false;\n+        }\n       }\n \n       boolean inferred = true;\n--- a/test/com/google/javascript/jscomp/TypeCheckTest.java\n+++ b/test/com/google/javascript/jscomp/TypeCheckTest.java\n         \"Property x never defined on Foo.prototype\", false);\n   }\n \n+  public void testIssue1024() throws Exception {\n+     testTypes(\n+        \"/** @param {Object} a */\\n\" +\n+        \"function f(a) {\\n\" +\n+        \"  a.prototype = '__proto'\\n\" +\n+        \"}\\n\" +\n+        \"/** @param {Object} b\\n\" +\n+        \" *  @return {!Object}\\n\" +\n+        \" */\\n\" +\n+        \"function g(b) {\\n\" +\n+        \"  return b.prototype\\n\" +\n+        \"}\\n\");\n+     /* TODO(blickly): Make this warning go away.\n+      * This is old behavior, but it doesn't make sense to warn about since\n+      * both assignments are inferred.\n+      */\n+     testTypes(\n+        \"/** @param {Object} a */\\n\" +\n+        \"function f(a) {\\n\" +\n+        \"  a.prototype = {foo:3};\\n\" +\n+        \"}\\n\" +\n+        \"/** @param {Object} b\\n\" +\n+        \" */\\n\" +\n+        \"function g(b) {\\n\" +\n+        \"  b.prototype = function(){};\\n\" +\n+        \"}\\n\",\n+        \"assignment to property prototype of Object\\n\" +\n+        \"found   : {foo: number}\\n\" +\n+        \"required: function (): undefined\");\n+  }\n+\n \n   private void testTypes(String js) throws Exception {\n     testTypes(js, (String) null);", "timestamp": 1373929714, "metainfo": ""}