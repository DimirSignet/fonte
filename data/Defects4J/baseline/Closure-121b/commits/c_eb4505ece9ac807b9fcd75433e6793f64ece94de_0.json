{"sha": "eb4505ece9ac807b9fcd75433e6793f64ece94de", "log": "improve some error messages. fixes issue 662  R=johnlenz DELTA=37  (14 added, 0 deleted, 23 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=4621   ", "commit": "\n--- a/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n+++ b/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n \n   static final DiagnosticType TRAILING_COMMA =\n       DiagnosticType.error(\"JSC_TRAILING_COMMA\",\n-          \"Parse error. Internet Explorer has a non-standard \" +\n-          \"intepretation of trailing commas. Arrays will have the wrong \" +\n-          \"length and objects will not parse at all.\");\n+          \"Parse error. IE8 (and below) will parse trailing commas in \" +\n+          \"array and object literals incorrectly. \" +\n+          \"If you are targeting newer versions of JS, \" +\n+          \"set the appropriate language_in option.\");\n \n   static final DiagnosticType DUPLICATE_PARAM =\n       DiagnosticType.error(\"JSC_DUPLICATE_PARAM\", \"Parse error. {0}\");\n--- a/src/com/google/javascript/jscomp/parsing/IRFactory.java\n+++ b/src/com/google/javascript/jscomp/parsing/IRFactory.java\n  */\n class IRFactory {\n \n+  static final String GETTER_ERROR_MESSAGE =\n+      \"getters are not supported in older versions of JS. \" +\n+      \"If you are targeting newer versions of JS, \" +\n+      \"set the appropriate language_in option.\";\n+\n+  static final String SETTER_ERROR_MESSAGE =\n+      \"setters are not supported in older versions of JS. \" +\n+      \"If you are targeting newer versions of JS, \" +\n+      \"set the appropriate language_in option.\";\n+\n   static final String SUSPICIOUS_COMMENT_WARNING =\n       \"Non-JSDoc comment has annotations. \" +\n       \"Did you mean to start it with '/**'?\";\n \n     void reportGetter(AstNode node) {\n       errorReporter.error(\n-          \"getters are not supported in Internet Explorer\",\n+          GETTER_ERROR_MESSAGE,\n           sourceName,\n           node.getLineno(), \"\", 0);\n     }\n \n     void reportSetter(AstNode node) {\n       errorReporter.error(\n-          \"setters are not supported in Internet Explorer\",\n+          SETTER_ERROR_MESSAGE,\n           sourceName,\n           node.getLineno(), \"\", 0);\n     }\n--- a/test/com/google/javascript/jscomp/IntegrationTest.java\n+++ b/test/com/google/javascript/jscomp/IntegrationTest.java\n     checkUnexpectedErrorsOrWarnings(compiler, 1);\n     assertEquals(\n         \"JSC_PARSE_ERROR. Parse error. \" +\n-        \"getters are not supported in Internet Explorer \" +\n+        \"getters are not supported in older versions of JS. \" +\n+        \"If you are targeting newer versions of JS, \" +\n+        \"set the appropriate language_in option. \" +\n         \"at i0 line 1 : 0\",\n         compiler.getErrors()[0].toString());\n \n--- a/test/com/google/javascript/jscomp/RhinoErrorReporterTest.java\n+++ b/test/com/google/javascript/jscomp/RhinoErrorReporterTest.java\n \n   public void testTrailingComma() throws Exception {\n     String message =\n-        \"Parse error. Internet Explorer has a non-standard \" +\n-        \"intepretation of trailing commas. Arrays will have the wrong \" +\n-        \"length and objects will not parse at all.\";\n+        \"Parse error. IE8 (and below) will parse trailing commas in \" +\n+        \"array and object literals incorrectly. \" +\n+        \"If you are targeting newer versions of JS, \" +\n+        \"set the appropriate language_in option.\";\n     assertError(\n         \"var x = [1,];\",\n         RhinoErrorReporter.TRAILING_COMMA,\n--- a/test/com/google/javascript/jscomp/parsing/ParserTest.java\n+++ b/test/com/google/javascript/jscomp/parsing/ParserTest.java\n \n   public void testGettersForbidden1() {\n     parseError(\"var x = {get foo() { return 3; }};\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n   }\n \n   public void testGettersForbidden2() {\n \n   public void testGettersForbidden5() {\n     parseError(\"var x = {a: 2, get foo() { return 3; }};\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n   }\n \n   public void testSettersForbidden() {\n     parseError(\"var x = {set foo() { return 3; }};\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n   }\n \n   public void testSettersForbidden2() {\n   public void testGetter() {\n     mode = LanguageMode.ECMASCRIPT3;\n     parseError(\"var x = {get 1(){}};\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     parseError(\"var x = {get 'a'(){}};\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     parseError(\"var x = {get a(){}};\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     mode = LanguageMode.ECMASCRIPT5;\n     parse(\"var x = {get 1(){}};\");\n     parse(\"var x = {get 'a'(){}};\");\n   public void testSetter() {\n     mode = LanguageMode.ECMASCRIPT3;\n     parseError(\"var x = {set 1(x){}};\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n     parseError(\"var x = {set 'a'(x){}};\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n     parseError(\"var x = {set a(x){}};\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n     mode = LanguageMode.ECMASCRIPT5;\n     parse(\"var x = {set 1(x){}};\");\n     parse(\"var x = {set 'a'(x){}};\");\n     parseError(\"var x = {function: 1};\", \"invalid property id\");\n     parseError(\"x.function;\", \"missing name after . operator\");\n     parseError(\"var x = {get x(){} };\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     parseError(\"var x = {get function(){} };\", \"invalid property id\");\n     parseError(\"var x = {get 'function'(){} };\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     parseError(\"var x = {get 1(){} };\",\n-        \"getters are not supported in Internet Explorer\");\n+        IRFactory.GETTER_ERROR_MESSAGE);\n     parseError(\"var x = {set function(a){} };\", \"invalid property id\");\n     parseError(\"var x = {set 'function'(a){} };\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n     parseError(\"var x = {set 1(a){} };\",\n-        \"setters are not supported in Internet Explorer\");\n+        IRFactory.SETTER_ERROR_MESSAGE);\n     parseError(\"var x = {class: 1};\", \"invalid property id\");\n     parseError(\"x.class;\", \"missing name after . operator\");\n     parse(\"var x = {let: 1};\");", "timestamp": 1335465342, "metainfo": ""}