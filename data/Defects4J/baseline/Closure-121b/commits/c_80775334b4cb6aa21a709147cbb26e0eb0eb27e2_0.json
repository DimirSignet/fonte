{"sha": "80775334b4cb6aa21a709147cbb26e0eb0eb27e2", "log": "Fix inlining of functions whose named parameter are assigned in for-in loops. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45305245", "commit": "\n--- a/src/com/google/javascript/jscomp/FunctionArgumentInjector.java\n+++ b/src/com/google/javascript/jscomp/FunctionArgumentInjector.java\n   private static boolean canNameValueChange(Node n, Node parent) {\n     int type = parent.getType();\n     return (type == Token.VAR || type == Token.INC || type == Token.DEC ||\n-        (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n));\n+        (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n) ||\n+        (NodeUtil.isForIn(parent)));\n   }\n \n   /**\n--- a/test/com/google/javascript/jscomp/InlineFunctionsTest.java\n+++ b/test/com/google/javascript/jscomp/InlineFunctionsTest.java\n         \"    g())}\");\n   }\n \n+  public void test8609285a() {\n+   test(\n+       \"function f(x){ for(x in y){} } f()\",\n+       \"{var x$$inline_0=void 0;for(x$$inline_0 in y);}\");\n+  }\n+\n+  public void test8609285b() {\n+    test(\n+        \"function f(x){ for(var x in y){} } f()\",\n+        \"{var x$$inline_0=void 0;for(x$$inline_0 in y);}\");\n+   }\n }", "timestamp": 1366235015, "metainfo": ""}