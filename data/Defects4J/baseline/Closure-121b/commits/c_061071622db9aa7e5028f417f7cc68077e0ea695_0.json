{"sha": "061071622db9aa7e5028f417f7cc68077e0ea695", "log": "Emit an error if the output is the same as the input. Fixes issue 867  R=johnlenz DELTA=25  (25 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=5907   ", "commit": "\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n  */\n abstract class AbstractCommandLineRunner<A extends Compiler,\n     B extends CompilerOptions> {\n+  static final DiagnosticType OUTPUT_SAME_AS_INPUT_ERROR = DiagnosticType.error(\n+      \"JSC_OUTPUT_SAME_AS_INPUT_ERROR\",\n+      \"Bad output file (already listed as input file): {0}\");\n \n   private final CommandLineConfig config;\n \n     setRunOptions(options);\n \n     boolean writeOutputToFile = !config.jsOutputFile.isEmpty();\n+    List<String> outputFileNames = Lists.newArrayList();\n     if (writeOutputToFile) {\n+      outputFileNames.add(config.jsOutputFile);\n       jsOutput = fileNameToLegacyOutputWriter(config.jsOutputFile);\n     } else if (jsOutput instanceof OutputStream) {\n       jsOutput = streamToLegacyOutputWriter((OutputStream) jsOutput);\n     }\n     if (!moduleSpecs.isEmpty()) {\n       modules = createJsModules(moduleSpecs, jsFiles);\n+      for (JSModule m : modules) {\n+        outputFileNames.add(getModuleOutputFileName(m));\n+      }\n+\n       if (config.skipNormalOutputs) {\n         compiler.initModules(externs, modules, options);\n       } else {\n       // For CommonJS modules construct modules from actual inputs.\n       modules = Lists.newArrayList(compiler.getDegenerateModuleGraph()\n           .getAllModules());\n+      for (JSModule m : modules) {\n+        outputFileNames.add(getModuleOutputFileName(m));\n+      }\n+    }\n+\n+    for (String outputFileName : outputFileNames) {\n+      if (compiler.getSourceFileByName(outputFileName) != null) {\n+        compiler.report(\n+            JSError.make(OUTPUT_SAME_AS_INPUT_ERROR, outputFileName));\n+        return 1;\n+      }\n     }\n \n     int errCode = processResults(result, modules, options);\n--- a/test/com/google/javascript/jscomp/CommandLineRunnerTest.java\n+++ b/test/com/google/javascript/jscomp/CommandLineRunnerTest.java\n         \"var module$foo$bar={},module$foo$bar={foo:1};\");\n   }\n \n+  public void testOutputSameAsInput() {\n+    args.add(\"--js_output_file=\" + getFilename(0));\n+    test(\"\", AbstractCommandLineRunner.OUTPUT_SAME_AS_INPUT_ERROR);\n+  }\n+\n   /* Helper functions */\n \n   private void testSame(String original) {", "timestamp": 1354306494, "metainfo": ""}