{"sha": "6e255e28053cab7397b2bcec7c0fdf04af34aa79", "log": "Removing setCause method. JDK 1.4 provided an initCause method and this method was to support both pre and post JDK 1.4 use cases. I don't see much of a reason to keep supporting Exceptions that have setCause as well as the inherited initCause. LANG-491  ", "commit": "\n--- a/src/java/org/apache/commons/lang3/exception/ExceptionUtils.java\n+++ b/src/java/org/apache/commons/lang3/exception/ExceptionUtils.java\n     }\n \n     /**\n-     * <p>Sets the cause of a <code>Throwable</code> using introspection, allowing\n-     * source code compatibility between pre-1.4 and post-1.4 Java releases.</p>\n-     *\n-     * <p>The typical use of this method is inside a constructor as in\n-     * the following example:</p>\n-     *\n-     * <pre>\n-     * import org.apache.commons.lang3.exception.ExceptionUtils;\n-     *  \n-     * public class MyException extends Exception {\n-     *  \n-     *    public MyException(String msg) {\n-     *       super(msg);\n-     *    }\n-     *\n-     *    public MyException(String msg, Throwable cause) {\n-     *       super(msg);\n-     *       ExceptionUtils.setCause(this, cause);\n-     *    }\n-     * }\n-     * </pre>\n-     *\n-     * @param target  the target <code>Throwable</code>\n-     * @param cause  the <code>Throwable</code> to set in the target\n-     * @return a <code>true</code> if the target has been modified\n-     * @since 2.2\n-     */\n-    public static boolean setCause(Throwable target, Throwable cause) {\n-        if (target == null) {\n-            throw new NullPointerException(\"target must not be null.\");\n-        }\n-        Object[] causeArgs = new Object[]{cause};\n-        boolean modifiedTarget = false;\n-        if (THROWABLE_INITCAUSE_METHOD != null) {\n-            try {\n-                THROWABLE_INITCAUSE_METHOD.invoke(target, causeArgs);\n-                modifiedTarget = true;\n-            } catch (IllegalAccessException ignored) {\n-                // Exception ignored.\n-            } catch (InvocationTargetException ignored) {\n-                // Exception ignored.\n-            }\n-        }\n-        try {\n-            Method setCauseMethod = target.getClass().getMethod(\"setCause\", new Class[]{Throwable.class});\n-            setCauseMethod.invoke(target, causeArgs);\n-            modifiedTarget = true;\n-        } catch (NoSuchMethodException ignored) {\n-            // Exception ignored.\n-        } catch (IllegalAccessException ignored) {\n-            // Exception ignored.\n-        } catch (InvocationTargetException ignored) {\n-            // Exception ignored.\n-        }\n-        return modifiedTarget;\n-    }\n-\n-    /**\n      * Returns the given list as a <code>String[]</code>.\n      * @param list a list to transform.\n      * @return the given list as a <code>String[]</code>.\n--- a/src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java\n+++ b/src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java\n         assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getRootCause(cyclicCause));\n     }\n \n-    public void testSetCause() {\n-        Exception cause = new ExceptionWithoutCause();\n-        assertEquals(true, ExceptionUtils.setCause(new ExceptionWithCause(null), cause));\n-        if (SystemUtils.isJavaVersionAtLeast(140)) {\n-            assertEquals(true, ExceptionUtils.setCause(new ExceptionWithoutCause(), cause));\n-        }\n-    }\n-\n-    /**\n-     * Tests overriding a cause to <code>null</code>.\n-     */\n-    public void testSetCauseToNull() {\n-        Exception ex = new ExceptionWithCause(new IOException());\n-        assertEquals(true, ExceptionUtils.setCause(ex, new IllegalStateException()));\n-        assertNotNull(ExceptionUtils.getCause(ex));\n-        assertEquals(true, ExceptionUtils.setCause(ex, null));\n-        assertNull(ExceptionUtils.getCause(ex));\n-    }\n-\n     //-----------------------------------------------------------------------\n     public void testGetThrowableCount_Throwable() {\n         assertEquals(0, ExceptionUtils.getThrowableCount(null));", "timestamp": 1262411075, "metainfo": ""}