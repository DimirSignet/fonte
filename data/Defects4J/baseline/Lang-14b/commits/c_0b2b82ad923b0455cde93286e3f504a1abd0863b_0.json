{"sha": "0b2b82ad923b0455cde93286e3f504a1abd0863b", "log": "Adding first method check from Math's MathUtils.gcd method; and unit tests showing that this was needed. Bug reported and solved by Christian Semrau [LANG-662]  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java\n+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java\n      * @return the greatest common divisor, never zero\n      */\n     private static int greatestCommonDivisor(int u, int v) {\n-        //if either op. is abs 0 or 1, return 1:\n-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {\n+        // From Commons Math:\n+        if ((u == 0) || (v == 0)) {\n+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {\n+                throw new ArithmeticException(\"overflow: gcd is 2^31\");\n+            }\n+            return Math.abs(u) + Math.abs(v);\n+        }\n+        //if either operand is abs 1, return 1:\n+        if (Math.abs(u) == 1 || Math.abs(v) == 1) {\n             return 1;\n         }\n         // keep u and v negative, as negative integers range down to\n--- a/src/test/java/org/apache/commons/lang3/math/FractionTest.java\n+++ b/src/test/java/org/apache/commons/lang3/math/FractionTest.java\n             f = Fraction.getReducedFraction(-7, Integer.MIN_VALUE);  \n             fail(\"Expecting ArithmeticException\");\n         } catch (ArithmeticException ex) {}      \n+\n+        // LANG-662\n+        f = Fraction.getReducedFraction(Integer.MIN_VALUE, 2);\n+        assertEquals(Integer.MIN_VALUE / 2, f.getNumerator());\n+        assertEquals(1, f.getDenominator());\n     }\n \n     public void testFactory_double() {\n         assertEquals(0, result.getNumerator());\n         assertEquals(1, result.getDenominator());\n         assertSame(result, Fraction.ZERO);\n+\n+        f = Fraction.getFraction(Integer.MIN_VALUE, 2);\n+        result = f.reduce();\n+        assertEquals(Integer.MIN_VALUE / 2, result.getNumerator());\n+        assertEquals(1, result.getDenominator());\n     }\n     \n     public void testInvert() {", "timestamp": 1295238605, "metainfo": ""}