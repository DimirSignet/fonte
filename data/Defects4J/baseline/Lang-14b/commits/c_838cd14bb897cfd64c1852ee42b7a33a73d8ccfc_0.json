{"sha": "838cd14bb897cfd64c1852ee42b7a33a73d8ccfc", "log": "ws  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java\n+++ b/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java\n             for (CharSequence[] seq : lookup) {\n                 this.lookupMap.put(seq[0], seq[1]);\n                 int sz = seq[0].length();\n-                if(sz < _shortest) {\n+                if (sz < _shortest) {\n                     _shortest = sz;\n                 }\n-                if(sz > _longest) {\n+                if (sz > _longest) {\n                     _longest = sz;\n                 }\n             }\n     @Override\n     public int translate(CharSequence input, int index, Writer out) throws IOException {\n         int max = longest;\n-        if(index + longest > input.length()) {\n+        if (index + longest > input.length()) {\n             max = input.length() - index;\n         }\n         // descend so as to get a greedy algorithm\n-        for(int i=max; i >= shortest; i--) {\n+        for (int i = max; i >= shortest; i--) {\n             CharSequence subSeq = input.subSequence(index, index + i);\n             CharSequence result = lookupMap.get(subSeq);\n-            if(result != null) {\n+            if (result != null) {\n                 out.write(result.toString());\n                 return i;\n             }", "timestamp": 1302534449, "metainfo": ""}