{"sha": "02f4ffb7e726a63ba5b5d9b0b10c1ffe7602e18b", "log": "added test coverage   ", "commit": "\n--- a/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java\n import java.io.ByteArrayOutputStream;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n+import java.io.PrintStream;\n \n import junit.framework.Test;\n import junit.framework.TestSuite;\n  * Tests the org.apache.commons.lang.exception.NestableException class.\n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: NestableExceptionTestCase.java,v 1.8 2003/05/21 23:49:14 scolebourne Exp $\n+ * @version $Id: NestableExceptionTestCase.java,v 1.9 2003/08/07 00:50:30 stevencaswell Exp $\n  */\n public class NestableExceptionTestCase extends AbstractNestableTestCase {\n     \n     public Class getThrowableClass()\n     {\n         return Exception.class;\n+    }\n+\n+    public void testSpecificPrintStackTrace()\n+    {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        NestableException ne = new NestableException(\"outer\", new NestableException(\"inner\", new Exception(\"another exception\")));\n+        for(int i = 0; i < 2; i++)\n+        {\n+            if(i == 0)\n+            {\n+                // Test printStackTrac()\n+                // Replace System.err with our own PrintStream so that we can\n+                // obtain and check the printStrackTrace output\n+                PrintStream err = System.err;\n+                System.setErr(ps);\n+                ne.printStackTrace();\n+                // Restore the System.err\n+                System.setErr(err);\n+            }\n+            else\n+            {\n+                // Test printStackTrace(PrintStream)\n+                ne.printStackTrace(ps);\n+            }\n+        }\n+        String msg = baos.toString();\n+        assertTrue( \"printStackTrace() starts with outer message\", msg.startsWith(\"org.apache.commons.lang.exception.NestableException: outer\"));\n+        assertTrue( \"printStackTrace() contains 1st nested message\", msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableException: inner\") >= 0);\n+        assertTrue( \"printStackTrace() contains 2nd nested message\", msg.indexOf(\"Caused by: java.lang.Exception: another exception\") >= 0);\n+        assertTrue( \"printStackTrace() inner message after outer message\", \n+            msg.indexOf(\"org.apache.commons.lang.exception.NestableException: outer\") <\n+            msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableException: inner\"));\n+        assertTrue( \"printStackTrace() cause message after inner message\",\n+            msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableException: inner\") <\n+            msg.indexOf(\"Caused by: java.lang.Exception: another exception\"));\n     }\n     \n     public void testSerialization()\n--- a/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java\n+++ b/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java\n  */\n package org.apache.commons.lang.exception;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n import junit.framework.Test;\n import junit.framework.TestSuite;\n import junit.textui.TestRunner;\n  * Tests the org.apache.commons.lang.exception.NestableRuntimeException class.\n  *\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n- * @version $Id: NestableRuntimeExceptionTestCase.java,v 1.7 2003/05/21 23:49:14 scolebourne Exp $\n+ * @version $Id: NestableRuntimeExceptionTestCase.java,v 1.8 2003/08/07 00:50:30 stevencaswell Exp $\n  */\n public class NestableRuntimeExceptionTestCase extends AbstractNestableTestCase {\n     \n     public Class getThrowableClass()\n     {\n         return RuntimeException.class;\n+    }\n+    \n+    public void testSpecificPrintStackTrace()\n+    {\n+        // Test printStackTrac()\n+        // Replace System.err with our own PrintStream so that we can obtain\n+        // and check the printStrackTrace output\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        NestableRuntimeException ne = new NestableRuntimeException(\"outer\", new NestableRuntimeException(\"inner\", new Exception(\"another exception\")));\n+        for(int i = 0; i < 2; i++)\n+        {\n+            if(i == 0)\n+            {\n+                // Test printStackTrac()\n+                // Replace System.err with our own PrintStream so that we can\n+                // obtain and check the printStrackTrace output\n+                PrintStream err = System.err;\n+                System.setErr(ps);\n+                ne.printStackTrace();\n+                // Restore the System.err\n+                System.setErr(err);\n+            }\n+            else\n+            {\n+                // Test printStackTrace(PrintStream)\n+                ne.printStackTrace(ps);\n+            }\n+        }\n+        String msg = baos.toString();\n+        assertTrue( \"printStackTrace() starts with outer message\", msg.startsWith(\"org.apache.commons.lang.exception.NestableRuntimeException: outer\"));\n+        assertTrue( \"printStackTrace() contains 1st nested message\", msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableRuntimeException: inner\") >= 0);\n+        assertTrue( \"printStackTrace() contains 2nd nested message\", msg.indexOf(\"Caused by: java.lang.Exception: another exception\") >= 0);\n+        assertTrue( \"printStackTrace() inner message after outer message\", \n+            msg.indexOf(\"org.apache.commons.lang.exception.NestableRuntimeException: outer\") <\n+            msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableRuntimeException: inner\"));\n+        assertTrue( \"printStackTrace() cause message after inner message\",\n+            msg.indexOf(\"Caused by: org.apache.commons.lang.exception.NestableRuntimeException: inner\") <\n+            msg.indexOf(\"Caused by: java.lang.Exception: another exception\"));\n     }\n     \n }", "timestamp": 1060217430, "metainfo": ""}