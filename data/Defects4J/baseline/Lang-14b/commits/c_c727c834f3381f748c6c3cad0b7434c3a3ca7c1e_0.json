{"sha": "c727c834f3381f748c6c3cad0b7434c3a3ca7c1e", "log": "javadoc fixing, as per checkstyle  ", "commit": "\n--- a/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\n+++ b/src/java/org/apache/commons/lang/time/DurationFormatUtils.java\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Henri Yandell\n  * @since 2.1\n- * @version $Id: DurationFormatUtils.java,v 1.21 2004/10/15 23:11:31 scolebourne Exp $\n+ * @version $Id$\n  */\n public class DurationFormatUtils {\n \n      * \n      * <p>The format used is the ISO8601 period format.</p>\n      * \n-     * @param millis  the duration to format\n+     * @param startMillis  the start of the duration to format\n+     * @param endMillis  the end of the duration to format\n      * @return the time as a String\n      */\n     public static String formatPeriodISO(long startMillis, long endMillis) {\n     /**\n      * Reduces by difference, then if it overshot, calculates the overshot amount and \n      * fixes and returns the amount to change by.\n+     *\n+     * @param start Start of period being formatted\n+     * @param end End of period being formatted\n+     * @param field Field to reduce, as per constants in {@link java.util.Calendar}\n+     * @param difference amount to reduce by\n+     * @return int reduced value\n      */\n     static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {\n         end.add( field, -1 * difference );", "timestamp": 1107487342, "metainfo": ""}