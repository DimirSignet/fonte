{"sha": "6138195456fd5678fb7af491e804116f8f7f10ab", "log": "Use the active voice in Javadocs.  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java\n     }\n \n     /**\n-     * Read an accessible static Field.\n+     * Reads an accessible static Field.\n      * @param field to read\n      * @return the field value\n      * @throws IllegalArgumentException if the field is null or not static\n     }\n \n     /**\n-     * Read a static Field.\n+     * Reads a static Field.\n      * @param field to read\n      * @param forceAccess  whether to break scope restrictions using the\n      *  <code>setAccessible</code> method.\n     }\n \n     /**\n-     * Read the named public static field. Superclasses will be considered.\n+     * Reads the named public static field. Superclasses will be considered.\n      * @param cls  the class to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @return the value of the field\n     }\n \n     /**\n-     * Read the named static field. Superclasses will be considered.\n+     * Reads the named static field. Superclasses will be considered.\n      * @param cls  the class to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param forceAccess  whether to break scope restrictions using the\n     }\n \n     /**\n-     * Read an accessible Field.\n+     * Reads an accessible Field.\n      * @param field  the field to use\n      * @param target  the object to call on, may be null for static fields\n      * @return the field value\n     }\n \n     /**\n-     * Read a Field.\n+     * Reads a Field.\n      * @param field  the field to use\n      * @param target  the object to call on, may be null for static fields\n      * @param forceAccess  whether to break scope restrictions using the\n     }\n \n     /**\n-     * Read the named public field. Superclasses will be considered.\n+     * Reads the named public field. Superclasses will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @return the value of the field\n     }\n \n     /**\n-     * Read the named field. Superclasses will be considered.\n+     * Reads the named field. Superclasses will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param forceAccess  whether to break scope restrictions using the\n     }\n \n     /**\n-     * Read the named public field. Only the class of the specified object will be considered.\n+     * Reads the named public field. Only the class of the specified object will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @return the value of the field\n     }\n \n     /**\n-     * Write a public static Field.\n+     * Writes a public static Field.\n      * @param field to write\n      * @param value to set\n      * @throws IllegalArgumentException if the field is null or not static\n     }\n \n     /**\n-     * Write a static Field.\n+     * Writes a static Field.\n      * @param field to write\n      * @param value to set\n      * @param forceAccess  whether to break scope restrictions using the\n     }\n \n     /**\n-     * Write a named public static Field. Superclasses will be considered.\n+     * Writes a named public static Field. Superclasses will be considered.\n      * @param cls Class on which the Field is to be found\n      * @param fieldName to write\n      * @param value to set\n     }\n \n     /**\n-     * Write a named static Field. Superclasses will be considered.\n+     * Writes a named static Field. Superclasses will be considered.\n      * @param cls Class on which the Field is to be found\n      * @param fieldName to write\n      * @param value to set\n     }\n \n     /**\n-     * Write a named public static Field. Only the specified class will be considered.\n+     * Writes a named public static Field. Only the specified class will be considered.\n      * @param cls Class on which the Field is to be found\n      * @param fieldName to write\n      * @param value to set\n     }\n \n     /**\n-     * Write a named static Field. Only the specified class will be considered.\n+     * Writes a named static Field. Only the specified class will be considered.\n      * @param cls Class on which the Field is to be found\n      * @param fieldName to write\n      * @param value to set\n     }\n \n     /**\n-     * Write an accessible field.\n+     * Writes an accessible field.\n      * @param field to write\n      * @param target  the object to call on, may be null for static fields\n      * @param value to set\n     }\n \n     /**\n-     * Write a field.\n+     * Writes a field.\n      * @param field to write\n      * @param target  the object to call on, may be null for static fields\n      * @param value to set\n     }\n \n     /**\n-     * Write a public field. Superclasses will be considered.\n+     * Writes a public field. Superclasses will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param value to set\n     }\n \n     /**\n-     * Write a field. Superclasses will be considered.\n+     * Writes a field. Superclasses will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param value to set\n     }\n \n     /**\n-     * Write a public field. Only the specified class will be considered.\n+     * Writes a public field. Only the specified class will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param value to set\n     }\n \n     /**\n-     * Write a public field. Only the specified class will be considered.\n+     * Writes a public field. Only the specified class will be considered.\n      * @param target  the object to reflect, must not be null\n      * @param fieldName  the field name to obtain\n      * @param value to set", "timestamp": 1309760509, "metainfo": ""}