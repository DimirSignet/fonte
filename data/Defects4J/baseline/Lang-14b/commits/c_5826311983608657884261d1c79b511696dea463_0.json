{"sha": "5826311983608657884261d1c79b511696dea463", "log": "Noting the difference between getSimpleName and getShortName in the getShortName javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ClassUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ClassUtils.java\n     /**\n      * <p>Gets the class name minus the package name from a {@code Class}.</p>\n      * \n-     * <p>Consider using the Java 5 API {@link Class#getSimpleName()} instead.</p>\n+     * <p>Consider using the Java 5 API {@link Class#getSimpleName()} instead. \n+     * The one known difference is that this code will return {@code \"Map.Entry\"} while \n+     * the {@code java.lang.Class} variant will simply return {@code \"Entry\"}. </p>\n      *\n      * @param cls  the class to get the short name for.\n      * @return the class name without the package name or an empty string\n      * <p>Gets the class name minus the package name from a String.</p>\n      *\n      * <p>The string passed in is assumed to be a class name - it is not checked.</p>\n+\n+     * <p>Note that this method differs from Class.getSimpleName() in that this will \n+     * return {@code \"Map.Entry\"} whilst the {@code java.lang.Class} variant will simply \n+     * return {@code \"Entry\"}. </p>\n      *\n      * @param className  the className to get the short name for\n      * @return the class name of the class without the package name or an empty string", "timestamp": 1304056793, "metainfo": ""}