{"sha": "0d3e2d993af80371da47c2b81e85bf809555e2db", "log": "Fixing javadoc  ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n      * ArrayUtils.removeElements([\"a\", \"b\", \"a\"], \"a\", \"a\") = [\"b\"]\n      * </pre>\n      *\n+     * @param <T> the component type of the array\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([2, 6, 3], 0, 1, 2) = []\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n      * ArrayUtils.removeAll([true, false, true], 1, 2) = [true]\n      * </pre>\n      *\n-     * @param <T> the component type of the array\n      * @param array   the array to remove the element from, may not be {@code null}\n      * @param indices the positions of the elements to be removed\n      * @return A new array containing the existing elements except those\n      * </pre>\n      *\n      * @param array  the array to remove the element from, may be {@code null}\n-     * @param elements  the elements to be removed\n+     * @param values the elements to be removed\n      * @return A new array containing the existing elements except the\n      *         earliest-encountered occurrences of the specified elements.\n      * @since 3.0.1\n--- a/src/main/java/org/apache/commons/lang3/ObjectUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ObjectUtils.java\n     /**\n      * Find the most frequently occurring item.\n      * \n-     * @param <T>\n+     * @param <T> type of values processed by this method\n      * @param items to check\n      * @return most populous T, {@code null} if non-unique or no items supplied\n      * @since 3.0.1", "timestamp": 1312349361, "metainfo": ""}