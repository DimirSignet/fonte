{"sha": "404983d14f90e0a8138830c166e773b0208d1eb9", "log": "Renaming the newly public pad(int, char) method to repeat(char, int) [note the swap of param order]. I've also pulled the faster implementation out of repeat(String, int).   ", "commit": "\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n             return str;\n         }\n         if (inputLength == 1 && repeat <= PAD_LIMIT) {\n-            return pad(repeat, str.charAt(0));\n+            return repeat(str.charAt(0), repeat);\n         }\n \n         int outputLength = inputLength * repeat;\n         switch (inputLength) {\n             case 1 :\n-                char ch = str.charAt(0);\n-                char[] output1 = new char[outputLength];\n-                for (int i = repeat - 1; i >= 0; i--) {\n-                    output1[i] = ch;\n-                }\n-                return new String(output1);\n+                return repeat(str.charAt(0), repeat);\n             case 2 :\n                 char ch0 = str.charAt(0);\n                 char ch1 = str.charAt(1);\n      * to a given length.</p>\n      *\n      * <pre>\n-     * StringUtils.padding(0, 'e')  = \"\"\n-     * StringUtils.padding(3, 'e')  = \"eee\"\n-     * StringUtils.padding(-2, 'e') throws IndexOutOfBoundsException\n+     * StringUtils.repeat(0, 'e')  = \"\"\n+     * StringUtils.repeat(3, 'e')  = \"eee\"\n+     * StringUtils.repeat(-2, 'e') = \"\"\n      * </pre>\n      *\n      * <p>Note: this method doesn't not support padding with\n      * consider using {@link #repeat(String, int)} instead.\n      * </p>\n      *\n-     * @param repeat  number of times to repeat delim\n-     * @param padChar  character to repeat\n+     * @param ch  character to repeat\n+     * @param repeat  number of times to repeat char, negative treated as zero\n      * @return String with repeated character\n-     * @throws IndexOutOfBoundsException if <code>repeat &lt; 0</code>\n      * @see #repeat(String, int)\n      */\n-    public static String pad(int repeat, char padChar) throws IndexOutOfBoundsException {\n-        if (repeat < 0) {\n-            throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);\n-        }\n-        final char[] buf = new char[repeat];\n-        for (int i = 0; i < buf.length; i++) {\n-            buf[i] = padChar;\n+    public static String repeat(char ch, int repeat) {\n+        char[] buf = new char[repeat];\n+        for (int i = repeat - 1; i >= 0; i--) {\n+            buf[i] = ch;\n         }\n         return new String(buf);\n     }\n         if (pads > PAD_LIMIT) {\n             return rightPad(str, size, String.valueOf(padChar));\n         }\n-        return str.concat(pad(pads, padChar));\n+        return str.concat(repeat(padChar, pads));\n     }\n \n     /**\n         if (pads > PAD_LIMIT) {\n             return leftPad(str, size, String.valueOf(padChar));\n         }\n-        return pad(pads, padChar).concat(str);\n+        return repeat(padChar, pads).concat(str);\n     }\n \n     /**", "timestamp": 1303713484, "metainfo": ""}