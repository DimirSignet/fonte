{"sha": "a97291db617c65c90564618ca4cdca91ed07db53", "log": "Javadoc fixes and enhancements from Steve Downey   ", "commit": "\n--- a/src/java/org/apache/commons/lang/CharSet.java\n+++ b/src/java/org/apache/commons/lang/CharSet.java\n  *\n  * @author <a href=\"bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: CharSet.java,v 1.1 2002/07/19 03:35:54 bayard Exp $\n+ * @version $Id: CharSet.java,v 1.2 2002/09/28 10:34:54 scolebourne Exp $\n  */\n public class CharSet {\n \n     private LinkedList set = new LinkedList();\n \n     /**\n-     * Restricted consructor. Use the factory method evaluateSet().\n+     * Restricted constructor. Use the factory method evaluateSet().\n+     *\n+     * @throws NullPointerException if any of set[i] is null or if set is null\n      */\n     protected CharSet(String[] set) {\n         int sz = set.length;\n      * Add a set definition string to the set\n      * \n      * @param str  set definition string\n+     * @throws NullPointerException if str is null\n      */\n     protected void add(String str) {\n         int sz = str.length();\n--- a/src/java/org/apache/commons/lang/CharSetUtils.java\n+++ b/src/java/org/apache/commons/lang/CharSetUtils.java\n  *\n  * @author <a href=\"bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: CharSetUtils.java,v 1.4 2002/09/18 19:55:32 scolebourne Exp $\n+ * @version $Id: CharSetUtils.java,v 1.5 2002/09/28 10:34:54 scolebourne Exp $\n  */\n public class CharSetUtils {\n \n      * \"^e\" implies not e. However it only negates, it's not \n      * a set in itself due to the size of that set in unicode.\n      * \"ej-m\" implies e,j->m. e,j,k,l,m.\n+     * @param set\n+     * @return CharSet\n+     * @throws NullPointerException if any of set[i] is null or if set is null\n+     * @param set\n+     * @return CharSet\n      */\n     public static CharSet evaluateSet(String[] set) {\n         return new CharSet(set); \n      * \n      * @param str  the string to work from\n      * @param set  the character set to use for manipulation\n+     * @throws NullPointerException if str is null\n      */\n     public static String squeeze(String str, String[] set) {\n         CharSet chars = evaluateSet(set);\n      *\n      * @param str  String target to delete characters from\n      * @param set  String[] set of characters to delete\n+     * @throws NullPointerException of str is null\n      */\n     public static String delete(String str, String[] set) {\n         CharSet chars = evaluateSet(set);\n     }\n \n     /**\n-     * NEEDS TO TAKE A CHAR-SET.\n      * Translate characters in a String.\n      * An example is:  translate(\"hello\", \"ho\", \"jy\") => jelly\n      * If the length of characters to search for is greater than the \n      * @param target String to replace characters  in\n      * @param repl String to find that will be replaced\n      * @param with String to put into the target String\n+     * @throws NullPointerException if target, with or repl is null\n      */\n     public static String translate(String target, String repl, String with) {\n         StringBuffer buffer = new StringBuffer(target.length());\n--- a/src/java/org/apache/commons/lang/NumberUtils.java\n+++ b/src/java/org/apache/commons/lang/NumberUtils.java\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com\">Rand McNeely</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n  * @author <a href=\"mailto:steve.downey@netfolio.com\">Steve Downey</a>\n- * @version $Id: NumberUtils.java,v 1.2 2002/09/15 10:26:42 scolebourne Exp $\n+ * @version $Id: NumberUtils.java,v 1.3 2002/09/28 10:34:54 scolebourne Exp $\n  */\n public final class NumberUtils {\n \n      * <li>Normal positve numbers\n      * <li>+0.0\n      * <li>-0.0\n+     * <li>Normal negative numbers\n      * <li>Minimum double (-Double.MAX_VALUE)\n-     * <li>Normal negative numbers\n      * <li>Negative infinity\n      * </ul>\n      * Comparing NaN with NaN will return 0.\n--- a/src/java/org/apache/commons/lang/RandomStringUtils.java\n+++ b/src/java/org/apache/commons/lang/RandomStringUtils.java\n  * @author <a href=\"mailto:bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n  * @author <a href=\"mailto:scolebourne@joda.org\">Stephen Colebourne</a>\n- * @version $Id: RandomStringUtils.java,v 1.4 2002/09/18 19:53:52 bayard Exp $\n+ * @version $Id: RandomStringUtils.java,v 1.5 2002/09/28 10:34:54 scolebourne Exp $\n  */\n public class RandomStringUtils {\n \n     \n     /**\n      * Creates a random string based on a variety of options.\n+\t * If start and end are both 0, start and end are set to ' ' and 'z', the ASCII\n+\t * printable characters, will be used, unless letters and numbers are both \n+\t * false, in which case, start and end are set to 0 and Integer.MAX_VALUE.\n+\t * <p>\n+\t * If set is not null, characters between start and end are chosen.\n+\t * <p>\n      *\n      * @param count int length of random string to create\n      * @param start int position in set of chars to start at\n      * @param set char[] set of chars to choose randoms from.\n      *        If null, then it will use the set of all chars.\n      * @return the random string\n+     * @throws ArrayIndexOutOfBoundsException if there are not (end - start) + 1 \n+     * characters in the set array.\n      */\n     public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] set) {\n         if( (start == 0) && (end == 0) ) {\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n  * @author <a href=\"mailto:rand_mcneely@yahoo.com>Rand McNeely</a>\n  * @author <a href=\"mailto:scolebourne@joda.org>Stephen Colebourne</a>\n  * @author <a href=\"mailto:fredrik@westermarck.com>Fredrik Westermarck</a>\n- * @version $Id: StringUtils.java,v 1.15 2002/09/27 06:08:16 bayard Exp $\n+ * @version $Id: StringUtils.java,v 1.16 2002/09/28 10:34:54 scolebourne Exp $\n  */\n public class StringUtils {\n \n-    /**\n-     * The size of the buffer to use when working with I/O (4 kB).\n-     */\n-    public static final int CHAR_BUFFER_SIZE = 4 * 1024;\n-    \n     /**\n      * StringUtils instances should NOT be constructed in standard programming.\n      * Instead, the class should be used as <code>StringUtils.trim(\" foo \");</code>.", "timestamp": 1033209294, "metainfo": ""}