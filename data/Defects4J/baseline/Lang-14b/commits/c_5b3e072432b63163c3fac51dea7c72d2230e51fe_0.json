{"sha": "5b3e072432b63163c3fac51dea7c72d2230e51fe", "log": "junit expected exceptions  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java\n \n     // min/max tests\n     // ----------------------------------------------------------------------\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinLong_nullArray() {\n+        NumberUtils.min((long[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinLong_emptyArray() {\n+        NumberUtils.min(new long[0]);\n+    }\n+\n     @Test\n     public void testMinLong() {\n-        final long[] l = null;\n-        try {\n-            NumberUtils.min(l);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new long[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(long[]) failed for array length 1\",\n             5,\n         assertEquals(-10, NumberUtils.min(new long[] { -5, 0, -10, 5, 10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinInt_nullArray() {\n+        NumberUtils.min((int[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinInt_emptyArray() {\n+        NumberUtils.min(new int[0]);\n+    }\n+\n     @Test\n     public void testMinInt() {\n-        final int[] i = null;\n-        try {\n-            NumberUtils.min(i);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new int[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(int[]) failed for array length 1\",\n             5,\n         assertEquals(-10, NumberUtils.min(new int[] { -5, 0, -10, 5, 10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinShort_nullArray() {\n+        NumberUtils.min((short[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinShort_emptyArray() {\n+        NumberUtils.min(new short[0]);\n+    }\n+\n     @Test\n     public void testMinShort() {\n-        final short[] s = null;\n-        try {\n-            NumberUtils.min(s);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new short[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(short[]) failed for array length 1\",\n             5,\n         assertEquals(-10, NumberUtils.min(new short[] { -5, 0, -10, 5, 10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinByte_nullArray() {\n+        NumberUtils.min((byte[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinByte_emptyArray() {\n+        NumberUtils.min(new byte[0]);\n+    }\n+\n     @Test\n     public void testMinByte() {\n-        final byte[] b = null;\n-        try {\n-            NumberUtils.min(b);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new byte[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(byte[]) failed for array length 1\",\n             5,\n         assertEquals(-10, NumberUtils.min(new byte[] { -5, 0, -10, 5, 10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinDouble_nullArray() {\n+        NumberUtils.min((double[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinDouble_emptyArray() {\n+        NumberUtils.min(new double[0]);\n+    }\n+\n     @Test\n     public void testMinDouble() {\n-        final double[] d = null;\n-        try {\n-            NumberUtils.min(d);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new double[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(double[]) failed for array length 1\",\n             5.12,\n         assertEquals(-10, NumberUtils.min(new double[] { -5, 0, -10, 5, 10 }), 0.0001);\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinFloat_nullArray() {\n+        NumberUtils.min((float[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMinFloat_emptyArray() {\n+        NumberUtils.min(new float[0]);\n+    }\n+\n     @Test\n     public void testMinFloat() {\n-        final float[] f = null;\n-        try {\n-            NumberUtils.min(f);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.min(new float[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"min(float[]) failed for array length 1\",\n             5.9f,\n         assertEquals(-10, NumberUtils.min(new float[] { -5, 0, -10, 5, 10 }), 0.0001f);\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxLong_nullArray() {\n+        NumberUtils.max((long[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxLong_emptyArray() {\n+        NumberUtils.max(new long[0]);\n+    }\n+\n     @Test\n     public void testMaxLong() {\n-        final long[] l = null;\n-        try {\n-            NumberUtils.max(l);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.max(new long[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"max(long[]) failed for array length 1\",\n             5,\n         assertEquals(10, NumberUtils.max(new long[] { -5, 0, 10, 5, -10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxInt_nullArray() {\n+        NumberUtils.max((int[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxInt_emptyArray() {\n+        NumberUtils.max(new int[0]);\n+    }\n+\n     @Test\n     public void testMaxInt() {\n-        final int[] i = null;\n-        try {\n-            NumberUtils.max(i);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.max(new int[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"max(int[]) failed for array length 1\",\n             5,\n         assertEquals(10, NumberUtils.max(new int[] { -5, 0, 10, 5, -10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxShort_nullArray() {\n+        NumberUtils.max((short[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxShort_emptyArray() {\n+        NumberUtils.max(new short[0]);\n+    }\n+\n     @Test\n     public void testMaxShort() {\n-        final short[] s = null;\n-        try {\n-            NumberUtils.max(s);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.max(new short[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"max(short[]) failed for array length 1\",\n             5,\n         assertEquals(10, NumberUtils.max(new short[] { -5, 0, 10, 5, -10 }));\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxByte_nullArray() {\n+        NumberUtils.max((byte[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxByte_emptyArray() {\n+        NumberUtils.max(new byte[0]);\n+    }\n+\n     @Test\n     public void testMaxByte() {\n-        final byte[] b = null;\n-        try {\n-            NumberUtils.max(b);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.max(new byte[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"max(byte[]) failed for array length 1\",\n             5,\n             NumberUtils.max(new byte[] { -10, -5, 0, 5, 10 }));\n         assertEquals(10, NumberUtils.max(new byte[] { -10, -5, 0, 5, 10 }));\n         assertEquals(10, NumberUtils.max(new byte[] { -5, 0, 10, 5, -10 }));\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxDouble_nullArray() {\n+        NumberUtils.max((double[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxDouble_emptyArray() {\n+        NumberUtils.max(new double[0]);\n     }\n \n     @Test\n         assertEquals(10, NumberUtils.max(new double[] { -5, 0, 10, 5, -10 }), 0.0001);\n     }\n \n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxFloat_nullArray() {\n+        NumberUtils.max((float[]) null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testMaxFloat_emptyArray() {\n+        NumberUtils.max(new float[0]);\n+    }\n+\n     @Test\n     public void testMaxFloat() {\n-        final float[] f = null;\n-        try {\n-            NumberUtils.max(f);\n-            fail(\"No exception was thrown for null input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n-        try {\n-            NumberUtils.max(new float[0]);\n-            fail(\"No exception was thrown for empty input.\");\n-        } catch (IllegalArgumentException ex) {}\n-\n         assertEquals(\n             \"max(float[]) failed for array length 1\",\n             5.1f,", "timestamp": 1310880813, "metainfo": ""}