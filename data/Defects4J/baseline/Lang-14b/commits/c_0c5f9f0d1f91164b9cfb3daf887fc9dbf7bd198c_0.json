{"sha": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c", "log": "Added containsIgnoreCase method - LANG-263  ", "commit": "\n--- a/src/java/org/apache/commons/lang/StringUtils.java\n+++ b/src/java/org/apache/commons/lang/StringUtils.java\n         return str.indexOf(searchStr) >= 0;\n     }\n \n+ /**\n+     * <p>Checks if String contains a search String irrespective of case,\n+     * handling <code>null</code>. This method uses\n+     * {@link #contains(String, String)}.</p>\n+     *\n+     * <p>A <code>null</code> String will return <code>false</code>.</p>\n+     *\n+     * <pre>\n+     * StringUtils.contains(null, *) = false\n+     * StringUtils.contains(*, null) = false\n+     * StringUtils.contains(\"\", \"\") = true\n+     * StringUtils.contains(\"abc\", \"\") = true\n+     * StringUtils.contains(\"abc\", \"a\") = true\n+     * StringUtils.contains(\"abc\", \"z\") = false\n+     * StringUtils.contains(\"abc\", \"A\") = true\n+     * StringUtils.contains(\"abc\", \"Z\") = false\n+     * </pre>\n+     *\n+     * @param str the String to check, may be null\n+     * @param searchStr the String to find, may be null\n+     * @return true if the String contains the search String irrespective of\n+     * case or false if not or <code>null</code> string input\n+     */\n+    public static boolean containsIgnoreCase(String str, String searchStr) {\n+        if (str == null || searchStr == null) {\n+            return false;\n+        }\n+        return contains(str.toUpperCase(), searchStr.toUpperCase());\n+    } \n+\n     // IndexOfAny chars\n     //-----------------------------------------------------------------------\n     /**\n--- a/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n+++ b/src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java\n         assertEquals(true, StringUtils.contains(\"abc\", \"c\"));\n         assertEquals(true, StringUtils.contains(\"abc\", \"abc\"));\n         assertEquals(false, StringUtils.contains(\"abc\", \"z\"));\n+    }\n+\n+    public void testContainsIgnoreCase_StringString() {\n+        assertFalse(StringUtils.containsIgnoreCase(null, null));\n+        \n+        // Null tests\n+        assertFalse(StringUtils.containsIgnoreCase(null, \"\"));\n+        assertFalse(StringUtils.containsIgnoreCase(null, \"a\"));\n+        assertFalse(StringUtils.containsIgnoreCase(null, \"abc\"));\n+        \n+        assertFalse(StringUtils.containsIgnoreCase(\"\", null));\n+        assertFalse(StringUtils.containsIgnoreCase(\"a\", null));\n+        assertFalse(StringUtils.containsIgnoreCase(\"abc\", null));\n+        \n+        // Match len = 0\n+        assertTrue(StringUtils.containsIgnoreCase(\"\", \"\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"a\", \"\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"abc\", \"\"));\n+\n+        // Match len = 1\n+        assertFalse(StringUtils.containsIgnoreCase(\"\", \"a\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"a\", \"a\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"abc\", \"a\"));\n+        assertFalse(StringUtils.containsIgnoreCase(\"\", \"A\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"a\", \"A\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"abc\", \"A\"));\n+        \n+        // Match len > 1\n+        assertFalse(StringUtils.containsIgnoreCase(\"\", \"abc\"));\n+        assertFalse(StringUtils.containsIgnoreCase(\"a\", \"abc\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"xabcz\", \"abc\"));\n+        assertFalse(StringUtils.containsIgnoreCase(\"\", \"ABC\"));\n+        assertFalse(StringUtils.containsIgnoreCase(\"a\", \"ABC\"));\n+        assertTrue(StringUtils.containsIgnoreCase(\"xabcz\", \"ABC\"));\n     }\n \n     //-----------------------------------------------------------------------", "timestamp": 1149622514, "metainfo": ""}