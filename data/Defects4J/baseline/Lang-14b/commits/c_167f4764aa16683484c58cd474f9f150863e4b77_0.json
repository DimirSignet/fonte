{"sha": "167f4764aa16683484c58cd474f9f150863e4b77", "log": "test @Nonbinding support  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n+++ b/src/test/java/org/apache/commons/lang3/AnnotationUtilsTest.java\n import java.lang.reflect.InvocationHandler;\n import java.lang.reflect.Method;\n import java.lang.reflect.Proxy;\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import javax.enterprise.util.Nonbinding;\n \n import org.junit.Before;\n import org.junit.Test;\n             type = Object.class,\n             types = { Object.class }\n     )\n+    @Blah(foo = 6, bar = \"x\")\n     public Object dummy1;\n \n     @TestAnnotation(\n             type = Object.class,\n             types = { Object.class }\n     )\n+    @Blah(foo = 6, bar = \"y\")\n     public Object dummy2;\n \n     @TestAnnotation(\n             type = Object.class,\n             types = { Object.class }\n     )\n+    @Blah(foo = 7, bar = \"x\")\n     public Object dummy3;\n \n     @NestAnnotation(\n             type = Object[].class,\n             types = { Object[].class }\n     )\n-\n     public Object dummy4;\n \n     @Target(FIELD)\n         MOE, LARRY, CURLY, JOE, SHEMP;\n     }\n \n+    @Retention(RUNTIME)\n+    @Target(FIELD)\n+    public @interface Blah {\n+        int foo();\n+\n+        @Nonbinding\n+        String bar();\n+    }\n+\n     private Field field1;\n     private Field field2;\n     private Field field3;\n         assertTrue(toString.contains(\"timeout=666000\"));\n         assertTrue(toString.contains(\", \"));\n     }\n+\n+    @Test\n+    public void testNonbinding() throws Exception {\n+        Blah blah1 = field1.getAnnotation(Blah.class);\n+        Blah blah2 = field2.getAnnotation(Blah.class);\n+        Blah blah3 = field3.getAnnotation(Blah.class);\n+        assertTrue(AnnotationUtils.equals(blah1, blah2));\n+        assertFalse(AnnotationUtils.equals(blah1, blah3));\n+    }\n }", "timestamp": 1300640124, "metainfo": ""}