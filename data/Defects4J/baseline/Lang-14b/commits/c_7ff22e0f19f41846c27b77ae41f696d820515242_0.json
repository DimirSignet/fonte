{"sha": "7ff22e0f19f41846c27b77ae41f696d820515242", "log": "Renamed ArrayUtils.join(Object[],Object[]) to addAll.   ", "commit": "\n--- a/src/java/org/apache/commons/lang/ArrayUtils.java\n+++ b/src/java/org/apache/commons/lang/ArrayUtils.java\n  * @author Gary Gregory\n  * @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n  * @since 2.0\n- * @version $Id: ArrayUtils.java,v 1.38 2004/01/31 09:57:39 scolebourne Exp $\n+ * @version $Id: ArrayUtils.java,v 1.39 2004/01/31 20:12:16 ggregory Exp $\n  */\n public class ArrayUtils {\n \n     }\n \n     /**\n-     * <p>Joins the elements of the provided arrays into a single new array.</p>\n-     * <p>The new array contains all of the element of the first array followed\n-     * by all of the elements from the second array.</p>\n+     * <p>Adds all the elements of the provided arrays into a new array.</p>\n+     * <p>The new array contains all of the element of <code>array1</code> followed\n+     * by all of the elements <code>array2</code>.</p>\n      *\n      * <pre>\n-     * ArrayUtils.join(null, null)     = null\n-     * ArrayUtils.join(array1, null)   = array1\n-     * ArrayUtils.join(null, array2)   = array2\n-     * ArrayUtils.join([], [])         = []\n-     * ArrayUtils.join([null], [null]) = [null, null]\n-     * ArrayUtils.join([\"a\", \"b\", \"c\"], [\"1\", \"2\", \"3\"]) = [\"a\", \"b\", \"c\", \"1\", \"2\", \"3\"]\n+     * ArrayUtils.addAll(null, null)     = null\n+     * ArrayUtils.addAll(array1, null)   = array1\n+     * ArrayUtils.addAll(null, array2)   = array2\n+     * ArrayUtils.addAll([], [])         = []\n+     * ArrayUtils.addAll([null], [null]) = [null, null]\n+     * ArrayUtils.addAll([\"a\", \"b\", \"c\"], [\"1\", \"2\", \"3\"]) = [\"a\", \"b\", \"c\", \"1\", \"2\", \"3\"]\n      * </pre>\n      *\n-     * @param array1  the first array of values to join together, may be null\n-     * @param array2  the second array of values to join together, may be null\n-     * @return The new joined array, <code>null</code> if null array inputs. \n-     *      The type of the joined array is the type of the first array.\n+     * @param array1  the first array whose elements are added to the new array, may be null\n+     * @param array2  the second array whose elements are added to the new array, may be null\n+     * @return The new array, <code>null</code> if null array inputs. \n+     *      The type of the new array is the type of the first array.\n      * @since 2.1\n      */\n-    public static Object[] join(Object[] array1, Object[] array2) {\n+    public static Object[] addAll(Object[] array1, Object[] array2) {\n         if (array1 == null) {\n             return array2;\n         } else if (array2 == null) {\n--- a/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/ArrayUtilsTest.java\n  * @author <a href=\"mailto:equinus100@hotmail.com\">Ashwin S</a>\n  * @author Fredrik Westermarck\n  * @author Gary Gregory\n- * @version $Id: ArrayUtilsTest.java,v 1.22 2004/01/30 01:39:57 ggregory Exp $\n+ * @version $Id: ArrayUtilsTest.java,v 1.23 2004/01/31 20:12:15 ggregory Exp $\n  */\n public class ArrayUtilsTest extends TestCase {\n \n     }\n     \n     public void testJoin() {\n-        assertNull(ArrayUtils.join(null, null));\n+        assertNull(ArrayUtils.addAll(null, null));\n         Object[] joinedArray;\n         String[] stringArray1 = new String[]{\"a\", \"b\", \"c\"};\n         String[] stringArray2 = new String[]{\"1\", \"2\", \"3\"};\n-        joinedArray = ArrayUtils.join(stringArray1, null);\n+        joinedArray = ArrayUtils.addAll(stringArray1, null);\n         assertArraysEquals(stringArray1, joinedArray);\n         assertArraysEquals(new String[]{\"a\", \"b\", \"c\"}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n-        joinedArray = ArrayUtils.join(null, stringArray2);\n+        joinedArray = ArrayUtils.addAll(null, stringArray2);\n         assertArraysEquals(stringArray2, joinedArray);\n         assertArraysEquals(new String[]{\"1\", \"2\", \"3\"}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n-        joinedArray = ArrayUtils.join(stringArray1, stringArray2);\n+        joinedArray = ArrayUtils.addAll(stringArray1, stringArray2);\n         assertArraysEquals(new String[]{\"a\", \"b\", \"c\", \"1\", \"2\", \"3\"}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n-        joinedArray = ArrayUtils.join(ArrayUtils.EMPTY_STRING_ARRAY, null);\n+        joinedArray = ArrayUtils.addAll(ArrayUtils.EMPTY_STRING_ARRAY, null);\n         assertArraysEquals(ArrayUtils.EMPTY_STRING_ARRAY, joinedArray);\n         assertArraysEquals(new String[]{}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n-        joinedArray = ArrayUtils.join(null, ArrayUtils.EMPTY_STRING_ARRAY);\n+        joinedArray = ArrayUtils.addAll(null, ArrayUtils.EMPTY_STRING_ARRAY);\n         assertArraysEquals(ArrayUtils.EMPTY_STRING_ARRAY, joinedArray);\n         assertArraysEquals(new String[]{}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n-        joinedArray = ArrayUtils.join(ArrayUtils.EMPTY_STRING_ARRAY, ArrayUtils.EMPTY_STRING_ARRAY);\n+        joinedArray = ArrayUtils.addAll(ArrayUtils.EMPTY_STRING_ARRAY, ArrayUtils.EMPTY_STRING_ARRAY);\n         assertArraysEquals(ArrayUtils.EMPTY_STRING_ARRAY, joinedArray);\n         assertArraysEquals(new String[]{}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n         String[] stringArrayNull = new String []{null};\n-        joinedArray = ArrayUtils.join(stringArrayNull, stringArrayNull);        \n+        joinedArray = ArrayUtils.addAll(stringArrayNull, stringArrayNull);        \n         assertArraysEquals(new String[]{null, null}, joinedArray);\n         assertEquals(String.class, joinedArray.getClass().getComponentType());\n     }    ", "timestamp": 1075579936, "metainfo": ""}