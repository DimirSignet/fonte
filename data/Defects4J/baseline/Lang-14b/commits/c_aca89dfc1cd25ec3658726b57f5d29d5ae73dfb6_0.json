{"sha": "aca89dfc1cd25ec3658726b57f5d29d5ae73dfb6", "log": "Port to JUnit 4.  ", "commit": "\n--- a/src/test/java/org/apache/commons/lang3/ArrayUtilsRemoveTest.java\n+++ b/src/test/java/org/apache/commons/lang3/ArrayUtilsRemoveTest.java\n \n package org.apache.commons.lang3;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n import java.util.Arrays;\n \n-import junit.framework.TestCase;\n+import org.junit.Test;\n \n /**\n  * Tests ArrayUtils remove and removeElement methods.\n  * \n  * @version $Id$\n  */\n-public class ArrayUtilsRemoveTest extends TestCase {\n-\n+public class ArrayUtilsRemoveTest {\n+\n+    @Test\n     public void testRemoveObjectArray() {\n         Object[] array;\n         array = ArrayUtils.remove(new Object[] {\"a\"}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n \n+    @Test\n     public void testRemoveNumberArray(){\n         Number[] inarray = {Integer.valueOf(1),Long.valueOf(2),Byte.valueOf((byte) 3)};\n         assertEquals(3, inarray.length);\n         assertEquals(Number.class, outarray.getClass().getComponentType());\n     }\n \n+    @Test\n     public void testRemoveBooleanArray() {\n         boolean[] array;\n         array = ArrayUtils.remove(new boolean[] {true}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveByteArray() {\n         byte[] array;\n         array = ArrayUtils.remove(new byte[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveCharArray() {\n         char[] array;\n         array = ArrayUtils.remove(new char[] {'a'}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveDoubleArray() {\n         double[] array;\n         array = ArrayUtils.remove(new double[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveFloatArray() {\n         float[] array;\n         array = ArrayUtils.remove(new float[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveIntArray() {\n         int[] array;\n         array = ArrayUtils.remove(new int[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveLongArray() {\n         long[] array;\n         array = ArrayUtils.remove(new long[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveShortArray() {\n         short[] array;\n         array = ArrayUtils.remove(new short[] {1}, 0);\n         } catch (IndexOutOfBoundsException e) {}\n     }\n     \n+    @Test\n     public void testRemoveElementObjectArray() {\n         Object[] array;\n         array = ArrayUtils.removeElement((Object[]) null, \"a\");\n         assertEquals(Object.class, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testRemoveElementBooleanArray() {\n         boolean[] array;\n         array = ArrayUtils.removeElement((boolean[]) null, true);\n         assertEquals(Boolean.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testRemoveElementByteArray() {\n         byte[] array;\n         array = ArrayUtils.removeElement((byte[]) null, (byte) 1);\n         assertEquals(Byte.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testRemoveElementCharArray() {\n         char[] array;\n         array = ArrayUtils.removeElement((char[]) null, 'a');\n         assertEquals(Character.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     @SuppressWarnings(\"cast\")\n     public void testRemoveElementDoubleArray() {\n         double[] array;\n         assertEquals(Double.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     @SuppressWarnings(\"cast\")\n     public void testRemoveElementFloatArray() {\n         float[] array;\n         assertEquals(Float.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testRemoveElementIntArray() {\n         int[] array;\n         array = ArrayUtils.removeElement((int[]) null, 1);\n         assertEquals(Integer.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     @SuppressWarnings(\"cast\")\n     public void testRemoveElementLongArray() {\n         long[] array;\n         assertEquals(Long.TYPE, array.getClass().getComponentType());\n     }\n     \n+    @Test\n     public void testRemoveElementShortArray() {\n         short[] array;\n         array = ArrayUtils.removeElement((short[]) null, (short) 1);", "timestamp": 1313503891, "metainfo": ""}