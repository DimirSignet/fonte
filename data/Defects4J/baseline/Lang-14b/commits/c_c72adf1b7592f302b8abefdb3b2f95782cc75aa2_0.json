{"sha": "c72adf1b7592f302b8abefdb3b2f95782cc75aa2", "log": "Applying Tomasz Nurkiewicz's patch from LANG-533 adding notBlank methods to Validate  ", "commit": "\n--- a/src/java/org/apache/commons/lang/Validate.java\n+++ b/src/java/org/apache/commons/lang/Validate.java\n  * @version $Id$\n  */\n public class Validate {\n-    // Validate has no dependencies on other classes in Commons Lang at present\n-    \n+\n     /**\n      * Constructor. This class should not normally be instantiated.\n      */\n      */\n     public static void notEmpty(Collection<?> collection) {\n         notEmpty(collection, \"The validated collection is empty\");\n+    }\n+\n+    /**\n+     * <p>Validate an argument, throwing <code>IllegalArgumentException</code>\n+     * if the argument String is blank (<code>null</code>, empty or whitespace).</p>\n+     *\n+     * <pre>\n+     * Validate.notBlank(myString);\n+     * </pre>\n+     *\n+     * <p>The message in the exception is 'The validated string is blank'.</p>\n+     *\n+     * @param string  the string to check is not blank\n+     * @throws IllegalArgumentException if the string is blank\n+     * @see StringUtils#isBlank(CharSequence)\n+     */\n+    public static void notBlank(String string) {\n+        if(StringUtils.isBlank(string)) {\n+            throw new IllegalArgumentException(\"The validated string is blank\");\n+        }\n+    }\n+\n+    /**\n+     * <p>Validate an argument, throwing <code>IllegalArgumentException</code>\n+     * if the argument String is blank (<code>null</code>, empty or whitespace).</p>\n+     *\n+     * <pre>\n+     * Validate.notBlank(myString, \"The string must not be blank\");\n+     * </pre>\n+     *\n+     * @param string  the string to check is not blank\n+     * @param message  the exception message you would like to see if the string is blank\n+     * @throws IllegalArgumentException if the string is blank\n+     * @see StringUtils#isBlank(CharSequence)\n+     */\n+    public static void notBlank(String string, String message) {\n+        if(StringUtils.isBlank(string)) {\n+            throw new IllegalArgumentException(message);\n+        }\n     }\n \n     // notEmpty map\n--- a/src/test/org/apache/commons/lang/ValidateTest.java\n+++ b/src/test/org/apache/commons/lang/ValidateTest.java\n     }\n \n     //-----------------------------------------------------------------------\n+    public void testNotBlankNullStringShouldThrow() {\n+        //given\n+        String string = null;\n+\n+        try {\n+            //when\n+            Validate.notBlank(string);\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"The validated string is blank\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgNullStringShouldThrow() {\n+        //given\n+        String string = null;\n+\n+        try {\n+            //when\n+            Validate.notBlank(string, \"Message\");\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"Message\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankEmptyStringShouldThrow() {\n+        //given\n+        String string = \"\";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string);\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"The validated string is blank\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankBlankStringWithWhitespacesShouldThrow() {\n+        //given\n+        String string = \"   \";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string);\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"The validated string is blank\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankBlankStringWithNewlinesShouldThrow() {\n+        //given\n+        String string = \" \\n \\t \\r \\n \";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string);\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"The validated string is blank\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgBlankStringShouldThrow() {\n+        //given\n+        String string = \" \\n \\t \\r \\n \";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string, \"Message\");\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"Message\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgBlankStringWithWhitespacesShouldThrow() {\n+        //given\n+        String string = \"   \";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string, \"Message\");\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"Message\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgEmptyStringShouldThrow() {\n+        //given\n+        String string = \"\";\n+\n+        try {\n+            //when\n+            Validate.notBlank(string, \"Message\");\n+            fail(\"Expecting IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            //then\n+            assertEquals(\"Message\", e.getMessage());\n+        }\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankNotBlankStringShouldNotThrow() {\n+        //given\n+        String string = \"abc\";\n+\n+        //when\n+        Validate.notBlank(string);\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankNotBlankStringWithWhitespacesShouldNotThrow() {\n+        //given\n+        String string = \"  abc   \";\n+\n+        //when\n+        Validate.notBlank(string);\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankNotBlankStringWithNewlinesShouldNotThrow() {\n+        //given\n+        String string = \" \\n \\t abc \\r \\n \";\n+\n+        //when\n+        Validate.notBlank(string);\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgNotBlankStringShouldNotThrow() {\n+        //given\n+        String string = \"abc\";\n+\n+        //when\n+        Validate.notBlank(string, \"Message\");\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow() {\n+        //given\n+        String string = \"  abc   \";\n+\n+        //when\n+        Validate.notBlank(string, \"Message\");\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n+    public void testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow() {\n+        //given\n+        String string = \" \\n \\t abc \\r \\n \";\n+\n+        //when\n+        Validate.notBlank(string, \"Message\");\n+\n+        //then should not throw\n+    }\n+\n+    //-----------------------------------------------------------------------\n     public void testNoNullElementsArray1() {\n         String[] array = new String[] {\"a\", \"b\"};\n         Validate.noNullElements(array);", "timestamp": 1256189601, "metainfo": ""}