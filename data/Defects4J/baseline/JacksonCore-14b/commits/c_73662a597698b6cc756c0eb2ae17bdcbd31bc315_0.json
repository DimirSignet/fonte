{"sha": "73662a597698b6cc756c0eb2ae17bdcbd31bc315", "log": "Fixing squid:S1873 static final arrays should be \"private\"", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/io/CharTypes.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/CharTypes.java\n      * Lookup table used for determining which input characters\n      * need special handling when contained in text segment.\n      */\n-    final static int[] sInputCodes;\n+    private final static int[] sInputCodes;\n     static {\n         /* 96 would do for most cases (backslash is ASCII 94)\n          * but if we want to do lookups by raw bytes it's better\n      * Additionally we can combine UTF-8 decoding info into similar\n      * data table.\n      */\n-    final static int[] sInputCodesUTF8;\n+    private final static int[] sInputCodesUTF8;\n     static {\n         final int[] table = new int[sInputCodes.length];\n         System.arraycopy(sInputCodes, 0, table, 0, table.length);\n      * Basically this is list of 8-bit ASCII characters that are legal\n      * as part of Javascript identifier\n      */\n-    final static int[] sInputCodesJsNames;\n+    private final static int[] sInputCodesJsNames;\n     static {\n         final int[] table = new int[256];\n         // Default is \"not a name char\", mark ones that are\n      * code as ok. They will be validated at a later point, when decoding\n      * name\n      */\n-    final static int[] sInputCodesUtf8JsNames;\n+    private final static int[] sInputCodesUtf8JsNames;\n     static {\n         final int[] table = new int[256];\n         // start with 8-bit JS names\n      * Decoding table used to quickly determine characters that are\n      * relevant within comment content.\n      */\n-    final static int[] sInputCodesComment;\n+    private final static int[] sInputCodesComment;\n     static {\n         final int[] buf = new int[256];\n         // but first: let's start with UTF-8 multi-byte markers:\n      * \n      * @since 2.3\n      */\n-    final static int[] sInputCodesWS;\n+    private final static int[] sInputCodesWS;\n     static {\n         // but first: let's start with UTF-8 multi-byte markers:\n         final int[] buf = new int[256];\n      * Lookup table used for determining which output characters in\n      * 7-bit ASCII range need to be quoted.\n      */\n-    final static int[] sOutputEscapes128;\n+    private final static int[] sOutputEscapes128;\n     static {\n         int[] table = new int[128];\n         // Control chars need generic escape sequence\n      * range. For actual hex digits, contains corresponding value;\n      * for others -1.\n      */\n-    final static int[] sHexValues = new int[128];\n+    private final static int[] sHexValues = new int[128];\n     static {\n         Arrays.fill(sHexValues, -1);\n         for (int i = 0; i < 10; ++i) {\n--- a/src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java\n \n     final static String SMALLEST_LONG = String.valueOf(Long.MIN_VALUE);\n \n-    final static char[] LEAD_3 = new char[4000];\n-    final static char[] FULL_3 = new char[4000];\n+    private final static char[] LEAD_3 = new char[4000];\n+    private final static char[] FULL_3 = new char[4000];\n     static {\n         /* Let's fill it with NULLs for ignorable leading digits,\n          * and digit chars for others\n         }\n     }\n \n-    final static byte[] FULL_TRIPLETS_B = new byte[4000];\n+    private final static byte[] FULL_TRIPLETS_B = new byte[4000];\n     static {\n         for (int i = 0; i < 4000; ++i) {\n             FULL_TRIPLETS_B[i] = (byte) FULL_3[i];\n         }\n     }\n     \n-    final static String[] sSmallIntStrs = new String[] {\n+    private final static String[] sSmallIntStrs = new String[] {\n         \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"\n     };\n-    final static String[] sSmallIntStrs2 = new String[] {\n+    private final static String[] sSmallIntStrs2 = new String[] {\n         \"-1\",\"-2\",\"-3\",\"-4\",\"-5\",\"-6\",\"-7\",\"-8\",\"-9\",\"-10\"\n     };\n \n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java\n     // intermediate copies only made up to certain length...\n     private final static int MAX_BYTES_TO_BUFFER = 512;\n \n-    final static byte[] HEX_CHARS = CharTypes.copyHexBytes();\n+    private final static byte[] HEX_CHARS = CharTypes.copyHexBytes();\n \n     private final static byte[] NULL_BYTES = { 'n', 'u', 'l', 'l' };\n     private final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };", "timestamp": 1450102038, "metainfo": ""}