{"sha": "321d809b682d2d988fa8a0a31def0fd163d27c40", "log": "{Bytes,Char}ToNameCanonicalizer: fix seed generation  (int) x >>> 32 will convert x to an int and then shift by 32, leading to 0 in all cases.  Add parentheses around the shift to avoid that.", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java\n          */\n         long now = System.currentTimeMillis();\n         // ensure it's not 0; and might as well require to be odd so:\n-        int seed = (((int) now) + ((int) now >>> 32)) | 1;\n+        int seed = (((int) now) + ((int) (now >>> 32))) | 1;\n         return createRoot(seed);\n     }\n \n--- a/src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java\n          */\n         long now = System.currentTimeMillis();\n         // ensure it's not 0; and might as well require to be odd so:\n-        int seed = (((int) now) + ((int) now >>> 32)) | 1;\n+        int seed = (((int) now) + ((int) (now >>> 32))) | 1;\n         return createRoot(seed);\n     }\n     ", "timestamp": 1348914839, "metainfo": ""}