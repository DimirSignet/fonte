{"sha": "44f42e82278a6d507b20458c5c252f0ed9c9336f", "log": "Implement #168", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n      */\n     public Object getOutputTarget() {\n         return null;\n+    }\n+\n+    /**\n+     * Helper method, usually equivalent to:\n+     *<code>\n+     *   getOutputContext().getCurrentValue();\n+     *<code>\n+     * \n+     * @since 2.5\n+     */\n+    public Object getCurrentValue() {\n+        JsonStreamContext ctxt = getOutputContext();\n+        return (ctxt == null) ? null : ctxt.getCurrentValue();\n+    }\n+\n+    /**\n+     * Helper method, usually equivalent to:\n+     *<code>\n+     *   getOutputContext().setCurrentValue(v);\n+     *<code>\n+     * \n+     * @since 2.5\n+     */\n+    public void setCurrentValue(Object v) {\n+        JsonStreamContext ctxt = getOutputContext();\n+        if (ctxt != null) {\n+            ctxt.setCurrentValue(v);\n+        }\n     }\n \n     /*\n--- a/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n      */\n     public Object getInputSource() { return null; }\n \n+    /**\n+     * Helper method, usually equivalent to:\n+     *<code>\n+     *   getParsingContext().getCurrentValue();\n+     *<code>\n+     * \n+     * @since 2.5\n+     */\n+    public Object getCurrentValue() {\n+        JsonStreamContext ctxt = getParsingContext();\n+        return (ctxt == null) ? null : ctxt.getCurrentValue();\n+    }\n+\n+    /**\n+     * Helper method, usually equivalent to:\n+     *<code>\n+     *   getParsingContext().setCurrentValue(v);\n+     *<code>\n+     * \n+     * @since 2.5\n+     */\n+    public void setCurrentValue(Object v) {\n+        JsonStreamContext ctxt = getParsingContext();\n+        if (ctxt != null) {\n+            ctxt.setCurrentValue(v);\n+        }\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Format support\n--- a/src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java\n      * follow field names; null for root level and array values.\n      */\n     public abstract String getCurrentName();\n+\n+    /**\n+     * Method for accessing currently active value being used by data-binding\n+     * (as the source of streaming data to write, or destination of data being\n+     * read), at this level in hierarchy.\n+     * The value may not exist or be available due to various limitations (at\n+     * least during reading of data, as target value object may not have yet\n+     * been constructed).\n+     * \n+     * @return Currently active value, if one has been assigned.\n+     * \n+     * @since 2.5\n+     */\n+    public Object getCurrentValue() {\n+        return null;\n+    }\n+\n+    /**\n+     * Method to call to pass value to be returned via {@link #getCurrentValue}; typically\n+     * called indirectly through {@link JsonParser#setCurrentValue}\n+     * or {@link JsonGenerator#setCurrentValue}).\n+     * \n+     * @since 2.5\n+     */\n+    public void setCurrentValue(Object v) { }\n }\n--- a/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java\n      * package as the implementation class.\n      */\n     @Override public Version version() { return VersionUtil.versionFor(getClass()); }\n-    \n+\n+    @Override\n+    public Object getCurrentValue() {\n+        return _writeContext.getCurrentValue();\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        _writeContext.setCurrentValue(v);\n+    }\n+\n     /*\n     /**********************************************************\n     /* Configuration\n--- a/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java\n \n     @Override public Version version() { return PackageVersion.VERSION; }\n \n+    @Override\n+    public Object getCurrentValue() {\n+        return _parsingContext.getCurrentValue();\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        _parsingContext.setCurrentValue(v);\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Overrides for Feature handling\n--- a/src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java\n     // // // Optional duplicate detection\n \n     protected DupDetector _dups;\n-    \n-    // // // Location information (minus source reference)\n-\n-    protected int _lineNr;\n-    protected int _columnNr;\n-\n-    protected String _currentName;\n-    \n+\n     /*\n     /**********************************************************\n     /* Simple instance reuse slots; speeds up things\n \n     /*\n     /**********************************************************\n-    /* Instance construction, reuse\n+    /* Location/state information (minus source reference)\n+    /**********************************************************\n+     */\n+\n+    protected String _currentName;\n+\n+    /**\n+     * @since 2.5\n+     */\n+    protected Object _currentValue;\n+    \n+    protected int _lineNr;\n+    protected int _columnNr;\n+\n+    /*\n+    /**********************************************************\n+    /* Instance construction, config, reuse\n     /**********************************************************\n      */\n \n         _lineNr = lineNr;\n         _columnNr = colNr;\n         _currentName = null;\n+        _currentValue = null;\n         if (_dups != null) {\n             _dups.reset();\n         }\n         return this;\n     }\n \n+    @Override\n+    public Object getCurrentValue() {\n+        return _currentValue;\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        _currentValue = v;\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Factory methods\n--- a/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java\n     // // // Optional duplicate detection\n \n     protected DupDetector _dups;\n-    \n+\n     /*\n     /**********************************************************\n     /* Simple instance reuse slots; speed up things\n \n     protected JsonWriteContext _child = null;\n \n+    /*\n+    /**********************************************************\n+    /* Location/state information (minus source reference)\n+    /**********************************************************\n+     */\n+    \n     /**\n      * Name of the field of which value is to be parsed; only\n      * used for OBJECT contexts\n      */\n     protected String _currentName;\n \n+    /**\n+     * @since 2.5\n+     */\n+    protected Object _currentValue;\n+    \n     /**\n      * Marker used to indicate that we just received a name, and\n      * now expect a value\n         _index = -1;\n         _currentName = null;\n         _gotName = false;\n+        _currentValue = null;\n         if (_dups != null) { _dups.reset(); }\n         return this;\n     }\n     public JsonWriteContext withDupDetector(DupDetector dups) {\n         _dups = dups;\n         return this;\n+    }\n+\n+    @Override\n+    public Object getCurrentValue() {\n+        return _currentValue;\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        _currentValue = v;\n     }\n     \n     /*\n--- a/src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java\n         this.delegateCopyMethods = delegateCopyMethods;\n     }\n \n+    @Override\n+    public Object getCurrentValue() {\n+        return delegate.getCurrentValue();\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        delegate.setCurrentValue(v);\n+    }\n+    \n     /*\n     /**********************************************************\n     /* Extended API\n--- a/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java\n         delegate = d;\n     }\n \n+    @Override\n+    public Object getCurrentValue() {\n+        return delegate.getCurrentValue();\n+    }\n+\n+    @Override\n+    public void setCurrentValue(Object v) {\n+        delegate.setCurrentValue(v);\n+    }\n+\n     /*\n     /**********************************************************\n     /* Public API, configuration", "timestamp": 1417063107, "metainfo": ""}