{"sha": "b46e037c90bc70ae790b28535b621101434ddb54", "log": "another small fix to generator-side filteirng", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n         _filterContext = _filterContext.closeArray(delegate);\n \n         if (_filterContext != null) {\n-            _itemFilter = _filterContext.getFilterState();\n+            _itemFilter = _filterContext.getFilter();\n         }\n     }\n \n     {\n         _filterContext = _filterContext.closeObject(delegate);\n         if (_filterContext != null) {\n-            _itemFilter = _filterContext.getFilterState();\n+            _itemFilter = _filterContext.getFilter();\n         }\n     }\n \n             _itemFilter = null;\n             return;\n         }\n-        if (_itemFilter == TokenFilter.INCLUDE_ALL) {\n+        if (state == TokenFilter.INCLUDE_ALL) {\n             _itemFilter = state;\n             delegate.writeFieldName(name);\n             return;\n--- a/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java\n \n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.core.util.JsonParserDelegate;\n+\n+import static com.fasterxml.jackson.core.JsonTokenId.*;\n \n /**\n  * Specialized {@link JsonParserDelegate} that allows use of\n             }\n         }\n \n-        // If not, need to \n+        // If not, need to read more. If we got any:\n         JsonToken t = delegate.nextToken();\n         if (t == null) {\n-            \n-        }\n-\n+            // no strict need to close, since we have no state here\n+            return (_currToken = t);\n+        }\n+\n+        // otherwise... to include or not?\n+        switch (_currToken.id()) {\n+        case ID_START_ARRAY:\n+            if (_itemFilter == null) {\n+                delegate.skipChildren();\n+                break;\n+            }\n+            if (_itemFilter == TokenFilter.INCLUDE_ALL) {\n+                _headContext = _headContext.createChildArrayContext(_itemFilter, true);\n+                return (_currToken = t);\n+            }\n+            // TODO\n+\n+        case ID_START_OBJECT:\n+            if (_itemFilter == null) {\n+                delegate.skipChildren();\n+                break;\n+            }\n+            if (_itemFilter == TokenFilter.INCLUDE_ALL) {\n+                _headContext = _headContext.createChildObjectContext(_itemFilter, true);\n+                return (_currToken = t);\n+            }\n+            // TODO\n+\n+        case ID_END_ARRAY:\n+        case ID_END_OBJECT:\n+            {\n+                boolean returnEnd = _headContext.isStartHandled();\n+                TokenFilter f = _headContext.getFilter();\n+                if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {\n+                    f.filterFinishArray();\n+                }\n+                _headContext = _headContext.getParent();\n+                _itemFilter = _headContext.getFilter();\n+                if (returnEnd) {\n+                    return (_currToken = t);\n+                }\n+            }\n+            break;\n+\n+        case ID_FIELD_NAME:\n+\n+        default: // scalar value\n+        }\n+\n+        // We get here if token was not yet found; offlined handling\n+        return _nextToken2();\n+    }\n+\n+    protected final JsonToken _nextToken2() throws IOException\n+    {\n         // !!! TODO\n         return null;\n     }\n-\n+    \n     @Override\n     public JsonToken nextValue() throws IOException {\n         // Re-implemented same as ParserMinimalBase:\n--- a/src/main/java/com/fasterxml/jackson/core/filter/TokenFilterContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/TokenFilterContext.java\n         }\n     }\n \n-    public final TokenFilterContext closeArray(JsonGenerator gen) throws IOException\n+    public TokenFilterContext closeArray(JsonGenerator gen) throws IOException\n     {\n         if (_startHandled) {\n             gen.writeEndArray();\n         }\n         return _parent;\n     }\n-    \n-    public final TokenFilterContext closeObject(JsonGenerator gen) throws IOException\n+\n+    public TokenFilterContext closeObject(JsonGenerator gen) throws IOException\n     {\n         if (_startHandled) {\n             gen.writeEndObject();\n     @Override public final TokenFilterContext getParent() { return _parent; }\n     @Override public final String getCurrentName() { return _currentName; }\n \n-    public TokenFilter getFilterState() { return _filter; }\n+    public TokenFilter getFilter() { return _filter; }\n+    public boolean isStartHandled() { return _startHandled; }\n \n     public JsonToken nextTokenToRead(JsonToken curr) {\n         if (!_startHandled) {", "timestamp": 1429072983, "metainfo": ""}