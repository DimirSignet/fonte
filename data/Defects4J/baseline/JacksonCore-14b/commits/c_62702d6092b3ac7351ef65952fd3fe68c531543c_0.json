{"sha": "62702d6092b3ac7351ef65952fd3fe68c531543c", "log": "Minor change to byte-backed parser, to make reader/byte variants identical wrt name parsing calls", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n             return _nextTokenNotInObject(i);\n         }\n         // So first parse the field name itself:\n-        String n = _parseName(i);\n+        String n = (i == INT_QUOTE) ? _parseName() : _handleOddName(i);\n+\n         _parsingContext.setCurrentName(n);\n         _currToken = JsonToken.FIELD_NAME;\n \n             return null;\n         }\n \n-        final String nameStr = _parseName(i);\n+        final String nameStr = (i == INT_QUOTE) ? _parseName() : _handleOddName(i);\n         _parsingContext.setCurrentName(nameStr);\n         _currToken = JsonToken.FIELD_NAME;\n \n     {\n         // // // and this is back to standard nextToken()\n \n-        String name = _parseName(i);\n+        String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i);\n         _parsingContext.setCurrentName(name);\n         _currToken = JsonToken.FIELD_NAME;\n         i = _skipColon();\n     /**********************************************************\n      */\n     \n-    protected final String _parseName(int i) throws IOException\n-    {\n-        if (i != INT_QUOTE) {\n-            return _handleOddName(i);\n-        }\n+    protected final String _parseName() throws IOException\n+    {\n         // First: can we optimize out bounds checks?\n         if ((_inputPtr + 13) > _inputEnd) { // Need up to 12 chars, plus one trailing (quote)\n             return slowParseName();\n         int q = input[_inputPtr++] & 0xFF;\n \n         if (codes[q] == 0) {\n-            i = input[_inputPtr++] & 0xFF;\n+            int i = input[_inputPtr++] & 0xFF;\n             if (codes[i] == 0) {\n                 q = (q << 8) | i;\n                 i = input[_inputPtr++] & 0xFF;", "timestamp": 1439414300, "metainfo": ""}