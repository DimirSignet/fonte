{"sha": "7c56b00fa90261f46dcadb36d1cc98eba5614a2a", "log": "fix some typos", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonParser.java\n          * Feature that determines whether parser will allow use\n          * of single quotes (apostrophe, character '\\'') for\n          * quoting Strings (names and String values). If so,\n-         * this is in addition to other acceptabl markers.\n+         * this is in addition to other acceptable markers.\n          * but not by JSON specification).\n          *<p>\n          * Since JSON specification requires use of double quotes for\n--- a/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n \n     /*\n     /**********************************************************\n-    /* Cosntruction\n+    /* Construction\n     /**********************************************************\n      */\n     \n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n \n     /**\n      * Method called when not even first 8 bytes are guaranteed\n-     * to come consequtively. Happens rarely, so this is offlined;\n+     * to come consecutively. Happens rarely, so this is offlined;\n      * plus we'll also do full checks for escaping etc.\n      */\n     protected String slowParseName() throws IOException\n     /**\n      * Method called when we see non-white space character other\n      * than double quote, when expecting a field name.\n-     * In standard mode will just throw an expection; but\n+     * In standard mode will just throw an exception; but\n      * in non-standard modes may be able to parse name.\n      */\n     protected String _handleOddName(int ch) throws IOException\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java\n             }\n             sb.append(segment);\n             sb.append('\\n');\n-            // let's add somewhat arbitray number of spaces\n+            // let's add somewhat arbitrary number of spaces\n             int x = (i & 3);\n             if (i > 300) {\n                 x += i % 5;\n--- a/src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java\n+++ b/src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java\n \n /**\n  * Set of basic unit tests for verifying that the low-level number\n- * printingg methods work as expected.\n+ * printing methods work as expected.\n  */\n public class TestNumberPrinting\n     extends com.fasterxml.jackson.core.BaseTest", "timestamp": 1445967925, "metainfo": ""}