{"sha": "16f77b35fad8e0594af96accc1a3b97b241aeec5", "log": "tiny improvement to decoding of long names via utf8 lookup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java\n         final int[] hashArea = _hashArea;\n         // spillOffset assumed to be physical index right into quad string\n         int ix = 0;\n+\n+        switch (qlen) {\n+        default:\n+            return _verifyLongName2(q, qlen, spillOffset);\n+        case 8:\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+        case 7:\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+        case 6:\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+        case 5:\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+        case 4: // always at least 4\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+            if (q[ix++] != hashArea[spillOffset++]) return false;\n+        }\n+        return true;\n+    }\n+\n+    private boolean _verifyLongName2(int[] q, int qlen, int spillOffset)\n+    {\n+        int ix = 0;\n         do {\n-            if (q[ix++] != hashArea[spillOffset++]) {\n+            if (q[ix++] != _hashArea[spillOffset++]) {\n                 return false;\n             }\n         } while (ix < qlen);", "timestamp": 1425261168, "metainfo": ""}