{"sha": "b808f26dbd24378b80de9a0c27dce51b0d1dc827", "log": "more fixes to parser filtering", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java\n             \n             // Also: only need buffering if parent path to be included\n             if (_includePath) {\n-                return _nextTokenWithBuffering(_headContext);\n+                t = _nextTokenWithBuffering(_headContext);\n+                if (t != null) {\n+                    _currToken = t;\n+                    return t;\n+                }\n             }\n             break;\n \n             _headContext = _headContext.createChildObjectContext(f, false);\n             // Also: only need buffering if parent path to be included\n             if (_includePath) {\n-                return _nextTokenWithBuffering(_headContext);\n+                t = _nextTokenWithBuffering(_headContext);\n+                if (t != null) {\n+                    _currToken = t;\n+                    return t;\n+                }\n             }\n             // note: inclusion of surrounding Object handled separately via\n             // FIELD_NAME\n                     }\n                 }\n                 if (_includePath) {\n-                    return _nextTokenWithBuffering(_headContext);\n+                    t = _nextTokenWithBuffering(_headContext);\n+                    if (t != null) {\n+                        _currToken = t;\n+                        return t;\n+                    }\n                 }\n                 break;\n             }\n                 _headContext = _headContext.createChildArrayContext(f, false);\n                 // but if we didn't figure it out yet, need to buffer possible events\n                 if (_includePath) {\n-                    return _nextTokenWithBuffering(_headContext);\n+                    t = _nextTokenWithBuffering(_headContext);\n+                    if (t != null) {\n+                        _currToken = t;\n+                        return t;\n+                    }\n                 }\n                 continue main_loop;\n \n                 }\n                 _headContext = _headContext.createChildObjectContext(f, false);\n                 if (_includePath) {\n-                    return _nextTokenWithBuffering(_headContext);\n+                    t = _nextTokenWithBuffering(_headContext);\n+                    if (t != null) {\n+                        _currToken = t;\n+                        return t;\n+                    }\n                 }\n                 continue main_loop;\n \n                         continue main_loop;\n                     }\n                     if (_includePath) {\n-                        return _nextTokenWithBuffering(_headContext);\n+                        t = _nextTokenWithBuffering(_headContext);\n+                        if (t != null) {\n+                            _currToken = t;\n+                            return t;\n+                        }\n                     }\n                 }\n                 continue main_loop;\n         while (true) {\n             JsonToken t = delegate.nextToken();\n             if (t == null) { // is this even legal?\n-                return (_currToken = t);\n+                return t;\n             }\n             TokenFilter f;\n \n                 f = _itemFilter;\n                 if (f == TokenFilter.INCLUDE_ALL) {\n                     _headContext = _headContext.createChildObjectContext(f, true);\n-                    return (_currToken = t);\n+                    return t;\n                 }\n                 if (f == null) { // does this occur?\n                     delegate.skipChildren();\n                     _itemFilter = _headContext.getFilter();\n                     \n                     if (_headContext == buffRoot) {\n-                        // !!! TBI\n-                        throw _constructError(\"Internal error: end of possible inclusion -- TBI\");\n+                        return null;\n                     }\n                 }\n                 continue main_loop;\n         TokenFilterContext ctxt = _exposedContext;\n         JsonToken t = ctxt.nextTokenToRead();\n         if (t != null) {\n-            _currToken = t;\n             return t;\n         }\n         while (true) {\n             }\n             t = _exposedContext.nextTokenToRead();\n             if (t != null) {\n-                _currToken = t;\n                 return t;\n             }\n         }\n--- a/src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java\n+++ b/src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java\n         _assert(SIMPLE_INPUT, \"/b\", true, \"{'b':[1,2,3]}\");\n         _assert(SIMPLE_INPUT, \"/b/0\", true, \"{'b':[1]}\");\n         _assert(SIMPLE_INPUT, \"/b/1\", true, \"{'b':[2]}\");\n+        _assert(SIMPLE_INPUT, \"/b/2\", true, \"{'b':[3]}\");\n+        _assert(SIMPLE_INPUT, \"/b/3\", true, \"\");\n     }\n \n     public void testSimpleNoPath() throws Exception", "timestamp": 1429829259, "metainfo": ""}