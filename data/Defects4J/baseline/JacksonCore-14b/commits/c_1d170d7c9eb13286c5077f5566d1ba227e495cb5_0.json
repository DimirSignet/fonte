{"sha": "1d170d7c9eb13286c5077f5566d1ba227e495cb5", "log": "minor fix to make it possible to pre-parse numbers", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n     @Override\n     public final JsonToken nextToken() throws IOException\n     {\n-        _numTypesValid = NR_UNKNOWN;\n-\n         /* First: field names are special -- we will always tokenize\n          * (part of) value along with field name to simplify\n          * state handling. If so, can and need to use secondary token:\n         if (_currToken == JsonToken.FIELD_NAME) {\n             return _nextAfterName();\n         }\n+        // But if we didn't already have a name, and (partially?) decode number,\n+        // need to ensure no numeric information is leaked\n+        _numTypesValid = NR_UNKNOWN;\n         if (_tokenIncomplete) {\n             _skipString(); // only strings can be partial\n         }\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n     @Override\n     public JsonToken nextToken() throws IOException\n     {\n-        _numTypesValid = NR_UNKNOWN;\n         /* First: field names are special -- we will always tokenize\n          * (part of) value along with field name to simplify\n          * state handling. If so, can and need to use secondary token:\n         if (_currToken == JsonToken.FIELD_NAME) {\n             return _nextAfterName();\n         }\n+        // But if we didn't already have a name, and (partially?) decode number,\n+        // need to ensure no numeric information is leaked\n+        _numTypesValid = NR_UNKNOWN;\n         if (_tokenIncomplete) {\n             _skipString(); // only strings can be partial\n         }", "timestamp": 1439505413, "metainfo": ""}