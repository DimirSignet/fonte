{"sha": "d99951470163764b3e01a119dab2822e5fd98204", "log": "Fix #176 for 2.4(.5)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n \n     private final static int _parseIndex(String str) {\n         final int len = str.length();\n-        // [Issue#133]: beware of super long indexes; assume we never\n+        // [core#133]: beware of super long indexes; assume we never\n         // have arrays over 2 billion entries so ints are fine.\n         if (len == 0 || len > 10) {\n             return -1;\n         }\n-        for (int i = 0; i < len; ++i) {\n-            char c = str.charAt(i);\n+        // [core#176]: no leading zeroes allowed\n+        char c = str.charAt(0);\n+        if (c <= '0') {\n+            return (len == 1 && c == '0') ? 0 : -1;\n+        }\n+        if (c > '9') {\n+            return -1;\n+        }\n+        for (int i = 1; i < len; ++i) {\n+            c = str.charAt(i);\n             if (c > '9' || c < '0') {\n                 return -1;\n             }\n--- a/src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java\n+++ b/src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java\n         JsonPointer ptr = JsonPointer.compile(\"/1e0\");\n         assertFalse(ptr.matches());\n     }\n-    \n+\n+    // [core#176]: do not allow leading zeroes\n+    public void testIZeroIndex() throws Exception\n+    {\n+        JsonPointer ptr = JsonPointer.compile(\"/0\");\n+        assertEquals(0, ptr.getMatchingIndex());\n+        ptr = JsonPointer.compile(\"/00\");\n+        assertEquals(-1, ptr.getMatchingIndex());\n+    }\n+\n     public void testQuotedPath() throws Exception\n     {\n         final String INPUT = \"/w~1out/til~0de/a~1b\";", "timestamp": 1419988191, "metainfo": ""}