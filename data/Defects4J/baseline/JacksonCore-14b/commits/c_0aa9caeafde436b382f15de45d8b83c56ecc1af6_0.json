{"sha": "0aa9caeafde436b382f15de45d8b83c56ecc1af6", "log": "...", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java\n+++ b/src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java\n     public abstract boolean isContainerType();\n \n     public abstract boolean isCollectionLikeType();\n+\n+    /**\n+     * Whether this type is a referential type, meaning that values are\n+     * basically pointers to \"real\" values (or null) and not regular\n+     * values themselves. Typical examples include things like\n+     * {@link java.util.concurrent.atomic.AtomicReference}, and various\n+     * <code>Optional</code> types (in JDK8, Guava).\n+     *\n+     * @since 2.6\n+     */\n+    public boolean isReferenceType() {\n+        return getReferencedType() != null;\n+    }\n \n     public abstract boolean isMapLikeType();\n ", "timestamp": 1430283857, "metainfo": ""}