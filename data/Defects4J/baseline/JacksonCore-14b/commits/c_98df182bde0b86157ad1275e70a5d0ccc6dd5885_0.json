{"sha": "98df182bde0b86157ad1275e70a5d0ccc6dd5885", "log": "Backport #220 fix for 2.5(.5)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n                     }\n                 }\n             }\n+            _inputPtr = ptr-1;\n+            return _skipColon2(true);\n         }\n         _inputPtr = ptr-1;\n         return _skipColon2(false);\n--- a/src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java\n+++ b/src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java\n     /* Wrappers to test InputStream vs Reader\n     /********************************************************\n      */\n-    \n-    // [JACKSON-653]\n+\n     public void testIsNextTokenName() throws Exception\n     {\n         _testIsNextTokenName1(false);\n         _testIsNextTokenName3(true);\n     }\n \n-    // [Issue#34]\n+    // for [core#220]: problem with `nextFieldName(str)`, indented content\n+    public void testNextNameWithIndentation() throws Exception\n+    {\n+        _testNextFieldNameIndent(false);\n+        _testNextFieldNameIndent(true);\n+    }\n+\n+    // [core#34]\n     public void testIssue34() throws Exception\n     {\n         _testIssue34(false);\n         _testIssue34(true);\n     }\n \n-    // [Issue#38] with nextFieldName\n+    // [core#38] with nextFieldName\n     public void testIssue38() throws Exception\n     {\n         _testIssue38(false);\n         _testLong(jf, false);\n         _testLong(jf, true);\n     }\n-    \n+\n     /*\n     /********************************************************\n     /* Actual test code\n         assertNull(jp.getCurrentToken());\n \n         jp.close();\n+    }\n+\n+    private void _testNextFieldNameIndent(boolean useStream) throws Exception\n+    {\n+        final String DOC = \"{\\n  \\\"name\\\" : \\n  [\\n  ]\\n   }\";\n+        JsonFactory f = new JsonFactory();\n+        JsonParser p = useStream ?\n+                f.createParser(new ByteArrayInputStream(DOC.getBytes(\"UTF-8\")))\n+            : f.createParser(new StringReader(DOC));\n+        assertToken(JsonToken.START_OBJECT, p.nextToken());\n+        assertTrue(p.nextFieldName(new SerializedString(\"name\")));\n+\n+        assertToken(JsonToken.START_ARRAY, p.nextToken());\n+        assertToken(JsonToken.END_ARRAY, p.nextToken());\n+        assertToken(JsonToken.END_OBJECT, p.nextToken());\n+\n+        assertNull(p.nextToken());\n+\n+        p.close();\n     }\n \n     private void _testIssue34(boolean useStream) throws Exception", "timestamp": 1443712121, "metainfo": ""}