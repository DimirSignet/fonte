{"sha": "990a909b1e9a166392ebfe9016a68c0786f44b2d", "log": "javadoc improvemtns for generator filtering", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n     /**\n      * Flag that determines whether filtering will continue after the first\n      * match is indicated or not: if `false`, output is based on just the first\n-     * full match (returning {@link TokenFilter#FILTER_INCLUDE}) and no more\n+     * full match (returning {@link TokenFilter#INCLUDE_ALL}) and no more\n      * checks are made; if `true` then filtering will be applied as necessary\n      * until end of content.\n      */\n     protected TokenFilter _itemFilter;\n     \n     /**\n-     * Number of tokens for which {@link TokenFilter#FILTER_INCLUDE}\n+     * Number of tokens for which {@link TokenFilter#INCLUDE_ALL}\n      * has been returned\n      */\n     protected int _matchCount;\n--- a/src/main/java/com/fasterxml/jackson/core/filter/TokenFilter.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/TokenFilter.java\n      * Marker value that should be used to indicate inclusion of a structured\n      * value (sub-tree representing Object or Array), or value of a named\n      * property (regardless of type).\n+     * Note that if this instance is returned, it will used as a marker, and \n+     * no actual callbacks need to be made. For this reason, it is more efficient\n+     * to return this instance if the whole sub-tree is to be included, instead\n+     * of implementing similar filter functionality explicitly.\n      */\n     public final static TokenFilter INCLUDE_ALL = new TokenFilter();\n \n      *   </li>\n      * </ul>\n      *<p>\n-     * The default implementation simply returns <code>this</code> to continue calling\n-     * methods on this filter object, without full inclusion or exclusion.\n+     * Default implementation returns <code>this</code>, which means that checks\n+     * are made recursively for properties of the Object to determine possible inclusion.\n      * \n      * @return TokenFilter to use for further calls within Array, unless return value\n      *   is <code>null</code> or {@link #INCLUDE_ALL} (which have simpler semantics)\n      *  also be called on returned filter object\n      *   </li>\n      * </ul>\n+     *<p>\n+     * Default implementation returns <code>this</code>, which means that checks\n+     * are made recursively for elements of the array to determine possible inclusion.\n      * \n      * @return TokenFilter to use for further calls within Array, unless return value\n      *   is <code>null</code> or {@link #INCLUDE_ALL} (which have simpler semantics)\n \n     /**\n      * Method called to indicate that output of non-filtered Object (one that may\n-     * have been included either completely, or in part) is completed.\n+     * have been included either completely, or in part) is completed,\n+     * in cases where filter other that {@link #INCLUDE_ALL} was returned.\n      * This occurs when {@link JsonGenerator#writeEndObject()} is called.\n      */\n     public void filterFinishObject() { }\n \n     /**\n      * Method called to indicate that output of non-filtered Array (one that may\n-     * have been included either completely, or in part) is completed.\n+     * have been included either completely, or in part) is completed,\n+     * in cases where filter other that {@link #INCLUDE_ALL} was returned.\n      * This occurs when {@link JsonGenerator#writeEndArray()} is called.\n      */\n     public void filterFinishArray() { }\n     \n     /**\n      * Overridable default implementation delegated to all scalar value\n-     * inclusion check methods\n+     * inclusion check methods.\n+     * The default implementation simply includes all leaf values.\n      */\n     protected boolean _includeScalar() {\n-        return false;\n+        return true;\n     }\n }\n--- a/src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java\n+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java\n         public NameMatchFilter(String... names) {\n             _names = new HashSet<String>(Arrays.asList(names));\n         }\n-        \n+\n+        @Override\n+        public TokenFilter includeElement(int index) {\n+            return this;\n+        }\n+\n         @Override\n         public TokenFilter includeProperty(String name) {\n             if (_names.contains(name)) {\n             }\n             return this;\n         }\n+\n+        @Override\n+        protected boolean _includeScalar() { return false; }\n     }\n \n     static class IndexMatchFilter extends TokenFilter\n                 _indices.set(ix);\n             }\n         }\n+\n+        @Override\n+        public TokenFilter includeProperty(String name) {\n+            return this;\n+        }\n         \n         @Override\n         public TokenFilter includeElement(int index) {\n             }\n             return null;\n         }\n+\n+        @Override\n+        protected boolean _includeScalar() { return false; }\n     }\n     \n     /*", "timestamp": 1428641233, "metainfo": ""}