{"sha": "ef860da507ef31a604624a434040bde984d310e8", "log": "Undo one bad optimization for byte-based parser (-10% regression for one of the tests)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n+++ b/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java\n     protected final static int INT_e = 'e';\n     protected final static int INT_E = 'E';\n \n-    // other\n-    protected final static int INT_a = 'a';\n-    protected final static int INT_f = 'f';\n-    protected final static int INT_l = 'l';\n-    protected final static int INT_r = 'r';\n-    protected final static int INT_s = 's';\n-    protected final static int INT_t = 't';\n-    protected final static int INT_u = 'u';\n-    \n     /*\n     /**********************************************************\n     /* Minimal generally useful state\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n             t = _parseNumber(i);\n             break;\n         case 'f':\n-            _matchFalse();\n+            _matchToken(\"false\", 1);\n              t = JsonToken.VALUE_FALSE;\n             break;\n         case 'n':\n-            _matchNull();\n+            _matchToken(\"null\", 1);\n             t = JsonToken.VALUE_NULL;\n             break;\n         case 't':\n-            _matchTrue();\n+            _matchToken(\"true\", 1);\n             t = JsonToken.VALUE_TRUE;\n             break;\n         case '[':\n         return null;\n     }\n \n+    // 30-Apr-2014, tatu: It would seem that doing it explicitly would be the way to\n+    //    go, but for some reason it can really mess up HotSpot. So...\n+/*    \n+    \n     private final  void _matchFalse() throws IOException {\n         int ptr = _inputPtr;\n         if ((ptr + 4) < _inputEnd) {\n         // buffer boundary, or problem, offline\n         _matchToken(\"false\", 1);\n     }\n-    \n+\n     private final void _matchNull() throws IOException {\n         int ptr = _inputPtr;\n         if ((ptr + 3) < _inputEnd) {\n                 }\n             }\n         }\n-        // buffer boundary, or problem, offline\n         _matchToken(\"null\", 1);\n     }\n \n                 }\n             }\n         }\n-        // buffer boundary, or problem, offline\n         _matchToken(\"true\", 1);\n     }\n+    */\n \n     protected void _matchToken(String matchStr, int i) throws IOException\n     {", "timestamp": 1398922122, "metainfo": ""}