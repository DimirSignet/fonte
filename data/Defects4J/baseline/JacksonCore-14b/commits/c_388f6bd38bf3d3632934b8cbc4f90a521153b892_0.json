{"sha": "388f6bd38bf3d3632934b8cbc4f90a521153b892", "log": "Implemented [Issue#10], JsonProcessing.getOriginalMessage()", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java\n     public JsonLocation getLocation() {\n         return _location;\n     }\n-    \n+\n+    /*\n+    /**********************************************************\n+    /* Extended API\n+    /**********************************************************\n+     */\n+\n+    /**\n+     * Method that allows accessing the original \"message\" argument,\n+     * without additional decorations (like location information)\n+     * that overridden {@link #getMessage} adds.\n+     * \n+     * @since 2.1\n+     */\n+    public String getOriginalMessage()\n+    {\n+        return super.getMessage();\n+    }\n+\n     /*\n     /**********************************************************\n     /* Methods for sub-classes to use, override\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/core/main/TestExceptions.java\n+package com.fasterxml.jackson.core.main;\n+\n+import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.test.BaseTest;\n+\n+public class TestExceptions extends BaseTest\n+{\n+    // For [Issue#10]\n+    public void testOriginalMesssage()\n+    {\n+        JsonProcessingException exc = new JsonParseException(\"Foobar\", JsonLocation.NA);\n+        String msg = exc.getMessage();\n+        String orig = exc.getOriginalMessage();\n+        assertEquals(\"Foobar\", orig);\n+        assertTrue(msg.length() > orig.length());\n+    }\n+}", "timestamp": 1348872551, "metainfo": ""}