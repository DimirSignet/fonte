{"sha": "f7a1d5ce26562318655f94db65b80509ff861b8e", "log": "add a compatibilty method in new symbol table", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java\n     /**********************************************************\n      */\n \n+    public String addName(String name, int q1) {\n+        _verifySharing();\n+        if (_intern) {\n+            name = InternCache.instance.intern(name);\n+        }\n+        int offset = _findOffsetForAdd(calcHash(q1));\n+        _hashArea[offset] = q1;\n+        _hashArea[offset+3] = 1;\n+        _names[offset >> 2] = name;\n+        ++_count;\n+        _verifyNeedForRehash();\n+        return name;\n+    }\n+\n+    public String addName(String name, int q1, int q2) {\n+        _verifySharing();\n+        if (_intern) {\n+            name = InternCache.instance.intern(name);\n+        }\n+        int hash = (q2 == 0) ? calcHash(q1) : calcHash(q1, q2);\n+        int offset = _findOffsetForAdd(hash);\n+        _hashArea[offset] = q1;\n+        _hashArea[offset+1] = q2;\n+        _hashArea[offset+3] = 1;\n+        _names[offset >> 2] = name;\n+        ++_count;\n+        _verifyNeedForRehash();\n+        return name;\n+    }\n+\n     public String addName(String name, int[] q, int qlen)\n     {\n-        _verifyRehashAndSharing();\n+        _verifySharing();\n         if (_intern) {\n             name = InternCache.instance.intern(name);\n         }\n \n         // and finally; see if we really should rehash.\n         ++_count;\n-\n+        _verifyNeedForRehash();\n+        return name;\n+    }\n+    \n+    private void _verifyNeedForRehash() {\n         // Yes if above 80%, or above 50% AND have ~1% spill-overs\n         if (_count > (_hashSize >> 1)) { // over 50%\n             int spillCount = (_spilloverEnd - _spilloverStart()) >> 2;\n                 _needRehash = true;\n             }\n         }\n-\n-        // !!! SANITY CHECK -- may uncomment for testing\n-        /*\n-        int pri = primaryCount();\n-        int sec = secondaryCount();\n-        int tert = tertiaryCount();\n-        int spill = spilloverCount();\n-        int sum = pri+sec+tert+spill;\n-\n-        if (sum != _count) {\n-            int total = totalCount();\n-            System.out.printf(\"Mismatch adding '%s' at %d (qlen %d)/%d: %d/%d/%d/%d=%d, total=%d, count=%d\\n\",\n-                    name, offset, qlen, _hashSize<<2,\n-                    pri, sec, tert, spill, sum, total, _count);\n-        }\n-        */\n-\n-        return name;\n-    }\n-\n-    private void _verifyRehashAndSharing()\n+    }\n+\n+    private void _verifySharing()\n     {\n         if (_hashShared) {\n             _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);", "timestamp": 1423202516, "metainfo": ""}