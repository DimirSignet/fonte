{"sha": "37cdc35f5a2aac63d9b34d1680618cfff38127e0", "log": "Merge branch 'master' of github.com:FasterXML/jackson-core", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n          * if format uses escaping mechanisms (which is generally true\n          * for textual formats but not for binary formats).\n          *<p>\n+         * Note that this setting may not necessarily make sense for all\n+         * data formats (for example, binary formats typically do not use\n+         * any escaping mechanisms; and some textual formats do not have\n+         * general-purpose escaping); if so, settings is simply ignored.\n+         * Put another way, effects of this feature are data-format specific.\n+         *<p>\n          * Feature is disabled by default.\n          */\n         ESCAPE_NON_ASCII(false),\n          *<p>\n          * Note that enabling this feature will incur performance overhead\n          * due to having to store and check additional information.\n+         *<p>\n+         * Feature is disabled by default.\n          * \n          * @since 2.3\n          */\n         STRICT_DUPLICATE_DETECTION(false),\n-            ;\n+\n+        /**\n+         * Feature that determines what to do if the underlying data format requires knowledge\n+         * of all properties to output, and if no definition is found for a property that\n+         * caller tries to write. If enabled, such properties will be quietly ignored;\n+         * if disabled, a {@link JsonProcessingException} will be thrown to indicate the\n+         * problem.\n+         * Typically most textual data formats do NOT require schema information (although\n+         * some do, such as CSV), whereas many binary data formats do require definitions\n+         * (such as Avro, protobuf), although not all (Smile, CBOR, BSON and MessagePack do not).\n+         *<p>\n+         * Note that support for this feature is implemented by individual data format\n+         * module, if (and only if) it makes sense for the format in question. For JSON,\n+         * for example, this feature has no effect as properties need not be pre-defined.\n+         *<p>\n+         * Feature is disabled by default, meaning that if the underlying data format\n+         * requires knowledge of all properties to output, attempts to write an unknown\n+         * property will result in a {@link JsonProcessingException}\n+         *\n+         * @since 2.5\n+         */\n+        IGNORE_UNKNOWN(false),\n+        ;\n \n         private final boolean _defaultState;\n \n         throw new IllegalStateException(\"No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed \"\n                 +value.getClass().getName()+\")\");\n     }    \n-\n }\n--- a/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java\n      *\n      * @return Index of the field entry (0-based)\n      */\n-    public final int writeFieldName(String name) throws JsonProcessingException {\n+    public int writeFieldName(String name) throws JsonProcessingException {\n         _gotName = true;\n         _currentName = name;\n         if (_dups != null) { _checkDup(_dups, name); }\n         if (dd.isDup(name)) { throw new JsonGenerationException(\"Duplicate field '\"+name+\"'\"); }\n     }\n     \n-    public final int writeValue() {\n+    public int writeValue() {\n         // Most likely, object:\n         if (_type == TYPE_OBJECT) {\n             _gotName = false;", "timestamp": 1415402225, "metainfo": ""}