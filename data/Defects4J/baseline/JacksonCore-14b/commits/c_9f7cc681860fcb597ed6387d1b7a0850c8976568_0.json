{"sha": "9f7cc681860fcb597ed6387d1b7a0850c8976568", "log": "getting closer to working filtering", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n+++ b/src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java\n     @Override\n     public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException\n     {\n-        /*\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        \n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-\n-            \n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        */\n-        delegate.writeRawUTF8String(text, offset, length);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRawUTF8String(text, offset, length);\n+        }\n     }\n \n     @Override\n     public void writeUTF8String(byte[] text, int offset, int length) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRawUTF8String(text, offset, length);\n+        // not exact match, but best we can do\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRawUTF8String(text, offset, length);\n+        }\n     }\n \n     /*\n     @Override\n     public void writeRaw(String text) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text);\n+        }\n     }\n \n     @Override\n     public void writeRaw(String text, int offset, int len) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text);\n+        }\n     }\n \n     @Override\n     public void writeRaw(SerializableString text) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text);\n+        }\n     }\n \n     @Override\n     public void writeRaw(char[] text, int offset, int len) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text, offset, len);\n-    }\n-\n-    @Override\n-    public void writeRaw(char c) throws IOException {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(c);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text, offset, len);\n+        }\n+    }\n+\n+    @Override\n+    public void writeRaw(char c) throws IOException\n+    {\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(c);\n+        }\n     }\n \n     @Override\n     public void writeRawValue(String text) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text);\n+        }\n     }\n \n     @Override\n     public void writeRawValue(String text, int offset, int len) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text, offset, len);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text, offset, len);\n+        }\n     }\n \n     @Override\n     public void writeRawValue(char[] text, int offset, int len) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeRaw(text, offset, len);\n+        if (_checkRawValueWrite()) {\n+            delegate.writeRaw(text, offset, len);\n+        }\n     }\n \n     @Override\n     public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeBinary()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        delegate.writeBinary(b64variant, data, offset, len);\n+        if (_checkBinaryWrite()) {\n+            delegate.writeBinary(b64variant, data, offset, len);\n+        }\n     }\n \n     @Override\n     public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength) throws IOException\n     {\n-        if (_itemState == TokenFilter.FILTER_SKIP) {\n-            return -1;\n-        }\n-        if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeBinary()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n-            }\n-        } \n-        return delegate.writeBinary(b64variant, data, dataLength);\n+        if (_checkBinaryWrite()) {\n+            return delegate.writeBinary(b64variant, data, dataLength);\n+        }\n+        return -1;\n     }\n \n     /*\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNumber(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNumber(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeRawValue()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeRawValue()) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNumber(encodedValue);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeBoolean(v)) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeBoolean(v)) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeBoolean(v);\n             return;\n         }\n         if (_itemState == TokenFilter.FILTER_CHECK) {\n-            if (filter.includeNull()) { // close enough?\n-                if (_filterContext.inObject()) {\n-                    delegate.writeFieldName(_filterContext.getCurrentName());\n-                }\n+            if (!filter.includeNull()) { // close enough?\n+                return;\n+            }\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n             }\n         } \n         delegate.writeNull();\n \n     @Override\n     public void writeOmittedField(String fieldName) throws IOException {\n+        // Hmmh. Not sure how this would work but...\n+        if (_itemState != TokenFilter.FILTER_SKIP) {\n+            return;\n+        }\n         delegate.writeOmittedField(fieldName);\n     }\n     \n             _filterContext.skipParentChecks();\n         }\n     }\n+\n+    protected boolean _checkBinaryWrite() throws IOException\n+    {\n+        if (_itemState == TokenFilter.FILTER_SKIP) {\n+            return false;\n+        }\n+        if (_itemState == TokenFilter.FILTER_INCLUDE) {\n+            return true;\n+        }\n+        if (filter.includeBinary()) { // close enough?\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n+            }\n+            return true;\n+        }\n+        return false;\n+    }\n+    \n+    protected boolean _checkRawValueWrite() throws IOException\n+    {\n+        if (_itemState == TokenFilter.FILTER_SKIP) {\n+            return false;\n+        }\n+        if (_itemState == TokenFilter.FILTER_INCLUDE) {\n+            return true;\n+        }\n+        if (filter.includeRawValue()) { // close enough?\n+            _checkParentPath();\n+            if (_filterContext.inObject()) {\n+                delegate.writeFieldName(_filterContext.getCurrentName());\n+            }\n+            return true;\n+        }\n+        return false;\n+    }\n }\n--- a/src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java\n+++ b/src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java\n {\n     static class NameMatchFilter extends TokenFilter\n     {\n+        private final String _name;\n         \n+        public NameMatchFilter(String n) { _name = n; }\n+        \n+        @Override\n+        public int includeProperty(String name) {\n+//System.err.println(\"Include? \"+name);\n+            if (name.equals(_name)) {\n+//System.err.println(\" -> true\");\n+                return TokenFilter.FILTER_INCLUDE;\n+            }\n+//System.err.println(\" -> false\");\n+            return TokenFilter.FILTER_CHECK;\n+        }\n     }\n \n     /*\n                 w.toString());\n     }\n \n+    @SuppressWarnings(\"resource\")\n     public void testSingleMatchFiltering() throws Exception\n     {\n         // First, verify non-filtering\n         StringWriter w = new StringWriter();\n-        JsonGenerator gen = JSON_F.createGenerator(w);\n+        JsonGenerator gen0 = JSON_F.createGenerator(w);\n+        JsonGenerator gen = new FilteringGeneratorDelegate(gen0, new NameMatchFilter(\"value\"));\n+        \n         _writeSimpleDoc(gen);\n         gen.close();\n-        assertEquals(aposToQuotes(\"{'a':123,'array':[1,2],'ob':{'value':3},'b':true}\"),\n+\n+//System.out.println(\"JSON -> \"+w.toString());\n+        \n+        assertEquals(aposToQuotes(\"{'value':3}\"),\n                 w.toString());\n     }\n ", "timestamp": 1428196749, "metainfo": ""}