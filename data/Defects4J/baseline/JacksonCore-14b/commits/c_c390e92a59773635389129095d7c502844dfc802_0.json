{"sha": "c390e92a59773635389129095d7c502844dfc802", "log": "work on location update code cleanup", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n      * some access (or skipped to obtain the next token)\n      */\n     protected boolean _tokenIncomplete = false;\n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected long _nameInputTotal; \n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected int _nameInputRow;\n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected int _nameInputCol;\n \n     /*\n     /**********************************************************\n \n         // Closing scope?\n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return (_currToken = JsonToken.END_ARRAY);\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n         if (_parsingContext.expectComma()) {\n             i = _skipComma(i);\n         }\n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n \n         /* And should we now have a name? Always true for\n          * Object contexts, since the intermediate 'expect-value'\n         _binaryValue = null;\n \n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return false;\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n         if (_parsingContext.expectComma()) {\n             i = _skipComma(i);\n         }\n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n \n         if (!_parsingContext.inObject()) {\n             _nextTokenNotInObject(i);\n         }\n         _binaryValue = null;\n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return null;\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n             i = _skipComma(i);\n         }\n \n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n         if (!_parsingContext.inObject()) {\n             _nextTokenNotInObject(i);\n             return null;\n      */\n \n     // @since 2.7\n-    private final void _updateLocationFromInputPtr()\n+    private final void _updateLocation()\n     {\n         _tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n         _tokenInputRow = _currInputRow;\n         _tokenInputCol = _inputPtr - _currInputRowStart - 1;\n+    }\n+\n+    // @since 2.7\n+    private final void _updateNameLocation()\n+    {\n+        _nameInputTotal = _currInputProcessed + _inputPtr - 1;\n+        _nameInputRow = _currInputRow;\n+        _nameInputCol = _inputPtr - _currInputRowStart - 1;\n     }\n \n     /*\n--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java\n      * Temporary storage for partially parsed name bytes.\n      */\n     private int _quad1;\n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected long _nameInputTotal; \n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected int _nameInputRow;\n+\n+    /**\n+     * @since 2.7\n+     */\n+    protected int _nameInputCol;\n \n     /*\n     /**********************************************************\n \n         // Closing scope?\n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return (_currToken = JsonToken.END_ARRAY);\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n             }\n             i = _skipWS();\n         }\n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n \n         /* And should we now have a name? Always true for\n          * Object contexts, since the intermediate 'expect-value'\n \n         // Closing scope?\n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return false;\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n             i = _skipWS();\n         }\n \n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n         if (!_parsingContext.inObject()) {\n             _nextTokenNotInObject(i);\n             return false;\n         _binaryValue = null;\n \n         if (i == INT_RBRACKET) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inArray()) {\n                 _reportMismatchedEndMarker(i, '}');\n             }\n             return null;\n         }\n         if (i == INT_RCURLY) {\n-            _updateLocationFromInputPtr();\n+            _updateLocation();\n             if (!_parsingContext.inObject()) {\n                 _reportMismatchedEndMarker(i, ']');\n             }\n             }\n             i = _skipWS();\n         }\n-        _updateLocationFromInputPtr();\n+        _updateLocation();\n         if (!_parsingContext.inObject()) {\n             _nextTokenNotInObject(i);\n             return null;\n \n     /*\n     /**********************************************************\n-    /* Internal methods, location updating (refactored in 2.7)\n+    /* Improved location updating (refactored in 2.7)\n     /**********************************************************\n      */\n \n     // @since 2.7\n-    private final void _updateLocationFromInputPtr()\n+    private final void _updateLocation()\n     {\n         _tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n         _tokenInputRow = _currInputRow;\n         _tokenInputCol = _inputPtr - _currInputRowStart - 1;\n     }\n-    \n+\n+    // @since 2.7\n+    private final void _updateNameLocation()\n+    {\n+        _nameInputTotal = _currInputProcessed + _inputPtr - 1;\n+        _nameInputRow = _currInputRow;\n+        _nameInputCol = _inputPtr - _currInputRowStart - 1;\n+    }\n+\n     /*\n     /**********************************************************\n     /* Internal methods, other", "timestamp": 1448512570, "metainfo": ""}