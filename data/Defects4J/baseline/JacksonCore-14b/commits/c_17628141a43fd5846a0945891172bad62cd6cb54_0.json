{"sha": "17628141a43fd5846a0945891172bad62cd6cb54", "log": "Change JsonPointer.head() so it need not re-compile expression but use existing pieces", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonPointer.java\n         // but could be an index, if parsable\n         _matchingElementIndex = _parseIndex(segment);\n     }\n+\n+    /**\n+     * @since 2.5\n+     */\n+    protected JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next) {\n+        _asString = fullString;\n+        _nextSegment = next;\n+        _matchingPropertyName = segment;\n+        _matchingElementIndex = matchIndex;\n+    }\n     \n     /*\n     /**********************************************************\n      */\n     public JsonPointer last() {\n         JsonPointer current = this;\n-        while (true) {\n-            JsonPointer next = current._nextSegment;\n-            if (next == JsonPointer.EMPTY) {\n-                break;\n-            }\n+        if (current == EMPTY) {\n+            return null;\n+        }\n+        JsonPointer next;\n+        while ((next = current._nextSegment) != JsonPointer.EMPTY) {\n             current = next;\n         }\n         return current;\n     }\n \n-    public JsonPointer append(JsonPointer jsonPointer) {\n+    public JsonPointer append(JsonPointer tail) {\n+        if (this == EMPTY) {\n+            return tail;\n+        }\n+        if (tail == EMPTY) {\n+            return this;\n+        }\n         String currentJsonPointer = _asString;\n-        if(currentJsonPointer.endsWith(\"/\")) {\n+        if (currentJsonPointer.endsWith(\"/\")) {\n             //removes final slash\n             currentJsonPointer = currentJsonPointer.substring(0, currentJsonPointer.length()-1);\n         }\n-        return compile(currentJsonPointer + jsonPointer._asString);\n+        return compile(currentJsonPointer + tail._asString);\n     }\n \n     /**\n \n     protected JsonPointer _constructHead()\n     {\n-        int ix = _asString.lastIndexOf('/');\n-        if (ix <= 0) { // not sure if we should ever not find, but 0 is the case for last segment so\n+        // ok; find out who we are to drop\n+        JsonPointer last = last();\n+        if (last == this) {\n             return EMPTY;\n         }\n-        return compile(_asString.substring(0, ix));\n+        // and from that, length of suffix to drop\n+        int suffixLength = last._asString.length();\n+        JsonPointer next = _nextSegment;\n+        return new JsonPointer(_asString.substring(0, _asString.length() - suffixLength), _matchingPropertyName,\n+                _matchingElementIndex, next._constructHead(suffixLength, last));\n+    }\n+\n+    protected JsonPointer _constructHead(int suffixLength, JsonPointer last)\n+    {\n+        if (this == last) {\n+            return EMPTY;\n+        }\n+        JsonPointer next = _nextSegment;\n+        String str = _asString;\n+        return new JsonPointer(str.substring(0, str.length() - suffixLength), _matchingPropertyName,\n+                _matchingElementIndex, next._constructHead(suffixLength, last));\n     }\n     \n     private static void _appendEscape(StringBuilder sb, char c) {\n--- a/src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java\n+++ b/src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java\n         assertNull(ptr.head());\n         assertEquals(\"\", ptr.getMatchingProperty());\n         assertEquals(-1, ptr.getMatchingIndex());\n+    }\n+\n+    public void testSimplePathLonger() throws Exception\n+    {\n+        final String INPUT = \"/a/b/c/d/e/f/0\";\n+        JsonPointer ptr = JsonPointer.compile(INPUT);\n+        assertFalse(ptr.matches());\n+        assertEquals(-1, ptr.getMatchingIndex());\n+        assertEquals(\"a\", ptr.getMatchingProperty());\n+        assertEquals(\"/a/b/c/d/e/f\", ptr.head().toString());\n+        assertEquals(\"/b/c/d/e/f/0\", ptr.tail().toString());\n+        assertEquals(\"/0\", ptr.last().toString());\n+        assertEquals(INPUT, ptr.toString());\n     }\n \n     public void testWonkyNumber173() throws Exception", "timestamp": 1418166218, "metainfo": ""}