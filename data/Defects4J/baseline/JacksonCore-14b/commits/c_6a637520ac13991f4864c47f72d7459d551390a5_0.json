{"sha": "6a637520ac13991f4864c47f72d7459d551390a5", "log": "Fixed #191", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n                     }\n                 }\n             }\n-            hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + i;\n+            hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + c;\n             // Ok, let's add char to output:\n             outBuf[outPtr++] = c;\n \n             char[] buf = tb.getTextBuffer();\n             int start = tb.getTextOffset();\n             int len = tb.size();\n-\n             return _symbols.findSymbol(buf, start, len, hash);\n         }\n     }\n--- a/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java\n+++ b/src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java\n         p.close();\n     }\n \n+    // [core#191]\n+    public void testShortQuotedDirectChars() throws IOException\n+    {\n+        final int COUNT = 400;\n+        \n+        CharsToNameCanonicalizer symbols = CharsToNameCanonicalizer.createRoot(1);\n+        for (int i = 0; i < COUNT; ++i) {\n+            String id = String.format(\"\\\\u%04x\", i);\n+            char[] ch = id.toCharArray();\n+            symbols.findSymbol(ch, 0, ch.length, symbols.calcHash(id));\n+        }\n+        assertEquals(COUNT, symbols.size());\n+        assertEquals(1024, symbols.bucketCount());\n+\n+        assertEquals(112, symbols.collisionCount());\n+        assertEquals(2, symbols.maxCollisionLength());\n+    }\n+\n+    public void testShortQuotedDirectBytes() throws IOException\n+    {\n+        final int COUNT = 400;\n+        BytesToNameCanonicalizer symbols =\n+                BytesToNameCanonicalizer.createRoot(1).makeChild(JsonFactory.Feature.collectDefaults());\n+        for (int i = 0; i < COUNT; ++i) {\n+            String id = String.format(\"\\\\u%04x\", i);\n+            int[] quads = BytesToNameCanonicalizer.calcQuads(id.getBytes(\"UTF-8\"));\n+            symbols.addName(id, quads, quads.length);\n+        }\n+        assertEquals(COUNT, symbols.size());\n+        assertEquals(1024, symbols.bucketCount());\n+\n+        assertEquals(44, symbols.collisionCount());\n+        assertEquals(2, symbols.maxCollisionLength());\n+    }\n+    \n     // [core#191]\n     public void testShortNameCollisionsDirect() throws IOException\n     {\n             if (i > 0) {\n                 sb.append(\",\\n\");\n             }\n-            sb.append('\"');\n-            char c = (char) i;\n-            if (Character.isLetterOrDigit(c)) {\n-                sb.append((char) i);\n-            } else {\n-                sb.append(String.format(\"\\\\u%04x\", i));\n-            }\n-            sb.append(\"\\\" : \"+i);\n+            sb.append(String.format(\"\\\"\\\\u%04x\\\" : %d\", i, i));\n         }\n         sb.append(\"}\\n\");\n         return sb.toString();", "timestamp": 1429763627, "metainfo": ""}