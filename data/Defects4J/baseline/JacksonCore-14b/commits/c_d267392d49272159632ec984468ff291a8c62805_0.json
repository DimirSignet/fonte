{"sha": "d267392d49272159632ec984468ff291a8c62805", "log": "Merge pull request #232 from Spikhalskiy/non-standard-charsets-javadoc  Clarified javadocs about charset auto-detection for issue #222", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonFactory.java\n \n     /**\n      * Method for constructing JSON parser instance to parse\n-     * contents of specified file. Encoding is auto-detected\n-     * from contents according to JSON specification recommended\n-     * mechanism.\n+     * contents of specified file.\n+     *\n+     *<p>\n+     * Encoding is auto-detected from contents according to JSON\n+     * specification recommended mechanism. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n+     *\n      *<p>\n      * Underlying input stream (needed for reading contents)\n      * will be <b>owned</b> (and managed, i.e. closed as need be) by\n     /**\n      * Method for constructing JSON parser instance to parse\n      * contents of resource reference by given URL.\n-     * Encoding is auto-detected\n-     * from contents according to JSON specification recommended\n-     * mechanism.\n+     *\n+     *<p>\n+     * Encoding is auto-detected from contents according to JSON\n+     * specification recommended mechanism. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n+     *\n      *<p>\n      * Underlying input stream (needed for reading contents)\n      * will be <b>owned</b> (and managed, i.e. closed as need be) by\n      * if (and only if) {@link com.fasterxml.jackson.core.JsonParser.Feature#AUTO_CLOSE_SOURCE}\n      * is enabled.\n      *<p>\n+     *\n      * Note: no encoding argument is taken since it can always be\n-     * auto-detected as suggested by JSON RFC.\n+     * auto-detected as suggested by JSON RFC. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n      *\n      * @param in InputStream to use for reading JSON content to parse\n      * \n \n     /**\n      * Method for constructing JSON parser instance to parse\n-     * contents of specified file. Encoding is auto-detected\n-     * from contents according to JSON specification recommended\n-     * mechanism.\n+     * contents of specified file.\n+     *\n+     *<p>\n+     * Encoding is auto-detected from contents according to JSON\n+     * specification recommended mechanism. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n+     *\n      *<p>\n      * Underlying input stream (needed for reading contents)\n      * will be <b>owned</b> (and managed, i.e. closed as need be) by\n     /**\n      * Method for constructing JSON parser instance to parse\n      * contents of resource reference by given URL.\n-     * Encoding is auto-detected\n-     * from contents according to JSON specification recommended\n-     * mechanism.\n+     *\n+     *<p>\n+     * Encoding is auto-detected from contents according to JSON\n+     * specification recommended mechanism. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n+     *\n      *<p>\n      * Underlying input stream (needed for reading contents)\n      * will be <b>owned</b> (and managed, i.e. closed as need be) by\n      * if (and only if) {@link com.fasterxml.jackson.core.JsonParser.Feature#AUTO_CLOSE_SOURCE}\n      * is enabled.\n      *<p>\n+     *\n      * Note: no encoding argument is taken since it can always be\n-     * auto-detected as suggested by JSON RFC.\n+     * auto-detected as suggested by JSON RFC. Json specification\n+     * supports only UTF-8, UTF-16 and UTF-32 as valid encodings,\n+     * so auto-detection implemented only for this charsets.\n+     * For other charsets use {@link #createParser(java.io.Reader)}.\n      *\n      * @param in InputStream to use for reading JSON content to parse\n      * ", "timestamp": 1448822017, "metainfo": ""}