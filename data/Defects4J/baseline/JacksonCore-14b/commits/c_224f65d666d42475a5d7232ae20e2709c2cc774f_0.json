{"sha": "224f65d666d42475a5d7232ae20e2709c2cc774f", "log": "change passing of sign, seems to give boost to perf (odd)", "commit": "\n--- a/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n+++ b/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java\n              * it is not allowed per se, it may be erroneously used,\n              * and could be indicate by a more specific error message.\n              */\n+            t = _parseNumber(i, true);\n+            break;\n         case '0':\n         case '1':\n         case '2':\n         case '7':\n         case '8':\n         case '9':\n-            t = _parseNumber(i);\n+            t = _parseNumber(i, false);\n             break;\n         default:\n             t = _handleOddValue(i);\n      * deferred, since it is usually the most complicated and costliest\n      * part of processing.\n      */\n-    protected final JsonToken _parseNumber(int ch) throws IOException\n+    protected final JsonToken _parseNumber(int ch, boolean neg) throws IOException\n     {\n         /* Although we will always be complete with respect to textual\n          * representation (that is, all characters will be parsed),\n          * actual conversion to a number is deferred. Thus, need to\n          * note that no representations are valid yet\n          */\n-        boolean neg = (ch == INT_MINUS);\n         int ptr = _inputPtr;\n         int startPtr = ptr-1; // to include sign/digit already read\n         final int inputLen = _inputEnd;", "timestamp": 1399001526, "metainfo": ""}