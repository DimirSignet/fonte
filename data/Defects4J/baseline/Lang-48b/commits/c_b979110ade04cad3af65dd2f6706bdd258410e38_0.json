{"sha": "b979110ade04cad3af65dd2f6706bdd258410e38", "log": "testing all primitive value methods, including the ones not implemented in the MutableXxx class so that we can tell when Sun change the wrapper implementations  ", "commit": "\n--- a/src/test/org/apache/commons/lang/mutable/MutableByteTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableByteTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableByteTest.java,v 1.3 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableByte\n  */\n public class MutableByteTest extends TestCase {\n         \n         assertEquals( 1.0F, mutNum.floatValue(), 0 );\n         assertEquals( 1.0, mutNum.doubleValue(), 0 );\n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n         assertEquals( 1, mutNum.intValue() );\n         assertEquals( 1L, mutNum.longValue() );\n     }\n--- a/src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableDoubleTest.java,v 1.3 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableDouble\n  */\n public class MutableDoubleTest extends TestCase {\n         MutableDouble mutNum = new MutableDouble(1.7);\n         \n         assertEquals( 1.7F, mutNum.floatValue(), 0 );\n+        assertEquals( 1.7, mutNum.doubleValue(), 0 );\n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n         assertEquals( 1, mutNum.intValue() );\n         assertEquals( 1L, mutNum.longValue() );\n     }\n--- a/src/test/org/apache/commons/lang/mutable/MutableFloatTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableFloatTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableFloatTest.java,v 1.3 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableFloat\n  */\n public class MutableFloatTest extends TestCase {\n         \n         assertEquals( 1, mutNum.intValue() );\n         assertEquals( 1.7, mutNum.doubleValue(), 0.00001 );\n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n+        assertEquals( 1, mutNum.intValue() );\n         assertEquals( 1L, mutNum.longValue() );\n     }\n \n--- a/src/test/org/apache/commons/lang/mutable/MutableIntTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableIntTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableIntTest.java,v 1.2 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableInt\n  */\n public class MutableIntTest extends TestCase {\n     public void testPrimitiveValues() {\n         MutableInt mutNum = new MutableInt(1);\n         \n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n         assertEquals( 1.0F, mutNum.floatValue(), 0 );\n         assertEquals( 1.0, mutNum.doubleValue(), 0 );\n         assertEquals( 1L, mutNum.longValue() );\n--- a/src/test/org/apache/commons/lang/mutable/MutableLongTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableLongTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableLongTest.java,v 1.3 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableLong\n  */\n public class MutableLongTest extends TestCase {\n \n         assertEquals( 1.0F, mutNum.floatValue(), 0 );\n         assertEquals( 1.0, mutNum.doubleValue(), 0 );\n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n+        assertEquals( 1, mutNum.intValue() );\n+        assertEquals( 1L, mutNum.longValue() );\n     }\n \n     public void testToString() {\n--- a/src/test/org/apache/commons/lang/mutable/MutableShortTest.java\n+++ b/src/test/org/apache/commons/lang/mutable/MutableShortTest.java\n /**\n  * JUnit tests.\n  * \n- * @version $Id: MutableShortTest.java,v 1.3 2004/12/26 02:35:47 bayard Exp $\n+ * @version $Id$\n  * @see MutableShort\n  */\n public class MutableShortTest extends TestCase {\n         \n         assertEquals( 1.0F, mutNum.floatValue(), 0 );\n         assertEquals( 1.0, mutNum.doubleValue(), 0 );\n+        assertEquals( (byte) 1, mutNum.byteValue() );\n+        assertEquals( (short) 1, mutNum.shortValue() );\n         assertEquals( 1, mutNum.intValue() );\n         assertEquals( 1L, mutNum.longValue() );\n     }", "timestamp": 1107486469, "metainfo": ""}