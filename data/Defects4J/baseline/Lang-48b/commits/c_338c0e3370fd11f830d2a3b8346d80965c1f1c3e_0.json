{"sha": "338c0e3370fd11f830d2a3b8346d80965c1f1c3e", "log": "Remove unneeded whitespace that might cause javadoc problems   ", "commit": "\n--- a/src/java/org/apache/commons/lang/util/BitField.java\n+++ b/src/java/org/apache/commons/lang/util/BitField.java\n  * @author Marc Johnson (mjohnson at apache dot org)\n  * @author Andrew C. Oliver (acoliver at apache dot org)\n  * @author Stephen Colebourne\n- * @version $Id: BitField.java,v 1.1 2002/12/18 02:50:36 bayard Exp $\n+ * @version $Id: BitField.java,v 1.2 2002/12/18 23:28:19 scolebourne Exp $\n  */\n public class BitField {\n+    \n     private final int _mask;\n     private final int _shift_count;\n \n      *             BitField. Bits that are set in this mask are the\n      *             bits that this BitField operates on\n      */\n-\n     public BitField(final int mask) {\n         _mask = mask;\n         int count = 0;\n      *\n      * @return the selected bits, shifted right appropriately\n      */\n-\n     public int getValue(final int holder) {\n         return getRawValue(holder) >> _shift_count;\n     }\n      *\n      * @return the selected bits, shifted right appropriately\n      */\n-\n     public short getShortValue(final short holder) {\n         return (short) getValue(holder);\n     }\n      *\n      * @return the selected bits\n      */\n-\n     public int getRawValue(final int holder) {\n         return (holder & _mask);\n     }\n      *\n      * @return the selected bits\n      */\n-\n     public short getShortRawValue(final short holder) {\n         return (short) getRawValue(holder);\n     }\n      *\n      * @return true if any of the bits are set, else false\n      */\n-\n     public boolean isSet(final int holder) {\n         return (holder & _mask) != 0;\n     }\n      *\n      * @return true if all of the bits are set, else false\n      */\n-\n     public boolean isAllSet(final int holder) {\n         return (holder & _mask) == _mask;\n     }\n      * @return the value of holder with the bits from the value\n      *         parameter replacing the old bits\n      */\n-\n     public int setValue(final int holder, final int value) {\n         return (holder & ~_mask) | ((value << _shift_count) & _mask);\n     }\n      * @return the value of holder with the bits from the value\n      *         parameter replacing the old bits\n      */\n-\n     public short setShortValue(final short holder, final short value) {\n         return (short) setValue(holder, value);\n     }\n      * @return the value of holder with the specified bits cleared\n      *         (set to 0)\n      */\n-\n     public int clear(final int holder) {\n         return holder & ~_mask;\n     }\n      * @return the value of holder with the specified bits cleared\n      *         (set to 0)\n      */\n-\n     public short clearShort(final short holder) {\n         return (short) clear(holder);\n     }\n      * @return the value of holder with the specified bits cleared\n      *         (set to 0)\n      */\n-\n     public byte clearByte(final byte holder) {\n         return (byte) clear(holder);\n     }\n      *\n      * @return the value of holder with the specified bits set to 1\n      */\n-\n     public int set(final int holder) {\n         return holder | _mask;\n     }\n      *\n      * @return the value of holder with the specified bits set to 1\n      */\n-\n     public short setShort(final short holder) {\n         return (short) set(holder);\n     }\n      *\n      * @return the value of holder with the specified bits set to 1\n      */\n-\n     public byte setByte(final byte holder) {\n         return (byte) set(holder);\n     }\n      * @return the value of holder with the specified bits set or\n      *         cleared\n      */\n-\n     public int setBoolean(final int holder, final boolean flag) {\n         return flag ? set(holder) : clear(holder);\n     }\n      * @return the value of holder with the specified bits set or\n      *         cleared\n      */\n-\n     public short setShortBoolean(final short holder, final boolean flag) {\n         return flag ? setShort(holder) : clearShort(holder);\n     }\n      * @return the value of holder with the specified bits set or\n      *         cleared\n      */\n-\n     public byte setByteBoolean(final byte holder, final boolean flag) {\n         return flag ? setByte(holder) : clearByte(holder);\n     }", "timestamp": 1040254099, "metainfo": ""}