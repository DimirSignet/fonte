{"sha": "6543e1f3d12517d917ceebea6bd1056fffaa5bc7", "log": "Switching the JDK test to a warning as we can't control the JDK  ", "commit": "\n--- a/src/test/org/apache/commons/lang/time/DateFormatUtilsTest.java\n+++ b/src/test/org/apache/commons/lang/time/DateFormatUtilsTest.java\n \n     public void testLang312() {\n         String pattern = \"dd/MM/yyyy\";\n+        String expected = \"19/04/1948\";\n         TimeZone timeZone = TimeZone.getTimeZone(\"CET\");\n         Locale locale = Locale.GERMANY;\n \n         // show Calendar is good\n         Calendar cal = Calendar.getInstance(timeZone, locale);\n         cal.set(1948, 3, 19);\n-        assertEquals(\"19/04/1948\", DateFormatUtils.format( cal.getTime(), pattern, timeZone, locale ) );\n+        assertEquals(expected, DateFormatUtils.format( cal.getTime(), pattern, timeZone, locale ) );\n \n         Date date = new Date(48, 3, 19);\n \n         // test JDK\n         java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(pattern, locale);\n         sdf.setTimeZone(timeZone);\n-        assertEquals(\"19/04/1948\", sdf.format( date ) );\n+// There's nothing we can do if the JDK fails, so just going to pring a warning in this case\n+//        assertEquals(expected, sdf.format( date ) );\n+        if( ! expected.equals( sdf.format( date ) ) ) {\n+            System.out.println(\"WARNING: JDK test failed - testLang312()\");\n+        }\n \n         // test Commons\n-        assertEquals(\"19/04/1948\", DateFormatUtils.format( date, pattern, timeZone, locale ) );\n+        assertEquals(expected, DateFormatUtils.format( date, pattern, timeZone, locale ) );\n     }\n \n }", "timestamp": 1170802972, "metainfo": ""}