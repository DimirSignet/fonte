{"sha": "c53509fe85a9fa92c9287594d8a1af316222a17c", "log": "Fix jQuery.expand unit tests.  R=nicksantos  ", "commit": "\n--- a/src/com/google/javascript/jscomp/ExpandJqueryAliases.java\n+++ b/src/com/google/javascript/jscomp/ExpandJqueryAliases.java\n \n import java.util.Set;\n import java.util.logging.Logger;\n-\n import com.google.common.collect.ImmutableSet;\n import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;\n import com.google.javascript.rhino.IR;\n   private static final Logger logger =\n       Logger.getLogger(ExpandJqueryAliases.class.getName());\n   private static final Set<String> JqueryExtendNames = ImmutableSet.of(\n-              \"jQuery.extend\", \"jQuery.fn.extend\", \"jQuery.prototype.extend\");\n+      \"jQuery.extend\", \"jQuery.fn.extend\", \"jQuery.prototype.extend\");\n \n   ExpandJqueryAliases(AbstractCompiler compiler) {\n     this.compiler = compiler;\n       Node secondArgument = firstArgument.getNext();\n       if ((firstArgument.isObjectLit() && secondArgument == null) ||\n           (firstArgument.isName() && secondArgument != null &&\n-          secondArgument.isObjectLit())) {\n+          secondArgument.isObjectLit() && secondArgument.getNext() == null)) {\n         return true;\n       }\n     }\n         IR.paramList().srcref(n),\n         fncBlock);\n     n.replaceChild(callTarget, fnc);\n-\n+    n.putBooleanProp(Node.FREE_CALL, true);\n+    \n     //remove any other pre-existing call arguments\n     while(fnc.getNext() != null) {\n       n.removeChildAfter(fnc);\n--- a/test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java\n+++ b/test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java\n     String setupCode = \"var jQuery={},obj2={};\";\n \n     //test invalid extend call\n-    testSame(setupCode + \"jQuery.extend();\");\n+    testSame(setupCode + \"jQuery.extend()\");\n \n     //test empty extend call\n-    testSame(setupCode + \"jQuery.extend({});\");\n+    testSame(setupCode + \"jQuery.extend({})\");\n \n-    /*\n-     * TODO(Chad Killingsworth) fix the following unit tests...\n-     */\n-    /*//Extend the jQuery namespace\n-    test(setupCode + \"jQuery.extend({a:'test', b:'test2'});\",\n-        setupCode + \"(function(){\" +\n-        \"jQuery.a='test';jQuery.b='test2';return jQuery;})();\");\n-\n+    test(\"jQuery.extend({a:'test'})\",\n+        \"(function(){jQuery.a='test';return jQuery})()\");\n+    \n     //Extend the jQuery prototype\n     test(setupCode + \"jQuery.fn=jQuery.prototype;\" +\n-        \"jQuery.fn.extend({a:'test', b:'test2';return jQuery;});\",\n+        \"jQuery.fn.extend({a:'test', b:'test2'});\",\n         setupCode + \"jQuery.fn=jQuery.prototype;(function(){\" +\n         \"jQuery.prototype.a='test';jQuery.prototype.b='test2';\" +\n-        \"return jQuery;})();\");\n+        \"return jQuery;})()\");\n \n     //Extend obj2\n     test(setupCode + \"jQuery.extend(obj2, {a:'test', b:'test2'});\",\n         setupCode + \"(function(){\" +\n-        \"obj2.a='test';obj2.b='test2';return obj2;})();\");\n+        \"obj2.a='test';obj2.b='test2';return obj2})()\");\n \n     //Extend the jQuery namespace - 2 argument call\n     test(setupCode + \"jQuery.extend(jQuery,{a:'test', b:'test2'});\",\n         setupCode + \"(function(){\" +\n-        \"jQuery.a='test';jQuery.b='test2';return jQuery;})();\");\n-    */\n+        \"jQuery.a='test';jQuery.b='test2';return jQuery})()\");\n   }\n }", "timestamp": 1323483122, "metainfo": ""}