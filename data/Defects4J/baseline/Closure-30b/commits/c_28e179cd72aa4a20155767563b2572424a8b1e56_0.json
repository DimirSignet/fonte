{"sha": "28e179cd72aa4a20155767563b2572424a8b1e56", "log": "Fix normalization of var declarations in for-in statements.  R=acleung DELTA=12  (7 added, 0 deleted, 5 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=1311   ", "commit": "\n--- a/src/com/google/javascript/jscomp/Normalize.java\n+++ b/src/com/google/javascript/jscomp/Normalize.java\n               Node first = c.getFirstChild();\n               if (first.getType() == Token.VAR) {\n                 // Transform:\n-                //    for (var a in b) {}\n+                //    for (var a = 1 in b) {}\n                 // to:\n-                //    var a; for (a in b) {};\n-                Node newStatement = first.cloneTree();\n-                Node name = first.removeFirstChild();\n+                //    var a = 1; for (a in b) {};\n+                Node newStatement = first;\n+                // Clone just the node, to remove any initialization.\n+                Node name = newStatement.getFirstChild().cloneNode();\n                 first.getParent().replaceChild(first, name);\n                 insertBeforeParent.addChildBefore(newStatement, insertBefore);\n                 reportCodeChange(\"FOR-IN var declaration\");\n--- a/test/com/google/javascript/jscomp/NormalizeTest.java\n+++ b/test/com/google/javascript/jscomp/NormalizeTest.java\n          \"init(); for(; a < 2 ; a++) foo()\");\n   }\n \n-  public void testForIn() {\n+  public void testForIn1() {\n     // Verify nothing happens with simple for-in\n     testSame(\"for(a in b) foo();\");\n \n     // Verify block are properly introduced for ifs.\n     test(\"if (x) for(var a in b) foo()\",\n          \"if (x) { var a; for(a in b) foo() }\");\n+  }\n+\n+  public void testForIn2() {\n+    // Verify vars are extracted from the FOR-IN node.\n+    test(\"for(var a = foo() in b) foo()\",\n+         \"var a = foo(); for(a in b) foo()\");\n   }\n \n   public void testWhile() {", "timestamp": 1302304064, "metainfo": ""}