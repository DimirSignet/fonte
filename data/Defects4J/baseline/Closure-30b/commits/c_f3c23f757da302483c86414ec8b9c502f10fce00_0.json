{"sha": "f3c23f757da302483c86414ec8b9c502f10fce00", "log": "Reapply second run of smart name removal after smart name removal fixes.  Original change: -Run SmartNameRemoval a second time, after the optimization loop. -This causes goog.events to be compiled down to nothing when compiled on its own.  R=nicksantos DELTA=24  (24 added, 0 deleted, 0 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=720   ", "commit": "\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n       }\n     }\n \n+    // Running this pass again is required to have goog.events compile down to\n+    // nothing when compiled on its own.\n+    if (options.smartNameRemoval) {\n+      passes.add(smartNamePass2);\n+    }\n+\n     if (options.collapseAnonymousFunctions) {\n       passes.add(collapseAnonymousFunctions);\n     }\n     }\n   };\n \n+  /**\n+   * Process smart name processing - removes unused classes and does referencing\n+   * starting with minimum set of names.\n+   */\n+  private final PassFactory smartNamePass2 =\n+      new PassFactory(\"smartNamePass\", true) {\n+    @Override\n+    protected CompilerPass createInternal(final AbstractCompiler compiler) {\n+      return new CompilerPass() {\n+        @Override\n+        public void process(Node externs, Node root) {\n+          NameAnalyzer na = new NameAnalyzer(compiler, false);\n+          na.process(externs, root);\n+          na.removeUnreferenced();\n+        }\n+      };\n+    }\n+  };\n \n   /** Inlines simple methods, like getters */\n   private PassFactory inlineSimpleMethods =", "timestamp": 1299103937, "metainfo": ""}