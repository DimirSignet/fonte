{"sha": "1342c44961bd9f2853dd9be3f3225d9ec63d3e8f", "log": "Pick up missed IF -> &&  R=johnlenz DELTA=5  (4 added, 0 deleted, 1 changed)   Revision created by MOE tool push_codebase. MOE_MIGRATION=3752   ", "commit": "\n--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\n     if (elseBranch == null) {\n       if (isFoldableExpressBlock(thenBranch)) {\n         Node expr = getBlockExpression(thenBranch);\n-        if (isPropertyAssignmentInExpression(expr)) {\n+        if (!late && isPropertyAssignmentInExpression(expr)) {\n           // Keep opportunities for CollapseProperties such as\n           // a.longIdentifier || a.longIdentifier = ... -> var a = ...;\n+          // until CollapseProperties has been run.\n           return n;\n         }\n \n--- a/test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java\n+++ b/test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java\n \n   /** Check that removing blocks with 1 child works */\n   public void testFoldOneChildBlocks() {\n+    late = false;\n     fold(\"function f(){if(x)a();x=3}\",\n         \"function f(){x&&a();x=3}\");\n     fold(\"function f(){if(x){a()}x=3}\",\n \n   public void testAndParenthesesCount() {\n     fold(\"function f(){if(x||y)a.foo()}\", \"function f(){(x||y)&&a.foo()}\");\n+    fold(\"function f(){if(x.a)x.a=0}\",\n+         \"function f(){x.a&&(x.a=0)}\");\n     foldSame(\"function f(){if(x()||y()){x()||y()}}\");\n   }\n ", "timestamp": 1321495029, "metainfo": ""}